Found 11803 times in 1774 repos.

====================================
https://github.com/Tangshitao/NeuMap
====================================

Found 4 times
DataLoader(self.train_dataset, sampler=sampler, **self.train_loader_params)
DataLoader(self.val_dataset, sampler=sampler, **self.val_loader_params)
DataLoader(dataset, sampler=sampler, **self.val_loader_params)
DataLoader(self.test_dataset, sampler=sampler, **self.test_loader_params)
https://github.com/Tangshitao/NeuMap/blob/2b8e07b41cfe236d79f9629c1bafb4f661609ccd/src/lightning/data.py#L242
https://github.com/Tangshitao/NeuMap/blob/2b8e07b41cfe236d79f9629c1bafb4f661609ccd/src/lightning/data.py#L251
https://github.com/Tangshitao/NeuMap/blob/2b8e07b41cfe236d79f9629c1bafb4f661609ccd/src/lightning/data.py#L256
https://github.com/Tangshitao/NeuMap/blob/2b8e07b41cfe236d79f9629c1bafb4f661609ccd/src/lightning/data.py#L262

===========================================
https://github.com/NVlabs/ConformalKeypoint
===========================================

Found 2 times
DataLoader(self.test_ds, batch_size=self.options.test_batch_size,
                                      num_workers=self.options.num_workers,
                                      pin_memory=self.options.pin_memory,
                                      shuffle=self.options.shuffle_test,
                                      collate_fn=self.collate_fn)
DataLoader(self.test_ds, batch_size=self.options.test_batch_size,
                                      num_workers=self.options.num_workers,
                                      pin_memory=self.options.pin_memory,
                                      shuffle=self.options.shuffle_test)
https://github.com/NVlabs/ConformalKeypoint/blob/427d71bd7fb40686b345c1e780250728266f2944/keypoint/train/detection_trainer.py#L102
https://github.com/NVlabs/ConformalKeypoint/blob/427d71bd7fb40686b345c1e780250728266f2944/keypoint/train/keypoint_trainer.py#L100

======================================
https://github.com/yunfan1202/NEF_code
======================================

Found 2 times
DataLoader(self.train_dataset,
                          shuffle=True,
                          num_workers=4,
                          batch_size=self.hparams.batch_size,
                          pin_memory=True)
DataLoader(self.val_dataset,
                          shuffle=False,
                          num_workers=4,
                          batch_size=1,     # validate one image (H*W rays) at a time
                          pin_memory=True)
https://github.com/yunfan1202/NEF_code/blob/4c282e953abf9768b8d92dbd5eb7ec123c57cd34/train.py#L105
https://github.com/yunfan1202/NEF_code/blob/4c282e953abf9768b8d92dbd5eb7ec123c57cd34/train.py#L112

=====================================
https://github.com/TimoBolkart/TEMPEH
=====================================

Found 2 times
torch.utils.data.DataLoader(dataset, batch_size=self.args.batch_size, shuffle=shuffle, drop_last=False,
                                            worker_init_fn=self.worker_init_fn, **kwargs)
torch.utils.data.DataLoader(dataset, batch_size=self.args.batch_size, shuffle=shuffle, drop_last=True,
                                            worker_init_fn=self.worker_init_fn, **kwargs)
https://github.com/TimoBolkart/TEMPEH/blob/90cc1e5c2a3d5866efb22e7a05d36295869acae6/tester/base_tester.py#L107
https://github.com/TimoBolkart/TEMPEH/blob/90cc1e5c2a3d5866efb22e7a05d36295869acae6/trainer/base_trainer.py#L129

================================
https://github.com/xucao-42/mvas
================================

Found 2 times
DataLoader(dataset, batch_size=batch_size, shuffle=True, pin_memory=True)
DataLoader(dataset, batch_size=batch_size, shuffle=True, pin_memory=True)
https://github.com/xucao-42/mvas/blob/65ca4c66b9648b9597209d7196012723fa6ffbab/code/exp_runner.py#L32
https://github.com/xucao-42/mvas/blob/65ca4c66b9648b9597209d7196012723fa6ffbab/code/exp_runner.py#L92

================================
https://github.com/gangweiX/IGEV
================================

Found 4 times
DataLoader(test_dataset, args.batch_size, shuffle=False, num_workers=4, drop_last=False)
DataLoader(train_dataset, args.batch_size, shuffle=True, num_workers=4, drop_last=True)
DataLoader(test_dataset, args.batch_size, shuffle=False, num_workers=4, drop_last=False)
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=True, shuffle=True, num_workers=int(os.environ.get('SLURM_CPUS_PER_TASK', 6))-2, drop_last=True)
https://github.com/gangweiX/IGEV/blob/60a0f9c66d03657d45893e8c938b6a7819a30b51/IGEV-MVS/evaluate_mvs.py#L119
https://github.com/gangweiX/IGEV/blob/60a0f9c66d03657d45893e8c938b6a7819a30b51/IGEV-MVS/train_mvs.py#L123
https://github.com/gangweiX/IGEV/blob/60a0f9c66d03657d45893e8c938b6a7819a30b51/IGEV-MVS/train_mvs.py#L124
https://github.com/gangweiX/IGEV/blob/60a0f9c66d03657d45893e8c938b6a7819a30b51/IGEV-Stereo/core/stereo_datasets.py#L326

=================================
https://github.com/BoifZ/VDN-NeRF
=================================

Found 4 times
DataLoader(transformed_training, batch_size, shuffle=True, num_workers=num_workers)
DataLoader(transformed_testing, batch_size, shuffle=False, num_workers=num_workers)
DataLoader(transformed_training, batch_size, shuffle=True, num_workers=num_workers)
DataLoader(transformed_testing, batch_size, shuffle=False, num_workers=num_workers)
https://github.com/BoifZ/VDN-NeRF/blob/189e15d8d5e3ea3112697e5feff06938c651c6da/wavelet/data.py#L296
https://github.com/BoifZ/VDN-NeRF/blob/189e15d8d5e3ea3112697e5feff06938c651c6da/wavelet/data.py#L297
https://github.com/BoifZ/VDN-NeRF/blob/189e15d8d5e3ea3112697e5feff06938c651c6da/wavelet/data.py#L374
https://github.com/BoifZ/VDN-NeRF/blob/189e15d8d5e3ea3112697e5feff06938c651c6da/wavelet/data.py#L375

======================================
https://github.com/nvlabs/neuralangelo
======================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=1,
        shuffle=False,
        sampler=sampler,
        pin_memory=True,
        num_workers=num_workers,
        drop_last=False
    )
https://github.com/nvlabs/neuralangelo/blob/94390b64683c067c620d9e075224ccfe582647d0/projects/neuralangelo/utils/mesh.py#L108

=================================
https://github.com/LeoQLi/SHS-Net
=================================

Found 2 times
torch.utils.data.DataLoader(
            test_set,
            sampler=SequentialPointcloudPatchSampler(test_set),
            batch_size=args.batch_size,
            num_workers=args.num_workers,
        )
torch.utils.data.DataLoader(
            train_set,
            sampler=train_datasampler,
            batch_size=args.batch_size,
            num_workers=int(args.num_workers),
            pin_memory=True,
            worker_init_fn=worker_init_fn,
            generator=g,
        )
https://github.com/LeoQLi/SHS-Net/blob/67726811247f946e0825c86cb49b7e2b0ce97643/test.py#L52
https://github.com/LeoQLi/SHS-Net/blob/67726811247f946e0825c86cb49b7e2b0ce97643/train.py#L67

=============================================================
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast
=============================================================

Found 19 times
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            collate_fn=dataset.collate_fn,
            shuffle=shuffle,
            sampler=sampler,
            drop_last=True,
            pin_memory=True)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            collate_fn=dataset.collate_fn,
            shuffle=False,
            sampler=sampler,
            drop_last=False,
            pin_memory=True)
torch.utils.data.DataLoader(test_data,
                                               batch_size=args["test_batch_size"],
                                               shuffle=False,
                                               num_workers=8,
                                               collate_fn=my_collate_s,
                                               pin_memory=True,
                                               drop_last=False)
torch.utils.data.DataLoader(train_data,
                                               batch_size=args["train_batch_size"],
                                               shuffle=True,
                                               num_workers=args["train_workers"],
                                               collate_fn=my_collate_s,
                                               #pin_memory=True,
                                               drop_last=True)
DataLoader(
        data,
        batch_size=1,
        shuffle=False,
        num_workers=config.num_workers,
        collate_fn=collate_fn,
    )
DataLoader(
        data,
        batch_size=1,
        shuffle=False,
        num_workers=config.num_workers,
        collate_fn=collate_fn,
    )
DataLoader(
        train_data,
        batch_size=config.batch_size,
        shuffle=True,
        num_workers=config.num_workers,
        drop_last=True if config.batch_size > 1 else False,
        collate_fn=collate_fn,
    )
DataLoader(
            val_data,
            batch_size=1,
            shuffle=False,
            num_workers=config.num_workers,
            collate_fn=collate_fn,
        )
DataLoader(
        dataset=dataset,
        num_workers=num_dataloader_workers,
        pin_memory=pin_memory,
        shuffle=False,
        batch_size=dataset_config["BATCHSIZE_PER_REPLICA"],
        collate_fn=collate_function,
        sampler=data_sampler,
        drop_last=dataset_config["DROP_LAST"],
    )
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
DataLoader(test_dataset,
                                 batch_size=1,
                                 sampler=test_sampler,
                                 collate_fn=collate_fn,
                                 num_workers=config.input_threads,
                                 pin_memory=True)
DataLoader(training_dataset,
                                 batch_size=1,
                                 sampler=training_sampler,
                                 collate_fn=ModelNet40Collate,
                                 num_workers=config.input_threads,
                                 pin_memory=True)
DataLoader(test_dataset,
                             batch_size=1,
                             sampler=test_sampler,
                             collate_fn=ModelNet40Collate,
                             num_workers=config.input_threads,
                             pin_memory=True)
DataLoader(training_dataset,
                                 batch_size=1,
                                 sampler=training_sampler,
                                 collate_fn=S3DISCollate,
                                 num_workers=config.input_threads,
                                 pin_memory=True)
DataLoader(test_dataset,
                             batch_size=1,
                             sampler=test_sampler,
                             collate_fn=S3DISCollate,
                             num_workers=config.input_threads,
                             pin_memory=True)
DataLoader(training_dataset,
                                 batch_size=1,
                                 sampler=training_sampler,
                                 collate_fn=SemanticKittiCollate,
                                 num_workers=config.input_threads,
                                 pin_memory=True)
DataLoader(test_dataset,
                             batch_size=1,
                             sampler=test_sampler,
                             collate_fn=SemanticKittiCollate,
                             num_workers=config.input_threads,
                             pin_memory=True)
DataLoader(test_dataset,
                             batch_size=1,
                             sampler=test_sampler,
                             collate_fn=collate_fn,
                             num_workers=config.input_threads,
                             pin_memory=True)
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/Compare_Ins_SG/softgroup/data/__init__.py#L35
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/Compare_Ins_SG/softgroup/data/__init__.py#L46
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/Descriptors/SuperPoint_Network/tool/test.py#L156
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/Descriptors/SuperPoint_Network/tool/train.py#L201
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/Descriptors/action_boudaries_overseg/evaluate.py#L77
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/Descriptors/action_boudaries_overseg/save_pred.py#L126
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/Descriptors/action_boudaries_overseg/train.py#L80
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/Descriptors/action_boudaries_overseg/train.py#L100
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/Downstreams/datasets/__init__.py#L52
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/Downstreams/third_party/OpenPCDet/pcdet/datasets/__init__.py#L64
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/FAC_Conv/test_models.py#L215
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/FAC_Conv/train_ModelNet40.py#L255
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/FAC_Conv/train_ModelNet40.py#L261
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/FAC_Conv/train_S3DIS.py#L264
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/FAC_Conv/train_S3DIS.py#L270
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/FAC_Conv/train_SemanticKitti.py#L273
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/FAC_Conv/train_SemanticKitti.py#L279
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/FAC_Conv/visualize_deformations.py#L170
https://github.com/KangchengLiu/FAC_Foreground_Aware_Contrast/blob/d7fce640db4e9fd21c21ad73da961c02fd7e39a7/OpenPCDet/pcdet/datasets/__init__.py#L86

================================
https://github.com/nv-tlabs/nksr
================================

Found 3 times
DataLoader(train_set, batch_size=self.hparams.batch_size // self.trainer.world_size, shuffle=True,
                          num_workers=self.hparams.train_val_num_workers, collate_fn=self.get_collate_fn())
DataLoader(val_set, batch_size=self.hparams.batch_size // self.trainer.world_size, shuffle=False,
                          num_workers=self.hparams.train_val_num_workers, collate_fn=self.get_collate_fn())
DataLoader(test_set, batch_size=self.hparams.batch_size // self.trainer.world_size,
                          shuffle=self.hparams.test_set_shuffle,
                          num_workers=self.hparams.test_num_workers, collate_fn=self.get_collate_fn())
https://github.com/nv-tlabs/nksr/blob/0d4e369b1ee641204d6e6d2b53c692fed6273ca5/models/base_model.py#L487
https://github.com/nv-tlabs/nksr/blob/0d4e369b1ee641204d6e6d2b53c692fed6273ca5/models/base_model.py#L494
https://github.com/nv-tlabs/nksr/blob/0d4e369b1ee641204d6e6d2b53c692fed6273ca5/models/base_model.py#L503

=============================
https://github.com/zju3dv/pvo
=============================

Found 22 times
DataLoader(
        db, batch_size=args.batch, sampler=train_sampler, num_workers=2)
DataLoader(db, shuffle=False, batch_size=1, num_workers=4)
DataLoader(db, shuffle=False, batch_size=1, num_workers=4)
DataLoader(db, shuffle=False, batch_size=1, num_workers=4)
DataLoader(db, shuffle=False, batch_size=1, num_workers=4)
DataLoader(db, batch_size=1, num_workers=2)
DataLoader(db, shuffle=False, batch_size=1, num_workers=4)
DataLoader(db, batch_size=1, shuffle=False, num_workers=4)
DataLoader(db, batch_size=args.batch, shuffle=True, num_workers=4)
DataLoader(db, batch_size=1, shuffle=True, num_workers=0)
DataLoader(db, batch_size=args.batch, shuffle=True, num_workers=4)
DataLoader(db, batch_size=1, num_workers=2)
DataLoader(db, batch_size=1, num_workers=2)
DataLoader(db, batch_size=1, num_workers=2)
torch.utils.data.DataLoader(
        dataset,
        sampler=(TrainingSampler if training else InferenceSampler)(len(dataset)),
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
    )
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
torch.utils.data.DataLoader(
        dataset,  # pyre-ignore[6]
        batch_size=dataset_cfg.IMAGE_LOADER.BATCH_SIZE,
        sampler=training_sampler,
        num_workers=dataset_cfg.IMAGE_LOADER.NUM_WORKERS,
        collate_fn=trivial_batch_collator,
        worker_init_fn=worker_init_reset_seed,
    )
data.DataLoader(dataset, num_workers=0, collate_fn=operator.itemgetter(0))
data.DataLoader(
            dataset,
            num_workers=2,
            collate_fn=operator.itemgetter(0),
            worker_init_fn=worker_init_reset_seed,
            # reset seed should not affect behavior of TrainingSampler
        )
DataLoader(db, batch_size=1, num_workers=2)
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/train.py#L90
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/droid_slam/data_readers/factory.py#L62
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/droid_slam/data_readers/factory.py#L71
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/droid_slam/data_readers/factory.py#L79
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/droid_slam/data_readers/factory.py#L87
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/evaluation_scripts/test_vo2.py#L74
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/thirdparty/lietorch/examples/core/data_readers/factory.py#L55
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/thirdparty/lietorch/examples/registration/main.py#L47
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/thirdparty/lietorch/examples/registration/main.py#L117
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/thirdparty/lietorch/examples/rgbdslam/reprojection_test.py#L26
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/thirdparty/lietorch/examples/rgbdslam/train.py#L44
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/tools/vis.py#L235
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/tools/vis_2.py#L432
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VO_Module/tools/vis_ori.py#L169
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VPS_Module/configs/Misc/torchvision_imagenet_R_50.py#L41
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VPS_Module/detectron2/data/build.py#L315
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VPS_Module/detectron2/data/build.py#L326
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VPS_Module/detectron2/data/build.py#L523
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VPS_Module/projects/DensePose/densepose/data/build.py#L659
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VPS_Module/tests/data/test_sampler.py#L47
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VPS_Module/tests/data/test_sampler.py#L52
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/tools/datasets/generate_dynamic_masks.py#L24

=================================
https://github.com/skyhehe123/MSF
=================================

Found 1 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0, worker_init_fn=partial(common_utils.worker_init_fn, seed=seed)
    )
https://github.com/skyhehe123/MSF/blob/60735d2fe8c9e34bc22ee5d149f49fb43295a3b2/pcdet/datasets/__init__.py#L72

================================
https://github.com/haoyu94/RoITr
================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        shuffle=shuffle if sampler is None else False,
        num_workers=num_workers,
        collate_fn=partial(collate_fn, config=dataset.config),
        drop_last=drop_last
    )
https://github.com/haoyu94/RoITr/blob/393539d6709c55b2465231cccb7b951f736a5c72/dataset/dataloader.py#L42

=======================================
https://github.com/ZrrSkywalker/I2P-MAE
=======================================

Found 4 times
torch.utils.data.DataLoader(dataset, batch_size = config.others.bs,
                                            num_workers = int(args.num_workers),
                                            drop_last = config.others.subset == 'train',
                                            worker_init_fn = worker_init_fn,
                                            sampler = sampler)
torch.utils.data.DataLoader(dataset, batch_size=config.others.bs,
                                                shuffle = shuffle, 
                                                drop_last = config.others.subset == 'train',
                                                num_workers = int(args.num_workers),
                                                worker_init_fn=worker_init_fn)
DataLoader(build_dataset_from_cfg(config.train._base_, config.train.others), num_workers=8, batch_size=128, shuffle=True)
DataLoader(build_dataset_from_cfg(config.test._base_, config.test.others), num_workers=8, batch_size=128, shuffle=True)
https://github.com/ZrrSkywalker/I2P-MAE/blob/7d4e519d34d9a84efdaf3420c3797ecb4e9f1d7f/tools/builder.py#L25
https://github.com/ZrrSkywalker/I2P-MAE/blob/7d4e519d34d9a84efdaf3420c3797ecb4e9f1d7f/tools/builder.py#L32
https://github.com/ZrrSkywalker/I2P-MAE/blob/7d4e519d34d9a84efdaf3420c3797ecb4e9f1d7f/tools/builder.py#L40
https://github.com/ZrrSkywalker/I2P-MAE/blob/7d4e519d34d9a84efdaf3420c3797ecb4e9f1d7f/tools/builder.py#L41

==================================
https://github.com/xinliu29/NCMNet
==================================

Found 3 times
torch.utils.data.DataLoader(
                train_dataset, batch_size=config.train_batch_size, shuffle=True,
                num_workers=16, pin_memory=False, collate_fn=collate_fn)
torch.utils.data.DataLoader(
                valid_dataset, batch_size=config.train_batch_size, shuffle=False,
                num_workers=8, pin_memory=False, collate_fn=collate_fn)
torch.utils.data.DataLoader(
                test_dataset, batch_size=1, shuffle=False,
                num_workers=8, pin_memory=False, collate_fn=collate_fn)
https://github.com/xinliu29/NCMNet/blob/f7e7e806a9312da568bc5bf784c6e0d73884dd74/code/main.py#L48
https://github.com/xinliu29/NCMNet/blob/f7e7e806a9312da568bc5bf784c6e0d73884dd74/code/main.py#L53
https://github.com/xinliu29/NCMNet/blob/f7e7e806a9312da568bc5bf784c6e0d73884dd74/code/main.py#L62

===============================
https://github.com/CVMI-Lab/PLA
===============================

Found 1 times
loader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, drop_last=training, sampler=sampler,
        collate_fn=getattr(dataset, dataset_cfg.COLLATE_FN),
        timeout=0, worker_init_fn=partial(common_utils.worker_init_fn, seed=seed)
    )
https://github.com/CVMI-Lab/PLA/blob/dd1f69e5e19440328b65ec7429e36a075943a1b7/pcseg/datasets/__init__.py#L74

===================================================
https://github.com/henry123-boy/Level-S2FM_official
===================================================

Found 1 times
torch.utils.data.DataLoader(self,
            batch_size=opt.batch_size or 1,
            num_workers=opt.data.num_workers,
            shuffle=shuffle,
            drop_last=drop_last,
            pin_memory=False, # spews warnings in PyTorch 1.9 but should be True in general
        )
https://github.com/henry123-boy/Level-S2FM_official/blob/ca1689e245090181025080809d8e133c8ea2d7d4/data/base.py#L32

====================================
https://github.com/yushuang-wu/SCoDA
====================================

Found 6 times
DataLoader(ScodaTrainDataset(self.train_sp_sup,
                                            self.train_sc_sup,
                                            self.train_sc_unsup),
                          batch_size=None)
DataLoader(ScodaValDataset(self.val_sc_sup), batch_size=None)
torch.utils.data.DataLoader(
                self, batch_size=self.batch_size, 
                num_workers=self.num_workers, shuffle=shuffle,
                worker_init_fn=self.worker_init_fn)
torch.utils.data.DataLoader(
                self, batch_size=self.batch_size, 
                num_workers=self.num_workers, shuffle=shuffle,
                worker_init_fn=self.worker_init_fn)
torch.utils.data.DataLoader(
                self, batch_size=self.batch_size, 
                num_workers=self.num_workers, shuffle=shuffle,
                worker_init_fn=self.worker_init_fn)
torch.utils.data.DataLoader(
                self, batch_size=self.batch_size, 
                num_workers=self.num_workers, shuffle=shuffle,
                worker_init_fn=self.worker_init_fn)
https://github.com/yushuang-wu/SCoDA/blob/baa92a78dc1d6dff4bdb87e394554d0a9bb8fa6c/train_ddp.py#L217
https://github.com/yushuang-wu/SCoDA/blob/baa92a78dc1d6dff4bdb87e394554d0a9bb8fa6c/train_ddp.py#L223
https://github.com/yushuang-wu/SCoDA/blob/baa92a78dc1d6dff4bdb87e394554d0a9bb8fa6c/models/data/data_region_ddp.py#L143
https://github.com/yushuang-wu/SCoDA/blob/baa92a78dc1d6dff4bdb87e394554d0a9bb8fa6c/models/data/data_region_ddp.py#L151
https://github.com/yushuang-wu/SCoDA/blob/baa92a78dc1d6dff4bdb87e394554d0a9bb8fa6c/models/data/data_region_ddp.py#L312
https://github.com/yushuang-wu/SCoDA/blob/baa92a78dc1d6dff4bdb87e394554d0a9bb8fa6c/models/data/data_region_ddp.py#L320

==============================
https://github.com/hturki/suds
==============================

Found 4 times
DataLoader(self.train_batch_dataset, batch_size=batch_size,
                                                     sampler=self.train_sampler, num_workers=0, pin_memory=True)
DataLoader(self.train_batch_dataset, batch_size=batch_size, shuffle=True,
                                                     num_workers=0, pin_memory=True)
DataLoader(self.eval_batch_dataset, batch_size=batch_size,
                                                    sampler=self.eval_sampler,
                                                    num_workers=0, pin_memory=True)
DataLoader(self.eval_batch_dataset, batch_size=batch_size,
                                                    shuffle=True, num_workers=0, pin_memory=True)
https://github.com/hturki/suds/blob/9b472ad5e4fd4d810682af984ef65bfaf4d75188/suds/data/suds_datamanager.py#L237
https://github.com/hturki/suds/blob/9b472ad5e4fd4d810682af984ef65bfaf4d75188/suds/data/suds_datamanager.py#L240
https://github.com/hturki/suds/blob/9b472ad5e4fd4d810682af984ef65bfaf4d75188/suds/data/suds_datamanager.py#L250
https://github.com/hturki/suds/blob/9b472ad5e4fd4d810682af984ef65bfaf4d75188/suds/data/suds_datamanager.py#L254

====================================================================
https://github.com/ByeongjooAhn/neural_kaleidoscopic_space_sculpting
====================================================================

Found 3 times
torch.utils.data.DataLoader(eval_dataset,
                                                      batch_size=1,
                                                      shuffle=False,
                                                      collate_fn=eval_dataset.collate_fn
                                                      )
torch.utils.data.DataLoader(self.train_dataset,
                                                            batch_size=self.batch_size,
                                                            shuffle=True,
                                                            collate_fn=self.train_dataset.collate_fn
                                                            )
torch.utils.data.DataLoader(self.train_dataset,
                                                           batch_size=self.conf.get_int('plot.plot_nimgs'),
                                                           shuffle=True,
                                                           collate_fn=self.train_dataset.collate_fn
                                                           )
https://github.com/ByeongjooAhn/neural_kaleidoscopic_space_sculpting/blob/a14445d39df245cbf9a227880eac4dfc8ef962b9/code/evaluation/eval.py#L67
https://github.com/ByeongjooAhn/neural_kaleidoscopic_space_sculpting/blob/a14445d39df245cbf9a227880eac4dfc8ef962b9/code/training/idr_train.py#L91
https://github.com/ByeongjooAhn/neural_kaleidoscopic_space_sculpting/blob/a14445d39df245cbf9a227880eac4dfc8ef962b9/code/training/idr_train.py#L96

========================================
https://github.com/xiaoaoran/SemanticSTF
========================================

Found 3 times
torch.utils.data.DataLoader(
            dataset[split],
            batch_size=configs.batch_size if split == 'train' else 1,
            sampler=sampler,
            num_workers=configs.workers_per_gpu,
            pin_memory=True,
            collate_fn=dataset[split].collate_fn)
torch.utils.data.DataLoader(
            dataset[split],
            batch_size=configs.batch_size if split == 'train' else 1,
            sampler=sampler,
            num_workers=configs.workers_per_gpu,
            pin_memory=True,
            collate_fn=dataset[split].collate_fn)
torch.utils.data.DataLoader(
            dataset[split],
            batch_size=configs.batch_size,
            sampler=sampler,
            num_workers=configs.workers_per_gpu,
            pin_memory=True,
            collate_fn=dataset[split].collate_fn)
https://github.com/xiaoaoran/SemanticSTF/blob/77ebee6196b6dcd9a0dce1ebe57f35c9e29c5bb7/PointDR/evaluate.py#L88
https://github.com/xiaoaoran/SemanticSTF/blob/77ebee6196b6dcd9a0dce1ebe57f35c9e29c5bb7/PointDR/evaluate_by_weather.py#L113
https://github.com/xiaoaoran/SemanticSTF/blob/77ebee6196b6dcd9a0dce1ebe57f35c9e29c5bb7/PointDR/train.py#L65

========================================
https://github.com/ZrrSkywalker/Point-NN
========================================

Found 12 times
DataLoader(ScanObjectNN(split=args.split, partition='training', num_points=args.points), 
                                    num_workers=8, batch_size=args.bz, shuffle=False, drop_last=False)
DataLoader(ScanObjectNN(split=args.split, partition='test', num_points=args.points), 
                                    num_workers=8, batch_size=args.bz, shuffle=False, drop_last=False)
DataLoader(ModelNet40(partition='train', num_points=args.points), 
                                    num_workers=8, batch_size=args.bz, shuffle=False, drop_last=False)
DataLoader(ModelNet40(partition='test', num_points=args.points), 
                                    num_workers=8, batch_size=args.bz, shuffle=False, drop_last=False)
DataLoader(PartNormalDataset(npoints=args.points, split='trainval', normalize=False), 
                                num_workers=8, batch_size=args.bz, shuffle=False, drop_last=False)
DataLoader(PartNormalDataset(npoints=args.points, split='test', normalize=False), 
                                num_workers=8, batch_size=args.bz, shuffle=False, drop_last=False)
DataLoader(ModelNet40(partition='train', num_points=args.num_points, type='pn'), num_workers=args.workers,
                              batch_size=args.batch_size, shuffle=True, drop_last=True)
DataLoader(ModelNet40(partition='test', num_points=args.num_points, type='pn'), num_workers=args.workers,
                             batch_size=64, shuffle=False, drop_last=False)
DataLoader(ScanObjectNN(partition='training'), num_workers=args.workers,
                              batch_size=args.batch_size, shuffle=True, drop_last=True, worker_init_fn=worker_init_fn, collate_fn=None, pin_memory=True)
DataLoader(ScanObjectNN(partition='test'), num_workers=args.workers,
                             batch_size=64, shuffle=False, drop_last=False, collate_fn=None, pin_memory=True)
DataLoader(ModelNet40(partition='train', num_points=1024), num_workers=4,
                              batch_size=32, shuffle=True, drop_last=True)
DataLoader(ModelNet40(partition='train', num_points=1024), num_workers=4,
                              batch_size=32, shuffle=True, drop_last=True)
https://github.com/ZrrSkywalker/Point-NN/blob/cf8a08b1afd1ebeeac543bdb4d3d5e346c7b4ffa/run_nn_cls.py#L57
https://github.com/ZrrSkywalker/Point-NN/blob/cf8a08b1afd1ebeeac543bdb4d3d5e346c7b4ffa/run_nn_cls.py#L59
https://github.com/ZrrSkywalker/Point-NN/blob/cf8a08b1afd1ebeeac543bdb4d3d5e346c7b4ffa/run_nn_cls.py#L62
https://github.com/ZrrSkywalker/Point-NN/blob/cf8a08b1afd1ebeeac543bdb4d3d5e346c7b4ffa/run_nn_cls.py#L64
https://github.com/ZrrSkywalker/Point-NN/blob/cf8a08b1afd1ebeeac543bdb4d3d5e346c7b4ffa/run_nn_seg.py#L53
https://github.com/ZrrSkywalker/Point-NN/blob/cf8a08b1afd1ebeeac543bdb4d3d5e346c7b4ffa/run_nn_seg.py#L55
https://github.com/ZrrSkywalker/Point-NN/blob/cf8a08b1afd1ebeeac543bdb4d3d5e346c7b4ffa/run_pn_mn40.py#L110
https://github.com/ZrrSkywalker/Point-NN/blob/cf8a08b1afd1ebeeac543bdb4d3d5e346c7b4ffa/run_pn_mn40.py#L112
https://github.com/ZrrSkywalker/Point-NN/blob/cf8a08b1afd1ebeeac543bdb4d3d5e346c7b4ffa/run_pn_scan.py#L111
https://github.com/ZrrSkywalker/Point-NN/blob/cf8a08b1afd1ebeeac543bdb4d3d5e346c7b4ffa/run_pn_scan.py#L113
https://github.com/ZrrSkywalker/Point-NN/blob/cf8a08b1afd1ebeeac543bdb4d3d5e346c7b4ffa/datasets/data_mn40.py#L101
https://github.com/ZrrSkywalker/Point-NN/blob/cf8a08b1afd1ebeeac543bdb4d3d5e346c7b4ffa/datasets/data_pn_mn40.py#L93

================================================
https://github.com/facebookresearch/robust-dynrf
================================================

Found 1 times
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
https://github.com/facebookresearch/robust-dynrf/blob/c56be705940c488cdfeac73d51c332d75101d60c/scripts/RAFT/datasets.py#L232

========================================
https://github.com/facebookresearch/DVSR
========================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=pin_memory,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        drop_last=drop_last,
        **kwargs)
https://github.com/facebookresearch/DVSR/blob/fe89042c3f7a026974b5a324a901b3d8b0a12358/datasets/builder.py#L118

=====================================
https://github.com/limacv/VideoLoop3D
=====================================

Found 2 times
DataLoader(dataset, 1, shuffle=True)
DataLoader(dataset, 1, shuffle=True)
https://github.com/limacv/VideoLoop3D/blob/615c665a7e3ffaf079c4fb5c9cc596a3bcf4e136/train_3d.py#L273
https://github.com/limacv/VideoLoop3D/blob/615c665a7e3ffaf079c4fb5c9cc596a3bcf4e136/train_3dvid.py#L272

======================================================
https://github.com/megvii-research/CVPR2023-UniDistill
======================================================

Found 3 times
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.batch_size_per_device,
            num_workers=10,
            drop_last=False,
            shuffle=False,
            collate_fn=partial(collate_fn, is_return_depth=False),
            sampler=None,
            pin_memory=False,
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=collate_fn,
            num_workers=10,
            sampler=None,
            pin_memory=False,
        )
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=collate_fn,
            num_workers=10,
            sampler=None,
            pin_memory=False,
        )
https://github.com/megvii-research/CVPR2023-UniDistill/blob/32f02b4304cdf435b83b2265f59fdfed2710c3a5/unidistill/exps/multisensor_fusion/nuscenes/BEVFusion/BEVFusion_nuscenes_base_exp.py#L307
https://github.com/megvii-research/CVPR2023-UniDistill/blob/32f02b4304cdf435b83b2265f59fdfed2710c3a5/unidistill/exps/multisensor_fusion/nuscenes/BEVFusion/BEVFusion_nuscenes_base_exp.py#L324
https://github.com/megvii-research/CVPR2023-UniDistill/blob/32f02b4304cdf435b83b2265f59fdfed2710c3a5/unidistill/exps/multisensor_fusion/nuscenes/BEVFusion/BEVFusion_nuscenes_base_exp.py#L340

===============================
https://github.com/zju3dv/NeuSC
===============================

Found 1 times
DataLoader(dataset,
                            batch_sampler=batch_sampler,
                            num_workers=num_workers,
                            collate_fn=collator,
                            pin_memory=True,
                            worker_init_fn=worker_init_fn)
https://github.com/zju3dv/NeuSC/blob/66e234a0a2cf84adad9c4d0dee657e09ea857ce5/lib/datasets/make_dataset.py#L96

===========================================
https://github.com/zhanghe3z/PaintingNature
===========================================

Found 4 times
DataLoader(dataset,
                          shuffle=False,
                          num_workers=0,
                          batch_size=args.batch_size,
                          pin_memory=False)
DataLoader(self.train_dataset,
                          shuffle=True,
                          num_workers=8,
                          batch_size=self.hparams.batch_size,
                          pin_memory=False)
DataLoader(self.val_dataset,
                          shuffle=False,
                          num_workers=2,
                          # validate one image (H*W rays) at a time
                          batch_size=1,
                          pin_memory=False)
DataLoader(self.test_dataset,
                          shuffle=False,
                          num_workers=0,
                          batch_size=batch_size,
                          pin_memory=False)
https://github.com/zhanghe3z/PaintingNature/blob/7ff6cbfa1b72fc41ff4c57d95ecfece254a37c61/render.py#L222
https://github.com/zhanghe3z/PaintingNature/blob/7ff6cbfa1b72fc41ff4c57d95ecfece254a37c61/models/render_anti.py#L636
https://github.com/zhanghe3z/PaintingNature/blob/7ff6cbfa1b72fc41ff4c57d95ecfece254a37c61/models/render_anti.py#L645
https://github.com/zhanghe3z/PaintingNature/blob/7ff6cbfa1b72fc41ff4c57d95ecfece254a37c61/models/render_anti.py#L830

=======================================
https://github.com/wz7in/CVPR2023-VLSAT
=======================================

Found 2 times
DataLoader(dataset, batch_size=32, shuffle=True, num_workers=4)
DataLoader(dataset, batch_size=32, shuffle=False, num_workers=4)
https://github.com/wz7in/CVPR2023-VLSAT/blob/1e296e01a8680a2d06bd09d1f61730fac0079779/clip_adapter/main.py#L38
https://github.com/wz7in/CVPR2023-VLSAT/blob/1e296e01a8680a2d06bd09d1f61730fac0079779/clip_adapter/main.py#L84

=========================================
https://github.com/GAP-LAB-CUHK-SZ/REC-MV
=========================================

Found 7 times
torch.utils.data.DataLoader(init_fl_datasets, batch_size, sampler=sampler, num_workers=num_workers)
torch.utils.data.DataLoader(init_fl_datasets, batch_size, sampler=sampler, num_workers=num_workers)
torch.utils.data.DataLoader(init_fl_datasets, batch_size, sampler=sampler, num_workers=num_workers)
torch.utils.data.DataLoader(dataset,batch_size,sampler=sampler,num_workers=num_workers)
torch.utils.data.DataLoader(dataset, 8 ,sampler,num_workers=8)
torch.utils.data.DataLoader(dataset, 1 ,sampler,num_workers=8)
torch.utils.data.DataLoader(dataloader.dataset,batch_size,sampler=dataloader.sampler,num_workers=dataloader.num_workers)
https://github.com/GAP-LAB-CUHK-SZ/REC-MV/blob/5898020efc3a7b9fb50c255a59ee638e3b9676e7/dataset/dataset.py#L107
https://github.com/GAP-LAB-CUHK-SZ/REC-MV/blob/5898020efc3a7b9fb50c255a59ee638e3b9676e7/dataset/dataset.py#L538
https://github.com/GAP-LAB-CUHK-SZ/REC-MV/blob/5898020efc3a7b9fb50c255a59ee638e3b9676e7/dataset/dataset.py#L756
https://github.com/GAP-LAB-CUHK-SZ/REC-MV/blob/5898020efc3a7b9fb50c255a59ee638e3b9676e7/dataset/dataset.py#L1182
https://github.com/GAP-LAB-CUHK-SZ/REC-MV/blob/5898020efc3a7b9fb50c255a59ee638e3b9676e7/engineer/core/beta_optimizer.py#L148
https://github.com/GAP-LAB-CUHK-SZ/REC-MV/blob/5898020efc3a7b9fb50c255a59ee638e3b9676e7/engineer/core/beta_optimizer.py#L205
https://github.com/GAP-LAB-CUHK-SZ/REC-MV/blob/5898020efc3a7b9fb50c255a59ee638e3b9676e7/utils/utils.py#L332

=======================================================
https://github.com/princeton-computational-imaging/SoaP
=======================================================

Found 1 times
DataLoader(bundle_dataset, batch_size=1, num_workers=32, shuffle=True)
https://github.com/princeton-computational-imaging/SoaP/blob/d820b75f4ad7ac7251694fdfc08bc8d1bbcf3e34/train.py#L532

=================================
https://github.com/google/dynibar
=================================

Found 3 times
DataLoader(
        test_dataset, batch_size=1, num_workers=12, shuffle=False
    )
DataLoader(test_dataset, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(
      train_dataset,
      batch_size=1,
      worker_init_fn=lambda _: np.random.seed(),
      num_workers=args.workers,
      pin_memory=True,
      sampler=train_sampler,
      shuffle=True if train_sampler is None else False,
  )
https://github.com/google/dynibar/blob/5412b55645fffb2656f6866fb44ce9a92af0c9a4/eval_nvidia.py#L308
https://github.com/google/dynibar/blob/5412b55645fffb2656f6866fb44ce9a92af0c9a4/render_monocular_bt.py#L291
https://github.com/google/dynibar/blob/5412b55645fffb2656f6866fb44ce9a92af0c9a4/train.py#L82

=======================================
https://github.com/feixue94/imp-release
=======================================

Found 4 times
torch.utils.data.DataLoader(train_set,
                                               batch_size=args.batch_size // world_size,
                                               num_workers=args.workers // world_size,
                                               pin_memory=False,
                                               sampler=train_sampler)
torch.utils.data.DataLoader(dataset=mega,
                                         num_workers=0,
                                         shuffle=False,
                                         batch_size=1,
                                         pin_memory=True,
                                         )
Data.DataLoader(dataset=reader, num_workers=4, shuffle=False)
Data.DataLoader(dataset=reader, num_workers=4, shuffle=False)
https://github.com/feixue94/imp-release/blob/f6d18d958eabee0a3835cd80abe54aa30d359c78/train.py#L85
https://github.com/feixue94/imp-release/blob/f6d18d958eabee0a3835cd80abe54aa30d359c78/dump/dump_megadepth.py#L438
https://github.com/feixue94/imp-release/blob/f6d18d958eabee0a3835cd80abe54aa30d359c78/eval/eval_imp.py#L256
https://github.com/feixue94/imp-release/blob/f6d18d958eabee0a3835cd80abe54aa30d359c78/eval/eval_yfcc_full.py#L122

==================================
https://github.com/lly00412/SEDNet
==================================

Found 5 times
DataLoader(train_dataset, args.batch_size, shuffle=True, num_workers=8, drop_last=True)
DataLoader(test_dataset, args.test_batch_size, shuffle=False, num_workers=4, drop_last=False)
DataLoader(test_dataset, 1, shuffle=False, num_workers=4, drop_last=False)
DataLoader(train_dataset, args.batch_size, shuffle=True, num_workers=8, drop_last=True)
DataLoader(test_dataset, args.test_batch_size, shuffle=False, num_workers=4, drop_last=False)
https://github.com/lly00412/SEDNet/blob/504b71438f0b8e6e0f2483dfb63d31e36eb600d8/main.py#L77
https://github.com/lly00412/SEDNet/blob/504b71438f0b8e6e0f2483dfb63d31e36eb600d8/main.py#L78
https://github.com/lly00412/SEDNet/blob/504b71438f0b8e6e0f2483dfb63d31e36eb600d8/save_disp.py#L29
https://github.com/lly00412/SEDNet/blob/504b71438f0b8e6e0f2483dfb63d31e36eb600d8/generate_datas/generate_laf_data.py#L66
https://github.com/lly00412/SEDNet/blob/504b71438f0b8e6e0f2483dfb63d31e36eb600d8/generate_datas/generate_laf_data.py#L67

====================================
https://github.com/PJLab-ADG/LoGoNet
====================================

Found 15 times
DataLoader(
        new_dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/datasets/__init__.py#L75
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_data/test_datasets/test_common.py#L225
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L75
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L87
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L98
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L110
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L114
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L132
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L134
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L156
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L158
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L180
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L202
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L223
https://github.com/PJLab-ADG/LoGoNet/blob/a231f99682d6e8943f660867448fc00a1d3339a9/detection/al3d_det/models/image_modules/swin_model/tests/test_runtime/test_eval_hook.py#L245

============================================
https://github.com/omniobject3d/OmniObject3D
============================================

Found 7 times
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=num_workers)
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=num_workers)
torch.utils.data.DataLoader(
            dataset=training_set, sampler=training_set_sampler, batch_size=batch_size // num_gpus,
            **data_loader_kwargs)
torch.utils.data.DataLoader(train_dataset, batch_size=1,
                                               worker_init_fn=lambda _: np.random.seed(),
                                               num_workers=args.workers,
                                               pin_memory=True,
                                               sampler=train_sampler,
                                               shuffle=True if train_sampler is None else False)
torch.utils.data.DataLoader(val_dataset, batch_size=1,
                                               worker_init_fn=lambda _: np.random.seed(),
                                               num_workers=args.workers,
                                               pin_memory=True,
                                               shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=1,
                                               worker_init_fn=lambda _: np.random.seed(),
                                               num_workers=args.workers,
                                               pin_memory=True,
                                               shuffle=False)
torch.utils.data.DataLoader(test_dataset, batch_size=1,
                                               worker_init_fn=lambda _: np.random.seed(),
                                               num_workers=args.workers,
                                               pin_memory=True,
                                               shuffle=False)
https://github.com/omniobject3d/OmniObject3D/blob/d3dfed12d578946ea39c172b4320fd09b0030813/benchmarks/3d_generation/_get3d/evaluation_scripts/fid_score.py#L136
https://github.com/omniobject3d/OmniObject3D/blob/d3dfed12d578946ea39c172b4320fd09b0030813/benchmarks/3d_generation/_get3d/evaluation_scripts/fidkid-pytorch_foroo3d/fid_score_shapenet.py#L135
https://github.com/omniobject3d/OmniObject3D/blob/d3dfed12d578946ea39c172b4320fd09b0030813/benchmarks/3d_generation/_get3d/training/training_loop_3d.py#L139
https://github.com/omniobject3d/OmniObject3D/blob/d3dfed12d578946ea39c172b4320fd09b0030813/benchmarks/sparse_view_reconstruction/_ibrnet/train.py#L80
https://github.com/omniobject3d/OmniObject3D/blob/d3dfed12d578946ea39c172b4320fd09b0030813/benchmarks/sparse_view_reconstruction/_ibrnet/train.py#L88
https://github.com/omniobject3d/OmniObject3D/blob/d3dfed12d578946ea39c172b4320fd09b0030813/benchmarks/sparse_view_reconstruction/_ibrnet/eval/eval.py#L52
https://github.com/omniobject3d/OmniObject3D/blob/d3dfed12d578946ea39c172b4320fd09b0030813/benchmarks/sparse_view_reconstruction/_ibrnet/eval/eval_testset.py#L52

============================================
https://github.com/ActiveVisionLab/nope-nerf
============================================

Found 1 times
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, num_workers=n_workers, 
        shuffle=shuffle, pin_memory=True
    )
https://github.com/ActiveVisionLab/nope-nerf/blob/47c861f6259fb0f3921be3a19385feebfa769325/dataloading/dataloading.py#L40

==============================================
https://github.com/dvlab-research/SphereFormer
==============================================

Found 4 times
torch.utils.data.DataLoader(train_data, 
        batch_size=args.batch_size, 
        shuffle=(train_sampler is None), 
        num_workers=args.workers,
        pin_memory=True, 
        sampler=train_sampler, 
        drop_last=True, 
        collate_fn=collate_fn
    )
torch.utils.data.DataLoader(val_data, 
            batch_size=args.batch_size_val, 
            shuffle=False, 
            num_workers=args.workers, 
            pin_memory=True, 
            sampler=val_sampler, 
            collate_fn=collation_fn_voxelmean_tta
        )
torch.utils.data.DataLoader(val_data, 
            batch_size=args.batch_size_val, 
            shuffle=False, 
            num_workers=args.workers,
            pin_memory=True, 
            sampler=val_sampler, 
            collate_fn=collation_fn_voxelmean
        )
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0, worker_init_fn=partial(common_utils.worker_init_fn, seed=seed)
    )
https://github.com/dvlab-research/SphereFormer/blob/0ff1e0ae84a4280fbecc9cfc3ac3aec41d24eeba/train.py#L286
https://github.com/dvlab-research/SphereFormer/blob/0ff1e0ae84a4280fbecc9cfc3ac3aec41d24eeba/train.py#L350
https://github.com/dvlab-research/SphereFormer/blob/0ff1e0ae84a4280fbecc9cfc3ac3aec41d24eeba/train.py#L359
https://github.com/dvlab-research/SphereFormer/blob/0ff1e0ae84a4280fbecc9cfc3ac3aec41d24eeba/detection/pcdet/datasets/__init__.py#L73

==================================
https://github.com/zju3dv/mlp_maps
==================================

Found 1 times
torch.utils.data.DataLoader(dataset,
                                              batch_sampler=batch_sampler,
                                              num_workers=num_workers,
                                              collate_fn=collator,
                                              worker_init_fn=worker_init_fn)
https://github.com/zju3dv/mlp_maps/blob/c609a96fbd1ab2c2a3d1e5fb335e670b9f4b6604/lib/datasets/make_dataset.py#L87

==============================================
https://github.com/hikvision-research/3DVision
==============================================

Found 5 times
torch.utils.data.DataLoader(
        test_dataset,
        sampler=test_datasampler,
        batch_size=model_batchSize,
        num_workers=int(opt.workers))
torch.utils.data.DataLoader(
        train_dataset,
        sampler=train_datasampler,
        batch_size=opt.batchSize,
        num_workers=int(opt.workers)
        )
torch.utils.data.DataLoader(
        test_dataset,
        sampler=test_datasampler,
        batch_size=opt.batchSize,
        num_workers=int(opt.workers))
data.DataLoader(dataset, batch_size=16, pin_memory=True, shuffle=True)
data.DataLoader(dataset, batch_size=conf.batch_size, pin_memory=True, num_workers=4, shuffle=True, drop_last=True)
https://github.com/hikvision-research/3DVision/blob/09bba9701da92e43f6d1bb515591d7f9cb91d2ff/Normal-Estimation/ZTEE/test.py#L208
https://github.com/hikvision-research/3DVision/blob/09bba9701da92e43f6d1bb515591d7f9cb91d2ff/Normal-Estimation/ZTEE/train.py#L244
https://github.com/hikvision-research/3DVision/blob/09bba9701da92e43f6d1bb515591d7f9cb91d2ff/Normal-Estimation/ZTEE/train.py#L281
https://github.com/hikvision-research/3DVision/blob/09bba9701da92e43f6d1bb515591d7f9cb91d2ff/PointUpsampling/PUCRN/data.py#L148
https://github.com/hikvision-research/3DVision/blob/09bba9701da92e43f6d1bb515591d7f9cb91d2ff/PointUpsampling/PUCRN/main.py#L98

=============================================
https://github.com/facebookresearch/hyperreel
=============================================

Found 4 times
DataLoader(
                self.train_dataset,
                num_workers=self.cfg.training.num_workers,
                persistent_workers=True,
                sampler=sampler,
                batch_size=self.cur_batch_size,
                pin_memory=True
            )
DataLoader(
                self.train_dataset,
                shuffle=(not self.train_dataset.use_full_image),
                num_workers=self.cfg.training.num_workers,
                persistent_workers=True,
                batch_size=self.cur_batch_size,
                pin_memory=True
            )
DataLoader(
                    dataset,
                    shuffle=False,
                    num_workers=0,
                    persistent_workers=False,
                    batch_size=1,
                    pin_memory=True
                )
DataLoader(
            dataset,
            shuffle=False,
            num_workers=self.cfg.training.num_workers,
            persistent_workers=True,
            batch_size=1,
            pin_memory=True
        )
https://github.com/facebookresearch/hyperreel/blob/20d4befda57611f7a3ab6e4e286a14feab30085d/nlf/__init__.py#L230
https://github.com/facebookresearch/hyperreel/blob/20d4befda57611f7a3ab6e4e286a14feab30085d/nlf/__init__.py#L239
https://github.com/facebookresearch/hyperreel/blob/20d4befda57611f7a3ab6e4e286a14feab30085d/nlf/__init__.py#L255
https://github.com/facebookresearch/hyperreel/blob/20d4befda57611f7a3ab6e4e286a14feab30085d/nlf/__init__.py#L268

================================
https://github.com/mikacuy/scade
================================

Found 9 times
torch.utils.data.DataLoader(
            dataset=merged_dataset,
            batch_size=opt.batchsize,
            num_workers=opt.thread,
            sampler=custom_multi_sampler_dist,
            drop_last=True)
torch.utils.data.DataLoader(
    dataset=dataset,
    batch_size=1,
    num_workers=0,
    shuffle=False)
torch.utils.data.DataLoader(
    dataset=dataset,
    batch_size=1,
    num_workers=0,
    shuffle=False)
torch.utils.data.DataLoader(
    dataset=LRUCache(train_dataset, n=FLAGS.num_lru),
    batch_size=FLAGS.batchsize*8,
    num_workers=FLAGS.thread,
    shuffle=False)
torch.utils.data.DataLoader(
            dataset=LRUCache(dataset_subset, n=FLAGS.num_lru),
            batch_size=FLAGS.batchsize*8,
            num_workers=FLAGS.thread,
            shuffle=False)
torch.utils.data.DataLoader(
        dataset=LRUCache(comb_dataset, n=FLAGS.num_lru),
        batch_size=FLAGS.batchsize,
        num_workers=FLAGS.thread,
        shuffle=False, pin_memory=True)
torch.utils.data.DataLoader(
    dataset=train_dataset,
    batch_size=1,
    num_workers=FLAGS.thread,
    shuffle=False)
torch.utils.data.DataLoader(
            dataset=dataset_subset,
            batch_size=1,
            num_workers=FLAGS.thread,
            shuffle=False)
torch.utils.data.DataLoader(
        dataset=comb_dataset,
        batch_size=FLAGS.batchsize,
        num_workers=FLAGS.thread-1,
        shuffle=False, pin_memory=True)
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/ambiguity_aware_prior/data/load_dataset_distributed.py#L50
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/ambiguity_aware_prior/tools/output_depth_hypothesis_scannet.py#L386
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/ambiguity_aware_prior/tools/output_depth_hypothesis_wild.py#L389
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/ambiguity_aware_prior/tools/train_dataparallel.py#L318
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/ambiguity_aware_prior/tools/train_dataparallel.py#L360
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/ambiguity_aware_prior/tools/train_dataparallel.py#L546
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/ambiguity_aware_prior/tools/train_single.py#L265
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/ambiguity_aware_prior/tools/train_single.py#L292
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/ambiguity_aware_prior/tools/train_single.py#L509

============================================
https://github.com/nihalsid/panoptic-lifting
============================================

Found 5 times
DataLoader(trajectory_set, shuffle=False, num_workers=0, batch_size=1)
DataLoader(self.train_set, self.config.batch_size, shuffle=True, pin_memory=True, drop_last=True, num_workers=self.config.num_workers)
DataLoader(train_instance_set, self.config.batch_size_contrastive, shuffle=True, drop_last=True, collate_fn=train_instance_set.collate_fn, num_workers=0)
DataLoader(self.train_segment_set, self.config.batch_size_segments, shuffle=False, drop_last=True, collate_fn=self.train_segment_set.collate_fn, num_workers=0)
DataLoader(self.val_set, batch_size=1, shuffle=False, drop_last=False, num_workers=0)
https://github.com/nihalsid/panoptic-lifting/blob/b8ad4f5941ed0158f365d2c19facc86fbae2061e/inference/render_panopli.py#L34
https://github.com/nihalsid/panoptic-lifting/blob/b8ad4f5941ed0158f365d2c19facc86fbae2061e/trainer/train_panopli_tensorf.py#L293
https://github.com/nihalsid/panoptic-lifting/blob/b8ad4f5941ed0158f365d2c19facc86fbae2061e/trainer/train_panopli_tensorf.py#L297
https://github.com/nihalsid/panoptic-lifting/blob/b8ad4f5941ed0158f365d2c19facc86fbae2061e/trainer/train_panopli_tensorf.py#L299
https://github.com/nihalsid/panoptic-lifting/blob/b8ad4f5941ed0158f365d2c19facc86fbae2061e/trainer/train_panopli_tensorf.py#L303

======================================
https://github.com/zfkuang/PaletteNeRF
======================================

Found 6 times
DataLoader(list(range(size)), batch_size=1, collate_fn=self.collate, shuffle=self.training, num_workers=0)
DataLoader(list(range(size)), batch_size=1, collate_fn=self.collate, shuffle=self.training, num_workers=0)
data.DataLoader(
        testset,
        batch_size=args.test_batch_size,
        drop_last=False,
        shuffle=False,
        collate_fn=test_batchify_fn,
        **loader_kwargs
    )
data.DataLoader(
            ReturnFirstClosure(trainset),
            root=args.data_path,
            batch_size=args.batch_size,
            drop_last=True,
            shuffle=True,
            **loader_kwargs
        )
torch.utils.data.DataLoader(
            self.trainset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=16,
            worker_init_fn=lambda x: random.seed(time.time() + x),
        )
torch.utils.data.DataLoader(
            self.valset,
            batch_size=self.batch_size,
            shuffle=False,
            num_workers=16,
        )
https://github.com/zfkuang/PaletteNeRF/blob/98e4073115aa1a74b211f9607614dd115d62804f/nerf/provider.py#L336
https://github.com/zfkuang/PaletteNeRF/blob/98e4073115aa1a74b211f9607614dd115d62804f/palette/provider.py#L416
https://github.com/zfkuang/PaletteNeRF/blob/98e4073115aa1a74b211f9607614dd115d62804f/third-party/lang-seg/test_lseg.py#L263
https://github.com/zfkuang/PaletteNeRF/blob/98e4073115aa1a74b211f9607614dd115d62804f/third-party/lang-seg/test_lseg.py#L292
https://github.com/zfkuang/PaletteNeRF/blob/98e4073115aa1a74b211f9607614dd115d62804f/third-party/lang-seg/modules/lsegmentation_module.py#L183
https://github.com/zfkuang/PaletteNeRF/blob/98e4073115aa1a74b211f9607614dd115d62804f/third-party/lang-seg/modules/lsegmentation_module.py#L192

==============================================
https://github.com/redrock303/NeRFLiX_CVPR2023
==============================================

Found 4 times
torch.utils.data.DataLoader(dataset, num_workers=config.DATALOADER.NUM_WORKERS,
                                         batch_sampler=batch_sampler, worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(subset, num_workers=config.VAL.NUM_WORKERS, batch_sampler=batch_sampler)
torch.utils.data.DataLoader(dataset, num_workers=config.DATALOADER.NUM_WORKERS,
                                         batch_sampler=batch_sampler, worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(subset, num_workers=config.VAL.NUM_WORKERS, batch_sampler=batch_sampler)
https://github.com/redrock303/NeRFLiX_CVPR2023/blob/5065c39fc566f71cd305ba21ed18f8641ba16eaf/train/utils/dataloader.py#L34
https://github.com/redrock303/NeRFLiX_CVPR2023/blob/5065c39fc566f71cd305ba21ed18f8641ba16eaf/train/utils/dataloader.py#L51
https://github.com/redrock303/NeRFLiX_CVPR2023/blob/5065c39fc566f71cd305ba21ed18f8641ba16eaf/utils/dataloader.py#L34
https://github.com/redrock303/NeRFLiX_CVPR2023/blob/5065c39fc566f71cd305ba21ed18f8641ba16eaf/utils/dataloader.py#L51

============================================
https://github.com/sen-mao/3di2i-translation
============================================

Found 6 times
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(
                    dataset=copy.deepcopy(self.dataset), sampler=item_subset, batch_size=bsz)
torch.utils.data.DataLoader(
        dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//world_size, **data_loader_kwargs)
torch.utils.data.DataLoader(
            dataset=copy.deepcopy(training_set), sampler=training_set_sampler, batch_size=batch_size//world_size, **data_loader_kwargs)
https://github.com/sen-mao/3di2i-translation/blob/bb870e2215b5a56c94a2cec679c32d62ae90961e/apps/train_encoder.py#L151
https://github.com/sen-mao/3di2i-translation/blob/bb870e2215b5a56c94a2cec679c32d62ae90961e/metrics/metric_utils.py#L236
https://github.com/sen-mao/3di2i-translation/blob/bb870e2215b5a56c94a2cec679c32d62ae90961e/metrics/metric_utils.py#L571
https://github.com/sen-mao/3di2i-translation/blob/bb870e2215b5a56c94a2cec679c32d62ae90961e/training/stylenerf.py#L2447
https://github.com/sen-mao/3di2i-translation/blob/bb870e2215b5a56c94a2cec679c32d62ae90961e/training/training_loop.py#L112
https://github.com/sen-mao/3di2i-translation/blob/bb870e2215b5a56c94a2cec679c32d62ae90961e/training/training_loop.py#L115

===========================================
https://github.com/snap-research/discoscene
===========================================

Found 1 times
DataLoader(dataset=self._dataset,
                                         batch_size=self.batch_size,
                                         sampler=self._sampler,
                                         shuffle=False,
                                         drop_last=self.drop_last_batch,
                                         num_workers=self.num_workers,
                                         pin_memory=self.pin_memory,
                                         prefetch_factor=self.prefetch_factor)
https://github.com/snap-research/discoscene/blob/3b15039f50bc287b2b657d25357f0282da0cc1dc/datasets/data_loaders/iter_data_loader.py#L56

======================================
https://github.com/elliottwu/MagicPony
======================================

Found 2 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=num_workers,
        pin_memory=True
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=num_workers,
        pin_memory=True
    )
https://github.com/elliottwu/MagicPony/blob/7ffc68ec1311bee27aeacff9a301415ce9f236e8/magicpony/dataloaders.py#L240
https://github.com/elliottwu/MagicPony/blob/7ffc68ec1311bee27aeacff9a301415ce9f236e8/magicpony/dataloaders.py#L331

=============================================
https://github.com/zzyunzhi/object-intrinsics
=============================================

Found 3 times
torch.utils.data.DataLoader(
        dataset, batch_size=cfg['training']['batch_size'],  # batch size per gpu
        num_workers=2 if os.getenv('DEBUG') != '1' else 0, shuffle=True if train_sampler is None else False,
        pin_memory=True, drop_last=True,
        sampler=train_sampler,
    )
torch.utils.data.DataLoader(
        dataset, batch_size=cfg['training']['batch_size'],
        num_workers=2 if os.getenv('DEBUG') != '1' else 0, shuffle=False,
        pin_memory=True, drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=shuffle and (sampler is None),
        sampler=sampler,
        pin_memory=True,
        num_workers=num_workers,
        drop_last=False,
        collate_fn=collate_fn,
    )
https://github.com/zzyunzhi/object-intrinsics/blob/24d6016079c9c8f49128fa80c409bf8153cbe8aa/scripts/train.py#L74
https://github.com/zzyunzhi/object-intrinsics/blob/24d6016079c9c8f49128fa80c409bf8153cbe8aa/scripts/train.py#L80
https://github.com/zzyunzhi/object-intrinsics/blob/24d6016079c9c8f49128fa80c409bf8153cbe8aa/tu/ddp.py#L93

=====================================================
https://github.com/satoshi-ikehata/SDM-UniPS-CVPR2023
=====================================================

Found 1 times
torch.utils.data.DataLoader(testdata, batch_size = 1, shuffle=False, num_workers=0, pin_memory=True)
https://github.com/satoshi-ikehata/SDM-UniPS-CVPR2023/blob/96e68f353173c2ae85bfe609e4728a19a2f8c92e/sdm_unips/modules/builder/builder.py#L60

===========================================
https://github.com/zxhuang1698/ShapeClipper
===========================================

Found 1 times
torch.utils.data.DataLoader(self,
            batch_size=batch_size,
            num_workers=opt.data.num_workers,
            shuffle=shuffle if sampler is None else False,
            drop_last=drop_last,
            sampler=sampler
        )
https://github.com/zxhuang1698/ShapeClipper/blob/45649edcc1205294e0c8d6ef40d297236c37daa9/data/base.py#L21

===================================
https://github.com/TingtingLiao/CAR
===================================

Found 1 times
DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=is_train,
            num_workers=self.opt.num_threads,
            pin_memory=True,
            drop_last=is_train,
        )
https://github.com/TingtingLiao/CAR/blob/d60f4a8578c1b77e31697c121ecfe98a6b689ecf/apps/basetrainer.py#L34

==================================
https://github.com/HanzhiC/TexPose
==================================

Found 2 times
torch.utils.data.DataLoader(self,
                                             batch_size=opt.batch_size or 1,
                                             num_workers=opt.data.num_workers,
                                             shuffle=shuffle,
                                             drop_last=drop_last,
                                             pin_memory=False)
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=batch_size,
            shuffle=not serial_batches,
            num_workers=int(nThreads),
        )
https://github.com/HanzhiC/TexPose/blob/c3be8b7744bd0484308a2d7624a0f97fa37d7b52/data/base.py#L34
https://github.com/HanzhiC/TexPose/blob/c3be8b7744bd0484308a2d7624a0f97fa37d7b52/external/PerceptualSimilarity/data/custom_dataset_data_loader.py#L44

=========================================
https://github.com/Brummi/BehindTheScenes
=========================================

Found 4 times
DataLoader(test_dataset, batch_size=1, num_workers=config["num_workers"], shuffle=False, drop_last=False)
DataLoader(test_dataset, batch_size=1, num_workers=config["num_workers"], shuffle=False, drop_last=False)
DataLoader(test_dataset, batch_size=1, num_workers=config["num_workers"], shuffle=False, drop_last=False)
DataLoader(test_dataset, batch_size=1, num_workers=config["num_workers"], shuffle=False, drop_last=False)
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/evaluator.py#L196
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/evaluator_3dbb.py#L325
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/evaluator_lidar.py#L356
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/evaluator_nvs.py#L187

=================================
https://github.com/gengshan-y/rac
=================================

Found 2 times
DataLoader(data_inuse,
         batch_size= opts_dict['batch_size'], num_workers=num_workers, 
         drop_last=True, worker_init_fn=_init_fn, pin_memory=True,
         sampler=sampler)
DataLoader(dataset,
         batch_size= 1, num_workers=num_workers, drop_last=False, pin_memory=True, shuffle=False)
https://github.com/gengshan-y/rac/blob/0a5d4cca5037247228f6c2dd4a31d0e97de1ec89/dataloader/frameloader.py#L47
https://github.com/gengshan-y/rac/blob/0a5d4cca5037247228f6c2dd4a31d0e97de1ec89/dataloader/frameloader.py#L59

==========================================
https://github.com/NIRVANALAN/CVPR23-E3DGE
==========================================

Found 13 times
DataLoader(dataset,
                            batch_size=args.batch_size,
                            shuffle=False,
                            num_workers=int(args.workers),
                            drop_last=True)
DataLoader(
                instance_trajectory_dataset, batch_size=251)
DataLoader(
            dataset,
            # batch_size=8,
            batch_size=1,
            shuffle=False,
            num_workers=0,
            pin_memory=True,
            drop_last=False)
DataLoader(
                instance_trajectory_dataset, batch_size=251)
DataLoader(
            dataset,
            # batch_size=8,
            batch_size=1,
            shuffle=False,
            num_workers=0,
            pin_memory=True,
            drop_last=False)
DataLoader(dataset,
                            batch_size=args.batch_size,
                            shuffle=False,
                            num_workers=int(args.workers),
                            drop_last=True)
data.DataLoader(
        eval_dataset,
        batch_size=opt.inference.eval_batch,  # to render multi-view
        drop_last=False,
        shuffle=False,
        num_workers=1)
data.DataLoader(test_dataset,
                                  batch_size=opt.inference.eval_batch,
                                  drop_last=False,
                                  num_workers=2)
data.DataLoader(train_dataset,
                                   batch_size=opt.training.batch,
                                   sampler=data_sampler(
                                       train_dataset,
                                       shuffle=True,
                                       distributed=opt.training.distributed),
                                   drop_last=True,
                                   num_workers=opt.training.workers,
                                   pin_memory=True)
DataLoader(train_dataset,
                                   batch_size=opt.batch_size,
                                   shuffle=not opt.serial_batches,
                                   num_workers=opt.num_threads,
                                   pin_memory=opt.pin_memory)
DataLoader(test_dataset,
                                  batch_size=1,
                                  shuffle=False,
                                  num_workers=opt.num_threads,
                                  pin_memory=opt.pin_memory)
DataLoader(train_dataset,
                                   batch_size=opt.batch_size,
                                   shuffle=not opt.serial_batches,
                                   num_workers=opt.num_threads,
                                   pin_memory=opt.pin_memory)
DataLoader(test_dataset,
                                  batch_size=1,
                                  shuffle=False,
                                  num_workers=opt.num_threads,
                                  pin_memory=opt.pin_memory)
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/helper_scripts/calc_losses_on_images.py#L50
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/trainer.py#L1889
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/trainer.py#L2130
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/trainer.py#L3009
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/Inversions/projectors.py#L355
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/utils/calc_metrics.py#L48
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/utils/setup/train_setup.py#L334
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/utils/setup/train_setup.py#L343
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/utils/setup/train_setup.py#L357
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/vendor/pifu/apps/train_color.py#L36
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/vendor/pifu/apps/train_color.py#L45
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/vendor/pifu/apps/train_shape.py#L36
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/vendor/pifu/apps/train_shape.py#L45

============================================
https://github.com/VITA-Group/NeuralLift-360
============================================

Found 2 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, num_workers=args.dataloader_num_workers
    )
DataLoader(list(range(self.size)), batch_size=1, collate_fn=self.collate, shuffle=self.training, num_workers=0)
https://github.com/VITA-Group/NeuralLift-360/blob/93b9e2d4dec9af40425196c3060564500d1ae4b2/text_inversion.py#L727
https://github.com/VITA-Group/NeuralLift-360/blob/93b9e2d4dec9af40425196c3060564500d1ae4b2/nerf/provider.py#L261

==============================
https://github.com/SysCV/idisc
==============================

Found 3 times
DataLoader(
        valid_dataset,
        batch_size=config["training"]["batch_size"],
        num_workers=4,
        sampler=valid_sampler,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        train_dataset,
        batch_size=config["training"]["batch_size"],
        shuffle=False,
        num_workers=num_workers,
        sampler=train_sampler,
        pin_memory=True,
    )
DataLoader(
        valid_dataset,
        batch_size=val_batch_size,
        shuffle=False,
        num_workers=num_workers,
        sampler=valid_sampler,
        pin_memory=True,
        drop_last=False,
    )
https://github.com/SysCV/idisc/blob/5d6cea2f0e5236701b2dfd6dac89cde13a328d33/scripts/test.py#L38
https://github.com/SysCV/idisc/blob/5d6cea2f0e5236701b2dfd6dac89cde13a328d33/scripts/train.py#L91
https://github.com/SysCV/idisc/blob/5d6cea2f0e5236701b2dfd6dac89cde13a328d33/scripts/train.py#L99

======================================
https://github.com/YuYin1/NeRFInvertor
======================================

Found 4 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        pin_memory=False,
        num_workers=8
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        pin_memory=False,
        num_workers=8
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=batch_size,
        shuffle=False,
        drop_last=True,
        pin_memory=False,
        num_workers=1,
        persistent_workers=True,
    )
torch.utils.data.DataLoader(
        _dataset,
        sampler=sampler,
        batch_size=batch_size,
        shuffle=False,
        drop_last=True,
        pin_memory=False,
        num_workers=1,
        persistent_workers=True,
    )
https://github.com/YuYin1/NeRFInvertor/blob/1006dce92f1749373bdc26052e0b5d2662663315/datasets.py#L207
https://github.com/YuYin1/NeRFInvertor/blob/1006dce92f1749373bdc26052e0b5d2662663315/datasets.py#L219
https://github.com/YuYin1/NeRFInvertor/blob/1006dce92f1749373bdc26052e0b5d2662663315/datasets.py#L238
https://github.com/YuYin1/NeRFInvertor/blob/1006dce92f1749373bdc26052e0b5d2662663315/datasets.py#L258

=======================================
https://github.com/facebookresearch/MCC
=======================================

Found 2 times
torch.utils.data.DataLoader(
        dataset, batch_size=args.batch_size if is_train else args.eval_batch_size,
        sampler=sampler_train,
        num_workers=args.num_workers if is_train else args.num_eval_workers,
        pin_memory=args.pin_mem,
        collate_fn=collate_fn,
    )
torch.utils.data.DataLoader(
        dataset_viz, batch_size=1,
        sampler=sampler_viz,
        num_workers=args.num_eval_workers,
        pin_memory=args.pin_mem,
        collate_fn=collate_fn,
    )
https://github.com/facebookresearch/MCC/blob/b04c97518360e4fdedfb6f090db7e90d0c2f8ae6/main_mcc.py#L165
https://github.com/facebookresearch/MCC/blob/b04c97518360e4fdedfb6f090db7e90d0c2f8ae6/main_mcc.py#L242

===================================
https://github.com/apple/ml-facelit
===================================

Found 2 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/apple/ml-facelit/blob/7b93c87a4e9b1e050130a683910a895b8f8e4723/facelit/metrics/metric_utils.py#L234
https://github.com/apple/ml-facelit/blob/7b93c87a4e9b1e050130a683910a895b8f8e4723/facelit/training/training_loop.py#L149

=====================================
https://github.com/YangHai-1218/RADet
=====================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/YangHai-1218/RADet/blob/22296c7abd910b08723d3f9aac09084fc5ec9446/radet/datasets/builder.py#L132

======================================
https://github.com/YangHai-1218/SCFlow
======================================

Found 3 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        shuffle=False,
    )
DataLoader(
            dataset,
            sampler=sampler,
            batch_size=cfg.data.samples_per_gpu * cfg.num_gpus,
            num_workers=cfg.data.workers_per_gpu * cfg.num_gpus,
            collate_fn=partial(collate, samples_per_gpu=cfg.data.samples_per_gpu),
            shuffle=False,
            persistent_workers=True
        )
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=cfg.data.samples_per_gpu),
            shuffle=False,
            persistent_workers=False
        )
https://github.com/YangHai-1218/SCFlow/blob/c234cb25a1066ff388626706a758e598782d528c/test.py#L70
https://github.com/YangHai-1218/SCFlow/blob/c234cb25a1066ff388626706a758e598782d528c/train.py#L52
https://github.com/YangHai-1218/SCFlow/blob/c234cb25a1066ff388626706a758e598782d528c/train.py#L75

=============================================
https://github.com/facebookresearch/InterWild
=============================================

Found 2 times
DataLoader(dataset=trainset_loader, batch_size=cfg.num_gpus*cfg.train_batch_size, shuffle=True, num_workers=cfg.num_thread, pin_memory=True, drop_last=True)
DataLoader(dataset=testset_loader, batch_size=cfg.num_gpus*cfg.test_batch_size, shuffle=False, num_workers=cfg.num_thread, pin_memory=True)
https://github.com/facebookresearch/InterWild/blob/fd383fa7b868a7b5b68eba2fd662a05d3d69e3d5/common/base.py#L136
https://github.com/facebookresearch/InterWild/blob/fd383fa7b868a7b5b68eba2fd662a05d3d69e3d5/common/base.py#L163

=======================================
https://github.com/GONGJIA0208/Diffpose
=======================================

Found 2 times
data.DataLoader(
                PoseGenerator_gmm(poses_train, poses_train_2d, actions_train, camerapara_train),
                batch_size=config.training.batch_size, shuffle=True,\
                    num_workers=config.training.num_workers, pin_memory=True)
data.DataLoader(
                PoseGenerator_gmm(poses_valid, poses_valid_2d, actions_valid, camerapara_valid),
                batch_size=config.training.batch_size, shuffle=False, 
                num_workers=config.training.num_workers, pin_memory=True)
https://github.com/GONGJIA0208/Diffpose/blob/9a15bf80618fe21be4b01bed245d809d71b1a397/runners/diffpose_frame.py#L128
https://github.com/GONGJIA0208/Diffpose/blob/9a15bf80618fe21be4b01bed245d809d71b1a397/runners/diffpose_frame.py#L236

=====================================
https://github.com/jiaxinxie97/HFGI3D
=====================================

Found 7 times
DataLoader(self.train_dataset,
										   batch_size=self.opts.batch_size,
										   shuffle=True,
										   num_workers=int(self.opts.workers),
										   drop_last=True)
DataLoader(self.test_dataset,
										  batch_size=self.opts.test_batch_size,
										  shuffle=False,
										  num_workers=int(self.opts.test_workers),
										  drop_last=True)
DataLoader(dataset, batch_size=1, shuffle=False)
DataLoader(dataset, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(
                        self.dataset,
                        sampler=self.sampler,
                        num_workers=int(opt.num_threads / world_size), 
                        batch_size=int(opt.batch_size / world_size), 
                        drop_last=True)
torch.utils.data.DataLoader(
                self.dataset,
                batch_size=opt.batch_size,
                shuffle=(not opt.serial_batches) and opt.isTrain,
                num_workers=int(opt.num_threads),
                drop_last=True
            )
https://github.com/jiaxinxie97/HFGI3D/blob/139d0c67046ee4fd3a41edd6320646c8c6b0b287/inversion/models/StyleCLIP/mapper/training/coach.py#L43
https://github.com/jiaxinxie97/HFGI3D/blob/139d0c67046ee4fd3a41edd6320646c8c6b0b287/inversion/models/StyleCLIP/mapper/training/coach.py#L48
https://github.com/jiaxinxie97/HFGI3D/blob/139d0c67046ee4fd3a41edd6320646c8c6b0b287/inversion/scripts/main.py#L39
https://github.com/jiaxinxie97/HFGI3D/blob/139d0c67046ee4fd3a41edd6320646c8c6b0b287/inversion/scripts/run_pti.py#L40
https://github.com/jiaxinxie97/HFGI3D/blob/139d0c67046ee4fd3a41edd6320646c8c6b0b287/inversion/training/training_loop.py#L146
https://github.com/jiaxinxie97/HFGI3D/blob/139d0c67046ee4fd3a41edd6320646c8c6b0b287/pose_estimation/data/__init__.py#L84
https://github.com/jiaxinxie97/HFGI3D/blob/139d0c67046ee4fd3a41edd6320646c8c6b0b287/pose_estimation/data/__init__.py#L91

==========================================
https://github.com/facebookresearch/omni3d
==========================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/facebookresearch/omni3d/blob/778bd0210e5e1b584cc52daeba57cae3a3ee8c4e/cubercnn/data/build.py#L224

======================================
https://github.com/Pointcept/Pointcept
======================================

Found 4 times
torch.utils.data.DataLoader(
                    dataset,
                    batch_size=batch_size_per_gpu,
                    shuffle=(sampler is None),
                    num_workers=num_worker_per_gpu,
                    sampler=sampler,
                    collate_fn=partial(point_collate_fn, mix_prob=mix_prob),
                    pin_memory=True,
                    worker_init_fn=init_fn,
                    drop_last=True,
                    persistent_workers=True,
                )
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=self.cfg.batch_size_test_per_gpu,
            shuffle=False,
            num_workers=self.cfg.batch_size_test_per_gpu,
            pin_memory=True,
            sampler=test_sampler,
            collate_fn=self.__class__.collate_fn,
        )
torch.utils.data.DataLoader(
            train_data,
            batch_size=self.cfg.batch_size_per_gpu,
            shuffle=(train_sampler is None),
            num_workers=self.cfg.num_worker_per_gpu,
            sampler=train_sampler,
            collate_fn=partial(point_collate_fn, mix_prob=self.cfg.mix_prob),
            pin_memory=True,
            worker_init_fn=init_fn,
            drop_last=True,
            persistent_workers=True,
        )
torch.utils.data.DataLoader(
                val_data,
                batch_size=self.cfg.batch_size_val_per_gpu,
                shuffle=False,
                num_workers=self.cfg.num_worker_per_gpu,
                pin_memory=True,
                sampler=val_sampler,
                collate_fn=collate_fn,
            )
https://github.com/Pointcept/Pointcept/blob/2b247ed555e96eae11710dfde79a3fc16c8c74b3/pointcept/datasets/dataloader.py#L66
https://github.com/Pointcept/Pointcept/blob/2b247ed555e96eae11710dfde79a3fc16c8c74b3/pointcept/engines/test.py#L95
https://github.com/Pointcept/Pointcept/blob/2b247ed555e96eae11710dfde79a3fc16c8c74b3/pointcept/engines/train.py#L241
https://github.com/Pointcept/Pointcept/blob/2b247ed555e96eae11710dfde79a3fc16c8c74b3/pointcept/engines/train.py#L263

================================
https://github.com/pals-ttic/sjc
================================

Found 4 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/main.py#L244
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/main.py#L253
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/main.py#L269
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/main.py#L277

===============================
https://github.com/zerchen/gSDF
===============================

Found 3 times
DataLoader(dataset=self.trainset_loader, batch_size=cfg.train_batch_size, shuffle=False, num_workers=cfg.num_threads, pin_memory=True, sampler=self.train_sampler, drop_last=True, persistent_workers=False)
DataLoader(dataset=self.trainset_loader, batch_size=cfg.train_batch_size, shuffle=False, num_workers=cfg.num_threads, pin_memory=True, sampler=self.train_sampler, drop_last=True, persistent_workers=False)
DataLoader(dataset=self.testset_loader, batch_size=cfg.test_batch_size, shuffle=False, num_workers=cfg.num_threads, pin_memory=True, drop_last=False, persistent_workers=False)
https://github.com/zerchen/gSDF/blob/05101b5bde6765e9168026cff853b74a1412c125/common/base.py#L119
https://github.com/zerchen/gSDF/blob/05101b5bde6765e9168026cff853b74a1412c125/common/base.py#L136
https://github.com/zerchen/gSDF/blob/05101b5bde6765e9168026cff853b74a1412c125/common/base.py#L222

==============================
https://github.com/KovenYu/ALP
==============================

Found 6 times
torch.utils.data.DataLoader(dataset_validate, batch_size=1, collate_fn=dataset_validate.collate)
torch.utils.data.DataLoader(dataset_train, batch_size=FLAGS.batch, collate_fn=dataset_train.collate, shuffle=True)
torch.utils.data.DataLoader(dataset_validate, batch_size=1, collate_fn=dataset_train.collate)
torch.utils.data.DataLoader(dataset_validate, batch_size=1, collate_fn=dataset_validate.collate)
torch.utils.data.DataLoader(dataset_train, batch_size=FLAGS.batch, collate_fn=dataset_train.collate, shuffle=True)
torch.utils.data.DataLoader(dataset_validate, batch_size=1, collate_fn=dataset_train.collate)
https://github.com/KovenYu/ALP/blob/578b980cba265028bf5e3963a7a9377d6a989278/train.py#L293
https://github.com/KovenYu/ALP/blob/578b980cba265028bf5e3963a7a9377d6a989278/train.py#L411
https://github.com/KovenYu/ALP/blob/578b980cba265028bf5e3963a7a9377d6a989278/train.py#L412
https://github.com/KovenYu/ALP/blob/578b980cba265028bf5e3963a7a9377d6a989278/third_party/nvdiffrecmc/train.py#L293
https://github.com/KovenYu/ALP/blob/578b980cba265028bf5e3963a7a9377d6a989278/third_party/nvdiffrecmc/train.py#L411
https://github.com/KovenYu/ALP/blob/578b980cba265028bf5e3963a7a9377d6a989278/third_party/nvdiffrecmc/train.py#L412

========================================
https://github.com/nileshkulkarni/d2drdf
========================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=opts.TRAIN.BATCH_SIZE,
        shuffle=shuffle,
        num_workers=opts.TRAIN.NUM_WORKERS,
        collate_fn=base_data.collate_fn,
        worker_init_fn=base_data.worker_init_fn,
        persistent_workers=persistent_workers,
        pin_memory=True,
        drop_last=True,
    )
https://github.com/nileshkulkarni/d2drdf/blob/b041450498644d5632f5e31f2caba7b3fe7b883b/rgbd_drdf/data_utils/matterport3d_data.py#L498

=============================
https://github.com/cxx226/DPF
=============================

Found 5 times
torch.utils.data.DataLoader(
        train_set,batch_size=batch_size, num_workers=num_workers,
        pin_memory=True, drop_last=True, sampler=train_sampler
    )
torch.utils.data.DataLoader(
            SegListMSMultiHead(data_dir, 'val', transforms.Compose([
            transforms.ToTensorMultiHead(),
            normalize
        ]), scales), 
        batch_size=1, shuffle=False, num_workers=num_workers,
        pin_memory=True, drop_last=True
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size, shuffle=False, num_workers=num_workers,
        pin_memory=False
    )
torch.utils.data.DataLoader(
        IIWDataset(data_dir= data_dir, split = 'train',transforms = transforms.Compose(naive_t),guide_size=guide_size), #t
        batch_size=batch_size, shuffle=True, num_workers=num_workers,
        pin_memory=True, drop_last=True,collate_fn = my_collate_fn
    )
torch.utils.data.DataLoader(
            IIWDataset(data_dir=data_dir,split= 'test',transforms= transforms.Compose(naive_t),guide_size=guide_size),
        batch_size=1, shuffle=False, num_workers=num_workers,
        pin_memory=True, drop_last=True,collate_fn = my_collate_fn
    )
https://github.com/cxx226/DPF/blob/bdc0630358b8b09e16fc5b8dc94d3135004f9744/main.py#L573
https://github.com/cxx226/DPF/blob/bdc0630358b8b09e16fc5b8dc94d3135004f9744/main.py#L578
https://github.com/cxx226/DPF/blob/bdc0630358b8b09e16fc5b8dc94d3135004f9744/main.py#L874
https://github.com/cxx226/DPF/blob/bdc0630358b8b09e16fc5b8dc94d3135004f9744/main_iiw.py#L330
https://github.com/cxx226/DPF/blob/bdc0630358b8b09e16fc5b8dc94d3135004f9744/main_iiw.py#L337

===============================================
https://github.com/facebookresearch/OrienterNet
===============================================

Found 4 times
torchdata.DataLoader(
            dataset,
            batch_size=cfg["batch_size"],
            num_workers=num_workers,
            shuffle=shuffle or (stage == "train"),
            pin_memory=True,
            persistent_workers=num_workers > 0,
            worker_init_fn=worker_init_fn,
            collate_fn=collate,
            sampler=sampler,
        )
torchdata.DataLoader(
            dataset,
            batch_size=None,
            sampler=key_indices,
            num_workers=num_workers,
            shuffle=False,
            pin_memory=True,
            persistent_workers=num_workers > 0,
            worker_init_fn=worker_init_fn,
            collate_fn=collate,
        )
torchdata.DataLoader(
            dataset,
            batch_size=cfg["batch_size"],
            num_workers=num_workers,
            shuffle=shuffle or (stage == "train"),
            pin_memory=True,
            persistent_workers=num_workers > 0,
            worker_init_fn=worker_init_fn,
            collate_fn=collate,
            sampler=sampler,
        )
torchdata.DataLoader(
            dataset,
            batch_size=None,
            sampler=key_indices,
            num_workers=num_workers,
            shuffle=False,
            pin_memory=True,
            persistent_workers=num_workers > 0,
            worker_init_fn=worker_init_fn,
            collate_fn=collate,
        )
https://github.com/facebookresearch/OrienterNet/blob/c222d08c9c0a084d79a415cc5c43e71173d2ecc4/maploc/data/kitti/dataset.py#L243
https://github.com/facebookresearch/OrienterNet/blob/c222d08c9c0a084d79a415cc5c43e71173d2ecc4/maploc/data/kitti/dataset.py#L295
https://github.com/facebookresearch/OrienterNet/blob/c222d08c9c0a084d79a415cc5c43e71173d2ecc4/maploc/data/mapillary/dataset.py#L293
https://github.com/facebookresearch/OrienterNet/blob/c222d08c9c0a084d79a415cc5c43e71173d2ecc4/maploc/data/mapillary/dataset.py#L342

===================================
https://github.com/jyunlee/Im2Hands
===================================

Found 9 times
torch.utils.data.DataLoader(
        dataset, batch_size=1, num_workers=1, shuffle=False)
torch.utils.data.DataLoader(
    train_dataset, batch_size=batch_size, num_workers=4, shuffle=True,
    collate_fn=data.collate_remove_none,
    worker_init_fn=data.worker_init_fn)
torch.utils.data.DataLoader(
    val_dataset, batch_size=1, num_workers=4, shuffle=False,
    collate_fn=data.collate_remove_none,
    worker_init_fn=data.worker_init_fn)
torch.utils.data.DataLoader(
        dataset, batch_size=1, num_workers=1, shuffle=False)
torch.utils.data.DataLoader(
    train_dataset, batch_size=batch_size, num_workers=4, shuffle=True,
    collate_fn=data.collate_remove_none,
    worker_init_fn=data.worker_init_fn)
torch.utils.data.DataLoader(
    val_dataset, batch_size=10, num_workers=4, shuffle=False,
    collate_fn=data.collate_remove_none,
    worker_init_fn=data.worker_init_fn)
torch.utils.data.DataLoader(
        dataset, batch_size=1, num_workers=1, shuffle=False)
torch.utils.data.DataLoader(
    train_dataset, batch_size=batch_size, num_workers=4, shuffle=True, 
    collate_fn=data.collate_remove_none,
    worker_init_fn=data.worker_init_fn)
torch.utils.data.DataLoader(
    val_dataset, batch_size=batch_size, num_workers=4, shuffle=False,
    collate_fn=data.collate_remove_none,
    worker_init_fn=data.worker_init_fn)
https://github.com/jyunlee/Im2Hands/blob/656c449d2be3919a309bfbaa7b942e798e6fd021/init_occ_generate.py#L67
https://github.com/jyunlee/Im2Hands/blob/656c449d2be3919a309bfbaa7b942e798e6fd021/init_occ_train.py#L67
https://github.com/jyunlee/Im2Hands/blob/656c449d2be3919a309bfbaa7b942e798e6fd021/init_occ_train.py#L72
https://github.com/jyunlee/Im2Hands/blob/656c449d2be3919a309bfbaa7b942e798e6fd021/kpts_ref_generate.py#L65
https://github.com/jyunlee/Im2Hands/blob/656c449d2be3919a309bfbaa7b942e798e6fd021/kpts_ref_train.py#L67
https://github.com/jyunlee/Im2Hands/blob/656c449d2be3919a309bfbaa7b942e798e6fd021/kpts_ref_train.py#L72
https://github.com/jyunlee/Im2Hands/blob/656c449d2be3919a309bfbaa7b942e798e6fd021/ref_occ_generate.py#L66
https://github.com/jyunlee/Im2Hands/blob/656c449d2be3919a309bfbaa7b942e798e6fd021/ref_occ_train.py#L60
https://github.com/jyunlee/Im2Hands/blob/656c449d2be3919a309bfbaa7b942e798e6fd021/ref_occ_train.py#L65

====================================
https://github.com/SangHunHan92/2K2K
====================================

Found 1 times
torch.utils.data.DataLoader (
            train_dataset, batch_size=args.batch_size, shuffle=shuffle, num_workers=args.workers,
            sampler=train_sampler, pin_memory=False, drop_last=True)
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/train.py#L238

==================================
https://github.com/VivianSZF/pof3d
==================================

Found 3 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/VivianSZF/pof3d/blob/6666513b4a69c48d7cb094daf8dc28501cc20c4c/metrics/metric_utils.py#L237
https://github.com/VivianSZF/pof3d/blob/6666513b4a69c48d7cb094daf8dc28501cc20c4c/training/training_loop.py#L147
https://github.com/VivianSZF/pof3d/blob/6666513b4a69c48d7cb094daf8dc28501cc20c4c/training/training_loop_geod.py#L155

==============================================
https://github.com/JaehaKim97/BlurHand_RELEASE
==============================================

Found 2 times
DataLoader(dataset=self.testset_loader, batch_size=(num_gpus*test_batch_size),
                                          shuffle=False, num_workers=num_threads, pin_memory=True)
DataLoader(dataset=trainset_loader, batch_size=(num_gpus*train_batch_size),
                                          shuffle=True, num_workers=num_threads, pin_memory=True, drop_last=True)
https://github.com/JaehaKim97/BlurHand_RELEASE/blob/19864229065f7c52238155df933da1fc0e95f1e9/src/test.py#L94
https://github.com/JaehaKim97/BlurHand_RELEASE/blob/19864229065f7c52238155df933da1fc0e95f1e9/src/train.py#L135

=====================================
https://github.com/xiexh20/VisTracker
=====================================

Found 2 times
DataLoader(dataset=self, batch_size=self.batch_size,
                                shuffle=False, num_workers=self.num_workers,
                                sampler=sampler,
                                pin_memory=True,
                                drop_last=True)
DataLoader(
                self, batch_size=self.batch_size,
                num_workers=self.num_workers,
                shuffle=shuffle,
                worker_init_fn=self.worker_init_fn,
                drop_last=False)
https://github.com/xiexh20/VisTracker/blob/34fc23d691746aa042edfd7eb5750fa19f6e870c/data/base_data.py#L81
https://github.com/xiexh20/VisTracker/blob/34fc23d691746aa042edfd7eb5750fa19f6e870c/data/base_data.py#L89

=============================
https://github.com/ZZY816/COM
=============================

Found 1 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0, worker_init_fn=partial(common_utils.worker_init_fn, seed=seed)
    )
https://github.com/ZZY816/COM/blob/444249422a673caecd45cf4a19dfff55dc006c7d/pcdet/datasets/__init__.py#L75

===========================================
https://github.com/ziquanliu/CVPR2023-TWINS
===========================================

Found 44 times
DataLoader(train_set, batch_size=batch_size, 
            shuffle=shuffle_train, num_workers=workers, pin_memory=True)
DataLoader(test_set, batch_size=val_batch_size, 
            shuffle=shuffle_val, num_workers=workers, pin_memory=True)
ch.utils.data.DataLoader(dataset, num_workers=workers, 
                        batch_size=batch_size, shuffle=shuffle)
DataLoader(train_ds, batch_size=bs, shuffle=True, **kwargs)
DataLoader(valid_ds, batch_size=bs, shuffle=True, **kwargs)
DataLoader(d, batch_size=batch_size, shuffle=True,
                num_workers=workers)
DataLoader(d, batch_size=batch_size, shuffle=True,
                num_workers=workers)
DataLoader(ds, batch_size=batch_size, shuffle=True,
                num_workers=workers)
DataLoader(tr_dataset, batch_size=args.batch_size, shuffle=True, num_workers=4, pin_memory=True, sampler=None)
torch.utils.data.DataLoader(tv.datasets.ImageFolder(valdir, tv.transforms.Compose([tv.transforms.Resize(256),
            tv.transforms.CenterCrop(224),
            tv.transforms.ToTensor()])),
            batch_size=args.batch_size, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(tv.datasets.ImageFolder(valdir, tv.transforms.Compose([tv.transforms.Resize(256),
                        tv.transforms.CenterCrop(224),
                        tv.transforms.ToTensor()])),
                        batch_size=args.batch_size, shuffle=False,
                        num_workers=4, pin_memory=True)
DataLoader(tr_dataset, batch_size=args.batch_size, shuffle=True, num_workers=4, pin_memory=True, sampler=None)
torch.utils.data.DataLoader(tv.datasets.ImageFolder(valdir, tv.transforms.Compose([tv.transforms.Resize(256),
            tv.transforms.CenterCrop(224),
            tv.transforms.ToTensor()])),
            batch_size=args.batch_size, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(tv.datasets.ImageFolder(valdir, tv.transforms.Compose([tv.transforms.Resize(256),
                        tv.transforms.CenterCrop(224),
                        tv.transforms.ToTensor()])),
                        batch_size=args.batch_size, shuffle=False,
                        num_workers=4, pin_memory=True)
DataLoader(train_set, batch_size=batch_size, 
            shuffle=shuffle_train, num_workers=workers, pin_memory=True)
DataLoader(test_set, batch_size=val_batch_size, 
            shuffle=shuffle_val, num_workers=workers, pin_memory=True)
ch.utils.data.DataLoader(dataset, num_workers=workers, 
                        batch_size=batch_size, shuffle=shuffle)
DataLoader(train_ds, batch_size=bs, shuffle=True, **kwargs)
DataLoader(valid_ds, batch_size=bs, shuffle=True, **kwargs)
DataLoader(d, batch_size=batch_size, shuffle=True,
                num_workers=workers)
DataLoader(d, batch_size=batch_size, shuffle=True,
                num_workers=workers)
DataLoader(ds, batch_size=batch_size, shuffle=True,
                num_workers=workers)
DataLoader(train_set, batch_size=batch_size, 
            shuffle=shuffle_train, num_workers=workers, pin_memory=True)
DataLoader(test_set, batch_size=val_batch_size, 
            shuffle=shuffle_val, num_workers=workers, pin_memory=True)
ch.utils.data.DataLoader(dataset, num_workers=workers, 
                        batch_size=batch_size, shuffle=shuffle)
DataLoader(train_ds, batch_size=bs, shuffle=True, **kwargs)
DataLoader(valid_ds, batch_size=bs, shuffle=True, **kwargs)
DataLoader(d, batch_size=batch_size, shuffle=True,
                num_workers=workers)
DataLoader(d, batch_size=batch_size, shuffle=True,
                num_workers=workers)
DataLoader(ds, batch_size=batch_size, shuffle=True,
                num_workers=workers)
DataLoader(tr_dataset, batch_size=args.batch_size, shuffle=True, num_workers=4, pin_memory=True, sampler=None)
torch.utils.data.DataLoader(tv.datasets.ImageFolder(valdir, tv.transforms.Compose([tv.transforms.Resize(256),
            tv.transforms.CenterCrop(224),
            tv.transforms.ToTensor()])),
            batch_size=args.batch_size, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(tv.datasets.ImageFolder(valdir, tv.transforms.Compose([tv.transforms.Resize(256),
                        tv.transforms.CenterCrop(224),
                        tv.transforms.ToTensor()])),
                        batch_size=args.batch_size, shuffle=False,
                        num_workers=4, pin_memory=True)
DataLoader(tr_dataset, batch_size=args.batch_size, shuffle=True, num_workers=4, pin_memory=True, sampler=None)
torch.utils.data.DataLoader(tv.datasets.ImageFolder(valdir, tv.transforms.Compose([tv.transforms.Resize(256),
            tv.transforms.CenterCrop(224),
            tv.transforms.ToTensor()])),
            batch_size=args.batch_size, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(tv.datasets.ImageFolder(valdir, tv.transforms.Compose([tv.transforms.Resize(256),
                        tv.transforms.CenterCrop(224),
                        tv.transforms.ToTensor()])),
                        batch_size=args.batch_size, shuffle=False,
                        num_workers=4, pin_memory=True)
DataLoader(train_set, batch_size=batch_size, 
            shuffle=shuffle_train, num_workers=workers, pin_memory=True)
DataLoader(test_set, batch_size=val_batch_size, 
            shuffle=shuffle_val, num_workers=workers, pin_memory=True)
ch.utils.data.DataLoader(dataset, num_workers=workers, 
                        batch_size=batch_size, shuffle=shuffle)
DataLoader(train_ds, batch_size=bs, shuffle=True, **kwargs)
DataLoader(valid_ds, batch_size=bs, shuffle=True, **kwargs)
DataLoader(d, batch_size=batch_size, shuffle=True,
                num_workers=workers)
DataLoader(d, batch_size=batch_size, shuffle=True,
                num_workers=workers)
DataLoader(ds, batch_size=batch_size, shuffle=True,
                num_workers=workers)
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_cifar/robustness/loaders.py#L89
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_cifar/robustness/loaders.py#L92
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_cifar/robustness/loaders.py#L254
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_cifar/transfer_utils/food_101.py#L33
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_cifar/transfer_utils/food_101.py#L34
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_cifar/transfer_utils/transfer_datasets.py#L111
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_cifar/transfer_utils/transfer_datasets.py#L134
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_cifar/transfer_utils/transfer_datasets.py#L141
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/train-AT.py#L327
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/train-AT.py#L330
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/train-AT.py#L338
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/train-TRADES.py#L328
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/train-TRADES.py#L331
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/train-TRADES.py#L339
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/robustness/loaders.py#L89
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/robustness/loaders.py#L92
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/robustness/loaders.py#L254
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/transfer_utils/food_101.py#L33
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/transfer_utils/food_101.py#L34
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/transfer_utils/transfer_datasets.py#L111
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/transfer_utils/transfer_datasets.py#L134
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/transfer_utils/transfer_datasets.py#L141
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_cifar/robustness/loaders.py#L89
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_cifar/robustness/loaders.py#L92
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_cifar/robustness/loaders.py#L254
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_cifar/transfer_utils/food_101.py#L33
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_cifar/transfer_utils/food_101.py#L34
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_cifar/transfer_utils/transfer_datasets.py#L111
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_cifar/transfer_utils/transfer_datasets.py#L134
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_cifar/transfer_utils/transfer_datasets.py#L141
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/train-TWINS-AT.py#L340
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/train-TWINS-AT.py#L343
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/train-TWINS-AT.py#L351
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/train-TWINS-TRADES.py#L349
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/train-TWINS-TRADES.py#L352
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/train-TWINS-TRADES.py#L360
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/robustness/loaders.py#L89
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/robustness/loaders.py#L92
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/robustness/loaders.py#L254
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/transfer_utils/food_101.py#L33
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/transfer_utils/food_101.py#L34
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/transfer_utils/transfer_datasets.py#L111
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/transfer_utils/transfer_datasets.py#L134
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/transfer_utils/transfer_datasets.py#L141

================================
https://github.com/VDIGPKU/T-SEA
================================

Found 12 times
torch.utils.data.DataLoader(
      Dataset(opt, 'val'), 
      batch_size=1, 
      shuffle=False,
      num_workers=1,
      pin_memory=True
  )
torch.utils.data.DataLoader(
      Dataset(opt, 'train'), 
      batch_size=opt.batch_size, 
      shuffle=True,
      num_workers=opt.num_workers,
      pin_memory=True,
      drop_last=True
  )
torch.utils.data.DataLoader(
    PrefetchDataset(opt, dataset, detector.pre_process), 
    batch_size=1, shuffle=False, num_workers=1, pin_memory=True)
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=n_cpu,
        pin_memory=True)
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=n_cpu,
        pin_memory=True,
        collate_fn=dataset.collate_fn)
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=n_cpu,
        pin_memory=True,
        collate_fn=dataset.collate_fn,
        worker_init_fn=worker_seed_set)
DataLoader(train_dataset, batch_size=config.batch // config.subdivisions, shuffle=True,
                              num_workers=8, pin_memory=True, drop_last=True, collate_fn=collate)
DataLoader(val_dataset, batch_size=config.batch // config.subdivisions, shuffle=True, num_workers=8,
                            pin_memory=True, drop_last=True, collate_fn=val_collate)
torch.utils.data.DataLoader(
        dataset, batch_size=1, sampler=sampler,
        num_workers=14,  # you might want to increase it for faster processing
        collate_fn=lambda x: x[0])
torch.utils.data.DataLoader(
        dataset, batch_sampler=train_batch_sampler, num_workers=args.workers,
        collate_fn=utils.collate_fn)
torch.utils.data.DataLoader(
        dataset_test, batch_size=1,
        sampler=test_sampler, num_workers=args.workers,
        collate_fn=utils.collate_fn)
DataLoader(data_set, batch_size=batch_size, shuffle=shuffle,
                             num_workers=num_workers, pin_memory=pin_memory, sampler=sampler)
https://github.com/VDIGPKU/T-SEA/blob/953b3ce2f8447cf63e7ae55c7a96d9b3ebc797d7/detlib/AfreeDet/CenterNet/CenterNet/src/main.py#L44
https://github.com/VDIGPKU/T-SEA/blob/953b3ce2f8447cf63e7ae55c7a96d9b3ebc797d7/detlib/AfreeDet/CenterNet/CenterNet/src/main.py#L57
https://github.com/VDIGPKU/T-SEA/blob/953b3ce2f8447cf63e7ae55c7a96d9b3ebc797d7/detlib/AfreeDet/CenterNet/CenterNet/src/test.py#L60
https://github.com/VDIGPKU/T-SEA/blob/953b3ce2f8447cf63e7ae55c7a96d9b3ebc797d7/detlib/HHDet/yolov3/PyTorch_YOLOv3/pytorchyolo/detect.py#L247
https://github.com/VDIGPKU/T-SEA/blob/953b3ce2f8447cf63e7ae55c7a96d9b3ebc797d7/detlib/HHDet/yolov3/PyTorch_YOLOv3/pytorchyolo/test.py#L152
https://github.com/VDIGPKU/T-SEA/blob/953b3ce2f8447cf63e7ae55c7a96d9b3ebc797d7/detlib/HHDet/yolov3/PyTorch_YOLOv3/pytorchyolo/train.py#L49
https://github.com/VDIGPKU/T-SEA/blob/953b3ce2f8447cf63e7ae55c7a96d9b3ebc797d7/detlib/HHDet/yolov4/Pytorch_YOLOv4/train.py#L298
https://github.com/VDIGPKU/T-SEA/blob/953b3ce2f8447cf63e7ae55c7a96d9b3ebc797d7/detlib/HHDet/yolov4/Pytorch_YOLOv4/train.py#L301
https://github.com/VDIGPKU/T-SEA/blob/953b3ce2f8447cf63e7ae55c7a96d9b3ebc797d7/detlib/HHDet/yolov4/Pytorch_YOLOv4/tool/tv_reference/group_by_aspect_ratio.py#L106
https://github.com/VDIGPKU/T-SEA/blob/953b3ce2f8447cf63e7ae55c7a96d9b3ebc797d7/detlib/HHDet/yolov4/Pytorch_YOLOv4/tool/tv_reference/train.py#L86
https://github.com/VDIGPKU/T-SEA/blob/953b3ce2f8447cf63e7ae55c7a96d9b3ebc797d7/detlib/HHDet/yolov4/Pytorch_YOLOv4/tool/tv_reference/train.py#L90
https://github.com/VDIGPKU/T-SEA/blob/953b3ce2f8447cf63e7ae55c7a96d9b3ebc797d7/utils/loader.py#L185

====================================================
https://github.com/jeromerony/alma_prox_segmentation
====================================================

Found 2 times
DataLoader(dataset=dataset, shuffle=False)
DataLoader(dataset=dataset, shuffle=False, batch_size=batch_size)
https://github.com/jeromerony/alma_prox_segmentation/blob/24ad3d8e00d1120f6246c85e64d13a2f8edc15eb/dataset_ingredient.py#L48
https://github.com/jeromerony/alma_prox_segmentation/blob/24ad3d8e00d1120f6246c85e64d13a2f8edc15eb/dataset_ingredient.py#L69

=============================
https://github.com/wkim97/FSR
=============================

Found 6 times
torch.utils.data.DataLoader(testset, batch_size=args.bs, shuffle=False)
torch.utils.data.DataLoader(testset, batch_size=args.bs, shuffle=False)
torch.utils.data.DataLoader(
        trainset, batch_size=args.bs, shuffle=True)
torch.utils.data.DataLoader(
        testset, batch_size=args.bs, shuffle=False)
torch.utils.data.DataLoader(
        trainset, batch_size=args.bs, shuffle=True)
torch.utils.data.DataLoader(
        testset, batch_size=args.bs, shuffle=False)
https://github.com/wkim97/FSR/blob/aa83b86a812b6da35f5b07f5c677a9fe7243862a/test.py#L58
https://github.com/wkim97/FSR/blob/aa83b86a812b6da35f5b07f5c677a9fe7243862a/test.py#L67
https://github.com/wkim97/FSR/blob/aa83b86a812b6da35f5b07f5c677a9fe7243862a/train.py#L64
https://github.com/wkim97/FSR/blob/aa83b86a812b6da35f5b07f5c677a9fe7243862a/train.py#L69
https://github.com/wkim97/FSR/blob/aa83b86a812b6da35f5b07f5c677a9fe7243862a/train.py#L84
https://github.com/wkim97/FSR/blob/aa83b86a812b6da35f5b07f5c677a9fe7243862a/train.py#L89

================================================
https://github.com/zhipeng-wei/Self-Universality
================================================

Found 3 times
torch.utils.data.DataLoader(
                    attack_dataset, batch_size=args.batch_size,
                    num_workers=4, shuffle=False, pin_memory=True)
torch.utils.data.DataLoader(
                    attack_dataset, batch_size=args.batch_size,
                    num_workers=4, shuffle=False, pin_memory=True)
torch.utils.data.DataLoader(
                        attack_dataset, batch_size=args.batch_size,
                        num_workers=4, shuffle=False, pin_memory=True)
https://github.com/zhipeng-wei/Self-Universality/blob/16947baccf0b5a3061a8dc5cd02cecd15962b71f/ensemble_main.py#L88
https://github.com/zhipeng-wei/Self-Universality/blob/16947baccf0b5a3061a8dc5cd02cecd15962b71f/eval_universal.py#L49
https://github.com/zhipeng-wei/Self-Universality/blob/16947baccf0b5a3061a8dc5cd02cecd15962b71f/main.py#L105

=================================
https://github.com/KuofengGao/ASD
=================================

Found 2 times
DataLoader(dataset, **kwargs)
DataLoader(dataset, **loader_config, **kwargs)
https://github.com/KuofengGao/ASD/blob/6a1a3e815f3f907b139c9aa4e059f518f15b4eac/data/utils.py#L83
https://github.com/KuofengGao/ASD/blob/6a1a3e815f3f907b139c9aa4e059f518f15b4eac/data/utils.py#L85

================================
https://github.com/tokaka22/GMAA
================================

Found 3 times
DataLoader(
            dataset=self.data_train,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            shuffle=False,
        )
DataLoader(
            dataset=self.data_val,
            batch_size=1,
            shuffle=False,
        )
DataLoader(
            dataset=self.data_test,
            batch_size=1,
            shuffle=False,
        )
https://github.com/tokaka22/GMAA/blob/c34cef86da79aa392cb0fa8e88b1b1a5557f79c6/src/datamodules/celebahq/face_datamodulel.py#L280
https://github.com/tokaka22/GMAA/blob/c34cef86da79aa392cb0fa8e88b1b1a5557f79c6/src/datamodules/celebahq/face_datamodulel.py#L289
https://github.com/tokaka22/GMAA/blob/c34cef86da79aa392cb0fa8e88b1b1a5557f79c6/src/datamodules/celebahq/face_datamodulel.py#L296

=================================
https://github.com/zhangsn-19/PAN
=================================

Found 4 times
DataLoader(dataset=test_dataset, batch_size=args.bs, shuffle=False)
DataLoader(dataset=train_dataset, batch_size=args.bs, shuffle=True)
DataLoader(dataset=valid_dataset, batch_size=args.bs, shuffle=False)
DataLoader(dataset=test_dataset, batch_size=args.bs, shuffle=False)
https://github.com/zhangsn-19/PAN/blob/0bb115a076c1abede65ef1a3767e41742ca698ae/src/generalization.py#L47
https://github.com/zhangsn-19/PAN/blob/0bb115a076c1abede65ef1a3767e41742ca698ae/src/train.py#L72
https://github.com/zhangsn-19/PAN/blob/0bb115a076c1abede65ef1a3767e41742ca698ae/src/train.py#L75
https://github.com/zhangsn-19/PAN/blob/0bb115a076c1abede65ef1a3767e41742ca698ae/src/train.py#L78

=========================================
https://github.com/chenweixin107/TrojDiff
=========================================

Found 5 times
data.DataLoader(
            dataset,
            batch_size=config.training.batch_size,
            shuffle=True,
            num_workers=config.data.num_workers,
        )
data.DataLoader(
            dataset,
            batch_size=config.training.batch_size,
            shuffle=True,
            num_workers=config.data.num_workers,
        )
data.DataLoader(
            dataset,
            batch_size=config.training.batch_size,
            shuffle=True,
            num_workers=config.data.num_workers,
        )
data.DataLoader(
            targetset,
            batch_size=int(config.training.batch_size * 0.5),  # target class
            shuffle=True,
            num_workers=config.data.num_workers,
        )
data.DataLoader(
            dataset,
            batch_size=config.training.batch_size,
            shuffle=True,
            num_workers=config.data.num_workers,
        )
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion.py#L102
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack.py#L126
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2dout.py#L150
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2dout.py#L161
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2i.py#L139

==================================
https://github.com/Asteriajojo/M3D
==================================

Found 3 times
torch.utils.data.DataLoader(test_set, batch_size=args.batch_size, shuffle=False, num_workers=4,
                                              pin_memory=True)
torch.utils.data.DataLoader(train_set, batch_size=args.batch_size, shuffle=False, num_workers=4,
                                           pin_memory=True,sampler=train_sampler,drop_last=True)
torch.utils.data.DataLoader(train_all, batch_size=args.batch_size, shuffle=False, num_workers=4,
                                               pin_memory=True, drop_last=True, sampler=dataset_all_sampler)
https://github.com/Asteriajojo/M3D/blob/d098141e6781fe2e68d65805a93579f336ae1f73/eval_M3D.py#L123
https://github.com/Asteriajojo/M3D/blob/d098141e6781fe2e68d65805a93579f336ae1f73/train_M3D.py#L181
https://github.com/Asteriajojo/M3D/blob/d098141e6781fe2e68d65805a93579f336ae1f73/train_M3D.py#L192

===============================
https://github.com/InsLin/AGAIN
===============================

Found 6 times
torch.utils.data.DataLoader(testset, batch_size=128, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=128, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(testset, batch_size=args.test_batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
https://github.com/InsLin/AGAIN/blob/911f2388985d3d331fc452d204d118dbf8b4a419/AGAIN_with_AWP/attack_test.py#L24
https://github.com/InsLin/AGAIN/blob/911f2388985d3d331fc452d204d118dbf8b4a419/AGAIN_with_AWP/attack_test.py#L27
https://github.com/InsLin/AGAIN/blob/911f2388985d3d331fc452d204d118dbf8b4a419/AGAIN_with_AWP/train_awp_again_cifar.py#L92
https://github.com/InsLin/AGAIN/blob/911f2388985d3d331fc452d204d118dbf8b4a419/AGAIN_with_AWP/train_awp_again_cifar.py#L93
https://github.com/InsLin/AGAIN/blob/911f2388985d3d331fc452d204d118dbf8b4a419/AGAIN_with_AWP/utils/misc.py#L23
https://github.com/InsLin/AGAIN/blob/911f2388985d3d331fc452d204d118dbf8b4a419/AGAIN_with_AWP/utils/misc.py#L81

=================================
https://github.com/zaixizhang/CBD
=================================

Found 4 times
DataLoader(train_data, batch_size=opt.batch_size, shuffle=True, num_workers=4)
DataLoader(dataset=test_data_clean,
                                   batch_size=opt.batch_size,
                                   shuffle=False,
                                   num_workers= 4,
                                   )
DataLoader(dataset=test_data_bad,
                                 batch_size=opt.batch_size,
                                 shuffle=False,
                                 num_workers=4,
                                 )
DataLoader(dataset=train_data_bad,
                                  batch_size=opt.batch_size,
                                  shuffle=True, num_workers=4)
https://github.com/zaixizhang/CBD/blob/8a7bd37d1fc98f6de3a34427aff116d7877f49be/data_loader.py#L217
https://github.com/zaixizhang/CBD/blob/8a7bd37d1fc98f6de3a34427aff116d7877f49be/data_loader.py#L255
https://github.com/zaixizhang/CBD/blob/8a7bd37d1fc98f6de3a34427aff116d7877f49be/data_loader.py#L261
https://github.com/zaixizhang/CBD/blob/8a7bd37d1fc98f6de3a34427aff116d7877f49be/data_loader.py#L302

======================================
https://github.com/jzhang538/PointCert
======================================

Found 8 times
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False,\
        num_workers=args.num_workers, collate_fn=test_dataset.collate_fn)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True,\
             num_workers=args.num_workers, drop_last=True, collate_fn=train_dataset.collate_fn)
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False,\
        num_workers=args.num_workers, collate_fn=test_dataset.collate_fn)
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False,\
        num_workers=args.num_workers)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True,\
             num_workers=args.num_workers, drop_last=True)
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False,\
        num_workers=args.num_workers)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True,\
             num_workers=args.num_workers, drop_last=True, collate_fn=train_dataset.collate_fn)
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False,\
        num_workers=args.num_workers, collate_fn=test_dataset.collate_fn)
https://github.com/jzhang538/PointCert/blob/cff41be6734636fcc9786e042b9836f22d641210/scenarioII/test_scenarioII.py#L160
https://github.com/jzhang538/PointCert/blob/cff41be6734636fcc9786e042b9836f22d641210/scenarioII/train_provider_scenarioII.py#L96
https://github.com/jzhang538/PointCert/blob/cff41be6734636fcc9786e042b9836f22d641210/scenarioII/train_provider_scenarioII.py#L98
https://github.com/jzhang538/PointCert/blob/cff41be6734636fcc9786e042b9836f22d641210/scenarioIII/test_scenarioIII.py#L99
https://github.com/jzhang538/PointCert/blob/cff41be6734636fcc9786e042b9836f22d641210/scenarioIII/train_customer_scenarioIII.py#L103
https://github.com/jzhang538/PointCert/blob/cff41be6734636fcc9786e042b9836f22d641210/scenarioIII/train_customer_scenarioIII.py#L105
https://github.com/jzhang538/PointCert/blob/cff41be6734636fcc9786e042b9836f22d641210/scenarioIII/train_provider_scenarioIII.py#L96
https://github.com/jzhang538/PointCert/blob/cff41be6734636fcc9786e042b9836f22d641210/scenarioIII/train_provider_scenarioIII.py#L98

====================================
https://github.com/IBM/composite-adv
====================================

Found 2 times
DataLoader(dataset, batch_size=batch_size, num_workers=4, sampler=train_sampler, pin_memory=True)
DataLoader(dataset, batch_size=batch_size, num_workers=4, shuffle=shuffle, pin_memory=True)
https://github.com/IBM/composite-adv/blob/e33fa7c9696c6b8d03b6ca833350349c11c3d5bf/composite_adv/utilities.py#L47
https://github.com/IBM/composite-adv/blob/e33fa7c9696c6b8d03b6ca833350349c11c3d5bf/composite_adv/utilities.py#L51

===========================================================
https://github.com/Alexkael/Randomized-Adversarial-Training
===========================================================

Found 10 times
torch.utils.data.DataLoader(testset, batch_size=args.test_batch_size, shuffle=False, **kwargs)
data.DataLoader(item, batch_size=1000, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(testset, batch_size=args.test_batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=args.test_batch_size, shuffle=False, **kwargs)
data.DataLoader(item, batch_size=1000, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(testset, batch_size=args.test_batch_size, shuffle=False, **kwargs)
https://github.com/Alexkael/Randomized-Adversarial-Training/blob/aaed4772d292c1c16f012814507ee4219f122f4d/AWP_first_second/eval_attack.py#L67
https://github.com/Alexkael/Randomized-Adversarial-Training/blob/aaed4772d292c1c16f012814507ee4219f122f4d/AWP_first_second/eval_autoattack.py#L44
https://github.com/Alexkael/Randomized-Adversarial-Training/blob/aaed4772d292c1c16f012814507ee4219f122f4d/AWP_first_second/train_first_second.py#L102
https://github.com/Alexkael/Randomized-Adversarial-Training/blob/aaed4772d292c1c16f012814507ee4219f122f4d/AWP_first_second/train_first_second.py#L103
https://github.com/Alexkael/Randomized-Adversarial-Training/blob/aaed4772d292c1c16f012814507ee4219f122f4d/AWP_first_second/utils/misc.py#L23
https://github.com/Alexkael/Randomized-Adversarial-Training/blob/aaed4772d292c1c16f012814507ee4219f122f4d/AWP_first_second/utils/misc.py#L81
https://github.com/Alexkael/Randomized-Adversarial-Training/blob/aaed4772d292c1c16f012814507ee4219f122f4d/TRADES_first_second/eval_attack.py#L67
https://github.com/Alexkael/Randomized-Adversarial-Training/blob/aaed4772d292c1c16f012814507ee4219f122f4d/TRADES_first_second/eval_autoattack.py#L44
https://github.com/Alexkael/Randomized-Adversarial-Training/blob/aaed4772d292c1c16f012814507ee4219f122f4d/TRADES_first_second/train_first_second.py#L77
https://github.com/Alexkael/Randomized-Adversarial-Training/blob/aaed4772d292c1c16f012814507ee4219f122f4d/TRADES_first_second/train_first_second.py#L79

================================
https://github.com/luluppang/BCU
================================

Found 83 times
DataLoader(
        prepro_cls_DatasetBD(
            full_dataset_without_transform=train_dataset_without_transform,
            poison_idx=np.zeros(len(train_dataset_without_transform)),  # one-hot to determine which image may take bd_transform
            bd_image_pre_transform=None,
            bd_label_pre_transform=None,
            ori_image_transform_in_loading=train_img_transform,
            ori_label_transform_in_loading=train_label_transfrom,
            add_details_in_preprocess=True,
        ),
        batch_size=args.batch_size,
        shuffle=True,
        drop_last=False
    )
DataLoader(
        prepro_cls_DatasetBD(
            test_dataset_without_transform,
            poison_idx=np.zeros(len(test_dataset_without_transform)),  # one-hot to determine which image may take bd_transform
            bd_image_pre_transform=None,
            bd_label_pre_transform=None,
            ori_image_transform_in_loading=test_img_transform,
            ori_label_transform_in_loading=test_label_transform,
            add_details_in_preprocess=True,
        ),
        batch_size=args.batch_size,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        dataset=adv_train_ds,
        batch_size=args.batch_size,
        shuffle=True,
        drop_last=False,
    )
DataLoader(
        dataset=adv_test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        prepro_cls_DatasetBD(
            full_dataset_without_transform=train_dataset_without_transform,
            poison_idx=np.zeros(len(train_dataset_without_transform)),  # one-hot to determine which image may take bd_transform
            bd_image_pre_transform=None,
            bd_label_pre_transform=None,
            ori_image_transform_in_loading=train_img_transform,
            ori_label_transform_in_loading=train_label_transfrom,
            add_details_in_preprocess=True,
        ),
        batch_size=args.batch_size,
        shuffle=True,
        drop_last=True
    )
DataLoader(
        prepro_cls_DatasetBD(
            test_dataset_without_transform,
            poison_idx=np.zeros(len(test_dataset_without_transform)),  # one-hot to determine which image may take bd_transform
            bd_image_pre_transform=None,
            bd_label_pre_transform=None,
            ori_image_transform_in_loading=test_img_transform,
            ori_label_transform_in_loading=test_label_transform,
            add_details_in_preprocess=True,
        ),
        batch_size=args.batch_size,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        dataset=adv_train_ds,
        batch_size=args.batch_size,
        shuffle=True,
        drop_last=True,
    )
DataLoader(
        dataset=adv_test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset, batch_size=opt.batchsize, num_workers=opt.num_workers, shuffle=True
    )
torch.utils.data.DataLoader(test_dl1.dataset, batch_size=opt.batchsize,
                                                      num_workers=opt.num_workers,
                                                      shuffle=False)
torch.utils.data.DataLoader(reversible_test_ds1, batch_size=opt.batchsize, num_workers=opt.num_workers,
                                                     shuffle=False)
torch.utils.data.DataLoader(reversible_test_ds2, batch_size=opt.batchsize,
                                                      num_workers=opt.num_workers,
                                                      shuffle=True)
torch.utils.data.DataLoader(poison_test_ds, batch_size=opt.batchsize, num_workers=opt.num_workers,
                                                 shuffle=False)
torch.utils.data.DataLoader(cross_test_ds, batch_size=opt.batchsize, num_workers=opt.num_workers,
                                                shuffle=False)
torch.utils.data.DataLoader(
        train_dl1.dataset, batch_size=opt.batchsize, num_workers=opt.num_workers, shuffle=False)
torch.utils.data.DataLoader(
        train_dl2.dataset, batch_size=opt.batchsize, num_workers=opt.num_workers, shuffle=True)
torch.utils.data.DataLoader(
        test_dl1.dataset, batch_size=opt.batchsize, num_workers=opt.num_workers, shuffle=False)
torch.utils.data.DataLoader(
        test_dl2.dataset, batch_size=opt.batchsize, num_workers=opt.num_workers, shuffle=True)
DataLoader(
        prepro_cls_DatasetBD(
            full_dataset_without_transform=train_dataset_without_transform,
            poison_idx=np.zeros(len(train_dataset_without_transform)),
            # one-hot to determine which image may take bd_transform
            bd_image_pre_transform=None,
            bd_label_pre_transform=None,
            ori_image_transform_in_loading=train_img_transform,
            ori_label_transform_in_loading=train_label_transfrom,
            add_details_in_preprocess=True,
        ),
        batch_size=args.batch_size,
        shuffle=True,
        drop_last=True
    )
DataLoader(
        prepro_cls_DatasetBD(
            test_dataset_without_transform,
            poison_idx=np.zeros(len(test_dataset_without_transform)),
            # one-hot to determine which image may take bd_transform
            bd_image_pre_transform=None,
            bd_label_pre_transform=None,
            ori_image_transform_in_loading=test_img_transform,
            ori_label_transform_in_loading=test_label_transform,
            add_details_in_preprocess=True,
        ),
        batch_size=args.batch_size,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        dataset=adv_train_ds,
        batch_size=args.batch_size,
        shuffle=True,
        drop_last=True,
    )
DataLoader(
        dataset=adv_test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        prepro_cls_DatasetBD(
            full_dataset_without_transform=train_dataset_without_transform,
            poison_idx=np.zeros(len(train_dataset_without_transform)),  # one-hot to determine which image may take bd_transform
            bd_image_pre_transform=None,
            bd_label_pre_transform=None,
            ori_image_transform_in_loading=train_img_transform,
            ori_label_transform_in_loading=train_label_transfrom,
            add_details_in_preprocess=True,
        ),
        batch_size=args.batch_size,
        shuffle=True,
        drop_last=True
    )
DataLoader(
        prepro_cls_DatasetBD(
            test_dataset_without_transform,
            poison_idx=np.zeros(len(test_dataset_without_transform)),  # one-hot to determine which image may take bd_transform
            bd_image_pre_transform=None,
            bd_label_pre_transform=None,
            ori_image_transform_in_loading=test_img_transform,
            ori_label_transform_in_loading=test_label_transform,
            add_details_in_preprocess=True,
        ),
        batch_size=args.batch_size,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        dataset = adv_train_ds,
        batch_size=args.batch_size,
        shuffle=True,
        drop_last=True,
    )
DataLoader(
        dataset = adv_test_dataset,
        batch_size= args.batch_size,
        shuffle= False,
        drop_last= False,
    )
torch.utils.data.DataLoader(dataset, batch_size=opt.bs, num_workers=opt.num_workers, shuffle=train)
torch.utils.data.DataLoader(reversible_test_ds, batch_size=opt.bs, num_workers=opt.num_workers, shuffle=False)
torch.utils.data.DataLoader(poison_test_ds, batch_size=opt.bs, num_workers=opt.num_workers,
                                                 shuffle=False)
torch.utils.data.DataLoader(cross_test_ds, batch_size=opt.bs, num_workers=opt.num_workers,
                                                    shuffle=False)
torch.utils.data.DataLoader(
        train_dl.dataset, batch_size=opt.bs, num_workers=opt.num_workers, shuffle=False)
torch.utils.data.DataLoader(
        test_dl.dataset, batch_size=opt.bs, num_workers=opt.num_workers, shuffle=False)
DataLoader(data_set_clean, batch_size=args.batch_size,
                                  shuffle=False, sampler=random_sampler, num_workers=0)
torch.utils.data.DataLoader(data_set_valset, batch_size=args.batch_size, num_workers=args.num_workers,
                                             shuffle=True)
DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers, drop_last=False, shuffle=True, pin_memory=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_set_o, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=True)
torch.utils.data.DataLoader(data_set_valset, batch_size=args.batch_size, num_workers=args.num_workers,shuffle=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers, drop_last=False, shuffle=True, pin_memory=True)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers, drop_last=False, shuffle=True, pin_memory=True)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers, drop_last=False, shuffle=True, pin_memory=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_set_o, batch_size=args.batch_size, num_workers=args.num_workers,
                                              shuffle=True)
torch.utils.data.DataLoader(data_set_valset, batch_size=args.batch_size, num_workers=args.num_workers,
                                             shuffle=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size,
                                                 num_workers=args.num_workers, drop_last=False, shuffle=True,
                                                 pin_memory=True)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size,
                                                    num_workers=args.num_workers, drop_last=False, shuffle=True,
                                                    pin_memory=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size,
                                                 num_workers=args.num_workers, drop_last=False, shuffle=True,
                                                 pin_memory=True)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size,
                                                    num_workers=args.num_workers, drop_last=False, shuffle=True,
                                                    pin_memory=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size,
                                                         num_workers=args.num_workers, drop_last=False, shuffle=True,
                                                         pin_memory=True)
torch.utils.data.DataLoader(data_set_o, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=True)
torch.utils.data.DataLoader(data_set_valset, batch_size=args.batch_size, num_workers=args.num_workers,
                                             shuffle=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_set_o, batch_size=args.batch_size, num_workers=args.num_workers,
											  shuffle=False)
torch.utils.data.DataLoader(data_set_valset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,shuffle=False)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers,shuffle=False)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(
				   data_set_valset,
				   batch_size=args.batch_size,
				   shuffle=shuffle_train,
				   num_workers=args.num_workers,
				   pin_memory=True
			   )
torch.utils.data.DataLoader(
				   data_testset,
				   batch_size=args.batch_size,
				   shuffle=False,
				   num_workers=args.num_workers,
				   pin_memory=True
			   )
torch.utils.data.DataLoader(
				   data_bd_testset,
				   batch_size=args.batch_size,
				   shuffle=False,
				   num_workers=args.num_workers,
				   pin_memory=True
			   )
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_clean_trainset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_set_valset, batch_size=args.batch_size, num_workers=args.num_workers,
                                             shuffle=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=True,pin_memory=True)
DataLoader(train_data,
        batch_size=args.batch_size,
        shuffle=False,
        drop_last=False
    )
DataLoader(trainset, batch_size=int(config['train'][config['args']['dataset']]['BATCH_SIZE']),
                                 shuffle=True, pin_memory=True, num_workers=1)
DataLoader(testset, batch_size=int(config['train'][config['args']['dataset']]['BATCH_SIZE']))
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/badnet_attack.py#L166
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/badnet_attack.py#L181
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/badnet_attack.py#L225
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/badnet_attack.py#L253
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/blended_attack.py#L166
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/blended_attack.py#L181
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/blended_attack.py#L226
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/blended_attack.py#L257
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/inputaware_attack.py#L384
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/inputaware_attack.py#L580
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/inputaware_attack.py#L602
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/inputaware_attack.py#L607
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/inputaware_attack.py#L631
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/inputaware_attack.py#L635
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/inputaware_attack.py#L929
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/inputaware_attack.py#L931
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/inputaware_attack.py#L1011
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/inputaware_attack.py#L1013
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/lc_attack.py#L179
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/lc_attack.py#L195
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/lc_attack.py#L241
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/lc_attack.py#L272
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/sig_attack.py#L167
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/sig_attack.py#L182
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/sig_attack.py#L230
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/sig_attack.py#L261
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/wanet_attack.py#L253
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/wanet_attack.py#L757
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/wanet_attack.py#L796
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/wanet_attack.py#L800
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/wanet_attack.py#L842
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/wanet_attack.py#L926
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/anp/anp.py#L382
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/anp/anp.py#L402
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/anp/anp.py#L418
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/anp/anp.py#L433
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/anp/anp.py#L581
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/anp/anp.py#L604
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/anp/anp.py#L635
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/fp/fp.py#L205
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/fp/fp.py#L225
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/fp/fp.py#L240
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/fp/fp.py#L255
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/fp/fp.py#L768
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/fp/fp.py#L791
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/fp/fp.py#L822
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/distillation_dropout_increase.py#L251
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/distillation_dropout_increase.py#L273
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/distillation_dropout_increase.py#L288
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/distillation_dropout_increase.py#L305
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/distillation_dropout_increase.py#L471
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/distillation_dropout_increase.py#L496
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/distillation_dropout_increase.py#L529
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/ft.py#L203
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/ft.py#L232
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/ft.py#L247
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/ft.py#L262
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/ft.py#L389
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/ft.py#L412
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/ft/ft.py#L443
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/i-bau/i-bau.py#L317
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/i-bau/i-bau.py#L339
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/i-bau/i-bau.py#L354
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/i-bau/i-bau.py#L368
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/i-bau/i-bau.py#L553
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/i-bau/i-bau.py#L581
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/i-bau/i-bau.py#L617
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/mcr/mcr.py#L144
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/mcr/mcr.py#L151
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/mcr/mcr.py#L158
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/mcr/mcr.py#L679
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/mcr/mcr.py#L703
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/mcr/mcr.py#L734
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/nad/nad.py#L532
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/nad/nad.py#L547
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/nad/nad.py#L562
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/nad/nad.py#L581
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/nad/nad.py#L755
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/nad/nad.py#L781
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/defense/nad/nad.py#L815
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/resource/label_consistent/craft_adv_dataset.py#L67
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/utils/dataset/IMAGENET.py#L475
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/utils/dataset/IMAGENET.py#L477

============================
https://github.com/NVlabs/A5
============================

Found 1 times
torch.utils.data.DataLoader(dataset, batch_size=batch_size, num_workers=multiprocessing.cpu_count(), drop_last=True, pin_memory=True)
https://github.com/NVlabs/A5/blob/68d23c41d1c4d7a83f18a3bfd5e65bf36e9aefc2/utils/utils.py#L82

========================================
https://github.com/UCDvision/PatchSearch
========================================

Found 10 times
torch.utils.data.DataLoader(
            val_poisoned_dataset,
            batch_size=256, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=256, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
DataLoader(
        test_images_dataset,
        shuffle=False, batch_size=args.batch_size,
        num_workers=args.workers, pin_memory=True
    )
DataLoader(
        train_val_dataset,
        shuffle=False, batch_size=args.batch_size,
        num_workers=args.workers, pin_memory=True
    )
DataLoader(
            candidate_poison_dataset,
            shuffle=False, batch_size=args.batch_size,
            num_workers=args.workers, pin_memory=True
        )
DataLoader(
        train_dataset,
        batch_size=args.batch_size, shuffle=True,
        num_workers=args.workers, pin_memory=True,
        worker_init_fn=partial(worker_init_fn, args.seed, 0)
    )
DataLoader(
        val_dataset,
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True,
        worker_init_fn=partial(worker_init_fn, args.seed, 0)
    )
DataLoader(
        test_dataset,
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True,
    )
https://github.com/UCDvision/PatchSearch/blob/39f298225dde9e868f4257a5a4c11d6f805bfa1a/main_lincls.py#L350
https://github.com/UCDvision/PatchSearch/blob/39f298225dde9e868f4257a5a4c11d6f805bfa1a/main_lincls.py#L360
https://github.com/UCDvision/PatchSearch/blob/39f298225dde9e868f4257a5a4c11d6f805bfa1a/main_lincls.py#L364
https://github.com/UCDvision/PatchSearch/blob/39f298225dde9e868f4257a5a4c11d6f805bfa1a/main_moco_files_dataset_strong_aug.py#L348
https://github.com/UCDvision/PatchSearch/blob/39f298225dde9e868f4257a5a4c11d6f805bfa1a/patch_search_iterative_search.py#L380
https://github.com/UCDvision/PatchSearch/blob/39f298225dde9e868f4257a5a4c11d6f805bfa1a/patch_search_iterative_search.py#L466
https://github.com/UCDvision/PatchSearch/blob/39f298225dde9e868f4257a5a4c11d6f805bfa1a/patch_search_iterative_search.py#L549
https://github.com/UCDvision/PatchSearch/blob/39f298225dde9e868f4257a5a4c11d6f805bfa1a/patch_search_poison_classifier.py#L258
https://github.com/UCDvision/PatchSearch/blob/39f298225dde9e868f4257a5a4c11d6f805bfa1a/patch_search_poison_classifier.py#L282
https://github.com/UCDvision/PatchSearch/blob/39f298225dde9e868f4257a5a4c11d6f805bfa1a/patch_search_poison_classifier.py#L301

====================================================
https://github.com/UniSerj/Random-Projection-Filters
====================================================

Found 4 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=config.DATA.batch_size, shuffle=True,
        num_workers=config.DATA.workers, pin_memory=True, sampler=None)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(config.DATA.img_size),
            transforms.CenterCrop(config.DATA.crop_size),
            transforms.ToTensor(),
        ])),
        batch_size=config.DATA.batch_size, shuffle=False,
        num_workers=config.DATA.workers, pin_memory=True)
torch.utils.data.DataLoader(
        dataset=train_dataset,
        batch_size=batch_size,
        shuffle=True,
        pin_memory=True,
        num_workers=worker,
    )
torch.utils.data.DataLoader(
        dataset=test_dataset,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=worker,
    )
https://github.com/UniSerj/Random-Projection-Filters/blob/2126be10e8dea71c7693d4c43630a981b77795a0/train_imagenet.py#L143
https://github.com/UniSerj/Random-Projection-Filters/blob/2126be10e8dea71c7693d4c43630a981b77795a0/train_imagenet.py#L147
https://github.com/UniSerj/Random-Projection-Filters/blob/2126be10e8dea71c7693d4c43630a981b77795a0/utils.py#L187
https://github.com/UniSerj/Random-Projection-Filters/blob/2126be10e8dea71c7693d4c43630a981b77795a0/utils.py#L194

====================================
https://github.com/PolyLiYJ/SLAttack
====================================

Found 3 times
DataLoader(dataset, batch_size=1, shuffle=True)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True,drop_last=True)
DataLoader(test_dataset, batch_size=args.batch_size, shuffle=True, drop_last=True)
https://github.com/PolyLiYJ/SLAttack/blob/d11bf2572b4037c8d245289657b3168ce0a93a6f/Evaluate.py#L177
https://github.com/PolyLiYJ/SLAttack/blob/d11bf2572b4037c8d245289657b3168ce0a93a6f/Train_classifier.py#L134
https://github.com/PolyLiYJ/SLAttack/blob/d11bf2572b4037c8d245289657b3168ce0a93a6f/Train_classifier.py#L137

===================================
https://github.com/IBM/BadDiffusion
===================================

Found 17 times
DataLoader(datasets, batch_size=self.__batch_size, shuffle=self.__shuffle, pin_memory=True, num_workers=8)
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=num_workers)
torch.utils.data.DataLoader(
        train_dataset,
        shuffle=True,
        collate_fn=collate_fn,
        batch_size=args.train_batch_size,
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(
        train_dataset,
        shuffle=not args.streaming,
        collate_fn=collate_fn,
        batch_size=total_train_batch_size,
        num_workers=args.dataloader_num_workers,
        drop_last=True,
    )
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=True,
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(sample_dataset, batch_size=total_sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset, batch_size=total_train_batch_size, shuffle=True, collate_fn=collate_fn, drop_last=True
    )
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=True,
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(
        train_dataset,
        shuffle=True,
        collate_fn=collate_fn,
        batch_size=args.train_batch_size,
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(
        train_dataset,
        shuffle=True,
        collate_fn=collate_fn,
        batch_size=args.train_batch_size,
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(
        train_dataset, shuffle=True, collate_fn=collate_fn, batch_size=total_train_batch_size, drop_last=True
    )
torch.utils.data.DataLoader(
        train_dataset,
        shuffle=True,
        collate_fn=collate_fn,
        batch_size=args.train_batch_size,
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, num_workers=args.dataloader_num_workers
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=total_train_batch_size, shuffle=True, drop_last=True, collate_fn=collate_fn
    )
torch.utils.data.DataLoader(
        dataset, batch_size=args.train_batch_size, shuffle=True, num_workers=args.dataloader_num_workers
    )
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/dataset.py#L273
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/fid_score.py#L120
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/controlnet/train_controlnet.py#L830
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/controlnet/train_controlnet_flax.py#L728
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/dreambooth/train_dreambooth.py#L648
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/dreambooth/train_dreambooth.py#L818
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/dreambooth/train_dreambooth_flax.py#L372
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/dreambooth/train_dreambooth_flax.py#L464
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/dreambooth/train_dreambooth_lora.py#L596
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/dreambooth/train_dreambooth_lora.py#L762
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/instruct_pix2pix/train_instruct_pix2pix.py#L679
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/text_to_image/train_text_to_image.py#L684
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/text_to_image/train_text_to_image_flax.py#L365
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/text_to_image/train_text_to_image_lora.py#L604
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/textual_inversion/textual_inversion.py#L665
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/textual_inversion/textual_inversion_flax.py#L457
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/diffusers/examples/unconditional_image_generation/train_unconditional.py#L485

================================================
https://github.com/MIFPE/Efficient-Loss-Function
================================================

Found 1 times
data.DataLoader(item, batch_size=1000, shuffle=False, num_workers=0)
https://github.com/MIFPE/Efficient-Loss-Function/blob/39bc913155b694e18142cb10282492c4f413dead/eval_model_robustness.py#L49

======================================
https://github.com/GiantSeaweed/DECREE
======================================

Found 12 times
DataLoader(shadow_data, batch_size=args.batch_size, 
                            shuffle=True, num_workers=2, 
                            pin_memory=True, drop_last=True)
DataLoader(memory_data, batch_size=args.batch_size, 
                            shuffle=False, num_workers=2, pin_memory=True)
DataLoader(test_data_clean, batch_size=args.batch_size, 
                                shuffle=False, num_workers=2, pin_memory=True)
DataLoader(test_data_backdoor, 
                                    batch_size=args.batch_size, shuffle=False, 
                                    num_workers=2, pin_memory=True)
DataLoader(dataset, batch_size=args.batch_size, 
                            num_workers=4, pin_memory=True, shuffle=True)
DataLoader(dataset, batch_size=args.batch_size, 
                            num_workers=4, pin_memory=True, shuffle=True)
DataLoader(clean_train_data, 
                    batch_size=args.batch_size, pin_memory=True, shuffle=True)
DataLoader(train_data, batch_size=args.batch_size, shuffle=False, num_workers=2, pin_memory=True)
DataLoader(test_data_clean, batch_size=args.batch_size, shuffle=False, num_workers=2,
                                   pin_memory=True)
DataLoader(test_data_backdoor, batch_size=args.batch_size, shuffle=False, num_workers=2,
                                      pin_memory=True)
DataLoader(target_dataset, batch_size=args.batch_size, shuffle=False, num_workers=2, pin_memory=True)
DataLoader(
        TensorDataset(tensor_x, tensor_y),
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=num_workers,
        pin_memory=pin_memory
    )
https://github.com/GiantSeaweed/DECREE/blob/9c13b88bba862aefbc85a1d79dbd3e8d12458a24/attack_encoder.py#L231
https://github.com/GiantSeaweed/DECREE/blob/9c13b88bba862aefbc85a1d79dbd3e8d12458a24/attack_encoder.py#L242
https://github.com/GiantSeaweed/DECREE/blob/9c13b88bba862aefbc85a1d79dbd3e8d12458a24/attack_encoder.py#L244
https://github.com/GiantSeaweed/DECREE/blob/9c13b88bba862aefbc85a1d79dbd3e8d12458a24/attack_encoder.py#L246
https://github.com/GiantSeaweed/DECREE/blob/9c13b88bba862aefbc85a1d79dbd3e8d12458a24/compute_zscore.py#L71
https://github.com/GiantSeaweed/DECREE/blob/9c13b88bba862aefbc85a1d79dbd3e8d12458a24/compute_zscore.py#L73
https://github.com/GiantSeaweed/DECREE/blob/9c13b88bba862aefbc85a1d79dbd3e8d12458a24/main.py#L200
https://github.com/GiantSeaweed/DECREE/blob/9c13b88bba862aefbc85a1d79dbd3e8d12458a24/training_downstream_classifier.py#L63
https://github.com/GiantSeaweed/DECREE/blob/9c13b88bba862aefbc85a1d79dbd3e8d12458a24/training_downstream_classifier.py#L64
https://github.com/GiantSeaweed/DECREE/blob/9c13b88bba862aefbc85a1d79dbd3e8d12458a24/training_downstream_classifier.py#L66
https://github.com/GiantSeaweed/DECREE/blob/9c13b88bba862aefbc85a1d79dbd3e8d12458a24/training_downstream_classifier.py#L69
https://github.com/GiantSeaweed/DECREE/blob/9c13b88bba862aefbc85a1d79dbd3e8d12458a24/evaluation/nn_classifier.py#L53

=======================================
https://github.com/zeyangsha/Cont-Steal
=======================================

Found 11 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=32,
        shuffle=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=32,
        shuffle=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        linear_dataset,
        batch_size=32,
        shuffle=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=32,
        shuffle=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=32,
        shuffle=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        linear_dataset,
        batch_size=32,
        shuffle=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        linear_dataset,
        batch_size=32,
        shuffle=True,

        drop_last=True,
    )
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=32,
        shuffle=True,

        drop_last=True,
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=128,
        shuffle=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=128,
        shuffle=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        linear_dataset,
        batch_size=128,
        shuffle=True,
        drop_last=True,
    )
https://github.com/zeyangsha/Cont-Steal/blob/49233dd9832e95734d030ec220b76d4d347d50e0/contrastive_steal.py#L42
https://github.com/zeyangsha/Cont-Steal/blob/49233dd9832e95734d030ec220b76d4d347d50e0/contrastive_steal.py#L49
https://github.com/zeyangsha/Cont-Steal/blob/49233dd9832e95734d030ec220b76d4d347d50e0/contrastive_steal.py#L55
https://github.com/zeyangsha/Cont-Steal/blob/49233dd9832e95734d030ec220b76d4d347d50e0/normal_steal.py#L43
https://github.com/zeyangsha/Cont-Steal/blob/49233dd9832e95734d030ec220b76d4d347d50e0/normal_steal.py#L50
https://github.com/zeyangsha/Cont-Steal/blob/49233dd9832e95734d030ec220b76d4d347d50e0/normal_steal.py#L56
https://github.com/zeyangsha/Cont-Steal/blob/49233dd9832e95734d030ec220b76d4d347d50e0/train_linear.py#L29
https://github.com/zeyangsha/Cont-Steal/blob/49233dd9832e95734d030ec220b76d4d347d50e0/train_linear.py#L37
https://github.com/zeyangsha/Cont-Steal/blob/49233dd9832e95734d030ec220b76d4d347d50e0/train_surrogate_linear.py#L39
https://github.com/zeyangsha/Cont-Steal/blob/49233dd9832e95734d030ec220b76d4d347d50e0/train_surrogate_linear.py#L45
https://github.com/zeyangsha/Cont-Steal/blob/49233dd9832e95734d030ec220b76d4d347d50e0/train_surrogate_linear.py#L51

=============================
https://github.com/PKU-ML/CFA
=============================

Found 12 times
torch.utils.data.DataLoader(ori_set, batch_size=128, shuffle=False, sampler=train_sampler)
torch.utils.data.DataLoader(valid_set, batch_size=100, shuffle=False, sampler=valid_sampler)
torch.utils.data.DataLoader(ori_set, batch_size=128, shuffle=False, sampler=train_sampler)
torch.utils.data.DataLoader(valid_set, batch_size=100, shuffle=False, sampler=valid_sampler)
torch.utils.data.DataLoader(
            datasets.CIFAR10(PATH, train=True, download=True, transform=train_transform_),
            batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(
            datasets.CIFAR10(PATH, train=False, download=True, transform=transform_),
            batch_size=batch_size, shuffle=False)
torch.utils.data.DataLoader(
            datasets.CIFAR100(PATH, train=True, download=True, transform=train_transform_),
            batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(
            datasets.CIFAR100(PATH, train=False, download=True, transform=transform_),
            batch_size=batch_size, shuffle=False)
torch.utils.data.DataLoader(
            datasets.CIFAR10(PATH, train=False, download=True, transform=transform_),
            batch_size=batch_size, shuffle=False)
torch.utils.data.DataLoader(
            datasets.CIFAR100(PATH, train=False, download=True, transform=transform_),
            batch_size=batch_size, shuffle=False)
torch.utils.data.DataLoader(
            datasets.CIFAR10(PATH, train=True, download=True, transform=train_transform_),
            batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(
            datasets.CIFAR10(PATH, train=False, download=True, transform=transform_),
            batch_size=batch_size, shuffle=False)
https://github.com/PKU-ML/CFA/blob/0284c4e2a4b9a36c0bbd79e259e03dc9e723e59d/generate_validation.py#L44
https://github.com/PKU-ML/CFA/blob/0284c4e2a4b9a36c0bbd79e259e03dc9e723e59d/generate_validation.py#L45
https://github.com/PKU-ML/CFA/blob/0284c4e2a4b9a36c0bbd79e259e03dc9e723e59d/generate_validation.py#L76
https://github.com/PKU-ML/CFA/blob/0284c4e2a4b9a36c0bbd79e259e03dc9e723e59d/generate_validation.py#L77
https://github.com/PKU-ML/CFA/blob/0284c4e2a4b9a36c0bbd79e259e03dc9e723e59d/utils.py#L35
https://github.com/PKU-ML/CFA/blob/0284c4e2a4b9a36c0bbd79e259e03dc9e723e59d/utils.py#L38
https://github.com/PKU-ML/CFA/blob/0284c4e2a4b9a36c0bbd79e259e03dc9e723e59d/utils.py#L50
https://github.com/PKU-ML/CFA/blob/0284c4e2a4b9a36c0bbd79e259e03dc9e723e59d/utils.py#L53
https://github.com/PKU-ML/CFA/blob/0284c4e2a4b9a36c0bbd79e259e03dc9e723e59d/utils.py#L65
https://github.com/PKU-ML/CFA/blob/0284c4e2a4b9a36c0bbd79e259e03dc9e723e59d/utils.py#L75
https://github.com/PKU-ML/CFA/blob/0284c4e2a4b9a36c0bbd79e259e03dc9e723e59d/utils.py#L89
https://github.com/PKU-ML/CFA/blob/0284c4e2a4b9a36c0bbd79e259e03dc9e723e59d/utils.py#L95

=======================================
https://github.com/CHELSEA234/HiFi_IFDL
=======================================

Found 7 times
DataLoader(
								train_dataset, 
								batch_size=args.train_bs, 
								shuffle=True, 
								# shuffle=False,
								num_workers=8
								)
DataLoader(
								val_dataset, 
								batch_size=bs,
								shuffle=shuffle, 
								# shuffle=True, 
								num_workers=8
								)
DataLoader(ValColumbia(args), batch_size=batch_size, shuffle=False,
									 num_workers=0)
DataLoader(ValCoverage(args), batch_size=batch_size, shuffle=False,
									 num_workers=0)
DataLoader(ValCasia(args), batch_size=batch_size, shuffle=False,
									 num_workers=0)
DataLoader(ValNIST16(args), batch_size=batch_size, shuffle=False,
									 num_workers=0)
DataLoader(ValIMD2020(args), batch_size=batch_size, shuffle=False,
									 num_workers=0)
https://github.com/CHELSEA234/HiFi_IFDL/blob/079fe906c34c2bf7b2a3b494142f2d09ea21908f/IMD_dataloader.py#L11
https://github.com/CHELSEA234/HiFi_IFDL/blob/079fe906c34c2bf7b2a3b494142f2d09ea21908f/IMD_dataloader.py#L22
https://github.com/CHELSEA234/HiFi_IFDL/blob/079fe906c34c2bf7b2a3b494142f2d09ea21908f/IMD_dataloader.py#L35
https://github.com/CHELSEA234/HiFi_IFDL/blob/079fe906c34c2bf7b2a3b494142f2d09ea21908f/IMD_dataloader.py#L39
https://github.com/CHELSEA234/HiFi_IFDL/blob/079fe906c34c2bf7b2a3b494142f2d09ea21908f/IMD_dataloader.py#L43
https://github.com/CHELSEA234/HiFi_IFDL/blob/079fe906c34c2bf7b2a3b494142f2d09ea21908f/IMD_dataloader.py#L47
https://github.com/CHELSEA234/HiFi_IFDL/blob/079fe906c34c2bf7b2a3b494142f2d09ea21908f/IMD_dataloader.py#L51

=======================================
https://github.com/WUSTL-CSPL/SlowLiDAR
=======================================

Found 2 times
DataLoader(train_dataset, shuffle=True, batch_size=batch_size, num_workers=3)
DataLoader(val_dataset, shuffle=False, batch_size=batch_size * 4, num_workers=8)
https://github.com/WUSTL-CSPL/SlowLiDAR/blob/1bf7ee19edadd648808e21c604cd7d6fdd7953fa/datagen.py#L310
https://github.com/WUSTL-CSPL/SlowLiDAR/blob/1bf7ee19edadd648808e21c604cd7d6fdd7953fa/datagen.py#L315

=================================
https://github.com/boyellow/AdaAD
=================================

Found 4 times
torch.utils.data.DataLoader(
    train_data,
    batch_size=args.bs,
    shuffle=True,
    num_workers=4,
    pin_memory=True)
torch.utils.data.DataLoader(
    test_data,
    batch_size=400,
    shuffle=False,
    num_workers=4,
    pin_memory=True)
torch.utils.data.DataLoader(
    train_data,
    batch_size=args.bs,
    shuffle=True,
    num_workers=4,
    pin_memory=True)
torch.utils.data.DataLoader(
    test_data,
    batch_size=args.bs,
    shuffle=False,
    num_workers=4,
    pin_memory=True)
https://github.com/boyellow/AdaAD/blob/9e5c6e5ff73052af196065439517562d37eff6e6/main.py#L159
https://github.com/boyellow/AdaAD/blob/9e5c6e5ff73052af196065439517562d37eff6e6/main.py#L165
https://github.com/boyellow/AdaAD/blob/9e5c6e5ff73052af196065439517562d37eff6e6/main_eval.py#L30
https://github.com/boyellow/AdaAD/blob/9e5c6e5ff73052af196065439517562d37eff6e6/main_eval.py#L36

===============================
https://github.com/uhiu/StyLess
===============================

Found 2 times
torch.utils.data.DataLoader(data_test,
                                              batch_size=min(50, len(data_test)),
                                              shuffle=False,
                                              num_workers=1,
                                              pin_memory=False)
torch.utils.data.DataLoader(data_test,
                                              batch_size=1,
                                              shuffle=False,
                                              num_workers=1,
                                              pin_memory=False)
https://github.com/uhiu/StyLess/blob/c64415343f73620a1b599f878566e9b340ef77ba/eval.py#L96
https://github.com/uhiu/StyLess/blob/c64415343f73620a1b599f878566e9b340ef77ba/styless_attack.py#L205

=================================
https://github.com/dreamflake/CFM
=================================

Found 9 times
DataLoader(trainset, **kwargs)
DataLoader(testset, num_workers=4, batch_size=100, shuffle=False, pin_memory=True)
DataLoader(testset, **kwargs)
DataLoader(testset, batch_size=100, shuffle=False, num_workers=4)
DataLoader(train_set, batch_size=batch_size, 
            shuffle=shuffle_train, num_workers=workers, pin_memory=True)
DataLoader(test_set, batch_size=val_batch_size, 
            shuffle=shuffle_val, num_workers=workers, pin_memory=True)
ch.utils.data.DataLoader(dataset, num_workers=workers, 
                        batch_size=batch_size, shuffle=shuffle)
DataLoader(
            dataset,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            shuffle=True,
            drop_last=True,
            pin_memory=True,
        )
DataLoader(
            dataset,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            drop_last=True,
            pin_memory=True,
        )
https://github.com/dreamflake/CFM/blob/a402db042d997d9f32b9a3967b58fe2b386f1b2d/DVERGE/utils.py#L132
https://github.com/dreamflake/CFM/blob/a402db042d997d9f32b9a3967b58fe2b386f1b2d/DVERGE/utils.py#L133
https://github.com/dreamflake/CFM/blob/a402db042d997d9f32b9a3967b58fe2b386f1b2d/DVERGE/utils.py#L153
https://github.com/dreamflake/CFM/blob/a402db042d997d9f32b9a3967b58fe2b386f1b2d/DVERGE/eval/eval_bbox.py#L27
https://github.com/dreamflake/CFM/blob/a402db042d997d9f32b9a3967b58fe2b386f1b2d/MadryLab/loaders.py#L89
https://github.com/dreamflake/CFM/blob/a402db042d997d9f32b9a3967b58fe2b386f1b2d/MadryLab/loaders.py#L92
https://github.com/dreamflake/CFM/blob/a402db042d997d9f32b9a3967b58fe2b386f1b2d/MadryLab/loaders.py#L254
https://github.com/dreamflake/CFM/blob/a402db042d997d9f32b9a3967b58fe2b386f1b2d/PyTorch_CIFAR10/data.py#L58
https://github.com/dreamflake/CFM/blob/a402db042d997d9f32b9a3967b58fe2b386f1b2d/PyTorch_CIFAR10/data.py#L76

==================================
https://github.com/jpzhang1810/TGR
==================================

Found 3 times
DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=0)
DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=0)
DataLoader(dataset, batch_size=batch_size, shuffle=False, num_workers=0)
https://github.com/jpzhang1810/TGR/blob/97665de85959e2c71894eb9b28acff755e657eba/attack.py#L33
https://github.com/jpzhang1810/TGR/blob/97665de85959e2c71894eb9b28acff755e657eba/evaluate.py#L30
https://github.com/jpzhang1810/TGR/blob/97665de85959e2c71894eb9b28acff755e657eba/evaluate_cnn.py#L69

===============================================================
https://github.com/vinusankars/Convolution-based-Unlearnability
===============================================================

Found 11 times
DataLoader(dataset=clean_train_dataset, batch_size=batch_size,
                                shuffle=False, pin_memory=True,
                                drop_last=False, num_workers=4)
DataLoader(dataset=clean_test_dataset, batch_size=512,
                                shuffle=False, pin_memory=True,
                                drop_last=False, num_workers=4)
DataLoader(dataset=unlearnable_dataset, batch_size=500,
                                    shuffle=False, pin_memory=True,
                                    drop_last=False, num_workers=4)
DataLoader(dataset=unlearnable_dataset, batch_size=batch_size,
                                shuffle=True, pin_memory=True,
                                drop_last=False, num_workers=4)
DataLoader(dataset=clean_test_dataset, batch_size=batch_size,
                                shuffle=True, pin_memory=True,
                                drop_last=False, num_workers=4)
DataLoader(dataset=clean_train_dataset, batch_size=batch_size,
                                shuffle=False, pin_memory=True,
                                drop_last=False, num_workers=12)
DataLoader(dataset=clean_test_dataset, batch_size=batch_size,
                                shuffle=False, pin_memory=True,
                                drop_last=False, num_workers=12)
DataLoader(dataset=unlearnable_dataset, batch_size=500,
                                    shuffle=False, pin_memory=True,
                                    drop_last=False, num_workers=12)
DataLoader(dataset=unlearnable_dataset, batch_size=batch_size,
                                shuffle=True, pin_memory=True,
                                drop_last=False, num_workers=12)
DataLoader(dataset=clean_train_dataset, batch_size=batch_size,
                                shuffle=False, pin_memory=True,
                                drop_last=False, num_workers=12)
DataLoader(dataset=clean_test_dataset, batch_size=batch_size,
                                shuffle=True, pin_memory=True,
                                drop_last=False, num_workers=12)
https://github.com/vinusankars/Convolution-based-Unlearnability/blob/ff58b1c8d3a1a6013ca07a060e29d7f6a5276f21/final_filter_unlearnable.py#L55
https://github.com/vinusankars/Convolution-based-Unlearnability/blob/ff58b1c8d3a1a6013ca07a060e29d7f6a5276f21/final_filter_unlearnable.py#L59
https://github.com/vinusankars/Convolution-based-Unlearnability/blob/ff58b1c8d3a1a6013ca07a060e29d7f6a5276f21/final_filter_unlearnable.py#L110
https://github.com/vinusankars/Convolution-based-Unlearnability/blob/ff58b1c8d3a1a6013ca07a060e29d7f6a5276f21/final_filter_unlearnable.py#L235
https://github.com/vinusankars/Convolution-based-Unlearnability/blob/ff58b1c8d3a1a6013ca07a060e29d7f6a5276f21/final_filter_unlearnable.py#L240
https://github.com/vinusankars/Convolution-based-Unlearnability/blob/ff58b1c8d3a1a6013ca07a060e29d7f6a5276f21/final_muladv.py#L24
https://github.com/vinusankars/Convolution-based-Unlearnability/blob/ff58b1c8d3a1a6013ca07a060e29d7f6a5276f21/final_muladv.py#L28
https://github.com/vinusankars/Convolution-based-Unlearnability/blob/ff58b1c8d3a1a6013ca07a060e29d7f6a5276f21/final_muladv.py#L69
https://github.com/vinusankars/Convolution-based-Unlearnability/blob/ff58b1c8d3a1a6013ca07a060e29d7f6a5276f21/final_muladv.py#L111
https://github.com/vinusankars/Convolution-based-Unlearnability/blob/ff58b1c8d3a1a6013ca07a060e29d7f6a5276f21/final_muladv.py#L115
https://github.com/vinusankars/Convolution-based-Unlearnability/blob/ff58b1c8d3a1a6013ca07a060e29d7f6a5276f21/final_muladv.py#L119

====================================
https://github.com/PKU-ML/Generalist
====================================

Found 3 times
torch.utils.data.DataLoader(trainset, batch_size=128, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=128, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
https://github.com/PKU-ML/Generalist/blob/f0dc15343715acb786584aa8552a4187bcfef4da/main.py#L61
https://github.com/PKU-ML/Generalist/blob/f0dc15343715acb786584aa8552a4187bcfef4da/main.py#L63
https://github.com/PKU-ML/Generalist/blob/f0dc15343715acb786584aa8552a4187bcfef4da/utils/misc.py#L23

=====================================================
https://github.com/zhichao-lu/robust-residual-network
=====================================================

Found 8 times
torch.utils.data.DataLoader(dataset=train_dataset,
                                                           batch_size=train_bs_per, sampler=sampler_train,
                                                           pin_memory=True,
                                                           drop_last=True,
                                                           num_workers=16)
torch.utils.data.DataLoader(
    dataset=test_dataset, batch_size=test_bs_per, sampler=sampler_test, pin_memory=True, drop_last=False, num_workers=8)
torch.utils.data.DataLoader(
    dataset=val_dataset, batch_size=test_bs_per, sampler=sampler_eval, pin_memory=True, drop_last=False, num_workers=8)
torch.utils.data.DataLoader(dataset=dataset_train,
                                                           batch_size=train_bs_per, sampler=sampler_train,
                                                           pin_memory=True,
                                                           drop_last=True,
                                                           num_workers=num_workers)
torch.utils.data.DataLoader(dataset=dataset_test,
                                                          batch_size=test_bs_per, sampler=sampler_test,
                                                          pin_memory=True,
                                                          drop_last=False,
                                                          num_workers=num_workers)
DataLoader(dataset=train_dataset,
                                                       batch_sampler=train_batch_sampler,
                                                       pin_memory=True,
                                                       num_workers=self.num_of_workers)
DataLoader(dataset=train_dataset,
                                                       batch_size=self.train_batch_size,
                                                       shuffle=True,
                                                       pin_memory=True,
                                                       drop_last=True,
                                                       num_workers=self.num_of_workers)
DataLoader(dataset=test_dataset,
                                                  batch_size=self.eval_batch_size,
                                                  shuffle=False,
                                                  pin_memory=True,
                                                  num_workers=self.num_of_workers)
https://github.com/zhichao-lu/robust-residual-network/blob/d0b2d9d0f80fe64449b682d6bf7e5f85d72676a7/adv-main_dist.py#L98
https://github.com/zhichao-lu/robust-residual-network/blob/d0b2d9d0f80fe64449b682d6bf7e5f85d72676a7/adv-main_dist.py#L109
https://github.com/zhichao-lu/robust-residual-network/blob/d0b2d9d0f80fe64449b682d6bf7e5f85d72676a7/adv-main_dist.py#L111
https://github.com/zhichao-lu/robust-residual-network/blob/d0b2d9d0f80fe64449b682d6bf7e5f85d72676a7/main_dist.py#L136
https://github.com/zhichao-lu/robust-residual-network/blob/d0b2d9d0f80fe64449b682d6bf7e5f85d72676a7/main_dist.py#L142
https://github.com/zhichao-lu/robust-residual-network/blob/d0b2d9d0f80fe64449b682d6bf7e5f85d72676a7/core/dataset.py#L197
https://github.com/zhichao-lu/robust-residual-network/blob/d0b2d9d0f80fe64449b682d6bf7e5f85d72676a7/core/dataset.py#L202
https://github.com/zhichao-lu/robust-residual-network/blob/d0b2d9d0f80fe64449b682d6bf7e5f85d72676a7/core/dataset.py#L209

==================================
https://github.com/CGCL-codes/TeCo
==================================

Found 4 times
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers, drop_last=False, shuffle=False, pin_memory=False)
torch.utils.data.DataLoader(data_bd_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=False,pin_memory=False)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers, drop_last=False, shuffle=False, pin_memory=False)
torch.utils.data.DataLoader(data_clean_testset, batch_size=args.batch_size, num_workers=args.num_workers,drop_last=False, shuffle=False,pin_memory=False)
https://github.com/CGCL-codes/TeCo/blob/4eacfaf49f0215a8ab2ffe3a94bee6268a3c4e63/BackdoorBench-v1.0-merge/defense/teco/teco.py#L191
https://github.com/CGCL-codes/TeCo/blob/4eacfaf49f0215a8ab2ffe3a94bee6268a3c4e63/BackdoorBench-v1.0-merge/defense/teco/teco.py#L221
https://github.com/CGCL-codes/TeCo/blob/4eacfaf49f0215a8ab2ffe3a94bee6268a3c4e63/BackdoorBench-v1.0-merge/defense/teco/teco.py#L248
https://github.com/CGCL-codes/TeCo/blob/4eacfaf49f0215a8ab2ffe3a94bee6268a3c4e63/BackdoorBench-v1.0-merge/defense/teco/teco.py#L278

=================================
https://github.com/qianyuzqy/IADG
=================================

Found 5 times
data.DataLoader(dataset,
                                 batch_size=batch_size,
                                 shuffle=shuffle,
                                 sampler=sampler,
                                 num_workers=10,
                                 pin_memory=True,
                                 worker_init_fn=_init_fn)
DataLoader(train_dataset, batch_size=2, shuffle=True, num_workers=0, pin_memory=True)
DataLoader(train_dataset, batch_size=2, shuffle=True, num_workers=0, pin_memory=True)
DataLoader(train_dataset, batch_size=2, shuffle=True, num_workers=0, pin_memory=True)
DataLoader(train_dataset, batch_size=2, shuffle=True, num_workers=0, pin_memory=True)
https://github.com/qianyuzqy/IADG/blob/b8959b2ef8c43dfb8d36df703d827d3356f23948/dataloaders/DG_dataloader.py#L40
https://github.com/qianyuzqy/IADG/blob/b8959b2ef8c43dfb8d36df703d827d3356f23948/dataloaders/DG_dataset.py#L313
https://github.com/qianyuzqy/IADG/blob/b8959b2ef8c43dfb8d36df703d827d3356f23948/dataloaders/DG_dataset.py#L328
https://github.com/qianyuzqy/IADG/blob/b8959b2ef8c43dfb8d36df703d827d3356f23948/dataloaders/DG_dataset.py#L342
https://github.com/qianyuzqy/IADG/blob/b8959b2ef8c43dfb8d36df703d827d3356f23948/dataloaders/DG_dataset.py#L356

===================================
https://github.com/ShiqiYu/OpenGait
===================================

Found 1 times
tordata.DataLoader(
            dataset=dataset,
            batch_sampler=sampler,
            collate_fn=CollateFn(dataset.label_set, sampler_cfg),
            num_workers=data_cfg['num_workers'])
https://github.com/ShiqiYu/OpenGait/blob/b672613f630bdc4313fabbe64de5cfa75f003ea6/opengait/modeling/base_model.py#L214

=================================
https://github.com/sunyiyou/SAFAS
=================================

Found 2 times
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, num_workers=4)
DataLoader(test_set[data_name_list_test[0]], batch_size=args.batch_size, shuffle=False, num_workers=4)
https://github.com/sunyiyou/SAFAS/blob/72436d496d40c826dc1dc3b5e3c3bb2d6e1deb44/train.py#L100
https://github.com/sunyiyou/SAFAS/blob/72436d496d40c826dc1dc3b5e3c3bb2d6e1deb44/train.py#L103

====================================
https://github.com/mk-minchul/dcface
====================================

Found 13 times
DataLoader(
            dataset=self.data_train,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            shuffle=True,
        )
DataLoader(
            dataset=self.data_val,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            shuffle=False,
        )
DataLoader(
            dataset=self.data_test,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            shuffle=False,
        )
DataLoader(dataset=data_train, batch_size=32, num_workers=0, shuffle=False)
DataLoader(id_dataset, batch_size=64, num_workers=0, shuffle=False)
DataLoader(datagen_dataset, num_workers=num_workers, batch_size=1, shuffle=False, collate_fn=collate_fn)
DataLoader(datagen_dataset, num_workers=num_workers, batch_size=1, shuffle=False, collate_fn=collate_fn)
DataLoader(image_dataset, batch_size=batch_size, shuffle=False, drop_last=False, num_workers=num_workers)
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=True,
        shuffle=False,
        drop_last=False,
        sampler=sampler,
    )
DataLoader(
            FaceDetectionDataset(
                label_path=TRAIN_LABEL_PATH,
                image_path=TRAIN_IMAGE_PATH,
                transform=from_dict(self.config.train_aug),
                preproc=self.preproc,
                rotate90=self.config.train_parameters.rotate90,
            ),
            batch_size=self.config.train_parameters.batch_size,
            num_workers=self.config.num_workers,
            shuffle=True,
            pin_memory=True,
            drop_last=False,
            collate_fn=detection_collate,
        )
DataLoader(
            FaceDetectionDataset(
                label_path=VAL_LABEL_PATH,
                image_path=VAL_IMAGE_PATH,
                transform=from_dict(self.config.val_aug),
                preproc=self.preproc,
                rotate90=self.config.val_parameters.rotate90,
            ),
            batch_size=self.config.val_parameters.batch_size,
            num_workers=self.config.num_workers,
            shuffle=False,
            pin_memory=True,
            drop_last=True,
            collate_fn=detection_collate,
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=0, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=0, drop_last=True
        )
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/datamodules/face_datamodule.py#L66
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/datamodules/face_datamodule.py#L75
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/datamodules/face_datamodule.py#L84
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/dataset/encoded_dataset.py#L60
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/extra_visualization.py#L97
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/extra_visualization.py#L194
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/extra_visualization.py#L269
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/record.py#L120
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/stage1/align_faces/retinaface/inference.py#L238
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/stage1/align_faces/retinaface/train.py#L59
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/stage1/align_faces/retinaface/train.py#L77
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/stage1/unconditional_generation/diffusion/image_datasets.py#L59
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/stage1/unconditional_generation/diffusion/image_datasets.py#L63

=======================================================
https://github.com/koushiksrivats/face_attribute_attack
=======================================================

Found 2 times
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, drop_last=False, num_workers=8)
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size ,shuffle=False, drop_last=False, num_workers=8)
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/classifier_training.py#L182
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/classifier_training.py#L183

=====================================
https://github.com/YixinYang-00/HDRev
=====================================

Found 1 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.num_threads))
https://github.com/YixinYang-00/HDRev/blob/769b339b17c07f2479110d16f2c1276995399cf1/data_processing/__init__.py#L75

============================================
https://github.com/AgainstEntropy/NLOS-Track
============================================

Found 2 times
DataLoader(train_dataset, **self.loader_kwargs, worker_init_fn=seed_worker, drop_last=True)
DataLoader(val_dataset, **self.loader_kwargs, worker_init_fn=seed_worker, drop_last=False)
https://github.com/AgainstEntropy/NLOS-Track/blob/a89e3f29aabf8c456a2c994001d6135db38047e1/utils/trainer.py#L229
https://github.com/AgainstEntropy/NLOS-Track/blob/a89e3f29aabf8c456a2c994001d6135db38047e1/utils/trainer.py#L230

==================================================
https://github.com/google-research/google-research
==================================================

Found 216 times
DataLoader(
      dataset_collection.val_f,
      batch_size=args.dataset.val_batch_size,
      shuffle=False,
  )
DataLoader(
        dataset_collection.val_f,
        batch_size=10 * args.dataset.val_batch_size,
        shuffle=False,
    )
DataLoader(
          dataset, shuffle=False, batch_size=args.dataset.val_batch_size
      )
DataLoader(
      dataset_collection.val_f,
      batch_size=args.dataset.val_batch_size,
      shuffle=False,
  )
DataLoader(
      dataset_collection.val_f,
      batch_size=args.dataset.val_batch_size,
      shuffle=False,
  )
DataLoader(
        dataset_collection.val_f,
        batch_size=10 * args.dataset.val_batch_size,
        shuffle=False,
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
              d,
              batch_size=self.hparams.dataset.val_batch_size,
              shuffle=False,
              num_workers=2,
          )
DataLoader(
          dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
      )
DataLoader(
          datasets[m],
          batch_size=self.hparams.dataset.val_batch_size,
          shuffle=False,
      )
DataLoader(
            datasets[m],
            batch_size=self.hparams.dataset.val_batch_size,
            shuffle=False,
        )
DataLoader(
          dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
      )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        train_f,
        shuffle=True,
        batch_size=new_params.model[model_cls.model_type]['batch_size'],
        drop_last=True,
        collate_fn=partial(
            model_cls.collate_fn_augment_with_masked_vitals,
            has_vitals=model.has_vitals,
            autoregressive=model.autoregressive,
        ),
    )
DataLoader(
        train_f,
        shuffle=True,
        batch_size=new_params.model[model_cls.model_type]['batch_size'],
        drop_last=True,
    )
DataLoader(
      val_f,
      shuffle=False,
      batch_size=new_params.model[model_cls.model_type]['batch_size'],
      drop_last=True,
  )
DataLoader(
        self.dataset_collection.train_f,
        shuffle=True,
        batch_size=sub_args['batch_size'],
        drop_last=drop_last,
    )
DataLoader(
        self.dataset_collection.val_f,
        batch_size=self.hparams.dataset.val_batch_size,
        shuffle=False,
        generator=torch.Generator(),
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
          dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
      )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=True
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
torch.utils.data.DataLoader(
      train_dataset,
      shuffle=not args.streaming,
      collate_fn=collate_fn,
      batch_size=total_train_batch_size,
      num_workers=args.dataloader_num_workers,
      drop_last=True,
  )
data.DataLoader(
      train_set, batch_size=batch_size, shuffle=True, num_workers=1
  )
data.DataLoader(
      valid_set, batch_size=batch_size, shuffle=True, num_workers=1
  )
data.DataLoader(
      test_set, batch_size=batch_size, shuffle=False, num_workers=1
  )
DataLoader(
      train_dataset,
      batch_size=args.per_device_train_batch_size,
      shuffle=True,
      collate_fn=data_collator,
  )
DataLoader(
        eval_dataset,
        batch_size=args.per_device_eval_batch_size,
        collate_fn=data_collator)
DataLoader(
        test_dataset,
        batch_size=args.per_device_eval_batch_size,
        collate_fn=data_collator)
DataLoader(
        infer_dataset,
        batch_size=args.per_device_eval_batch_size,
        collate_fn=data_collator)
DataLoader(db, batch_size=cmd_args.batch_size, shuffle=True,
                            collate_fn=db.collate_fn, num_workers=cmd_args.num_proc, drop_last=True)
DataLoader(db, batch_size=cmd_args.batch_size, shuffle=True,
                            collate_fn=db.collate_fn, num_workers=cmd_args.num_proc, drop_last=True)
DataLoader(test_db, batch_size=1, shuffle=False,
                            collate_fn=test_db.collate_fn, num_workers=cmd_args.num_proc, drop_last=False)
DataLoader(train_db, batch_size=cmd_args.batch_size, shuffle=False,
                            collate_fn=train_db.collate_fn, num_workers=cmd_args.num_proc, drop_last=False)
DataLoader(test_db, batch_size=cmd_args.batch_size, shuffle=False,
                          collate_fn=test_db.collate_fn, num_workers=cmd_args.num_proc, drop_last=False)
DataLoader(train_db, batch_size=cmd_args.batch_size, shuffle=False,
                            collate_fn=train_db.collate_fn, num_workers=cmd_args.num_proc, drop_last=False)
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers
    )
torch.utils.data.DataLoader(
            dataset=test_dataset,
            batch_size=200,
            shuffle=False,
            num_workers=num_workers,
        )
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers
    )
torch.utils.data.DataLoader(
            dataset=test_dataset,
            batch_size=100,
            shuffle=False,
            num_workers=num_workers,
        )
torch.utils.data.DataLoader(
      dataset=test_dataset,
      batch_size=100,
      shuffle=False,
      num_workers=num_workers,
  )
torch.utils.data.DataLoader(
        dataset=test_dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers,
    )
torch.utils.data.DataLoader(
      dataset=test_dataset,
      batch_size=batch_size,
      shuffle=False,
      num_workers=num_workers,
  )
torch.utils.data.DataLoader(
      train_dataset, batch_size=batch_size, shuffle=True
  )
torch.utils.data.DataLoader(
      val_dataset, batch_size=batch_size, shuffle=True
  )
torch.utils.data.DataLoader(
      test_dataset, batch_size=batch_size, shuffle=False
  )
torch.utils.data.DataLoader(
        dataset=dataset_src,
        batch_size=flags.batch_size,
        shuffle=shuffle,
        num_workers=flags.num_workers,
        drop_last=flags.drop_last,
        pin_memory=True)
torch.utils.data.DataLoader(
      train_dataset, batch_size=args.batch_size, shuffle=False,
      num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=sampler)
torch.utils.data.DataLoader(
      train_dataset_with_indices, batch_size=args.batch_size, shuffle=False,
      num_workers=args.workers, pin_memory=True, sampler=sampler)
torch.utils.data.DataLoader(
      train_dataset,
      batch_size=args.train_batch_size,
      shuffle=True,
      num_workers=args.dataloader_num_workers,
  )
DataLoader(
        dataset,
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=True)
DataLoader(
        dataset,
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=False)
DataLoader(
        dataset,
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=False)
torch.utils.data.DataLoader(
      datasets.CIFAR10(
          args.data_dir,
          train=False,
          download=True,
          transform=transforms.Compose([
              transforms.ToTensor(),
              transforms.Normalize(normalize_mean, normalize_std)])
          ),
      batch_size=1000, shuffle=False, drop_last=False, **kwargs)
DataLoader(
        Subset(self.train_dataset, inds),
        batch_size=self.args.batch_size,
        shuffle=False,
        num_workers=8,
    )
DataLoader(
      train_dataset, batch_size=setting.args.batch_size, shuffle=True
  )
DataLoader(
      test_dataset, batch_size=setting.args.batch_size, shuffle=False
  )
DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
data.DataLoader(
            trn_data_sub, batch_size=self.trainloader.batch_size, shuffle=False
        )
data.DataLoader(
              val_data_sub,
              batch_size=self.trainloader.batch_size,
              shuffle=False,
          )
data.DataLoader(trainset, batch_size=32, shuffle=False)
data.DataLoader(valset, batch_size=32, shuffle=False)
DataLoader(
        TSDataset(self.x_train, self.args, transform=Normalize()),
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=True,
        drop_last=True)
DataLoader(
        TSDataset(self.x_val, self.args, transform=Normalize()),
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=False,
        drop_last=True)
DataLoader(
        TSDataset(self.x_test, self.args, transform=Normalize()),
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=False,
        drop_last=True)
DataLoader(
        TSDataset(self.x_test, self.args, transform=Normalize()),
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=False,
        drop_last=True)
torch.utils.data.DataLoader(
      dataset,
      batch_size=opts.batch_size,
      shuffle=shuffle_d,
      num_workers=opts.num_workers,
      collate_fn=collate_fn,
      worker_init_fn=worker_init_fn,
      drop_last=True,
  )
DataLoader(
        data_set,
        batch_size=batch_size,
        shuffle=shuffle_flag,
        num_workers=self.args.num_workers,
        drop_last=drop_last)
DataLoader(
          data_set,
          batch_size=batch_size,
          shuffle=True,
          num_workers=self.args.num_workers,
          drop_last=drop_last)
DataLoader(
        data_set,
        batch_size=batch_size,
        shuffle=shuffle_flag,
        num_workers=self.args.num_workers,
        drop_last=drop_last)
DataLoader(
          data_set,
          batch_size=batch_size,
          shuffle=True,
          num_workers=self.args.num_workers,
          drop_last=drop_last)
DataLoader(
        data_set,
        batch_size=batch_size,
        shuffle=shuffle_flag,
        num_workers=args.num_workers,
        drop_last=drop_last)
DataLoader(
        data_set,
        batch_size=batch_size,
        shuffle=shuffle_flag,
        num_workers=args.num_workers,
        drop_last=drop_last)
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=int(num_threads),
        pin_memory=True,
        drop_last=True,
        sampler=self.train_sampler)
DataLoader(test_dataset, batch_size=batch_size)
DataLoader(train_dataset, batch_size=batch_size)
DataLoader(test_dataset, batch_size=64)
DataLoader(train_dataset, batch_size=64)
DataLoader(
        EvalRelationDataset(
            eval_relation_data,
            args.nentity,
            args.nrelation,
        ),
        batch_size=args.test_batch_size,
        num_workers=args.cpu_num,
        collate_fn=EvalRelationDataset.collate_fn
    )
DataLoader(
        EvalBranchDataset(
            eval_branch_data,
            args.nentity,
            args.nrelation,
        ),
        batch_size=args.test_batch_size,
        num_workers=args.cpu_num,
        collate_fn=EvalBranchDataset.collate_fn
    )
DataLoader(
                        UnfoldedProgramDataloader(train_datasets, args.nentity, args.nrelation, 1, latent_space_executor,
                                reduce=args.reduce,
                                supervised_candidate_batch_size=args.supervised_candidate_batch_size,
                                shuffle=True if not args.debug else False),
                        batch_size=args.batch_size,
                        shuffle=True if not args.debug else False,
                        num_workers=args.cpu_num,
                        collate_fn=UnfoldedProgramDataloader.collate_fn
                    )
DataLoader(
        self.train_dataset,
        shuffle=True,
        num_workers=4,
        batch_size=self.hparams.batch_size,
        pin_memory=True)
DataLoader(
        self.val_dataset,
        shuffle=False,
        num_workers=4,
        batch_size=1,  # validate one image (H*W rays) at a time
        pin_memory=True)
DataLoader(
      train_dataset,
      shuffle=True,
      num_workers=4,
      batch_size=1024,
      pin_memory=True)
DataLoader(
      val_dataset, shuffle=False, num_workers=4, batch_size=1, pin_memory=True)
torch.utils.data.DataLoader(
              self.data_paths,
              collate_fn=lambda x: torch.load(x[0]),
              num_workers=min(16, mp.cpu_count()),
              shuffle=False)
torch.utils.data.DataLoader(
        val_data,
        batch_size=args.test_batch_size,
        shuffle=False,
        num_workers=args.test_workers,
        pin_memory=True,
        drop_last=False,
        collate_fn=collation_fn_eval_all,
        sampler=val_sampler)
torch.utils.data.DataLoader(
        train_data,
        batch_size=args.batch_size,
        shuffle=(train_sampler is None),
        num_workers=args.workers,
        pin_memory=True,
        sampler=train_sampler,
        drop_last=True,
        collate_fn=collation_fn,
        worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(
          val_data,
          batch_size=args.batch_size_val,
          shuffle=False,
          num_workers=args.workers,
          pin_memory=True,
          drop_last=False,
          collate_fn=collation_fn_eval_all,
          sampler=val_sampler)
DataLoader(
      scdata,
      batch_size=batch_size,
      drop_last=True,
      shuffle=True,
      num_workers=4)
DataLoader(
      scdata, batch_size=batch_size, drop_last=False, shuffle=False)
DataLoader(
      dataset, batch_size=1, shuffle=False, collate_fn=collate_topics)
DataLoader(
        train_dataset,
        batch_size=_BATCH_SIZE.value,
        shuffle=True,
        collate_fn=collate_topics)
DataLoader(
        valid_dataset,
        batch_size=_BATCH_SIZE.value,
        shuffle=False,
        collate_fn=collate_topics)
DataLoader(
        test_dataset,
        batch_size=_BATCH_SIZE.value,
        shuffle=False,
        collate_fn=collate_topics)
DataLoader(
      dataset, batch_size=4, shuffle=False, collate_fn=collate_topics)
torch.utils.data.DataLoader(
        dataset,
        collate_fn=dataset.collate_fn,
        batch_sampler=batch_sampler,
        num_workers=4 if torch.cuda.is_available() and not debug else 0,
        pin_memory=torch.cuda.is_available() and not debug,
    )
torch.utils.data.DataLoader(
          dataset,
          collate_fn=dataset.collate_fn,
          batch_sampler=batch_sampler,
          num_workers=4 if torch.cuda.is_available() and not debug else 0,
          pin_memory=torch.cuda.is_available() and not debug,
      )
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/runnables/train_enc_dec.py#L241
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/runnables/train_enc_dec.py#L372
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/runnables/train_msm.py#L90
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/runnables/train_multi.py#L236
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/runnables/train_rmsn.py#L463
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/runnables/train_rmsn.py#L571
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/ct.py#L461
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/gnet.py#L356
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/gnet.py#L365
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/gnet.py#L471
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/gnet.py#L514
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rmsn.py#L120
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rmsn.py#L521
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rmsn.py#L533
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rmsn.py#L678
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L95
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L107
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L113
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L282
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L290
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L1163
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L1179
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L1191
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L1209
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L1423
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rep_est/cotrans.py#L210
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rep_est/rep_est.py#L121
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rep_est/rep_est.py#L335
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rep_est/rep_est.py#L343
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rep_est/rep_est.py#L774
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rep_est/rep_est.py#L795
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/CoDi/training_scripts/train_codi_flax.py#L427
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/KNF/run_koopman.py#L137
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/KNF/run_koopman.py#L140
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/KNF/run_koopman.py#L143
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/STraTA/finetuning.py#L775
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/STraTA/finetuning.py#L784
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/STraTA/finetuning.py#L790
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/STraTA/finetuning.py#L796
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/aloe/aloe/fuzz/do_fuzz.py#L85
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/aloe/aloe/fuzz/main_varlen.py#L97
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/aloe/aloe/rfill/main_editor.py#L159
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/aloe/aloe/rfill/main_editor.py#L193
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/aloe/aloe/rfill/main_supervised.py#L60
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/aloe/aloe/rfill/main_supervised.py#L132
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/main.py#L658
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/main.py#L817
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/main.py#L994
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/main.py#L1086
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/main.py#L1202
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/test_later.py#L272
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/test_later.py#L325
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/utils/preprocessing_utils.py#L56
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/utils/preprocessing_utils.py#L60
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/utils/preprocessing_utils.py#L64
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/cascaded_networks/datasets/dataset_handler.py#L139
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/coherent_gradients/weak_and_strong/imagenet_main.py#L354
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/coherent_gradients/weak_and_strong/imagenet_main.py#L365
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/coherent_gradients/weak_and_strong/imagenet_main.py#L525
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/conceptor/one_step_reconstruction.py#L777
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/editable_graph_temporal/data.py#L174
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/editable_graph_temporal/data.py#L184
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/editable_graph_temporal/data.py#L194
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gaternet/main.py#L135
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/datasets/utils/continual_dataset.py#L88
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/datasets/utils/continual_dataset.py#L170
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/datasets/utils/continual_dataset.py#L173
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/datasets/utils/continual_dataset.py#L205
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/utils/gradmatchstrategy.py#L95
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/utils/gradmatchstrategy.py#L101
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/utils/select_subset.py#L100
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/utils/select_subset.py#L103
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/graph_temporal_ai/src/data.py#L107
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/graph_temporal_ai/src/data.py#L116
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/graph_temporal_ai/src/data.py#L125
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/graph_temporal_ai/src/data.py#L134
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/human_object_interaction/oci/oci/datasets/behave_data.py#L577
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/ime/exp/exp_IME.py#L174
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/ime/exp/exp_IME.py#L182
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/ime/exp/exp_IME_tabular.py#L176
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/ime/exp/exp_IME_tabular.py#L184
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/ime/exp/exp_baseline.py#L124
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/ime/exp/exp_baseline_tabular.py#L127
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/infinite_nature_zero/data/nature_data_loader.py#L28
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/isl/isl_synthetic_exp.py#L600
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/isl/isl_synthetic_exp.py#L601
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/isl/mlp.py#L200
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/isl/mlp.py#L201
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/lego/lego/experiment/pretrain_pruners.py#L366
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/lego/lego/experiment/pretrain_pruners.py#L376
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/lego/lego/experiment/train_synthesizer.py#L326
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/nerflets/train.py#L184
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/nerflets/train.py#L192
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/nerflets/datasets/scannet.py#L246
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/nerflets/datasets/scannet.py#L253
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/openscene/dataset/scannet3d.py#L146
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/openscene/tool/test_disnet.py#L204
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/openscene/tool/train_disnet.py#L245
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/openscene/tool/train_disnet.py#L266
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/schptm_benchmark/scale_process.py#L112
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/schptm_benchmark/scale_process.py#L118
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/video_timeline_modeling/vtm/main.py#L394
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/video_timeline_modeling/vtm/main.py#L519
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/video_timeline_modeling/vtm/main.py#L524
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/video_timeline_modeling/vtm/main.py#L529
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/video_timeline_modeling/vtm/test.py#L92
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/xirl/xirl/common.py#L49
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/xirl/xirl/common.py#L85

=======================================
https://github.com/willpower057/RankMix
=======================================

Found 17 times
DataLoader(transformed_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers, drop_last=False)
DataLoader(high_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers, drop_last=False)
DataLoader(loader.dataset, batch_size = loader.batch_size, sampler=mod_sampler, num_workers=loader.num_workers)
DataLoader(dataset=train_dataset, batch_size=1, num_workers=args.num_workers, pin_memory=torch.cuda.is_available(), shuffle=True, drop_last=False)
DataLoader(dataset=train_dataset, batch_sampler=train_sampler, num_workers=args.num_workers, pin_memory=torch.cuda.is_available(), drop_last=False)
DataLoader(dataset=val_dataset, batch_size=1, num_workers=args.num_workers, pin_memory=torch.cuda.is_available(), drop_last=False)
DataLoader(dataset=test_dataset, batch_size=1, num_workers=args.num_workers, pin_memory=torch.cuda.is_available(), drop_last=False)
DataLoader(dataset=train_dataset, batch_size=1, num_workers=args.num_workers, pin_memory=torch.cuda.is_available(), shuffle=True, drop_last=False)
DataLoader(dataset=train_dataset, batch_sampler=train_sampler, num_workers=args.num_workers, pin_memory=torch.cuda.is_available(), drop_last=False)
DataLoader(dataset=val_dataset, batch_size=1, num_workers=args.num_workers, pin_memory=torch.cuda.is_available(), drop_last=False)
DataLoader(dataset=test_dataset, batch_size=1, num_workers=args.num_workers, pin_memory=torch.cuda.is_available(), drop_last=False)
DataLoader(dataset=train_dataset, batch_size=1, num_workers=args.num_workers, pin_memory=torch.cuda.is_available(), shuffle=True, drop_last=False)
DataLoader(dataset=train_dataset, batch_sampler=train_sampler, num_workers=args.num_workers, pin_memory=torch.cuda.is_available(), drop_last=False)
DataLoader(dataset=val_dataset, batch_size=1, num_workers=args.num_workers, pin_memory=torch.cuda.is_available(), drop_last=False)
DataLoader(dataset=test_dataset, batch_size=1, num_workers=args.num_workers, pin_memory=torch.cuda.is_available(), drop_last=False)
DataLoader(train_dataset, batch_size=self.batch_size, sampler=train_sampler,
                                  num_workers=self.num_workers, drop_last=True, shuffle=False)
DataLoader(train_dataset, batch_size=self.batch_size, sampler=valid_sampler,
                                  num_workers=self.num_workers, drop_last=True)
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/compute_feats.py#L79
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/compute_feats.py#L136
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/dataset.py#L162
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/train_mil.py#L362
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/train_mil.py#L364
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/train_mil.py#L365
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/train_mil.py#L366
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/train_mil_rankmix.py#L720
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/train_mil_rankmix.py#L722
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/train_mil_rankmix.py#L723
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/train_mil_rankmix.py#L724
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/train_mil_remix.py#L570
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/train_mil_remix.py#L572
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/train_mil_remix.py#L573
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/train_mil_remix.py#L574
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/simclr/data_aug/dataset_wrapper.py#L73
https://github.com/willpower057/RankMix/blob/a6d51301ec878540f4dd185544c265fad5ef1dd2/simclr/data_aug/dataset_wrapper.py#L75

=====================================================
https://github.com/prs-eth/Diffusion-Super-Resolution
=====================================================

Found 2 times
DataLoader(dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=False, drop_last=False)
DataLoader(datasets[phase], batch_size=args.batch_size, num_workers=args.num_workers,
                shuffle=True, drop_last=False)
https://github.com/prs-eth/Diffusion-Super-Resolution/blob/8642e2d770f3a3a47e44e39f7ff1cb78ff777e48/run_eval.py#L80
https://github.com/prs-eth/Diffusion-Super-Resolution/blob/8642e2d770f3a3a47e44e39f7ff1cb78ff777e48/run_train.py#L212

======================================
https://github.com/xiaogang00/SMG-LLIE
======================================

Found 6 times
DataLoader(self.train_dataset,
                                           batch_size=self.opts.batch_size,
                                           sampler=data_sampler(self.train_dataset, shuffle=True, distributed=True),
                                           num_workers=int(self.opts.workers),
                                           drop_last=True)
DataLoader(self.test_dataset,
                                          batch_size=self.opts.test_batch_size,
                                          num_workers=int(self.opts.test_workers),
                                          drop_last=True)
DataLoader(self.train_dataset,
                                           batch_size=self.opts.batch_size,
                                           sampler=data_sampler(self.train_dataset, shuffle=True, distributed=True),
                                           num_workers=int(self.opts.workers),
                                           drop_last=True)
DataLoader(self.test_dataset,
                                          batch_size=self.opts.test_batch_size,
                                          num_workers=int(self.opts.test_workers),
                                          drop_last=True)
DataLoader(self.train_dataset,
                                           batch_size=self.opts.batch_size,
                                           sampler=data_sampler(self.train_dataset, shuffle=True, distributed=True),
                                           num_workers=int(self.opts.workers),
                                           drop_last=True)
DataLoader(self.test_dataset,
                                          batch_size=self.opts.test_batch_size,
                                          num_workers=int(self.opts.test_workers),
                                          drop_last=True)
https://github.com/xiaogang00/SMG-LLIE/blob/5dba3df712717d9920b8837beff9616b98fab2d4/training/coach_LOL_real.py#L203
https://github.com/xiaogang00/SMG-LLIE/blob/5dba3df712717d9920b8837beff9616b98fab2d4/training/coach_LOL_real.py#L208
https://github.com/xiaogang00/SMG-LLIE/blob/5dba3df712717d9920b8837beff9616b98fab2d4/training/coach_LOL_synthetic.py#L203
https://github.com/xiaogang00/SMG-LLIE/blob/5dba3df712717d9920b8837beff9616b98fab2d4/training/coach_LOL_synthetic.py#L208
https://github.com/xiaogang00/SMG-LLIE/blob/5dba3df712717d9920b8837beff9616b98fab2d4/training/coach_SID.py#L204
https://github.com/xiaogang00/SMG-LLIE/blob/5dba3df712717d9920b8837beff9616b98fab2d4/training/coach_SID.py#L209

============================================
https://github.com/shuaizhengliu/Joint-HDRDN
============================================

Found 1 times
DataLoader(dataset = dataset, batch_size = 16, shuffle=True, num_workers=8)
https://github.com/shuaizhengliu/Joint-HDRDN/blob/c41f5531807c62e9aeb8a0821c02c83220ecc885/dataset.py#L81

====================================
https://github.com/Depth2World/NLOST
====================================

Found 3 times
DataLoader(train_data, sampler=train_sampler,batch_size=opt.bacth_size, num_workers=opt.num_workers, pin_memory=True, drop_last=True)
DataLoader(val_data, sampler=val_sampler,batch_size=opt.bacth_size, num_workers=opt.num_workers, pin_memory=True)
DataLoader(train_set, batch_size=1, shuffle=True, num_workers=16)
https://github.com/Depth2World/NLOST/blob/dc8a1babfc090b0545c94f63f77fdb47098abadb/main_DDP.py#L88
https://github.com/Depth2World/NLOST/blob/dc8a1babfc090b0545c94f63f77fdb47098abadb/main_DDP.py#L89
https://github.com/Depth2World/NLOST/blob/dc8a1babfc090b0545c94f63f77fdb47098abadb/util/LFEDataset.py#L514

===========================================================
https://github.com/sanghviyashiitb/structured-kernel-cvpr23
===========================================================

Found 5 times
DataLoader(data_val, batch_size=BATCH_SIZE, shuffle=False)
DataLoader(data_train, batch_size=BATCH_SIZE, shuffle=False, num_workers=0)
DataLoader(data_val, batch_size=BATCH_SIZE*4, shuffle=False, num_workers=0)
DataLoader(data_train, batch_size=BATCH_SIZE, shuffle=True, num_workers=0)
DataLoader(data_val, batch_size= BATCH_SIZE, shuffle=False, num_workers=0)
https://github.com/sanghviyashiitb/structured-kernel-cvpr23/blob/29c05493dcc0e86da50c8113621fa282e9dd4065/models/msres/test_deepdeblur.py#L34
https://github.com/sanghviyashiitb/structured-kernel-cvpr23/blob/29c05493dcc0e86da50c8113621fa282e9dd4065/models/msres/train_deepdeblur_gopro.py#L64
https://github.com/sanghviyashiitb/structured-kernel-cvpr23/blob/29c05493dcc0e86da50c8113621fa282e9dd4065/models/msres/train_deepdeblur_gopro.py#L65
https://github.com/sanghviyashiitb/structured-kernel-cvpr23/blob/29c05493dcc0e86da50c8113621fa282e9dd4065/train_ktn/train_ktn.py#L35
https://github.com/sanghviyashiitb/structured-kernel-cvpr23/blob/29c05493dcc0e86da50c8113621fa282e9dd4065/train_ktn/train_ktn.py#L37

==========================================
https://github.com/ucaswangls/EfficientSCI
==========================================

Found 4 times
DataLoader(test_data,batch_size=1,shuffle=False)
DataLoader(test_data,batch_size=1,shuffle=False)
DataLoader(dataset=train_data, 
                                        batch_size=cfg.data.samples_per_gpu,
                                        sampler=dist_sampler,
                                        num_workers = cfg.data.workers_per_gpu)
DataLoader(dataset=train_data, 
                                        batch_size=cfg.data.samples_per_gpu,
                                        shuffle=True,
                                        num_workers = cfg.data.workers_per_gpu)
https://github.com/ucaswangls/EfficientSCI/blob/f123d46bbdcbb6b63c055f44fc339118a1855014/tools/test.py#L60
https://github.com/ucaswangls/EfficientSCI/blob/f123d46bbdcbb6b63c055f44fc339118a1855014/tools/test_real_data.py#L61
https://github.com/ucaswangls/EfficientSCI/blob/f123d46bbdcbb6b63c055f44fc339118a1855014/tools/train.py#L103
https://github.com/ucaswangls/EfficientSCI/blob/f123d46bbdcbb6b63c055f44fc339118a1855014/tools/train.py#L108

======================================================
https://github.com/compphoto/RealisticImageEnhancement
======================================================

Found 9 times
torch.utils.data.DataLoader(
    dataset_val,
    batch_size=1,
    shuffle=False,
    num_workers=1,
    pin_memory=True,
    drop_last=True)
torch.utils.data.DataLoader(
    dataset_val,
    batch_size=1,
    shuffle=False,
    num_workers=0,
    pin_memory=True,
    drop_last=True)
torch.utils.data.DataLoader(
    dataset_train,
    batch_size=args.batch_size,
    shuffle=args.shuffle,
    num_workers=int(args.num_threads),
    pin_memory=True,
    drop_last=True)
torch.utils.data.DataLoader(
    dataset_val,
    batch_size=args.batch_size,
    shuffle=False,
    num_workers=int(args.num_threads),
    pin_memory=True,
    drop_last=True)
torch.utils.data.DataLoader(
    dataset,
    batch_size=args.batch_size,
    shuffle=args.shuffle,
    num_workers=int(args.num_threads),
    pin_memory=True,
    drop_last=True)
torch.utils.data.DataLoader(
            dataloader.ImageList(data_root, data_file, transforms.Compose([
                transforms.Resize((IMG_HEIGHT, IMG_WIDTH)),
                transforms.ToTensor(),
            ])),
            batch_size=args.batch_size, shuffle=train,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        SaliconLoader.ImageList(args.data_folder, transforms.Compose([
            transforms.ToTensor(),
        ]),
        train=True,
        ),
        batch_size=args.batch_size, shuffle=True,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        SaliconLoader.ImageList(args.data_folder, transforms.Compose([
            transforms.ToTensor(),
        ]),
        train=True,
        ),
        batch_size=args.batch_size, shuffle=True,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.num_threads))
https://github.com/compphoto/RealisticImageEnhancement/blob/4eef719000e3c0c2fe93d4a0e7b7de230b327553/test.py#L31
https://github.com/compphoto/RealisticImageEnhancement/blob/4eef719000e3c0c2fe93d4a0e7b7de230b327553/test_video.py#L31
https://github.com/compphoto/RealisticImageEnhancement/blob/4eef719000e3c0c2fe93d4a0e7b7de230b327553/train_editnet.py#L31
https://github.com/compphoto/RealisticImageEnhancement/blob/4eef719000e3c0c2fe93d4a0e7b7de230b327553/train_editnet.py#L39
https://github.com/compphoto/RealisticImageEnhancement/blob/4eef719000e3c0c2fe93d4a0e7b7de230b327553/train_realismnet.py#L106
https://github.com/compphoto/RealisticImageEnhancement/blob/4eef719000e3c0c2fe93d4a0e7b7de230b327553/model/EMLNETSaliency/train.py#L67
https://github.com/compphoto/RealisticImageEnhancement/blob/4eef719000e3c0c2fe93d4a0e7b7de230b327553/model/EMLNETSaliency/train_decoder.py#L79
https://github.com/compphoto/RealisticImageEnhancement/blob/4eef719000e3c0c2fe93d4a0e7b7de230b327553/model/EMLNETSaliency/train_resnet.py#L70
https://github.com/compphoto/RealisticImageEnhancement/blob/4eef719000e3c0c2fe93d4a0e7b7de230b327553/model/pix2pix/data/__init__.py#L75

===================================
https://github.com/jmliu206/LIC_TCM
===================================

Found 2 times
DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        shuffle=True,
        pin_memory=(device == "cuda"),
    )
DataLoader(
        test_dataset,
        batch_size=args.test_batch_size,
        num_workers=args.num_workers,
        shuffle=False,
        pin_memory=(device == "cuda"),
    )
https://github.com/jmliu206/LIC_TCM/blob/ec4d67d6274688c8b661d092da3f54b4081387fc/train.py#L348
https://github.com/jmliu206/LIC_TCM/blob/ec4d67d6274688c8b661d092da3f54b4081387fc/train.py#L356

=========================================
https://github.com/HJ-harry/DiffusionMBIR
=========================================

Found 4 times
DataLoader(
    dataset=train_dataset,
    batch_size=configs.training.batch_size,
    shuffle=shuffle,
    drop_last=True
  )
DataLoader(
    dataset=val_dataset,
    batch_size=configs.training.batch_size,
    # shuffle=False,
    shuffle=True,
    drop_last=True
  )
DataLoader(
    dataset=train_dataset,
    batch_size=configs.batch_size,
    shuffle=shuffle,
    drop_last=True
  )
DataLoader(
    dataset=val_dataset,
    batch_size=configs.batch_size,
    shuffle=False,
    drop_last=True
  )
https://github.com/HJ-harry/DiffusionMBIR/blob/592ea29c7bc129fd9b007a88fd4dcdb4e9f617a2/datasets.py#L355
https://github.com/HJ-harry/DiffusionMBIR/blob/592ea29c7bc129fd9b007a88fd4dcdb4e9f617a2/datasets.py#L361
https://github.com/HJ-harry/DiffusionMBIR/blob/592ea29c7bc129fd9b007a88fd4dcdb4e9f617a2/datasets.py#L377
https://github.com/HJ-harry/DiffusionMBIR/blob/592ea29c7bc129fd9b007a88fd4dcdb4e9f617a2/datasets.py#L383

=====================================
https://github.com/BlindDPS/blind-dps
=====================================

Found 1 times
DataLoader(dataset, 
                            batch_size, 
                            shuffle=train, 
                            num_workers=num_workers, 
                            drop_last=train)
https://github.com/BlindDPS/blind-dps/blob/4c0af9176592655d95b7b935c969df940804291b/data/dataloader.py#L29

=======================================
https://github.com/hyyh1314/BGShadowNet
=======================================

Found 1 times
DataLoader(
        data,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=num_workers,
        pin_memory=pin_memory,
        drop_last=drop_last,
    )
https://github.com/hyyh1314/BGShadowNet/blob/7a7266346fb6a245b0928e3fa78c2e5f73a00fbb/libs/dataset.py#L52

==================================
https://github.com/xhuangcv/neucam
==================================

Found 3 times
DataLoader(coord_dataset, shuffle=False, batch_size=opt.batch_size, pin_memory=True, num_workers=1)
DataLoader(coord_dataset, shuffle=True, batch_size=opt.batch_size, pin_memory=True, num_workers=0)
DataLoader(batch[0], batch_size=5)
https://github.com/xhuangcv/neucam/blob/385ae5eb13b12a4a79097dd43f3ce9da521cb2af/experiment_scripts/render_video.py#L21
https://github.com/xhuangcv/neucam/blob/385ae5eb13b12a4a79097dd43f3ce9da521cb2af/experiment_scripts/train_video.py#L23
https://github.com/xhuangcv/neucam/blob/385ae5eb13b12a4a79097dd43f3ce9da521cb2af/torchmeta/tests/test_dataloaders.py#L31

=================================
https://github.com/SensorsINI/e2p
=================================

Found 1 times
DataLoader(sampler=self.valid_sampler, **self.init_kwargs)
https://github.com/SensorsINI/e2p/blob/87fd42fbb267ee10d95c7ba46a729c750378ad1c/train/base/base_data_loader.py#L61

====================================
https://github.com/haoychen3/CD-Flow
====================================

Found 8 times
DataLoader(data_test, batch_size=batch_size_test, shuffle=False, pin_memory=True, num_workers=4)
DataLoader(test_aligned, batch_size=batch_size_test, shuffle=False, pin_memory=True,
                                      num_workers=4)
DataLoader(test_notaligned, batch_size=batch_size_test, shuffle=False, pin_memory=True,
                                         num_workers=4)
DataLoader(data_train, batch_size=batch_size_train, shuffle=True,
                                   pin_memory=True, num_workers=4)
DataLoader(data_val, batch_size=batch_size_test, shuffle=True, pin_memory=True,
                                 num_workers=4)
DataLoader(data_test, batch_size=batch_size_test, shuffle=False,
                                  pin_memory=True, num_workers=4)
DataLoader(test_aligned, batch_size=batch_size_test, shuffle=False,
                                          pin_memory=True, num_workers=4)
DataLoader(test_notaligned, batch_size=batch_size_test,
                                             shuffle=False, pin_memory=True, num_workers=4)
https://github.com/haoychen3/CD-Flow/blob/cb8f851babb52e8e87f3a99ce81c68fad1febf18/test.py#L74
https://github.com/haoychen3/CD-Flow/blob/cb8f851babb52e8e87f3a99ce81c68fad1febf18/test.py#L75
https://github.com/haoychen3/CD-Flow/blob/cb8f851babb52e8e87f3a99ce81c68fad1febf18/test.py#L77
https://github.com/haoychen3/CD-Flow/blob/cb8f851babb52e8e87f3a99ce81c68fad1febf18/trainnet.py#L77
https://github.com/haoychen3/CD-Flow/blob/cb8f851babb52e8e87f3a99ce81c68fad1febf18/trainnet.py#L79
https://github.com/haoychen3/CD-Flow/blob/cb8f851babb52e8e87f3a99ce81c68fad1febf18/trainnet.py#L81
https://github.com/haoychen3/CD-Flow/blob/cb8f851babb52e8e87f3a99ce81c68fad1febf18/trainnet.py#L83
https://github.com/haoychen3/CD-Flow/blob/cb8f851babb52e8e87f3a99ce81c68fad1febf18/trainnet.py#L85

======================================================
https://github.com/jiamingzhang94/Unlearnable-Clusters
======================================================

Found 7 times
DataLoader(train_dataset, batch_size=256, num_workers=8)
DataLoader(train_dataset, shuffle=True, batch_size=config['batch_size'], num_workers=8)
DataLoader(test_dataset, batch_size=config['batch_size'], num_workers=8)
DataLoader(train_dataset, batch_size=1, num_workers=8)
DataLoader(train_dataset, batch_size=64, num_workers=8)
DataLoader(train_dataset, batch_size=64, num_workers=4)
DataLoader(test_dataset, batch_size=256, num_workers=8)
https://github.com/jiamingzhang94/Unlearnable-Clusters/blob/bfe4d7ff389ddc874b82feb0bcd908ed922dbaf3/main.py#L35
https://github.com/jiamingzhang94/Unlearnable-Clusters/blob/bfe4d7ff389ddc874b82feb0bcd908ed922dbaf3/main.py#L110
https://github.com/jiamingzhang94/Unlearnable-Clusters/blob/bfe4d7ff389ddc874b82feb0bcd908ed922dbaf3/main.py#L113
https://github.com/jiamingzhang94/Unlearnable-Clusters/blob/bfe4d7ff389ddc874b82feb0bcd908ed922dbaf3/main.py#L176
https://github.com/jiamingzhang94/Unlearnable-Clusters/blob/bfe4d7ff389ddc874b82feb0bcd908ed922dbaf3/preprocess.py#L40
https://github.com/jiamingzhang94/Unlearnable-Clusters/blob/bfe4d7ff389ddc874b82feb0bcd908ed922dbaf3/preprocess.py#L71
https://github.com/jiamingzhang94/Unlearnable-Clusters/blob/bfe4d7ff389ddc874b82feb0bcd908ed922dbaf3/preprocess.py#L95

====================================
https://github.com/grip-unina/TruFor
====================================

Found 1 times
torch.utils.data.DataLoader(
    test_dataset,
    batch_size=1)
https://github.com/grip-unina/TruFor/blob/0f7ccfdc37190ee3f343974bdff37a8cbb2adf31/test_docker/src/trufor_test.py#L74

=============================================
https://github.com/averysi224/angelic_patches
=============================================

Found 3 times
torch.utils.data.DataLoader(my_dataset,
                                            batch_size=train_batch_size,
                                            shuffle=True,
                                            num_workers=4,
                                            collate_fn=collate_fn)
torch.utils.data.DataLoader(my_dataset,
                                            batch_size=train_batch_size,
                                            shuffle=True,
                                            num_workers=4,
                                            collate_fn=collate_fn)
torch.utils.data.DataLoader(my_dataset,
                                            batch_size=train_batch_size,
                                            shuffle=True,
                                            num_workers=4,
                                            collate_fn=collate_fn)
https://github.com/averysi224/angelic_patches/blob/67aa87da54659947cac7ccbb6b167ccd2eb77079/angelic_affine_main.py#L218
https://github.com/averysi224/angelic_patches/blob/67aa87da54659947cac7ccbb6b167ccd2eb77079/angelic_cross_main.py#L255
https://github.com/averysi224/angelic_patches/blob/67aa87da54659947cac7ccbb6b167ccd2eb77079/angelic_global_main.py#L270

============================================
https://github.com/AhmedImtiazPrio/SplineCAM
============================================

Found 6 times
torch.utils.data.DataLoader(image_datasets[x], batch_size=128, shuffle=True, pin_memory=True,
                                              num_workers=24, drop_last=False)
torch.utils.data.DataLoader(image_datasets[x], batch_size=128, shuffle=True, pin_memory=True,
                                              num_workers=24, drop_last=False)
torch.utils.data.DataLoader(image_datasets[x], batch_size=params.batch_size, shuffle=True, pin_memory=True,
                                              num_workers=24, drop_last=False)
torch.utils.data.DataLoader(Abw,
                                          pin_memory=True,
                                          batch_size=Abw_batch_size,
                                          num_workers=n_workers,
                                          shuffle=False,
                                          sampler=out_idx,
                                          drop_last=False)
torch.utils.data.DataLoader(data,
                                      pin_memory=False,
                                      batch_size=batch_size,
                                      num_workers=workers,
                                      shuffle=False,
                                      drop_last=False)
torch.utils.data.DataLoader(util_dataset(data1,data2),
                                      pin_memory=True,
                                      batch_size=batch_size,
                                      num_workers=workers,
                                      shuffle=False,
                                      drop_last=False)
https://github.com/AhmedImtiazPrio/SplineCAM/blob/d743182de0684f2ebb4532ce315254f6a39856d5/train_cifar10.py#L156
https://github.com/AhmedImtiazPrio/SplineCAM/blob/d743182de0684f2ebb4532ce315254f6a39856d5/train_mnist.py#L155
https://github.com/AhmedImtiazPrio/SplineCAM/blob/d743182de0684f2ebb4532ce315254f6a39856d5/train_tinyimgnet.py#L140
https://github.com/AhmedImtiazPrio/SplineCAM/blob/d743182de0684f2ebb4532ce315254f6a39856d5/splinecam/compute.py#L194
https://github.com/AhmedImtiazPrio/SplineCAM/blob/d743182de0684f2ebb4532ce315254f6a39856d5/splinecam/graph.py#L755
https://github.com/AhmedImtiazPrio/SplineCAM/blob/d743182de0684f2ebb4532ce315254f6a39856d5/splinecam/graph.py#L793

===============================
https://github.com/yorkeyao/SnP
===============================

Found 13 times
DataLoader(self.handler(self.X[idxs_train], torch.Tensor(self.Y.numpy()[idxs_train]).long(), transform=self.args['transform']), shuffle=True, **self.args['loader_tr_args'])
DataLoader(self.handler(data[0], torch.Tensor(data[1]).long(), transform=self.args['transform']), shuffle=True, **self.args['loader_tr_args'])
DataLoader(self.handler(self.X[idxs_train], torch.Tensor(self.Y.numpy()[idxs_train]).long(), transform=self.args['transform']), shuffle=True, **self.args['loader_tr_args'])
DataLoader(self.handler(self.X[idxs_train], torch.Tensor(self.Y.numpy()[idxs_train]).long(), transform=self.args['transform']), shuffle=True, **self.args['loader_tr_args'])
DataLoader(self.handler(self.X[idxs_train], torch.Tensor(self.Y.numpy()[idxs_train]).long(), transform=self.args['transform']), shuffle=True, **self.args['loader_tr_args'])
DataLoader(self.handler(X, Y, transform=self.args['transformTest']),
                            shuffle=False, **self.args['loader_te_args'])
DataLoader(self.handler(X.numpy(), Y, transform=self.args['transformTest']),
                            shuffle=False, **self.args['loader_te_args'])
DataLoader(self.handler(X, Y, transform=self.args['transformTest']), shuffle=False, **self.args['loader_te_args'])
DataLoader(self.handler(X, Y, transform=self.args['transformTest']),
                            shuffle=False, **self.args['loader_te_args'])
DataLoader(self.handler(X, Y, transform=self.args['transformTest']),
                            shuffle=False, **self.args['loader_te_args'])
DataLoader(self.handler(X, Y, transform=self.args['transformTest']),
                            shuffle=False, **self.args['loader_te_args'])
DataLoader(self.handler(X, Y, transform=self.args['transformTest']),
                            shuffle=False, **self.args['loader_te_args'])
DataLoader(self.handler(X, Y, transform=self.args['transformTest']),
                            shuffle=False, **self.args['loader_te_args'])
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L60
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L62
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L106
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L144
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L208
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L239
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L242
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L258
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L271
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L289
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L304
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L325
https://github.com/yorkeyao/SnP/blob/5f481315883133c72cad6c0fada09102f9216780/feat_stas/strategies/strategy.py#L353

=======================================
https://github.com/AIR-THU/DAIR-V2X-Seq
=======================================

Found 3 times
DataLoader(dataset, batch_size=16, num_workers=16, shuffle=False, pin_memory=False, drop_last=False)
DataLoader(processor,
                        batch_size=16,
                        num_workers=16,
                        shuffle=False,
                        pin_memory=False,
                        drop_last=False)
DataLoader(tfd_processor,
                            batch_size=1 if sys.gettrace() else 32,     # 1 batch in debug mode
                            num_workers=0 if sys.gettrace() else 32,    # use only 0 worker in debug mode
                            shuffle=False,
                            pin_memory=False,
                            drop_last=False)
https://github.com/AIR-THU/DAIR-V2X-Seq/blob/eb9f111601a19fde32d923e67b0f2e4d15091182/projects/TNT_plugin/core/util/traj_clustering.py#L62
https://github.com/AIR-THU/DAIR-V2X-Seq/blob/eb9f111601a19fde32d923e67b0f2e4d15091182/projects/TNT_plugin/core/util/preprocessor/base.py#L204
https://github.com/AIR-THU/DAIR-V2X-Seq/blob/eb9f111601a19fde32d923e67b0f2e4d15091182/projects/TNT_plugin/core/util/preprocessor/tfd_preprocess.py#L360

=====================================
https://github.com/alibaba/easyrobust
=====================================

Found 156 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
data.DataLoader(datasets, batch_size=opt.batch_size, shuffle=not opt.no_shuffle,
                              num_workers=int(opt.nThreads), drop_last=True)
torch.utils.data.DataLoader(
                    dataset_in, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                    dataset_in, sampler=None,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                    dataset_ina, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                            inc_dataset, sampler=sampler,
                            batch_size=test_batchsize,
                            num_workers=4,
                            pin_memory=True,
                            drop_last=False
                        )
torch.utils.data.DataLoader(
                    dataset_inr, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                    dataset_insk, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                    dataset_inv2, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                    dataset_objnet, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                    dataset_instyle, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
DataLoader(ds, batch_size=batch_size,
                        drop_last=False, num_workers=cpu_count())
torch.utils.data.DataLoader(dataset, batch_size=1)
torch.utils.data.DataLoader(
        train_data, batch_size=batch_size,
        shuffle=(train_sampler is None) and shuffle_train,
        sampler=train_sampler, pin_memory=True, num_workers=8, drop_last=drop_last_train)
torch.utils.data.DataLoader(
        valid_data, batch_size=batch_size,
        shuffle=(valid_sampler is None),
        sampler=valid_sampler, pin_memory=True, num_workers=1, drop_last=False)
DataLoader(dataset, batch_size=batch_size)
torch.utils.data.DataLoader(candidate_dataset,
                                                  batch_size=batch_size)
DataLoader(dataset, batch_size=batch_size)
DataLoader(dataset,
                                                                      batch_size=batch_size,
                                                                      shuffle=False)
DataLoader(target_subset, batch_size)
DataLoader(TensorDataset(w_masked), batch_size, shuffle=False)
DataLoader(target_subset, batch_size)
torch.utils.data.DataLoader(dataset,
                                                 batch_size=self.batch_size,
                                                 shuffle=False,
                                                 drop_last=False,
                                                 pin_memory=True,
                                                 num_workers=self.num_workers)
torch.utils.data.DataLoader(dataset,
                                                 batch_size=self.batch_size,
                                                 shuffle=False,
                                                 drop_last=False,
                                                 pin_memory=True,
                                                 num_workers=self.num_workers)
DataLoader(dataset,
                                                                      batch_size=batch_size,
                                                                      shuffle=False)
torch.utils.data.DataLoader(dataset,
                                                 batch_size=self.batch_size,
                                                 shuffle=False,
                                                 drop_last=False,
                                                 pin_memory=True,
                                                 num_workers=self.num_workers)
DataLoader(training_data,
                                 batch_size=batch_size,
                                 shuffle=True,
                                 num_workers=dataloader_num_workers,
                                 pin_memory=True)
DataLoader(evaluation_data,
                                batch_size=batch_size,
                                shuffle=False,
                                num_workers=dataloader_num_workers,
                                pin_memory=True)
DataLoader(training_data,
                                 batch_size=batch_size,
                                 shuffle=True,
                                 num_workers=dataloader_num_workers,
                                 pin_memory=True)
DataLoader(evaluation_data,
                                batch_size=batch_size,
                                shuffle=False,
                                num_workers=dataloader_num_workers,
                                pin_memory=True)
torch.utils.data.DataLoader(data_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(img_set, batch_size=batch_size, num_workers=2)
torch.utils.data.DataLoader(
        val_set,
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(imagenet_data, batch_size=1, shuffle=True)
torch.utils.data.DataLoader(imagenet_data, batch_size=1, shuffle=True)
torch.utils.data.DataLoader(imagenet_data, batch_size=1, shuffle=True)
torch.utils.data.DataLoader(imagenet_data, batch_size=1, shuffle=True)
DataLoader(
            dataset=self.dataset,
            batch_sampler=batches,
            num_workers=self.num_workers,
            pin_memory=self.pin_memory,
            **kwargs,
        )
DataLoader(
            dataset=dataset,
            pin_memory=ngpu > 0,
            num_workers=num_workers,
            **kwargs,
        )
DataLoader(
            dataset=dataset,
            pin_memory=ngpu > 0,
            num_workers=num_workers,
            **kwargs,
        )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        in_set, batch_size=args.batch, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
        out_set, batch_size=args.batch, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(in_set, batch_size=args.batch, shuffle=False, num_workers=4)
torch.utils.data.DataLoader(
        out_set, batch_size=args.batch, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
            ImageFolderWithPaths(path, transformations,
                                 info_mapping=info_mapping),
            batch_size=batch_size, shuffle=False,
            num_workers=num_workers, pin_memory=True)
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/benchmarks/imagenet-e/ImageNet-Editing/editing_diffusion/guided_diffusion/guided_diffusion/image_datasets.py#L59
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/benchmarks/imagenet-e/ImageNet-Editing/editing_diffusion/guided_diffusion/guided_diffusion/image_datasets.py#L63
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/benchmarks/imagenet-e/ImageNet-Editing/object_removal/TFill/dataloader/data_loader.py#L125
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/clean.py#L31
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/adversarial/autoattack.py#L56
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/imagenet_a.py#L36
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/imagenet_c.py#L80
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/imagenet_r.py#L36
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/imagenet_sketch.py#L33
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/imagenet_v2.py#L32
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/objectnet.py#L77
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/stylized_imagenet.py#L31
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/LSGM/fid/fid_score.py#L122
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/LSGM/scripts/convert_tfrecord_to_lmdb.py#L48
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/LSGM/util/datasets.py#L191
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/LSGM/util/datasets.py#L196
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/attacks/final_selection.py#L57
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/attacks/initial_selection.py#L57
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/attacks/.ipynb_checkpoints/final_selection-checkpoint.py#L57
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/classification_acc.py#L33
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/distance_metrics.py#L72
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/distance_metrics.py#L79
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/distance_metrics.py#L128
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/fid_score.py#L54
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/prcd.py#L87
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/.ipynb_checkpoints/classification_acc-checkpoint.py#L33
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/.ipynb_checkpoints/fid_score-checkpoint.py#L54
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/models/classifier.py#L349
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/models/classifier.py#L615
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/models/.ipynb_checkpoints/classifier-checkpoint.py#L368
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/models/.ipynb_checkpoints/classifier-checkpoint.py#L634
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dra/attack.py#L211
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dra/dataset.py#L36
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dra/validate.py#L152
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/inequality_test.py#L77
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/noise_eval.py#L122
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/occlusion_eval.py#L184
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/saliency_example.py#L161
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/transaudio/espnet/espnet2/iterators/sequence_iter_factory.py#L137
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/transaudio/espnet/espnet2/tasks/abs_task.py#L1753
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/transaudio/espnet/espnet2/tasks/abs_task_o.py#L1753
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/base_training_script.py#L568
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/base_training_script.py#L579
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/resnet50.py#L536
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/resnet50.py#L547
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/SIN/main.py#L536
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/SIN/main.py#L547
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/adversarial_training/main.py#L644
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/adversarial_training/main.py#L655
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/advprop/main.py#L560
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/advprop/main.py#L571
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/apr/main.py#L538
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/apr/main.py#L549
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/augmix/main.py#L537
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/augmix/main.py#L548
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/dat/main.py#L596
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/dat/main.py#L607
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/deepaugment/main.py#L536
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/deepaugment/main.py#L547
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/drvit/main.py#L569
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/drvit/main.py#L580
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/fan/main.py#L569
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/fan/main.py#L580
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/hat/main.py#L580
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/hat/main.py#L591
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/prime/main.py#L526
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/prime/main.py#L537
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/rvt/main.py#L569
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/rvt/main.py#L580
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/shape_texture_debiased_training/main.py#L560
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/shape_texture_debiased_training/main.py#L571
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/wiseft/main.py#L497
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/wiseft/main.py#L508
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/ood_detection/BATS/test_ood.py#L55
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/ood_detection/BATS/test_ood.py#L59
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/ood_detection/BATS/test_ood.py#L85
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/ood_detection/BATS/test_ood.py#L98
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/tools/modelvshuman/modelvshuman/datasets/dataloaders.py#L70

==================================
https://github.com/Dreemurr-T/BAID
==================================

Found 4 times
DataLoader(dataset, batch_size=args.batch_size, shuffle=True, pin_memory=True, num_workers=8, drop_last=True)
DataLoader(test_dataset, batch_size=1, shuffle=False, pin_memory=True, num_workers=8)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, pin_memory=True, num_workers=8)
DataLoader(val_dataset, batch_size=1, shuffle=False, pin_memory=True)
https://github.com/Dreemurr-T/BAID/blob/d5c9b8cddc1e1e419cdce71b50fc432a53f6fd57/pretraining.py#L42
https://github.com/Dreemurr-T/BAID/blob/d5c9b8cddc1e1e419cdce71b50fc432a53f6fd57/test.py#L42
https://github.com/Dreemurr-T/BAID/blob/d5c9b8cddc1e1e419cdce71b50fc432a53f6fd57/train.py#L63
https://github.com/Dreemurr-T/BAID/blob/d5c9b8cddc1e1e419cdce71b50fc432a53f6fd57/train.py#L64

====================================
https://github.com/ViLab-UCSD/GeoNet
====================================

Found 2 times
data.DataLoader(
                    dataset, batch_size=batch_size, shuffle=True,
                    drop_last=drop_last, pin_memory=False, num_workers=num_workers
                )
data.DataLoader(
                dataset, batch_size=batch_size, shuffle=False,
                drop_last=drop_last, pin_memory=False, num_workers=num_workers
            )
https://github.com/ViLab-UCSD/GeoNet/blob/b5bdf94f971ecf50fbfc495da908b5fa712e22e6/loader/baseloader.py#L47
https://github.com/ViLab-UCSD/GeoNet/blob/b5bdf94f971ecf50fbfc495da908b5fa712e22e6/loader/baseloader.py#L52

======================================
https://github.com/pixelite1201/BEDLAM
======================================

Found 8 times
DataLoader(
            dataset=self.train_ds,
            batch_size=self.hparams.DATASET.BATCH_SIZE,
            num_workers=self.hparams.DATASET.NUM_WORKERS,
            pin_memory=self.hparams.DATASET.PIN_MEMORY,
            shuffle=self.hparams.DATASET.SHUFFLE_TRAIN,
        )
DataLoader(
                    dataset=val_ds,
                    batch_size=self.hparams.DATASET.BATCH_SIZE,
                    shuffle=False,
                    num_workers=self.hparams.DATASET.NUM_WORKERS,
                    drop_last=True
                )
DataLoader(
            dataset=self.train_ds,
            batch_size=self.hparams.DATASET.BATCH_SIZE,
            num_workers=self.hparams.DATASET.NUM_WORKERS,
            pin_memory=self.hparams.DATASET.PIN_MEMORY,
            shuffle=self.hparams.DATASET.SHUFFLE_TRAIN,
            drop_last=True
        )
DataLoader(
                    dataset=val_ds,
                    batch_size=self.hparams.DATASET.BATCH_SIZE,
                    shuffle=False,
                    num_workers=self.hparams.DATASET.NUM_WORKERS,
                    drop_last=True
                )
DataLoader(
            dataset=self.train_ds,
            batch_size=self.hparams.DATASET.BATCH_SIZE,
            num_workers=self.hparams.DATASET.NUM_WORKERS,
            pin_memory=self.hparams.DATASET.PIN_MEMORY,
            shuffle=self.hparams.DATASET.SHUFFLE_TRAIN,
            drop_last=True
        )
DataLoader(
                    dataset=val_ds,
                    batch_size=self.hparams.DATASET.BATCH_SIZE,
                    shuffle=False,
                    num_workers=self.hparams.DATASET.NUM_WORKERS,
                    drop_last=True
                )
DataLoader(
            dataset=self.train_ds,
            batch_size=self.hparams.DATASET.BATCH_SIZE,
            num_workers=self.hparams.DATASET.NUM_WORKERS,
            pin_memory=self.hparams.DATASET.PIN_MEMORY,
            shuffle=self.hparams.DATASET.SHUFFLE_TRAIN,
            drop_last=True
        )
DataLoader(
                    dataset=val_ds,
                    batch_size=self.hparams.DATASET.BATCH_SIZE,
                    shuffle=False,
                    num_workers=self.hparams.DATASET.NUM_WORKERS,
                    drop_last=True
                )
https://github.com/pixelite1201/BEDLAM/blob/ebf8bb14a43de46cc74dca4c00c13e571b325726/train/core/hand_trainer.py#L141
https://github.com/pixelite1201/BEDLAM/blob/ebf8bb14a43de46cc74dca4c00c13e571b325726/train/core/hand_trainer.py#L168
https://github.com/pixelite1201/BEDLAM/blob/ebf8bb14a43de46cc74dca4c00c13e571b325726/train/core/hmr_trainer.py#L408
https://github.com/pixelite1201/BEDLAM/blob/ebf8bb14a43de46cc74dca4c00c13e571b325726/train/core/hmr_trainer.py#L435
https://github.com/pixelite1201/BEDLAM/blob/ebf8bb14a43de46cc74dca4c00c13e571b325726/train/core/hmr_trainer_smpl.py#L400
https://github.com/pixelite1201/BEDLAM/blob/ebf8bb14a43de46cc74dca4c00c13e571b325726/train/core/hmr_trainer_smpl.py#L427
https://github.com/pixelite1201/BEDLAM/blob/ebf8bb14a43de46cc74dca4c00c13e571b325726/train/core/smplx_trainer.py#L541
https://github.com/pixelite1201/BEDLAM/blob/ebf8bb14a43de46cc74dca4c00c13e571b325726/train/core/smplx_trainer.py#L568

=============================================
https://github.com/SvenShade/UnicodeAnalogies
=============================================

Found 4 times
DataLoader(trn_ds[i], batch_size=BATCH_S, shuffle=True,  num_workers=WORKERS)
DataLoader(val_ds[i], batch_size=BATCH_S, shuffle=False, num_workers=WORKERS)
DataLoader(tst_ds[i], batch_size=BATCH_S, shuffle=False, num_workers=WORKERS)
DataLoader(d,         batch_size=BATCH_S, shuffle=False, num_workers=WORKERS)
https://github.com/SvenShade/UnicodeAnalogies/blob/550eb9c8350ee2894e92fcaa5cf85df37502c341/experiments/main.py#L92
https://github.com/SvenShade/UnicodeAnalogies/blob/550eb9c8350ee2894e92fcaa5cf85df37502c341/experiments/main.py#L93
https://github.com/SvenShade/UnicodeAnalogies/blob/550eb9c8350ee2894e92fcaa5cf85df37502c341/experiments/main.py#L94
https://github.com/SvenShade/UnicodeAnalogies/blob/550eb9c8350ee2894e92fcaa5cf85df37502c341/experiments/main.py#L95

==============================================
https://github.com/zugexiaodui/campus_vad_code
==============================================

Found 6 times
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, sampler=weighted_sampler,
                                               num_workers=args.workers, pin_memory=True, drop_last=False, prefetch_factor=1)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, sampler=weighted_sampler,
                                               num_workers=args.workers, pin_memory=True, drop_last=False, prefetch_factor=1)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, sampler=weighted_sampler,
                                               num_workers=args.workers, pin_memory=True, drop_last=False, prefetch_factor=1)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, sampler=weighted_sampler,
                                               num_workers=args.workers, pin_memory=True, drop_last=False, prefetch_factor=1)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, sampler=weighted_sampler,
                                               num_workers=args.workers, pin_memory=True, drop_last=False, prefetch_factor=1)
DataLoader(trainset, sampler=weighted_sampler, batch_size=1, pin_memory=True, num_workers=16)
https://github.com/zugexiaodui/campus_vad_code/blob/e7e4301da0459a76f4c0b72c7dcbc58988204753/main/1-finetune.py#L43
https://github.com/zugexiaodui/campus_vad_code/blob/e7e4301da0459a76f4c0b72c7dcbc58988204753/main/1-train_ae.py#L42
https://github.com/zugexiaodui/campus_vad_code/blob/e7e4301da0459a76f4c0b72c7dcbc58988204753/main/1-train_bid.py#L43
https://github.com/zugexiaodui/campus_vad_code/blob/e7e4301da0459a76f4c0b72c7dcbc58988204753/main/1-train_cvae.py#L44
https://github.com/zugexiaodui/campus_vad_code/blob/e7e4301da0459a76f4c0b72c7dcbc58988204753/main/1-train_sce.py#L42
https://github.com/zugexiaodui/campus_vad_code/blob/e7e4301da0459a76f4c0b72c7dcbc58988204753/main/dsets_bid.py#L553

===================================
https://github.com/D1noFuzi/BiasBed
===================================

Found 11 times
torch.utils.data.DataLoader(self.dataset,
                                                  batch_size=self.config.training.batch_size,
                                                  num_workers=self.config.num_workers,
                                                  sampler=sampler)
torch.utils.data.DataLoader(self.dataset,
                                                  batch_size=self.config.training.batch_size,
                                                  num_workers=self.config.num_workers,
                                                  shuffle=False)
DataLoader(
        mnist,
        batch_size=6, shuffle=True)
DataLoader(
        mnist,
        batch_size=6, shuffle=True)
DataLoader(
        mnist,
        batch_size=6, shuffle=True)
torch.utils.data.DataLoader(self.dataset,
                                                  batch_size=self.config.training.batch_size,
                                                  num_workers=self.config.num_workers,
                                                  sampler=sampler)
torch.utils.data.DataLoader(self.dataset,
                                                  batch_size=self.config.training.batch_size,
                                                  num_workers=self.config.num_workers,
                                                  shuffle=False)
torch.utils.data.DataLoader(self.dataset,
                                                  batch_size=self.config.training.batch_size,
                                                  num_workers=self.config.num_workers,
                                                  sampler=sampler)
torch.utils.data.DataLoader(self.dataset,
                                                  batch_size=self.config.training.batch_size,
                                                  num_workers=self.config.num_workers,
                                                  shuffle=False)
torch.utils.data.DataLoader(self.dataset,
                                                  batch_size=self.config.training.batch_size,
                                                  num_workers=self.config.num_workers,
                                                  sampler=sampler)
torch.utils.data.DataLoader(self.dataset,
                                                  batch_size=self.config.training.batch_size,
                                                  num_workers=self.config.num_workers,
                                                  shuffle=False)
https://github.com/D1noFuzi/BiasBed/blob/499b9124f66c86bc35a264e2aa99e57d249fe26c/biasedbed/datasets/CueConflict/dataloader.py#L24
https://github.com/D1noFuzi/BiasBed/blob/499b9124f66c86bc35a264e2aa99e57d249fe26c/biasedbed/datasets/CueConflict/dataloader.py#L37
https://github.com/D1noFuzi/BiasBed/blob/499b9124f66c86bc35a264e2aa99e57d249fe26c/biasedbed/datasets/DeepAug/dataloader_wrapper.py#L67
https://github.com/D1noFuzi/BiasBed/blob/499b9124f66c86bc35a264e2aa99e57d249fe26c/biasedbed/datasets/DeepAug/dataloader_wrapper.py#L71
https://github.com/D1noFuzi/BiasBed/blob/499b9124f66c86bc35a264e2aa99e57d249fe26c/biasedbed/datasets/DeepAug/dataloader_wrapper.py#L75
https://github.com/D1noFuzi/BiasBed/blob/499b9124f66c86bc35a264e2aa99e57d249fe26c/biasedbed/datasets/Edge/dataloader.py#L23
https://github.com/D1noFuzi/BiasBed/blob/499b9124f66c86bc35a264e2aa99e57d249fe26c/biasedbed/datasets/Edge/dataloader.py#L36
https://github.com/D1noFuzi/BiasBed/blob/499b9124f66c86bc35a264e2aa99e57d249fe26c/biasedbed/datasets/Silhouette/dataloader.py#L23
https://github.com/D1noFuzi/BiasBed/blob/499b9124f66c86bc35a264e2aa99e57d249fe26c/biasedbed/datasets/Silhouette/dataloader.py#L36
https://github.com/D1noFuzi/BiasBed/blob/499b9124f66c86bc35a264e2aa99e57d249fe26c/biasedbed/datasets/Sketch/dataloader.py#L23
https://github.com/D1noFuzi/BiasBed/blob/499b9124f66c86bc35a264e2aa99e57d249fe26c/biasedbed/datasets/Sketch/dataloader.py#L36

=====================================================
https://github.com/OVAD-Benchmark/ovad-benchmark-code
=====================================================

Found 7 times
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=None,
        collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
        worker_init_fn=worker_init_reset_seed,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=4,
        pin_memory=False,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=4,
        pin_memory=False,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=4,
        pin_memory=False,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=4,
        pin_memory=False,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=4,
        pin_memory=False,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=4,
        pin_memory=False,
    )
https://github.com/OVAD-Benchmark/ovad-benchmark-code/blob/3e14bb779ae9e55063362cec642d8a96fe2eeb29/ovadb/data/custom_dataset_dataloader.py#L160
https://github.com/OVAD-Benchmark/ovad-benchmark-code/blob/3e14bb779ae9e55063362cec642d8a96fe2eeb29/ovamc/ova_albef.py#L240
https://github.com/OVAD-Benchmark/ovad-benchmark-code/blob/3e14bb779ae9e55063362cec642d8a96fe2eeb29/ovamc/ova_blip.py#L231
https://github.com/OVAD-Benchmark/ovad-benchmark-code/blob/3e14bb779ae9e55063362cec642d8a96fe2eeb29/ovamc/ova_blip2.py#L175
https://github.com/OVAD-Benchmark/ovad-benchmark-code/blob/3e14bb779ae9e55063362cec642d8a96fe2eeb29/ovamc/ova_clip.py#L137
https://github.com/OVAD-Benchmark/ovad-benchmark-code/blob/3e14bb779ae9e55063362cec642d8a96fe2eeb29/ovamc/ova_open_clip.py#L147
https://github.com/OVAD-Benchmark/ovad-benchmark-code/blob/3e14bb779ae9e55063362cec642d8a96fe2eeb29/ovamc/ova_xvlm.py#L244

=================================
https://github.com/bramtoula/vdna
=================================

Found 1 times
torch.utils.data.DataLoader(
            dataset,
            batch_size=self.extraction_settings.batch_size,
            shuffle=False,
            drop_last=False,
            num_workers=self.extraction_settings.num_workers,
        )
https://github.com/bramtoula/vdna/blob/f084d557236e5f175009dd0f51928649f26e85f5/src/vdna/networks/feature_extraction_model.py#L132

===============================
https://github.com/zwx8981/LIQE
===============================

Found 7 times
DataLoader(data, batch_size=bs, shuffle=shuffle, pin_memory=True, num_workers=num_workers)
DataLoader(data, batch_size=bs, shuffle=shuffle, pin_memory=True, num_workers=num_workers)
DataLoader(data, batch_size=bs, shuffle=shuffle, pin_memory=True, num_workers=num_workers)
DataLoader(data, batch_size=bs, shuffle=shuffle, pin_memory=True, num_workers=num_workers)
DataLoader(data, batch_size=bs, shuffle=shuffle, pin_memory=True, num_workers=num_workers)
DataLoader(data, batch_size=bs, shuffle=shuffle, pin_memory=True, num_workers=num_workers)
DataLoader(data, batch_size=bs, shuffle=False, pin_memory=True, num_workers=num_workers)
https://github.com/zwx8981/LIQE/blob/557bf79f970dd328bc2335b834ffc94b3ebff101/utils.py#L31
https://github.com/zwx8981/LIQE/blob/557bf79f970dd328bc2335b834ffc94b3ebff101/utils.py#L50
https://github.com/zwx8981/LIQE/blob/557bf79f970dd328bc2335b834ffc94b3ebff101/utils.py#L66
https://github.com/zwx8981/LIQE/blob/557bf79f970dd328bc2335b834ffc94b3ebff101/utils.py#L85
https://github.com/zwx8981/LIQE/blob/557bf79f970dd328bc2335b834ffc94b3ebff101/utils.py#L104
https://github.com/zwx8981/LIQE/blob/557bf79f970dd328bc2335b834ffc94b3ebff101/utils.py#L123
https://github.com/zwx8981/LIQE/blob/557bf79f970dd328bc2335b834ffc94b3ebff101/utils.py#L135

=====================================
https://github.com/aimagelab/pacscore
=====================================

Found 4 times
DataLoader(dataset, batch_size=args.batch_size_compute_score, shuffle=False, collate_fn=collate_fn)
DataLoader(dataset, batch_size=args.batch_size_compute_score, shuffle=False, collate_fn=collate_fn)
torch.utils.data.DataLoader(CapDataset(captions), batch_size=batch_size, num_workers=num_workers,
                                       shuffle=False)
torch.utils.data.DataLoader(ImageDataset(images, transform), batch_size=batch_size, num_workers=num_workers,
                                       shuffle=False)
https://github.com/aimagelab/pacscore/blob/0277b06da47ce675a4423080a1ed81d3f6d3dd68/compute_correlations.py#L76
https://github.com/aimagelab/pacscore/blob/0277b06da47ce675a4423080a1ed81d3f6d3dd68/compute_correlations.py#L79
https://github.com/aimagelab/pacscore/blob/0277b06da47ce675a4423080a1ed81d3f6d3dd68/evaluation/pac_score/pac_score.py#L54
https://github.com/aimagelab/pacscore/blob/0277b06da47ce675a4423080a1ed81d3f6d3dd68/evaluation/pac_score/pac_score.py#L66

========================================
https://github.com/Vision-CAIR/MammalNet
========================================

Found 24 times
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/build/lib/slowfast/datasets/loader.py#L121
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/build/lib/slowfast/datasets/loader.py#L142
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/build/lib/slowfast/datasets/loader.py#L162
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/build/lib/slowfast/datasets/loader_composition.py#L123
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/build/lib/slowfast/datasets/loader_composition.py#L144
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/build/lib/slowfast/datasets/loader_composition.py#L164
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/slowfast/datasets/loader.py#L121
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/slowfast/datasets/loader.py#L142
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/slowfast/datasets/loader.py#L162
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/slowfast/datasets/loader_composition.py#L125
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/slowfast/datasets/loader_composition.py#L146
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/slowfast/datasets/loader_composition.py#L166
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/build/lib/slowfast/datasets/loader.py#L121
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/build/lib/slowfast/datasets/loader.py#L142
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/build/lib/slowfast/datasets/loader.py#L162
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/build/lib/slowfast/datasets/loader_composition.py#L123
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/build/lib/slowfast/datasets/loader_composition.py#L144
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/build/lib/slowfast/datasets/loader_composition.py#L164
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/slowfast/datasets/loader.py#L121
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/slowfast/datasets/loader.py#L142
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/slowfast/datasets/loader.py#L162
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/slowfast/datasets/loader_composition.py#L125
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/slowfast/datasets/loader_composition.py#L146
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/slowfast/datasets/loader_composition.py#L166

===================================
https://github.com/optas/changeit3d
===================================

Found 21 times
DataLoader(PointcloudDataset(input_gt, pc_transform=network_input_transformations['part_predictor']), batch_size=128, num_workers=10)
DataLoader(PointcloudDataset(input_trans, pc_transform=network_input_transformations['part_predictor']), batch_size=128, num_workers=10)
torch.utils.data.DataLoader(
    test_dataset, batch_size=32, shuffle=True)
torch.utils.data.DataLoader(
    dataset,
    batch_size=opt.batchSize,
    shuffle=True,
    num_workers=int(opt.workers))
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=opt.batchSize,
        shuffle=True,
        num_workers=int(opt.workers))
torch.utils.data.DataLoader(
    dataset,
    batch_size=opt.batchSize,
    shuffle=True,
    num_workers=int(opt.workers))
torch.utils.data.DataLoader(
    test_dataset,
    batch_size=opt.batchSize,
    shuffle=True,
    num_workers=int(opt.workers))
torch.utils.data.DataLoader(dataset=dataset, batch_size=args.batch_size, num_workers=args.num_workers)
torch.utils.data.DataLoader(dataset=dataset,
                                                          batch_size=batch_size,
                                                          shuffle=split == 'train',
                                                          num_workers=args.num_workers,
                                                          worker_init_fn=lambda x: np.random.seed(seed))
torch.utils.data.DataLoader(dataset=dataset,
                                      batch_size=batch_size,
                                      num_workers=num_workers)
torch.utils.data.DataLoader(dataset=dataset,
                                      batch_size=batch_size,
                                      num_workers=num_workers)
torch.utils.data.DataLoader(sub_dset,
                                             shuffle=shuffle,
                                             batch_size=batch_size,
                                             num_workers=dataloader.num_workers)
DataLoader(dataset,
                                         batch_size=batch_size,
                                         shuffle=split == 'train',
                                         num_workers=args.num_workers,
                                         worker_init_fn=lambda x: np.random.seed(seed=seed))
DataLoader(data_loader.dataset,
                        batch_size=batch_size,
                        shuffle=False,
                        num_workers=n_workers,
                        worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(dataset=dataset,
                                         batch_size=args.batch_size,
                                         shuffle=False,
                                         num_workers=args.num_workers,
                                         worker_init_fn=lambda _ : np.random.seed(args.random_seed))
torch.utils.data.DataLoader(dataset=dataset,
                                                     batch_size=args.batch_size,
                                                     shuffle=split == 'train',
                                                     num_workers=args.num_workers,
                                                     worker_init_fn=lambda _ : np.random.seed(seed))
torch.utils.data.DataLoader(dataset=dataset,
                                                     batch_size=args.batch_size,
                                                     shuffle=shuffle_items,
                                                     num_workers=args.num_workers,
                                                     worker_init_fn=lambda x: np.random.seed(seed))
torch.utils.data.DataLoader(dataset=dataset,
                                                     batch_size=args.batch_size,
                                                     shuffle=split == 'train',
                                                     num_workers=args.num_workers,
                                                     worker_init_fn=lambda x: np.random.seed(seed))
torch.utils.data.DataLoader(dataset=dataset,
                                                batch_size=args.batch_size,
                                                shuffle=False,
                                                num_workers=args.num_workers,
                                                worker_init_fn=lambda x: np.random.seed(args.random_seed))
torch.utils.data.DataLoader(dataset=dataset,
                                                     batch_size=args.batch_size,
                                                     shuffle=shuffle_items,
                                                     num_workers=args.num_workers,
                                                     worker_init_fn=lambda x: np.random.seed(seed))
torch.utils.data.DataLoader(dataset=dataset, batch_size=batch_size,
                                         shuffle=False, num_workers=n_workers)
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/evaluation/all_metrics.py#L228
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/evaluation/all_metrics.py#L229
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/external_tools/part_segmentation_pytorch/utils/show_cls.py#L30
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/external_tools/part_segmentation_pytorch/utils/train_classification.py#L67
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/external_tools/part_segmentation_pytorch/utils/train_classification.py#L73
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/external_tools/part_segmentation_pytorch/utils/train_segmentation.py#L48
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/external_tools/part_segmentation_pytorch/utils/train_segmentation.py#L60
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/in_out/changeit3d_net.py#L69
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/in_out/changeit3d_net.py#L107
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/in_out/changeit3d_net.py#L132
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/in_out/changeit3d_net.py#L174
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/in_out/language_contrastive_dataset.py#L89
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/in_out/pointcloud.py#L183
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/in_out/pointcloud.py#L204
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/scripts/evaluate_change_it_3d.py#L62
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/scripts/train_change_it_3d.py#L50
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/scripts/train_test_latent_listener.py#L82
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/scripts/train_test_monolithic_changeit3d_baseline.py#L87
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/scripts/train_test_monolithic_changeit3d_baseline.py#L206
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/scripts/train_test_raw_pc_listener.py#L83
https://github.com/optas/changeit3d/blob/5bdcd18085e791f52e5e86776da9e6b872725dd2/changeit3d/utils/feature_extraction.py#L61

=============================================================
https://github.com/UkcheolShin/MS2-MultiSpectralStereoDataset
=============================================================

Found 1 times
DataLoader(dataset, 
                              batch_size=1,
                              shuffle=False, 
                              num_workers=1, 
                              drop_last=False)
https://github.com/UkcheolShin/MS2-MultiSpectralStereoDataset/blob/0bb0fc1a544d8ad58c7fda5bc025cb0cbb400284/demo.py#L50

===================================
https://github.com/xxgege/NICO-plus
===================================

Found 2 times
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler)
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler)
        )
https://github.com/xxgege/NICO-plus/blob/397942ec7263d2e0536ae695a041a0fa3f0448c0/domainbed/lib/fast_data_loader.py#L35
https://github.com/xxgege/NICO-plus/blob/397942ec7263d2e0536ae695a041a0fa3f0448c0/domainbed/lib/fast_data_loader.py#L60

=================================
https://github.com/ShunLu91/PA-DA
=================================

Found 15 times
torch.utils.data.DataLoader(
            train_data, batch_size=args.train_batch_size, shuffle=True,
            pin_memory=True, num_workers=0 if args.debug else 8)
torch.utils.data.DataLoader(
            valid_data, batch_size=args.valid_batch_size, shuffle=False,
            pin_memory=True, num_workers=0 if args.debug else 16)
torch.utils.data.DataLoader(
            train_data, batch_size=args.train_batch_size, shuffle=True,
            pin_memory=True, num_workers=0 if args.debug else 8)
torch.utils.data.DataLoader(
            valid_data, batch_size=args.valid_batch_size, shuffle=False,
            pin_memory=True, num_workers=0 if args.debug else 16)
torch.utils.data.DataLoader(
            train_data, batch_size=args.train_batch_size, shuffle=True,
            pin_memory=True, num_workers=0 if args.debug else 8)
torch.utils.data.DataLoader(
            valid_data, batch_size=args.valid_batch_size, shuffle=False,
            pin_memory=True, num_workers=0 if args.debug else 16)
torch.utils.data.DataLoader(
            train_data, batch_size=args.train_batch_size,
            sampler=torch.utils.data.sampler.SubsetRandomSampler(train_split),
            num_workers=0 if args.debug else 16, pin_memory=True)
torch.utils.data.DataLoader(
            train_data, batch_size=args.valid_batch_size,
            sampler=torch.utils.data.sampler.SubsetRandomSampler(valid_split),
            num_workers=0 if args.debug else 16, pin_memory=True)
torch.utils.data.DataLoader(
            test_data, batch_size=args.valid_batch_size, shuffle=False,
            pin_memory=True, num_workers=0 if args.debug else 16)
torch.utils.data.DataLoader(
            train_data, batch_size=args.train_batch_size, shuffle=True,
            pin_memory=True, num_workers=0 if args.debug else 8)
torch.utils.data.DataLoader(
            valid_data, batch_size=args.valid_batch_size, shuffle=False,
            pin_memory=True, num_workers=0 if args.debug else 16)
torch.utils.data.DataLoader(
            train_data, batch_size=args.train_batch_size, shuffle=True,
            pin_memory=True, num_workers=0 if args.debug else 8)
torch.utils.data.DataLoader(
            valid_data, batch_size=args.valid_batch_size, shuffle=False,
            pin_memory=True, num_workers=0 if args.debug else 16)
torch.utils.data.DataLoader(
            train_data, batch_size=args.train_batch_size, shuffle=True,
            pin_memory=True, num_workers=0 if args.debug else 8)
torch.utils.data.DataLoader(
            valid_data, batch_size=args.valid_batch_size, shuffle=False,
            pin_memory=True, num_workers=0 if args.debug else 16)
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L219
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L222
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L244
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L247
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L269
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L272
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L305
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L309
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L313
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L340
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L343
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L370
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L373
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L401
https://github.com/ShunLu91/PA-DA/blob/e65ad6235ebc6cd76da181d83b4dfcae6622d216/nasbench201/datasets/dataloader.py#L404

===============================
https://github.com/bfshi/AbSViT
===============================

Found 17 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
                                    inc_dataset, batch_size=int(1.5 * args.batch_size),
                                    num_workers=args.num_workers,
                                    pin_memory=args.pin_mem,
                                    drop_last=False
                                )
torch.utils.data.DataLoader(
                                    ina_dataset, batch_size=int(1.5 * args.batch_size),
                                    num_workers=args.num_workers,
                                    pin_memory=args.pin_mem,
                                    drop_last=False
                                )
torch.utils.data.DataLoader(
                                    inr_dataset, batch_size=int(1.5 * args.batch_size),
                                    num_workers=args.num_workers,
                                    pin_memory=args.pin_mem,
                                    drop_last=False
                                )
torch.utils.data.DataLoader(
                                    insk_dataset, batch_size=int(1.5 * args.batch_size),
                                    num_workers=args.num_workers,
                                    pin_memory=args.pin_mem,
                                    drop_last=False
                                )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            sampler=self.train_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=batch_size if batch_size is not None else self.batch_size,
            sampler=self.val_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            sampler=self.test_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=64,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(
            text_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/main.py#L268
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/main.py#L276
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/main.py#L436
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/main.py#L470
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/main.py#L484
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/main.py#L495
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/vision_language/meter/datamodules/datamodule_base.py#L160
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/vision_language/meter/datamodules/datamodule_base.py#L171
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/vision_language/meter/datamodules/datamodule_base.py#L182
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/vision_language/meter/datamodules/f30k_caption_karpathy_datamodule.py#L22
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/vision_language/meter/datamodules/f30k_caption_karpathy_datamodule.py#L33
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/vision_language/meter/datamodules/f30k_caption_karpathy_datamodule.py#L44
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/vision_language/meter/datamodules/multitask_datamodule.py#L55
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/vision_language/meter/datamodules/multitask_datamodule.py#L65
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/vision_language/meter/datamodules/multitask_datamodule.py#L75
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/vision_language/meter/modules/objectives.py#L296
https://github.com/bfshi/AbSViT/blob/ac35c4289ee69166a8d22997aaeaea5c60878827/vision_language/meter/modules/objectives.py#L312

==================================================
https://github.com/adobe-research/domain-expansion
==================================================

Found 1 times
DataLoader(images, batch_size=max_row_in_img)
https://github.com/adobe-research/domain-expansion/blob/cd1aca717ecef6520b71f12033fc495e68ac45e5/expansion_utils/io_utils.py#L81

=============================
https://github.com/xxgege/GAM
=============================

Found 2 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
https://github.com/xxgege/GAM/blob/694133d9df9266a3df892087ca6b1be72ba610c0/main_cifar.py#L265
https://github.com/xxgege/GAM/blob/694133d9df9266a3df892087ca6b1be72ba610c0/main_cifar.py#L269

=========================================
https://github.com/zhangzhaodi233/ABSCERT
=========================================

Found 4 times
torch.utils.data.DataLoader(data_train,
                                             batch_size=batch_size,
                                             shuffle=True,
                                             num_workers=6)
torch.utils.data.DataLoader(data_test,
                                            batch_size=batch_size,
                                            shuffle=False,
                                            num_workers=6)
torch.utils.data.DataLoader(data_train,
                                             batch_size=batch_size,
                                             shuffle=True,
                                             num_workers=8)
torch.utils.data.DataLoader(data_test,
                                            batch_size=batch_size,
                                            shuffle=False,
                                            num_workers=8)
https://github.com/zhangzhaodi233/ABSCERT/blob/b5cc7c73c1385c4546509f8738bb81aa9484bd5f/TrainRobustNN/utils/datasets.py#L110
https://github.com/zhangzhaodi233/ABSCERT/blob/b5cc7c73c1385c4546509f8738bb81aa9484bd5f/TrainRobustNN/utils/datasets.py#L114
https://github.com/zhangzhaodi233/ABSCERT/blob/b5cc7c73c1385c4546509f8738bb81aa9484bd5f/TrainRobustNN/utils/datasets.py#L136
https://github.com/zhangzhaodi233/ABSCERT/blob/b5cc7c73c1385c4546509f8738bb81aa9484bd5f/TrainRobustNN/utils/datasets.py#L140

===============================================
https://github.com/megvii-research/TPS-CVPR2023
===============================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=int(1. * args.batch_size // utils.get_world_size()),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        persistent_workers=args.persistent_workers,
        prefetch_factor=1,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1. * args.batch_size // utils.get_world_size()),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False,
        persistent_workers=args.persistent_workers if args.workers else False,
        prefetch_factor=1,
    )
https://github.com/megvii-research/TPS-CVPR2023/blob/4ff58efc39ba003a7f769375176d1d8ed8de0b4e/torch_codebase/train.py#L322
https://github.com/megvii-research/TPS-CVPR2023/blob/4ff58efc39ba003a7f769375176d1d8ed8de0b4e/torch_codebase/train.py#L334

============================================
https://github.com/adaptivetokensampling/ATS
============================================

Found 2 times
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
https://github.com/adaptivetokensampling/ATS/blob/21633b99eb62a17ef6793e804e455b16d19bc6cf/libs/datasets/loader.py#L47
https://github.com/adaptivetokensampling/ATS/blob/21633b99eb62a17ef6793e804e455b16d19bc6cf/libs/datasets/loader.py#L59

=========================================
https://github.com/putshua/SNN_attack_RGA
=========================================

Found 23 times
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.workers, pin_memory=False)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=False)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.workers, pin_memory=False)
torch.utils.data.DataLoader(
        train_data_dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset=torchvision.datasets.FashionMNIST(
            root=dataset_dir,
            train=False,
            transform=torchvision.transforms.ToTensor(),
            download=True),
        batch_size=100,
        shuffle=True,
        drop_last=False)
torch.utils.data.DataLoader(
        train_data_dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset=torchvision.datasets.MNIST(
            root=dataset_dir,
            train=False,
            transform=torchvision.transforms.ToTensor(),
            download=True),
        batch_size=100,
        shuffle=True,
        drop_last=False)
torch.utils.data.DataLoader(
        dataset=train_data_dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=False)
torch.utils.data.DataLoader(
        dataset=test_data_dataset,
        batch_size=50,
        shuffle=True,
        drop_last=False)
torch.utils.data.DataLoader(
		dataset=torchvision.datasets.CIFAR10(root=dataset_root_dir,
		train=True,
		transform=torchvision.transforms.Compose([
			transforms.RandomCrop(32, padding=4),
			transforms.RandomHorizontalFlip(),
			transforms.ToTensor(),
			transforms.Normalize(mean=[0.4914, 0.4822, 0.4465], std=[0.557, 0.549, 0.5534])
		]),
		download=True),
		batch_size=batch_size, shuffle=True, pin_memory=True, drop_last=True, num_workers=args.workers)
torch.utils.data.DataLoader(
		dataset=torchvision.datasets.CIFAR10(root=dataset_root_dir,
		train=False,
		transform=torchvision.transforms.Compose([
			transforms.ToTensor(),
			transforms.Normalize(mean=[0.4914, 0.4822, 0.4465], std=[0.557, 0.549, 0.5534])
		]),
		download=True),
		batch_size=batch_size, shuffle=False, pin_memory=True, drop_last=False, num_workers=args.workers)
DataLoader(
        dataset=train_set,
        batch_size=args.b,
        shuffle=True,
        num_workers=args.j,
        drop_last=True,
        pin_memory=True)
DataLoader(
        dataset=test_set,
        batch_size=args.b,
        shuffle=False,
        num_workers=args.j,
        drop_last=False,
        pin_memory=True)
torch.utils.data.DataLoader(
        dataset=train_set,
        batch_size=args.b,
        shuffle=True,
        drop_last=True,
        num_workers=args.j
    )
torch.utils.data.DataLoader(
        dataset=test_set,
        batch_size=args.b,
        shuffle=True,
        drop_last=False,
        num_workers=args.j
    )
data.DataLoader(
        dataset=train_dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True
    )
data.DataLoader(
        dataset=test_dataset,
        batch_size=batch_size,
        shuffle=False,
        drop_last=False
    )
DataLoader(train_dataset, batch_size=batch_size, num_workers=16,
                                  sampler=train_sampler, collate_fn=collate_fn)
DataLoader(test_dataset, batch_size=batch_size, num_workers=16, collate_fn=collate_fn, shuffle=False,
                                 drop_last=False)
torch.utils.data.DataLoader(
        dataset=torchvision.datasets.MNIST(
            root=dataset_dir,
            train=True,
            transform=torchvision.transforms.ToTensor(),
            download=True),
        batch_size=batch_size,
        shuffle=True,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset=torchvision.datasets.MNIST(
            root=dataset_dir,
            train=False,
            transform=torchvision.transforms.ToTensor(),
            download=True),
        batch_size=batch_size,
        shuffle=True,
        drop_last=False)
data.DataLoader(
        dataset=torchvision.datasets.MNIST(
            root=dataset_dir,
            train=True,
            transform=torchvision.transforms.ToTensor(),
            download=True),
        batch_size=batch_size,
        shuffle=True,
        drop_last=True)
data.DataLoader(
        dataset=torchvision.datasets.MNIST(
            root=dataset_dir,
            train=False,
            transform=torchvision.transforms.ToTensor(),
            download=True),
        batch_size=batch_size,
        shuffle=False,
        drop_last=False)
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/main_test.py#L100
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/main_train.py#L87
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/main_train.py#L88
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/ann2snn/examples/cnn_fashionmnist.py#L93
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/ann2snn/examples/cnn_fashionmnist.py#L98
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/ann2snn/examples/cnn_mnist.py#L128
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/ann2snn/examples/cnn_mnist.py#L133
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/ann2snn/examples/resnet18_cifar10.py#L50
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/ann2snn/examples/resnet18_cifar10.py#L60
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/examples/cifar10_r11_enabling_spikebased_backpropagation.py#L248
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/examples/cifar10_r11_enabling_spikebased_backpropagation.py#L260
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/examples/classify_dvsg.py#L294
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/examples/classify_dvsg.py#L302
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/examples/conv_fashion_mnist.py#L214
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/examples/conv_fashion_mnist.py#L222
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/examples/lif_fc_mnist.py#L78
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/examples/lif_fc_mnist.py#L84
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/examples/speechcommands.py#L362
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/examples/speechcommands.py#L367
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/examples/spiking_lstm_sequential_mnist.py#L34
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/clock_driven/examples/spiking_lstm_sequential_mnist.py#L43
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/event_driven/examples/tempotron_mnist.py#L83
https://github.com/putshua/SNN_attack_RGA/blob/a40192c834390425b254dbc5f725dcc101b3b651/spikingjelly/event_driven/examples/tempotron_mnist.py#L92

=============================
https://github.com/yhlleo/MJP
=============================

Found 15 times
torch.utils.data.DataLoader(
    dataset_val, sampler=None,
    batch_size=BATCH_SIZE,
    shuffle=False,
    num_workers=8,
    pin_memory=True,
    drop_last=False
)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
torch.utils.data.DataLoader(naes, batch_size=64, shuffle=False,
                                         num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(noes, batch_size=64, shuffle=False,
                                         num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(val_examples_imagenet_o, batch_size=128, shuffle=False,
                                         num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(val_imagenet, batch_size=128, shuffle=False,
                                         num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(dset.ImageFolder(
    root=PATH_TO_IMAGENET_VAL,
    transform=trn.Compose([trn.Resize(256), trn.CenterCrop(224), trn.ToTensor(), trn.Normalize(mean, std)])),
    batch_size=args.test_bs, shuffle=False, num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
            distorted_dataset, batch_size=args.test_bs, shuffle=False, num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
            distorted_dataset, batch_size=100, shuffle=False, num_workers=4)
DataLoader(
        dataset,
        batch_size=1,
        pin_memory=True,
        num_workers=8,
        drop_last=True,
        shuffle=False
    )
torch.utils.data.DataLoader(
    dataset_val, sampler=None,
    batch_size=BATCH_SIZE,
    shuffle=False,
    num_workers=8,
    pin_memory=True,
    drop_last=False
)
torch.utils.data.DataLoader(
    dataset_val, sampler=None,
    batch_size=BATCH_SIZE,
    shuffle=False,
    num_workers=8,
    pin_memory=True,
    drop_last=False
)
torch.utils.data.DataLoader(
    dataset_val, sampler=None,
    batch_size=BATCH_SIZE,
    shuffle=False,
    num_workers=8,
    pin_memory=True,
    drop_last=False
)
torch.utils.data.DataLoader(
    dataset_val, sampler=None,
    batch_size=BATCH_SIZE,
    shuffle=False,
    num_workers=8,
    pin_memory=True,
    drop_last=False
)
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/eval.py#L40
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/data/build.py#L55
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/data/build.py#L63
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/eval/cal_imagenet_ao.py#L46
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/eval/cal_imagenet_ao.py#L50
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/eval/cal_imagenet_ao.py#L66
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/eval/cal_imagenet_ao.py#L70
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/eval/cal_imagenet_c.py#L42
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/eval/cal_imagenet_c.py#L91
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/eval/prepare_imagenet_c.py#L586
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/gradvit/gradVit.py#L109
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/gradvit/gradvit_eval.py#L45
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/gradvit/gradvit_eval_big_layer.py#L42
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/gradvit/gradvit_eval_grad-abit.py#L45
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/gradvit/gradvit_eval_grad-only.py#L45

===============================================
https://github.com/facebookresearch/ConvNeXt-V2
===============================================

Found 3 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
https://github.com/facebookresearch/ConvNeXt-V2/blob/2553895753323c6fe0b2bf390683f5ea358a42b9/main_finetune.py#L224
https://github.com/facebookresearch/ConvNeXt-V2/blob/2553895753323c6fe0b2bf390683f5ea358a42b9/main_finetune.py#L232
https://github.com/facebookresearch/ConvNeXt-V2/blob/2553895753323c6fe0b2bf390683f5ea358a42b9/main_pretrain.py#L139

==========================================
https://github.com/snap-research/MobileR2L
==========================================

Found 4 times
torch.utils.data.DataLoader(
        dataset=trainset, 
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
        # sampler=InfiniteSamplerWrapper(len(trainset)), # DP training
        sampler=DistributedSampler(
            trainset,
            num_replicas=get_world_size(),
            rank=get_rank(),
            shuffle=True
        ),
        drop_last=True
    )
DataLoader(
            self.train_dataset,
            num_workers=16,
            persistent_workers=True,
            batch_size=None,
            pin_memory=True
        )
DataLoader(
            self.test_dataset,
            num_workers=8,
            batch_size=None,
            pin_memory=True
        )
DataLoader(
            self.pseudo_dataset,
            num_workers=16,
            persistent_workers=True,
            batch_size=None,
            pin_memory=True
        )
https://github.com/snap-research/MobileR2L/blob/4f8929e8a1dcde14bd26565a2522e52c31c714f7/data/data_utils.py#L112
https://github.com/snap-research/MobileR2L/blob/4f8929e8a1dcde14bd26565a2522e52c31c714f7/model/teacher/ngp_pl/train.py#L175
https://github.com/snap-research/MobileR2L/blob/4f8929e8a1dcde14bd26565a2522e52c31c714f7/model/teacher/ngp_pl/train.py#L184
https://github.com/snap-research/MobileR2L/blob/4f8929e8a1dcde14bd26565a2522e52c31c714f7/model/teacher/ngp_pl/train.py#L192

=================================
https://github.com/boheumd/D-NeRV
=================================

Found 2 times
torch.utils.data.DataLoader(train_dataset, batch_size=args.batchSize, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True, worker_init_fn=worker_init_fn, collate_fn=my_collate_fn)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batchSize, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler, drop_last=False, worker_init_fn=worker_init_fn, collate_fn=my_collate_fn)
https://github.com/boheumd/D-NeRV/blob/788d8be4799e71d83141a05bdbaaa4b2caf2709b/train.py#L234
https://github.com/boheumd/D-NeRV/blob/788d8be4799e71d83141a05bdbaaa4b2caf2709b/train.py#L237

===========================================
https://github.com/apple/ml-autofocusformer
===========================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
https://github.com/apple/ml-autofocusformer/blob/9a687eae0649685d998db854a02dad9ba6f8d120/data/build.py#L40
https://github.com/apple/ml-autofocusformer/blob/9a687eae0649685d998db854a02dad9ba6f8d120/data/build.py#L48

=============================================
https://github.com/AngusDujw/FTD-distillation
=============================================

Found 28 times
torch.utils.data.DataLoader(dst_train, batch_size=args.batch_train, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(train_set, batch_size=batch_size, shuffle=True, num_workers=threads, pin_memory=True)
torch.utils.data.DataLoader(test_set, batch_size=batch_size, shuffle=False, num_workers=threads, pin_memory=True)
DataLoader(train_set)
torch.utils.data.DataLoader(dst_train_dict[c], batch_size=batch_size, shuffle=True, num_workers=16)
torch.utils.data.DataLoader(dst_test, batch_size=128, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(dst_train, batch_size=args.batch_train, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(dst_train_dict[c], batch_size=batch_size, shuffle=True, num_workers=16)
torch.utils.data.DataLoader(dst_test, batch_size=128, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(dst_train, batch_size=args.batch_train, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(dst_train_dict[c], batch_size=batch_size, shuffle=True, num_workers=16)
torch.utils.data.DataLoader(dst_test, batch_size=128, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(dst_train, batch_size=args.batch_train, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(dst_train_dict[c], batch_size=batch_size, shuffle=True, num_workers=16)
torch.utils.data.DataLoader(dst_test, batch_size=128, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(dst_train, batch_size=args.batch_train, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(dst_train_dict[c], batch_size=batch_size, shuffle=True, num_workers=16)
torch.utils.data.DataLoader(dst_test, batch_size=128, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(dst_train, batch_size=args.batch_train, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(dst_train_dict[c], batch_size=batch_size, shuffle=True, num_workers=16)
torch.utils.data.DataLoader(dst_test, batch_size=128, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(dst_train, batch_size=args.batch_train, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(dst_train_dict[c], batch_size=batch_size, shuffle=True, num_workers=16)
torch.utils.data.DataLoader(dst_test, batch_size=128, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(dst_train, batch_size=args.batch_train, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(dst_train_dict[c], batch_size=batch_size, shuffle=True, num_workers=16)
torch.utils.data.DataLoader(dst_test, batch_size=128, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(dst_train, batch_size=args.batch_train, shuffle=True, num_workers=0)
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/buffer/buffer_FTD.py#L64
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/buffer/cifar.py#L29
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/buffer/cifar.py#L30
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/buffer/cifar.py#L37
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_arch.py#L106
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_arch.py#L168
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_arch.py#L365
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_baseline.py#L106
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_baseline.py#L168
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_baseline.py#L364
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_baseline_backup.py#L106
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_baseline_backup.py#L168
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_baseline_backup.py#L364
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_buffer_sam.py#L106
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_buffer_sam.py#L168
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_buffer_sam.py#L378
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_eval_sam.py#L106
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_eval_sam.py#L168
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_eval_sam.py#L376
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_gsam.py#L106
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_gsam.py#L168
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_gsam.py#L392
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_mixup.py#L110
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_mixup.py#L172
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_mixup.py#L405
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_vanilla_test.py#L106
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_vanilla_test.py#L168
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/utils/utils_vanilla_test.py#L367

===========================================
https://github.com/Thinklab-SJTU/ThinkMatch
===========================================

Found 1 times
torch.utils.data.DataLoader(
        dataset, batch_size=cfg.BATCH_SIZE, shuffle=shuffle, num_workers=cfg.DATALOADER_NUM, collate_fn=collate_fn,
        pin_memory=False, worker_init_fn=worker_init_fix if fix_seed else worker_init_rand
    )
https://github.com/Thinklab-SJTU/ThinkMatch/blob/63a8d4dd509fd3e738cf752716567eaf86f35a7d/src/dataset/data_loader.py#L462

================================
https://github.com/vishwa91/wire
================================

Found 1 times
DataLoader(dataset, batch_size=batch_size, num_workers=0,
                            pin_memory=True, shuffle=True)
https://github.com/vishwa91/wire/blob/bf95232e0f60434bcbd9b4398ef4c11490832526/wire_multi_sr.py#L110

===================================
https://github.com/OpenGVLab/UniHCP
===================================

Found 6 times
DataLoader(self.dataset, batch_size=config.sampler.batch_size,
                            shuffle=False, num_workers=config.workers,
                            pin_memory=False, sampler=self.sampler)
DataLoader(self.dataset, batch_size=config.sampler.batch_size,
                            shuffle=False, num_workers=config.workers,
                            pin_memory=False, sampler=self.sampler, worker_init_fn=self.worker_init_fn)
DataLoader(self.dataset, batch_size=self.config.sampler.batch_size,
                            shuffle=False, num_workers=self.config.workers, collate_fn=collate,
                            pin_memory=False, sampler=self.sampler, worker_init_fn=self.worker_init_fn)
DataLoader(self.dataset, batch_size=self.config.sampler.batch_size,
                                      shuffle=False, drop_last=False, num_workers=self.config.workers,
                                      pin_memory=False, sampler=self.test_sampler, collate_fn=collate)
DataLoader(self.query_dataset, batch_size=config.sampler.batch_size,
                            shuffle=False, num_workers=config.workers,
                            pin_memory=False, sampler=self.query_sampler)
DataLoader(self.gallery_dataset, batch_size=config.sampler.batch_size,
                            shuffle=False, num_workers=config.workers,
                            pin_memory=False, sampler=self.gallery_sampler)
https://github.com/OpenGVLab/UniHCP/blob/37b93cd450aa423e580043012020a9af2b842e72/core/solvers/solver.py#L151
https://github.com/OpenGVLab/UniHCP/blob/37b93cd450aa423e580043012020a9af2b842e72/core/solvers/solver_deter.py#L75
https://github.com/OpenGVLab/UniHCP/blob/37b93cd450aa423e580043012020a9af2b842e72/core/solvers/solver_multitask_dev.py#L279
https://github.com/OpenGVLab/UniHCP/blob/37b93cd450aa423e580043012020a9af2b842e72/core/solvers/solver_multitask_dev.py#L682
https://github.com/OpenGVLab/UniHCP/blob/37b93cd450aa423e580043012020a9af2b842e72/core/testers/reid_tester.py#L89
https://github.com/OpenGVLab/UniHCP/blob/37b93cd450aa423e580043012020a9af2b842e72/core/testers/reid_tester.py#L98

==================================
https://github.com/PotatoTian/TPGM
==================================

Found 8 times
data.DataLoader(
            dataset,
            batch_size=args.batch_size * args.gpu_per_node,
            num_workers=args.n_workers,
        )
data.DataLoader(
        t_loader,
        shuffle=True,
        batch_size=args.batch_size*args.gpu_per_node,
        num_workers=args.n_workers,
    )
data.DataLoader(
        v_loader,
        batch_size=args.batch_size*args.gpu_per_node,
        num_workers=args.n_workers,
    )
torch.utils.data.DataLoader(
            v_loader,
            sampler=sampler_tpgm,
            batch_size=args.batch_size,
            num_workers=args.n_workers,
            drop_last=False,
            persistent_workers=True,
        )
data.DataLoader(
            dataset,
            batch_size=args.batch_size * args.gpu_per_node * 2,
            num_workers=args.n_workers,
        )
torch.utils.data.DataLoader(
        imagenet_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        drop_last=False,
    )
torch.utils.data.DataLoader(
            ood_dataset,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            drop_last=False,
        )
torch.utils.data.DataLoader(
        imagenet_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        shuffle=True,
        drop_last=False,
    )
https://github.com/PotatoTian/TPGM/blob/8d18db067dd37df01a6c7aa56c18425df31f9b0b/DomainNet_ResNet_Exp/main_eval.py#L93
https://github.com/PotatoTian/TPGM/blob/8d18db067dd37df01a6c7aa56c18425df31f9b0b/DomainNet_ResNet_Exp/main_finetune.py#L35
https://github.com/PotatoTian/TPGM/blob/8d18db067dd37df01a6c7aa56c18425df31f9b0b/DomainNet_ResNet_Exp/main_finetune.py#L42
https://github.com/PotatoTian/TPGM/blob/8d18db067dd37df01a6c7aa56c18425df31f9b0b/DomainNet_ResNet_Exp/main_finetune.py#L113
https://github.com/PotatoTian/TPGM/blob/8d18db067dd37df01a6c7aa56c18425df31f9b0b/DomainNet_ResNet_Exp/main_finetune.py#L172
https://github.com/PotatoTian/TPGM/blob/8d18db067dd37df01a6c7aa56c18425df31f9b0b/ImageNet_ViT_Exp/main_finetune.py#L93
https://github.com/PotatoTian/TPGM/blob/8d18db067dd37df01a6c7aa56c18425df31f9b0b/ImageNet_ViT_Exp/main_finetune.py#L105
https://github.com/PotatoTian/TPGM/blob/8d18db067dd37df01a6c7aa56c18425df31f9b0b/ImageNet_ViT_Exp/main_finetune.py#L119

====================================
https://github.com/ByeongHyunPak/btc
====================================

Found 2 times
DataLoader(dataset, batch_size=spec['batch_size'], num_workers=8, pin_memory=True)
DataLoader(
                    dataset,
                    batch_size = spec['batch_size'],
                    shuffle = (tag == 'train'),
                    num_workers = 8,
                    pin_memory = True, 
                    worker_init_fn = utils.numpy_init_dict[tag]
                )
https://github.com/ByeongHyunPak/btc/blob/e48bfb9d416d03117d60484f6240ac4b90d1a443/test.py#L135
https://github.com/ByeongHyunPak/btc/blob/e48bfb9d416d03117d60484f6240ac4b90d1a443/train.py#L32

=======================================
https://github.com/JierunChen/FasterNet
=======================================

Found 3 times
DataLoader(
            dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            drop_last=self.drop_last,
            pin_memory=self.pin_memory
        )
DataLoader(
            self.dataset_val,
            batch_size=self.batch_size_eva,
            # persistent_workers=True,
            shuffle=False,
            num_workers=self.num_workers,
            drop_last=False,
            pin_memory=self.pin_memory
        )
DataLoader(
            self.dataset_test,
            batch_size=self.batch_size_eva,
            # persistent_workers=True,
            shuffle=False,
            num_workers=self.num_workers,
            drop_last=False,
            pin_memory=self.pin_memory
        )
https://github.com/JierunChen/FasterNet/blob/e8fba4465ae912359c9f661a72b14e39347e4954/data/custom_imagenet_data.py#L136
https://github.com/JierunChen/FasterNet/blob/e8fba4465ae912359c9f661a72b14e39347e4954/data/custom_imagenet_data.py#L147
https://github.com/JierunChen/FasterNet/blob/e8fba4465ae912359c9f661a72b14e39347e4954/data/custom_imagenet_data.py#L160

===================================================
https://github.com/UMass-Foundation-Model/Mod-Squad
===================================================

Found 11 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=False,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=False,
        drop_last=True
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
DataLoader(train_set, batch_size=28*6, num_workers=48, shuffle=False, pin_memory=False)
https://github.com/UMass-Foundation-Model/Mod-Squad/blob/1d17e81d090ac7e1a66dd420194c0b7679d820a4/main_linprobe.py#L180
https://github.com/UMass-Foundation-Model/Mod-Squad/blob/1d17e81d090ac7e1a66dd420194c0b7679d820a4/main_linprobe.py#L188
https://github.com/UMass-Foundation-Model/Mod-Squad/blob/1d17e81d090ac7e1a66dd420194c0b7679d820a4/main_mt.py#L256
https://github.com/UMass-Foundation-Model/Mod-Squad/blob/1d17e81d090ac7e1a66dd420194c0b7679d820a4/main_mt.py#L264
https://github.com/UMass-Foundation-Model/Mod-Squad/blob/1d17e81d090ac7e1a66dd420194c0b7679d820a4/main_pru_tuning.py#L299
https://github.com/UMass-Foundation-Model/Mod-Squad/blob/1d17e81d090ac7e1a66dd420194c0b7679d820a4/main_pru_tuning.py#L307
https://github.com/UMass-Foundation-Model/Mod-Squad/blob/1d17e81d090ac7e1a66dd420194c0b7679d820a4/main_pruning.py#L288
https://github.com/UMass-Foundation-Model/Mod-Squad/blob/1d17e81d090ac7e1a66dd420194c0b7679d820a4/main_pruning.py#L296
https://github.com/UMass-Foundation-Model/Mod-Squad/blob/1d17e81d090ac7e1a66dd420194c0b7679d820a4/visualize.py#L220
https://github.com/UMass-Foundation-Model/Mod-Squad/blob/1d17e81d090ac7e1a66dd420194c0b7679d820a4/visualize.py#L228
https://github.com/UMass-Foundation-Model/Mod-Squad/blob/1d17e81d090ac7e1a66dd420194c0b7679d820a4/util/dataset_taskonomy.py#L330

===================================
https://github.com/apple/ml-destseg
===================================

Found 2 times
DataLoader(
            dataset, batch_size=args.bs, shuffle=False, num_workers=args.num_workers
        )
DataLoader(
        dataset,
        batch_size=args.bs,
        shuffle=True,
        num_workers=args.num_workers,
        drop_last=True,
    )
https://github.com/apple/ml-destseg/blob/f48e8b061f86328eb09c7854caa51e9e58f8fe02/eval.py#L30
https://github.com/apple/ml-destseg/blob/f48e8b061f86328eb09c7854caa51e9e58f8fe02/train.py#L65

===================================
https://github.com/hamarh/HMNet_pth
===================================

Found 8 times
torch.utils.data.DataLoader(dataset,
                                             shuffle=False,
                                             pin_memory=True,
                                             num_workers=0,  # MUST be 0 because dataset.event_transform is needed for backward transformation
                                             batch_size=config.batch_size,
                                             collate_fn=collate_keep_dict)
torch.utils.data.DataLoader(dataset,
                                         shuffle=False,
                                         pin_memory=True,
                                         num_workers=0,  # MUST be 0 because dataset.event_transform is needed for backward transformation
                                         batch_size=config.batch_size,
                                         collate_fn=collate_keep_dict)
torch.utils.data.DataLoader(dataset, sampler=sampler, **loader_param)
torch.utils.data.DataLoader(dataset,
                                             shuffle=False,
                                             pin_memory=True,
                                             num_workers=0,  # MUST be 0 because dataset.event_transform is needed for backward transformation
                                             batch_size=config.batch_size,
                                             collate_fn=collate_keep_dict)
torch.utils.data.DataLoader(dataset, sampler=sampler, **loader_param)
torch.utils.data.DataLoader(dataset,
                                             shuffle=False,
                                             pin_memory=True,
                                             num_workers=0,  # MUST be 0 because dataset.event_transform is needed for backward transformation
                                             batch_size=config.batch_size,
                                             collate_fn=collate_keep_dict)
torch.utils.data.DataLoader(dataset, sampler=sampler, **loader_param)
torch.utils.data.DataLoader(dataset, sampler=sampler, **loader_param)
https://github.com/hamarh/HMNet_pth/blob/18c62a6d1bb0d0362cd7cc011bcb65e2918a0be5/experiments/depth/scripts/test.py#L123
https://github.com/hamarh/HMNet_pth/blob/18c62a6d1bb0d0362cd7cc011bcb65e2918a0be5/experiments/depth/scripts/test_mvsec.py#L111
https://github.com/hamarh/HMNet_pth/blob/18c62a6d1bb0d0362cd7cc011bcb65e2918a0be5/experiments/depth/scripts/train.py#L453
https://github.com/hamarh/HMNet_pth/blob/18c62a6d1bb0d0362cd7cc011bcb65e2918a0be5/experiments/detection/scripts/test.py#L117
https://github.com/hamarh/HMNet_pth/blob/18c62a6d1bb0d0362cd7cc011bcb65e2918a0be5/experiments/detection/scripts/train.py#L454
https://github.com/hamarh/HMNet_pth/blob/18c62a6d1bb0d0362cd7cc011bcb65e2918a0be5/experiments/segmentation/scripts/test.py#L125
https://github.com/hamarh/HMNet_pth/blob/18c62a6d1bb0d0362cd7cc011bcb65e2918a0be5/experiments/segmentation/scripts/train.py#L452
https://github.com/hamarh/HMNet_pth/blob/18c62a6d1bb0d0362cd7cc011bcb65e2918a0be5/hmnet/dataset/custom_loader.py#L36

===============================================================
https://github.com/gist-ailab/block-selection-for-OOD-detection
===============================================================

Found 7 times
torch.utils.data.DataLoader(train_data, batch_size, shuffle=False, pin_memory=True, num_workers = 4)
torch.utils.data.DataLoader(jigsaw, batch_size, shuffle=False, pin_memory=True, num_workers = 4)
torch.utils.data.DataLoader(train_data, batch_size, shuffle=True, pin_memory=True, num_workers = 4)
torch.utils.data.DataLoader(test_data, batch_size, shuffle=False, pin_memory=True, num_workers = 4)
torch.utils.data.DataLoader(test_data, batch_size, shuffle=False, pin_memory=True, num_workers = 4)
torch.utils.data.DataLoader(ood_data, batch_size=100, shuffle=False, pin_memory=True)
torch.utils.data.DataLoader(ood_data, batch_size=100, shuffle=False, pin_memory=True)
https://github.com/gist-ailab/block-selection-for-OOD-detection/blob/75050a642944b609194ba47af6105df974113b5e/utils/dataset.py#L55
https://github.com/gist-ailab/block-selection-for-OOD-detection/blob/75050a642944b609194ba47af6105df974113b5e/utils/dataset.py#L56
https://github.com/gist-ailab/block-selection-for-OOD-detection/blob/75050a642944b609194ba47af6105df974113b5e/utils/dataset.py#L78
https://github.com/gist-ailab/block-selection-for-OOD-detection/blob/75050a642944b609194ba47af6105df974113b5e/utils/dataset.py#L79
https://github.com/gist-ailab/block-selection-for-OOD-detection/blob/75050a642944b609194ba47af6105df974113b5e/utils/dataset.py#L85
https://github.com/gist-ailab/block-selection-for-OOD-detection/blob/75050a642944b609194ba47af6105df974113b5e/utils/dataset.py#L91
https://github.com/gist-ailab/block-selection-for-OOD-detection/blob/75050a642944b609194ba47af6105df974113b5e/utils/dataset.py#L101

=====================================
https://github.com/yuny220/NAR-Former
=====================================

Found 5 times
torch.utils.data.DataLoader(trainset, shuffle=(train_sampler is None), num_workers=args.n_workers, pin_memory=True, batch_sampler=train_sampler)
torch.utils.data.DataLoader(valset, shuffle=(val_sampler is None), num_workers=args.n_workers, pin_memory=True, batch_sampler=val_sampler)
torch.utils.data.DataLoader(dataset, shuffle=(sampler is None), num_workers=args.n_workers, pin_memory=True, batch_sampler=sampler)
torch.utils.data.DataLoader(trainset, shuffle=(train_sampler is None), num_workers=args.n_workers, pin_memory=True, batch_sampler=train_sampler)
torch.utils.data.DataLoader(testset, shuffle=(test_sampler is None), num_workers=args.n_workers, pin_memory=True, batch_sampler=test_sampler)
https://github.com/yuny220/NAR-Former/blob/61f836ae526b62570dd09c20585478405586ad59/data_process/dataloader_all.py#L49
https://github.com/yuny220/NAR-Former/blob/61f836ae526b62570dd09c20585478405586ad59/data_process/dataloader_all.py#L50
https://github.com/yuny220/NAR-Former/blob/61f836ae526b62570dd09c20585478405586ad59/data_process/dataloader_all.py#L55
https://github.com/yuny220/NAR-Former/blob/61f836ae526b62570dd09c20585478405586ad59/data_process/dataloader_all.py#L66
https://github.com/yuny220/NAR-Former/blob/61f836ae526b62570dd09c20585478405586ad59/data_process/dataloader_all.py#L67

====================================
https://github.com/jaeill/CVPR23-VNE
====================================

Found 3 times
torch.utils.data.DataLoader(dataset_train, shuffle=True, pin_memory=True, batch_size=args.batch_size, num_workers=args.num_workers, drop_last=False)
torch.utils.data.DataLoader(dataset_valid, shuffle=False, pin_memory=True, batch_size=args.batch_size, num_workers=args.num_workers)
torch.utils.data.DataLoader(dataset_train, shuffle=True, pin_memory=True, batch_size=args.batch_size, num_workers=args.num_workers, drop_last=True)
https://github.com/jaeill/CVPR23-VNE/blob/c63961b05b66bb1ddeadf5ff129c7f1aabda392f/examples/i-vne+/eval_ivne_imagenet100.py#L108
https://github.com/jaeill/CVPR23-VNE/blob/c63961b05b66bb1ddeadf5ff129c7f1aabda392f/examples/i-vne+/eval_ivne_imagenet100.py#L117
https://github.com/jaeill/CVPR23-VNE/blob/c63961b05b66bb1ddeadf5ff129c7f1aabda392f/examples/i-vne+/train_ivne_imagenet100.py#L194

==================================
https://github.com/changsn/STViT-R
==================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
https://github.com/changsn/STViT-R/blob/cbde1507a43d2aca81e8c42c0e84457ea2bb1427/data/build.py#L63
https://github.com/changsn/STViT-R/blob/cbde1507a43d2aca81e8c42c0e84457ea2bb1427/data/build.py#L71

===========================================
https://github.com/TheStageAI/TorchIntegral
===========================================

Found 6 times
torch.utils.data.DataLoader(
    val_dataset,
    args.batch_size,
    shuffle=False,
    num_workers=args.workers,
    pin_memory=True,
)
torch.utils.data.DataLoader(
    train_dataset,
    args.batch_size,
    shuffle=True,
    num_workers=args.workers,
    pin_memory=True,
)
torch.utils.data.DataLoader(train_dataset, batch_size, shuffle=True)
torch.utils.data.DataLoader(val_dataset, batch_size, shuffle=False)
torch.utils.data.DataLoader(train_dataset, batch_size, shuffle=True)
torch.utils.data.DataLoader(val_dataset, batch_size, shuffle=False)
https://github.com/TheStageAI/TorchIntegral/blob/a4b30a7d7f0100a3e61ce6883f14506a579b3708/examples/classification/imagenet.py#L76
https://github.com/TheStageAI/TorchIntegral/blob/a4b30a7d7f0100a3e61ce6883f14506a579b3708/examples/classification/imagenet.py#L83
https://github.com/TheStageAI/TorchIntegral/blob/a4b30a7d7f0100a3e61ce6883f14506a579b3708/examples/classification/mnist.py#L56
https://github.com/TheStageAI/TorchIntegral/blob/a4b30a7d7f0100a3e61ce6883f14506a579b3708/examples/classification/mnist.py#L61
https://github.com/TheStageAI/TorchIntegral/blob/a4b30a7d7f0100a3e61ce6883f14506a579b3708/examples/classification/nin_cifar.py#L40
https://github.com/TheStageAI/TorchIntegral/blob/a4b30a7d7f0100a3e61ce6883f14506a579b3708/examples/classification/nin_cifar.py#L45

===================================
https://github.com/valeoai/rangevit
===================================

Found 5 times
torch.utils.data.DataLoader(
                self.train_range_loader,
                batch_size=self.settings.batch_size,
                num_workers=self.settings.num_workers,
                drop_last=True,
                sampler=train_sampler,
                collate_fn=collate_fn)
torch.utils.data.DataLoader(
                self.val_range_loader,
                batch_size=self.settings.batch_size_val,
                num_workers=self.settings.num_workers,
                drop_last=False,
                sampler=val_sampler,
                collate_fn=collate_fn)
torch.utils.data.DataLoader(
                self.train_range_loader,
                batch_size=self.settings.batch_size,
                num_workers=self.settings.num_workers,
                shuffle=True,
                drop_last=True,
                collate_fn=collate_fn)
torch.utils.data.DataLoader(
                self.val_range_loader,
                batch_size=self.settings.batch_size_val,
                num_workers=self.settings.num_workers,
                shuffle=False,
                drop_last=False,
                collate_fn=collate_fn)
torch.utils.data.DataLoader(
            val_range_loader,
            batch_size=1,
            sampler=sampler,
            num_workers=self.settings.num_workers,
            shuffle=False,
            drop_last=False)
https://github.com/valeoai/rangevit/blob/4484d35b656f8213d887754780a4aa1e23303ea3/train.py#L163
https://github.com/valeoai/rangevit/blob/4484d35b656f8213d887754780a4aa1e23303ea3/train.py#L171
https://github.com/valeoai/rangevit/blob/4484d35b656f8213d887754780a4aa1e23303ea3/train.py#L182
https://github.com/valeoai/rangevit/blob/4484d35b656f8213d887754780a4aa1e23303ea3/train.py#L190
https://github.com/valeoai/rangevit/blob/4484d35b656f8213d887754780a4aa1e23303ea3/utils/inference/infer_knn.py#L109

===================================
https://github.com/Aldrich2y/MIANet
===================================

Found 4 times
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size, num_workers=args.workers, \
                                               pin_memory=True, sampler=train_sampler, drop_last=True, \
                                               shuffle=False if args.distributed else True)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val, shuffle=False,
                                                 num_workers=args.workers, pin_memory=False, sampler=None)
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size, num_workers=args.workers, \
                                               pin_memory=True, sampler=train_sampler, drop_last=True, \
                                               shuffle=False if args.distributed else True)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val, shuffle=False,
                                                 num_workers=args.workers, pin_memory=False, sampler=None)
https://github.com/Aldrich2y/MIANet/blob/6353ff66a5bb7e1c4a4fd106976b2c275175f78d/test.py#L159
https://github.com/Aldrich2y/MIANet/blob/6353ff66a5bb7e1c4a4fd106976b2c275175f78d/test.py#L187
https://github.com/Aldrich2y/MIANet/blob/6353ff66a5bb7e1c4a4fd106976b2c275175f78d/train.py#L190
https://github.com/Aldrich2y/MIANet/blob/6353ff66a5bb7e1c4a4fd106976b2c275175f78d/train.py#L218

====================================
https://github.com/RUIYUN-ML/ERM-KTP
====================================

Found 6 times
torch.utils.data.DataLoader(image_datasets['train'],
                                                           batch_size=self.batch_size, pin_memory=True,
                                                           shuffle=True, worker_init_fn=set_work_init_fn(self.seed), num_workers=16)
torch.utils.data.DataLoader(image_datasets['val'],
                                                         batch_size=self.batch_size, pin_memory=True,
                                                         shuffle=False, worker_init_fn=set_work_init_fn(self.seed), num_workers=16)
torch.utils.data.DataLoader(data_train,
                                                         batch_size=self.batch_size, pin_memory=True,
                                                         shuffle=True, worker_init_fn=set_work_init_fn(self.seed), num_workers=16)
torch.utils.data.DataLoader(data_train, batch_size=self.batch_size, sampler = torch.utils.data.SubsetRandomSampler(target_index), 
                                                                pin_memory=True, worker_init_fn=set_work_init_fn(self.seed), num_workers=16)
torch.utils.data.DataLoader(data_train, batch_size=self.batch_size, sampler = torch.utils.data.SubsetRandomSampler(nontarget_index), 
                                                                pin_memory=True, worker_init_fn=set_work_init_fn(self.seed), num_workers=16)
torch.utils.data.DataLoader(data_test,
                                                         batch_size=self.batch_size, pin_memory=True,
                                                         shuffle=False, worker_init_fn=set_work_init_fn(self.seed), num_workers=16)
https://github.com/RUIYUN-ML/ERM-KTP/blob/40c2e9d1ac56ecc2f456a91921742359319a2014/ERM-KTP/dataLoader.py#L186
https://github.com/RUIYUN-ML/ERM-KTP/blob/40c2e9d1ac56ecc2f456a91921742359319a2014/ERM-KTP/dataLoader.py#L189
https://github.com/RUIYUN-ML/ERM-KTP/blob/40c2e9d1ac56ecc2f456a91921742359319a2014/ERM-KTP/dataLoader.py#L269
https://github.com/RUIYUN-ML/ERM-KTP/blob/40c2e9d1ac56ecc2f456a91921742359319a2014/ERM-KTP/dataLoader.py#L272
https://github.com/RUIYUN-ML/ERM-KTP/blob/40c2e9d1ac56ecc2f456a91921742359319a2014/ERM-KTP/dataLoader.py#L274
https://github.com/RUIYUN-ML/ERM-KTP/blob/40c2e9d1ac56ecc2f456a91921742359319a2014/ERM-KTP/dataLoader.py#L276

==============================
https://github.com/naver/slack
==============================

Found 5 times
torch.utils.data.DataLoader(
        total_trainset, batch_size=batch, shuffle=train_sampler is None, num_workers=0 if distributed else 32, pin_memory=True,
        sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(
        total_trainset, batch_size=batch, shuffle=False, num_workers=0 if started_with_spawn else 8, pin_memory=True,
        sampler=valid_sampler, drop_last=False)
torch.utils.data.DataLoader(
        testset, batch_size=batch, shuffle=False, num_workers=0 if started_with_spawn else 8, pin_memory=True,
        drop_last=False, sampler=test_sampler
    )
torch.utils.data.DataLoader(
        test_total_trainset, batch_size=batch, shuffle=False, num_workers=0 if started_with_spawn else 8, pin_memory=True,
        drop_last=False, sampler=test_train_sampler
    )
DataLoader(
            self.dataset,
            batch_size=batch_size,
            sampler=self.sampler,
            num_workers=n_workers,  # 0 if self.distributed else n_workers,
            drop_last=self.train,
            shuffle=self.train and self.sampler is None,
            pin_memory=True,
            **self.loader_kwargs,
        )
https://github.com/naver/slack/blob/8d0f2aaca798cea2ebcf5845ce7f744af3c042ab/slack/TrivialAugment/data.py#L425
https://github.com/naver/slack/blob/8d0f2aaca798cea2ebcf5845ce7f744af3c042ab/slack/TrivialAugment/data.py#L428
https://github.com/naver/slack/blob/8d0f2aaca798cea2ebcf5845ce7f744af3c042ab/slack/TrivialAugment/data.py#L432
https://github.com/naver/slack/blob/8d0f2aaca798cea2ebcf5845ce7f744af3c042ab/slack/TrivialAugment/data.py#L438
https://github.com/naver/slack/blob/8d0f2aaca798cea2ebcf5845ce7f744af3c042ab/slack/utils/loaders.py#L203

======================================
https://github.com/tsosea2/marginmatch
======================================

Found 2 times
DataLoader(dset, batch_size=batch_size, shuffle=shuffle,
                          num_workers=num_workers, pin_memory=pin_memory)
DataLoader(dset, batch_sampler=batch_sampler,
                          num_workers=num_workers, pin_memory=pin_memory)
https://github.com/tsosea2/marginmatch/blob/ac34f69cf94611791dee0430ce5ff8d0139c1791/datasets/data_utils.py#L110
https://github.com/tsosea2/marginmatch/blob/ac34f69cf94611791dee0430ce5ff8d0139c1791/datasets/data_utils.py#L143

================================================
https://github.com/hmichaeli/alias_free_convnets
================================================

Found 5 times
torch.utils.data.DataLoader(dataset, batch_size=1024, num_workers=8, shuffle=True)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
                    distorted_dataset, sampler=sampler_val, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers,
                    pin_memory=True)
torch.utils.data.DataLoader(
                distorted_dataset, sampler=sampler_val, batch_size=args.batch_size, shuffle=False,
                num_workers=args.num_workers,
                pin_memory=True)
https://github.com/hmichaeli/alias_free_convnets/blob/5fe2dd28d64d366d2ec2e0f2e07c998a52f8efaa/datasets.py#L179
https://github.com/hmichaeli/alias_free_convnets/blob/5fe2dd28d64d366d2ec2e0f2e07c998a52f8efaa/main.py#L110
https://github.com/hmichaeli/alias_free_convnets/blob/5fe2dd28d64d366d2ec2e0f2e07c998a52f8efaa/main.py#L119
https://github.com/hmichaeli/alias_free_convnets/blob/5fe2dd28d64d366d2ec2e0f2e07c998a52f8efaa/main.py#L329
https://github.com/hmichaeli/alias_free_convnets/blob/5fe2dd28d64d366d2ec2e0f2e07c998a52f8efaa/main.py#L383

========================================
https://github.com/safednn-group/nap-ood
========================================

Found 50 times
DataLoader(dataset, batch_size=self.args.batch_size, num_workers=self.args.workers,
                                pin_memory=True)
DataLoader(train_ds, batch_size=self.args.batch_size, shuffle=True,
                                  num_workers=self.args.workers, pin_memory=True)
DataLoader(valid_ds, batch_size=self.args.batch_size, shuffle=True,
                                  num_workers=self.args.workers, pin_memory=True)
DataLoader(new_train_ds, batch_size=2048, shuffle=True, num_workers=0, pin_memory=False)
DataLoader(new_valid_ds, batch_size=2048, shuffle=True, num_workers=0, pin_memory=False)
DataLoader(dataset_, batch_size=self.args.batch_size, shuffle=False, num_workers=self.args.workers,
                             pin_memory=True)
DataLoader(train_ds, batch_size=self.args.batch_size, shuffle=True,
                                  num_workers=self.args.workers, pin_memory=True, drop_last=True)
DataLoader(valid_ds, batch_size=self.args.batch_size, num_workers=self.args.workers,
                                  pin_memory=True)
DataLoader(dataset, batch_size=self.args.batch_size, num_workers=self.args.workers,
                                pin_memory=True)
DataLoader(dataset,  batch_size=self.args.batch_size, num_workers=self.args.workers, pin_memory=True)
DataLoader(train_ds, batch_size=self.args.batch_size, shuffle=True, num_workers=self.args.workers, pin_memory=True)
DataLoader(valid_ds, batch_size=self.args.batch_size, shuffle=True, num_workers=self.args.workers, pin_memory=True)
DataLoader(new_train_ds, batch_size=2048, shuffle=True, num_workers=0, pin_memory=False)
DataLoader(new_valid_ds, batch_size=2048, shuffle=True, num_workers=0, pin_memory=False)
DataLoader(train_ds, batch_size=self.args.batch_size, shuffle=True, num_workers=self.args.workers, pin_memory=True)
DataLoader(valid_ds, batch_size=self.args.batch_size, shuffle=True, num_workers=self.args.workers, pin_memory=True)
DataLoader(dataset,  batch_size=self.args.batch_size, num_workers=1, pin_memory=True)
DataLoader(train_ds, batch_size=self.args.batch_size, shuffle=True, num_workers=self.args.workers, pin_memory=True)
DataLoader(valid_ds, batch_size=self.args.batch_size, shuffle=True, num_workers=self.args.workers, pin_memory=True)
DataLoader(new_train_ds, batch_size=2048, shuffle=True, num_workers=0, pin_memory=False)
DataLoader(new_valid_ds, batch_size=2048, shuffle=True, num_workers=0, pin_memory=False)
DataLoader(dataset,  batch_size=self.args.batch_size, num_workers=self.args.workers, pin_memory=True)
DataLoader(train_ds, batch_size=self.args.batch_size, shuffle=True, num_workers=self.args.workers, pin_memory=True)
DataLoader(valid_ds, batch_size=self.args.batch_size, shuffle=True, num_workers=self.args.workers, pin_memory=True)
DataLoader(new_train_ds, batch_size=2048, shuffle=True, num_workers=0, pin_memory=False)
DataLoader(new_valid_ds, batch_size=2048, shuffle=True, num_workers=0, pin_memory=False)
DataLoader(dataset,  batch_size=self.args.batch_size, num_workers=self.args.workers, pin_memory=True)
DataLoader(train_ds, batch_size=self.args.batch_size, shuffle=True, num_workers=self.args.workers, pin_memory=True)
DataLoader(valid_ds, batch_size=self.args.batch_size, shuffle=True, num_workers=self.args.workers, pin_memory=True)
DataLoader(new_train_ds, batch_size=2048, shuffle=True, num_workers=0, pin_memory=False)
DataLoader(new_valid_ds, batch_size=2048, shuffle=True, num_workers=0, pin_memory=False)
DataLoader(train_ds, batch_size=self.args.batch_size, shuffle=True, num_workers=self.args.workers, pin_memory=True)
DataLoader(valid_ds, batch_size=self.args.batch_size, shuffle=True, num_workers=self.args.workers, pin_memory=True)
DataLoader(new_train_ds, batch_size=2048, shuffle=True, num_workers=0, pin_memory=False)
DataLoader(new_valid_ds, batch_size=2048, shuffle=True, num_workers=0, pin_memory=False)
DataLoader(train_ds, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
DataLoader(valid_ds, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
DataLoader(dataset,  batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
DataLoader(train_ds, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
DataLoader(valid_ds, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
DataLoader(dataset,  batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
DataLoader(train_ds, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
DataLoader(valid_ds, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
DataLoader(dataset,  batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
DataLoader(train_ds, batch_size=int(args.batch_size/2), shuffle=True, num_workers=args.workers, pin_memory=True)
DataLoader(valid_ds, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
DataLoader(dataset,  batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
DataLoader(train_ds, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
DataLoader(valid_ds, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
DataLoader(dataset,  batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/base_threshold.py#L66
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/base_threshold.py#L132
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/base_threshold.py#L134
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/base_threshold.py#L164
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/base_threshold.py#L165
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/base_threshold.py#L271
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/binary_classifier.py#L66
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/binary_classifier.py#L68
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/binary_classifier.py#L70
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/deep_ensemble.py#L139
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/deep_ensemble.py#L214
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/deep_ensemble.py#L215
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/deep_ensemble.py#L237
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/deep_ensemble.py#L238
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/mcdropout.py#L76
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/mcdropout.py#L77
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/nearest_neighbor.py#L168
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/odin.py#L113
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/odin.py#L114
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/odin.py#L143
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/odin.py#L144
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/openmax.py#L189
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/openmax.py#L247
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/openmax.py#L248
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/openmax.py#L270
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/openmax.py#L271
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/reconstruction_error.py#L70
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/reconstruction_error.py#L145
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/reconstruction_error.py#L146
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/reconstruction_error.py#L169
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/reconstruction_error.py#L170
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/score_svm.py#L60
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/score_svm.py#L61
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/score_svm.py#L83
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/methods/score_svm.py#L84
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/ae_setup.py#L30
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/ae_setup.py#L31
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/ae_setup.py#L32
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/ae_setup.py#L90
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/ae_setup.py#L91
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/ae_setup.py#L92
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/classifier_setup.py#L28
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/classifier_setup.py#L29
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/classifier_setup.py#L30
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/deep_ensemble_setup.py#L27
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/deep_ensemble_setup.py#L28
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/deep_ensemble_setup.py#L29
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/kway_logistic_setup.py#L29
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/kway_logistic_setup.py#L30
https://github.com/safednn-group/nap-ood/blob/15f3d02d2feedb00656fcaff51d93c5a0d9a53b5/setup/categories/kway_logistic_setup.py#L31

================================
https://github.com/val-iisc/DART
================================

Found 2 times
torch.utils.data.DataLoader(
                dataset,
                num_workers=num_workers,
                batch_sampler=_InfiniteSampler(batch_sampler),
            )
torch.utils.data.DataLoader(
                dataset,
                num_workers=num_workers,
                batch_sampler=_InfiniteSampler(batch_sampler),
            )
https://github.com/val-iisc/DART/blob/62274e83d2f08eb416db61d0957476c53fde9361/domainbed/lib/fast_data_loader.py#L34
https://github.com/val-iisc/DART/blob/62274e83d2f08eb416db61d0957476c53fde9361/domainbed/lib/fast_data_loader.py#L70

=================================
https://github.com/guoyongcs/RSPC
=================================

Found 19 times
torch.utils.data.DataLoader(
            test_data, sampler=sampler_val,
            batch_size=int(args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(distorted_dataset, batch_size=1, shuffle=True)
torch.utils.data.DataLoader(distorted_dataset, batch_size=1, shuffle=True)
torch.utils.data.DataLoader(distorted_dataset, batch_size=1, shuffle=True)
torch.utils.data.DataLoader(
  distorted_dataset, batch_size=16, shuffle=True)
torch.utils.data.DataLoader(
  distorted_dataset, batch_size=16, shuffle=True)
torch.utils.data.DataLoader(
  distorted_dataset, batch_size=16, shuffle=True)
torch.utils.data.DataLoader(
                inc_dataset, sampler=sampler_val, batch_size=int(args.batch_size),
                num_workers=args.workers,
                pin_memory=args.pin_mem,
                drop_last=False
            )
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(
            test_data, sampler=sampler_val,
            batch_size=int(args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
                inc_dataset, sampler=sampler_val, batch_size=int(args.batch_size),
                num_workers=args.workers,
                pin_memory=args.pin_mem,
                drop_last=False
            )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
                                    inc_dataset, batch_size=int(1.5 * args.batch_size),
                                    num_workers=args.num_workers,
                                    pin_memory=args.pin_mem,
                                    drop_last=False
                                )
torch.utils.data.DataLoader(imagenet_r, batch_size=int(args.batch_size), shuffle=False, num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
                ina_dataset, batch_size=int(args.batch_size),
                num_workers=args.num_workers,
                pin_memory=args.pin_mem,
                drop_last=False
            )
torch.utils.data.DataLoader(
                                    insk_dataset, batch_size=int(1.5 * args.batch_size),
                                    num_workers=args.num_workers,
                                    pin_memory=args.pin_mem,
                                    drop_last=False
                                )
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/EXP_CIFAR/engine.py#L271
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/EXP_CIFAR/main.py#L298
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/EXP_CIFAR/main.py#L306
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/EXP_CIFAR/DeepAugment/CAE_distort_cifar10.py#L189
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/EXP_CIFAR/DeepAugment/CAE_distort_cifar100.py#L200
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/EXP_CIFAR/DeepAugment/CAE_distort_imagenet.py#L185
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/EXP_CIFAR/DeepAugment/EDSR_distort_cifar10.py#L326
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/EXP_CIFAR/DeepAugment/EDSR_distort_cifar100.py#L338
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/EXP_CIFAR/DeepAugment/EDSR_distort_imagenet.py#L325
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/RSPC_FAN/main.py#L1182
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/RSPC_FAN/utils/utils.py#L135
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/RSPC_RVT/engine.py#L329
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/RSPC_RVT/engine.py#L367
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/RSPC_RVT/main.py#L293
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/RSPC_RVT/main.py#L301
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/RSPC_RVT/main.py#L495
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/RSPC_RVT/main.py#L534
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/RSPC_RVT/main.py#L546
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/RSPC_RVT/main.py#L558

================================
https://github.com/minghanz/E2PN
================================

Found 13 times
torch.utils.data.DataLoader(dataset, \
                                             batch_size=self.opt.batch_size, \
                                             shuffle=False, \
                                             sampler=sampler,
                                             num_workers=self.opt.num_thread)
torch.utils.data.DataLoader(dataset_eval, \
                            batch_size=1, \
                            shuffle=False, \
                            num_workers=1)
torch.utils.data.DataLoader(dataset, \
                                                        batch_size=self.opt.batch_size, \
                                                        shuffle=True, \
                                                        num_workers=self.opt.num_thread)
torch.utils.data.DataLoader(dataset_test, \
                                                        batch_size=test_batch_size, \
                                                        shuffle=False, \
                                                        num_workers=self.opt.num_thread)
torch.utils.data.DataLoader(dataset_test, \
                                                        batch_size=test_batch_size, \
                                                        shuffle=False, \
                                                        num_workers=self.opt.num_thread)
torch.utils.data.DataLoader(dataset_test, \
                                                            batch_size=test_batch_size, \
                                                            shuffle=False, \
                                                            num_workers=self.opt.num_thread)
torch.utils.data.DataLoader(dataset, \
                                                        batch_size=1, \
                                                        shuffle=True, \
                                                        num_workers=self.opt.num_thread)
torch.utils.data.DataLoader(dataset, \
                                                        batch_size=self.opt.batch_size, \
                                                        shuffle=True, \
                                                        num_workers=self.opt.num_thread)
torch.utils.data.DataLoader(dataset_test, \
                                                        batch_size=self.opt.batch_size, \
                                                        shuffle=True, \
                                                        num_workers=self.opt.num_thread)
torch.utils.data.DataLoader(dataset, \
                                                        batch_size=self.opt.batch_size, \
                                                        shuffle=True, \
                                                        num_workers=self.opt.num_thread)
torch.utils.data.DataLoader(dataset, \
                                                        batch_size=self.opt.batch_size, \
                                                        shuffle=True, \
                                                        num_workers=self.opt.num_thread)
torch.utils.data.DataLoader(dataset_test, \
                                                        batch_size=test_batch_size, \
                                                        shuffle=False, \
                                                        num_workers=self.opt.num_thread)
torch.utils.data.DataLoader(dataset_test, \
                                                            batch_size=test_batch_size, \
                                                            shuffle=False, \
                                                            num_workers=self.opt.num_thread)
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_3dmatch.py#L36
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_3dmatch.py#L50
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_modelnet.py#L138
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_modelnet.py#L153
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_modelnet.py#L161
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_modelnet.py#L167
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_modelnetRotation.py#L95
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_modelnetRotation.py#L192
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_modelnetRotation.py#L199
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_modelnet_voxel.py#L29
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_modelnet_voxel.py#L142
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_modelnet_voxel.py#L157
https://github.com/minghanz/E2PN/blob/523e8ef2bd3b13c9eb7f330fb9d6c8d4e986957f/SPConvNets/trainer_modelnet_voxel.py#L163

====================================
https://github.com/tianlizhang/OKDPH
====================================

Found 6 times
DataLoader(traindataset, batch_size=128, shuffle=True, num_workers=8)
DataLoader(traindataset, batch_size=128, shuffle=True, num_workers=8)
DataLoader(traindataset, batch_size=args.bs, shuffle=True, num_workers=8)
DataLoader(testdataset, batch_size=args.bs, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=workers,
        pin_memory=pin_memory,
        sampler=None
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=workers,
        pin_memory=pin_memory
    )
https://github.com/tianlizhang/OKDPH/blob/a562089d10924bd0486d02bda137af5046a4e3cb/src/data/cifar.py#L193
https://github.com/tianlizhang/OKDPH/blob/a562089d10924bd0486d02bda137af5046a4e3cb/src/data/cifar.py#L201
https://github.com/tianlizhang/OKDPH/blob/a562089d10924bd0486d02bda137af5046a4e3cb/src/data/data_loader.py#L81
https://github.com/tianlizhang/OKDPH/blob/a562089d10924bd0486d02bda137af5046a4e3cb/src/data/data_loader.py#L82
https://github.com/tianlizhang/OKDPH/blob/a562089d10924bd0486d02bda137af5046a4e3cb/src/data/imagenet.py#L39
https://github.com/tianlizhang/OKDPH/blob/a562089d10924bd0486d02bda137af5046a4e3cb/src/data/imagenet.py#L47

=======================================================
https://github.com/grigorisg9gr/regularized_polynomials
=======================================================

Found 2 times
DataLoader(db, shuffle=train, batch_size=batch_size,
                          num_workers=num_workers)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
https://github.com/grigorisg9gr/regularized_polynomials/blob/227cc1f15e17a9a514706a74c25a80def72fcc03/torchvision_db.py#L145
https://github.com/grigorisg9gr/regularized_polynomials/blob/227cc1f15e17a9a514706a74c25a80def72fcc03/utils/utils.py#L108

=================================
https://github.com/lyn1874/fedpvr
=================================

Found 1 times
torch.utils.data.DataLoader(data_to_load, 
                                            batch_size=batch_size, 
                                            shuffle=shuffle, 
                                            num_workers=conf.num_workers, 
                                            pin_memory=True,
                                            drop_last=drop_last)
https://github.com/lyn1874/fedpvr/blob/ac40f518cc1d26b2d83bc86cc3bcf95ec36a91d5/data/create_dataset.py#L88

==================================
https://github.com/SamsungLabs/MTL
==================================

Found 2 times
torch.utils.data.DataLoader(self.benchmark.datasets['train'], **self.train_loader_kwargs)
torch.utils.data.DataLoader(self.benchmark.datasets['valid'], **self.valid_loader_kwargs)
https://github.com/SamsungLabs/MTL/blob/3f577f1365101fdd16094313b4a3b0d3845ce10d/train.py#L38
https://github.com/SamsungLabs/MTL/blob/3f577f1365101fdd16094313b4a3b0d3845ce10d/train.py#L84

==========================================
https://github.com/IDEA-Research/MP-Former
==========================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/IDEA-Research/MP-Former/blob/a71f504a467d7079cf02726a05ff23bbb933607d/mask2former_video/data_video/build.py#L244

====================================
https://github.com/sangnekim/SMPConv
====================================

Found 3 times
torch.utils.data.DataLoader(
        training_set,
        batch_size=cfg.train.batch_size,
        shuffle=True,
        num_workers=num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        test_set,
        batch_size=cfg.train.batch_size,
        shuffle=False,
        num_workers=num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
            # validation_set,
            test_set,
            batch_size=cfg.train.batch_size,
            shuffle=False,
            num_workers=num_workers,
            pin_memory=True,
        )
https://github.com/sangnekim/SMPConv/blob/de4e59a76e2255497284f1c5831cdf69552539d1/smp/dataset_constructor.py#L90
https://github.com/sangnekim/SMPConv/blob/de4e59a76e2255497284f1c5831cdf69552539d1/smp/dataset_constructor.py#L97
https://github.com/sangnekim/SMPConv/blob/de4e59a76e2255497284f1c5831cdf69552539d1/smp/dataset_constructor.py#L106

==============================================
https://github.com/MrChenFeng/MaskCon_CVPR2023
==============================================

Found 2 times
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=4, drop_last=True, pin_memory=True)
DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, pin_memory=True)
https://github.com/MrChenFeng/MaskCon_CVPR2023/blob/a8342fb9d23c86bb84cf92242149b84d702fe0e3/main.py#L251
https://github.com/MrChenFeng/MaskCon_CVPR2023/blob/a8342fb9d23c86bb84cf92242149b84d702fe0e3/main.py#L252

====================================
https://github.com/bwconrad/flexivit
====================================

Found 1 times
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            shuffle=False,
            num_workers=self.workers,
            pin_memory=True,
        )
https://github.com/bwconrad/flexivit/blob/2c0dbe278de83a8a5a77bf790acfa528e239ae7a/eval.py#L105

================================
https://github.com/XixiLiu95/GEN
================================

Found 3 times
torch.utils.data.DataLoader(
        dataset, batch_size=args.batch, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
        dataset, batch_size=args.batch, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
        dataset, batch_size=args.batch, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
https://github.com/XixiLiu95/GEN/blob/f63f67c94574debb3cd13b46866ba1eeda00a2c2/extract_feature_bit.py#L56
https://github.com/XixiLiu95/GEN/blob/f63f67c94574debb3cd13b46866ba1eeda00a2c2/extract_feature_timm.py#L61
https://github.com/XixiLiu95/GEN/blob/f63f67c94574debb3cd13b46866ba1eeda00a2c2/extract_feature_vit.py#L54

====================================
https://github.com/haochen-rye/HNeRV
====================================

Found 2 times
torch.utils.data.DataLoader(full_dataset, batch_size=args.batchSize, shuffle=False,
            num_workers=args.workers, pin_memory=True, sampler=sampler, drop_last=False, worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batchSize, shuffle=(train_sampler is None),
         num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True, worker_init_fn=worker_init_fn)
https://github.com/haochen-rye/HNeRV/blob/4872129c8d004a25477e0c1ffbbff4ba71943ad5/train_nerv_all.py#L156
https://github.com/haochen-rye/HNeRV/blob/4872129c8d004a25477e0c1ffbbff4ba71943ad5/train_nerv_all.py#L167

========================================
https://github.com/fagp/sinkhorn-rebasin
========================================

Found 10 times
torch.utils.data.DataLoader(
    training, batch_size=1000, shuffle=True, num_workers=0
)
torch.utils.data.DataLoader(
    validation, batch_size=1000, shuffle=False, num_workers=0
)
torch.utils.data.DataLoader(
    test, batch_size=1000, shuffle=False, num_workers=0
)
torch.utils.data.DataLoader(
    training, batch_size=1000, shuffle=True, num_workers=0
)
torch.utils.data.DataLoader(
    validation, batch_size=1000, shuffle=False, num_workers=0
)
torch.utils.data.DataLoader(
    test, batch_size=1000, shuffle=False, num_workers=0
)
torch.utils.data.DataLoader(
    training, batch_size=128, shuffle=True, num_workers=2
)
torch.utils.data.DataLoader(
    validation, batch_size=100, shuffle=False, num_workers=2
)
torch.utils.data.DataLoader(
    test, batch_size=128, shuffle=False, num_workers=2
)
torch.utils.data.DataLoader(dataset, **opts)
https://github.com/fagp/sinkhorn-rebasin/blob/1c601d4060abcfb3653f2e8fd7cacb4aa63dc12e/examples/main_lmc_cnn.py#L25
https://github.com/fagp/sinkhorn-rebasin/blob/1c601d4060abcfb3653f2e8fd7cacb4aa63dc12e/examples/main_lmc_cnn.py#L28
https://github.com/fagp/sinkhorn-rebasin/blob/1c601d4060abcfb3653f2e8fd7cacb4aa63dc12e/examples/main_lmc_cnn.py#L31
https://github.com/fagp/sinkhorn-rebasin/blob/1c601d4060abcfb3653f2e8fd7cacb4aa63dc12e/examples/main_lmc_mlp.py#L24
https://github.com/fagp/sinkhorn-rebasin/blob/1c601d4060abcfb3653f2e8fd7cacb4aa63dc12e/examples/main_lmc_mlp.py#L27
https://github.com/fagp/sinkhorn-rebasin/blob/1c601d4060abcfb3653f2e8fd7cacb4aa63dc12e/examples/main_lmc_mlp.py#L30
https://github.com/fagp/sinkhorn-rebasin/blob/1c601d4060abcfb3653f2e8fd7cacb4aa63dc12e/examples/main_lmc_resnet.py#L62
https://github.com/fagp/sinkhorn-rebasin/blob/1c601d4060abcfb3653f2e8fd7cacb4aa63dc12e/examples/main_lmc_resnet.py#L65
https://github.com/fagp/sinkhorn-rebasin/blob/1c601d4060abcfb3653f2e8fd7cacb4aa63dc12e/examples/main_lmc_resnet.py#L68
https://github.com/fagp/sinkhorn-rebasin/blob/1c601d4060abcfb3653f2e8fd7cacb4aa63dc12e/examples/datasets/dataloader.py#L37

===========================================================
https://github.com/oleksandr-balabanov/stochastic-ensembles
===========================================================

Found 11 times
torch.utils.data.DataLoader(
        test_dataset_CIFAR10, batch_size=args.eval_batch, shuffle=False
    )
torch.utils.data.DataLoader(
        test_dataset_CIFAR100, batch_size=args.eval_batch, shuffle=False
    )
torch.utils.data.DataLoader(
        test_dataset_SVHN, batch_size=args.eval_batch, shuffle=False
    )
torch.utils.data.DataLoader(
                test_dataset_CIFAR10C, batch_size=args.eval_batch, shuffle=False
            )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch, shuffle=True
    )
torch.utils.data.DataLoader(
        valid_dataset, batch_size=args.test_batch, shuffle=False
    )
torch.utils.data.DataLoader(
        test_dataset, batch_size=args.test_batch, shuffle=False
    )
torch.utils.data.DataLoader(
        eval_dataset, batch_size=args.eval_batch, shuffle=False
    )
torch.utils.data.DataLoader(train_dataset, batch_size=len(train_dataset))
torch.utils.data.DataLoader(
        eval_dataset, batch_size=args.eval_batch, shuffle=False
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch, shuffle=True
    )
https://github.com/oleksandr-balabanov/stochastic-ensembles/blob/b67c830b96e3f9679aed52ee3317983db78501d9/CIFAR/eval/eval_utilities/save_softmax_probs.py#L99
https://github.com/oleksandr-balabanov/stochastic-ensembles/blob/b67c830b96e3f9679aed52ee3317983db78501d9/CIFAR/eval/eval_utilities/save_softmax_probs.py#L102
https://github.com/oleksandr-balabanov/stochastic-ensembles/blob/b67c830b96e3f9679aed52ee3317983db78501d9/CIFAR/eval/eval_utilities/save_softmax_probs.py#L105
https://github.com/oleksandr-balabanov/stochastic-ensembles/blob/b67c830b96e3f9679aed52ee3317983db78501d9/CIFAR/eval/eval_utilities/save_softmax_probs.py#L199
https://github.com/oleksandr-balabanov/stochastic-ensembles/blob/b67c830b96e3f9679aed52ee3317983db78501d9/CIFAR/train/train_ens_CIFAR.py#L36
https://github.com/oleksandr-balabanov/stochastic-ensembles/blob/b67c830b96e3f9679aed52ee3317983db78501d9/CIFAR/train/train_ens_CIFAR.py#L39
https://github.com/oleksandr-balabanov/stochastic-ensembles/blob/b67c830b96e3f9679aed52ee3317983db78501d9/CIFAR/train/train_ens_CIFAR.py#L42
https://github.com/oleksandr-balabanov/stochastic-ensembles/blob/b67c830b96e3f9679aed52ee3317983db78501d9/toy/HMC/eval.py#L47
https://github.com/oleksandr-balabanov/stochastic-ensembles/blob/b67c830b96e3f9679aed52ee3317983db78501d9/toy/HMC/train.py#L41
https://github.com/oleksandr-balabanov/stochastic-ensembles/blob/b67c830b96e3f9679aed52ee3317983db78501d9/toy/stochastic_methods/eval.py#L41
https://github.com/oleksandr-balabanov/stochastic-ensembles/blob/b67c830b96e3f9679aed52ee3317983db78501d9/toy/stochastic_methods/train.py#L33

===========================================
https://github.com/LiruichenSpace/FedFusion
===========================================

Found 5 times
DataLoader(train_dataset, batch_size=256, shuffle=True)
DataLoader(DatasetSplit(dataset, idxs_train),
                        batch_size=len(idxs_train) if len(idxs_train) < self.args.local_bs else self.args.local_bs, 
                        shuffle=True)
DataLoader(DatasetSplit(dataset, idxs_val),
                                 batch_size=len(idxs_val) if len(idxs_val) < 64 else 64, shuffle=False)
DataLoader(DatasetSplit(dataset, idxs_test),
                                batch_size=len(idxs_test) if len(idxs_test) < 64 else 64, shuffle=False)
DataLoader(test_dataset, batch_size=128,
                            shuffle=False)
https://github.com/LiruichenSpace/FedFusion/blob/91f3b3b9d134f4b274bc8bf7c57d59e7c6103d4d/src/baseline_main.py#L71
https://github.com/LiruichenSpace/FedFusion/blob/91f3b3b9d134f4b274bc8bf7c57d59e7c6103d4d/src/update.py#L44
https://github.com/LiruichenSpace/FedFusion/blob/91f3b3b9d134f4b274bc8bf7c57d59e7c6103d4d/src/update.py#L47
https://github.com/LiruichenSpace/FedFusion/blob/91f3b3b9d134f4b274bc8bf7c57d59e7c6103d4d/src/update.py#L49
https://github.com/LiruichenSpace/FedFusion/blob/91f3b3b9d134f4b274bc8bf7c57d59e7c6103d4d/src/update.py#L123

===============================
https://github.com/wenwenyu/TCM
===============================

Found 2 times
DataLoader(
        train_dataset,
        batch_size=bs,
        sampler=None,
        num_workers=24,
        batch_sampler=None,
        collate_fn=partial(collate, samples_per_gpu=bs),
        pin_memory=False,
        worker_init_fn=None,
        )
DataLoader(
        train_dataset,
        batch_size=bs,
        sampler=None,
        num_workers=16,
        batch_sampler=None,
        collate_fn=partial(collate, samples_per_gpu=bs),
        pin_memory=False,
        worker_init_fn=None,
        )
https://github.com/wenwenyu/TCM/blob/cfa4756f4082d7d00e76161fb81dfa2c079d181c/ocrclip/tests/test_dataset/test_st150k_dataset.py#L113
https://github.com/wenwenyu/TCM/blob/cfa4756f4082d7d00e76161fb81dfa2c079d181c/ocrclip/tests/test_dataset/test_st_dataset.py#L111

===================================
https://github.com/microsoft/i-Code
===================================

Found 6 times
DataLoader(
                self.datasets["train"],
                batch_size=self.train_batch_size,
                collate_fn=self.collate,
                drop_last=False,
                num_workers=self.num_workers,
                shuffle=shuffle,
                sampler=sampler,
                pin_memory=True,
            )
DataLoader(
                self.datasets["val"],
                batch_size=self.eval_batch_size,
                collate_fn=self.collate,
                drop_last=False,
                num_workers=self.num_workers,
                shuffle=False,
                sampler=sampler,
                pin_memory=True,
            )
DataLoader(
                self.datasets["test"],
                batch_size=self.eval_batch_size,
                collate_fn=self.collate,
                drop_last=False,
                num_workers=self.num_workers,
                shuffle=False,
                sampler=sampler,
                pin_memory=True,
            )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=args.workers,
        sampler=sampler,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers,
        sampler=sampler,
        drop_last=is_train,
    )
https://github.com/microsoft/i-Code/blob/d2c8d9ab4a199680a6392e4c028e27b291796c88/i-Code-Doc/benchmarker/cli/l5/common/data/datamodule.py#L98
https://github.com/microsoft/i-Code/blob/d2c8d9ab4a199680a6392e4c028e27b291796c88/i-Code-Doc/benchmarker/cli/l5/common/data/datamodule.py#L135
https://github.com/microsoft/i-Code/blob/d2c8d9ab4a199680a6392e4c028e27b291796c88/i-Code-Doc/benchmarker/cli/l5/common/data/datamodule.py#L149
https://github.com/microsoft/i-Code/blob/d2c8d9ab4a199680a6392e4c028e27b291796c88/i-Code-V3/core/models/encoders/clap_modules/training/data.py#L185
https://github.com/microsoft/i-Code/blob/d2c8d9ab4a199680a6392e4c028e27b291796c88/i-Code-V3/core/models/encoders/clap_modules/training/data.py#L701
https://github.com/microsoft/i-Code/blob/d2c8d9ab4a199680a6392e4c028e27b291796c88/i-Code-V3/core/models/encoders/clap_modules/training/data.py#L730

============================================================
https://github.com/AlibabaResearch/AdvancedLiterateMachinery
============================================================

Found 28 times
torch.utils.data.DataLoader(
      Dataset(opt, 'val'), 
      batch_size=1, 
      shuffle=False,
      num_workers=1,
      pin_memory=True
  )
torch.utils.data.DataLoader(
      Dataset(opt, 'train'), 
      batch_size=opt.batch_size, 
      shuffle=True,
      num_workers=opt.num_workers,
      pin_memory=True,
      drop_last=True
  )
torch.utils.data.DataLoader(
    PrefetchDataset(opt, dataset, detector.pre_process), 
    batch_size=1, shuffle=False, num_workers=1, pin_memory=True)
torch.utils.data.DataLoader(
                _dataset, batch_size=_batch_size,
                shuffle=True,
                num_workers=int(opt.workers),
                collate_fn=_AlignCollate, pin_memory=True)
torch.utils.data.DataLoader(
        demo_data, batch_size=opt.batch_size,
        shuffle=False,
        num_workers=int(opt.workers),
        collate_fn=AlignCollate_demo, pin_memory=True)
torch.utils.data.DataLoader(
            eval_data, batch_size=evaluation_batch_size,
            shuffle=False,
            num_workers=int(opt.workers),
            collate_fn=AlignCollate_evaluation, pin_memory=True)
torch.utils.data.DataLoader(
        valid_dataset, batch_size=opt.batch_size,
        shuffle=True,  # 'True' to check training progress with validation function.
        num_workers=int(opt.workers),
        collate_fn=AlignCollate_valid, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=opt.batch_size,
        shuffle=True, 
        num_workers=int(opt.workers), pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
                _dataset, batch_size=_batch_size,
                sampler=train_sampler,
                num_workers=int(opt.workers),
                collate_fn=_AlignCollate, pin_memory=True)
torch.utils.data.DataLoader(
            eval_data, batch_size=evaluation_batch_size,
            shuffle=False,
            num_workers=int(opt.workers),
            collate_fn=AlignCollate_evaluation, pin_memory=True)
torch.utils.data.DataLoader(
                eval_data, batch_size=opt.batch_size,
                shuffle=False,
                num_workers=int(opt.workers),
                collate_fn=AlignCollate_evaluation, pin_memory=True)
torch.utils.data.DataLoader(
        valid_dataset, batch_size=opt.batch_size,
        shuffle=True,  # 'True' to check training progress with validation function.
        num_workers=int(opt.workers),
        collate_fn=AlignCollate_valid, pin_memory=True)
torch.utils.data.DataLoader(train_dataset, batch_size=cfg["batch_size"], \
                                                    num_workers=cfg["num_workers"], pin_memory=True, sampler=train_sampler, collate_fn=train_dataset.collate)
torch.utils.data.DataLoader(val_dataset, batch_size=cfg["batch_size"], \
                                                    num_workers=cfg["num_workers"], pin_memory=True, sampler=val_sampler, collate_fn=val_dataset.collate)
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/DocumentUnderstanding/LORE-TSR/src/main.py#L58
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/DocumentUnderstanding/LORE-TSR/src/main.py#L71
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/DocumentUnderstanding/LORE-TSR/src/test.py#L146
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LevOCR/dataset.py#L66
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LevOCR/demo_imgs.py#L152
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LevOCR/eval.py#L47
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LevOCR/train_final_dist.py#L60
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LevOCR/train_language_dist.py#L52
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/MGP-STR/dataset.py#L77
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/MGP-STR/test_final.py#L70
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/MGP-STR/test_final.py#L378
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/MGP-STR/train_final_dist.py#L52
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/VLPT-STD/main.py#L119
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/VLPT-STD/main.py#L124

=================================
https://github.com/aimagelab/VATr
=================================

Found 4 times
torch.utils.data.DataLoader(
        dataset_train,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True, drop_last=False,
        collate_fn=dataset_train.collate_fn
    )
torch.utils.data.DataLoader(
        dataset_test,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=0,
        pin_memory=True, drop_last=False,
        collate_fn=dataset_test.collate_fn
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=args.num_workers,
        pin_memory=True, drop_last=True,
        collate_fn=dataset.collate_fn)
torch.utils.data.DataLoader(
        datasetval,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=args.num_workers,
        pin_memory=True, drop_last=True,
        collate_fn=datasetval.collate_fn)
https://github.com/aimagelab/VATr/blob/7952b16e4549811c442fb46ed49ac2585908e832/generate_fakes.py#L122
https://github.com/aimagelab/VATr/blob/7952b16e4549811c442fb46ed49ac2585908e832/generate_fakes.py#L132
https://github.com/aimagelab/VATr/blob/7952b16e4549811c442fb46ed49ac2585908e832/train.py#L97
https://github.com/aimagelab/VATr/blob/7952b16e4549811c442fb46ed49ac2585908e832/train.py#L105

====================================
https://github.com/qcf-568/DocTamper
====================================

Found 1 times
DataLoader(dataset=test_data, batch_size=6, num_workers=12, shuffle=False)
https://github.com/qcf-568/DocTamper/blob/c03b7a9b68607592956f926043366ec943ee2d8e/models/eval_dtd.py#L194

================================
https://github.com/dailenson/SDT
================================

Found 5 times
torch.utils.data.DataLoader(test_dataset,
                                              batch_size=64,
                                              shuffle=True,
                                              sampler=None,
                                              drop_last=False,
                                              collate_fn=test_dataset.collate_fn_,
                                              num_workers=8)
torch.utils.data.DataLoader(test_dataset,
                                              batch_size=cfg.TRAIN.IMS_PER_BATCH,
                                              shuffle=True,
                                              sampler=None,
                                              drop_last=False,
                                              collate_fn=test_dataset.collate_fn_,
                                              num_workers=cfg.DATA_LOADER.NUM_THREADS)
torch.utils.data.DataLoader(train_dataset,
                                               batch_size=cfg.TRAIN.IMS_PER_BATCH,
                                               shuffle=True,
                                               drop_last=False,
                                               collate_fn=train_dataset.collate_fn_,
                                               num_workers=cfg.DATA_LOADER.NUM_THREADS)
torch.utils.data.DataLoader(test_dataset,
                                              batch_size=cfg.TRAIN.IMS_PER_BATCH,
                                              shuffle=True,
                                              sampler=None,
                                              drop_last=False,
                                              collate_fn=test_dataset.collate_fn_,
                                              num_workers=cfg.DATA_LOADER.NUM_THREADS)
torch.utils.data.DataLoader(test_dataset,
                                              batch_size=cfg.TRAIN.IMS_PER_BATCH,
                                              shuffle=True,
                                              sampler=None,
                                              drop_last=False,
                                              num_workers=cfg.DATA_LOADER.NUM_THREADS)
https://github.com/dailenson/SDT/blob/af218edca8eb56ea7dcadde68c56286cd5e8e71b/evaluate.py#L12
https://github.com/dailenson/SDT/blob/af218edca8eb56ea7dcadde68c56286cd5e8e71b/test.py#L20
https://github.com/dailenson/SDT/blob/af218edca8eb56ea7dcadde68c56286cd5e8e71b/train.py#L23
https://github.com/dailenson/SDT/blob/af218edca8eb56ea7dcadde68c56286cd5e8e71b/train.py#L31
https://github.com/dailenson/SDT/blob/af218edca8eb56ea7dcadde68c56286cd5e8e71b/user_generate.py#L20

============================================
https://github.com/lilujunai/DisWOT-CVPR2023
============================================

Found 25 times
DataLoader(train_set,
                              batch_size=batch_size,
                              shuffle=True,
                              num_workers=num_workers)
DataLoader(test_set,
                             batch_size=int(batch_size / 2),
                             shuffle=False,
                             num_workers=int(num_workers / 2))
DataLoader(splited_train_dataset,
                              batch_size=batch_size,
                              shuffle=True,
                              num_workers=num_workers)
DataLoader(test_set,
                             batch_size=int(batch_size / 2),
                             shuffle=False,
                             num_workers=int(num_workers / 2))
DataLoader(train_set,
                              batch_size=batch_size,
                              shuffle=True,
                              num_workers=num_workers)
DataLoader(test_set,
                             batch_size=int(batch_size / 2),
                             shuffle=False,
                             num_workers=int(num_workers / 2))
DataLoader(
        train_set,
        batch_size=batch_size,
        shuffle=False,  # need to be False when use sampler
        num_workers=num_workers,
        pin_memory=True,
        sampler=SubsetRandomSampler(indices[:split]))
DataLoader(train_set,
                              batch_size=int(batch_size / 2),
                              shuffle=False,
                              num_workers=int(num_workers / 2),
                              pin_memory=True,
                              sampler=SubsetRandomSampler(
                                  indices[split:num_train]))
DataLoader(train_set,
                              batch_size=batch_size,
                              shuffle=True,
                              num_workers=num_workers)
DataLoader(test_set,
                             batch_size=int(batch_size / 2),
                             shuffle=False,
                             num_workers=int(num_workers / 2))
DataLoader(splited_train_dataset,
                              batch_size=batch_size,
                              shuffle=True,
                              num_workers=num_workers)
DataLoader(test_set,
                             batch_size=int(batch_size / 2),
                             shuffle=False,
                             num_workers=int(num_workers / 2))
DataLoader(train_set,
                              batch_size=batch_size,
                              shuffle=True,
                              num_workers=num_workers)
DataLoader(test_set,
                             batch_size=int(batch_size / 2),
                             shuffle=False,
                             num_workers=int(num_workers / 2))
DataLoader(
        train_set,
        batch_size=batch_size,
        shuffle=False,  # need to be False when use sampler
        num_workers=num_workers,
        pin_memory=True,
        sampler=SubsetRandomSampler(indices[:split]))
DataLoader(train_set,
                              batch_size=int(batch_size / 2),
                              shuffle=False,
                              num_workers=int(num_workers / 2),
                              pin_memory=True,
                              sampler=SubsetRandomSampler(
                                  indices[split:num_train]))
DataLoader(test_set,
                             batch_size=batch_size,
                             shuffle=False,
                             num_workers=num_workers,
                             pin_memory=True)
DataLoader(train_set,
                              batch_size=batch_size,
                              shuffle=True,
                              num_workers=num_workers,
                              pin_memory=True)
DataLoader(test_set,
                             batch_size=batch_size,
                             shuffle=False,
                             num_workers=num_workers,
                             pin_memory=True)
DataLoader(train_set,
                              batch_size=batch_size,
                              shuffle=True,
                              num_workers=num_workers,
                              pin_memory=True)
DataLoader(test_set,
                             batch_size=batch_size,
                             shuffle=False,
                             num_workers=num_workers // 2,
                             pin_memory=True)
DataLoader(train_set,
                              batch_size=batch_size,
                              shuffle=True,
                              num_workers=num_workers,
                              pin_memory=True)
DataLoader(val_set,
                            batch_size=batch_size,
                            shuffle=False,
                            num_workers=num_workers,
                            pin_memory=True)
torch.utils.data.DataLoader(
            train_data,
            batch_size=config.batch_size,
            sampler=torch.utils.data.sampler.SubsetRandomSampler(train_split),
            num_workers=xargs.workers,
            pin_memory=True)
torch.utils.data.DataLoader(
            valid_data,
            batch_size=config.batch_size,
            sampler=torch.utils.data.sampler.SubsetRandomSampler(valid_split),
            num_workers=xargs.workers,
            pin_memory=True)
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar10.py#L95
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar10.py#L104
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar10.py#L152
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar10.py#L156
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar10.py#L292
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar10.py#L301
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar10.py#L366
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar10.py#L374
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar100.py#L95
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar100.py#L104
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar100.py#L152
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar100.py#L156
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar100.py#L292
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar100.py#L301
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar100.py#L366
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/cifar100.py#L374
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/imagenet.py#L145
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/imagenet.py#L190
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/imagenet.py#L195
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/imagenet.py#L249
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/imagenet.py#L255
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/imagenet16.py#L146
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/dataset/imagenet16.py#L151
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/searcher/evo_search_nb201.py#L317
https://github.com/lilujunai/DisWOT-CVPR2023/blob/dffe4e6118a2ab6a5ed89c9495e1ee2b6c808afa/searcher/evo_search_nb201.py#L323

================================
https://github.com/ziplab/SN-Net
================================

Found 12 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
                dataset_train, sampler=sampler_train,
                batch_size=args.stitch_init_bs,
                num_workers=args.num_workers,
                pin_memory=args.pin_mem,
                drop_last=True,
            )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=100,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=100,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False,
    )
DataLoader(dataset, config.DATA.BATCH_SIZE, sampler=sampler, num_workers=config.DATA.NUM_WORKERS, pin_memory=True, drop_last=True, collate_fn=collate_fn)
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_deit/main.py#L100
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_deit/main.py#L108
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_deit/main.py#L154
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_levit/main.py#L231
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_levit/main.py#L239
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_levit/main.py#L287
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_swin/data/build.py#L69
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_swin/data/build.py#L77
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_swin/data/build.py#L114
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_swin/data/data_simmim_ft.py#L33
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_swin/data/data_simmim_ft.py#L41
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_swin/data/data_simmim_pt.py#L97

======================================
https://github.com/ruitian12/resformer
======================================

Found 4 times
torch.utils.data.DataLoader(dataset, sampler=sampler_train, batch_size=args.batch_size, num_workers=args.num_workers,pin_memory=args.pin_mem,drop_last=True)
torch.utils.data.DataLoader( dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers, pin_memory=args.pin_mem, drop_last=True)
torch.utils.data.DataLoader(dataset, sampler= sampler_val, batch_size=int(1.5 * args.batch_size), shuffle=False, num_workers=args.num_workers,pin_memory=args.pin_mem, drop_last=False)
torch.utils.data.DataLoader( dataset, batch_size= int(1.5 * args.batch_size), shuffle=False, num_workers=args.num_workers, pin_memory=args.pin_mem, drop_last=False)
https://github.com/ruitian12/resformer/blob/33e2c09f6c2cfca264644f0948783ad33c8c8e64/image_classification/datasets.py#L287
https://github.com/ruitian12/resformer/blob/33e2c09f6c2cfca264644f0948783ad33c8c8e64/image_classification/datasets.py#L289
https://github.com/ruitian12/resformer/blob/33e2c09f6c2cfca264644f0948783ad33c8c8e64/image_classification/datasets.py#L300
https://github.com/ruitian12/resformer/blob/33e2c09f6c2cfca264644f0948783ad33c8c8e64/image_classification/datasets.py#L303

==================================
https://github.com/hustvl/PD-Quant
==================================

Found 2 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=batch_size, shuffle=True,
        num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(input_size),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=batch_size, shuffle=False,
        num_workers=workers, pin_memory=True)
https://github.com/hustvl/PD-Quant/blob/e12038edd0c39d09772279dba90c43ce9cb5170d/data/imagenet.py#L23
https://github.com/hustvl/PD-Quant/blob/e12038edd0c39d09772279dba90c43ce9cb5170d/data/imagenet.py#L26

======================================
https://github.com/VainF/Torch-Pruning
======================================

Found 12 times
torch.utils.data.DataLoader(train_dst, batch_size=64, shuffle=True, num_workers=4)
torch.utils.data.DataLoader(val_dst, batch_size=128, shuffle=False, num_workers=4)
torch.utils.data.DataLoader(
        train_dst,
        batch_size=args.batch_size,
        num_workers=4,
        drop_last=True,
        shuffle=True,
    )
torch.utils.data.DataLoader(
        val_dst, batch_size=args.batch_size, num_workers=4
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        sampler=train_sampler,
        num_workers=args.workers,
        pin_memory=True,
        collate_fn=collate_fn,
    )
torch.utils.data.DataLoader(
        dataset_test, batch_size=args.batch_size, sampler=test_sampler, num_workers=args.workers, pin_memory=True
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        sampler=train_sampler,
        num_workers=args.workers,
        pin_memory=True,
        collate_fn=collate_fn,
    )
torch.utils.data.DataLoader(
        dataset_test, batch_size=args.batch_size, sampler=test_sampler, num_workers=args.workers, pin_memory=True
    )
torch.utils.data.DataLoader(train_dst, batch_size=train_batch_size, shuffle=True, num_workers=num_workers)
torch.utils.data.DataLoader(val_dst, batch_size=val_batch_size, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(train_dst, batch_size=train_batch_size, shuffle=True, num_workers=num_workers)
torch.utils.data.DataLoader(val_dst, batch_size=val_batch_size, shuffle=False, num_workers=num_workers)
https://github.com/VainF/Torch-Pruning/blob/b4f29f6533c612b9b72531968c73aca83902994f/benchmarks/benchmark_importance_criteria.py#L35
https://github.com/VainF/Torch-Pruning/blob/b4f29f6533c612b9b72531968c73aca83902994f/benchmarks/benchmark_importance_criteria.py#L36
https://github.com/VainF/Torch-Pruning/blob/b4f29f6533c612b9b72531968c73aca83902994f/benchmarks/main.py#L250
https://github.com/VainF/Torch-Pruning/blob/b4f29f6533c612b9b72531968c73aca83902994f/benchmarks/main.py#L257
https://github.com/VainF/Torch-Pruning/blob/b4f29f6533c612b9b72531968c73aca83902994f/benchmarks/main_imagenet.py#L355
https://github.com/VainF/Torch-Pruning/blob/b4f29f6533c612b9b72531968c73aca83902994f/benchmarks/main_imagenet.py#L363
https://github.com/VainF/Torch-Pruning/blob/b4f29f6533c612b9b72531968c73aca83902994f/examples/transformers/finetune.py#L276
https://github.com/VainF/Torch-Pruning/blob/b4f29f6533c612b9b72531968c73aca83902994f/examples/transformers/finetune.py#L284
https://github.com/VainF/Torch-Pruning/blob/b4f29f6533c612b9b72531968c73aca83902994f/examples/transformers/prune_hf_vit.py#L57
https://github.com/VainF/Torch-Pruning/blob/b4f29f6533c612b9b72531968c73aca83902994f/examples/transformers/prune_hf_vit.py#L58
https://github.com/VainF/Torch-Pruning/blob/b4f29f6533c612b9b72531968c73aca83902994f/examples/transformers/prune_timm_vit.py#L84
https://github.com/VainF/Torch-Pruning/blob/b4f29f6533c612b9b72531968c73aca83902994f/examples/transformers/prune_timm_vit.py#L85

====================================
https://github.com/SamsungLabs/Genie
====================================

Found 2 times
torch.utils.data.DataLoader(
            train_set, batch_size=len(train_set), num_workers=4)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True, num_workers=workers, pin_memory=True)
https://github.com/SamsungLabs/Genie/blob/7b089d9e8e49bd5ce5e30f94e0a339fabc369068/main.py#L44
https://github.com/SamsungLabs/Genie/blob/7b089d9e8e49bd5ce5e30f94e0a339fabc369068/utils.py#L53

======================================
https://github.com/poopit/DCD-official
======================================

Found 2 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.num_threads))
DataLoader(dataset, batch_size=batch_size,
                                 shuffle=False, num_workers=num_workers)
https://github.com/poopit/DCD-official/blob/3dbc87b1d44fdb0103adbb4cd3e9c0e45e4e1e95/data/__init__.py#L89
https://github.com/poopit/DCD-official/blob/3dbc87b1d44fdb0103adbb4cd3e9c0e45e4e1e95/metric/cityscapes_mIoU.py#L199

==================================
https://github.com/microsoft/Cream
==================================

Found 140 times
torch.utils.data.DataLoader(
        dataset_test, batch_size=int(2 * args.batch_size),
        sampler=sampler_test, num_workers=args.num_workers,
        pin_memory=args.pin_mem, drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_val, batch_size=int(2 * args.batch_size),
        sampler=sampler_val, num_workers=args.num_workers,
        pin_memory=args.pin_mem, drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, batch_size=int(2 * args.batch_size),
        sampler=sampler_val, num_workers=args.num_workers,
        pin_memory=args.pin_mem, drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_val, batch_size=int(2 * args.batch_size),
        sampler=sampler_val, num_workers=args.num_workers,
        pin_memory=args.pin_mem, drop_last=False
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=imgs_per_gpu),
        pin_memory=False,
        **kwargs)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler_train,
        #sampler=_sampler.SubsetRandomSampler(indices[split:]),
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=imgs_per_gpu),
        pin_memory=False,
        **kwargs)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler_val,
        #sampler=_sampler.SubsetRandomSampler(indices[:split]),
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=imgs_per_gpu),
        pin_memory=False,
        **kwargs)
DataLoader(train_set, batch_size=args.batch_size, shuffle=False, sampler=train_sampler, **kwargs)
DataLoader(val_set, batch_size=args.batch_size, shuffle=False, sampler=val_sampler, **kwargs)
DataLoader(test_set, batch_size=args.batch_size, shuffle=False, sampler=test_sampler, **kwargs)
DataLoader(train_set, batch_size=args.batch_size, shuffle=False, sampler=train_sampler, **kwargs)
DataLoader(val_set, batch_size=max(1, args.batch_size//4), shuffle=False, sampler=val_sampler, num_workers=args.workers, pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size, shuffle=False, sampler=train_sampler, **kwargs)
DataLoader(val_set, batch_size=max(1, args.batch_size//4), shuffle=False, sampler=val_sampler, num_workers=args.workers, pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size, shuffle=False, sampler=train_sampler, **kwargs)
DataLoader(val_set, batch_size=args.batch_size*4, shuffle=False, sampler=val_sampler, num_workers=args.workers, pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, **kwargs)
DataLoader(val_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(train_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(val_set, batch_size=max(1, args.batch_size//4), shuffle=False, num_workers=args.workers, pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(val_set, batch_size=max(1, args.batch_size//4), shuffle=False, num_workers=args.workers, pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, **kwargs)
DataLoader(val_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, **kwargs)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, **kwargs)
DataLoader(val_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(test_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(cityscapes_train, batch_size=2, shuffle=True, num_workers=2)
DataLoader(coco_val, batch_size=4, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(dataset, batch_size=2, shuffle=True, num_workers=0)
DataLoader(cityscapes_train, batch_size=2, shuffle=True, num_workers=2)
DataLoader(voc_train, batch_size=5, shuffle=True, num_workers=0)
DataLoader(sbd_train, batch_size=2, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(
        dataset,
        num_workers=config.DATALOADER.NUM_WORKERS,
        batch_sampler=batch_sampler,
        worker_init_fn=worker_init_reset_seed,
    )
torch.utils.data.DataLoader(
        dataset,
        num_workers=config.DATALOADER.NUM_WORKERS,
        batch_sampler=batch_sampler,
    )
data.DataLoader(train_dataset,
                                   batch_size=batch_size,
                                   sampler = train_sampler,
                                   num_workers=config.num_workers if worker is None else worker,
                                   # drop_last=True,
                                   # shuffle=is_shuffle,
                                   pin_memory=True)
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=valid_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        test_data, batch_size=config.batch_size,
        sampler=test_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=valid_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        test_data, batch_size=config.batch_size,
        sampler=test_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=valid_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        test_data, batch_size=config.batch_size,
        sampler=test_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=valid_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        test_data, batch_size=config.batch_size,
        sampler=test_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=args.workers,
        sampler=sampler,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        # modified for TinyViT, we save logits of all samples
        drop_last=not config.DISTILL.SAVE_TEACHER_LOGITS,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/AutoFormer/evolution.py#L502
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/AutoFormer/evolution.py#L508
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/AutoFormer/supernet_train.py#L231
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/AutoFormer/supernet_train.py#L239
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/AutoFormerV2/evaluation.py#L219
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_detection/mmdet/datasets/loader/build_loader.py#L38
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_detection/mmdet/datasets/loader/build_loader.py#L81
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_detection/mmdet/datasets/loader/build_loader.py#L91
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L15
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L21
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L22
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L41
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L58
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L81
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L102
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L133
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L161
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L176
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L177
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L199
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L215
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L237
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L257
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L268
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L269
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L278
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L279
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L280
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L281
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/datasets/cityscapes.py#L130
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/datasets/coco.py#L137
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/datasets/combine_dbs.py#L78
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/datasets/kd.py#L115
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/datasets/pascal.py#L119
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/datasets/sbd.py#L105
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/segmentation/data/build.py#L124
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/segmentation/data/build.py#L149
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/train/dataloader.py#L85
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/train/train_ade20k_cydas.py#L233
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/cifar.py#L62
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/cifar.py#L67
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/cifar.py#L92
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/cifar.py#L97
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/imagenet.py#L40
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/imagenet.py#L45
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/imagenet.py#L91
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/imagenet.py#L96
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/cifar.py#L61
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/cifar.py#L66
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/cifar.py#L91
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/cifar.py#L96
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/imagenet.py#L40
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/imagenet.py#L45
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/imagenet.py#L91
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/imagenet.py#L96
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/EfficientViT/classification/main.py#L238
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/EfficientViT/classification/main.py#L249
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/MiniViT/Mini-DeiT/main.py#L234
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/MiniViT/Mini-DeiT/main.py#L242
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/MiniViT/Mini-Swin/data/build.py#L41
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/MiniViT/Mini-Swin/data/build.py#L49
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/TinyCLIP/src/training/data.py#L170
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/TinyCLIP/src/training/data.py#L486
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/TinyCLIP/src/training/data.py#L537
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/TinyViT/data/build.py#L80
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/TinyViT/data/build.py#L89
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/iRPE/DETR-with-iRPE/main.py#L160
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/iRPE/DETR-with-iRPE/main.py#L162
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/iRPE/DeiT-with-iRPE/main.py#L235
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/iRPE/DeiT-with-iRPE/main.py#L243

===================================================
https://github.com/hyeon-jo/interchange-transfer-KD
===================================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        shuffle=(sampler is None),
        num_workers=num_workers,
        collate_fn=collate_kitti,
        # pin_memory=True,
        pin_memory=False,
    )
https://github.com/hyeon-jo/interchange-transfer-KD/blob/f20d14335ab9a31b62f2ea7db0f45cf296d2d116/det3d/datasets/loader/build_loader.py#L46

====================================
https://github.com/pengzhiliang/G2SD
====================================

Found 15 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=(TrainingSampler if training else InferenceSampler)(len(dataset)),
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
    )
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
torch.utils.data.DataLoader(
        dataset,  # pyre-ignore[6]
        batch_size=dataset_cfg.IMAGE_LOADER.BATCH_SIZE,
        sampler=training_sampler,
        num_workers=dataset_cfg.IMAGE_LOADER.NUM_WORKERS,
        collate_fn=trivial_batch_collator,
        worker_init_fn=worker_init_reset_seed,
    )
data.DataLoader(dataset, num_workers=0, collate_fn=operator.itemgetter(0))
data.DataLoader(
            dataset,
            num_workers=2,
            collate_fn=operator.itemgetter(0),
            worker_init_fn=worker_init_reset_seed,
            # reset seed should not affect behavior of TrainingSampler
        )
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD/main_distill.py#L175
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD/main_finetune.py#L223
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD/main_finetune.py#L231
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD/main_finetune_dis.py#L229
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD/main_finetune_dis.py#L237
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD/main_linprobe.py#L164
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD/main_linprobe.py#L172
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD/main_pretrain.py#L141
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD_det_dis/configs/Misc/torchvision_imagenet_R_50.py#L41
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD_det_dis/detectron2/data/build.py#L321
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD_det_dis/detectron2/data/build.py#L332
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD_det_dis/detectron2/data/build.py#L537
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD_det_dis/projects/DensePose/densepose/data/build.py#L661
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD_det_dis/tests/data/test_sampler.py#L47
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD_det_dis/tests/data/test_sampler.py#L52

=================================
https://github.com/42Shawn/PTQ4DM
=================================

Found 6 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=batch_size, shuffle=True,
        num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(input_size),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=batch_size, shuffle=False,
        num_workers=workers, pin_memory=True)
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
https://github.com/42Shawn/PTQ4DM/blob/180a4d15d400316e2971f54d10b96c53f8673455/PTQ4DM/QDrop/data/imagenet.py#L26
https://github.com/42Shawn/PTQ4DM/blob/180a4d15d400316e2971f54d10b96c53f8673455/PTQ4DM/QDrop/data/imagenet.py#L29
https://github.com/42Shawn/PTQ4DM/blob/180a4d15d400316e2971f54d10b96c53f8673455/PTQ4DM/guided-diffusion/guided_diffusion/image_datasets.py#L59
https://github.com/42Shawn/PTQ4DM/blob/180a4d15d400316e2971f54d10b96c53f8673455/PTQ4DM/guided-diffusion/guided_diffusion/image_datasets.py#L63
https://github.com/42Shawn/PTQ4DM/blob/180a4d15d400316e2971f54d10b96c53f8673455/PTQ4DM/improved-diffusion/improved_diffusion/image_datasets.py#L45
https://github.com/42Shawn/PTQ4DM/blob/180a4d15d400316e2971f54d10b96c53f8673455/PTQ4DM/improved-diffusion/improved_diffusion/image_datasets.py#L49

==================================================
https://github.com/huawei-noah/Efficient-Computing
==================================================

Found 55 times
torch.utils.data.DataLoader(
        datasets.CIFAR10(root=args.data, train=True, transform=transforms.Compose([
            transforms.RandomHorizontalFlip(),
            transforms.RandomCrop(32, 4), 
            transforms.ToTensor(),
            normalize,
        ]), download=True),
        batch_size=args.batch_size, shuffle=True,
        num_workers=args.workers, pin_memory=False, drop_last=True)
torch.utils.data.DataLoader(
        datasets.CIFAR10(root=args.data, train=False, transform=transforms.Compose([
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=False, drop_last=True)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
DataLoader(data_test, batch_size=64, num_workers=1, shuffle=False)
DataLoader(data_test, batch_size=opt.batch_size, num_workers=0)
DataLoader(data_train, batch_size=256, shuffle=True, num_workers=8)
DataLoader(data_test, batch_size=1024, num_workers=8)
DataLoader(data_train, batch_size=128, shuffle=True, num_workers=8)
DataLoader(data_test, batch_size=100, num_workers=0)
DataLoader(data_train, batch_size=128, shuffle=True, num_workers=0)
DataLoader(data_test, batch_size=128, num_workers=0)
DataLoader(data_test, batch_size=1000, num_workers=0)
DataLoader(data_train, batch_size=256, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(data_train_select, batch_size=256, shuffle=True, num_workers=32)
DataLoader(data_train, batch_size=256, shuffle=True, num_workers=8)
DataLoader(data_test, batch_size=1024, num_workers=8)
DataLoader(data_train, batch_size=128, shuffle=True, num_workers=8)
DataLoader(data_test, batch_size=100, num_workers=0)
DataLoader(data_train, batch_size=128, shuffle=True, num_workers=0)
DataLoader(data_test, batch_size=128, num_workers=0)
DataLoader(dataset=train_set, num_workers=args.threads, batch_size=args.batchSize, shuffle=True)
DataLoader(dataset=train_set, num_workers=args.threads, batch_size=args.batchSize, shuffle=True)
DataLoader(data_test, batch_size=args.batch_size)
torch.utils.data.DataLoader(label_train_subset+unlabel_set, batch_size=opt.pu_batchsize, shuffle=True, num_workers=32)
torch.utils.data.DataLoader(label_testset, batch_size=opt.pu_batchsize, shuffle=False, num_workers=32)
torch.utils.data.DataLoader(unlabel_set, batch_size=opt.pu_batchsize, shuffle=False, num_workers=32)
torch.utils.data.DataLoader(label_train_subset + unlabel_positive_set, batch_size=opt.batchsize, shuffle=True, num_workers=32)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=250,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=False, drop_last=True,
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=250, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
DataLoader(ImageDataset(opt.dataroot, transforms_=transforms_, unaligned=True,mode='train'), batch_size=opt.batchSize, shuffle=True,drop_last=True)
DataLoader(ImageDataset(opt.dataroot, transforms_=transforms_, mode='val'), 
                        batch_size=opt.batchSize, shuffle=False, drop_last=True)
DataLoader(ImageDataset(opt.dataroot, transforms_=transforms_, unaligned=True,mode='train'), batch_size=opt.batchSize, shuffle=True,drop_last=True)
DataLoader(ImageDataset(opt.dataroot, transforms_=transforms_, mode='val'), 
                        batch_size=opt.batchSize, shuffle=False, drop_last=True)
DataLoader(ImageDataset(opt.dataroot, transforms_=transforms_, mode='test'), 
                        batch_size=opt.batchSize, shuffle=False, num_workers=opt.n_cpu)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
                    dataset_train, sampler=sampler_train, batch_size=bs,
                    num_workers=args.num_workers, pin_memory=args.pin_mem, drop_last=True)
torch.utils.data.DataLoader(
            dataset_train, sampler=sampler_train,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=True,
        )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset_val,
        sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset_val,
        sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False)
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/BinaryNetworks/AdaBin/cifar10/main.py#L127
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/BinaryNetworks/AdaBin/cifar10/main.py#L137
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/BinaryNetworks/AdaBin/imagenet/utils/misc.py#L21
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DAFL/DAFL-train.py#L114
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DAFL/DAFL-train.py#L137
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DAFL/teacher-train.py#L48
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DAFL/teacher-train.py#L49
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DAFL/teacher-train.py#L75
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DAFL/teacher-train.py#L76
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DAFL/teacher-train.py#L102
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DAFL/teacher-train.py#L103
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DFND/DFND-train.py#L92
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DFND/DFND-train.py#L114
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DFND/DFND-train.py#L208
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DFND/teacher-train.py#L48
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DFND/teacher-train.py#L49
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DFND/teacher-train.py#L75
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DFND/teacher-train.py#L76
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DFND/teacher-train.py#L102
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DFND/teacher-train.py#L103
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DFSR/distillation.py#L106
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/DFSR/train_teacher.py#L88
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/SP/test.py#L27
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/pu_compress/main.py#L136
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/pu_compress/main.py#L137
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/pu_compress/main.py#L148
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Data-Efficient-Model-Compression/pu_compress/main.py#L153
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Distillation/ManifoldKD/main.py#L229
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Distillation/ManifoldKD/main.py#L237
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/GPT4Image/deit/eval_model.py#L189
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/GPT4Image/deit/main.py#L231
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/GPT4Image/deit/main.py#L238
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/GPT4Image/resnet/main.py#L135
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/GPT4Image/resnet/main.py#L139
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Pruning/GAN-Pruning/finetune.py#L223
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Pruning/GAN-Pruning/search.py#L224
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Pruning/GAN-Pruning/search.py#L503
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Pruning/GAN-Pruning/search.py#L591
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Pruning/GAN-Pruning/test.py#L82
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Pruning/PPT/main.py#L244
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Pruning/PPT/main.py#L254
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Quantization/DynamicQuant/train.py#L247
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Quantization/DynamicQuant/train.py#L251
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Self-supervised/FastMIM/main_finetune.py#L220
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Self-supervised/FastMIM/main_finetune.py#L228
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Self-supervised/FastMIM/main_pretrain.py#L202
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Self-supervised/FastMIM/main_pretrain.py#L208
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Self-supervised/LocalMIM/Swin/run_finetune.py#L134
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Self-supervised/LocalMIM/Swin/run_finetune.py#L141
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Self-supervised/LocalMIM/Swin/run_pretrain.py#L111
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Self-supervised/LocalMIM/ViT/run_finetune.py#L139
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Self-supervised/LocalMIM/ViT/run_finetune.py#L146
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Self-supervised/LocalMIM/ViT/run_pretrain.py#L106
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/TrainingAcceleration/NetworkExpansion/main.py#L242
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/TrainingAcceleration/NetworkExpansion/main.py#L249

=====================================
https://github.com/DoctorKey/Practise
=====================================

Found 7 times
torch.utils.data.DataLoader(
            datasets.ImageFolder(os.path.join(imagenet_path, 'train'), transform), 
            batch_size=batch_size, shuffle=True, num_workers=8, pin_memory=False)
torch.utils.data.DataLoader(
            datasets.ImageFolder(os.path.join(imagenet_path, 'val'), transform), 
            batch_size=batch_size, shuffle=False, num_workers=8, pin_memory=False)
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=shuffle, 
        num_workers=4, pin_memory=False, drop_last=drop_last
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=batch_size, shuffle=shuffle, 
        num_workers=4, pin_memory=False, drop_last=drop_last
    )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size, shuffle=True,
            num_workers=4, pin_memory=False, drop_last=drop_last)
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size, shuffle=True,
            num_workers=4, pin_memory=False, drop_last=drop_last)
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size, shuffle=True,
            num_workers=2, pin_memory=True)
https://github.com/DoctorKey/Practise/blob/71ffc1e2566e57242db46bf337d79b2b287f6465/dataset.py#L130
https://github.com/DoctorKey/Practise/blob/71ffc1e2566e57242db46bf337d79b2b287f6465/dataset.py#L140
https://github.com/DoctorKey/Practise/blob/71ffc1e2566e57242db46bf337d79b2b287f6465/dataset.py#L182
https://github.com/DoctorKey/Practise/blob/71ffc1e2566e57242db46bf337d79b2b287f6465/dataset.py#L221
https://github.com/DoctorKey/Practise/blob/71ffc1e2566e57242db46bf337d79b2b287f6465/dataset.py#L243
https://github.com/DoctorKey/Practise/blob/71ffc1e2566e57242db46bf337d79b2b287f6465/dataset.py#L262
https://github.com/DoctorKey/Practise/blob/71ffc1e2566e57242db46bf337d79b2b287f6465/dataset.py#L275

==============================
https://github.com/klightz/PSF
==============================

Found 10 times
torch.utils.data.DataLoader(train_dataset, batch_size=opt.bs,sampler=train_sampler,
                                                   shuffle=train_sampler is None, num_workers=int(opt.workers), drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=opt.bs,sampler=test_sampler,
                                                   shuffle=False, num_workers=int(opt.workers), drop_last=False)
torch.utils.data.DataLoader(test_dataset, batch_size=opt.batch_size,
                                                      shuffle=False, num_workers=int(opt.workers), drop_last=False)
torch.utils.data.DataLoader(test_dataset, batch_size=opt.batch_size,
                                                  shuffle=False, num_workers=int(opt.workers), drop_last=False)
torch.utils.data.DataLoader(train_dataset, batch_size=opt.bs,sampler=train_sampler,
                                                   shuffle=train_sampler is None, num_workers=int(opt.workers), drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=opt.bs,sampler=test_sampler,
                                                   shuffle=False, num_workers=int(opt.workers), drop_last=False)
torch.utils.data.DataLoader(train_dataset, batch_size=opt.bs,sampler=train_sampler,
                                                   shuffle=train_sampler is None, num_workers=int(opt.workers), drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=opt.bs,sampler=test_sampler,
                                                   shuffle=False, num_workers=int(opt.workers), drop_last=False)
torch.utils.data.DataLoader(train_dataset, batch_size=opt.bs,sampler=train_sampler,
                                                   shuffle=train_sampler is None, num_workers=int(opt.workers), drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=opt.bs,sampler=test_sampler,
                                                   shuffle=False, num_workers=int(opt.workers), drop_last=False)
https://github.com/klightz/PSF/blob/c74b39e1200513039cfb8d776505fb75da599e68/sample_flow.py#L461
https://github.com/klightz/PSF/blob/c74b39e1200513039cfb8d776505fb75da599e68/sample_flow.py#L465
https://github.com/klightz/PSF/blob/c74b39e1200513039cfb8d776505fb75da599e68/test_flow.py#L497
https://github.com/klightz/PSF/blob/c74b39e1200513039cfb8d776505fb75da599e68/test_flow.py#L534
https://github.com/klightz/PSF/blob/c74b39e1200513039cfb8d776505fb75da599e68/train_distill.py#L250
https://github.com/klightz/PSF/blob/c74b39e1200513039cfb8d776505fb75da599e68/train_distill.py#L254
https://github.com/klightz/PSF/blob/c74b39e1200513039cfb8d776505fb75da599e68/train_flow.py#L254
https://github.com/klightz/PSF/blob/c74b39e1200513039cfb8d776505fb75da599e68/train_flow.py#L258
https://github.com/klightz/PSF/blob/c74b39e1200513039cfb8d776505fb75da599e68/train_reflow.py#L252
https://github.com/klightz/PSF/blob/c74b39e1200513039cfb8d776505fb75da599e68/train_reflow.py#L256

=======================================
https://github.com/WenkeHuang/RethinkFL
=======================================

Found 9 times
DataLoader(train_dataset,
                                  batch_size=setting.args.local_batch_size, sampler=train_sampler, num_workers=4, drop_last=True)
DataLoader(test_dataset,
                             batch_size=setting.args.local_batch_size, shuffle=False, num_workers=4)
DataLoader(train_dataset,
                                  batch_size=setting.args.local_batch_size, sampler=train_sampler)
DataLoader(test_dataset,
                                 batch_size=setting.args.local_batch_size, shuffle=False)
DataLoader(test_dataset, batch_size=setting.args.local_batch_size)
DataLoader(train_dataset,
                                  batch_size=setting.args.local_batch_size, sampler=train_sampler)
DataLoader(test_dataset, batch_size=setting.args.local_batch_size)
DataLoader(train_dataset,
                                  batch_size=setting.args.local_batch_size, sampler=train_sampler)
DataLoader(train_dataset, batch_size=setting.args.public_batch_size, sampler=train_sampler, num_workers=4)
https://github.com/WenkeHuang/RethinkFL/blob/eab4f3f3722139f2b81869d33b507e04a4283eca/datasets/utils/federated_dataset.py#L101
https://github.com/WenkeHuang/RethinkFL/blob/eab4f3f3722139f2b81869d33b507e04a4283eca/datasets/utils/federated_dataset.py#L105
https://github.com/WenkeHuang/RethinkFL/blob/eab4f3f3722139f2b81869d33b507e04a4283eca/datasets/utils/federated_dataset.py#L148
https://github.com/WenkeHuang/RethinkFL/blob/eab4f3f3722139f2b81869d33b507e04a4283eca/datasets/utils/federated_dataset.py#L159
https://github.com/WenkeHuang/RethinkFL/blob/eab4f3f3722139f2b81869d33b507e04a4283eca/datasets/utils/federated_dataset.py#L184
https://github.com/WenkeHuang/RethinkFL/blob/eab4f3f3722139f2b81869d33b507e04a4283eca/datasets/utils/federated_dataset.py#L232
https://github.com/WenkeHuang/RethinkFL/blob/eab4f3f3722139f2b81869d33b507e04a4283eca/datasets/utils/federated_dataset.py#L254
https://github.com/WenkeHuang/RethinkFL/blob/eab4f3f3722139f2b81869d33b507e04a4283eca/datasets/utils/federated_dataset.py#L271
https://github.com/WenkeHuang/RethinkFL/blob/eab4f3f3722139f2b81869d33b507e04a4283eca/datasets/utils/public_dataset.py#L76

==================================
https://github.com/bytedance/MRECG
==================================

Found 2 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=batch_size, shuffle=True,
        num_workers=num_workers, pin_memory=pin_memory)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(test_resize),
            transforms.CenterCrop(input_size),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=batch_size, shuffle=False,
        num_workers=num_workers, pin_memory=pin_memory)
https://github.com/bytedance/MRECG/blob/6e48c483776a8175164f965e7b765a6c7193312c/data/imagenet.py#L23
https://github.com/bytedance/MRECG/blob/6e48c483776a8175164f965e7b765a6c7193312c/data/imagenet.py#L26

======================================
https://github.com/ECoLab-POSTECH/NIPQ
======================================

Found 15 times
torch.utils.data.DataLoader(
            train_dataset, batch_size=train_batch, sampler=train_sampler,
            num_workers=num_workers, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
            valid_dataset, batch_size=test_batch, sampler=valid_sampler,
            num_workers=num_workers, pin_memory=False, drop_last=False)
torch.utils.data.DataLoader(
            testset,
            batch_size=test_batch, shuffle=False,
            num_workers=num_workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
            validset, batch_size=valid_batch, sampler=valid_sampler,
            num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(
            trainset, batch_size=train_batch, sampler=train_sampler,
            num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(
            testset, batch_size=test_batch, shuffle=False,
            num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(
            train_dataset, batch_size=train_batch, 
            shuffle=True, num_workers=num_workers, pin_memory=True)
torch.utils.data.DataLoader(
            valid_dataset, batch_size=test_batch, sampler=valid_sampler,
            num_workers=num_workers, pin_memory=False, drop_last=False)
torch.utils.data.DataLoader(
            test_dataset, batch_size=test_batch, sampler=test_sampler,
            num_workers=num_workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
            train_dataset, batch_size=train_batch, 
            shuffle=True, num_workers=num_workers, pin_memory=True)
torch.utils.data.DataLoader(
            valid_dataset, batch_size=test_batch, sampler=valid_sampler,
            num_workers=num_workers, pin_memory=False, drop_last=False)
torch.utils.data.DataLoader(
            test_dataset, batch_size=test_batch, sampler=test_sampler,
            num_workers=num_workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
            train_dataset, batch_size=train_batch, 
            shuffle=True, num_workers=num_workers, pin_memory=True)
torch.utils.data.DataLoader(
            valid_dataset, batch_size=test_batch, sampler=valid_sampler,
            num_workers=num_workers, pin_memory=False, drop_last=False)
torch.utils.data.DataLoader(
            test_dataset, batch_size=test_batch, sampler=test_sampler,
            num_workers=num_workers, pin_memory=True, drop_last=False)
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/cifar10.py#L77
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/cifar10.py#L99
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/cifar10.py#L115
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/cifar100.py#L77
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/cifar100.py#L87
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/cifar100.py#L96
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/imagenet.py#L59
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/imagenet.py#L77
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/imagenet.py#L94
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/imagenet_basic.py#L52
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/imagenet_basic.py#L70
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/imagenet_basic.py#L87
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/imagenet_bic.py#L60
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/imagenet_bic.py#L78
https://github.com/ECoLab-POSTECH/NIPQ/blob/b0da822793625047378a9b9f25b35939383a0e9e/my_lib/datasets/imagenet_bic.py#L95

========================================
https://github.com/mit-han-lab/sparsevit
========================================

Found 21 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/mmdet/datasets/builder.py#L195
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_data/test_datasets/test_common.py#L224
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L76
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L88
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L99
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L111
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L115
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L133
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L135
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L155
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L157
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L177
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L197
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L216
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_runtime/test_eval_hook.py#L236
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_utils/test_hook.py#L92
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_utils/test_hook.py#L190
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_utils/test_hook.py#L246
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_utils/test_hook.py#L268
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_utils/test_hook.py#L310
https://github.com/mit-han-lab/sparsevit/blob/aae6a5af59518a3cde21b2c4bafb80c9059243d1/tests/test_utils/test_hook.py#L347

=================================================
https://github.com/SLDGroup/GradientFilter-CVPR23
=================================================

Found 19 times
DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=self.train_shuffle,
                          num_workers=self.train_workers, pin_memory=False)
DataLoader(self.val_dataset, batch_size=self.batch_size, shuffle=False,
                          num_workers=self.val_workers, pin_memory=False)
DataLoader(self.val_dataset, batch_size=1, shuffle=False,
                          num_workers=self.val_workers, pin_memory=True)
DataLoader(self.val_dataset, batch_size=1, shuffle=False,
                          num_workers=self.val_workers, pin_memory=True)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
        test_dataset,
        batch_size=1,
        sampler=None,
        num_workers=0,
        shuffle=False,
    )
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/classification/dataloader/pl_dataset.py#L223
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/classification/dataloader/pl_dataset.py#L227
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/classification/dataloader/pl_dataset.py#L231
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/classification/dataloader/pl_dataset.py#L235
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/mmseg/datasets/builder.py#L148
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/mmseg/datasets/builder.py#L161
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_eval_hook.py#L46
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_eval_hook.py#L58
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_eval_hook.py#L60
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_eval_hook.py#L84
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_eval_hook.py#L96
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_eval_hook.py#L98
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_eval_hook.py#L133
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_eval_hook.py#L145
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_eval_hook.py#L147
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_eval_hook.py#L173
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_eval_hook.py#L185
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_eval_hook.py#L187
https://github.com/SLDGroup/GradientFilter-CVPR23/blob/33be753cdb10c88c24d736fae7acb699033e6886/segmentation/mmsegmentation/tests/test_apis/test_single_gpu.py#L37

===========================================
https://github.com/coulsonlee/STDO-CVPR2023
===========================================

Found 2 times
DataLoader(
        dataset=train_dataset,
        num_workers=params.num_data_threads,
        batch_size=params.train_batch_size,
        shuffle=(train_sampler is None),
        drop_last=True,
        pin_memory=True,
        sampler=train_sampler,
    )
DataLoader(
                              dataset=dataset,
                              num_workers=params.num_data_threads,
                              batch_size=params.eval_batch_size,
                              shuffle=False,
                              drop_last=False,
                              pin_memory=True,
                              sampler=eval_sampler,
                          )
https://github.com/coulsonlee/STDO-CVPR2023/blob/b9868593b40164b658ad37aa641cc4edb20eb6b7/trainer.py#L201
https://github.com/coulsonlee/STDO-CVPR2023/blob/b9868593b40164b658ad37aa641cc4edb20eb6b7/trainer.py#L211

==================================
https://github.com/ncsu-dk-lab/MuE
==================================

Found 10 times
DataLoader(
            dataset, batch_size=32, collate_fn=dataset.collate, num_workers=8
        )
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=self.max_sentences,
            collate_fn=self.collate_fn,
            num_workers=self.num_workers,
            timeout=self.timeout,
            worker_init_fn=worker_init_fn,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            self.dataset,
            collate_fn=self.collate_fn,
            batch_sampler=batches[offset:],
            num_workers=self.num_workers,
            timeout=self.timeout,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            self.dataset,
            collate_fn=self.collate_fn,
            batch_sampler=batches[offset:],
            num_workers=self.num_workers,
        )
torch.utils.data.DataLoader(
            backtranslation_dataset,
            batch_size=2,
            collate_fn=backtranslation_dataset.collater,
        )
torch.utils.data.DataLoader(
            dataset=language_pair_dataset,
            batch_size=2,
            collate_fn=language_pair_dataset.collater,
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        collate_fn=(lambda samples: collate(samples, padding_idx, eos_idx)),
    )
torch.utils.data.DataLoader(dataset=dataset, batch_size=batch_size, shuffle=False, drop_last=True,
                                                 num_workers=0)
DataLoader(dataset, batch_size=args.batch_size)
torch.utils.data.DataLoader(imgs, batch_size=batch_size)
https://github.com/ncsu-dk-lab/MuE/blob/0a6078e7da6d04a388a7db40659c1b7e3f596477/fairseq/examples/wav2vec/vq-wav2vec_featurize.py#L207
https://github.com/ncsu-dk-lab/MuE/blob/0a6078e7da6d04a388a7db40659c1b7e3f596477/fairseq/fairseq/data/iterators.py#L210
https://github.com/ncsu-dk-lab/MuE/blob/0a6078e7da6d04a388a7db40659c1b7e3f596477/fairseq/fairseq/data/iterators.py#L468
https://github.com/ncsu-dk-lab/MuE/blob/0a6078e7da6d04a388a7db40659c1b7e3f596477/fairseq/fairseq/data/iterators.py#L756
https://github.com/ncsu-dk-lab/MuE/blob/0a6078e7da6d04a388a7db40659c1b7e3f596477/fairseq/tests/test_backtranslation_dataset.py#L78
https://github.com/ncsu-dk-lab/MuE/blob/0a6078e7da6d04a388a7db40659c1b7e3f596477/fairseq/tests/test_noising.py#L444
https://github.com/ncsu-dk-lab/MuE/blob/0a6078e7da6d04a388a7db40659c1b7e3f596477/fairseq/tests/utils.py#L52
https://github.com/ncsu-dk-lab/MuE/blob/0a6078e7da6d04a388a7db40659c1b7e3f596477/run_scripts/image_gen/fid_score.py#L255
https://github.com/ncsu-dk-lab/MuE/blob/0a6078e7da6d04a388a7db40659c1b7e3f596477/run_scripts/image_gen/generate_code.py#L116
https://github.com/ncsu-dk-lab/MuE/blob/0a6078e7da6d04a388a7db40659c1b7e3f596477/run_scripts/image_gen/inception_score.py#L50

==================================
https://github.com/hfutqian/AdaDFQ
==================================

Found 7 times
torch.utils.data.DataLoader(
			dsets.ImageFolder(traindir, transforms.Compose([
				transforms.RandomResizedCrop(224),
				transforms.RandomHorizontalFlip(),
				transforms.ToTensor(),
				normalize,
			])),
			batch_size=self.batch_size,
			shuffle=True,
			num_workers=self.n_threads,
			pin_memory=True)
torch.utils.data.DataLoader(
			dsets.ImageFolder(testdir, test_transform),
			batch_size=self.batch_size,
			shuffle=False,
			num_workers=self.n_threads,
			pin_memory=False)
torch.utils.data.DataLoader(dataset=test_dataset,
												  batch_size=200,
												  shuffle=False,
												  pin_memory=True,
												  num_workers=self.n_threads)
torch.utils.data.DataLoader(
			train_dataset, batch_size=self.batch_size, shuffle=(train_sampler is None),
			num_workers=self.n_threads, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
			val_dataset,
			batch_size=self.batch_size, shuffle=False,
			num_workers=self.n_threads, pin_memory=False)
torch.utils.data.DataLoader(dataset=test_dataset,
												  batch_size=200,
												  shuffle=False,
												  pin_memory=True,
												  num_workers=self.n_threads)
DataLoader(dataset, num_workers=16, collate_fn=lambda x: x)
https://github.com/hfutqian/AdaDFQ/blob/332e49a0b73b8b9de064a5b15937d99a68e7002a/AdaDFQ/CIFAR/dataloader.py#L96
https://github.com/hfutqian/AdaDFQ/blob/332e49a0b73b8b9de064a5b15937d99a68e7002a/AdaDFQ/CIFAR/dataloader.py#L116
https://github.com/hfutqian/AdaDFQ/blob/332e49a0b73b8b9de064a5b15937d99a68e7002a/AdaDFQ/CIFAR/dataloader.py#L156
https://github.com/hfutqian/AdaDFQ/blob/332e49a0b73b8b9de064a5b15937d99a68e7002a/AdaDFQ/ImageNet/dataloader.py#L111
https://github.com/hfutqian/AdaDFQ/blob/332e49a0b73b8b9de064a5b15937d99a68e7002a/AdaDFQ/ImageNet/dataloader.py#L125
https://github.com/hfutqian/AdaDFQ/blob/332e49a0b73b8b9de064a5b15937d99a68e7002a/AdaDFQ/ImageNet/dataloader.py#L164
https://github.com/hfutqian/AdaDFQ/blob/332e49a0b73b8b9de064a5b15937d99a68e7002a/AdaDFQ/ImageNet/folder2lmdb.py#L89

=================================
https://github.com/intellabs/spic
=================================

Found 2 times
torch.utils.data.DataLoader(
        datasets.ImageFolder(args.valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            normalize1,
        ])),
        batch_size=args.batch_size, shuffle=False,
        num_workers=4, pin_memory=True)
DataLoader(args.val_set, batch_size=args.batch_size, shuffle=False, drop_last=True)
https://github.com/intellabs/spic/blob/c3ca2665346337afcf9285bc83b26eb449c1f2f9/Classification/val.py#L111
https://github.com/intellabs/spic/blob/c3ca2665346337afcf9285bc83b26eb449c1f2f9/Segmentation/val.py#L107

========================================
https://github.com/lim142857/Sparsifiner
========================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
https://github.com/lim142857/Sparsifiner/blob/9a11e2639c350b99bca3fa3f9d5ce9616505ca71/src/main.py#L270
https://github.com/lim142857/Sparsifiner/blob/9a11e2639c350b99bca3fa3f9d5ce9616505ca71/src/main.py#L279

===============================
https://github.com/libffcv/ffcv
===============================

Found 1 times
DataLoader(dataset, batch_size=2048, num_workers=8, shuffle=True)
https://github.com/libffcv/ffcv/blob/77f11242cf9055b15fcaf9d2bb8e320de68dbfac/examples/docs_examples/linear_regression.py#L57

=================================
https://github.com/UCSC-VLAA/DMAE
=================================

Found 6 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(train_data, batch_size=32, shuffle=True, num_workers=12, pin_memory=True)
torch.utils.data.DataLoader(valid_data, batch_size=128, shuffle=True, num_workers=12, pin_memory=True)
torch.utils.data.DataLoader(test_data, batch_size=128, shuffle=True, num_workers=12, pin_memory=True)
https://github.com/UCSC-VLAA/DMAE/blob/a0f4959e848f960e79607c097d0d726ed0677b40/main_distill.py#L173
https://github.com/UCSC-VLAA/DMAE/blob/a0f4959e848f960e79607c097d0d726ed0677b40/main_finetune.py#L191
https://github.com/UCSC-VLAA/DMAE/blob/a0f4959e848f960e79607c097d0d726ed0677b40/main_finetune.py#L199
https://github.com/UCSC-VLAA/DMAE/blob/a0f4959e848f960e79607c097d0d726ed0677b40/util/main_nih.py#L235
https://github.com/UCSC-VLAA/DMAE/blob/a0f4959e848f960e79607c097d0d726ed0677b40/util/main_nih.py#L236
https://github.com/UCSC-VLAA/DMAE/blob/a0f4959e848f960e79607c097d0d726ed0677b40/util/main_nih.py#L237

=====================================
https://github.com/PKU-EPIC/GAPartNet
=====================================

Found 7 times
DataLoader(
            self.train_data_files,
            batch_size=self.train_batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=True,
        )
DataLoader(
            self.val_data_files,
            batch_size=self.val_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=False,
        )
DataLoader(
            self.intra_data_files,
            batch_size=self.val_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=False,
        )
DataLoader(
            self.inter_data_files,
            batch_size=self.val_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=False,
        )
DataLoader(
            self.val_data_files,
            batch_size=self.val_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=False,
        )
DataLoader(
            self.intra_data_files,
            batch_size=self.val_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=False,
        )
DataLoader(
            self.inter_data_files,
            batch_size=self.val_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=False,
        )
https://github.com/PKU-EPIC/GAPartNet/blob/6b7e6d5de9b334ed5dcd7d1f12f7207cbc373621/gapartnet/dataset/gapartnet.py#L458
https://github.com/PKU-EPIC/GAPartNet/blob/6b7e6d5de9b334ed5dcd7d1f12f7207cbc373621/gapartnet/dataset/gapartnet.py#L470
https://github.com/PKU-EPIC/GAPartNet/blob/6b7e6d5de9b334ed5dcd7d1f12f7207cbc373621/gapartnet/dataset/gapartnet.py#L480
https://github.com/PKU-EPIC/GAPartNet/blob/6b7e6d5de9b334ed5dcd7d1f12f7207cbc373621/gapartnet/dataset/gapartnet.py#L490
https://github.com/PKU-EPIC/GAPartNet/blob/6b7e6d5de9b334ed5dcd7d1f12f7207cbc373621/gapartnet/dataset/gapartnet.py#L503
https://github.com/PKU-EPIC/GAPartNet/blob/6b7e6d5de9b334ed5dcd7d1f12f7207cbc373621/gapartnet/dataset/gapartnet.py#L513
https://github.com/PKU-EPIC/GAPartNet/blob/6b7e6d5de9b334ed5dcd7d1f12f7207cbc373621/gapartnet/dataset/gapartnet.py#L523

=======================================
https://github.com/PKU-EPIC/UniDexGrasp
=======================================

Found 3 times
DataLoader(dataset, batch_size=cfg["batch_size"], shuffle=shuffle, num_workers=cfg["num_workers"])
DataLoader(dataset, batch_size=cfg["batch_size"], shuffle=False, num_workers=cfg["num_workers"])
DataLoader(dataset, batch_size, shuffle=False, num_workers=cfg['num_workers'])
https://github.com/PKU-EPIC/UniDexGrasp/blob/8ad21347e6be4c86619bbbe51daa980a166d8143/dexgrasp_generation/network/data/dataset.py#L20
https://github.com/PKU-EPIC/UniDexGrasp/blob/8ad21347e6be4c86619bbbe51daa980a166d8143/dexgrasp_generation/network/data/dataset.py#L24
https://github.com/PKU-EPIC/UniDexGrasp/blob/8ad21347e6be4c86619bbbe51daa980a166d8143/dexgrasp_generation/utils/global_utils.py#L24

==================================
https://github.com/tangli-udel/DRE
==================================

Found 11 times
torch.utils.data.DataLoader(ds, batch_size=batch_size, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(val, batch_size=batch_size, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler)
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler)
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler)
        )
torch.utils.data.DataLoader(
        dataset=datasets.ImageFolder(args.root, transform=augment_transform),
        batch_size=batch_size, shuffle=False,
        num_workers=8, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
        dataset=datasets.ImageFolder(args.root, transform=augment_transform),
        batch_size=batch_size, shuffle=False,
        num_workers=8, pin_memory=True, drop_last=True, sampler=RangeSampler(range(num * range_index, num * (range_index + 1))))
torch.utils.data.DataLoader(
        dataset=datasets.ImageFolder(args.root, transform=augment_transform),
        batch_size=batch_size, shuffle=False,
        num_workers=8, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
        dataset=datasets.ImageFolder(args.root, transform=augment_transform),
        batch_size=batch_size, shuffle=False,
        num_workers=8, pin_memory=True, drop_last=True, sampler=RangeSampler(range(num * range_index, num * (range_index + 1))))
torch.utils.data.DataLoader(
        dataset=datasets.ImageFolder(args.root, transform=augment_transform),
        batch_size=batch_size, shuffle=False,
        num_workers=8, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
        dataset=datasets.ImageFolder(args.root, transform=augment_transform),
        batch_size=batch_size, shuffle=False,
        num_workers=8, pin_memory=True, drop_last=True, sampler=RangeSampler(range(num * range_index, num * (range_index + 1))))
https://github.com/tangli-udel/DRE/blob/f3199d34be6615912228500242fe3b910563ab3e/dre/datasets.py#L34
https://github.com/tangli-udel/DRE/blob/f3199d34be6615912228500242fe3b910563ab3e/dre/datasets.py#L44
https://github.com/tangli-udel/DRE/blob/f3199d34be6615912228500242fe3b910563ab3e/dre/infinite_loader.py#L33
https://github.com/tangli-udel/DRE/blob/f3199d34be6615912228500242fe3b910563ab3e/dre/domainbed/lib/fast_data_loader.py#L35
https://github.com/tangli-udel/DRE/blob/f3199d34be6615912228500242fe3b910563ab3e/dre/domainbed/lib/fast_data_loader.py#L60
https://github.com/tangli-udel/DRE/blob/f3199d34be6615912228500242fe3b910563ab3e/dre/explanations/fidelity/evaluate_auc.py#L59
https://github.com/tangli-udel/DRE/blob/f3199d34be6615912228500242fe3b910563ab3e/dre/explanations/fidelity/evaluate_auc.py#L68
https://github.com/tangli-udel/DRE/blob/f3199d34be6615912228500242fe3b910563ab3e/dre/explanations/fidelity/evaluate_auc_gradient.py#L66
https://github.com/tangli-udel/DRE/blob/f3199d34be6615912228500242fe3b910563ab3e/dre/explanations/fidelity/evaluate_auc_gradient.py#L75
https://github.com/tangli-udel/DRE/blob/f3199d34be6615912228500242fe3b910563ab3e/dre/explanations/fidelity/evaluate_auc_shap.py#L67
https://github.com/tangli-udel/DRE/blob/f3199d34be6615912228500242fe3b910563ab3e/dre/explanations/fidelity/evaluate_auc_shap.py#L79

===========================================
https://github.com/mwalmer-umd/vit_analysis
===========================================

Found 23 times
DataLoader(train_dataset, batch_size=args.batch, shuffle=False)
DataLoader(train_dataset, batch_size=args.batch, num_workers=16, shuffle=True, pin_memory=False)
DataLoader(test_dataset, batch_size=args.batch, num_workers=16, shuffle=True, pin_memory=False)
DataLoader(dataset_train, batch_size=args.batch, shuffle=False, pin_memory=True)
DataLoader(dataset_test, batch_size=args.batch, shuffle=False, pin_memory=True)
DataLoader(train_dataset, batch_size=args.batch, shuffle=False)
DataLoader(train_dataset_2, batch_size=args.batch, shuffle=False)
torch.utils.data.DataLoader(tempdataset, batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers, drop_last=False,
        sampler=torch.utils.data.DistributedSampler(tempdataset, shuffle=False))
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=1,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_query,
        batch_size=1,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=256, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/run_attention_analysis.py#L60
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/run_downstream_analysis.py#L98
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/run_downstream_analysis.py#L100
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/run_downstream_analysis.py#L104
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/run_downstream_analysis.py#L106
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/run_feature_analysis.py#L45
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/run_feature_analysis.py#L54
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/dino/eval_copy_detection.py#L160
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/dino/eval_image_retrieval.py#L113
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/dino/eval_image_retrieval.py#L121
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/dino/eval_knn.py#L41
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/dino/eval_knn.py#L49
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/dino/eval_linear.py#L72
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/dino/eval_linear.py#L93
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/dino/main_dino.py#L147
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/mae/main_finetune.py#L202
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/mae/main_finetune.py#L210
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/mae/main_linprobe.py#L173
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/mae/main_linprobe.py#L181
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/mae/main_pretrain.py#L147
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/moco-v3/main_lincls.py#L286
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/moco-v3/main_lincls.py#L290
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/moco-v3/main_moco.py#L297

======================================
https://github.com/guillaumejs2403/ACE
======================================

Found 12 times
data.DataLoader(dataset, batch_size=15,
                             shuffle=False,
                             num_workers=4, pin_memory=True)
data.DataLoader(dataset, batch_size=args.batch_size,
                             shuffle=False,
                             num_workers=4, pin_memory=True)
data.DataLoader(dataset, batch_size=15,
                             shuffle=False,
                             num_workers=4, pin_memory=True)
data.DataLoader(dataset, batch_size=15,
                             shuffle=False,
                             num_workers=4, pin_memory=True)
data.DataLoader(dataset, batch_size=batch_size,
                             shuffle=False,
                             num_workers=4, pin_memory=True)
data.DataLoader(dataset, batch_size=batch_size,
                             shuffle=False,
                             num_workers=4, pin_memory=True)
data.DataLoader(dataset, batch_size=args.batch_size,
                             shuffle=False,
                             num_workers=4, pin_memory=True)
data.DataLoader(dataset, batch_size=args.batch_size,
                             shuffle=False,
                             num_workers=4, pin_memory=True)
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=3, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=3, drop_last=True
        )
https://github.com/guillaumejs2403/ACE/blob/0052a88c68623a8711315d393289d7d245cb99db/compute_CD.py#L148
https://github.com/guillaumejs2403/ACE/blob/0052a88c68623a8711315d393289d7d245cb99db/compute_COUT.py#L90
https://github.com/guillaumejs2403/ACE/blob/0052a88c68623a8711315d393289d7d245cb99db/compute_FVA.py#L72
https://github.com/guillaumejs2403/ACE/blob/0052a88c68623a8711315d393289d7d245cb99db/compute_LPIPS.py#L91
https://github.com/guillaumejs2403/ACE/blob/0052a88c68623a8711315d393289d7d245cb99db/compute_MNAC.py#L91
https://github.com/guillaumejs2403/ACE/blob/0052a88c68623a8711315d393289d7d245cb99db/compute_SimSiamSimilarity.py#L66
https://github.com/guillaumejs2403/ACE/blob/0052a88c68623a8711315d393289d7d245cb99db/main.py#L248
https://github.com/guillaumejs2403/ACE/blob/0052a88c68623a8711315d393289d7d245cb99db/postprocessing.py#L235
https://github.com/guillaumejs2403/ACE/blob/0052a88c68623a8711315d393289d7d245cb99db/guided_diffusion/image_datasets.py#L108
https://github.com/guillaumejs2403/ACE/blob/0052a88c68623a8711315d393289d7d245cb99db/guided_diffusion/image_datasets.py#L112
https://github.com/guillaumejs2403/ACE/blob/0052a88c68623a8711315d393289d7d245cb99db/guided_diffusion/image_datasets.py#L410
https://github.com/guillaumejs2403/ACE/blob/0052a88c68623a8711315d393289d7d245cb99db/guided_diffusion/image_datasets.py#L414

======================================
https://github.com/WinKawaks/SketchXAI
======================================

Found 4 times
DataLoader(train_dataset, batch_size=batch_size, sampler=train_sampler, num_workers=16, drop_last=True, collate_fn=train_data_collate, persistent_workers=True)
DataLoader(valid_dataset, batch_size=batch_size, sampler=valid_sampler, num_workers=16, drop_last=False, collate_fn=train_data_collate, persistent_workers=True)
DataLoader(test_dataset, batch_size=batch_size, sampler=test_sampler, num_workers=16, drop_last=False, collate_fn=train_data_collate, persistent_workers=True)
DataLoader(test_dataset, batch_size=opt['bs'], shuffle=True, drop_last=False, num_workers=0, collate_fn=train_data_collate)
https://github.com/WinKawaks/SketchXAI/blob/b5f50073100ae2f4dd0b354247b7811ef4665d49/main.py#L203
https://github.com/WinKawaks/SketchXAI/blob/b5f50073100ae2f4dd0b354247b7811ef4665d49/main.py#L207
https://github.com/WinKawaks/SketchXAI/blob/b5f50073100ae2f4dd0b354247b7811ef4665d49/main.py#L211
https://github.com/WinKawaks/SketchXAI/blob/b5f50073100ae2f4dd0b354247b7811ef4665d49/inversion/main_inversion.py#L195

=============================================
https://github.com/cvlab-columbia/DoubleRight
=============================================

Found 16 times
DataLoader(train_dataset,
                              batch_size=16, pin_memory=True,
                              num_workers=2, shuffle=True, sampler=None)
DataLoader(val_dataset,
                                            batch_size=20, pin_memory=True,
                                            num_workers=1, shuffle=False, sampler=train_sampler)
DataLoader(each,
                                  batch_size=args.batch_size * 2, pin_memory=True,
                                  num_workers=args.num_workers, shuffle=False, sampler=val_sampler)
DataLoader(train_dataset,
                              batch_size=args.batch_size, pin_memory=True,
                              num_workers=40, shuffle=True, sampler=None)
DataLoader(train_imagenet_dataset,
                                       batch_size=args.batch_size, pin_memory=True,
                                       num_workers=40, shuffle=True, sampler=None)
DataLoader(val_dataset,
                                    batch_size=min(len(val_dataset), 64), pin_memory=True,
                                    num_workers=1, shuffle=False, sampler=train_sampler, drop_last=True)
DataLoader(val_dataset,
                                        batch_size=20, pin_memory=True,
                                        num_workers=1, shuffle=False, sampler=train_sampler)
DataLoader(train_dataset,
                                  batch_size=args.batch_size, pin_memory=True,
                                  num_workers=40, shuffle=True, sampler=None)
DataLoader(val_dataset,
                                            batch_size=20, pin_memory=True,
                                            num_workers=1, shuffle=False, sampler=train_sampler)
DataLoader(val_dataset,
                                        batch_size=20, pin_memory=True,
                                        num_workers=1, shuffle=False, sampler=train_sampler)
DataLoader(each,
                                  batch_size=args.batch_size*2, pin_memory=True,
                                  num_workers=args.num_workers, shuffle=False, sampler=val_sampler)
DataLoader(train_dataset,
                              batch_size=args.batch_size, pin_memory=True,
                              num_workers=40, shuffle=True, sampler=None)
DataLoader(train_imagenet_dataset,
                              batch_size=args.batch_size, pin_memory=True,
                              num_workers=40, shuffle=True, sampler=None)
DataLoader(val_dataset,
                                    batch_size=min(len(val_dataset), 64), pin_memory=True,
                                    num_workers=1, shuffle=False, sampler=train_sampler, drop_last=True)
DataLoader(train_dataset,
                                  batch_size=args.batch_size, pin_memory=True,
                                  num_workers=40, shuffle=True, sampler=None)
DataLoader(val_dataset,
                                        batch_size=20, pin_memory=True,
                                        num_workers=1, shuffle=False, sampler=train_sampler)
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/dataloader.py#L279
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/eval_clip_fulldoublyright.py#L232
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_deepprompt_clip_mix.py#L521
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_deepprompt_clip_mix.py#L542
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_deepprompt_clip_mix.py#L550
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_deepprompt_clip_mix.py#L1221
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_deepprompt_clip_mix.py#L1372
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_prompt_Level2_clip.py#L486
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_prompt_Level2_clip.py#L844
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_prompt_Level2_clip.py#L1069
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_prompt_clip_mixture.py#L434
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_prompt_clip_mixture.py#L455
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_prompt_clip_mixture.py#L463
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_prompt_clip_mixture.py#L1272
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_prompt_v2_clip.py#L439
https://github.com/cvlab-columbia/DoubleRight/blob/d0d74f59248b9ad6d3370820739481f02b5e013b/whyprompt/why_prompt_v2_clip.py#L781

=======================================
https://github.com/humansensinglab/ZOOM
=======================================

Found 2 times
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=False)
https://github.com/humansensinglab/ZOOM/blob/2fd014281e405d27bea10b2745e4d7923080d937/stylegan/wrapper.py#L160
https://github.com/humansensinglab/ZOOM/blob/2fd014281e405d27bea10b2745e4d7923080d937/stylegan/wrapper.py#L195

================================
https://github.com/valeoai/OCTET
================================

Found 9 times
torch.utils.data.DataLoader(dataset, batch_size=bs, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=False)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=False)
torch.utils.data.DataLoader(self.dataset, batch_size=batch_size, shuffle=shuffle)
torch.utils.data.DataLoader(dataset, batch_size = bs, shuffle = True, drop_last=True)
torch.utils.data.DataLoader(dataset, batch_size=bs, shuffle=True, drop_last=True)
DataLoader(self.data[split], **self.dataloader)
DataLoader(self.data[split], **self.dataloader)
DataLoader(NullIterableDataset(size), **self.dataloader)
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/compute_encoder_quality.py#L68
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/fid_inv.py#L102
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/lpips_success_cf.py#L87
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/octet_invert_counterfactual.py#L174
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/pretrain_encoder.py#L54
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/train_encoder.py#L70
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/src/data/imagefolder.py#L68
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/src/data/multiimagefolder.py#L59
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/src/data/nodata.py#L45

===================================
https://github.com/YueYANG1996/LaBo
===================================

Found 7 times
DataLoader(
            self.datasets['train'],
            batch_size=self.bs,
            shuffle=True,
            num_workers=self.num_workers if not self.on_gpu else 0,
            pin_memory=True if not self.on_gpu else False)
DataLoader(
            self.datasets['val'],
            batch_size=self.bs,
            num_workers=self.num_workers if not self.on_gpu else 0,
            pin_memory=True if not self.on_gpu else False)
DataLoader(
            self.datasets['test'],
            batch_size=self.bs,
            num_workers=self.num_workers if not self.on_gpu else 0,
            pin_memory=True if not self.on_gpu else False)
DataLoader(
            Dataset_with_name(self.datasets['test'], test_img_paths),
            batch_size=self.bs,
            num_workers=self.num_workers if not self.on_gpu else 0,
            pin_memory=True if not self.on_gpu else False)
DataLoader(self.train_dataset,
                          batch_size=self.bs,
                          shuffle=True,
                          num_workers=self.num_workers,
                          pin_memory=True)
DataLoader(self.val_dataset,
                          batch_size=self.bs,
                          num_workers=self.num_workers,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          batch_size=self.bs,
                          num_workers=self.num_workers,
                          pin_memory=True)
https://github.com/YueYANG1996/LaBo/blob/83ed4b08912a63fcc8d006a97b3cd51ebdcc2cdb/data.py#L344
https://github.com/YueYANG1996/LaBo/blob/83ed4b08912a63fcc8d006a97b3cd51ebdcc2cdb/data.py#L352
https://github.com/YueYANG1996/LaBo/blob/83ed4b08912a63fcc8d006a97b3cd51ebdcc2cdb/data.py#L359
https://github.com/YueYANG1996/LaBo/blob/83ed4b08912a63fcc8d006a97b3cd51ebdcc2cdb/data.py#L367
https://github.com/YueYANG1996/LaBo/blob/83ed4b08912a63fcc8d006a97b3cd51ebdcc2cdb/data_lp.py#L154
https://github.com/YueYANG1996/LaBo/blob/83ed4b08912a63fcc8d006a97b3cd51ebdcc2cdb/data_lp.py#L161
https://github.com/YueYANG1996/LaBo/blob/83ed4b08912a63fcc8d006a97b3cd51ebdcc2cdb/data_lp.py#L167

=================================
https://github.com/M-Nauta/PIPNet
=================================

Found 10 times
torch.utils.data.DataLoader(trainset,
                                            batch_size=args.batch_size,
                                            shuffle=to_shuffle,
                                            sampler=sampler,
                                            pin_memory=cuda,
                                            num_workers=num_workers,
                                            worker_init_fn=np.random.seed(args.seed),
                                            drop_last=True
                                            )
torch.utils.data.DataLoader(trainset_pretraining,
                                            batch_size=pretrain_batchsize,
                                            shuffle=to_shuffle,
                                            sampler=sampler,
                                            pin_memory=cuda,
                                            num_workers=num_workers,
                                            worker_init_fn=np.random.seed(args.seed),
                                            drop_last=True
                                            )
torch.utils.data.DataLoader(trainset,
                                            batch_size=pretrain_batchsize,
                                            shuffle=to_shuffle,
                                            sampler=sampler,
                                            pin_memory=cuda,
                                            num_workers=num_workers,
                                            worker_init_fn=np.random.seed(args.seed),
                                            drop_last=True
                                            )
torch.utils.data.DataLoader(trainset_normal,
                                            batch_size=args.batch_size,
                                            shuffle=to_shuffle,
                                            sampler=sampler,
                                            pin_memory=cuda,
                                            num_workers=num_workers,
                                            worker_init_fn=np.random.seed(args.seed),
                                            drop_last=True
                                            )
torch.utils.data.DataLoader(trainset_normal_augment,
                                            batch_size=args.batch_size,
                                            shuffle=to_shuffle,
                                            sampler=sampler,
                                            pin_memory=cuda,
                                            num_workers=num_workers,
                                            worker_init_fn=np.random.seed(args.seed),
                                            drop_last=True
                                            )
torch.utils.data.DataLoader(projectset,
                                              batch_size = 1,
                                              shuffle=False,
                                              pin_memory=cuda,
                                              num_workers=num_workers,
                                              worker_init_fn=np.random.seed(args.seed),
                                              drop_last=False
                                              )
torch.utils.data.DataLoader(testset,
                                             batch_size=args.batch_size,
                                             shuffle=True, 
                                             pin_memory=cuda,
                                             num_workers=num_workers,
                                             worker_init_fn=np.random.seed(args.seed),
                                             drop_last=False
                                             )
torch.utils.data.DataLoader(testset_projection,
                                             batch_size=1,
                                             shuffle=False,
                                             pin_memory=cuda,
                                             num_workers=num_workers,
                                             worker_init_fn=np.random.seed(args.seed),
                                             drop_last=False
                                             )
torch.utils.data.DataLoader(vis_test_set, batch_size = 1,
                                                shuffle=False, pin_memory=not args.disable_cuda and torch.cuda.is_available(),
                                                num_workers=num_workers)
torch.utils.data.DataLoader(vis_test_set, batch_size = 1,
                                                shuffle=False, pin_memory=not args.disable_cuda and torch.cuda.is_available(),
                                                num_workers=num_workers)
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/data.py#L62
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/data.py#L72
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/data.py#L83
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/data.py#L93
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/data.py#L102
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/data.py#L112
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/data.py#L120
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/data.py#L128
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/visualize_prediction.py#L40
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/visualize_prediction.py#L123

======================================
https://github.com/Hanyang-HCC-Lab/ICE
======================================

Found 10 times
torch.utils.data.DataLoader(
        imagenet_ds,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=4
    )
DataLoader(ds, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=False)
DataLoader(ds, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=False)
torch.utils.data.DataLoader(
        imagenet_ds,
        batch_size=args.batch_size,
        num_workers=2,
        shuffle=False)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size, drop_last=True, shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, drop_last=False)
torch.utils.data.DataLoader(test_set, batch_size=args.batch_size, shuffle=True,
                                              num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=1, drop_last=False)
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/imagenet_segmentation/baselines/ViT/generate_visualizations.py#L201
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/imagenet_segmentation/baselines/ViT/imagenet_seg_eval.py#L134
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/imagenet_segmentation/baselines/ViT/imagenet_seg_eval_ICE.py#L155
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/imagenet_segmentation/baselines/ViT/pertubation_eval_from_hdf5.py#L227
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/imagenet_train/main_ICE.py#L230
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/imagenet_train/main_ICE.py#L240
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/jaccard_similarity/classify_metadataset.py#L64
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/jaccard_similarity/classify_metadataset.py#L65
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/jaccard_similarity/evaluate.py#L86
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/jaccard_similarity/utils.py#L40

================================================
https://github.com/Yuheng-Li/UniversalFakeDetect
================================================

Found 2 times
torch.utils.data.DataLoader(dataset, batch_size=opt.batch_size, shuffle=False, num_workers=4)
torch.utils.data.DataLoader(dataset,
                                              batch_size=opt.batch_size,
                                              shuffle=shuffle,
                                              sampler=sampler,
                                              num_workers=int(opt.num_threads))
https://github.com/Yuheng-Li/UniversalFakeDetect/blob/1abc48606aea45e18d10847e51d21d6173cc957d/validate.py#L304
https://github.com/Yuheng-Li/UniversalFakeDetect/blob/1abc48606aea45e18d10847e51d21d6173cc957d/data/__init__.py#L29

============================
https://github.com/Ree1s/IDM
============================

Found 3 times
torch.utils.data.DataLoader(**dataloader_args)
torch.utils.data.DataLoader(
            dataset,
            sampler=sampler,
            batch_size=dataset_opt['batch_size'],
            shuffle=dataset_opt['use_shuffle'],
            num_workers=dataset_opt['num_workers'],
            pin_memory=True)
torch.utils.data.DataLoader(
            dataset, sampler=sampler, batch_size=dataset_opt['batch_size'], shuffle=False, num_workers=1, pin_memory=True)
https://github.com/Ree1s/IDM/blob/d224c0ef885168ebd1d19ab4cf4a66a1939ffef0/basicsr/data/__init__.py#L93
https://github.com/Ree1s/IDM/blob/d224c0ef885168ebd1d19ab4cf4a66a1939ffef0/data/__init__.py#L53
https://github.com/Ree1s/IDM/blob/d224c0ef885168ebd1d19ab4cf4a66a1939ffef0/data/__init__.py#L62

=====================================
https://github.com/AIBluefisher/dbarf
=====================================

Found 7 times
torch.utils.data.DataLoader(self.train_dataset, batch_size=1,
                                                   worker_init_fn=seed_worker,
                                                   num_workers=self.config.workers,
                                                   pin_memory=True,
                                                   sampler=self.train_sampler,
                                                   shuffle=True if self.train_sampler is None else False)
DataLoader(self.val_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
torch.utils.data.DataLoader(
        dataset, num_workers=1, shuffle=False, pin_memory=True)
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/dbarf/base/trainer.py#L117
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/dbarf/base/trainer.py#L127
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/eval/eval.py#L107
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/eval/eval_dbarf.py#L96
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/eval/render_dbarf_llff_video.py#L180
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/eval/render_llff_video.py#L168
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/scripts/extract_features.py#L241

==================================
https://github.com/neuralchen/EQSR
==================================

Found 5 times
data.DataLoader(
                        dataset=content_dataset,
                        batch_size=batch_size,
                        drop_last=True,
                        shuffle=True,
                        num_workers=num_workers,
                        pin_memory=True
                    )
data.DataLoader(
                        dataset=content_dataset,
                        batch_size=batch_size,
                        drop_last=True,
                        shuffle=True,
                        num_workers=num_workers,
                        pin_memory=True
                    )
data.DataLoader(
                        dataset=content_dataset,
                        batch_size=batch_size,
                        drop_last=True,
                        shuffle=True,
                        num_workers=num_workers,
                        pin_memory=True
                    )
data.DataLoader(
                        dataset=content_dataset,
                        batch_size=batch_size,
                        drop_last=True,
                        shuffle=True,
                        num_workers=num_workers,
                        pin_memory=True
                    )
torch.utils.data.DataLoader(**dataloader_args)
https://github.com/neuralchen/EQSR/blob/e10a258ed81c3d2589fe773d7ca7421282347e30/basicsr/data/DSF_DF2K_dataset.py#L290
https://github.com/neuralchen/EQSR/blob/e10a258ed81c3d2589fe773d7ca7421282347e30/basicsr/data/DSF_imagenet_dataset.py#L327
https://github.com/neuralchen/EQSR/blob/e10a258ed81c3d2589fe773d7ca7421282347e30/basicsr/data/DSF_nopre_DF2K_dataset.py#L327
https://github.com/neuralchen/EQSR/blob/e10a258ed81c3d2589fe773d7ca7421282347e30/basicsr/data/LTE_imagenet_dataset.py#L314
https://github.com/neuralchen/EQSR/blob/e10a258ed81c3d2589fe773d7ca7421282347e30/basicsr/data/__init__.py#L94

==========================================
https://github.com/yccyenchicheng/SDFusion
==========================================

Found 3 times
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=opt.batch_size,
            sampler=data_sampler(train_dataset, shuffle=True, distributed=opt.distributed),
            drop_last=True,
            )
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=opt.batch_size,
            sampler=data_sampler(test_dataset, shuffle=False, distributed=opt.distributed),
            drop_last=False,
            )
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=max(int(opt.batch_size // 2), 1),
            sampler=data_sampler(test_dataset, shuffle=False, distributed=opt.distributed),
            drop_last=False,
        )
https://github.com/yccyenchicheng/SDFusion/blob/bee6119cb4cab85ebe7d42d32f223ef30795abf0/datasets/dataloader.py#L14
https://github.com/yccyenchicheng/SDFusion/blob/bee6119cb4cab85ebe7d42d32f223ef30795abf0/datasets/dataloader.py#L21
https://github.com/yccyenchicheng/SDFusion/blob/bee6119cb4cab85ebe7d42d32f223ef30795abf0/datasets/dataloader.py#L28

===========================================================
https://github.com/dongzhuoyao/self-guided-diffusion-models
===========================================================

Found 48 times
DataLoader(
                ds, batch_size=1, shuffle=True, num_workers=0)
DataLoader(ds, batch_size=1, shuffle=True, num_workers=0)
DataLoader(coco_val, batch_size=1,
                                shuffle=True, num_workers=0)
DataLoader(
                ds, batch_size=bs, shuffle=False, num_workers=0)
DataLoader(
                ds, batch_size=128, shuffle=False, num_workers=0)
DataLoader(ds, batch_size=1, shuffle=True, num_workers=0)
DataLoader(ds, batch_size=1, shuffle=True, num_workers=0)
DataLoader(ds, batch_size=1, shuffle=True, num_workers=0)
DataLoader(voc_train, batch_size=bs,
                            shuffle=True, num_workers=0)
DataLoader(_ds, batch_size=bs, shuffle=shuffle, num_workers=num_workers)
DataLoader(
            ds, batch_size=1, shuffle=shuffle, num_workers=num_workers)
DataLoader(
            ds, batch_size=1, shuffle=shuffle, num_workers=num_workers)
DataLoader(
            ds, batch_size=1, shuffle=shuffle, num_workers=num_workers)
DataLoader(
            ds, batch_size=1, shuffle=shuffle, num_workers=num_workers)
DataLoader(
            ds, batch_size=bs, shuffle=shuffle, num_workers=num_workers)
DataLoader(
            ds, batch_size=bs, shuffle=shuffle, num_workers=num_workers)
DataLoader(
            ds, batch_size=bs, shuffle=shuffle, num_workers=num_workers)
DataLoader(
            ds, batch_size=1, shuffle=shuffle, num_workers=num_workers)
DataLoader(
            ds, batch_size=1, shuffle=shuffle, num_workers=num_workers)
DataLoader(RecursiveDirDataset(src_img_dir=src_dir,
                    target_img_dir=target_dir, interp=interp), batch_size=batch_size, num_workers=8)
torch.utils.data.DataLoader(
        dummyDL(),
        batch_size=16,
        num_workers=0,
    )
DataLoader(DirDataset(image_dir), batch_size=batch_size)
DataLoader(DirDataset(sample_dir), batch_size=10)
DataLoader(DirDataset(image_dir), batch_size=batch_size)
DataLoader(
            self.datasets["train"],
            batch_size=self.batch_size,
            pin_memory=self.pin_memory,
            num_workers=self.num_workers,
            shuffle=False if is_iterable_dataset else True,
            drop_last=True,
            worker_init_fn=None,
        )
DataLoader(
            self.datasets["validation"],
            batch_size=self.batch_size,
            pin_memory=self.pin_memory,
            num_workers=self.num_workers,
            worker_init_fn=None,
            drop_last=True,
            shuffle=shuffle,
        )
DataLoader(
            self.datasets["test"],
            batch_size=self.batch_size,
            pin_memory=self.pin_memory,
            num_workers=0,
            worker_init_fn=None,
            shuffle=shuffle,
            drop_last=True,
        )
DataLoader(
            self.datasets["predict"],
            batch_size=self.batch_size,
            pin_memory=self.pin_memory,
            num_workers=0,
            worker_init_fn=None,
            drop_last=True,
        )
DataLoader(
            self.datasets["crossds"],
            batch_size=self.batch_size,
            pin_memory=self.pin_memory,
            num_workers=0,
            worker_init_fn=None,
            drop_last=True,
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=dist_sampler,
        batch_size=batch_size,
        drop_last=drop_last,
        pin_memory=pin_mem,
        num_workers=num_workers)
DataLoader(dataset, 1, shuffle=False, num_workers=cfg.num_workers, collate_fn=lambda l: l)
DataLoader(ds, num_workers=12, collate_fn=lambda l: l[0])
DataLoader(dataset, cfg.batch_size * 2,
                        shuffle=False, num_workers=cfg.num_workers,
                        pin_memory=True, collate_fn=flexible_collate)
DataLoader(test_dataset, cfg.batch_size * 2,
                                 shuffle=False, num_workers=cfg.num_workers,
                                 pin_memory=True, collate_fn=flexible_collate)
DataLoader(dataset, 16, shuffle=True, num_workers=cfg.num_workers)
DataLoader(full_dataset, 64,
                             shuffle=False, num_workers=cfg.num_workers,
                             pin_memory=True, collate_fn=flexible_collate)
DataLoader(train_dataset, cfg.batch_size, shuffle=True, num_workers=cfg.num_workers)
DataLoader(val_dataset, cfg.batch_size, shuffle=True, num_workers=cfg.num_workers)
DataLoader(dataset, batch_size=cfg.nn_batch_size, shuffle=False,
                                    num_workers=cfg.num_workers, pin_memory=False)
DataLoader(RecursiveDirDataset(image_dir),
                    batch_size=batch_size, num_workers=num_workers)
DataLoader(train_dataset, cfg.batch_size,
                              shuffle=True, num_workers=cfg.num_workers, pin_memory=True)
DataLoader(val_dataset, cfg.batch_size, shuffle=False,
                            num_workers=cfg.num_workers, pin_memory=True)
DataLoader(dataset, n_images, shuffle=False, num_workers=0)
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/cifar10_torchvision.py#L246
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/cifar10_torchvision.py#L254
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/coco14_vqdiffusion.py#L407
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/coco14_vqdiffusion.py#L434
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/coco14_vqdiffusion.py#L456
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/dataloader_iddpm.py#L147
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/imagenet_pickle.py#L255
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/imagenet_pickle_v2.py#L252
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/voc12.py#L160
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/ds_utils/dataset_common_utils.py#L50
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/ds_utils/main_generate_images_for_fid.py#L55
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/ds_utils/main_generate_images_for_fid.py#L92
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/ds_utils/main_generate_images_for_fid.py#L127
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/ds_utils/main_generate_images_for_fid.py#L161
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/ds_utils/main_generate_images_for_fid.py#L195
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/ds_utils/main_generate_images_for_fid.py#L234
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/ds_utils/main_generate_images_for_fid.py#L273
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/ds_utils/main_generate_images_for_fid.py#L315
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/ds_utils/main_generate_images_for_fid.py#L355
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/dataset/ds_utils/resize_cityscapes_trainextra_to_320.py#L63
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/eval_fid.py#L633
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/eval_knn.py#L59
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/eval_knn.py#L232
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/eval_tsne.py#L110
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/pl_datamodule/dm.py#L96
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/pl_datamodule/dm.py#L107
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/pl_datamodule/dm.py#L122
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/pl_datamodule/dm.py#L133
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/pl_datamodule/dm.py#L143
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/self_sl/mae/main_finetune.py#L202
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/self_sl/mae/main_finetune.py#L210
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/self_sl/mae/main_linprobe.py#L173
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/self_sl/mae/main_linprobe.py#L181
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/self_sl/mae/main_pretrain.py#L147
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/self_sl/msn/src/data_manager.py#L52
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/crop_datasets.py#L150
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/data.py#L428
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/demo_segmentation.py#L49
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/eval_segmentation.py#L88
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/plot_dino_correspondence.py#L92
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/plot_potsdam.py#L32
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/plot_pr_curves.py#L268
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/plot_pr_curves.py#L269
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/sg_precompute_knns.py#L82
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/sg_sample_segmask.py#L127
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/sg_train_segmentation.py#L506
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/sg_train_segmentation.py#L509
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/train_crf.py#L82

==================================================
https://github.com/adobe-research/custom-diffusion
==================================================

Found 11 times
DataLoader(concat_dataset, batch_size=self.batch_size // 2,
                              num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                              worker_init_fn=init_fn)
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                              num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                              worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
torch.utils.data.DataLoader(
        CLIPCapDataset(captions, append=append),
        batch_size=batch_size, num_workers=num_workers, shuffle=False)
torch.utils.data.DataLoader(
        datasetclass(images),
        batch_size=batch_size, num_workers=num_workers, shuffle=False)
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset, 
        batch_size=args.train_batch_size, 
        shuffle=True, 
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset, 
        batch_size=args.train_batch_size, 
        shuffle=True, 
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
        num_workers=args.dataloader_num_workers,
    )
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/train.py#L402
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/train.py#L406
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/train.py#L415
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/train.py#L431
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/train.py#L439
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/customconcept101/evaluate.py#L93
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/customconcept101/evaluate.py#L106
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/src/diffusers_training.py#L678
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/src/diffusers_training.py#L884
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/src/diffusers_training_sdxl.py#L824
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/src/diffusers_training_sdxl.py#L1046

========================================
https://github.com/dunbar12138/pix2pix3D
========================================

Found 2 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/dunbar12138/pix2pix3D/blob/39167846728bd54798e6c8b4a448fda3377144ec/metrics/metric_utils.py#L233
https://github.com/dunbar12138/pix2pix3D/blob/39167846728bd54798e6c8b4a448fda3377144ec/training/training_loop.py#L289

=====================================
https://github.com/siyuhuang/QuantArt
=====================================

Found 4 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=True, collate_fn=custom_collate)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers, collate_fn=custom_collate)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, collate_fn=custom_collate)
DataLoader(data.datasets["test"], batch_size=data.batch_size,collate_fn=custom_collate)
https://github.com/siyuhuang/QuantArt/blob/0e13073348f1a6905d224ec970dac8ac5a173caf/main.py#L207
https://github.com/siyuhuang/QuantArt/blob/0e13073348f1a6905d224ec970dac8ac5a173caf/main.py#L211
https://github.com/siyuhuang/QuantArt/blob/0e13073348f1a6905d224ec970dac8ac5a173caf/main.py#L216
https://github.com/siyuhuang/QuantArt/blob/0e13073348f1a6905d224ec970dac8ac5a173caf/main.py#L582

======================================================
https://github.com/adobe-research/affordance-insertion
======================================================

Found 10 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["fid_cond"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["fid_hall"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, 
                          shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
torch_data.DataLoader(
            dataset,
            self.batch_size,
            num_workers=self.num_workers,
            pin_memory=True,
        )
torch_data.DataLoader(
            dataset,
            self.batch_size,
            num_workers=self.num_workers,
            pin_memory=True,
        )
torch_data.DataLoader(
            dataset,
            self.batch_size,
            num_workers=self.num_workers,
            pin_memory=True,
        )
DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=12,
        pin_memory=True,
        drop_last=False,
        prefetch_factor=2,
    )
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/main.py#L236
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/main.py#L245
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/main.py#L256
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/main.py#L267
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/main.py#L283
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/main.py#L292
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/ldm/data/data_detect_pose.py#L68
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/ldm/data/data_filter_people.py#L96
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/ldm/data/data_generate_masks.py#L88
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/scripts/compute_pchk.py#L62

=================================================
https://github.com/CVMI-Lab/HybridNeuralRendering
=================================================

Found 3 times
torch.utils.data.DataLoader(self.dataset,
                                                      batch_size=opt.batch_size,
                                                      shuffle=not opt.serial_batches,
                                                      num_workers=int(opt.n_threads),
                                                      worker_init_fn=worker_init_fn)
DataLoader(dataset, batch_size=2)
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
https://github.com/CVMI-Lab/HybridNeuralRendering/blob/415c36e90b8cc1b115d116b930aef39a7753b547/data/__init__.py#L69
https://github.com/CVMI-Lab/HybridNeuralRendering/blob/415c36e90b8cc1b115d116b930aef39a7753b547/models/depth_estimators/module.py#L91
https://github.com/CVMI-Lab/HybridNeuralRendering/blob/415c36e90b8cc1b115d116b930aef39a7753b547/raft/core/datasets.py#L230

=================================================
https://github.com/ZeWang95/BinaryLatentDiffusion
=================================================

Found 5 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_prepro_workers,
        pin_memory=True,
        prefetch_factor=2,
        collate_fn=collate_fn if input_format == "files" else None,
    )
torch.utils.data.DataLoader(
            train_dataset,
            num_workers=num_workers,
            sampler=sampler_train,
            # shuffle=shuffle,
            batch_size=batch_size,
            pin_memory=True,
            drop_last=drop_last
        )
torch.utils.data.DataLoader(
            val_dataset, 
            num_workers=num_workers,
            sampler=sampler_val,
            batch_size=batch_size,
            pin_memory=True,
            drop_last=drop_last
        )
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/data/build.py#L43
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/data/build.py#L51
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/utils/data_utils.py#L33
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/utils/data_utils.py#L248
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/utils/data_utils.py#L272

=========================================
https://github.com/hamzapehlivan/StyleRes
=========================================

Found 3 times
DataLoader(dataset, batch_size = args.test_batch_size,
                            shuffle=False,
                            num_workers=int(args.test_workers),
                            drop_last=False)
data.DataLoader(dataset=dataset,
                           batch_size=batch_size,
                           shuffle=shuffle,
                           num_workers=num_workers,
                           pin_memory=True,
                           drop_last=drop_last)
DataLoader(dataset,
                            batch_size=args.batch_size,
                            shuffle=False,
                            num_workers=int(args.workers),
                            drop_last=False)
https://github.com/hamzapehlivan/StyleRes/blob/3fa9fe8a4328e2447553dd2da7b7f542b1530ae2/inference.py#L33
https://github.com/hamzapehlivan/StyleRes/blob/3fa9fe8a4328e2447553dd2da7b7f542b1530ae2/evaluation/fid/data_loader.py#L70
https://github.com/hamzapehlivan/StyleRes/blob/3fa9fe8a4328e2447553dd2da7b7f542b1530ae2/evaluation/recons_metrics/recons.py#L41

=======================================
https://github.com/cuikaiwen18/KD_DLGAN
=======================================

Found 2 times
DataLoader(train_set, batch_size=batch_size,
                                  sampler=sampler, **loader_kwargs)
DataLoader(train_set, batch_size=batch_size,
                                  shuffle=shuffle, **loader_kwargs)
https://github.com/cuikaiwen18/KD_DLGAN/blob/d7476b6c05c61fbf1acf24bebd244a21566722a5/third_party/utils.py#L600
https://github.com/cuikaiwen18/KD_DLGAN/blob/d7476b6c05c61fbf1acf24bebd244a21566722a5/third_party/utils.py#L605

=======================================
https://github.com/zhengyuf/PointAvatar
=======================================

Found 5 times
torch.utils.data.DataLoader(self.plot_dataset,
                                                           batch_size=min(int(self.conf.get_int('train.max_points_training') /self.model.pc.points.shape[0]),self.conf.get_int('train.max_batch',default='10')),
                                                           shuffle=False,
                                                           collate_fn=self.plot_dataset.collate_fn
                                                           )
torch.utils.data.DataLoader(self.train_dataset,
                                                            batch_size=self.batch_size,
                                                            shuffle=True,
                                                            collate_fn=self.train_dataset.collate_fn,
                                                            num_workers=4,
                                                            )
torch.utils.data.DataLoader(self.train_dataset,
                                                            batch_size=self.batch_size,
                                                            shuffle=True,
                                                            collate_fn=self.train_dataset.collate_fn,
                                                            num_workers=4,
                                                            )
torch.utils.data.DataLoader(self.plot_dataset,
                                                           batch_size=min(self.batch_size * 2, 10),
                                                           shuffle=False,
                                                           collate_fn=self.plot_dataset.collate_fn,
                                                           num_workers=4,
                                                           )
torch.utils.data.DataLoader(self.train_dataset,
                                                                            batch_size=self.batch_size,
                                                                            shuffle=True,
                                                                            collate_fn=self.train_dataset.collate_fn,
                                                                            num_workers=4,
                                                                            )
https://github.com/zhengyuf/PointAvatar/blob/b9886893dc197b2f24ffbe6f14f0ee17fff61288/code/scripts/test.py#L91
https://github.com/zhengyuf/PointAvatar/blob/b9886893dc197b2f24ffbe6f14f0ee17fff61288/code/scripts/train.py#L181
https://github.com/zhengyuf/PointAvatar/blob/b9886893dc197b2f24ffbe6f14f0ee17fff61288/code/scripts/train.py#L201
https://github.com/zhengyuf/PointAvatar/blob/b9886893dc197b2f24ffbe6f14f0ee17fff61288/code/scripts/train.py#L207
https://github.com/zhengyuf/PointAvatar/blob/b9886893dc197b2f24ffbe6f14f0ee17fff61288/code/scripts/train.py#L373

==================================
https://github.com/yunqing-me/RICK
==================================

Found 4 times
data.DataLoader(
        train_dataset,
        batch_size=args.batch,
        sampler=data_sampler(train_dataset, shuffle=True, distributed=False),
        num_workers=8,
        pin_memory=True,
        drop_last=True,
    )
data.DataLoader(
        test_dataset,
        batch_size=args.batch,
        sampler=data_sampler(test_dataset, shuffle=False, distributed=False),
        num_workers=8,
        pin_memory=True,
        drop_last=True,
        worker_init_fn=seed_worker
    )
DataLoader(dataset=dataset,
                             batch_size=batch_size,
                             shuffle=False,
                             num_workers=num_workers,
                             pin_memory=True)
torch.utils.data.DataLoader(imgs, batch_size=batch_size)
https://github.com/yunqing-me/RICK/blob/44d65c1257895f9bca6a53bed76b071bc478c3fd/train_dynamic_update_prune.py#L823
https://github.com/yunqing-me/RICK/blob/44d65c1257895f9bca6a53bed76b071bc478c3fd/train_dynamic_update_prune.py#L834
https://github.com/yunqing-me/RICK/blob/44d65c1257895f9bca6a53bed76b071bc478c3fd/gan_metrics/precision_recall.py#L319
https://github.com/yunqing-me/RICK/blob/44d65c1257895f9bca6a53bed76b071bc478c3fd/gan_training/metrics/inception_score.py#L20

==============================================
https://github.com/aminshabani/house_diffusion
==============================================

Found 2 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=2, drop_last=False
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=2, drop_last=False
        )
https://github.com/aminshabani/house_diffusion/blob/24ff52cd945ea2b425a4652e826c9d88d7c0330d/house_diffusion/rplanhg_datasets.py#L33
https://github.com/aminshabani/house_diffusion/blob/24ff52cd945ea2b425a4652e826c9d88d7c0330d/house_diffusion/rplanhg_datasets.py#L37

============================================================
https://github.com/CrossmodalGroup/DynamicVectorQuantization
============================================================

Found 13 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=True,
                          collate_fn=self.datasets["train"].collate_fn)
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=True)
DataLoader(self.datasets["validation"], batch_size=self.batch_size,
                            num_workers=self.num_workers, collate_fn=self.datasets["validation"].collate_fn)
DataLoader(self.datasets["validation"], batch_size=self.batch_size,
                            num_workers=self.num_workers)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                            num_workers=self.num_workers, collate_fn=self.datasets["test"].collate_fn)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                            num_workers=self.num_workers)
DataLoader(dset, batch_size=4, num_workers=0, shuffle=True)
DataLoader(dset_val, batch_size=4, num_workers=0, shuffle=True)
torch.utils.data.DataLoader(dset, batch_size=opt.batch_size, num_workers=0, shuffle=False)
torch.utils.data.DataLoader(dset, batch_size=opt.batch_size, num_workers=0, shuffle=False)
torch.utils.data.DataLoader(dset, batch_size=opt.batch_size, num_workers=0, shuffle=False)
torch.utils.data.DataLoader(dset, batch_size=opt.batch_size, num_workers=0, shuffle=False)
torch.utils.data.DataLoader(dataset, batch_size=opt.batch_size, num_workers=1)
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/data/build.py#L68
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/data/build.py#L72
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/data/build.py#L78
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/data/build.py#L81
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/data/build.py#L86
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/data/build.py#L89
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/data/imagenet.py#L242
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/data/imagenet.py#L243
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/scripts/tools/calculate_entropy_thresholds.py#L85
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/scripts/tools/calculate_entropy_thresholds.py#L88
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/scripts/tools/codebook_usage_dqvae.py#L47
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/scripts/tools/codebook_usage_dqvae.py#L50
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/scripts/tools/visualize_dual_grain.py#L31

===================================
https://github.com/ldz666666/RiDDLE
===================================

Found 5 times
torch.utils.data.DataLoader(
                self.latent_dataset,
                batch_size=self.opts.batch_size,
                shuffle=False,
                num_workers=4,
                pin_memory=True,
                drop_last=False
            )
torch.utils.data.DataLoader(
                self.image_dataset,
                batch_size=self.opts.batch_size,
                shuffle=False,
                num_workers=4,
                pin_memory=True,
                drop_last=False
            )
DataLoader(self.train_dataset,
											batch_size=self.opts.batch_size,
											shuffle=(train_sampler is None),
											num_workers=int(self.opts.workers),
											sampler=train_sampler,
											drop_last=True)
DataLoader(self.test_dataset,
											batch_size=self.opts.test_batch_size,
											shuffle=False,
											sampler=test_sampler,
											num_workers=int(self.opts.test_workers),
											drop_last=True)
DataLoader(dset, batch_size=args.batch, num_workers=4)
https://github.com/ldz666666/RiDDLE/blob/6abf4a7d2b9404155a15058b132d1996e508f5aa/coach_test.py#L61
https://github.com/ldz666666/RiDDLE/blob/6abf4a7d2b9404155a15058b132d1996e508f5aa/coach_test.py#L75
https://github.com/ldz666666/RiDDLE/blob/6abf4a7d2b9404155a15058b132d1996e508f5aa/mapper/training/coach_id_swapping_password_same_mapper.py#L153
https://github.com/ldz666666/RiDDLE/blob/6abf4a7d2b9404155a15058b132d1996e508f5aa/mapper/training/coach_id_swapping_password_same_mapper.py#L159
https://github.com/ldz666666/RiDDLE/blob/6abf4a7d2b9404155a15058b132d1996e508f5aa/models/stylegan2/calc_inception.py#L103

==========================================
https://github.com/ZGCTroy/LayoutDiffusion
==========================================

Found 3 times
DataLoader(dataset, **loader_kwargs)
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=num_workers)
data.DataLoader(
            dataset,
            batch_size=config.training.batch_size,
            shuffle=True,
            num_workers=config.data.num_workers,
        )
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/layout_diffusion/dataset/data_loader.py#L39
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/repositories/dpm_solver/example_pytorch/evaluate/fid_score.py#L119
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/repositories/dpm_solver/example_pytorch/runners/diffusion.py#L134

===========================================================
https://github.com/CrossmodalGroup/MaskedVectorQuantization
===========================================================

Found 8 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=True,
                          collate_fn=self.datasets["train"].collate_fn)
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=True)
DataLoader(self.datasets["validation"], batch_size=self.batch_size,
                            num_workers=self.num_workers, collate_fn=self.datasets["validation"].collate_fn)
DataLoader(self.datasets["validation"], batch_size=self.batch_size,
                            num_workers=self.num_workers)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                            num_workers=self.num_workers, collate_fn=self.datasets["test"].collate_fn)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                            num_workers=self.num_workers)
DataLoader(dset, batch_size=4, num_workers=0, shuffle=True)
DataLoader(dset_val, batch_size=4, num_workers=0, shuffle=True)
https://github.com/CrossmodalGroup/MaskedVectorQuantization/blob/f38a9ecbe5947d9c0a395c4f17aef356ad250eac/data/build.py#L68
https://github.com/CrossmodalGroup/MaskedVectorQuantization/blob/f38a9ecbe5947d9c0a395c4f17aef356ad250eac/data/build.py#L72
https://github.com/CrossmodalGroup/MaskedVectorQuantization/blob/f38a9ecbe5947d9c0a395c4f17aef356ad250eac/data/build.py#L78
https://github.com/CrossmodalGroup/MaskedVectorQuantization/blob/f38a9ecbe5947d9c0a395c4f17aef356ad250eac/data/build.py#L81
https://github.com/CrossmodalGroup/MaskedVectorQuantization/blob/f38a9ecbe5947d9c0a395c4f17aef356ad250eac/data/build.py#L86
https://github.com/CrossmodalGroup/MaskedVectorQuantization/blob/f38a9ecbe5947d9c0a395c4f17aef356ad250eac/data/build.py#L89
https://github.com/CrossmodalGroup/MaskedVectorQuantization/blob/f38a9ecbe5947d9c0a395c4f17aef356ad250eac/data/imagenet.py#L242
https://github.com/CrossmodalGroup/MaskedVectorQuantization/blob/f38a9ecbe5947d9c0a395c4f17aef356ad250eac/data/imagenet.py#L243

===============================
https://github.com/tobran/GALIP
===============================

Found 4 times
torch.utils.data.DataLoader(
            train_dataset, batch_size=batch_size, drop_last=True,
            num_workers=num_workers, sampler=train_sampler)
torch.utils.data.DataLoader(
            train_dataset, batch_size=batch_size, drop_last=True,
            num_workers=num_workers, shuffle='True')
torch.utils.data.DataLoader(
            valid_dataset, batch_size=batch_size, drop_last=True,
            num_workers=num_workers, sampler=valid_sampler)
torch.utils.data.DataLoader(
            valid_dataset, batch_size=batch_size, drop_last=True,
            num_workers=num_workers, shuffle='True')
https://github.com/tobran/GALIP/blob/35d0c2fd64eec2e95e7c905cb71f96d81475a46f/code/lib/perpare.py#L93
https://github.com/tobran/GALIP/blob/35d0c2fd64eec2e95e7c905cb71f96d81475a46f/code/lib/perpare.py#L98
https://github.com/tobran/GALIP/blob/35d0c2fd64eec2e95e7c905cb71f96d81475a46f/code/lib/perpare.py#L104
https://github.com/tobran/GALIP/blob/35d0c2fd64eec2e95e7c905cb71f96d81475a46f/code/lib/perpare.py#L108

==============================
https://github.com/MC-E/LF-VSN
==============================

Found 2 times
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=shuffle,
                                           num_workers=num_workers, sampler=sampler, drop_last=True,
                                           pin_memory=False)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=False, num_workers=1,
                                           pin_memory=True)
https://github.com/MC-E/LF-VSN/blob/cc05d16665122bfcd11522c74e8e1253d0bd9d51/code/data/__init__.py#L19
https://github.com/MC-E/LF-VSN/blob/cc05d16665122bfcd11522c74e8e1253d0bd9d51/code/data/__init__.py#L23

====================================
https://github.com/wangchi95/CF-Font
====================================

Found 16 times
torch.utils.data.DataLoader(tmp_ds, batch_size=args.bs_per_font, shuffle=False,
                                                    num_workers=4, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(tmp_ds, batch_size=val_num,
                    shuffle=False, num_workers=2, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(style_val_dataset, batch_size=args.sty_batch_size, 
                sampler=style_sampler, shuffle=False, num_workers=8, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(content_val_dataset, batch_size=30, sampler=content_sampler, shuffle=False,
                                             num_workers=4, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(dataset_ft, batch_size=20, sampler=style_sampler, shuffle=False,
                                        num_workers=8, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(style_val_dataset, batch_size=args.sty_batch_size, 
                sampler=style_sampler, shuffle=False, num_workers=8, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(base_dataset, batch_size=1, sampler=content_sampler, shuffle=False,
                                             num_workers=2, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(ft_dataset, batch_size=1, sampler=style_sampler, shuffle=False,
                                        num_workers=8, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size,
                                                shuffle=(train_sampler is None), num_workers=args.workers,
                                                pin_memory=True, sampler=train_sampler, drop_last=False)
torch.utils.data.DataLoader(train_basis_dataset, batch_size=1,
                                                shuffle=(train_basis_sampler is None), num_workers=args.workers,
                                                pin_memory=True, sampler=train_basis_sampler, drop_last=False)
torch.utils.data.DataLoader(val_dataset, batch_size=args.val_batch, shuffle=True,
                                             num_workers=0, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(train_dataset_, batch_size=args.batch_size,
                                                shuffle=(train_sampler is None), num_workers=args.workers,
                                                pin_memory=True, sampler=train_sampler, drop_last=False)
torch.utils.data.DataLoader(val_dataset, batch_size=args.val_batch, shuffle=True,
                                             num_workers=0, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=0, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(tmp_ds, batch_size=49, shuffle=False,
                                                 num_workers=4, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(tmp_ds, batch_size=args.val_num, shuffle=False,
                                                 num_workers=0, pin_memory=True, drop_last=False)
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/cal_cf_weight.py#L84
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/collect_content_embeddings.py#L143
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/inf_with_style_ft.py#L151
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/inf_with_style_ft.py#L195
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/inf_with_style_ft.py#L225
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/inf_with_style_ft_cf.py#L182
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/inf_with_style_ft_cf.py#L224
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/inf_with_style_ft_cf.py#L267
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/main.py#L450
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/main.py#L454
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/main.py#L459
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/main.py#L481
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/main.py#L485
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/datasets/custom_dataset.py#L580
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/validation/validation.py#L47
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/validation/validation_cf.py#L47

=====================================================
https://github.com/ziqihuangg/Collaborative-Diffusion
=====================================================

Found 4 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/main.py#L213
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/main.py#L222
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/main.py#L238
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/main.py#L246

================================
https://github.com/bbaaii/HFA-GP
================================

Found 12 times
data.DataLoader(
        dataset_test,
        batch_size=1,
        sampler=data.distributed.DistributedSampler(dataset_test, num_replicas=1, rank=0, shuffle=False),
        pin_memory=True,
        drop_last=False,
    )
data.DataLoader(
        dataset_test,
        batch_size=1,
        sampler=data.distributed.DistributedSampler(dataset_test, num_replicas=1, rank=0, shuffle=False),
        pin_memory=True,
        drop_last=False,
    )
data.DataLoader(
        dataset_test,
        batch_size=1,
        sampler=data.distributed.DistributedSampler(dataset_test, num_replicas=1, rank=0, shuffle=False),
        pin_memory=True,
        drop_last=False,
    )
data.DataLoader(
        dataset,

        batch_size=args.batch_size // world_size,
        sampler=data.distributed.DistributedSampler(dataset, num_replicas=world_size, rank=rank, shuffle=True),
        pin_memory=True,
        drop_last=False,
    )
data.DataLoader(
        dataset_test,
        batch_size=1,
        sampler=data.distributed.DistributedSampler(dataset_test, num_replicas=world_size, rank=rank, shuffle=False),
        pin_memory=True,
        drop_last=False,
    )
data.DataLoader(
        dataset,

        batch_size=args.batch_size // world_size,
        sampler=data.distributed.DistributedSampler(dataset, num_replicas=world_size, rank=rank, shuffle=True),
        pin_memory=True,
        drop_last=False,
    )
data.DataLoader(
        dataset_test,
        batch_size=1,
        sampler=data.distributed.DistributedSampler(dataset_test, num_replicas=world_size, rank=rank, shuffle=False),
        pin_memory=True,
        drop_last=False,
    )
data.DataLoader(
        dataset,

        batch_size=args.batch_size // world_size,
        sampler=data.distributed.DistributedSampler(dataset, num_replicas=world_size, rank=rank, shuffle=True),
        pin_memory=True,
        drop_last=False,
    )
data.DataLoader(
        dataset_test,
        batch_size=1,
        sampler=data.distributed.DistributedSampler(dataset_test, num_replicas=world_size, rank=rank, shuffle=False),
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
                        self.dataset,
                        sampler=self.sampler,
                        num_workers=int(opt.num_threads / world_size), 
                        batch_size=int(opt.batch_size / world_size), 
                        drop_last=True)
torch.utils.data.DataLoader(
                self.dataset,
                batch_size=opt.batch_size,
                shuffle=(not opt.serial_batches) and opt.isTrain,
                num_workers=int(opt.num_threads),
                drop_last=True
            )
DataLoader(
        dataset, batch_size=128, drop_last=False, num_workers=4, collate_fn=collate_fn, )
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/run_recon_video_3dmm.py#L266
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/run_recon_video_audio.py#L265
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/run_recon_video_rgb.py#L195
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_3dmm.py#L90
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_3dmm.py#L99
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_audio.py#L91
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_audio.py#L100
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_rgb.py#L85
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_rgb.py#L94
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/eg3d-pose-detection/data/__init__.py#L84
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/eg3d-pose-detection/data/__init__.py#L91
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/eg3d-pose-detection/models/arcface_torch/onnx_ijbc.py#L64

===========================================================
https://github.com/Picsart-AI-Research/Specialist-Diffusion
===========================================================

Found 1 times
torch.utils.data.DataLoader(dataset, batch_size=config['batch_size'], shuffle=True)
https://github.com/Picsart-AI-Research/Specialist-Diffusion/blob/9e4877d7fbf2526fe85a2ba55a36880d66b59b12/train.py#L125

===================================
https://github.com/JiauZhang/FA-VAE
===================================

Found 1 times
DataLoader(dataset, batch_size=args.batch, shuffle=True, drop_last=True)
https://github.com/JiauZhang/FA-VAE/blob/675a220c5d973a77d1908542031c6428d308b4d0/train_vq.py#L43

===================================
https://github.com/sndnyang/sadajem
===================================

Found 14 times
DataLoader(data, batch_size=config['batch_size'], shuffle=config['subset_shuffle'], num_workers=0)
DataLoader(dataset, batch_size=100, shuffle=True, num_workers=num_workers, drop_last=False)
DataLoader(dset_real, batch_size=100, shuffle=False, num_workers=num_workers, drop_last=False)
DataLoader(dset_fake, batch_size=100, shuffle=True, num_workers=num_workers, drop_last=False)
DataLoader(dset, batch_size=100, shuffle=False, num_workers=num_workers, drop_last=False)
DataLoader(dset_real, batch_size=100, shuffle=False, num_workers=num_workers, drop_last=False)
DataLoader(dset_train, batch_size=args.batch_size, shuffle=True, num_workers=num_workers, drop_last=True)
DataLoader(dset_train_labeled, batch_size=label_bs, shuffle=True, num_workers=num_workers, drop_last=True)
DataLoader(dset_valid, batch_size=100, shuffle=False, num_workers=num_workers, drop_last=False)
DataLoader(dset_test, batch_size=100, shuffle=False, num_workers=num_workers, drop_last=False)
DataLoader(dset_train, batch_size=args.batch_size, shuffle=True, num_workers=num_workers, drop_last=True)
DataLoader(dset_valid, batch_size=100, shuffle=False, num_workers=num_workers, drop_last=False)
DataLoader(dset_test, batch_size=100, shuffle=False, num_workers=num_workers, drop_last=False)
DataLoader(test_dataset, batch_size=args.batch_size, num_workers=0, shuffle=True, drop_last=False)
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/bpda_eot_attack.py#L42
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/eval_sadajem.py#L309
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/eval_sadajem.py#L343
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/eval_sadajem.py#L358
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/eval_sadajem.py#L436
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/eval_sadajem.py#L470
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/utils.py#L151
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/utils.py#L153
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/utils.py#L156
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/utils.py#L157
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/utils.py#L188
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/utils.py#L189
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/utils.py#L190
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/Task/eval_buffer.py#L109

==========================================
https://github.com/mf-zhang/Structural-MPI
==========================================

Found 8 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=(TrainingSampler if training else InferenceSampler)(len(dataset)),
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
    )
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
torch.utils.data.DataLoader(
        dataset,  # pyre-ignore[6]
        batch_size=dataset_cfg.IMAGE_LOADER.BATCH_SIZE,
        sampler=training_sampler,
        num_workers=dataset_cfg.IMAGE_LOADER.NUM_WORKERS,
        collate_fn=trivial_batch_collator,
        worker_init_fn=worker_init_reset_seed,
    )
data.DataLoader(dataset, num_workers=0, collate_fn=operator.itemgetter(0))
data.DataLoader(
            dataset,
            num_workers=2,
            collate_fn=operator.itemgetter(0),
            worker_init_fn=worker_init_reset_seed,
            # reset seed should not affect behavior of TrainingSampler
        )
https://github.com/mf-zhang/Structural-MPI/blob/cfa26640ae5fc47b360ca2d49f10f5daa953ee45/Mask2Former/mask2former_video/data_video/build.py#L244
https://github.com/mf-zhang/Structural-MPI/blob/cfa26640ae5fc47b360ca2d49f10f5daa953ee45/detectron2/configs/Misc/torchvision_imagenet_R_50.py#L41
https://github.com/mf-zhang/Structural-MPI/blob/cfa26640ae5fc47b360ca2d49f10f5daa953ee45/detectron2/detectron2/data/build.py#L321
https://github.com/mf-zhang/Structural-MPI/blob/cfa26640ae5fc47b360ca2d49f10f5daa953ee45/detectron2/detectron2/data/build.py#L332
https://github.com/mf-zhang/Structural-MPI/blob/cfa26640ae5fc47b360ca2d49f10f5daa953ee45/detectron2/detectron2/data/build.py#L537
https://github.com/mf-zhang/Structural-MPI/blob/cfa26640ae5fc47b360ca2d49f10f5daa953ee45/detectron2/projects/DensePose/densepose/data/build.py#L661
https://github.com/mf-zhang/Structural-MPI/blob/cfa26640ae5fc47b360ca2d49f10f5daa953ee45/detectron2/tests/data/test_sampler.py#L47
https://github.com/mf-zhang/Structural-MPI/blob/cfa26640ae5fc47b360ca2d49f10f5daa953ee45/detectron2/tests/data/test_sampler.py#L52

========================================
https://github.com/google-research/sparf
========================================

Found 1 times
torch.utils.data.DataLoader(self,
            batch_size=1,
            num_workers=self.args.num_workers,
            shuffle=shuffle,
            drop_last=drop_last,
            pin_memory=False, # spews warnings in PyTorch 1.9 but should be True in general
        )
https://github.com/google-research/sparf/blob/88fedda453784610ccb4b75e5fe9cd802fb93cdc/source/datasets/base.py#L75

========================================
https://github.com/Yueming6568/DeltaEdit
========================================

Found 3 times
DataLoader(test_dataset, 
                                 batch_size=opts.batch_size,
                                 shuffle=False,
                                 num_workers=int(opts.workers),
                                 drop_last=True)
DataLoader(test_dataset, 
                                 batch_size=opts.batch_size,
                                 shuffle=False,
                                 num_workers=int(opts.workers),
                                 drop_last=True)
DataLoader(train_dataset,
                                  batch_size=opts.batch_size,
                                  shuffle=True,
                                  num_workers=int(opts.workers),
                                  drop_last=True)
https://github.com/Yueming6568/DeltaEdit/blob/77ae966e27f6390fdb60d09393fa5bf5d3bb14db/scripts/inference.py#L44
https://github.com/Yueming6568/DeltaEdit/blob/77ae966e27f6390fdb60d09393fa5bf5d3bb14db/scripts/inference_real.py#L120
https://github.com/Yueming6568/DeltaEdit/blob/77ae966e27f6390fdb60d09393fa5bf5d3bb14db/scripts/train.py#L19

==============================================
https://github.com/NVlabs/affordance_diffusion
==============================================

Found 3 times
DataLoader(
        dataset,
        batch_size=bs,
        shuffle=shuffle,
        num_workers=8,
        pin_memory=True,
    )
DataLoader(
        dataset,
        batch_size=bs, shuffle=shuffle, num_workers=8, pin_memory=True,
    )
DataLoader(ds, None, True, num_workers=8, drop_last=False)
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/dataset/dataset.py#L96
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/dataset/dataset.py#L120
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/preprocess/generate_data.py#L291

=============================================
https://github.com/Meta-Portrait/MetaPortrait
=============================================

Found 12 times
DataLoader(dataset, batch_size=1, sampler=sampler, num_workers=2, drop_last=False, pin_memory=True)
DataLoader(train_data, batch_size=batch_size, num_workers=1, 
                            drop_last=False, pin_memory=True, sampler=sampler)
torch.utils.data.DataLoader(**dataloader_args)
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        sampler=None,
        drop_last=False)
DataLoader(
        dataset=dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, sampler=None, drop_last=False)
DataLoader(
        dataset=dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, sampler=None, drop_last=False)
DataLoader(
        dataset=dataset, batch_size=args.batch_size, shuffle=False, num_workers=16, sampler=None, drop_last=False)
torch.utils.data.DataLoader(dataset=dataset, batch_size=1, shuffle=False, num_workers=0)
DataLoader(dataset=data_set, num_workers=opts.threads, batch_size=opts.batch_size, sampler=sampler, pin_memory=True)
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
DataLoader(dataset=data_set, num_workers=opts.threads, batch_size=opts.batch_size, sampler=sampler, pin_memory=True)
DataLoader(dataset=data_set, num_workers=opts.threads, batch_size=opts.batch_size, sampler=sampler, pin_memory=True)
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/base_model/inference.py#L34
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/base_model/main.py#L81
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/basicsr/data/__init__.py#L94
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/scripts/metrics/calculate_fid_folder.py#L41
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/scripts/metrics/calculate_fid_stats_from_datasets.py#L36
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/scripts/metrics/calculate_fid_stats_from_driving.py#L36
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/scripts/metrics/calculate_fid_stats_from_source.py#L36
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/tests/test_models/test_sr_model.py#L137
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Experimental_root/metrics/warp_error/utils_btc.py#L134
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Experimental_root/metrics/warp_error/core/datasets.py#L230
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Experimental_root/metrics/warp_error/core/utils_btc.py#L134
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Experimental_root/metrics/warp_error/trash/utils_btc.py#L134

==================================================
https://github.com/Fantasy-Studio/Paint-by-Example
==================================================

Found 7 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
torch.utils.data.DataLoader(test_dataset, 
                                    batch_size=1, 
                                    num_workers=4, 
                                    pin_memory=True, 
                                    shuffle=False,#sampler=train_sampler, 
                                    drop_last=True)
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=num_workers)
torch.utils.data.DataLoader(test_dataset, 
                                        batch_size=batch_size, 
                                        num_workers=4, 
                                        pin_memory=True, 
                                        shuffle=False,#sampler=train_sampler, 
                                        drop_last=True)
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/main.py#L218
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/main.py#L227
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/main.py#L243
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/main.py#L251
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/eval_tool/clip_score/region_clip_score.py#L22
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/eval_tool/fid/fid_score.py#L108
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/scripts/inference_test_bench.py#L296

================================
https://github.com/gligen/GLIGEN
================================

Found 4 times
DataLoader( dataset_train,  batch_size=config.batch_size, 
                                                   shuffle=(sampler is None),
                                                   num_workers=config.workers, 
                                                   pin_memory=True, 
                                                   sampler=sampler)
DataLoader(dataset, batch_size=16, shuffle=False, num_workers=4, drop_last=False)
DataLoader( self.dataset_eval,batch_size=config.batch_size, 
                                                    num_workers=config.workers, 
                                                    pin_memory=True, 
                                                    sampler=sampler,
                                                    drop_last=False)
DataLoader( dataset_train,  batch_size=config.batch_size, 
                                                   shuffle=(sampler is None),
                                                   num_workers=config.workers, 
                                                   pin_memory=True, 
                                                   sampler=sampler)
https://github.com/gligen/GLIGEN/blob/f9dccb9c6cf48bad03c3666290a7dec8c5e58f3c/trainer.py#L276
https://github.com/gligen/GLIGEN/blob/f9dccb9c6cf48bad03c3666290a7dec8c5e58f3c/DATA/process_grounding.py#L302
https://github.com/gligen/GLIGEN/blob/f9dccb9c6cf48bad03c3666290a7dec8c5e58f3c/demo/gligen/evaluator.py#L111
https://github.com/gligen/GLIGEN/blob/f9dccb9c6cf48bad03c3666290a7dec8c5e58f3c/demo/gligen/trainer.py#L250

========================================
https://github.com/changzheng123/L-CoIns
========================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
https://github.com/changzheng123/L-CoIns/blob/c08bc735f3fd1ec668b2e038d595bc5dcee8b2ce/run_colorization.py#L250
https://github.com/changzheng123/L-CoIns/blob/c08bc735f3fd1ec668b2e038d595bc5dcee8b2ce/run_colorization.py#L259

==================================
https://github.com/sstzal/DiffTalk
==================================

Found 5 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn, drop_last=True)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=False, drop_last=True)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
DataLoader(datasets["validation"], batch_size=args.batchsize, num_workers=args.numworkers, shuffle=False)
https://github.com/sstzal/DiffTalk/blob/b49a607aa39bb41da215870c2b3dd48e9af9f30d/main.py#L211
https://github.com/sstzal/DiffTalk/blob/b49a607aa39bb41da215870c2b3dd48e9af9f30d/main.py#L220
https://github.com/sstzal/DiffTalk/blob/b49a607aa39bb41da215870c2b3dd48e9af9f30d/main.py#L236
https://github.com/sstzal/DiffTalk/blob/b49a607aa39bb41da215870c2b3dd48e9af9f30d/main.py#L244
https://github.com/sstzal/DiffTalk/blob/b49a607aa39bb41da215870c2b3dd48e9af9f30d/scripts/inference.py#L67

==================================
https://github.com/xiezhy6/GP-VTON
==================================

Found 6 times
DataLoader(train_data, batch_size=opt.batchSize, shuffle=False,
                          num_workers=4, pin_memory=True, sampler=train_sampler)
DataLoader(train_data, batch_size=opt.batchSize, shuffle=False,
                          num_workers=4, pin_memory=True, sampler=train_sampler)
DataLoader(train_data, batch_size=opt.batchSize, shuffle=False,
                          num_workers=4, pin_memory=True, sampler=train_sampler)
DataLoader(train_data, batch_size=opt.batchSize, shuffle=False,
                          num_workers=4, pin_memory=True, sampler=train_sampler)
DataLoader(train_data, batch_size=opt.batchSize, shuffle=False,
                          num_workers=4, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batchSize,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.nThreads))
https://github.com/xiezhy6/GP-VTON/blob/cb41ee9c20206d634c9beaf7c0ebf2e84f687e00/test_tryon.py#L35
https://github.com/xiezhy6/GP-VTON/blob/cb41ee9c20206d634c9beaf7c0ebf2e84f687e00/test_warping.py#L36
https://github.com/xiezhy6/GP-VTON/blob/cb41ee9c20206d634c9beaf7c0ebf2e84f687e00/train_tryon.py#L44
https://github.com/xiezhy6/GP-VTON/blob/cb41ee9c20206d634c9beaf7c0ebf2e84f687e00/train_warping.py#L40
https://github.com/xiezhy6/GP-VTON/blob/cb41ee9c20206d634c9beaf7c0ebf2e84f687e00/train_warping_dresscode.py#L42
https://github.com/xiezhy6/GP-VTON/blob/cb41ee9c20206d634c9beaf7c0ebf2e84f687e00/data/custom_dataset_data_loader.py#L21

==================================
https://github.com/chansey0529/LSO
==================================

Found 1 times
torch.utils.data.DataLoader(dataset=training_set, sampler=distribution_sampler, batch_size=batch_size//num_gpus)
https://github.com/chansey0529/LSO/blob/5d5b9e9effaba0e4c4de536695249db7ad4f67e9/training/training_loop.py#L167

===================================
https://github.com/srcn-ivl/UPR-Net
===================================

Found 9 times
DataLoader(dataset, batch_size=batch_size,
            num_workers=nr_data_worker, pin_memory=True)
DataLoader(dataset_val, batch_size=batch_size,
            num_workers=nr_data_worker, pin_memory=True)
DataLoader(dataset_val, batch_size=batch_size,
            num_workers=nr_data_worker, pin_memory=True)
DataLoader(dataset_val, batch_size=batch_size,
            num_workers=nr_data_worker, pin_memory=True)
DataLoader(dataset_val, batch_size=batch_size,
            num_workers=nr_data_worker, pin_memory=True)
DataLoader(dataset, batch_size=batch_size,
            num_workers=nr_data_worker, pin_memory=True)
DataLoader(dataset, batch_size=batch_size,
            num_workers=nr_data_worker, pin_memory=True)
DataLoader(dataset_train, batch_size=batch_size,
            num_workers=nr_data_worker,
            pin_memory=True, drop_last=True, sampler=sampler)
DataLoader(dataset_val, batch_size=batch_size,
            num_workers=nr_data_worker, pin_memory=True)
https://github.com/srcn-ivl/UPR-Net/blob/f1797928ab9c2182e285d49d20fe299ea53ebfb1/tools/benchmark_8x_4k1000fps.py#L20
https://github.com/srcn-ivl/UPR-Net/blob/f1797928ab9c2182e285d49d20fe299ea53ebfb1/tools/benchmark_snufilm.py#L75
https://github.com/srcn-ivl/UPR-Net/blob/f1797928ab9c2182e285d49d20fe299ea53ebfb1/tools/benchmark_snufilm.py#L82
https://github.com/srcn-ivl/UPR-Net/blob/f1797928ab9c2182e285d49d20fe299ea53ebfb1/tools/benchmark_snufilm.py#L89
https://github.com/srcn-ivl/UPR-Net/blob/f1797928ab9c2182e285d49d20fe299ea53ebfb1/tools/benchmark_snufilm.py#L96
https://github.com/srcn-ivl/UPR-Net/blob/f1797928ab9c2182e285d49d20fe299ea53ebfb1/tools/benchmark_ucf101.py#L21
https://github.com/srcn-ivl/UPR-Net/blob/f1797928ab9c2182e285d49d20fe299ea53ebfb1/tools/benchmark_vimeo90k.py#L20
https://github.com/srcn-ivl/UPR-Net/blob/f1797928ab9c2182e285d49d20fe299ea53ebfb1/tools/train.py#L66
https://github.com/srcn-ivl/UPR-Net/blob/f1797928ab9c2182e285d49d20fe299ea53ebfb1/tools/train.py#L69

======================================
https://github.com/plusmultiply/TAPS3D
======================================

Found 5 times
torch.utils.data.DataLoader(
            dataset=training_set, sampler=training_set_sampler, batch_size=batch_gpu,
            num_workers=workers)
torch.utils.data.DataLoader(
                dataset=training_set, batch_size=16,
                num_workers=8, shuffle=False)
torch.utils.data.DataLoader(
                dataset=training_set, batch_size=1,
                num_workers=1, shuffle=False)
torch.utils.data.DataLoader(
                dataset=dataset, sampler=item_subset,
                batch_size=batch_size // opts.num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(
            dataset=training_set, sampler=training_set_sampler, batch_size=batch_size // num_gpus,
            **data_loader_kwargs)
https://github.com/plusmultiply/TAPS3D/blob/0d60a7aae5d56a9e07fa797b2404bb755895d4b9/train.py#L236
https://github.com/plusmultiply/TAPS3D/blob/0d60a7aae5d56a9e07fa797b2404bb755895d4b9/data/step_2.py#L54
https://github.com/plusmultiply/TAPS3D/blob/0d60a7aae5d56a9e07fa797b2404bb755895d4b9/data/step_3.py#L65
https://github.com/plusmultiply/TAPS3D/blob/0d60a7aae5d56a9e07fa797b2404bb755895d4b9/metrics/metric_utils.py#L276
https://github.com/plusmultiply/TAPS3D/blob/0d60a7aae5d56a9e07fa797b2404bb755895d4b9/training/training_loop_3d.py#L150

==============================
https://github.com/e4s2022/e4s
==============================

Found 3 times
DataLoader(self.train_dataset,
                                            batch_size=self.opts.batch_size,
                                            num_workers=int(self.opts.workers),
                                            drop_last=True,
                                            pin_memory=True,
                                            sampler=self.train_sampler)
DataLoader(self.train_dataset,
                                           batch_size=self.opts.batch_size,
                                           shuffle=True,
                                           num_workers=int(self.opts.workers),
                                           drop_last=True)
DataLoader(self.test_dataset,
                                        batch_size=self.opts.test_batch_size,
                                        shuffle=False,
                                        num_workers=int(
                                            self.opts.test_workers),
                                        drop_last=False)
https://github.com/e4s2022/e4s/blob/d30bdc7180fdfad20722d86cbe12893dc39f3e02/src/training/coach.py#L172
https://github.com/e4s2022/e4s/blob/d30bdc7180fdfad20722d86cbe12893dc39f3e02/src/training/coach.py#L179
https://github.com/e4s2022/e4s/blob/d30bdc7180fdfad20722d86cbe12893dc39f3e02/src/training/coach.py#L185

=====================================
https://github.com/theEricMa/OTAvatar
=====================================

Found 1 times
torch.utils.data.DataLoader(
        instance,
        batch_size=batch_size,
        sampler=data_sampler(instance, shuffle=not is_inference, distributed=opt.train.distributed),
        drop_last=not is_inference,
        num_workers=getattr(opt, 'num_workers', 0),
        prefetch_factor=getattr(opt.val if is_inference else opt.train, 'prefetch_factor', 2)
    )
https://github.com/theEricMa/OTAvatar/blob/b242d4c85d5be0b9e72291863ae7eff8ba0050ca/data/__init__.py#L35

=================================================
https://github.com/mattolson93/cross_gan_auditing
=================================================

Found 8 times
DataLoader(dset, batch_size=args.batch, num_workers=4)
data.DataLoader(
        dataset,
        batch_size=args.batch,
        sampler=data_sampler(dataset, shuffle=True, distributed=args.distributed),
        drop_last=True,
    )
torch.utils.data.DataLoader(datasets.ImageFolder('/usr/WS2/olson60/research/StyleGan3/t_imagefolder/', transform=transform), batch_size=bs, shuffle = True, pin_memory=True, num_workers=8,drop_last=True)
torch.utils.data.DataLoader(datasets.ImageFolder('/usr/WS2/olson60/research/StyleGan3/r_imagefolder/', transform=transform), batch_size=bs, shuffle = True, pin_memory=True, num_workers=8,drop_last=True)
DataLoader(dset, batch_size=args.batch, num_workers=4)
data.DataLoader(
        dataset,
        batch_size=args.batch,
        sampler=data_sampler(dataset, shuffle=True, distributed=args.distributed),
        drop_last=True,
    )
DataLoader(dset, batch_size=args.batch, num_workers=4)
data.DataLoader(
        dataset,
        batch_size=args.batch,
        sampler=data_sampler(dataset, shuffle=True, distributed=args.distributed),
        drop_last=True,
    )
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat/generators/stylegan2-pytorch/calc_inception.py#L101
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat/generators/stylegan2-pytorch/train.py#L403
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat2/runner.py#L453
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat2/runner.py#L454
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat2/generators/stylegan2-pytorch/calc_inception.py#L101
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat2/generators/stylegan2-pytorch/train.py#L403
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat3/generators/stylegan2-pytorch/calc_inception.py#L101
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat3/generators/stylegan2-pytorch/train.py#L403

==================================================================
https://github.com/snap-research/unsupervised-volumetric-animation
==================================================================

Found 4 times
DataLoader(dataset,
                                  batch_size=config['batch_size'],
                                  num_workers=config['num_workers'],
                                  drop_last=True,
                                  shuffle=True)
torch.utils.data.DataLoader(
        dataset_for_loader,
        shuffle=False,
        batch_size=len(dataset_for_loader),
        num_workers=num_workers,
        collate_fn=FrameData.collate,
    )
torch.utils.data.DataLoader(
                dataset,
                num_workers=num_workers,
                batch_sampler=batch_sampler,
                collate_fn=FrameData.collate,
            )
torch.utils.data.DataLoader(
        sequence_dataset,
        batch_size=len(sequence_dataset),
        shuffle=False,
        num_workers=num_workers,
        collate_fn=FrameData.collate,
    )
https://github.com/snap-research/unsupervised-volumetric-animation/blob/35623532d356de4b52eaaedc23121bade8eddd94/train.py#L81
https://github.com/snap-research/unsupervised-volumetric-animation/blob/35623532d356de4b52eaaedc23121bade8eddd94/pytorch3d/implicitron/eval_demo.py#L203
https://github.com/snap-research/unsupervised-volumetric-animation/blob/35623532d356de4b52eaaedc23121bade8eddd94/pytorch3d/implicitron/dataset/dataloader_zoo.py#L87
https://github.com/snap-research/unsupervised-volumetric-animation/blob/35623532d356de4b52eaaedc23121bade8eddd94/pytorch3d/implicitron/dataset/visualize.py#L65

=============================================
https://github.com/yizhiwang96/deepvecfont-v2
=============================================

Found 1 times
data.DataLoader(dataset, batch_size, shuffle=(mode == 'train'), num_workers=batch_size)
https://github.com/yizhiwang96/deepvecfont-v2/blob/de5f6e290a570ac5fd0a5858d0e2df48ccc6c51c/dataloader.py#L52

==========================================
https://github.com/linfengWen98/CAP-VSTNet
==========================================

Found 1 times
DataLoader(dataset=dataset, batch_size=batch_size, drop_last=True, num_workers=num_workers, sampler=InfiniteSamplerWrapper(dataset), collate_fn=collate_fn)
https://github.com/linfengWen98/CAP-VSTNet/blob/cd7cbcc3c4acba2f758657554dbe70aff505b99b/utils/dataset.py#L126

====================================
https://github.com/Yzmblog/MonoHuman
====================================

Found 2 times
torch.utils.data.DataLoader(dataset=dataset,
                                                batch_size=batch_size,
                                                #   shuffle=shuffle,
                                                drop_last=drop_last,
                                                num_workers=cfg.num_workers,
                                                worker_init_fn=_worker_init_fn,
                                                sampler=train_sampler
                                                )
torch.utils.data.DataLoader(dataset=dataset,
                                                batch_size=batch_size,
                                                shuffle=shuffle,
                                                drop_last=drop_last,
                                                num_workers=cfg.num_workers,
                                                worker_init_fn=_worker_init_fn,
                                                )
https://github.com/Yzmblog/MonoHuman/blob/27beef7b6abb8082866d809ad91c09168d53a2f0/core/data/create_dataset.py#L63
https://github.com/Yzmblog/MonoHuman/blob/27beef7b6abb8082866d809ad91c09168d53a2f0/core/data/create_dataset.py#L72

==========================================
https://github.com/researchmm/MM-Diffusion
==========================================

Found 10 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True,  num_workers=num_workers, drop_last=True
        )
torch.utils.data.DataLoader(
        ds_train,
        batch_size=batch_train,
        shuffle=dl_shuffle,
        num_workers=workers_train,
        pin_memory=True,
        collate_fn=collate_fn,
        drop_last=True
    )
torch.utils.data.DataLoader(
        ds_eval,
        batch_size=batch_test,
        num_workers=workers_test,
        pin_memory=True,
        collate_fn=collate_fn
    )
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers, drop_last=drop_last
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True,  num_workers=num_workers, drop_last=drop_last
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers, drop_last=True
        )
https://github.com/researchmm/MM-Diffusion/blob/1d2d5ad9b47f57e7d300e087af8eb93181da094d/evaluations/util.py#L83
https://github.com/researchmm/MM-Diffusion/blob/1d2d5ad9b47f57e7d300e087af8eb93181da094d/evaluations/util.py#L87
https://github.com/researchmm/MM-Diffusion/blob/1d2d5ad9b47f57e7d300e087af8eb93181da094d/evaluations/AudioCLIP/ignite_trainer/_utils.py#L138
https://github.com/researchmm/MM-Diffusion/blob/1d2d5ad9b47f57e7d300e087af8eb93181da094d/evaluations/AudioCLIP/ignite_trainer/_utils.py#L157
https://github.com/researchmm/MM-Diffusion/blob/1d2d5ad9b47f57e7d300e087af8eb93181da094d/mm_diffusion/image_datasets.py#L55
https://github.com/researchmm/MM-Diffusion/blob/1d2d5ad9b47f57e7d300e087af8eb93181da094d/mm_diffusion/image_datasets.py#L59
https://github.com/researchmm/MM-Diffusion/blob/1d2d5ad9b47f57e7d300e087af8eb93181da094d/mm_diffusion/multimodal_datasets.py#L94
https://github.com/researchmm/MM-Diffusion/blob/1d2d5ad9b47f57e7d300e087af8eb93181da094d/mm_diffusion/multimodal_datasets.py#L98
https://github.com/researchmm/MM-Diffusion/blob/1d2d5ad9b47f57e7d300e087af8eb93181da094d/mm_diffusion/real_image_datasets.py#L71
https://github.com/researchmm/MM-Diffusion/blob/1d2d5ad9b47f57e7d300e087af8eb93181da094d/mm_diffusion/real_image_datasets.py#L75

=================================
https://github.com/sihyun-yu/PVDM
=================================

Found 3 times
DataLoader(trainset, sampler=trainset_sampler, batch_size=batch_size // n_gpus, pin_memory=False, num_workers=4, prefetch_factor=2)
DataLoader(testset, sampler=testset_sampler, batch_size=batch_size // n_gpus, pin_memory=False, num_workers=4, prefetch_factor=2)
torch.utils.data.DataLoader(
            _VideoTimestampsDataset(self.video_paths),  # type: ignore[arg-type]
            batch_size=16,
            num_workers=self.num_workers,
            collate_fn=_collate_fn,
        )
https://github.com/sihyun-yu/PVDM/blob/389f4ca82dd5c87d5ba88852b601559cec24fcf0/tools/dataloader.py#L306
https://github.com/sihyun-yu/PVDM/blob/389f4ca82dd5c87d5ba88852b601559cec24fcf0/tools/dataloader.py#L309
https://github.com/sihyun-yu/PVDM/blob/389f4ca82dd5c87d5ba88852b601559cec24fcf0/tools/video_utils.py#L140

====================================
https://github.com/fanegg/UV-Volumes
====================================

Found 1 times
torch.utils.data.DataLoader(dataset,
                                              batch_sampler=batch_sampler,
                                              num_workers=num_workers,
                                              collate_fn=collator,
                                              worker_init_fn=worker_init_fn)
https://github.com/fanegg/UV-Volumes/blob/1a25c38034046bffd42dce01fa40e1fb267446fc/lib/datasets/make_dataset.py#L89

====================================
https://github.com/Rajhans0/Poly_INR
====================================

Found 2 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/Rajhans0/Poly_INR/blob/0c3806d3afc8eb59514dc18ce3aa716e620ee7e6/metrics/metric_utils.py#L276
https://github.com/Rajhans0/Poly_INR/blob/0c3806d3afc8eb59514dc18ce3aa716e620ee7e6/training/training_loop.py#L158

========================================
https://github.com/nihaomiao/CVPR23_LFDM
========================================

Found 13 times
data.DataLoader(dataset=dataset,
                                    batch_size=10,
                                    num_workers=8,
                                    shuffle=False)
data.DataLoader(dataset=dataset,
                                    batch_size=10,
                                    num_workers=4,
                                    shuffle=False)
data.DataLoader(MHAD_test(data_dir=data_dir,
                                           image_size=args.input_size,
                                           num_frames=N_FRAMES,
                                           mean=MEAN),
                                 batch_size=args.batch_size,
                                 shuffle=True, num_workers=args.num_workers,
                                 pin_memory=True)
data.DataLoader(MUG_test(data_dir=data_dir,
                                          image_size=args.input_size,
                                          num_frames=N_FRAMES,
                                          mean=MEAN),
                                 batch_size=args.batch_size,
                                 shuffle=True, num_workers=args.num_workers,
                                 pin_memory=True)
data.DataLoader(NATOPS_test(data_dir=data_dir,
                                             image_size=args.input_size,
                                             num_frames=N_FRAMES,
                                             use_crop=True,
                                             mean=MEAN),
                                 batch_size=args.batch_size,
                                 shuffle=True, num_workers=args.num_workers,
                                 pin_memory=True)
data.DataLoader(MHAD(data_dir=data_dir,
                                       image_size=INPUT_SIZE,
                                       num_frames=N_FRAMES,
                                       color_jitter=True,
                                       split_train_test=True,
                                       sampling=frame_sampling,
                                       mean=MEAN),
                                  batch_size=args.batch_size,
                                  shuffle=True, num_workers=args.num_workers,
                                  pin_memory=True)
data.DataLoader(MHAD(data_dir=data_dir,
                                       image_size=INPUT_SIZE,
                                       num_frames=N_FRAMES,
                                       color_jitter=True,
                                       sampling=frame_sampling,
                                       mean=MEAN),
                                  batch_size=args.batch_size,
                                  shuffle=True, num_workers=args.num_workers,
                                  pin_memory=True)
data.DataLoader(MUG(data_dir=data_dir,
                                      image_size=INPUT_SIZE,
                                      num_frames=N_FRAMES,
                                      color_jitter=True,
                                      sampling=frame_sampling,
                                      mean=MEAN),
                                  batch_size=args.batch_size,
                                  shuffle=True, num_workers=args.num_workers,
                                  pin_memory=True)
data.DataLoader(NATOPS(data_dir=data_dir,
                                         image_size=INPUT_SIZE,
                                         num_frames=N_FRAMES,
                                         color_jitter=True,
                                         sampling=frame_sampling,
                                         mean=MEAN),
                                  batch_size=args.batch_size,
                                  shuffle=True, num_workers=args.num_workers,
                                  pin_memory=True)
data.DataLoader(MHAD_test(data_dir=data_dir,
                                           image_size=args.input_size,
                                           num_frames=N_FRAMES,
                                           mean=MEAN),
                                 batch_size=args.batch_size,
                                 shuffle=True, num_workers=args.num_workers,
                                 pin_memory=True)
data.DataLoader(MUG_test(data_dir=data_dir,
                                          image_size=args.input_size,
                                          num_frames=N_FRAMES,
                                          mean=MEAN),
                                 batch_size=args.batch_size,
                                 shuffle=True, num_workers=args.num_workers,
                                 pin_memory=True)
data.DataLoader(NATOPS_test(data_dir=data_dir,
                                             image_size=args.input_size,
                                             num_frames=N_FRAMES,
                                             mean=MEAN),
                                 batch_size=args.batch_size,
                                 shuffle=True, num_workers=args.num_workers,
                                 pin_memory=True)
DataLoader(dataset, batch_size=train_params['batch_size'], shuffle=True,
                            num_workers=train_params['dataloader_workers'], drop_last=True)
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/DM/datasets_mug.py#L640
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/DM/datasets_natops.py#L565
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/DM/test_video_flow_diffusion_mhad.py#L117
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/DM/test_video_flow_diffusion_mug.py#L123
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/DM/test_video_flow_diffusion_natops.py#L129
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/DM/train_video_flow_diffusion_mhad.py#L183
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/DM/train_video_flow_diffusion_mhad_multiGPU.py#L210
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/DM/train_video_flow_diffusion_mug.py#L188
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/DM/train_video_flow_diffusion_natops.py#L195
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/LFAE/test_flowautoenc_mhad.py#L114
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/LFAE/test_flowautoenc_mug.py#L113
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/LFAE/test_flowautoenc_natops.py#L113
https://github.com/nihaomiao/CVPR23_LFDM/blob/bc1ff9a3279921a5d74f6e0b76ea9e505b242bc7/LFAE/train.py#L62

=================================
https://github.com/KU-CVLAB/LANIT
=================================

Found 5 times
data.DataLoader(dataset=dataset,
                           batch_size=batch_size,
                           #sampler = sampler,
                           shuffle = shuffle,
                           num_workers=num_workers,
                           pin_memory=True,
                           drop_last=True)
data.DataLoader(dataset=dataset,
                           batch_size=batch_size,
                           shuffle=shuffle,
                           num_workers=num_workers,
                           pin_memory=True,
                           drop_last=True)
data.DataLoader(dataset=dataset,
                           batch_size=batch_size,
                           shuffle=shuffle,
                           num_workers=num_workers,
                           pin_memory=True,
                           drop_last=drop_last)
data.DataLoader(dataset=dataset,
                           batch_size=batch_size,
                           shuffle=shuffle,
                           num_workers=num_workers,
                           pin_memory=True,
                           )
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=num_workers)
https://github.com/KU-CVLAB/LANIT/blob/8d1dac310283ee13f2e6f1641c0b1b33e6f79265/core/data_loader.py#L183
https://github.com/KU-CVLAB/LANIT/blob/8d1dac310283ee13f2e6f1641c0b1b33e6f79265/core/data_loader.py#L212
https://github.com/KU-CVLAB/LANIT/blob/8d1dac310283ee13f2e6f1641c0b1b33e6f79265/core/data_loader.py#L241
https://github.com/KU-CVLAB/LANIT/blob/8d1dac310283ee13f2e6f1641c0b1b33e6f79265/core/data_loader.py#L289
https://github.com/KU-CVLAB/LANIT/blob/8d1dac310283ee13f2e6f1641c0b1b33e6f79265/metrics/test_fid.py#L114

=====================================
https://github.com/gwang-kim/DATID-3D
=====================================

Found 4 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(
                        self.dataset,
                        sampler=self.sampler,
                        num_workers=int(opt.num_threads / world_size), 
                        batch_size=int(opt.batch_size / world_size), 
                        drop_last=True)
torch.utils.data.DataLoader(
                self.dataset,
                batch_size=opt.batch_size,
                shuffle=(not opt.serial_batches) and opt.isTrain,
                num_workers=int(opt.num_threads),
                drop_last=True
            )
https://github.com/gwang-kim/DATID-3D/blob/7339e85cdec74265b59b59ba47a51959b55e2f27/eg3d/metrics/metric_utils.py#L233
https://github.com/gwang-kim/DATID-3D/blob/7339e85cdec74265b59b59ba47a51959b55e2f27/eg3d/training/training_loop.py#L147
https://github.com/gwang-kim/DATID-3D/blob/7339e85cdec74265b59b59ba47a51959b55e2f27/pose_estimation/data/__init__.py#L84
https://github.com/gwang-kim/DATID-3D/blob/7339e85cdec74265b59b59ba47a51959b55e2f27/pose_estimation/data/__init__.py#L91

=====================================
https://github.com/KumapowerLIU/CLCAE
=====================================

Found 13 times
DataLoader(dataset,
                            batch_size=args.batch_size,
                            shuffle=False,
                            num_workers=int(args.workers),
                            drop_last=True)
DataLoader(dataset,
                            batch_size=opts.test_batch_size,
                            shuffle=False,
                            num_workers=int(opts.test_workers),
                            drop_last=True)
DataLoader(dataset,
                            batch_size=opts.test_batch_size,
                            shuffle=False,
                            num_workers=int(opts.test_workers),
                            drop_last=True)
DataLoader(dataset,
                            batch_size=opts.test_batch_size,
                            shuffle=False,
                            num_workers=int(opts.test_workers),
                            drop_last=True)
DataLoader(dataset,
                            batch_size=opts.test_batch_size,
                            shuffle=False,
                            num_workers=int(opts.test_workers),
                            drop_last=True)
DataLoader(self.train_dataset,
                                               batch_size=self.opts.batch_size,
                                               shuffle=False,
                                               num_workers=int(self.opts.workers),
                                               drop_last=True,
                                               sampler=sampler_train)
DataLoader(self.test_dataset,
                                              batch_size=self.opts.test_batch_size,
                                              shuffle=False,
                                              num_workers=int(self.opts.test_workers),
                                              drop_last=True,
                                              sampler=self.sampler_test)
DataLoader(self.train_dataset,
                                               batch_size=self.opts.batch_size,
                                               shuffle=True,
                                               num_workers=int(self.opts.workers),
                                               drop_last=True)
DataLoader(self.test_dataset,
                                              batch_size=self.opts.test_batch_size,
                                              shuffle=False,
                                              num_workers=int(self.opts.test_workers),
                                              drop_last=True)
DataLoader(self.train_dataset,
                                               batch_size=self.opts.batch_size,
                                               shuffle=False,
                                               num_workers=int(self.opts.workers),
                                               drop_last=True,
                                               sampler=sampler_train)
DataLoader(self.test_dataset,
                                              batch_size=self.opts.test_batch_size,
                                              shuffle=False,
                                              num_workers=int(self.opts.test_workers),
                                              drop_last=True,
                                              sampler=self.sampler_test)
DataLoader(self.train_dataset,
                                               batch_size=self.opts.batch_size,
                                               shuffle=True,
                                               num_workers=int(self.opts.workers),
                                               drop_last=True)
DataLoader(self.test_dataset,
                                              batch_size=self.opts.test_batch_size,
                                              shuffle=False,
                                              num_workers=int(self.opts.test_workers),
                                              drop_last=True)
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/scripts/calc_losses_on_images.py#L39
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/scripts/inference_car.py#L80
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/scripts/inference_edit.py#L55
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/scripts/inference_edit_not_interface.py#L57
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/scripts/inference_inversion.py#L65
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/training/contrastive_coach.py#L87
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/training/contrastive_coach.py#L93
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/training/contrastive_coach.py#L100
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/training/contrastive_coach.py#L105
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/training/inversion_coach.py#L116
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/training/inversion_coach.py#L122
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/training/inversion_coach.py#L129
https://github.com/KumapowerLIU/CLCAE/blob/55986ea75577a48a50e5f57302009dafbc0d8919/training/inversion_coach.py#L134

=======================================
https://github.com/OpenTalker/SadTalker
=======================================

Found 2 times
torch.utils.data.DataLoader(
                        self.dataset,
                        sampler=self.sampler,
                        num_workers=int(opt.num_threads / world_size), 
                        batch_size=int(opt.batch_size / world_size), 
                        drop_last=True)
torch.utils.data.DataLoader(
                self.dataset,
                batch_size=opt.batch_size,
                shuffle=(not opt.serial_batches) and opt.isTrain,
                num_workers=int(opt.num_threads),
                drop_last=True
            )
https://github.com/OpenTalker/SadTalker/blob/cd4c0465ae0b54a6f85af57f5c65fec9fe23e7f8/src/face3d/data/__init__.py#L84
https://github.com/OpenTalker/SadTalker/blob/cd4c0465ae0b54a6f85af57f5c65fec9fe23e7f8/src/face3d/data/__init__.py#L91

=====================================
https://github.com/Kunhao-Liu/StyleRF
=====================================

Found 1 times
DataLoader(train_dataset, batch_size=batch_size, sampler=sampler(len(train_dataset)), num_workers=num_workers)
https://github.com/Kunhao-Liu/StyleRF/blob/1539433cdfd98a4fe57be52d77088687de2fbe15/dataLoader/styleLoader.py#L14

=================================
https://github.com/iva-mzsun/MOSO
=================================

Found 25 times
Data.DataLoader(
            validset,
            sampler=valid_sampler,
            batch_size=opt.train.batch_size,
            pin_memory=opt.dataset.pin_memory,
            shuffle=opt.dataset.shuffle,
            drop_last=True,
        )
Data.DataLoader(
            trainset,
            sampler=train_sampler,
            batch_size=opt.train.batch_size,
            pin_memory=opt.dataset.pin_memory,
            shuffle=opt.dataset.shuffle,
            drop_last=True
        )
Data.DataLoader(
            validset,
            sampler=valid_sampler,
            batch_size=opt.train.batch_size,
            pin_memory=opt.dataset.pin_memory,
            shuffle=opt.dataset.shuffle,
            drop_last=True,
        )
Data.DataLoader(
            trainset,
            sampler=train_sampler,
            batch_size=opt.train.batch_size,
            pin_memory=opt.dataset.pin_memory,
            shuffle=opt.dataset.shuffle,
            drop_last=True
        )
Data.DataLoader(
            validset,
            sampler=valid_sampler,
            batch_size=opt.train.batch_size,
            pin_memory=opt.dataset.pin_memory,
            shuffle=opt.dataset.shuffle,
            drop_last=True,
        )
Data.DataLoader(
            trainset,
            sampler=train_sampler,
            batch_size=opt.train.batch_size,
            pin_memory=opt.dataset.pin_memory,
            shuffle=opt.dataset.shuffle,
            drop_last=True
        )
Data.DataLoader(
            validset,
            sampler=valid_sampler,
            batch_size=opt.train.batch_size,
            pin_memory=opt.dataset.pin_memory,
            shuffle=opt.dataset.shuffle,
            drop_last=True,
        )
Data.DataLoader(
            trainset,
            sampler=train_sampler,
            batch_size=opt.train.batch_size,
            pin_memory=opt.dataset.pin_memory,
            shuffle=opt.dataset.shuffle,
            drop_last=True
        )
Data.DataLoader(
        trainset,
        sampler=train_sampler,
        batch_size=opt.train.batch_size,
        pin_memory=opt.dataset.pin_memory,
        shuffle=opt.dataset.shuffle,
        num_workers=opt.dataset.num_worker,
        drop_last=True
    )
Data.DataLoader(
        validset,
        sampler=valid_sampler,
        batch_size=opt.train.batch_size,
        pin_memory=opt.dataset.pin_memory,
        shuffle=opt.dataset.shuffle,
        num_workers=opt.dataset.num_worker,
        drop_last=True,
    )
DataLoader(train_data, batch_size=args.batch_size, shuffle=False)
torch.utils.data.DataLoader(
        testset,
        sampler=test_sampler,
        batch_size=data_opt['batch_size'],
        num_workers=data_opt['num_workers'],
        pin_memory=data_opt['pin_memory'],
        shuffle=data_opt['shuffle'], drop_last=True)
torch.utils.data.DataLoader(
        trainset,
        sampler=train_sampler,
        batch_size=data_opt['batch_size'],
        num_workers=data_opt['num_workers'],
        pin_memory=data_opt['pin_memory'],
        shuffle=data_opt['shuffle'], drop_last=True)
torch.utils.data.DataLoader(
            testset,
            sampler=test_sampler,
            batch_size=data_opt['batch_size'],
            num_workers=data_opt['num_workers'],
            pin_memory=data_opt['pin_memory'],
            shuffle=data_opt['shuffle'], drop_last=True)
torch.utils.data.DataLoader(
        trainset,
        sampler=train_sampler,
        batch_size=data_opt['batch_size'],
        num_workers=data_opt['num_workers'],
        pin_memory=False,
        shuffle=False, drop_last=True)
torch.utils.data.DataLoader(
        testset,
        sampler=test_sampler,
        batch_size=data_opt['batch_size'],
        num_workers=data_opt['num_workers'],
        pin_memory=False,
        shuffle=False, drop_last=True)
torch.utils.data.DataLoader(
        trainset,
        sampler=train_sampler,
        batch_size=data_opt['batch_size'],
        num_workers=data_opt['num_workers'],
        pin_memory=True,
        shuffle=False, drop_last=True)
torch.utils.data.DataLoader(
        testset,
        sampler=test_sampler,
        batch_size=data_opt['batch_size'],
        num_workers=data_opt['num_workers'],
        pin_memory=True,
        shuffle=False, drop_last=True)
torch.utils.data.DataLoader(
        trainset,
        sampler=train_sampler,
        batch_size=data_opt['train']['batch_size'],
        num_workers=data_opt['train']['num_workers'],
        pin_memory=data_opt['train']['pin_memory'],
        shuffle=data_opt['train']['shuffle'], drop_last=True)
torch.utils.data.DataLoader(
            testset,
            sampler=test_sampler,
            batch_size=data_opt['val']['batch_size'],
            num_workers=data_opt['val']['num_workers'],
            pin_memory=data_opt['val']['pin_memory'],
            shuffle=data_opt['val']['shuffle'], drop_last=True)
Data.DataLoader(
        trainset,
        sampler=train_sampler,
        batch_size=data_opt['batch_size'],
        num_workers=data_opt['num_workers'],
        pin_memory=data_opt['pin_memory'],
        shuffle=data_opt['shuffle'],
        drop_last=True)
Data.DataLoader(
            testset,
            sampler=test_sampler,
            batch_size=data_opt['batch_size'],
            num_workers=data_opt['num_workers'],
            pin_memory=data_opt['pin_memory'],
            shuffle=data_opt['shuffle'],
            drop_last=True)
Data.DataLoader(
        trainset,
        sampler=train_sampler,
        batch_size=data_opt['batch_size'],
        num_workers=data_opt['num_workers'],
        pin_memory=data_opt['pin_memory'],
        shuffle=data_opt['shuffle'],
        drop_last=True)
Data.DataLoader(
            testset,
            sampler=test_sampler,
            batch_size=data_opt['batch_size'],
            num_workers=data_opt['num_workers'],
            pin_memory=data_opt['pin_memory'],
            shuffle=data_opt['shuffle'],
            drop_last=True)
torch.utils.data.DataLoader(dataset, batch_size=batch_size)
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-Transformer/frame_interpolate.py#L30
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-Transformer/frame_interpolate.py#L44
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-Transformer/frame_interpolate.py#L63
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-Transformer/frame_interpolate.py#L78
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-Transformer/video_predict.py#L30
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-Transformer/video_predict.py#L44
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-Transformer/video_predict.py#L63
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-Transformer/video_predict.py#L78
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-Transformer/src/dataset/__init__.py#L16
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-Transformer/src/dataset/__init__.py#L27
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-Transformer/src/utils/utils.py#L149
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/ISFID_Reconstruction.py#L98
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/convert_data.py#L49
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/convert_data.py#L60
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/extract_tokens.py#L44
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/extract_tokens.py#L53
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/extract_tokens_moco.py#L42
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/extract_tokens_moco.py#L51
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/test_model.py#L40
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/test_model.py#L51
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/train_dist.py#L50
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/train_dist.py#L62
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/valid_dist.py#L54
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/valid_dist.py#L66
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/src/losses/calculate_is_fid.py#L247

===========================================
https://github.com/AlessandroRuzzi/GazeNeRF
===========================================

Found 13 times
DataLoader(train_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(val_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(test_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(train_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(val_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(test_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(train_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(val_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(test_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(train_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(val_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(test_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(train_set, batch_size=batch_size, num_workers=num_workers)
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/columbia.py#L110
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/columbia.py#L157
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/columbia.py#L202
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/eth_xgaze.py#L109
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/eth_xgaze.py#L156
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/eth_xgaze.py#L201
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/gaze_capture.py#L110
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/gaze_capture.py#L157
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/gaze_capture.py#L202
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/mpii_face_gaze.py#L113
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/mpii_face_gaze.py#L160
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/mpii_face_gaze.py#L205
https://github.com/AlessandroRuzzi/GazeNeRF/blob/813dbbef09b24f477fc8691960e209e6a58767b5/datasets/standard_image_dataset.py#L21

====================================
https://github.com/qym7/CBDM-pytorch
====================================

Found 2 times
torch.utils.data.DataLoader(
        dataset, batch_size=FLAGS.batch_size,
        shuffle=True, num_workers=FLAGS.num_workers, drop_last=True)
DataLoader(dataset=dataset,
                             batch_size=batch_size,
                             shuffle=False,
                             num_workers=num_workers,
                             pin_memory=True)
https://github.com/qym7/CBDM-pytorch/blob/94e201e06c9602f3fcccb0698e714284921c93de/main.py#L216
https://github.com/qym7/CBDM-pytorch/blob/94e201e06c9602f3fcccb0698e714284921c93de/score/improved_prd.py#L328

=================================
https://github.com/OpenTalker/DPE
=================================

Found 2 times
data.DataLoader(
        dataset,
        num_workers=8,
        batch_size=args.batch_size // world_size,
        sampler=data.distributed.DistributedSampler(dataset, num_replicas=world_size, rank=rank, shuffle=True),
        pin_memory=True,
        drop_last=True,
    )
data.DataLoader(
        dataset_test,
        num_workers=8,
        batch_size=min(8,args.batch_size // world_size),
        sampler=data.distributed.DistributedSampler(dataset_test, num_replicas=world_size, rank=rank, shuffle=False),
        pin_memory=True,
        drop_last=True,
    )
https://github.com/OpenTalker/DPE/blob/76a86c40132422929b98e26a366969f12ee66260/train.py#L81
https://github.com/OpenTalker/DPE/blob/76a86c40132422929b98e26a366969f12ee66260/train.py#L90

===============================
https://github.com/zyxElsa/InST
===============================

Found 4 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/main.py#L237
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/main.py#L246
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/main.py#L262
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/main.py#L270

=====================================
https://github.com/MrTornado24/Next3D
=====================================

Found 10 times
DataLoader(dataset, batch_size=8, shuffle=False,
                            num_workers=8,
                            pin_memory=True,
                            drop_last=False)
DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True,
                            num_workers=self.cfg.dataset.num_workers,
                            pin_memory=True,
                            drop_last=True)
DataLoader(self.val_dataset, batch_size=8, shuffle=True,
                            num_workers=8,
                            pin_memory=True,
                            drop_last=False)
DataLoader(train_dataset, batch_size=config.batch_size, shuffle=shuffle,
                            num_workers=config.num_workers,
                            pin_memory=True,
                            drop_last = drop_last)
DataLoader(dataset, batch_size=8, shuffle=False,
                            num_workers=8,
                            pin_memory=True,
                            drop_last=False)
DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True,
                            num_workers=self.cfg.dataset.num_workers,
                            pin_memory=True,
                            drop_last=True)
DataLoader(self.val_dataset, batch_size=8, shuffle=True,
                            num_workers=8,
                            pin_memory=True,
                            drop_last=False)
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/dataset_preprocessing/ffhq/deca/decalib/trainer.py#L322
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/dataset_preprocessing/ffhq/deca/decalib/trainer.py#L366
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/dataset_preprocessing/ffhq/deca/decalib/trainer.py#L371
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/dataset_preprocessing/ffhq/deca/decalib/datasets/train_datasets.py#L41
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/dataset_preprocessing/ffhq/deca/decalib/utils/trainer.py#L218
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/dataset_preprocessing/ffhq/deca/decalib/utils/trainer.py#L252
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/dataset_preprocessing/ffhq/deca/decalib/utils/trainer.py#L256
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/metrics/metric_utils.py#L249
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/training/training_loop.py#L146
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/training_avatar_texture/training_loop.py#L150

========================================
https://github.com/rotem-shalev/Ham2Pose
========================================

Found 2 times
DataLoader(train_dataset, batch_size=args["batch_size"],
                              shuffle=True, collate_fn=zero_pad_collator)
DataLoader(test_dataset, batch_size=args["batch_size"],
                             collate_fn=zero_pad_collator)
https://github.com/rotem-shalev/Ham2Pose/blob/25a5cd7221dfb81a24088e4f38bca868d8e896fc/train.py#L82
https://github.com/rotem-shalev/Ham2Pose/blob/25a5cd7221dfb81a24088e4f38bca868d8e896fc/train.py#L84

==============================
https://github.com/fubinfb/NTF
==============================

Found 2 times
DataLoader(
            trn_dset,
            collate_fn=trn_dset.collate_fn,
            sampler=sampler,
            shuffle=False,
            num_workers=0,
            batch_size=batch_size
        )
DataLoader(
            trn_dset,
            collate_fn=trn_dset.collate_fn,
            shuffle=True,
            **cfg.dset.loader
        )
https://github.com/fubinfb/NTF/blob/639c6d0025705e3406b4ce878603171f1cfc0dbb/train_NTF.py#L81
https://github.com/fubinfb/NTF/blob/639c6d0025705e3406b4ce878603171f1cfc0dbb/train_NTF.py#L90

==================================================
https://github.com/nianticlabs/nerf-object-removal
==================================================

Found 10 times
DataLoader(train_dataset,
                                  batch_size,
                                  sampler=sampler,
                                  num_workers=8 * int(torch.cuda.is_available()),
                                  pin_memory=torch.cuda.is_available(),
                                  drop_last=True)
DataLoader(val_dataset,
                                batch_size=1,
                                num_workers=8 * int(torch.cuda.is_available()),
                                pin_memory=torch.cuda.is_available())
torch.utils.data.DataLoader(
        dataset,
        sampler=(TrainingSampler if training else InferenceSampler)(len(dataset)),
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
    )
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
torch.utils.data.DataLoader(
        dataset,  # pyre-ignore[6]
        batch_size=dataset_cfg.IMAGE_LOADER.BATCH_SIZE,
        sampler=training_sampler,
        num_workers=dataset_cfg.IMAGE_LOADER.NUM_WORKERS,
        collate_fn=trivial_batch_collator,
        worker_init_fn=worker_init_reset_seed,
    )
DataLoader(self.dataset, shuffle=False, batch_size=batch_size)
DataLoader(dataset, **dataloader_kwargs)
DataLoader(dataset, **dataloader_kwargs)
https://github.com/nianticlabs/nerf-object-removal/blob/805e23444e2613889fc14925d1a292d1905bcb9d/external/ARKitScenes/depth_upsampling/train.py#L42
https://github.com/nianticlabs/nerf-object-removal/blob/805e23444e2613889fc14925d1a292d1905bcb9d/external/ARKitScenes/depth_upsampling/train.py#L54
https://github.com/nianticlabs/nerf-object-removal/blob/805e23444e2613889fc14925d1a292d1905bcb9d/external/detectron2/configs/Misc/torchvision_imagenet_R_50.py#L41
https://github.com/nianticlabs/nerf-object-removal/blob/805e23444e2613889fc14925d1a292d1905bcb9d/external/detectron2/detectron2/data/build.py#L315
https://github.com/nianticlabs/nerf-object-removal/blob/805e23444e2613889fc14925d1a292d1905bcb9d/external/detectron2/detectron2/data/build.py#L326
https://github.com/nianticlabs/nerf-object-removal/blob/805e23444e2613889fc14925d1a292d1905bcb9d/external/detectron2/detectron2/data/build.py#L523
https://github.com/nianticlabs/nerf-object-removal/blob/805e23444e2613889fc14925d1a292d1905bcb9d/external/detectron2/projects/DensePose/densepose/data/build.py#L661
https://github.com/nianticlabs/nerf-object-removal/blob/805e23444e2613889fc14925d1a292d1905bcb9d/external/lama/saicinpainting/evaluation/evaluator.py#L36
https://github.com/nianticlabs/nerf-object-removal/blob/805e23444e2613889fc14925d1a292d1905bcb9d/external/lama/saicinpainting/training/data/datasets.py#L291
https://github.com/nianticlabs/nerf-object-removal/blob/805e23444e2613889fc14925d1a292d1905bcb9d/external/lama/saicinpainting/training/data/datasets.py#L340

===================================
https://github.com/ankanbhunia/PIDM
===================================

Found 1 times
torch.utils.data.DataLoader(
        instance,
        batch_size=batch_size,
        sampler=data_sampler(instance, shuffle=not is_inference, distributed=distributed),
        drop_last=not is_inference,
        num_workers=getattr(opt, 'num_workers', 0),
    )
https://github.com/ankanbhunia/PIDM/blob/68ff365e016fa63c2cff0245432dc85de0d4bf0f/data/__init__.py#L43

==============================================
https://github.com/WentianZhang-ML/AdaptiveMix
==============================================

Found 2 times
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=100, shuffle=False, num_workers=2)
https://github.com/WentianZhang-ML/AdaptiveMix/blob/163e5d57705d91b5d3d3b27066f9132c63dc5291/classification/train.py#L65
https://github.com/WentianZhang-ML/AdaptiveMix/blob/163e5d57705d91b5d3d3b27066f9132c63dc5291/classification/train.py#L66

==================================================
https://github.com/jcui1224/hierarchical-joint-ebm
==================================================

Found 4 times
t.utils.data.DataLoader(ds_train, batch_size=args['batch_size'], shuffle=True, num_workers=0, drop_last=True)
DataLoader(ds, batch_size=batch_size,
                        drop_last=False, num_workers=cpu_count())
torch.utils.data.DataLoader(
        train_data, batch_size=args.batch_size,
        shuffle=(train_sampler is None),
        sampler=train_sampler, pin_memory=False, num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(
        valid_data, batch_size=args.batch_size,
        shuffle=(valid_sampler is None),
        sampler=valid_sampler, pin_memory=False, num_workers=0, drop_last=False)
https://github.com/jcui1224/hierarchical-joint-ebm/blob/26aeb1fbd4f1e17c59838c00852f4bc156d626df/joint-training/train_cifar10.py#L313
https://github.com/jcui1224/hierarchical-joint-ebm/blob/26aeb1fbd4f1e17c59838c00852f4bc156d626df/pytorch_fid_jcui7/fid_score_imgs.py#L101
https://github.com/jcui1224/hierarchical-joint-ebm/blob/26aeb1fbd4f1e17c59838c00852f4bc156d626df/two-stage-training/datasets.py#L215
https://github.com/jcui1224/hierarchical-joint-ebm/blob/26aeb1fbd4f1e17c59838c00852f4bc156d626df/two-stage-training/datasets.py#L220

================================
https://github.com/JRyanShue/NFD
================================

Found 8 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
DataLoader(
        GeneralizeDataset(dataset_path=args.data_dir, points_batch_size=args.points_batch_size, training_subset_size=args.training_subset_size + args.skip_number, subset_size=args.subset_size), 
        batch_size=args.batch_size, shuffle=False, num_workers=1, drop_last=True, pin_memory=True  # Tune num_workers
    )
DataLoader(
            OccupancyDataset(dataset_path=args.data_dir, points_batch_size=args.points_batch_size, subset_size=args.subset_size), 
            batch_size=args.batch_size, shuffle=False, num_workers=1, drop_last=True, pin_memory=True  # Tune num_workers
        )
DataLoader(
            GeneralizeDataset(dataset_path=args.data_dir, points_batch_size=args.points_batch_size, training_subset_size=args.training_subset_size, subset_size=args.subset_size), 
            batch_size=args.batch_size, shuffle=False, num_workers=1, drop_last=True, pin_memory=True  # Tune num_workers
        )
DataLoader(
        OccupancyDataset(dataset_path=args.data_dir, points_batch_size=args.points_batch_size, subset_size=args.subset_size), 
        batch_size=args.batch_size, shuffle=False, num_workers=4, drop_last=True, pin_memory=True  # Tune num_workers
    )
DataLoader(
            SingleExampleOccupancyDataset(dataset_path=args.data_dir, validation=True), 
            batch_size=args.batch_size, shuffle=False, num_workers=4, drop_last=True  # Tune num_workers
        )
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=0)
https://github.com/JRyanShue/NFD/blob/189799efeed189e816594d8220c8c76c3a3a8d48/nfd/neural_field_diffusion/guided_diffusion/image_datasets.py#L65
https://github.com/JRyanShue/NFD/blob/189799efeed189e816594d8220c8c76c3a3a8d48/nfd/neural_field_diffusion/guided_diffusion/image_datasets.py#L69
https://github.com/JRyanShue/NFD/blob/189799efeed189e816594d8220c8c76c3a3a8d48/nfd/neural_field_diffusion/triplane_fitting/train_generalize.py#L72
https://github.com/JRyanShue/NFD/blob/189799efeed189e816594d8220c8c76c3a3a8d48/nfd/neural_field_diffusion/triplane_fitting/validation.py#L65
https://github.com/JRyanShue/NFD/blob/189799efeed189e816594d8220c8c76c3a3a8d48/nfd/neural_field_diffusion/triplane_fitting/validation.py#L70
https://github.com/JRyanShue/NFD/blob/189799efeed189e816594d8220c8c76c3a3a8d48/nfd/neural_field_diffusion/triplane_fitting/profiling/test_io.py#L37
https://github.com/JRyanShue/NFD/blob/189799efeed189e816594d8220c8c76c3a3a8d48/nfd/neural_field_diffusion/triplane_fitting/single_scene/reconstruct.py#L52
https://github.com/JRyanShue/NFD/blob/189799efeed189e816594d8220c8c76c3a3a8d48/nfd/triplane_decoder/fit_single.py#L16

====================================
https://github.com/AiArt-HDU/MATEBIT
====================================

Found 2 times
torch.utils.data.DataLoader(
        instance,
        batch_size=opt.batchSize,
        shuffle=(opt.phase=='train'),
        num_workers=int(opt.nThreads),
        drop_last=(opt.phase=='train')
    )
torch.utils.data.DataLoader(imgs, batch_size=batch_size)
https://github.com/AiArt-HDU/MATEBIT/blob/92f9c53d3d3f5567d5e2c3d901811fe7e210bb8a/data/__init__.py#L35
https://github.com/AiArt-HDU/MATEBIT/blob/92f9c53d3d3f5567d5e2c3d901811fe7e210bb8a/evaluation/inception_score.py#L35

============================================
https://github.com/DarthSid95/SpiderStyleGAN
============================================

Found 3 times
torch.utils.data.DataLoader(dataset_obj, batch_size=1, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/DarthSid95/SpiderStyleGAN/blob/7884a70a00f8b24e5faef37661f6a782487f5253/avg_spectra.py#L54
https://github.com/DarthSid95/SpiderStyleGAN/blob/7884a70a00f8b24e5faef37661f6a782487f5253/metrics/metric_utils.py#L231
https://github.com/DarthSid95/SpiderStyleGAN/blob/7884a70a00f8b24e5faef37661f6a782487f5253/training/training_loop.py#L201

===================================
https://github.com/avinabsaha/ReIQA
===================================

Found 3 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=batch_size, shuffle=(train_sampler is None),
        num_workers=num_workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        train_dataset, batch_size=batch_size, shuffle=(train_sampler is None),
        num_workers=num_workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=128, shuffle=False,
        num_workers=32, pin_memory=True)
https://github.com/avinabsaha/ReIQA/blob/b533fe77e0f51c0d64e91e5b9d6de06e049a82bf/datasets/util.py#L374
https://github.com/avinabsaha/ReIQA/blob/b533fe77e0f51c0d64e91e5b9d6de06e049a82bf/datasets/util.py#L443
https://github.com/avinabsaha/ReIQA/blob/b533fe77e0f51c0d64e91e5b9d6de06e049a82bf/datasets/util.py#L446

===============================
https://github.com/baofff/U-ViT
===============================

Found 8 times
DataLoader(test_dataset, batch_size=config.sample.mini_batch_size, shuffle=True,
                                     drop_last=True, num_workers=8, pin_memory=True, persistent_workers=True)
DataLoader(train_dataset, batch_size=mini_batch_size, shuffle=True, drop_last=True,
                                      num_workers=8, pin_memory=True, persistent_workers=True)
DataLoader(train_dataset, batch_size=mini_batch_size, shuffle=True, drop_last=True,
                                      num_workers=8, pin_memory=True, persistent_workers=True)
DataLoader(train_dataset, batch_size=mini_batch_size, shuffle=True, drop_last=True,
                                      num_workers=8, pin_memory=True, persistent_workers=True)
DataLoader(train_dataset, batch_size=mini_batch_size, shuffle=True, drop_last=True,
                                      num_workers=8, pin_memory=True, persistent_workers=True)
DataLoader(test_dataset, batch_size=config.sample.mini_batch_size, shuffle=True, drop_last=True,
                                     num_workers=8, pin_memory=True, persistent_workers=True)
DataLoader(train_dataset, batch_size=256, shuffle=False, drop_last=False,
                                      num_workers=8, pin_memory=True, persistent_workers=True)
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=num_workers)
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/eval_t2i_discrete.py#L45
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train.py#L55
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train_ldm.py#L57
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train_ldm_discrete.py#L128
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train_t2i_discrete.py#L128
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train_t2i_discrete.py#L131
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/scripts/extract_imagenet_feature.py#L20
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/tools/fid_score.py#L102

===========================================
https://github.com/endo-yuki-t/Fewshot-SMIS
===========================================

Found 5 times
DataLoader(dataset,
	                        batch_size=args.batch_size,
	                        shuffle=False,
	                        num_workers=int(args.workers),
	                        drop_last=True)
DataLoader(dataset,
	                        batch_size=opts.test_batch_size,
	                        shuffle=False,
	                        num_workers=int(opts.test_workers),
	                        drop_last=True)
DataLoader(dataset,
	                        batch_size=opts.test_batch_size,
	                        shuffle=False,
	                        num_workers=int(opts.test_workers),
	                        drop_last=True)
DataLoader(self.train_dataset,
										   batch_size=self.opts.batch_size,
										   shuffle=True,
										   num_workers=int(self.opts.workers),
										   drop_last=False)
DataLoader(self.test_dataset,
										  batch_size=self.opts.test_batch_size,
										  shuffle=False,
										  num_workers=int(self.opts.test_workers),
										  drop_last=False)
https://github.com/endo-yuki-t/Fewshot-SMIS/blob/32e8b8a16e72961dd2c2031a3d2128821dd668df/scripts/calc_losses_on_images.py#L40
https://github.com/endo-yuki-t/Fewshot-SMIS/blob/32e8b8a16e72961dd2c2031a3d2128821dd668df/scripts/inference.py#L60
https://github.com/endo-yuki-t/Fewshot-SMIS/blob/32e8b8a16e72961dd2c2031a3d2128821dd668df/scripts/style_mixing.py#L51
https://github.com/endo-yuki-t/Fewshot-SMIS/blob/32e8b8a16e72961dd2c2031a3d2128821dd668df/training/coach.py#L50
https://github.com/endo-yuki-t/Fewshot-SMIS/blob/32e8b8a16e72961dd2c2031a3d2128821dd668df/training/coach.py#L55

==========================================
https://github.com/xiaoqian-shen/MoStGAN-V
==========================================

Found 1 times
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler,
                                                             batch_size=batch_size // num_gpus, **data_loader_kwargs)
https://github.com/xiaoqian-shen/MoStGAN-V/blob/a2503eec6a256ce3bbb5e74decaa6eba4105edc2/src/training/training_loop.py#L157

==================================================================
https://github.com/zhshi0816/Video-Frame-Interpolation-Transformer
==================================================================

Found 6 times
DataLoader(dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers, pin_memory=True)
DataLoader(dataset , batch_size=1, shuffle=True, num_workers=0)
DataLoader(dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers, pin_memory=True)
DataLoader(dataset , batch_size=1, shuffle=True, num_workers=0)
DataLoader(dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers, pin_memory=True)
DataLoader(dataset, batch_size=100, shuffle=False, num_workers=32, pin_memory=True)
https://github.com/zhshi0816/Video-Frame-Interpolation-Transformer/blob/2b1dc91f2da617ce1a7ea924262dc498e52a91cf/dataset/Davis_test.py#L46
https://github.com/zhshi0816/Video-Frame-Interpolation-Transformer/blob/2b1dc91f2da617ce1a7ea924262dc498e52a91cf/dataset/Davis_test.py#L54
https://github.com/zhshi0816/Video-Frame-Interpolation-Transformer/blob/2b1dc91f2da617ce1a7ea924262dc498e52a91cf/dataset/ucf101_test.py#L37
https://github.com/zhshi0816/Video-Frame-Interpolation-Transformer/blob/2b1dc91f2da617ce1a7ea924262dc498e52a91cf/dataset/ucf101_test.py#L45
https://github.com/zhshi0816/Video-Frame-Interpolation-Transformer/blob/2b1dc91f2da617ce1a7ea924262dc498e52a91cf/dataset/vimeo90k_septuplet.py#L105
https://github.com/zhshi0816/Video-Frame-Interpolation-Transformer/blob/2b1dc91f2da617ce1a7ea924262dc498e52a91cf/dataset/vimeo90k_septuplet.py#L112

==============================
https://github.com/Ugness/MeBT
==============================

Found 1 times
data.DataLoader(
            dataset,
            batch_size=self.args.batch_size,
            num_workers=self.args.num_workers,
            pin_memory=True,
            sampler=sampler,
            shuffle=sampler is None and self.shuffle is True,
            persistent_workers=train
        )
https://github.com/Ugness/MeBT/blob/72a6ee34beab49dd2dc6d9471d15b049037e49f0/mebt/data.py#L286

==================================================
https://github.com/facebookresearch/holo_diffusion
==================================================

Found 1 times
torch.utils.data.DataLoader(
        torch.utils.data.Subset(dataset, idx),
        batch_size=len(idx),
        num_workers=num_workers,
        shuffle=False,
        collate_fn=FrameData.collate,
    )
https://github.com/facebookresearch/holo_diffusion/blob/36766d00eae88eada2a6cbc1a7fbdac50a429fac/holo_diffusion/utils/render_utils/flyaround.py#L390

===================================
https://github.com/SizheAn/PanoHead
===================================

Found 2 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/SizheAn/PanoHead/blob/17ad915941c7e2703d5aa3eb5ff12eac47c90e53/metrics/metric_utils.py#L235
https://github.com/SizheAn/PanoHead/blob/17ad915941c7e2703d5aa3eb5ff12eac47c90e53/training/training_loop.py#L142

=================================================
https://github.com/timothybrooks/instruct-pix2pix
=================================================

Found 8 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn, persistent_workers=True)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle, persistent_workers=True)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle, persistent_workers=True)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, persistent_workers=True)
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/main.py#L207
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/main.py#L216
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/main.py#L232
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/main.py#L240
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/main.py#L203
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/main.py#L212
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/main.py#L228
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/main.py#L236

=================================
https://github.com/Mid-Push/santa
=================================

Found 1 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.num_threads),
            drop_last=True if opt.isTrain else False,
        )
https://github.com/Mid-Push/santa/blob/1983536ae575af5424fb2153f61d8c2c9fa800cc/data/__init__.py#L75

==========================================
https://github.com/essunny310/FreestyleNet
==========================================

Found 5 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
DataLoader(val_dataset, batch_size=batch_size, num_workers=2, shuffle=False)
https://github.com/essunny310/FreestyleNet/blob/5dcb8b84e150509456eaa5aeec09b505c7a6766f/main.py#L241
https://github.com/essunny310/FreestyleNet/blob/5dcb8b84e150509456eaa5aeec09b505c7a6766f/main.py#L250
https://github.com/essunny310/FreestyleNet/blob/5dcb8b84e150509456eaa5aeec09b505c7a6766f/main.py#L266
https://github.com/essunny310/FreestyleNet/blob/5dcb8b84e150509456eaa5aeec09b505c7a6766f/main.py#L274
https://github.com/essunny310/FreestyleNet/blob/5dcb8b84e150509456eaa5aeec09b505c7a6766f/scripts/LIS.py#L269

=====================================
https://github.com/locuslab/smoothinv
=====================================

Found 8 times
data.DataLoader(dataset,batch_size=64,shuffle=True,num_workers=20, pin_memory=True)
data.DataLoader(dataset_patched, batch_size=32, shuffle=False, num_workers=4)
data.DataLoader(dataset,batch_size=256,shuffle=True,num_workers=20, pin_memory=True)
data.DataLoader(dataset,batch_size=64,shuffle=True,num_workers=20, pin_memory=True)
data.DataLoader(dataset_patched, batch_size=32, shuffle=False, num_workers=4)
data.DataLoader(dataset,batch_size=256,shuffle=True,num_workers=20, pin_memory=True)
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
https://github.com/locuslab/smoothinv/blob/df0926217cc6303fdaae5ec7de2c5c00bd1399c9/loader.py#L104
https://github.com/locuslab/smoothinv/blob/df0926217cc6303fdaae5ec7de2c5c00bd1399c9/loader.py#L127
https://github.com/locuslab/smoothinv/blob/df0926217cc6303fdaae5ec7de2c5c00bd1399c9/loader.py#L136
https://github.com/locuslab/smoothinv/blob/df0926217cc6303fdaae5ec7de2c5c00bd1399c9/loader.py#L167
https://github.com/locuslab/smoothinv/blob/df0926217cc6303fdaae5ec7de2c5c00bd1399c9/loader.py#L200
https://github.com/locuslab/smoothinv/blob/df0926217cc6303fdaae5ec7de2c5c00bd1399c9/loader.py#L213
https://github.com/locuslab/smoothinv/blob/df0926217cc6303fdaae5ec7de2c5c00bd1399c9/guided_diffusion/image_datasets.py#L59
https://github.com/locuslab/smoothinv/blob/df0926217cc6303fdaae5ec7de2c5c00bd1399c9/guided_diffusion/image_datasets.py#L63

==========================================
https://github.com/ubc-vision/Make-A-Story
==========================================

Found 28 times
torch.utils.data.DataLoader(image_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
torch.utils.data.DataLoader(image_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
torch.utils.data.DataLoader(image_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
torch.utils.data.DataLoader(image_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
torch.utils.data.DataLoader(image_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
torch.utils.data.DataLoader(image_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
DataLoader(imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
DataLoader(imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
DataLoader(
			imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
DataLoader(imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
DataLoader(imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
DataLoader(
			imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
DataLoader(imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
DataLoader(imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
DataLoader(
			imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
DataLoader(imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
DataLoader(imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
DataLoader(imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
DataLoader(
			imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
data.DataLoader(
            dataset,
            batch_size=self.args.batch_size,
            num_workers=self.args.num_workers,
            pin_memory=True,
            sampler=sampler,
            shuffle=sampler is None and self.shuffle is True,
            collate_fn=None
        )
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/eval_backgound_classifier.py#L190
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/eval_backgound_classifier.py#L314
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/eval_backgound_classifier.py#L443
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/eval_char_classifier.py#L191
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/eval_char_classifier.py#L315
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/eval_char_classifier.py#L445
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main.py#L203
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main.py#L212
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main.py#L228
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main.py#L236
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main_ours.py#L203
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main_ours.py#L212
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main_ours.py#L228
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main_ours.py#L236
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score.py#L107
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score.py#L160
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score.py#L237
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score_flintstone.py#L107
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score_flintstone.py#L160
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score_flintstone.py#L237
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score_pororo.py#L107
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score_pororo.py#L161
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score_pororo.py#L238
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score_vlc.py#L110
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score_vlc.py#L171
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score_vlc.py#L236
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/classifier/fid_score_vlc.py#L313
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/mugen_data/data.py#L35

=============================
https://github.com/riiid/PPAP
=============================

Found 2 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers, drop_last=True, pin_memory=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers, drop_last=True, pin_memory=True
        )
https://github.com/riiid/PPAP/blob/c0beec9bde6602ed3346e90f2aa1d9b703b8f6df/guided_diffusion/image_datasets.py#L70
https://github.com/riiid/PPAP/blob/c0beec9bde6602ed3346e90f2aa1d9b703b8f6df/guided_diffusion/image_datasets.py#L74

======================================
https://github.com/VinAIResearch/CREPS
======================================

Found 2 times
torch.utils.data.DataLoader(
        dataset=dataset,
        sampler=item_subset,
        batch_size=batch_size,
        **data_loader_kwargs,
    )
torch.utils.data.DataLoader(
            dataset=training_set,
            sampler=training_set_sampler,
            batch_size=batch_size // num_gpus,
            **data_loader_kwargs,
        )
https://github.com/VinAIResearch/CREPS/blob/06ded5f3ddc88310da9c92b086cd4a1109be2c95/metrics/metric_utils.py#L293
https://github.com/VinAIResearch/CREPS/blob/06ded5f3ddc88310da9c92b086cd4a1109be2c95/training/training_loop.py#L147

=========================================
https://github.com/VinAIResearch/WaveDiff
=========================================

Found 4 times
torch.utils.data.DataLoader(dataset,
                                             batch_size=args.batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=4,  # cpu_count(),
                                             )
torch.utils.data.DataLoader(dataset,
                                              batch_size=batch_size,
                                              shuffle=False,
                                              num_workers=4,
                                              pin_memory=True,
                                              sampler=train_sampler,
                                              drop_last=True)
torch.utils.data.DataLoader(dataset,
                                              batch_size=batch_size,
                                              shuffle=False,
                                              num_workers=args.num_workers,
                                              pin_memory=True,
                                              sampler=train_sampler,
                                              drop_last=True)
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=4,  # cpu_count(),
                                             worker_init_fn=set_worker_sharing_strategy)
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/compute_dataset_stat.py#L35
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/train_ddgan.py#L222
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/train_wddgan.py#L52
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/pytorch_fid/fid_score.py#L147

==============================
https://github.com/FeiiYin/SPI
==============================

Found 5 times
DataLoader(dataset,
	                        batch_size=opts.test_batch_size,
	                        shuffle=False,
	                        num_workers=int(opts.test_workers),
	                        drop_last=True)
DataLoader(self.train_dataset,
										   batch_size=self.opts.batch_size,
										   shuffle=True,
										   num_workers=int(self.opts.workers),
										   drop_last=True)
DataLoader(self.test_dataset,
										  batch_size=self.opts.test_batch_size,
										  shuffle=False,
										  num_workers=int(self.opts.test_workers),
										  drop_last=True)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
DataLoader(dataset, batch_size=1, shuffle=False)
https://github.com/FeiiYin/SPI/blob/f2bc63619a17451afc7d24f3ea5d5eca06d511ad/ZSSGAN/mapper/scripts/inference.py#L39
https://github.com/FeiiYin/SPI/blob/f2bc63619a17451afc7d24f3ea5d5eca06d511ad/ZSSGAN/mapper/training/coach.py#L43
https://github.com/FeiiYin/SPI/blob/f2bc63619a17451afc7d24f3ea5d5eca06d511ad/ZSSGAN/mapper/training/coach.py#L48
https://github.com/FeiiYin/SPI/blob/f2bc63619a17451afc7d24f3ea5d5eca06d511ad/eg3d/training/training_loop.py#L146
https://github.com/FeiiYin/SPI/blob/f2bc63619a17451afc7d24f3ea5d5eca06d511ad/spi/run_inversion.py#L101

===================================
https://github.com/Sxjdwang/TalkLip
===================================

Found 4 times
DataLoader(test_dataset, batch_size=4, collate_fn=collate_fn, num_workers=6)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, collate_fn=collate_fn, num_workers=args.num_worker)
DataLoader(test_dataset, batch_size=args.batch_size, collate_fn=collate_fn, num_workers=args.num_worker)
DataLoader(valData, batch_size=1, collate_fn=valData.collate_fn, shuffle=False, num_workers=args.num_workers)
https://github.com/Sxjdwang/TalkLip/blob/7ed53ee2f0ffb3636de49e0f24719eef1c757252/inf_test.py#L337
https://github.com/Sxjdwang/TalkLip/blob/7ed53ee2f0ffb3636de49e0f24719eef1c757252/train.py#L725
https://github.com/Sxjdwang/TalkLip/blob/7ed53ee2f0ffb3636de49e0f24719eef1c757252/train.py#L727
https://github.com/Sxjdwang/TalkLip/blob/7ed53ee2f0ffb3636de49e0f24719eef1c757252/evaluation/teacher_force_wer.py#L139

==========================================================
https://github.com/rakutentech/PCT-Net-Image-Harmonization
==========================================================

Found 4 times
torch.utils.data.DataLoader(self.trainset, batch_size=cfg.batch_size, num_workers=cfg.workers, sampler=self.train_sampler, collate_fn=collate_fn, drop_last=True)
torch.utils.data.DataLoader(self.valset, batch_size=cfg.batch_size, collate_fn=collate_fn, drop_last=True)
DataLoader(
                trainset, cfg.batch_size, shuffle=True,
                drop_last=True, pin_memory=False,
                num_workers=cfg.workers,
                collate_fn=collate_fn
            )
DataLoader(
                valset, cfg.val_batch_size, shuffle=False,
                drop_last=True, pin_memory=False,
                num_workers=cfg.workers, collate_fn=collate_fn
            )
https://github.com/rakutentech/PCT-Net-Image-Harmonization/blob/1572176ed1a72217dad7395391615329b98d30c7/iharm/engine/PCTNet_trainer.py#L82
https://github.com/rakutentech/PCT-Net-Image-Harmonization/blob/1572176ed1a72217dad7395391615329b98d30c7/iharm/engine/PCTNet_trainer.py#L83
https://github.com/rakutentech/PCT-Net-Image-Harmonization/blob/1572176ed1a72217dad7395391615329b98d30c7/iharm/engine/PCTNet_trainer.py#L85
https://github.com/rakutentech/PCT-Net-Image-Harmonization/blob/1572176ed1a72217dad7395391615329b98d30c7/iharm/engine/PCTNet_trainer.py#L92

==========================================================
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement
==========================================================

Found 4 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/main.py#L203
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/main.py#L212
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/main.py#L228
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/main.py#L236

======================================================
https://github.com/man805/Diffusion-Video-Autoencoders
======================================================

Found 5 times
DataLoader(
            dataset,
            batch_size=1 if self.data_name == 'vox256' else (batch_size or self.batch_size),  #EDIT
            sampler=sampler,
            # with sampler, use the sample instead of this option
            shuffle=False if sampler else shuffle,
            num_workers=num_worker or self.num_workers,
            pin_memory=True,
            drop_last=drop_last,
            multiprocessing_context=get_context('fork'),
        )
DataLoader(data, batch_size=args.batch_size, shuffle=False, drop_last=False)
DataLoader(data, batch_size=args.batch_size, shuffle=False, drop_last=False)
DataLoader(TensorDataset(torch.tensor([0.] * conf.batch_size)),
                           batch_size=conf.batch_size)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        # with sampler, use the sample instead of this option
        shuffle=False if sampler else shuffle,
        num_workers=conf.num_workers,
        pin_memory=True,
        drop_last=drop_last,
        multiprocessing_context=get_context('fork'),
    )
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/config.py#L309
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/editing_CLIP.py#L244
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/editing_classifier.py#L239
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L773
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/metrics.py#L31

================================
https://github.com/chi0tzp/FALCO
================================

Found 9 times
data.DataLoader(dataset=dataset, batch_size=1, shuffle=False)
data.DataLoader(dataset=dataset, batch_size=args.batch_size, shuffle=False)
data.DataLoader(dataset=dataset, batch_size=args.batch_size, shuffle=False)
data.DataLoader(dataset=dataset, batch_size=args.batch_size, shuffle=False)
data.DataLoader(dataset=dataset, batch_size=args.batch_size, shuffle=args.shuffle)
DataLoader(train_set, batch_size=batch_size, num_workers=num_workers)
DataLoader(test_set, batch_size=batch_size, num_workers=num_workers)
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/chi0tzp/FALCO/blob/67c6a3010d292c5e6fd0774e5234fd9c88ee7291/anonymize.py#L139
https://github.com/chi0tzp/FALCO/blob/67c6a3010d292c5e6fd0774e5234fd9c88ee7291/extract_features.py#L276
https://github.com/chi0tzp/FALCO/blob/67c6a3010d292c5e6fd0774e5234fd9c88ee7291/extract_pose.py#L100
https://github.com/chi0tzp/FALCO/blob/67c6a3010d292c5e6fd0774e5234fd9c88ee7291/invert.py#L186
https://github.com/chi0tzp/FALCO/blob/67c6a3010d292c5e6fd0774e5234fd9c88ee7291/visualize_dataset.py#L356
https://github.com/chi0tzp/FALCO/blob/67c6a3010d292c5e6fd0774e5234fd9c88ee7291/lib/gaze_estimation/data_loader.py#L44
https://github.com/chi0tzp/FALCO/blob/67c6a3010d292c5e6fd0774e5234fd9c88ee7291/lib/gaze_estimation/data_loader.py#L67
https://github.com/chi0tzp/FALCO/blob/67c6a3010d292c5e6fd0774e5234fd9c88ee7291/models/genforce/converters/stylegan2ada_pth_official/metrics/metric_utils.py#L215
https://github.com/chi0tzp/FALCO/blob/67c6a3010d292c5e6fd0774e5234fd9c88ee7291/models/genforce/converters/stylegan2ada_pth_official/training/training_loop.py#L138

===========================================
https://github.com/drboog/Shifted_Diffusion
===========================================

Found 26 times
torch.utils.data.DataLoader(
        train_dataset,
        shuffle=True,
        collate_fn=collate_fn,
        batch_size=args.train_batch_size,
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(
        train_dataset,
        shuffle=True,
        collate_fn=collate_fn,
        batch_size=args.train_batch_size,
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=True,
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(sample_dataset, batch_size=total_sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset, batch_size=total_train_batch_size, shuffle=True, collate_fn=collate_fn, drop_last=True
    )
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=True,
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, collate_fn=collate_fn, num_workers=1
    )
torch.utils.data.DataLoader(
                sample_dataset, batch_size=args.sample_batch_size, num_workers=1
            )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, collate_fn=collate_fn
    )
torch.utils.data.DataLoader(
                sample_dataset, batch_size=args.sample_batch_size, num_workers=1
            )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, collate_fn=collate_fn
    )
torch.utils.data.DataLoader(train_dataset, batch_size=args.train_batch_size, shuffle=True)
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=True,
        collate_fn=lambda examples: collate_fn(len(instance_data_dir), examples, args.with_prior_preservation),
        num_workers=1,
    )
torch.utils.data.DataLoader(
        train_dataset,
        shuffle=True,
        collate_fn=collate_fn,
        batch_size=args.train_batch_size,
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, num_workers=args.dataloader_num_workers
    )
torch.utils.data.DataLoader(
        dataset, batch_size=args.train_batch_size, shuffle=True, num_workers=args.dataloader_num_workers
    )
torch.utils.data.DataLoader(
        train_dataset,
        shuffle=True,
        collate_fn=collate_fn,
        batch_size=args.train_batch_size,
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(
        train_dataset, shuffle=True, collate_fn=collate_fn, batch_size=total_train_batch_size, drop_last=True
    )
torch.utils.data.DataLoader(
        train_dataset,
        shuffle=True,
        collate_fn=collate_fn,
        batch_size=args.train_batch_size,
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, num_workers=args.dataloader_num_workers
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=total_train_batch_size, shuffle=True, drop_last=True, collate_fn=collate_fn
    )
torch.utils.data.DataLoader(
        dataset, batch_size=args.train_batch_size, shuffle=True, num_workers=args.dataloader_num_workers
    )
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/finetune.py#L651
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/train.py#L374
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/dreambooth/train_dreambooth.py#L645
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/dreambooth/train_dreambooth.py#L822
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/dreambooth/train_dreambooth_flax.py#L368
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/dreambooth/train_dreambooth_flax.py#L459
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/dreambooth/train_dreambooth_lora.py#L603
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/dreambooth/train_dreambooth_lora.py#L779
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/research_projects/colossalai/train_dreambooth_colossalai.py#L396
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/research_projects/colossalai/train_dreambooth_colossalai.py#L531
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/research_projects/dreambooth_inpaint/train_dreambooth_inpaint.py#L458
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/research_projects/dreambooth_inpaint/train_dreambooth_inpaint.py#L607
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/research_projects/dreambooth_inpaint/train_dreambooth_inpaint_lora.py#L457
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/research_projects/dreambooth_inpaint/train_dreambooth_inpaint_lora.py#L653
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/research_projects/intel_opts/textual_inversion/textual_inversion_bf16.py#L491
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/research_projects/multi_subject_dreambooth/train_multi_subject_dreambooth.py#L564
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/research_projects/multi_subject_dreambooth/train_multi_subject_dreambooth.py#L688
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/research_projects/onnxruntime/text_to_image/train_text_to_image.py#L543
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/research_projects/onnxruntime/textual_inversion/textual_inversion.py#L624
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/research_projects/onnxruntime/unconditional_image_generation/train_unconditional.py#L420
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/text_to_image/train_text_to_image.py#L595
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/text_to_image/train_text_to_image_flax.py#L378
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/text_to_image/train_text_to_image_lora.py#L625
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/textual_inversion/textual_inversion.py#L684
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/textual_inversion/textual_inversion_flax.py#L476
https://github.com/drboog/Shifted_Diffusion/blob/1d9e863f852a2de3bc352f59944c1d738526e0fd/diffusers/examples/unconditional_image_generation/train_unconditional.py#L485

======================================
https://github.com/austinxu87/handsoff
======================================

Found 8 times
DataLoader(vis_data, batch_size=1, shuffle=False, num_workers=0)
DataLoader(val_data, batch_size=1, shuffle=False, num_workers=0)
DataLoader(test_data, batch_size=1, shuffle=False, num_workers=0)
DataLoader(vis_data, batch_size=1, shuffle=False, num_workers=0)
DataLoader(val_data, batch_size=1, shuffle=False, num_workers=0)
DataLoader(test_data, batch_size=1, shuffle=False, num_workers=0)
DataLoader(train_data, batch_size=8, shuffle=True, num_workers=16)
DataLoader(dataset=train_data, batch_size=batch_size, shuffle=True)
https://github.com/austinxu87/handsoff/blob/642a72d4a2078c23950a0f74f6f06fa1c972073c/test_deeplab.py#L73
https://github.com/austinxu87/handsoff/blob/642a72d4a2078c23950a0f74f6f06fa1c972073c/test_deeplab.py#L124
https://github.com/austinxu87/handsoff/blob/642a72d4a2078c23950a0f74f6f06fa1c972073c/test_deeplab.py#L131
https://github.com/austinxu87/handsoff/blob/642a72d4a2078c23950a0f74f6f06fa1c972073c/test_deeplab.py#L320
https://github.com/austinxu87/handsoff/blob/642a72d4a2078c23950a0f74f6f06fa1c972073c/test_deeplab.py#L370
https://github.com/austinxu87/handsoff/blob/642a72d4a2078c23950a0f74f6f06fa1c972073c/test_deeplab.py#L378
https://github.com/austinxu87/handsoff/blob/642a72d4a2078c23950a0f74f6f06fa1c972073c/train_deeplab.py#L137
https://github.com/austinxu87/handsoff/blob/642a72d4a2078c23950a0f74f6f06fa1c972073c/train_label_generator.py#L172

===============================
https://github.com/xuekt98/BBDM
===============================

Found 9 times
DataLoader(train_dataset,
                                      batch_size=self.config.data.train.batch_size,
                                      num_workers=8,
                                      drop_last=True,
                                      sampler=train_sampler)
DataLoader(val_dataset,
                                    batch_size=self.config.data.val.batch_size,
                                    num_workers=8,
                                    drop_last=True,
                                    sampler=val_sampler)
DataLoader(test_dataset,
                                     batch_size=self.config.data.test.batch_size,
                                     num_workers=8,
                                     drop_last=True,
                                     sampler=test_sampler)
DataLoader(train_dataset,
                                      batch_size=self.config.data.train.batch_size,
                                      shuffle=self.config.data.train.shuffle,
                                      num_workers=8,
                                      drop_last=True)
DataLoader(val_dataset,
                                    batch_size=self.config.data.val.batch_size,
                                    shuffle=self.config.data.val.shuffle,
                                    num_workers=8,
                                    drop_last=True)
DataLoader(test_dataset,
                                     batch_size=self.config.data.test.batch_size,
                                     shuffle=False,
                                     num_workers=8,
                                     drop_last=True)
DataLoader(test_dataset,
                                     batch_size=self.config.data.test.batch_size,
                                     shuffle=False,
                                     num_workers=1,
                                     drop_last=True,
                                     sampler=test_sampler)
DataLoader(test_dataset,
                                     batch_size=self.config.data.test.batch_size,
                                     shuffle=False,
                                     num_workers=1,
                                     drop_last=True)
DataLoader(train_dataset,
                                  batch_size=self.config.data.train.batch_size,
                                  shuffle=True,
                                  num_workers=8,
                                  drop_last=True)
https://github.com/xuekt98/BBDM/blob/4be731ad1026b7e882c4a7e9c9f223a54f5fc4a3/runners/BaseRunner.py#L338
https://github.com/xuekt98/BBDM/blob/4be731ad1026b7e882c4a7e9c9f223a54f5fc4a3/runners/BaseRunner.py#L343
https://github.com/xuekt98/BBDM/blob/4be731ad1026b7e882c4a7e9c9f223a54f5fc4a3/runners/BaseRunner.py#L348
https://github.com/xuekt98/BBDM/blob/4be731ad1026b7e882c4a7e9c9f223a54f5fc4a3/runners/BaseRunner.py#L354
https://github.com/xuekt98/BBDM/blob/4be731ad1026b7e882c4a7e9c9f223a54f5fc4a3/runners/BaseRunner.py#L359
https://github.com/xuekt98/BBDM/blob/4be731ad1026b7e882c4a7e9c9f223a54f5fc4a3/runners/BaseRunner.py#L364
https://github.com/xuekt98/BBDM/blob/4be731ad1026b7e882c4a7e9c9f223a54f5fc4a3/runners/BaseRunner.py#L553
https://github.com/xuekt98/BBDM/blob/4be731ad1026b7e882c4a7e9c9f223a54f5fc4a3/runners/BaseRunner.py#L560
https://github.com/xuekt98/BBDM/blob/4be731ad1026b7e882c4a7e9c9f223a54f5fc4a3/runners/DiffusionBasedModelRunners/BBDMRunner.py#L87

===============================================
https://github.com/ximinng/VectorFusion-pytorch
===============================================

Found 1 times
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=num_workers)
https://github.com/ximinng/VectorFusion-pytorch/blob/3889e0d1d404ecef00dfee60d2fcedcf6c9c2fc7/libs/metric/pytorch_fid/fid_score.py#L122

==============================
https://github.com/by-liu/CALS
==============================

Found 15 times
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size,
        num_workers=num_workers, pin_memory=pin_memory, shuffle=True
    )
DataLoader(
        train_dataset, batch_size=batch_size, sampler=train_sampler,
        num_workers=num_workers, pin_memory=pin_memory
    )
DataLoader(
        val_dataset, batch_size=batch_size, sampler=val_sampler,
        num_workers=num_workers, pin_memory=pin_memory
    )
DataLoader(
        dataset, batch_size=batch_size,
        num_workers=num_workers, pin_memory=pin_memory
    )
DataLoader(
        dataset, batch_size=batch_size,
        num_workers=num_workers, pin_memory=pin_memory
    )
DataLoader(
        train_dataset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers,
        pin_memory=pin_memory,
        drop_last=True
    )
DataLoader(
        val_dataset,
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=pin_memory,
    )
DataLoader(
        test_dataset,
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=pin_memory,
    )
DataLoader(
        test_dataset,
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=pin_memory,
    )
DataLoader(
            self.val_dataset,
            batch_size=self.cfg.data.val_batch_size,
            num_workers=self.cfg.data.num_workers,
            pin_memory=self.cfg.data.pin_memory,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.cfg.data.test_batch_size,
            num_workers=self.cfg.data.num_workers,
            pin_memory=self.cfg.data.pin_memory,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.cfg.data.train_batch_size,
            shuffle=True,
            num_workers=self.cfg.data.num_workers,
            pin_memory=self.cfg.data.pin_memory,
            drop_last=True,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.cfg.data.val_batch_size,
            num_workers=self.cfg.data.num_workers,
            pin_memory=self.cfg.data.pin_memory,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.cfg.data.test_batch_size,
            num_workers=self.cfg.data.num_workers,
            pin_memory=self.cfg.data.pin_memory,
        )
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=pin_memory,
        drop_last=drop_last,
    )
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/data/tiny_imagenet.py#L228
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/data/tiny_imagenet.py#L382
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/data/tiny_imagenet.py#L387
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/data/tiny_imagenet.py#L427
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/data/tiny_imagenet.py#L469
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/data/voc.py#L182
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/data/voc.py#L191
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/data/voc.py#L211
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/data/voc.py#L231
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/engine/tester.py#L51
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/engine/tester.py#L61
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/engine/trainer.py#L47
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/engine/trainer.py#L57
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/engine/trainer.py#L68
https://github.com/by-liu/CALS/blob/d72b31f6067f3f934480bec1ac88007778af83bd/calibrate/utils/dist_helper.py#L102

===================================
https://github.com/sjtu-xai-lab/aog
===================================

Found 3 times
DataLoader(train_set, batch_size=batch_size, drop_last=True, sampler=sampler)
DataLoader(train_set, batch_size=batch_size, shuffle=shuffle_train, drop_last=True)
DataLoader(test_set, batch_size=batch_size, shuffle=False)
https://github.com/sjtu-xai-lab/aog/blob/bd17fb9a4912fef2f06b8ad04cad294018c8b410/src/datasets/tabular.py#L131
https://github.com/sjtu-xai-lab/aog/blob/bd17fb9a4912fef2f06b8ad04cad294018c8b410/src/datasets/tabular.py#L133
https://github.com/sjtu-xai-lab/aog/blob/bd17fb9a4912fef2f06b8ad04cad294018c8b410/src/datasets/tabular.py#L134

===================================================
https://github.com/JunyiZhu-AI/confidence_aware_PFL
===================================================

Found 8 times
DataLoader(dataset, batch_size=len(dataset), shuffle=True)
DataLoader(d, batch_size=batch_size, shuffle=True)
DataLoader(d, batch_size=500, shuffle=False)
DataLoader(dataset, batch_size=len(dataset), shuffle=True)
DataLoader(d, batch_size=batch_size, shuffle=True)
DataLoader(d, batch_size=500, shuffle=False)
DataLoader(
                TensorDataset(data, targets),
                batch_size=batch_size,
                shuffle=True
            )
DataLoader(TensorDataset(data, targets),
                                     batch_size=500,
                                     shuffle=False)
https://github.com/JunyiZhu-AI/confidence_aware_PFL/blob/5737ccb3dc1560af60327ddb1433f349aa9dda87/utils/load_cifar10.py#L28
https://github.com/JunyiZhu-AI/confidence_aware_PFL/blob/5737ccb3dc1560af60327ddb1433f349aa9dda87/utils/load_cifar10.py#L82
https://github.com/JunyiZhu-AI/confidence_aware_PFL/blob/5737ccb3dc1560af60327ddb1433f349aa9dda87/utils/load_cifar10.py#L85
https://github.com/JunyiZhu-AI/confidence_aware_PFL/blob/5737ccb3dc1560af60327ddb1433f349aa9dda87/utils/load_cifar100.py#L50
https://github.com/JunyiZhu-AI/confidence_aware_PFL/blob/5737ccb3dc1560af60327ddb1433f349aa9dda87/utils/load_cifar100.py#L98
https://github.com/JunyiZhu-AI/confidence_aware_PFL/blob/5737ccb3dc1560af60327ddb1433f349aa9dda87/utils/load_cifar100.py#L101
https://github.com/JunyiZhu-AI/confidence_aware_PFL/blob/5737ccb3dc1560af60327ddb1433f349aa9dda87/utils/load_sun397.py#L129
https://github.com/JunyiZhu-AI/confidence_aware_PFL/blob/5737ccb3dc1560af60327ddb1433f349aa9dda87/utils/load_sun397.py#L145

======================================================================================
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications
======================================================================================

Found 2 times
DataLoader(
            train_dataset, batch_size=batch_size, pin_memory=False, shuffle=shuffle, sampler=sampler, collate_fn=self.collate_fn,
        )
DataLoader(ds, batch_size=batch_size, shuffle=False, collate_fn=self.collate_fn)
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/dataloader.py#L556
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/dataloader.py#L559

================================
https://github.com/AlphaXia/PaPi
================================

Found 10 times
torch.utils.data.DataLoader(dataset=test_dataset, batch_size=args.batch_size*4, shuffle=False, num_workers=args.workers, \
                                              sampler=torch.utils.data.distributed.DistributedSampler(test_dataset, shuffle=False))
torch.utils.data.DataLoader(
        dataset=partial_training_dataset, 
        batch_size=args.batch_size, 
        shuffle=(train_sampler is None), 
        num_workers=args.workers,
        pin_memory=True,
        sampler=train_sampler,
        drop_last=True
    )
torch.utils.data.DataLoader(dataset=test_dataset, batch_size=args.batch_size*4, shuffle=False, \
                                              num_workers=args.workers, \
                                              sampler=torch.utils.data.distributed.DistributedSampler(test_dataset, shuffle=False))
torch.utils.data.DataLoader(
        dataset=partial_training_dataset, 
        batch_size=args.batch_size, 
        shuffle=(train_sampler is None), 
        num_workers=args.workers,
        pin_memory=True,
        sampler=train_sampler,
        drop_last=True
    )
torch.utils.data.DataLoader(
        dataset=test_dataset, batch_size=args.batch_size*4, \
        shuffle=False, num_workers=args.workers, \
        sampler=torch.utils.data.distributed.DistributedSampler(test_dataset, shuffle=False)
    )
torch.utils.data.DataLoader(
        dataset=partial_training_dataset, 
        batch_size=args.batch_size, 
        shuffle=(train_sampler is None), 
        num_workers=args.workers,
        pin_memory=True,
        sampler=train_sampler,
        drop_last=True
    )
torch.utils.data.DataLoader(dataset=test_dataset, batch_size=args.batch_size*4, shuffle=False, \
    num_workers=args.workers, sampler=torch.utils.data.distributed.DistributedSampler(test_dataset, shuffle=False))
torch.utils.data.DataLoader(
        dataset=partial_training_dataset, 
        batch_size=args.batch_size, 
        shuffle=(train_sampler is None), 
        num_workers=args.workers,
        pin_memory=True,
        sampler=train_sampler,
        drop_last=True
    )
torch.utils.data.DataLoader(dataset=test_dataset, batch_size=args.batch_size*4, shuffle=False, num_workers=args.workers, \
                                              sampler=torch.utils.data.distributed.DistributedSampler(test_dataset, shuffle=False))
torch.utils.data.DataLoader(
        dataset=partial_training_dataset, 
        batch_size=args.batch_size, 
        shuffle=(train_sampler is None), 
        num_workers=args.workers,
        pin_memory=True,
        sampler=train_sampler,
        drop_last=True
    )
https://github.com/AlphaXia/PaPi/blob/251f5df856b78acabf8e1843bd5797bbe0e646a5/utils/cifar10.py#L32
https://github.com/AlphaXia/PaPi/blob/251f5df856b78acabf8e1843bd5797bbe0e646a5/utils/cifar10.py#L59
https://github.com/AlphaXia/PaPi/blob/251f5df856b78acabf8e1843bd5797bbe0e646a5/utils/cifar100.py#L33
https://github.com/AlphaXia/PaPi/blob/251f5df856b78acabf8e1843bd5797bbe0e646a5/utils/cifar100.py#L64
https://github.com/AlphaXia/PaPi/blob/251f5df856b78acabf8e1843bd5797bbe0e646a5/utils/fmnist.py#L25
https://github.com/AlphaXia/PaPi/blob/251f5df856b78acabf8e1843bd5797bbe0e646a5/utils/fmnist.py#L56
https://github.com/AlphaXia/PaPi/blob/251f5df856b78acabf8e1843bd5797bbe0e646a5/utils/miniImagenet.py#L34
https://github.com/AlphaXia/PaPi/blob/251f5df856b78acabf8e1843bd5797bbe0e646a5/utils/miniImagenet.py#L57
https://github.com/AlphaXia/PaPi/blob/251f5df856b78acabf8e1843bd5797bbe0e646a5/utils/svhn.py#L25
https://github.com/AlphaXia/PaPi/blob/251f5df856b78acabf8e1843bd5797bbe0e646a5/utils/svhn.py#L51

=====================================
https://github.com/YutingHe-list/GVSL
=====================================

Found 7 times
DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
DataLoader(val_dataset, batch_size=batch_size)
DataLoader(test_dataset, batch_size=batch_size)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
DataLoader(val_dataset, batch_size=batch_size)
DataLoader(test_dataset, batch_size=batch_size)
https://github.com/YutingHe-list/GVSL/blob/77c89bafd71179908ce1816a5025ca0fb268a00c/PyTorch/Train_GVSL.py#L80
https://github.com/YutingHe-list/GVSL/blob/77c89bafd71179908ce1816a5025ca0fb268a00c/PyTorch/Downstream/WHS_CT_Seg_GVSL_finetune.py#L50
https://github.com/YutingHe-list/GVSL/blob/77c89bafd71179908ce1816a5025ca0fb268a00c/PyTorch/Downstream/WHS_CT_Seg_GVSL_finetune.py#L52
https://github.com/YutingHe-list/GVSL/blob/77c89bafd71179908ce1816a5025ca0fb268a00c/PyTorch/Downstream/WHS_CT_Seg_GVSL_finetune.py#L54
https://github.com/YutingHe-list/GVSL/blob/77c89bafd71179908ce1816a5025ca0fb268a00c/PyTorch/Downstream/WHS_CT_Seg_GVSL_linear.py#L50
https://github.com/YutingHe-list/GVSL/blob/77c89bafd71179908ce1816a5025ca0fb268a00c/PyTorch/Downstream/WHS_CT_Seg_GVSL_linear.py#L52
https://github.com/YutingHe-list/GVSL/blob/77c89bafd71179908ce1816a5025ca0fb268a00c/PyTorch/Downstream/WHS_CT_Seg_GVSL_linear.py#L54

=======================================
https://github.com/DeepMed-Lab-ECNU/BCP
=======================================

Found 11 times
DataLoader(db_train, batch_sampler=batch_sampler, num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False, num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler, num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False, num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler, num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_train, batch_sampler=batch_sampler, num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(trainset_lab_a, batch_size=batch_size, shuffle=False, num_workers=0, drop_last=True)
DataLoader(trainset_lab_b, batch_size=batch_size, shuffle=False, num_workers=0, drop_last=True)
DataLoader(trainset_unlab_a, batch_size=batch_size, shuffle=False, num_workers=0, drop_last=True)
DataLoader(trainset_unlab_b, batch_size=batch_size, shuffle=False, num_workers=0, drop_last=True)
DataLoader(testset, batch_size=1, shuffle=False, num_workers=0)
https://github.com/DeepMed-Lab-ECNU/BCP/blob/a925e3018b23255e65a62dd34ae9ac9fc18c0bc9/code/ACDC_BCP_train.py#L219
https://github.com/DeepMed-Lab-ECNU/BCP/blob/a925e3018b23255e65a62dd34ae9ac9fc18c0bc9/code/ACDC_BCP_train.py#L221
https://github.com/DeepMed-Lab-ECNU/BCP/blob/a925e3018b23255e65a62dd34ae9ac9fc18c0bc9/code/ACDC_BCP_train.py#L330
https://github.com/DeepMed-Lab-ECNU/BCP/blob/a925e3018b23255e65a62dd34ae9ac9fc18c0bc9/code/ACDC_BCP_train.py#L332
https://github.com/DeepMed-Lab-ECNU/BCP/blob/a925e3018b23255e65a62dd34ae9ac9fc18c0bc9/code/LA_BCP_train.py#L134
https://github.com/DeepMed-Lab-ECNU/BCP/blob/a925e3018b23255e65a62dd34ae9ac9fc18c0bc9/code/LA_BCP_train.py#L217
https://github.com/DeepMed-Lab-ECNU/BCP/blob/a925e3018b23255e65a62dd34ae9ac9fc18c0bc9/code/pancreas/dataloaders.py#L185
https://github.com/DeepMed-Lab-ECNU/BCP/blob/a925e3018b23255e65a62dd34ae9ac9fc18c0bc9/code/pancreas/dataloaders.py#L188
https://github.com/DeepMed-Lab-ECNU/BCP/blob/a925e3018b23255e65a62dd34ae9ac9fc18c0bc9/code/pancreas/dataloaders.py#L191
https://github.com/DeepMed-Lab-ECNU/BCP/blob/a925e3018b23255e65a62dd34ae9ac9fc18c0bc9/code/pancreas/dataloaders.py#L194
https://github.com/DeepMed-Lab-ECNU/BCP/blob/a925e3018b23255e65a62dd34ae9ac9fc18c0bc9/code/pancreas/dataloaders.py#L197

============================================
https://github.com/DeepMed-Lab-ECNU/MagicNet
============================================

Found 2 times
DataLoader(db_train, batch_sampler=batch_sampler, num_workers=4, pin_memory=True,
                             worker_init_fn=worker_init_fn)
DataLoader(db_train, batch_sampler=batch_sampler, num_workers=4, pin_memory=True,
                             worker_init_fn=worker_init_fn)
https://github.com/DeepMed-Lab-ECNU/MagicNet/blob/8dfc145d6c90e9708ae7b324f77e6945b425ac7c/code/train_main_btcv.py#L143
https://github.com/DeepMed-Lab-ECNU/MagicNet/blob/8dfc145d6c90e9708ae7b324f77e6945b425ac7c/code/train_main_mact.py#L145

=====================================
https://github.com/mahmoodlab/MI-Zero
=====================================

Found 2 times
DataLoader(dataset, shuffle=False, **dataloader_args)
DataLoader(dataset, batch_size=1, shuffle=False, num_workers=args.workers, pin_memory=True)
https://github.com/mahmoodlab/MI-Zero/blob/047922f2e11b9a2992b12d1d3b6375db7db1e8fb/src/extract_embeddings.py#L171
https://github.com/mahmoodlab/MI-Zero/blob/047922f2e11b9a2992b12d1d3b6375db7db1e8fb/src/slidelevel_zeroshot_multiprompt.py#L327

==================================
https://github.com/DeepDoNet/DoNet
==================================

Found 5 times
torch.utils.data.DataLoader(
            dataset_labeled,
            sampler=sampler_labeled,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=None,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
            dataset_unlabeled,
            sampler=sampler_unlabeled,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=None,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
            dataset,
            sampler=sampler,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=None,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=batch_sampler,
            collate_fn=trivial_batch_collator,
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
        dataset,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/DeepDoNet/DoNet/blob/6ffb860a4686348ee0221a07c9d84e7884d20744/detectron2/data/build.py#L331
https://github.com/DeepDoNet/DoNet/blob/6ffb860a4686348ee0221a07c9d84e7884d20744/detectron2/data/build.py#L339
https://github.com/DeepDoNet/DoNet/blob/6ffb860a4686348ee0221a07c9d84e7884d20744/detectron2/data/build.py#L372
https://github.com/DeepDoNet/DoNet/blob/6ffb860a4686348ee0221a07c9d84e7884d20744/detectron2/data/build.py#L386
https://github.com/DeepDoNet/DoNet/blob/6ffb860a4686348ee0221a07c9d84e7884d20744/detectron2/data/build.py#L434

====================================
https://github.com/tiangexiang/SQUID
====================================

Found 15 times
torch.utils.data.DataLoader(CONFIG.train_dataset, batch_size=1, shuffle=False, num_workers=0, drop_last=False)
torch.utils.data.DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True, num_workers=8, drop_last=False)
torch.utils.data.DataLoader(self.val_dataset, batch_size=1, shuffle=False, num_workers=8, drop_last=False)
torch.utils.data.DataLoader(self.test_dataset, batch_size=1, shuffle=False, num_workers=8, drop_last=False)
torch.utils.data.DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(self.val_dataset, batch_size=1, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(self.test_dataset, batch_size=1, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True, num_workers=0, drop_last=False)
torch.utils.data.DataLoader(self.val_dataset, batch_size=1, shuffle=False, num_workers=0, drop_last=False)
torch.utils.data.DataLoader(self.test_dataset, batch_size=1, shuffle=False, num_workers=0, drop_last=False)
torch.utils.data.DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True, num_workers=0, drop_last=False)
torch.utils.data.DataLoader(self.val_dataset, batch_size=1, shuffle=False, num_workers=0, drop_last=False)
torch.utils.data.DataLoader(self.test_dataset, batch_size=1, shuffle=False, num_workers=0, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=0)
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/alert.py#L38
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/configs/chexpert_best.py#L65
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/configs/chexpert_best.py#L68
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/configs/chexpert_best.py#L71
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/configs/digit_best.py#L67
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/configs/digit_best.py#L70
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/configs/digit_best.py#L73
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/configs/zhang_best.py#L57
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/configs/zhang_best.py#L60
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/configs/zhang_best.py#L63
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/configs/zhang_best2.py#L57
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/configs/zhang_best2.py#L60
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/configs/zhang_best2.py#L63
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/dataloader/dataloader_chexpert.py#L76
https://github.com/tiangexiang/SQUID/blob/855d1bbe0f7026559ed9860229c40650a4024aaf/dataloader/dataloader_zhang.py#L72

====================================
https://github.com/chunmeifeng/FedPR
====================================

Found 3 times
DataLoader(dataset, batch_size=args.SOLVER.BATCH_SIZE, sampler=sampler,
                              num_workers=args.SOLVER.NUM_WORKERS, pin_memory=False, drop_last=False)
DataLoader(dataset, batch_size=args.SOLVER.BATCH_SIZE, sampler=sampler,
                                         num_workers=args.SOLVER.NUM_WORKERS, pin_memory=False, drop_last=False)
DataLoader(dataset, batch_size=args.SOLVER.BATCH_SIZE,  sampler=sampler,
                                         num_workers=args.SOLVER.NUM_WORKERS, pin_memory=False, drop_last=False)
https://github.com/chunmeifeng/FedPR/blob/f5c3e67dcc4f23148260c208c15f1aba85a18b60/data/__init__.py#L21
https://github.com/chunmeifeng/FedPR/blob/f5c3e67dcc4f23148260c208c15f1aba85a18b60/data/__init__.py#L85
https://github.com/chunmeifeng/FedPR/blob/f5c3e67dcc4f23148260c208c15f1aba85a18b60/data/__init__.py#L89

===============================
https://github.com/chehx/MKCNet
===============================

Found 3 times
DataLoader(train_dataset, batch_size = batch_size, shuffle=True, num_workers= num_worker)
DataLoader(val_dataset, batch_size = batch_size, shuffle=False, num_workers=num_worker)
DataLoader(test_dataset, batch_size = batch_size, shuffle=False, num_workers=num_worker)
https://github.com/chehx/MKCNet/blob/e46ba3d2f35127cc426e6f66d453bcdd9b2c8f88/dataset/dataset_manager.py#L16
https://github.com/chehx/MKCNet/blob/e46ba3d2f35127cc426e6f66d453bcdd9b2c8f88/dataset/dataset_manager.py#L20
https://github.com/chehx/MKCNet/blob/e46ba3d2f35127cc426e6f66d453bcdd9b2c8f88/dataset/dataset_manager.py#L23

===================================
https://github.com/alexander-g/INBD
===================================

Found 1 times
torch.utils.data.DataLoader(self, batch_size, shuffle, collate_fn=getattr(self, 'collate_fn', None),
                                           num_workers=num_workers, pin_memory=True,
                                           worker_init_fn=lambda x: np.random.seed(torch.randint(0,1000,(1,))[0].item()+x) )
https://github.com/alexander-g/INBD/blob/592176e4ef117681f98b29d137a40d00803e2544/src/datasets.py#L99

===============================
https://github.com/mlii0117/DCL
===============================

Found 1 times
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
https://github.com/mlii0117/DCL/blob/199033d7daf07a9c3e07f50cab485354bd390994/blip_original/__init__.py#L55

==================================
https://github.com/zjc062/mind-vis
==================================

Found 6 times
DataLoader(dataset_pretrain, batch_size=config.batch_size, sampler=sampler, 
                shuffle=(sampler is None), pin_memory=True)
DataLoader(dataset, batch_size=1, shuffle=True)
DataLoader(test_set, batch_size=config.batch_size, sampler=sampler)
DataLoader(dataset, batch_size=1, shuffle=True)
DataLoader(dataset, batch_size=bs1, shuffle=True)
DataLoader(test_dataset, batch_size=len(test_dataset), shuffle=False)
https://github.com/zjc062/mind-vis/blob/08d53868fe7471f01dddc560b8e877ba4375d229/code/stageA1_mbm_pretrain.py#L129
https://github.com/zjc062/mind-vis/blob/08d53868fe7471f01dddc560b8e877ba4375d229/code/stageA1_mbm_pretrain.py#L190
https://github.com/zjc062/mind-vis/blob/08d53868fe7471f01dddc560b8e877ba4375d229/code/stageA2_mbm_finetune.py#L137
https://github.com/zjc062/mind-vis/blob/08d53868fe7471f01dddc560b8e877ba4375d229/code/stageA2_mbm_finetune.py#L175
https://github.com/zjc062/mind-vis/blob/08d53868fe7471f01dddc560b8e877ba4375d229/code/dc_ldm/ldm_for_fmri.py#L94
https://github.com/zjc062/mind-vis/blob/08d53868fe7471f01dddc560b8e877ba4375d229/code/dc_ldm/ldm_for_fmri.py#L95

=============================================
https://github.com/huiqu18/WeaklySegPointAnno
=============================================

Found 1 times
DataLoader(train_set, batch_size=opt.train['batch_size'], shuffle=True,
                              num_workers=opt.train['workers'])
https://github.com/huiqu18/WeaklySegPointAnno/blob/eaa35b06dec10c3c43a420bf582eceaa764853fb/train.py#L65

===========================================================================================
https://github.com/aimansnigdha/Ambiguous-Medical-Image-Segmentation-using-Diffusion-Models
===========================================================================================

Found 6 times
th.utils.data.DataLoader(
        ds,
        batch_size=1,
        sampler = sampler,
        shuffle=False)
th.utils.data.DataLoader(
        ds,
        batch_size=args.batch_size,
        shuffle=True)
th.utils.data.DataLoader(
        ds,
        batch_size=1,
        sampler = sampler,
        shuffle=False)
th.utils.data.DataLoader(
        ds,
        batch_size=1,
        shuffle=False)
th.utils.data.DataLoader(
        ds,
        batch_size=args.batch_size,
        sampler = sampler)
th.utils.data.DataLoader(
        ds,
        batch_size=args.batch_size,
        shuffle=True)
https://github.com/aimansnigdha/Ambiguous-Medical-Image-Segmentation-using-Diffusion-Models/blob/a9677afe4eedb163db478cd01ea8228161448b33/scripts/segmentation_sample.py#L89
https://github.com/aimansnigdha/Ambiguous-Medical-Image-Segmentation-using-Diffusion-Models/blob/a9677afe4eedb163db478cd01ea8228161448b33/scripts/segmentation_train.py#L85
https://github.com/aimansnigdha/Ambiguous-Medical-Image-Segmentation-using-Diffusion-Models/blob/a9677afe4eedb163db478cd01ea8228161448b33/scripts/.ipynb_checkpoints/segmentation_sample-checkpoint.py#L89
https://github.com/aimansnigdha/Ambiguous-Medical-Image-Segmentation-using-Diffusion-Models/blob/a9677afe4eedb163db478cd01ea8228161448b33/scripts/.ipynb_checkpoints/segmentation_sampleqaun-checkpoint.py#L118
https://github.com/aimansnigdha/Ambiguous-Medical-Image-Segmentation-using-Diffusion-Models/blob/a9677afe4eedb163db478cd01ea8228161448b33/scripts/.ipynb_checkpoints/segmentation_train-checkpoint.py#L99
https://github.com/aimansnigdha/Ambiguous-Medical-Image-Segmentation-using-Diffusion-Models/blob/a9677afe4eedb163db478cd01ea8228161448b33/scripts/.ipynb_checkpoints/segmentation_train-checkpoint.py#L175

=================================================
https://github.com/paulhager/MMCL-Tabular-Imaging
=================================================

Found 8 times
DataLoader(
    train_dataset,
    num_workers=hparams.num_workers, batch_size=hparams.batch_size, sampler=sampler,
    pin_memory=True, shuffle=False, drop_last=drop, persistent_workers=True)
DataLoader(
    val_dataset,
    num_workers=hparams.num_workers, batch_size=512,
    pin_memory=True, shuffle=False, persistent_workers=True)
DataLoader(
      test_dataset,
      num_workers=hparams.num_workers, batch_size=hparams.batch_size,  
      pin_memory=True, shuffle=False, drop_last=drop, persistent_workers=True)
DataLoader(
    train_dataset,
    num_workers=hparams.num_workers, batch_size=hparams.batch_size,  
    pin_memory=True, shuffle=False, persistent_workers=True)
DataLoader(
    val_dataset,
    num_workers=hparams.num_workers, batch_size=hparams.batch_size,  
    pin_memory=True, shuffle=False, persistent_workers=True)
DataLoader(
    train_dataset,
    num_workers=hparams.num_workers, batch_size=hparams.batch_size,  
    pin_memory=True, shuffle=True, persistent_workers=True)
DataLoader(
    val_dataset,
    num_workers=hparams.num_workers, batch_size=hparams.batch_size,  
    pin_memory=True, shuffle=False, persistent_workers=True)
DataLoader(
    test_dataset,
    num_workers=hparams.num_workers, batch_size=hparams.batch_size,  
    pin_memory=True, shuffle=False, drop_last=drop, persistent_workers=True)
https://github.com/paulhager/MMCL-Tabular-Imaging/blob/97d637c354752f6c6be8559bfcabfc665d2e1ee5/trainers/evaluate.py#L61
https://github.com/paulhager/MMCL-Tabular-Imaging/blob/97d637c354752f6c6be8559bfcabfc665d2e1ee5/trainers/evaluate.py#L66
https://github.com/paulhager/MMCL-Tabular-Imaging/blob/97d637c354752f6c6be8559bfcabfc665d2e1ee5/trainers/evaluate.py#L111
https://github.com/paulhager/MMCL-Tabular-Imaging/blob/97d637c354752f6c6be8559bfcabfc665d2e1ee5/trainers/generate_embeddings.py#L34
https://github.com/paulhager/MMCL-Tabular-Imaging/blob/97d637c354752f6c6be8559bfcabfc665d2e1ee5/trainers/generate_embeddings.py#L39
https://github.com/paulhager/MMCL-Tabular-Imaging/blob/97d637c354752f6c6be8559bfcabfc665d2e1ee5/trainers/pretrain.py#L96
https://github.com/paulhager/MMCL-Tabular-Imaging/blob/97d637c354752f6c6be8559bfcabfc665d2e1ee5/trainers/pretrain.py#L101
https://github.com/paulhager/MMCL-Tabular-Imaging/blob/97d637c354752f6c6be8559bfcabfc665d2e1ee5/trainers/test.py#L31

===============================
https://github.com/uncbiag/ICON
===============================

Found 9 times
torch.utils.data.DataLoader(
        torchvision.datasets.MNIST(
            "./files/",
            transform=torchvision.transforms.ToTensor(),
            download=True,
            train=(split == "train"),
        ),
        batch_size=500,
    )
torch.utils.data.DataLoader(
            ds,
            batch_size=128,
            shuffle=True,
        )
torch.utils.data.DataLoader(
            ds,
            batch_size=batch_size,
            shuffle=True,
        )
torch.utils.data.DataLoader(
            ds,
            batch_size=batch_size,
            shuffle=True,
        )
torch.utils.data.DataLoader(
        ds1,
        batch_size=batch_size,
        shuffle=False,
    )
torch.utils.data.DataLoader(
        ds2,
        batch_size=batch_size,
        shuffle=False,
    )
torch.utils.data.DataLoader(
        ds,
        batch_size=128,
        shuffle=True,
    )
torch.utils.data.DataLoader(
            torch.utils.data.TensorDataset(
                torch.stack(
                    [(torch.cat(d, 0)+1)*torch.cat(m, 0) for d,m in zip(img, mask)],
                    0
                ),
                torch.stack(
                    [torch.cat(d, 0) for d in mask],
                    0
                )
            ),
            batch_size = batch_size["train"],
            shuffle = True,
            drop_last = True
        )
torch.utils.data.DataLoader(
            torch.utils.data.TensorDataset(
                torch.stack(
                    [(torch.cat(d, 0)+1)*torch.cat(m, 0) for d,m in zip(img, mask)],
                    0
                ),
                torch.stack(
                    [torch.cat(d, 0) for d in mask],
                    0
                )
            ),
            batch_size = batch_size["val"],
            shuffle = False,
            drop_last = True
        )
https://github.com/uncbiag/ICON/blob/f23a6983011d1b135b435c21ea2ee9a3cf14871c/src/icon_registration/data.py#L13
https://github.com/uncbiag/ICON/blob/f23a6983011d1b135b435c21ea2ee9a3cf14871c/src/icon_registration/data.py#L31
https://github.com/uncbiag/ICON/blob/f23a6983011d1b135b435c21ea2ee9a3cf14871c/src/icon_registration/data.py#L51
https://github.com/uncbiag/ICON/blob/f23a6983011d1b135b435c21ea2ee9a3cf14871c/src/icon_registration/data.py#L88
https://github.com/uncbiag/ICON/blob/f23a6983011d1b135b435c21ea2ee9a3cf14871c/src/icon_registration/data.py#L189
https://github.com/uncbiag/ICON/blob/f23a6983011d1b135b435c21ea2ee9a3cf14871c/src/icon_registration/data.py#L207
https://github.com/uncbiag/ICON/blob/f23a6983011d1b135b435c21ea2ee9a3cf14871c/src/icon_registration/data.py#L236
https://github.com/uncbiag/ICON/blob/f23a6983011d1b135b435c21ea2ee9a3cf14871c/training_scripts/cvpr_clean/ablations/compare_resolutions.py#L86
https://github.com/uncbiag/ICON/blob/f23a6983011d1b135b435c21ea2ee9a3cf14871c/training_scripts/cvpr_clean/ablations/compare_resolutions.py#L103

=================================
https://github.com/NVIDIA/NVFlare
=================================

Found 130 times
torch.utils.data.DataLoader(
                self.train_dataset, batch_size=self.batch_size, shuffle=True, num_workers=self.num_workers
            )
torch.utils.data.DataLoader(
                self.valid_dataset, batch_size=self.batch_size, shuffle=False, num_workers=self.num_workers
            )
torch.utils.data.DataLoader(
                self.train_dataset, batch_size=self.batch_size, shuffle=True, num_workers=self.num_workers
            )
torch.utils.data.DataLoader(
                self.valid_dataset, batch_size=self.batch_size, shuffle=False, num_workers=self.num_workers
            )
DataLoader(train_dataset, num_workers=2, batch_size=self.bs, shuffle=True)
DataLoader(valid_dataset, num_workers=2, batch_size=self.bs, shuffle=False)
DataLoader(test_dataset, num_workers=4, batch_size=64, shuffle=False)
DataLoader(test_data, batch_size=4, shuffle=False)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=2)
DataLoader(self.cifar_train, batch_size=self.batch_size)
DataLoader(self.cifar_val, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_train, batch_size=self.batch_size)
DataLoader(self.cifar_val, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_train, batch_size=self.batch_size)
DataLoader(self.cifar_val, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_train, batch_size=self.batch_size)
DataLoader(self.cifar_val, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(
            self.trainset, batch_size=self.batch_size, shuffle=True, num_workers=self.num_workers
        )
torch.utils.data.DataLoader(
            self.testset, batch_size=self.batch_size, shuffle=False, num_workers=self.num_workers
        )
torch.utils.data.DataLoader(
            self.trainset, batch_size=self.batch_size, shuffle=True, num_workers=self.num_workers
        )
torch.utils.data.DataLoader(
            self.testset, batch_size=self.batch_size, shuffle=False, num_workers=self.num_workers
        )
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(trainset, batch_size=self.batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=self.batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(
                self.train_dataset, batch_size=self.batch_size, shuffle=True
            )
torch.utils.data.DataLoader(
                self.val_dataset_for_search, batch_size=self.batch_size, shuffle=False
            )
torch.utils.data.DataLoader(
                self.valid_dataset, batch_size=self.batch_size, shuffle=False
            )
torch.utils.data.DataLoader(feature_dataset, batch_size=self.batch_size, shuffle=False)
torch.utils.data.DataLoader(
            local_train_dataset, batch_size=self.batch_size, shuffle=True
        )
torch.utils.data.DataLoader(feature_dataset, batch_size=self.batch_size, shuffle=False)
torch.utils.data.DataLoader(feature_dataset, batch_size=self.batch_size, shuffle=False)
torch.utils.data.DataLoader(
            self.train_dataset, batch_size=self.batch_size, shuffle=True
        )
torch.utils.data.DataLoader(
            self.train_dataset, batch_size=self.batch_size, shuffle=False
        )
torch.utils.data.DataLoader(
            self.valid_dataset, batch_size=self.batch_size, shuffle=False
        )
torch.utils.data.DataLoader(
                self.train_dataset,
                batch_size=1,
                shuffle=False,
            )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
        )
torch.utils.data.DataLoader(
            self.valid_dataset,
            batch_size=self.batch_size,
            shuffle=False,
        )
torch.utils.data.DataLoader(
                self.test_dataset,
                batch_size=self.batch_size,
                shuffle=False,
            )
DataLoader(test_data, batch_size=4, shuffle=False)
DataLoader(self.test_data, batch_size=4, shuffle=False)
DataLoader(self.test_data, batch_size=4, shuffle=False)
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/cifar10/pt/learners/cifar10_learner.py#L189
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/cifar10/pt/learners/cifar10_learner.py#L200
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/cifar10/pt/learners/cifar10_model_learner.py#L178
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/cifar10/pt/learners/cifar10_model_learner.py#L189
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/nlp-ner/custom/learners/nlp_learner.py#L156
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/nlp-ner/custom/learners/nlp_learner.py#L157
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/nlp-ner/utils/ner_model_test.py#L70
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/hello-pt/jobs/hello-pt/app/custom/cifar10validator.py#L49
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_ddp_fl.py#L68
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_ddp_fl.py#L71
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_ddp_original.py#L65
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_ddp_original.py#L68
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_fl.py#L42
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_fl.py#L45
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_fl.py#L59
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_fl.py#L62
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_fl.py#L65
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_fl.py#L68
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_original.py#L56
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_original.py#L59
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_original.py#L62
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_original.py#L65
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_fl.py#L59
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_fl.py#L62
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_fl.py#L65
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_fl.py#L68
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_original.py#L56
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_original.py#L59
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_original.py#L62
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_original.py#L65
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_original.py#L36
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_original.py#L39
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_structured_fl.py#L39
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_structured_fl.py#L42
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_structured_original.py#L36
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_structured_original.py#L39
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/dl/train.py#L48
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/dl/train.py#L51
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/executor.py#L108
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/executor.py#L116
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/model_learner.py#L83
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/model_learner.py#L90
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/train.py#L57
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/train.py#L59
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/train_with_mlflow.py#L58
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/train_with_mlflow.py#L60
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/stats/image_statistics.py#L74
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/stats/image_statistics.py#L75
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/auto-fed-rl/src/autofedrl/autofedrl_cifar10_learner.py#L130
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/auto-fed-rl/src/autofedrl/autofedrl_cifar10_learner.py#L141
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/auto-fed-rl/src/autofedrl/autofedrl_cifar10_learner.py#L156
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L246
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L291
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L351
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L407
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L484
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L488
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L492
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/quantifying-data-leakage/src/nvflare_gradinv/filters/rdlv_filter.py#L157
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/quantifying-data-leakage/src/nvflare_gradinv/learners/cxr_learner.py#L263
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/quantifying-data-leakage/src/nvflare_gradinv/learners/cxr_learner.py#L269
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/quantifying-data-leakage/src/nvflare_gradinv/learners/cxr_learner.py#L282
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/tests/integration_test/data/apps/pt_init_client/app/custom/cifar10validator.py#L49
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/tests/integration_test/data/apps/pt_use_name/app/custom/cifar10validator.py#L49
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/tests/integration_test/data/apps/pt_use_path/app/custom/cifar10validator.py#L49

=====================================
https://github.com/HKU-MedAI/WSI-HGNN
=====================================

Found 14 times
torch.utils.data.DataLoader(dataset=dataset_train, batch_size=batch_size, num_workers=4, collate_fn=collate, shuffle=True, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(dataset=dataset_val, batch_size=batch_size, num_workers=4, collate_fn=collate, shuffle=False, pin_memory=True)
torch.utils.data.DataLoader(dataset=dataset_test, batch_size=1, num_workers=4, collate_fn=collate, shuffle=False, pin_memory=True)
torch.utils.data.DataLoader(dataset=dataset_train, batch_size=batch_size, num_workers=4, collate_fn=collate, shuffle=True, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(dataset=dataset_val, batch_size=batch_size, num_workers=4, collate_fn=collate, shuffle=False, pin_memory=True)
torch.utils.data.DataLoader(dataset=dataset_test, batch_size=1, num_workers=4, collate_fn=collate, shuffle=False, pin_memory=True)
torch.utils.data.DataLoader(dataset=dataset_train, batch_size=batch_size, num_workers=4, collate_fn=collate, shuffle=True, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(dataset=dataset_val, batch_size=batch_size, num_workers=4, collate_fn=collate, shuffle=False, pin_memory=True)
torch.utils.data.DataLoader(dataset=dataset_test, batch_size=1, num_workers=4, collate_fn=collate, shuffle=False, pin_memory=True)
DataLoader(transformed_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers, drop_last=False)
DataLoader(train_dataset, batch_size=self.batch_size, sampler=train_sampler,
                                  num_workers=self.num_workers, drop_last=True, shuffle=False, pin_memory=True)
DataLoader(train_dataset, batch_size=self.batch_size, sampler=valid_sampler,
                                  num_workers=self.num_workers, drop_last=True)
torch.utils.data.DataLoader(test_imagedataset, batch_size=batch_size, shuffle=False, num_workers=num_workers)
data.DataLoader(
            patch_dataset,
            num_workers=0,
            batch_size=8,
            shuffle=False
        )
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/GTNMIL/main_kfold.py#L89
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/GTNMIL/main_kfold.py#L93
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/GTNMIL/main_kfold.py#L97
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/GTNMIL/main_kfold_staging.py#L108
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/GTNMIL/main_kfold_staging.py#L112
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/GTNMIL/main_kfold_staging.py#L116
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/GTNMIL/main_kfold_typing.py#L89
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/GTNMIL/main_kfold_typing.py#L93
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/GTNMIL/main_kfold_typing.py#L97
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/GTNMIL/feature_extractor/build_graphs.py#L103
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/GTNMIL/feature_extractor/data_aug/dataset_wrapper.py#L74
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/GTNMIL/feature_extractor/data_aug/dataset_wrapper.py#L76
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/baselines/H2MIL/code/WSI_processing/KimiaNet_PyTorch_Feature_Extraction.py#L102
https://github.com/HKU-MedAI/WSI-HGNN/blob/01c3be32536d2053f86d1fa3324c0e7a0131eccf/construct_graph/graph_constructor.py#L230

======================================
https://github.com/Correr-Zhou/RepMode
======================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=if_shuffle,
        num_workers=opts.num_workers,
        pin_memory=True,
        persistent_workers=True,
    )
https://github.com/Correr-Zhou/RepMode/blob/ae4e04559223f02c9d8ce6367afaee35d0fbed00/fnet/functions.py#L49

============================================
https://github.com/invoker-LL/WSI-finetuning
============================================

Found 7 times
DataLoader(dataset=dataset, batch_size=batch_size, **kwargs, collate_fn=collate_features)
DataLoader(dataset=dataset, batch_size=args.topk_num, **kwargs, collate_fn=collate_features)
DataLoader(dataset, batch_size=batch_size, sampler = sampler.SequentialSampler(dataset), collate_fn = collate_MIL, **kwargs)
DataLoader(split_dataset, batch_size=1, sampler = WeightedRandomSampler(weights, len(weights)), collate_fn = collate_MIL, **kwargs)
DataLoader(split_dataset, batch_size=1, sampler = RandomSampler(split_dataset), collate_fn = collate_MIL, **kwargs)
DataLoader(split_dataset, batch_size=1, sampler = SequentialSampler(split_dataset), collate_fn = collate_MIL, **kwargs)
DataLoader(split_dataset, batch_size=1, sampler = SubsetSequentialSampler(ids), collate_fn = collate_MIL, **kwargs )
https://github.com/invoker-LL/WSI-finetuning/blob/e1c6972a3a1fa47b2e3497fb042cbc8a6372431d/extract_features_fp.py#L41
https://github.com/invoker-LL/WSI-finetuning/blob/e1c6972a3a1fa47b2e3497fb042cbc8a6372431d/extract_topK_ROIs.py#L92
https://github.com/invoker-LL/WSI-finetuning/blob/e1c6972a3a1fa47b2e3497fb042cbc8a6372431d/utils/utils.py#L48
https://github.com/invoker-LL/WSI-finetuning/blob/e1c6972a3a1fa47b2e3497fb042cbc8a6372431d/utils/utils.py#L60
https://github.com/invoker-LL/WSI-finetuning/blob/e1c6972a3a1fa47b2e3497fb042cbc8a6372431d/utils/utils.py#L62
https://github.com/invoker-LL/WSI-finetuning/blob/e1c6972a3a1fa47b2e3497fb042cbc8a6372431d/utils/utils.py#L64
https://github.com/invoker-LL/WSI-finetuning/blob/e1c6972a3a1fa47b2e3497fb042cbc8a6372431d/utils/utils.py#L68

==================================
https://github.com/Zyun-Y/DconnNet
==================================

Found 2 times
torch.utils.data.DataLoader(dataset=trainset, batch_size=args.batch_size, shuffle=True, pin_memory=True, num_workers=6)
torch.utils.data.DataLoader(dataset=validset, batch_size=1, shuffle=False, pin_memory=True, num_workers=6)
https://github.com/Zyun-Y/DconnNet/blob/8b2e74ae34781773469e1c6bee5b4c529b34044f/train.py#L131
https://github.com/Zyun-Y/DconnNet/blob/8b2e74ae34781773469e1c6bee5b4c529b34044f/train.py#L132

==================================
https://github.com/liuxy1103/EMADS
==================================

Found 5 times
DataLoader(trainset,batch_size=batch_size,shuffle=True)
DataLoader(valset,batch_size=1,shuffle=False)
DataLoader(valset, batch_size=1,shuffle=False)
DataLoader(trainset,batch_size=batch_size,shuffle=True)
DataLoader(valset,batch_size=1,shuffle=False)
https://github.com/liuxy1103/EMADS/blob/8016b477a1f2ec8b0deb66aa80cc843638392d3c/Full_Brain_Soma_Segmentation_Pipeline/full_data_process2.0_seg/Localization/train.py#L61
https://github.com/liuxy1103/EMADS/blob/8016b477a1f2ec8b0deb66aa80cc843638392d3c/Full_Brain_Soma_Segmentation_Pipeline/full_data_process2.0_seg/Localization/train.py#L62
https://github.com/liuxy1103/EMADS/blob/8016b477a1f2ec8b0deb66aa80cc843638392d3c/Full_Brain_Soma_Segmentation_Pipeline/full_data_process2.0_seg/Segmentation/predict.py#L47
https://github.com/liuxy1103/EMADS/blob/8016b477a1f2ec8b0deb66aa80cc843638392d3c/Full_Brain_Soma_Segmentation_Pipeline/full_data_process2.0_seg/Segmentation/train.py#L50
https://github.com/liuxy1103/EMADS/blob/8016b477a1f2ec8b0deb66aa80cc843638392d3c/Full_Brain_Soma_Segmentation_Pipeline/full_data_process2.0_seg/Segmentation/train.py#L51

====================================
https://github.com/HengCai-NJU/DeSCO
====================================

Found 4 times
DataLoader(db_train1, batch_sampler=batch_sampler, num_workers=4, pin_memory=True,
                              worker_init_fn=worker_init_fn)
DataLoader(db_train2, batch_sampler=batch_sampler, num_workers=4, pin_memory=True,
                              worker_init_fn=worker_init_fn)
DataLoader(db_train1, batch_sampler=batch_sampler, num_workers=4, pin_memory=True,
                                          worker_init_fn=worker_init_fn)
DataLoader(db_train2, batch_sampler=batch_sampler, num_workers=4, pin_memory=True,
                                          worker_init_fn=worker_init_fn)
https://github.com/HengCai-NJU/DeSCO/blob/d3f08527e11464867eac5ecba2fa8f36b3b540f5/code/train_desco.py#L172
https://github.com/HengCai-NJU/DeSCO/blob/d3f08527e11464867eac5ecba2fa8f36b3b540f5/code/train_desco.py#L174
https://github.com/HengCai-NJU/DeSCO/blob/d3f08527e11464867eac5ecba2fa8f36b3b540f5/code/train_desco.py#L408
https://github.com/HengCai-NJU/DeSCO/blob/d3f08527e11464867eac5ecba2fa8f36b3b540f5/code/train_desco.py#L410

==================================
https://github.com/dair-iitd/DeGPR
==================================

Found 38 times
torch.utils.data.DataLoader(dataset_train, batch_size=batch_size, shuffle = False, sampler = sampler, num_workers=24)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, shuffle= True)
torch.utils.data.DataLoader(valid_data, batch_size=batch_size, shuffle = False)
torch.utils.data.DataLoader(test_data, batch_size=batch_size, shuffle = False)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, shuffle= True)
torch.utils.data.DataLoader(valid_data, batch_size=batch_size, shuffle = False)
torch.utils.data.DataLoader(test_data, batch_size=batch_size, shuffle = False)
torch.utils.data.DataLoader(dataset_train, batch_size=config.batch_size, shuffle = False, sampler = sampler, num_workers=24)
torch.utils.data.DataLoader(dataset_train, batch_size=config.batch_size, shuffle = False, sampler = sampler, num_workers=24)
torch.utils.data.DataLoader(train_data, batch_size=config.batch_size, shuffle= True)
torch.utils.data.DataLoader(valid_data, batch_size=config.batch_size, shuffle = False)
torch.utils.data.DataLoader(train_data, batch_size=config.batch_size, shuffle= True)
torch.utils.data.DataLoader(valid_data, batch_size=config.batch_size, shuffle = False)
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=sampler is None and is_training,
        num_workers=num_workers,
        sampler=sampler,
        pin_memory=pin_mem,
        collate_fn=collate_fn,
    )
torch.utils.data.DataLoader(
        dataset_train, batch_size=opt.batch_size, shuffle=True, num_workers=4,
        collate_fn=utils.collate_fn)
torch.utils.data.DataLoader(
        dataset_val, batch_size=opt.batch_size, shuffle=False, num_workers=4,
        collate_fn=utils.collate_fn)
DataLoader(dataset, batch_size=12)
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        sampler=train_sampler,
        num_workers=args.workers,
        pin_memory=True,
        collate_fn=collate_fn,
    )
torch.utils.data.DataLoader(
        dataset_test, batch_size=args.batch_size, sampler=test_sampler, num_workers=args.workers, pin_memory=True
    )
torch.utils.data.DataLoader(
        dataset, batch_size=args.batch_size, sampler=train_sampler, num_workers=args.workers, pin_memory=True
    )
torch.utils.data.DataLoader(
        dataset_test, batch_size=args.eval_batch_size, sampler=test_sampler, num_workers=args.workers, pin_memory=True
    )
torch.utils.data.DataLoader(
            ds, batch_size=args.batch_size, shuffle=False, num_workers=args.workers, pin_memory=True
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=1,
        sampler=sampler,
        num_workers=14,  # you might want to increase it for faster processing
        collate_fn=lambda x: x[0],
    )
torch.utils.data.DataLoader(
        dataset, batch_sampler=train_batch_sampler, num_workers=args.workers, collate_fn=utils.collate_fn
    )
torch.utils.data.DataLoader(
        dataset_test, batch_size=1, sampler=test_sampler, num_workers=args.workers, collate_fn=utils.collate_fn
    )
torch.utils.data.DataLoader(
        val_dataset,
        sampler=sampler,
        batch_size=batch_size,
        pin_memory=True,
        num_workers=args.workers,
    )
torch.utils.data.DataLoader(
        train_dataset,
        sampler=sampler,
        batch_size=args.batch_size,
        pin_memory=True,
        num_workers=args.workers,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        sampler=train_sampler,
        num_workers=args.workers,
        collate_fn=utils.collate_fn,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_test, batch_size=1, sampler=test_sampler, num_workers=args.workers, collate_fn=utils.collate_fn
    )
DataLoader(dataset, batch_size=p * k, sampler=sampler)
DataLoader(
        train_dataset, batch_size=batch_size, sampler=PKSampler(targets, p, k), num_workers=args.workers
    )
DataLoader(test_dataset, batch_size=args.eval_batch_size, shuffle=False, num_workers=args.workers)
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        sampler=train_sampler,
        num_workers=args.workers,
        pin_memory=True,
        collate_fn=collate_fn,
    )
torch.utils.data.DataLoader(
        dataset_test,
        batch_size=args.batch_size,
        sampler=test_sampler,
        num_workers=args.workers,
        pin_memory=True,
        collate_fn=collate_fn,
    )
torch.utils.data.DataLoader(
        train, batch_size=args.batchSize, shuffle=True, num_workers=args.nThreads
    )
DataLoader(
            dataset,
            batch_size=2,
            num_workers=num_workers,
            collate_fn=self._collate_fn,
        )
torch.utils.data.DataLoader(
            _VideoTimestampsDataset(self.video_paths),  # type: ignore[arg-type]
            batch_size=16,
            num_workers=self.num_workers,
            collate_fn=_collate_fn,
        )
DataLoader(
                self.legacy_cls(legacy_config.pop("root", str(root)), **legacy_config, **special_options),
                shuffle=True,
                num_workers=num_workers,
            )
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/Linear_classifier.py#L189
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/Linear_classifier.py#L212
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/Linear_classifier.py#L213
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/Linear_classifier.py#L214
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/Linear_classifier.py#L251
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/Linear_classifier.py#L262
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/Linear_classifier.py#L265
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/train_inc_dec_size_weight_balance.py#L192
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/train_inc_dec_size_weight_balance.py#L201
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/train_inc_dec_size_weight_balance.py#L235
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/train_inc_dec_size_weight_balance.py#L246
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/train_inc_dec_size_weight_balance.py#L254
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Contrastive_pretraining/train_inc_dec_size_weight_balance.py#L255
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/efficientdet/effdet/data/loader.py#L235
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/train.py#L191
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/train.py#L195
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/gallery/plot_video_api.py#L313
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/classification/train.py#L211
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/classification/train.py#L219
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/classification/train_quantization.py#L39
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/classification/train_quantization.py#L43
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/classification/train_quantization.py#L83
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/detection/group_by_aspect_ratio.py#L104
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/detection/train.py#L183
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/detection/train.py#L187
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/optical_flow/train.py#L73
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/optical_flow/train.py#L273
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/segmentation/train.py#L146
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/segmentation/train.py#L155
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/similarity/test.py#L30
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/similarity/train.py#L131
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/similarity/train.py#L134
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/video_classification/train.py#L205
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/references/video_classification/train.py#L214
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/test/preprocess-bench.py#L46
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/test/test_prototype_builtin_datasets.py#L128
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/torchvision/datasets/video_utils.py#L145
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/torchvision/prototype/datasets/benchmark.py#L163

===============================
https://github.com/ttanida/rgrg
===============================

Found 12 times
torch.utils.data.DataLoader(dset, batch_size=batch_size, shuffle=shuffle,
                                         num_workers=num_workers, collate_fn=collate_fn)
torch.utils.data.DataLoader(train_dset, batch_size=batch_size, shuffle=shuffle,
                                                     num_workers=num_workers, collate_fn=collate_fn)
torch.utils.data.DataLoader(train_dset,
                                                     batch_size=batch_size,
                                                     num_workers=num_workers,
                                                     collate_fn=collate_fn,
                                                     sampler=sampler)
torch.utils.data.DataLoader(dev_dset, batch_size=batch_size, shuffle=shuffle,
                                              num_workers=num_workers, collate_fn=collate_fn)
torch.utils.data.DataLoader(test_dset, batch_size=batch_size, shuffle=shuffle,
                                               num_workers=num_workers, collate_fn=collate_fn)
DataLoader(
        test_dataset_complete,
        collate_fn=custom_collate_test,
        batch_size=BATCH_SIZE,
        shuffle=False,
        num_workers=0,
        pin_memory=True,
    )
DataLoader(
        test_2_dataset_complete,
        collate_fn=custom_collate_test,
        batch_size=BATCH_SIZE,
        shuffle=False,
        num_workers=0,
        pin_memory=True,
    )
DataLoader(
        train_dataset,
        collate_fn=custom_collate_train,
        batch_size=BATCH_SIZE,
        shuffle=True,
        num_workers=NUM_WORKERS,
        worker_init_fn=seed_worker,
        generator=g,
        pin_memory=True,
    )
DataLoader(
        val_dataset,
        collate_fn=custom_collate_val,
        batch_size=BATCH_SIZE,
        shuffle=False,
        num_workers=0,  # could also be set to NUM_WORKERS, but I had some problems with the val loader stopping sometimes when num_workers != 0
        pin_memory=True,
    )
DataLoader(test_dataset, collate_fn=collate_fn, batch_size=BATCH_SIZE, shuffle=False, num_workers=0, pin_memory=True)
DataLoader(train_dataset, collate_fn=collate_fn, batch_size=BATCH_SIZE, shuffle=True, num_workers=NUM_WORKERS, worker_init_fn=seed_worker, generator=g, pin_memory=True)
DataLoader(val_dataset, collate_fn=collate_fn, batch_size=BATCH_SIZE, shuffle=False, num_workers=0, pin_memory=True)
https://github.com/ttanida/rgrg/blob/eb64933e222e8b18cd78c257c822a349b024c008/src/CheXbert/src/label.py#L48
https://github.com/ttanida/rgrg/blob/eb64933e222e8b18cd78c257c822a349b024c008/src/CheXbert/src/run_bert.py#L60
https://github.com/ttanida/rgrg/blob/eb64933e222e8b18cd78c257c822a349b024c008/src/CheXbert/src/run_bert.py#L66
https://github.com/ttanida/rgrg/blob/eb64933e222e8b18cd78c257c822a349b024c008/src/CheXbert/src/run_bert.py#L72
https://github.com/ttanida/rgrg/blob/eb64933e222e8b18cd78c257c822a349b024c008/src/CheXbert/src/run_bert.py#L92
https://github.com/ttanida/rgrg/blob/eb64933e222e8b18cd78c257c822a349b024c008/src/full_model/test_set_evaluation.py#L764
https://github.com/ttanida/rgrg/blob/eb64933e222e8b18cd78c257c822a349b024c008/src/full_model/test_set_evaluation.py#L773
https://github.com/ttanida/rgrg/blob/eb64933e222e8b18cd78c257c822a349b024c008/src/full_model/train_full_model.py#L318
https://github.com/ttanida/rgrg/blob/eb64933e222e8b18cd78c257c822a349b024c008/src/full_model/train_full_model.py#L328
https://github.com/ttanida/rgrg/blob/eb64933e222e8b18cd78c257c822a349b024c008/src/full_model/evaluate_bbox_variations/evaluate_bbox_variations.py#L188
https://github.com/ttanida/rgrg/blob/eb64933e222e8b18cd78c257c822a349b024c008/src/object_detector/training_script_object_detector.py#L473
https://github.com/ttanida/rgrg/blob/eb64933e222e8b18cd78c257c822a349b024c008/src/object_detector/training_script_object_detector.py#L474

===============================
https://github.com/HHHedo/IBMIL
===============================

Found 10 times
DataLoader(trainset,1, shuffle=True, num_workers=16)
DataLoader(trainset,1, shuffle=True, num_workers=16)
DataLoader(trainset,1, shuffle=True, num_workers=16)
DataLoader(testset,1, shuffle=False, num_workers=16)
DataLoader(trainset,1, shuffle=True, num_workers=16)
DataLoader(testset,1, shuffle=False, num_workers=16)
DataLoader(trainset,1, shuffle=True, num_workers=16)
DataLoader(testset,1, shuffle=False, num_workers=16)
DataLoader(train_dataset, batch_size=self.batch_size, sampler=train_sampler,
                                  num_workers=self.num_workers, drop_last=True, shuffle=False)
DataLoader(train_dataset, batch_size=self.batch_size, sampler=valid_sampler,
                                  num_workers=self.num_workers, drop_last=True)
https://github.com/HHHedo/IBMIL/blob/61ac749933bba3418238f2ab09af866dd276c695/clustering.py#L231
https://github.com/HHHedo/IBMIL/blob/61ac749933bba3418238f2ab09af866dd276c695/clustering_DTFD.py#L224
https://github.com/HHHedo/IBMIL/blob/61ac749933bba3418238f2ab09af866dd276c695/train_tcga.py#L314
https://github.com/HHHedo/IBMIL/blob/61ac749933bba3418238f2ab09af866dd276c695/train_tcga.py#L316
https://github.com/HHHedo/IBMIL/blob/61ac749933bba3418238f2ab09af866dd276c695/train_tcga_DTFD.py#L508
https://github.com/HHHedo/IBMIL/blob/61ac749933bba3418238f2ab09af866dd276c695/train_tcga_DTFD.py#L510
https://github.com/HHHedo/IBMIL/blob/61ac749933bba3418238f2ab09af866dd276c695/train_tcga_transmil.py#L314
https://github.com/HHHedo/IBMIL/blob/61ac749933bba3418238f2ab09af866dd276c695/train_tcga_transmil.py#L316
https://github.com/HHHedo/IBMIL/blob/61ac749933bba3418238f2ab09af866dd276c695/simclr/data_aug/dataset_wrapper.py#L73
https://github.com/HHHedo/IBMIL/blob/61ac749933bba3418238f2ab09af866dd276c695/simclr/data_aug/dataset_wrapper.py#L75

=====================================
https://github.com/bowang-lab/MAESTER
=====================================

Found 1 times
DataLoader(
    dataset,
    batch_size=cfg["DATASET"]["batch_size"],
    sampler=sampler,
    num_workers=cfg["DATASET"]["num_workers"],
    pin_memory=True,
    worker_init_fn=seed_worker,
    generator=g,
)
https://github.com/bowang-lab/MAESTER/blob/e19e020d02520777ff0996f21ee5cccb98f645ef/MAESTER/train.py#L60

====================================
https://github.com/maxwell0027/PEFAT
====================================

Found 4 times
DataLoader(dataset=train_dataset, batch_sampler=batch_sampler,
                                  num_workers=8, pin_memory=False, worker_init_fn=worker_init_fn)
DataLoader(dataset=val_dataset, batch_size=batch_size,
                                shuffle=False, num_workers=8, pin_memory=False, worker_init_fn=worker_init_fn)
DataLoader(dataset=eval_train_dataset, batch_sampler=batch_sampler,
                                  shuffle=False, num_workers=8, pin_memory=False, worker_init_fn=worker_init_fn)
DataLoader(dataset=test_dataset, batch_size=batch_size,
                                shuffle=False, num_workers=8, pin_memory=False)
https://github.com/maxwell0027/PEFAT/blob/e5a87285a659d132764332c4c86b95f40600ed7c/code/train.py#L260
https://github.com/maxwell0027/PEFAT/blob/e5a87285a659d132764332c4c86b95f40600ed7c/code/train.py#L262
https://github.com/maxwell0027/PEFAT/blob/e5a87285a659d132764332c4c86b95f40600ed7c/code/train.py#L264
https://github.com/maxwell0027/PEFAT/blob/e5a87285a659d132764332c4c86b95f40600ed7c/code/train.py#L266

================================
https://github.com/Kid-Liet/IMSE
================================

Found 11 times
DataLoader(
            ImageDataset(config['dataroot'], transforms_=self.transforms, opt=config),
            batch_size=config['batchSize'], shuffle=True, num_workers=config['n_cpu'],drop_last = True)
DataLoader(
            TestDataset(config['testroot'], transforms_=self.transforms, opt=config),
            shuffle=False,batch_size=1, num_workers=0)
DataLoader(
            ImageDataset(config['dataroot'], transforms_=self.transforms, opt=config),
            batch_size=config['batchSize'], shuffle=True, num_workers=config['n_cpu'],drop_last = True)
DataLoader(
            ImageDataset(config['dataroot'], transforms_=self.transforms_1, opt=config),
            batch_size=config['batchSize'], shuffle=True, num_workers=config['n_cpu'],drop_last = True)
DataLoader(
            TestDataset(config['testroot'], transforms_=self.transforms_1, opt=config),
            batch_size=1, shuffle=False, num_workers=config['n_cpu'])
DataLoader(ImageDataset(config['dataroot'],transforms_=self.transforms_1,opt = config, unaligned=False),                         batch_size=config['batchSize'],shuffle=True, num_workers=config['n_cpu'])
DataLoader(ImageDataset(config['dataroot'],transforms_=self.transforms_1,opt = config, unaligned=False),   batch_size=config['batchSize'],shuffle=True, num_workers=config['n_cpu'])
DataLoader(TestDataset(config['testroot'],transforms_=self.transforms_1,opt = config, unaligned=False),                         batch_size=1,shuffle=False, num_workers=config['n_cpu'])
DataLoader(ImageDataset(config['dataroot'],transforms_=self.transforms_1,
                           opt = config, unaligned=False),batch_size=config['batchSize'],shuffle=True,num_workers=config['n_cpu'])
DataLoader(ImageDataset(config['dataroot'],transforms_=self.transforms_1,
                           opt = config, unaligned=False),batch_size=config['batchSize'],shuffle=True,num_workers=config['n_cpu'])
DataLoader(TestDataset(config['testroot'],transforms_=self.transforms_1,
                           opt = config, unaligned=False),batch_size=1,shuffle=False,num_workers=config['n_cpu'])
https://github.com/Kid-Liet/IMSE/blob/024f4aa7c6486d9f6424e25a7707d21c0e51822e/IMSE-2D-Full/trainer/train_Evaluator.py#L34
https://github.com/Kid-Liet/IMSE/blob/024f4aa7c6486d9f6424e25a7707d21c0e51822e/IMSE-2D-Full/trainer/train_Evaluator.py#L38
https://github.com/Kid-Liet/IMSE/blob/024f4aa7c6486d9f6424e25a7707d21c0e51822e/IMSE-2D-Full/trainer/train_Generator.py#L52
https://github.com/Kid-Liet/IMSE/blob/024f4aa7c6486d9f6424e25a7707d21c0e51822e/IMSE-2D-Full/trainer/train_Registor.py#L57
https://github.com/Kid-Liet/IMSE/blob/024f4aa7c6486d9f6424e25a7707d21c0e51822e/IMSE-2D-Full/trainer/train_Registor.py#L60
https://github.com/Kid-Liet/IMSE/blob/024f4aa7c6486d9f6424e25a7707d21c0e51822e/IMSE-3D-Full/trainer/train_Evaluator.py#L33
https://github.com/Kid-Liet/IMSE/blob/024f4aa7c6486d9f6424e25a7707d21c0e51822e/IMSE-3D-Full/trainer/train_Registor.py#L51
https://github.com/Kid-Liet/IMSE/blob/024f4aa7c6486d9f6424e25a7707d21c0e51822e/IMSE-3D-Full/trainer/train_Registor.py#L53
https://github.com/Kid-Liet/IMSE/blob/024f4aa7c6486d9f6424e25a7707d21c0e51822e/IMSE-3D-Pure/trainer/train_Evaluator.py#L32
https://github.com/Kid-Liet/IMSE/blob/024f4aa7c6486d9f6424e25a7707d21c0e51822e/IMSE-3D-Pure/trainer/train_Registor.py#L37
https://github.com/Kid-Liet/IMSE/blob/024f4aa7c6486d9f6424e25a7707d21c0e51822e/IMSE-3D-Pure/trainer/train_Registor.py#L39

======================================
https://github.com/Kangningthu/ItS2CLR
======================================

Found 9 times
DataLoader(train_dataset_pos, batch_size=int(config['batch_size']*config['posi_query_ratio']),
                              num_workers=config['dataset']['num_workers'], drop_last=True, shuffle=True)
DataLoader(train_dataset_neg, batch_size=int(config['batch_size']*(1-config['posi_query_ratio'])),
                              num_workers=config['dataset']['num_workers'], drop_last=True, shuffle=True)
DataLoader(val_dataset, batch_size=config['batch_size'],
                              num_workers=config['dataset']['num_workers'], drop_last=True, shuffle=False)
DataLoader(test_dataset, batch_size=config['batch_size'],
                              num_workers=config['dataset']['num_workers'], drop_last=True, shuffle=False)
DataLoader(train_dataset_pos_full, batch_size=int(config['batch_size']*config['posi_batch_ratio']),
                              num_workers=config['dataset']['num_workers'], drop_last=True, shuffle=True)
DataLoader(train_dataset_neg_clean, batch_size=int(config['batch_size']*(1-config['posi_batch_ratio'])),
                              num_workers=config['dataset']['num_workers'], drop_last=True, shuffle=True)
torch.utils.data.DataLoader(
        dataset, batch_size=1024, shuffle=False, num_workers=8)
DataLoader(train_dataset, batch_size=self.batch_size, sampler=train_sampler,
                                  num_workers=self.num_workers, drop_last=True, shuffle=False)
DataLoader(train_dataset, batch_size=self.batch_size, sampler=valid_sampler,
                                  num_workers=self.num_workers, drop_last=True)
https://github.com/Kangningthu/ItS2CLR/blob/560213a4bd3d30b73b4a2560bcd93f0b66162c1d/train/run.py#L173
https://github.com/Kangningthu/ItS2CLR/blob/560213a4bd3d30b73b4a2560bcd93f0b66162c1d/train/run.py#L175
https://github.com/Kangningthu/ItS2CLR/blob/560213a4bd3d30b73b4a2560bcd93f0b66162c1d/train/run.py#L177
https://github.com/Kangningthu/ItS2CLR/blob/560213a4bd3d30b73b4a2560bcd93f0b66162c1d/train/run.py#L179
https://github.com/Kangningthu/ItS2CLR/blob/560213a4bd3d30b73b4a2560bcd93f0b66162c1d/train/run.py#L186
https://github.com/Kangningthu/ItS2CLR/blob/560213a4bd3d30b73b4a2560bcd93f0b66162c1d/train/run.py#L188
https://github.com/Kangningthu/ItS2CLR/blob/560213a4bd3d30b73b4a2560bcd93f0b66162c1d/train/trainer.py#L66
https://github.com/Kangningthu/ItS2CLR/blob/560213a4bd3d30b73b4a2560bcd93f0b66162c1d/train/data_aug/dataset_wrapper.py#L105
https://github.com/Kangningthu/ItS2CLR/blob/560213a4bd3d30b73b4a2560bcd93f0b66162c1d/train/data_aug/dataset_wrapper.py#L107

=====================================
https://github.com/MLNeurosurg/hidisc
=====================================

Found 2 times
torch.utils.data.DataLoader(
        train_dset,
        batch_size=cf["eval"]["predict_batch_size"],
        drop_last=False,
        pin_memory=True,
        num_workers=get_num_worker(),
        persistent_workers=True)
torch.utils.data.DataLoader(
        val_dset,
        batch_size=cf["eval"]["predict_batch_size"],
        drop_last=False,
        pin_memory=True,
        num_workers=get_num_worker(),
        persistent_workers=True)
https://github.com/MLNeurosurg/hidisc/blob/d3d6a63295dcb7842c44c7d1742e861d16006197/hidisc/train/eval_knn.py#L89
https://github.com/MLNeurosurg/hidisc/blob/d3d6a63295dcb7842c44c7d1742e861d16006197/hidisc/train/eval_knn.py#L102

===============================
https://github.com/stoneMo/AVGN
===============================

Found 3 times
DataLoader(testdataset, batch_size=args.batch_size, sampler=sampler, num_workers=args.workers)
torch.utils.data.DataLoader(
        traindataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=False, sampler=train_sampler, drop_last=True,
        persistent_workers=args.workers > 0)
torch.utils.data.DataLoader(
        testdataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=False, drop_last=False,
        persistent_workers=args.workers > 0)
https://github.com/stoneMo/AVGN/blob/5ab8cab2a414ca87c2b7787f66ad1474679ad6f2/test.py#L146
https://github.com/stoneMo/AVGN/blob/5ab8cab2a414ca87c2b7787f66ad1474679ad6f2/train.py#L170
https://github.com/stoneMo/AVGN/blob/5ab8cab2a414ca87c2b7787f66ad1474679ad6f2/train.py#L176

=======================================
https://github.com/CrossmodalGroup/HREM
=======================================

Found 1 times
torch.utils.data.DataLoader(dataset=dset,
                                                batch_size=batch_size,
                                                shuffle=shuffle,
                                                pin_memory=True,
                                                collate_fn=collate_fn,
                                                num_workers=num_workers,
                                                drop_last=drop_last)
https://github.com/CrossmodalGroup/HREM/blob/fb854a95be13c7561ad491dccdc182e3525eb9b4/lib/image_caption.py#L172

======================================
https://github.com/Weizhi-Zhong/IP_LAP
======================================

Found 4 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=num_workers,
        pin_memory=True
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=batch_size_val,
        shuffle=True,
        drop_last=True,
        num_workers=num_workers,
        pin_memory=True
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=num_workers,
        pin_memory=True
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=batch_size_val,
        shuffle=True,
        drop_last=True,
        num_workers=num_workers,
        pin_memory=True
    )
https://github.com/Weizhi-Zhong/IP_LAP/blob/9b9dc03f0e90b10b92c904b202443c160afe7c45/train_landmarks_generator.py#L287
https://github.com/Weizhi-Zhong/IP_LAP/blob/9b9dc03f0e90b10b92c904b202443c160afe7c45/train_landmarks_generator.py#L295
https://github.com/Weizhi-Zhong/IP_LAP/blob/9b9dc03f0e90b10b92c904b202443c160afe7c45/train_video_renderer.py#L314
https://github.com/Weizhi-Zhong/IP_LAP/blob/9b9dc03f0e90b10b92c904b202443c160afe7c45/train_video_renderer.py#L322

========================================
https://github.com/GalaxyCong/HPMDubbing
========================================

Found 11 times
DataLoader(
        dataset_val,
        batch_size=16,
        shuffle=False,
        collate_fn=dataset_val.collate_fn,
    )
DataLoader(
        dataset_val,
        batch_size=1,
        shuffle=False,
        collate_fn=dataset_val.collate_fn,
    )
DataLoader(
        train_dataset,
        batch_size=train_config["optimizer"]["batch_size"] * 4,
        shuffle=True,
        collate_fn=train_dataset.collate_fn,
    )
DataLoader(
        val_dataset,
        batch_size=train_config["optimizer"]["batch_size"],
        shuffle=False,
        collate_fn=val_dataset.collate_fn,
    )
DataLoader(
        dataset_train,
        batch_size=16,
        shuffle=True,
        collate_fn=dataset_train.collate_fn,
    )
DataLoader(
        dataset_train,
        batch_size=16,
        shuffle=False,
        collate_fn=dataset_train.collate_fn,
    )
DataLoader(
        dataset_val,
        batch_size=16,
        shuffle=False,
        collate_fn=dataset_val.collate_fn,
    )
DataLoader(
        dataset,
        batch_size=batch_size * group_size,
        shuffle=True,
        num_workers=16,
        pin_memory=True,
        collate_fn=dataset1.collate_fn,
    )
DataLoader(test_dataset_no_flip, batch_size=batch_size, shuffle=False, num_workers=n_workers)
DataLoader(test_dataset_flip, batch_size=batch_size, shuffle=False, num_workers=n_workers)
torch.utils.data.DataLoader(
                        dsets[x],
                        batch_size=args.batch_size,
                        shuffle=True,
                        collate_fn=pad_packed_collate,
                        pin_memory=True,
                        num_workers=args.workers,
                        worker_init_fn=np.random.seed(1))
https://github.com/GalaxyCong/HPMDubbing/blob/68e6654e4149ee0b83ae2924124b757b24916337/Inference_multi_pro.py#L241
https://github.com/GalaxyCong/HPMDubbing/blob/68e6654e4149ee0b83ae2924124b757b24916337/Synthesis.py#L95
https://github.com/GalaxyCong/HPMDubbing/blob/68e6654e4149ee0b83ae2924124b757b24916337/dataset.py#L393
https://github.com/GalaxyCong/HPMDubbing/blob/68e6654e4149ee0b83ae2924124b757b24916337/dataset.py#L399
https://github.com/GalaxyCong/HPMDubbing/blob/68e6654e4149ee0b83ae2924124b757b24916337/evaluate.py#L236
https://github.com/GalaxyCong/HPMDubbing/blob/68e6654e4149ee0b83ae2924124b757b24916337/evaluate.py#L242
https://github.com/GalaxyCong/HPMDubbing/blob/68e6654e4149ee0b83ae2924124b757b24916337/evaluate.py#L248
https://github.com/GalaxyCong/HPMDubbing/blob/68e6654e4149ee0b83ae2924124b757b24916337/train.py#L35
https://github.com/GalaxyCong/HPMDubbing/blob/68e6654e4149ee0b83ae2924124b757b24916337/EmoFAN/emonet/test.py#L50
https://github.com/GalaxyCong/HPMDubbing/blob/68e6654e4149ee0b83ae2924124b757b24916337/EmoFAN/emonet/test.py#L51
https://github.com/GalaxyCong/HPMDubbing/blob/68e6654e4149ee0b83ae2924124b757b24916337/LipEncoder/Lipreading_using_Temporal_Convolutional_Networks/lipreading/dataloaders.py#L57

============================================
https://github.com/facebookresearch/omnivore
============================================

Found 1 times
DataLoader(
            self.dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            pin_memory=self.pin_memory,
            drop_last=self.drop_last,
            sampler=self.sampler,
            collate_fn=self.collate_fn,
            worker_init_fn=self.worker_init_fn,
        )
https://github.com/facebookresearch/omnivore/blob/1d55abdc8dfc7bd5cbf69316841ab804d0acf1ca/omnivision/data/torch_dataset.py#L40

======================================
https://github.com/WikiChao/Ego-AV-Loc
======================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=int(args.workers),
        drop_last=True)
torch.utils.data.DataLoader(
        db,
        batch_size=db_cfg['batch_size'],
        shuffle=False,
        drop_last=split_cfg['drop_last'],
        num_workers=num_workers,
        pin_memory=True,
        sampler=sampler)
https://github.com/WikiChao/Ego-AV-Loc/blob/9a97e6587b52f22f6e4ec834072cf0b3b2a4f162/code/main_localization.py#L221
https://github.com/WikiChao/Ego-AV-Loc/blob/9a97e6587b52f22f6e4ec834072cf0b3b2a4f162/code/utils/main_utils.py#L148

================================
https://github.com/mbanani/lgssl
================================

Found 4 times
DataLoader(
        dataset=dataset,
        batch_size=int(cfg.batch_size / num_gpus),
        shuffle=True,
        pin_memory=True,
        collate_fn=skip_bad_collate,
        num_workers=n_workers,
    )
DataLoader(train_set, bs, num_workers=n_workers, drop_last=False)
DataLoader(valid_set, bs, num_workers=n_workers, drop_last=False)
DataLoader(test_set, bs, num_workers=n_workers, drop_last=False)
https://github.com/mbanani/lgssl/blob/df45bae647fc24dce8a6329eb697944053e9a8a0/lgssl/datasets/builder.py#L26
https://github.com/mbanani/lgssl/blob/df45bae647fc24dce8a6329eb697944053e9a8a0/lgssl/datasets/builder.py#L95
https://github.com/mbanani/lgssl/blob/df45bae647fc24dce8a6329eb697944053e9a8a0/lgssl/datasets/builder.py#L96
https://github.com/mbanani/lgssl/blob/df45bae647fc24dce8a6329eb697944053e9a8a0/lgssl/datasets/builder.py#L97

============================================
https://github.com/Nithin-GK/UniteandConquer
============================================

Found 2 times
DataLoader(ValData(), batch_size=1, shuffle=False, num_workers=1)
DataLoader(ValData(dataset='ffhq'), batch_size=1, shuffle=False, num_workers=1)
https://github.com/Nithin-GK/UniteandConquer/blob/b331416680aed3e287170899d714765527bc5474/face_utils/diff_test_datasets.py#L27
https://github.com/Nithin-GK/UniteandConquer/blob/b331416680aed3e287170899d714765527bc5474/scripts/super_res_test.py#L80

====================================
https://github.com/JiabenChen/iQuery
====================================

Found 8 times
torch.utils.data.DataLoader(
        dataset_train,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=int(args.workers),
        drop_last=True)
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=2,
        drop_last=False)
torch.utils.data.DataLoader(
        dataset_train,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=int(args.workers), 
        collate_fn = time_collate_fn,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=2,
        collate_fn = time_collate_fn,
        drop_last=False)
torch.utils.data.DataLoader(
        dataset_train,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=int(args.workers), 
        collate_fn = time_collate_fn,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=2,
        collate_fn = time_collate_fn,
        drop_last=False)
torch.utils.data.DataLoader(
        dataset_train,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=int(args.workers),
        drop_last=True)
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=2,
        drop_last=False)
https://github.com/JiabenChen/iQuery/blob/315fba343ec240b63f8632f0347940efda5b4c51/code/main_ave.py#L503
https://github.com/JiabenChen/iQuery/blob/315fba343ec240b63f8632f0347940efda5b4c51/code/main_ave.py#L509
https://github.com/JiabenChen/iQuery/blob/315fba343ec240b63f8632f0347940efda5b4c51/code/main_music.py#L579
https://github.com/JiabenChen/iQuery/blob/315fba343ec240b63f8632f0347940efda5b4c51/code/main_music.py#L586
https://github.com/JiabenChen/iQuery/blob/315fba343ec240b63f8632f0347940efda5b4c51/code/main_music21.py#L590
https://github.com/JiabenChen/iQuery/blob/315fba343ec240b63f8632f0347940efda5b4c51/code/main_music21.py#L597
https://github.com/JiabenChen/iQuery/blob/315fba343ec240b63f8632f0347940efda5b4c51/code/main_nomotion.py#L517
https://github.com/JiabenChen/iQuery/blob/315fba343ec240b63f8632f0347940efda5b4c51/code/main_nomotion.py#L523

==============================
https://github.com/ZYK100/LLCM
==============================

Found 23 times
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(trial_gallset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(trial_gallset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(gallset, batch_size=args.test_batch, shuffle=False, num_workers=args.workers)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(gallset, batch_size=args.test_batch, shuffle=False, num_workers=args.workers)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=args.workers)
data.DataLoader(trainset, batch_size=loader_batch, \
                                  sampler=sampler, num_workers=args.workers, drop_last=True)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(trial_gallset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(trial_gallset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(gallset, batch_size=args.test_batch, shuffle=False, num_workers=args.workers)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(gallset, batch_size=args.test_batch, shuffle=False, num_workers=args.workers)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=args.workers)
data.DataLoader(trainset, batch_size=loader_batch, \
                                  sampler=sampler, num_workers=args.workers, drop_last=True)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(trial_gallset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(gallset, batch_size=args.test_batch, shuffle=False, num_workers=args.workers)
data.DataLoader(trainset, batch_size=loader_batch, \
                              sampler=sampler, num_workers=args.workers, drop_last=True)
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/AGW/test.py#L164
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/AGW/test.py#L172
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/AGW/test.py#L246
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/AGW/test.py#L254
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/AGW/test.py#L310
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/AGW/test.py#L316
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/AGW/train.py#L154
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/AGW/train.py#L155
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/AGW/train.py#L381
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/DEEN/test.py#L195
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/DEEN/test.py#L203
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/DEEN/test.py#L291
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/DEEN/test.py#L299
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/DEEN/test.py#L360
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/DEEN/test.py#L366
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/DEEN/train.py#L176
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/DEEN/train.py#L177
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/DEEN/train.py#L426
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/Visualization/extract.py#L203
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/Visualization/extract.py#L206
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/Visualization/extract.py#L245
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/Visualization/extract.py#L247
https://github.com/ZYK100/LLCM/blob/886e27caca0f5dbd7424df1ea81b4ad02f95cfb6/Visualization/tsne.py#L380

===============================
https://github.com/BLVLab/PiMAE
===============================

Found 8 times
DataLoader(
            datasets[split],
            sampler=sampler,
            batch_size=args.batchsize_per_gpu,
            num_workers=args.dataset_num_workers,
            worker_init_fn=my_worker_init_fn,
            pin_memory=True,      # changed
        )
DataLoader(
            datasets[split],
            sampler=sampler,
            batch_size=args.batchsize_per_gpu,
            num_workers=args.dataset_num_workers,
            worker_init_fn=my_worker_init_fn,
            pin_memory=True,
        )
DataLoader(
            datasets[split],
            sampler=sampler,
            batch_size=args.batchsize_per_gpu,
            num_workers=args.dataset_num_workers,
            worker_init_fn=my_worker_init_fn,
            pin_memory=True,      # changed
        )
torch.utils.data.DataLoader(dataset, batch_size = config.others.bs,
                                            num_workers = int(args.num_workers),
                                            drop_last = config.others.subset == 'train',
                                            worker_init_fn = worker_init_fn,
                                            sampler = sampler)
torch.utils.data.DataLoader(dataset, batch_size=config.others.bs,
                                                shuffle = shuffle, 
                                                drop_last = config.others.subset == 'train',
                                                num_workers = int(args.num_workers),
                                                worker_init_fn=worker_init_fn)
DataLoader(
            datasets[split],
            sampler=sampler,
            batch_size=bs,
            num_workers=int(args.num_workers),
            worker_init_fn=misc.worker_init_fn,
        )
DataLoader(
            datasets[split],
            sampler=sampler,
            batch_size=bs,
            num_workers=int(args.num_workers),
            worker_init_fn=misc.worker_init_fn,
            pin_memory=False,
        )
DataLoader(
            datasets[split],
            sampler=sampler,
            batch_size=bs,
            num_workers=int(args.num_workers),
            worker_init_fn=misc.worker_init_fn,
        )
https://github.com/BLVLab/PiMAE/blob/6711e072f30e0a8e0d60dc8eb323d84b0dcc7fba/Downstream/3detr/main.py#L393
https://github.com/BLVLab/PiMAE/blob/6711e072f30e0a8e0d60dc8eb323d84b0dcc7fba/Downstream/3detr/main_load.py#L453
https://github.com/BLVLab/PiMAE/blob/6711e072f30e0a8e0d60dc8eb323d84b0dcc7fba/Downstream/3detr/test_subset.py#L394
https://github.com/BLVLab/PiMAE/blob/6711e072f30e0a8e0d60dc8eb323d84b0dcc7fba/Pretrain/tools/builder.py#L19
https://github.com/BLVLab/PiMAE/blob/6711e072f30e0a8e0d60dc8eb323d84b0dcc7fba/Pretrain/tools/builder.py#L26
https://github.com/BLVLab/PiMAE/blob/6711e072f30e0a8e0d60dc8eb323d84b0dcc7fba/Pretrain/tools/runner.py#L88
https://github.com/BLVLab/PiMAE/blob/6711e072f30e0a8e0d60dc8eb323d84b0dcc7fba/Pretrain/tools/runner_pretrain.py#L77
https://github.com/BLVLab/PiMAE/blob/6711e072f30e0a8e0d60dc8eb323d84b0dcc7fba/Pretrain/tools/runner_vis.py#L83

================================
https://github.com/GenjiB/LAVISH
================================

Found 28 times
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers, pin_memory = True)
DataLoader(val_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers, pin_memory = True)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1, pin_memory=True)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1, pin_memory=True)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers, pin_memory = True)
DataLoader(val_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers, pin_memory = True)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1, pin_memory=True)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1, pin_memory=True)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=1, pin_memory=True)
DataLoader(val_dataset, batch_size=1, shuffle=False, num_workers=1, pin_memory=True)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1, pin_memory=True)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=4, pin_memory=True)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=1, pin_memory=True)
DataLoader(val_dataset, batch_size=1, shuffle=False, num_workers=1, pin_memory=True)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1, pin_memory=True)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=4, pin_memory=True)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers, pin_memory=True)
DataLoader(val_dataset, batch_size=1, shuffle=False, num_workers=args.num_workers, pin_memory=True)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=4, pin_memory=True)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers, pin_memory=True)
DataLoader(val_dataset, batch_size=1, shuffle=False, num_workers=args.num_workers, pin_memory=True)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(train_dataset,
                                                        batch_size=args.train_batch_size,
                                                        shuffle=True,
                                                        num_workers=args.num_workers,
                                                        pin_memory=True)
torch.utils.data.DataLoader(val_dataset,
                                                        batch_size=args.val_batch_size,
                                                        shuffle=False,
                                                        num_workers=args.num_workers,
                                                        pin_memory=True)
torch.utils.data.DataLoader(train_dataset,
													 batch_size=2,
													 shuffle=False,
													 num_workers=8,
													 pin_memory=True)
torch.utils.data.DataLoader(test_dataset,
                                                        batch_size=args.test_batch_size,
                                                        shuffle=False,
                                                        num_workers=args.num_workers,
                                                        pin_memory=True)
torch.utils.data.DataLoader(train_dataset,
														batch_size=args.train_batch_size,
														shuffle=True,
														num_workers=args.num_workers,
														pin_memory=True)
torch.utils.data.DataLoader(val_dataset,
														batch_size=args.val_batch_size,
														shuffle=False,
														num_workers=args.num_workers,
														pin_memory=True)
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVE/main_trans.py#L170
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVE/main_trans.py#L171
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVE/main_trans.py#L244
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVE/main_trans.py#L250
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVE/main_trans_v2.py#L196
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVE/main_trans_v2.py#L197
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVE/main_trans_v2.py#L287
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVE/main_trans_v2.py#L293
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/grounding_gen/main_grd_gen.py#L202
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/grounding_gen/main_grd_gen.py#L205
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/grounding_gen/main_grd_gen.py#L229
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/grounding_gen/main_grd_gen.py#L235
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/grounding_gen/main_grd_gen_vis.py#L239
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/grounding_gen/main_grd_gen_vis.py#L242
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/grounding_gen/main_grd_gen_vis.py#L266
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/grounding_gen/main_grd_gen_vis.py#L272
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/net_grd_avst/compute_mean.py#L214
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/net_grd_avst/compute_mean.py#L217
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/net_grd_avst/compute_mean.py#L256
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/net_grd_avst/main_avst.py#L221
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/net_grd_avst/main_avst.py#L224
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVQA/net_grd_avst/main_avst.py#L313
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVS/avs_scripts/avs_s4/compute_mean.py#L166
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVS/avs_scripts/avs_s4/compute_mean.py#L174
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVS/avs_scripts/avs_s4/dataloader.py#L184
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVS/avs_scripts/avs_s4/test.py#L112
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVS/avs_scripts/avs_s4/train.py#L196
https://github.com/GenjiB/LAVISH/blob/97722b0424e8dd44659f447fe8731c675fa98da8/AVS/avs_scripts/avs_s4/train.py#L204

===================================
https://github.com/SivanDoveh/TSVLC
===================================

Found 3 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=args.workers,
        sampler=sampler,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
DataLoader(["hake"])
https://github.com/SivanDoveh/TSVLC/blob/90b18e7f7abc6ee867cc94893c6eb221ff6a16c5/src/training/data.py#L206
https://github.com/SivanDoveh/TSVLC/blob/90b18e7f7abc6ee867cc94893c6eb221ff6a16c5/src/training/data.py#L517
https://github.com/SivanDoveh/TSVLC/blob/90b18e7f7abc6ee867cc94893c6eb221ff6a16c5/src/vl_checklist/data_loader.py#L68

========================================
https://github.com/abhrac/data-free-sbir
========================================

Found 10 times
DataLoader(data_train, batch_size=16, shuffle=True, pin_memory=True, num_workers=4)
DataLoader(data_test, batch_size=100, shuffle=False, pin_memory=True, num_workers=4)
DataLoader(data_train, batch_size=16, shuffle=True, pin_memory=True, num_workers=4)
DataLoader(data_test, batch_size=100, shuffle=False, pin_memory=True, num_workers=4)
DataLoader(data_test_photo, batch_size=args.batch_size, num_workers=4, pin_memory=True, shuffle=False)
DataLoader(data_test_sketch, batch_size=args.batch_size, num_workers=4, pin_memory=True, shuffle=False)
DataLoader(trainset, batch_size=args.batch_size, num_workers=4, pin_memory=True, shuffle=True)
DataLoader(testset, batch_size=args.batch_size, num_workers=4, pin_memory=True, shuffle=True)
DataLoader(trainset, batch_size=args.batch_size, num_workers=4, pin_memory=True, shuffle=True)
DataLoader(testset, batch_size=args.batch_size, num_workers=4, pin_memory=True, shuffle=True)
https://github.com/abhrac/data-free-sbir/blob/7e775a9be359166d8b182fbdc3143335a92d3048/classifiers/photo.py#L82
https://github.com/abhrac/data-free-sbir/blob/7e775a9be359166d8b182fbdc3143335a92d3048/classifiers/photo.py#L83
https://github.com/abhrac/data-free-sbir/blob/7e775a9be359166d8b182fbdc3143335a92d3048/classifiers/sketch.py#L82
https://github.com/abhrac/data-free-sbir/blob/7e775a9be359166d8b182fbdc3143335a92d3048/classifiers/sketch.py#L83
https://github.com/abhrac/data-free-sbir/blob/7e775a9be359166d8b182fbdc3143335a92d3048/utils/dataloaders.py#L16
https://github.com/abhrac/data-free-sbir/blob/7e775a9be359166d8b182fbdc3143335a92d3048/utils/dataloaders.py#L18
https://github.com/abhrac/data-free-sbir/blob/7e775a9be359166d8b182fbdc3143335a92d3048/utils/dataloaders.py#L43
https://github.com/abhrac/data-free-sbir/blob/7e775a9be359166d8b182fbdc3143335a92d3048/utils/dataloaders.py#L46
https://github.com/abhrac/data-free-sbir/blob/7e775a9be359166d8b182fbdc3143335a92d3048/utils/dataloaders.py#L66
https://github.com/abhrac/data-free-sbir/blob/7e775a9be359166d8b182fbdc3143335a92d3048/utils/dataloaders.py#L67

=================================
https://github.com/boheumd/A2Summ
=================================

Found 4 times
torch.utils.data.DataLoader(train_set, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers, 
                                                drop_last=False, pin_memory=True, 
                                                worker_init_fn=worker_init_fn, collate_fn=my_collate_fn)
torch.utils.data.DataLoader(val_set, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers, 
                                                drop_last=False, pin_memory=True, 
                                                worker_init_fn=worker_init_fn, collate_fn=my_collate_fn)
torch.utils.data.DataLoader(train_set, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers, 
                                                drop_last=False, pin_memory=True, 
                                                worker_init_fn=worker_init_fn, collate_fn=my_collate_fn)
torch.utils.data.DataLoader(val_set, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers, 
                                                drop_last=False, pin_memory=True, 
                                                worker_init_fn=worker_init_fn, collate_fn=my_collate_fn)
https://github.com/boheumd/A2Summ/blob/5c7dceac3e81aca297e28c987f472ac3b9a9dbb6/train_msmo.py#L51
https://github.com/boheumd/A2Summ/blob/5c7dceac3e81aca297e28c987f472ac3b9a9dbb6/train_msmo.py#L55
https://github.com/boheumd/A2Summ/blob/5c7dceac3e81aca297e28c987f472ac3b9a9dbb6/train_videosumm.py#L49
https://github.com/boheumd/A2Summ/blob/5c7dceac3e81aca297e28c987f472ac3b9a9dbb6/train_videosumm.py#L53

=================================================
https://github.com/YiLunLee/missing_aware_prompts
=================================================

Found 8 times
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            sampler=self.train_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=batch_size if batch_size is not None else self.batch_size,
            sampler=self.val_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            sampler=self.test_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=64,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(
            text_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
https://github.com/YiLunLee/missing_aware_prompts/blob/9aa538159f4623de1936d25daee880ec47c062be/vilt/datamodules/datamodule_base.py#L167
https://github.com/YiLunLee/missing_aware_prompts/blob/9aa538159f4623de1936d25daee880ec47c062be/vilt/datamodules/datamodule_base.py#L178
https://github.com/YiLunLee/missing_aware_prompts/blob/9aa538159f4623de1936d25daee880ec47c062be/vilt/datamodules/datamodule_base.py#L189
https://github.com/YiLunLee/missing_aware_prompts/blob/9aa538159f4623de1936d25daee880ec47c062be/vilt/datamodules/multitask_datamodule.py#L55
https://github.com/YiLunLee/missing_aware_prompts/blob/9aa538159f4623de1936d25daee880ec47c062be/vilt/datamodules/multitask_datamodule.py#L65
https://github.com/YiLunLee/missing_aware_prompts/blob/9aa538159f4623de1936d25daee880ec47c062be/vilt/datamodules/multitask_datamodule.py#L75
https://github.com/YiLunLee/missing_aware_prompts/blob/9aa538159f4623de1936d25daee880ec47c062be/vilt/modules/objectives.py#L534
https://github.com/YiLunLee/missing_aware_prompts/blob/9aa538159f4623de1936d25daee880ec47c062be/vilt/modules/objectives.py#L550

======================================
https://github.com/shicaiwei123/MMANet
======================================

Found 15 times
torch.utils.data.DataLoader(dataset, batch_size=int(len(dataset) * ratio),
                                             shuffle=True, num_workers=10)
torch.utils.data.DataLoader(
        dataset=cefa_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=4,
        drop_last=True
    )
torch.utils.data.DataLoader(
            dataset=surf_dataset,
            batch_size=args.batch_size,
            shuffle=True,
            num_workers=4,
            drop_last=True
        )
torch.utils.data.DataLoader(
            dataset=surf_dataset,
            batch_size=args.batch_size,
            shuffle=True,
            num_workers=4,
            drop_last = True

        )
torch.utils.data.DataLoader(
        dataset=surf_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=4
    )
torch.utils.data.DataLoader(
        dataset=surf_dataset,
        batch_size=64,
        shuffle=False,
        num_workers=4)
torch.utils.data.DataLoader(
        dataset=surf_dataset,
        batch_size=64,
        shuffle=False,
        num_workers=4,
    )
torch.utils.data.DataLoader(
        dataset=surf_dataset,
        batch_size=64,
        shuffle=False,
        num_workers=4)
torch.utils.data.DataLoader(
        dataset=cefa_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=4)
torch.utils.data.DataLoader(
        dataset=cefa_dataset,
        batch_size=128,
        shuffle=False,
        num_workers=4)
torch.utils.data.DataLoader(
        dataset=cefa_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=4)
torch.utils.data.DataLoader(
        dataset=cefa_dataset,
        batch_size=128,
        shuffle=False,
        num_workers=4)
torch.utils.data.DataLoader(
        dataset=surf_dataset,
        batch_size=64,
        shuffle=False,
        num_workers=4)
DataLoader(train_data,
                              batch_size=args.batch_size,
                              num_workers=args.workers,
                              drop_last=True,
                              shuffle=True)
DataLoader(valid_data,
                              batch_size=batch_size_valid,
                              num_workers=args.workers,
                              shuffle=False)
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/lib/processing_utils.py#L215
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/src/cefa_baseline_multi_dataloader.py#L45
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/src/surf_baseline_multi_dataloader.py#L45
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/src/surf_baseline_multi_dataloader.py#L63
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/src/surf_baseline_single_dataloader.py#L51
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/test/baseline_multi_test.py#L31
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/test/baseline_single_test.py#L35
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/test/baseline_single_test.py#L61
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/test/cefa_baseline_single_test.py#L22
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/test/cefa_mmanet.py#L26
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/test/cefa_multi.py#L24
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/test/cefa_single.py#L26
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/classification/test/surf_mmanet.py#L30
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/segmentation/src/prepare_data.py#L133
https://github.com/shicaiwei123/MMANet/blob/0d374148398e9c865b387801d05a850ac19d0f8f/segmentation/src/prepare_data.py#L142

==============================
https://github.com/sail-sg/ptp
==============================

Found 3 times
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
https://github.com/sail-sg/ptp/blob/298b60a1d7fbcc057955129c8284c0e3b932253a/src/blip_src/data/__init__.py#L98
https://github.com/sail-sg/ptp/blob/298b60a1d7fbcc057955129c8284c0e3b932253a/src/blip_src/data/init_data_concated_pred_refined.py#L93
https://github.com/sail-sg/ptp/blob/298b60a1d7fbcc057955129c8284c0e3b932253a/src/blip_src/data/init_data_concated_pred_tsv.py#L93

====================================
https://github.com/XYPB/CondFoleyGen
====================================

Found 27 times
DataLoader(self.datasets['train'], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=self.worker_init_fn,
                          shuffle=True)
DataLoader(self.datasets['validation'], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=self.worker_init_fn)
DataLoader(self.datasets['test'], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=self.worker_init_fn)
DataLoader(datasets['train'], batch_size=8, num_workers=8)
DataLoader(datasets['valid'], batch_size=8, num_workers=8)
DataLoader(datasets['test'], batch_size=8, num_workers=8)
DataLoader(
            datasets['train'], batch_sizes['train'], shuffle=train_sampler is None,
            sampler=train_sampler, num_workers=cfg.training.num_workers, pin_memory=True)
DataLoader(
            datasets['valid'], batch_sizes['test'], shuffle=False,
            sampler=valid_sampler, num_workers=cfg.training.num_workers, pin_memory=True)
DataLoader(
            datasets['test'], batch_sizes['test'], shuffle=False,
            sampler=test_sampler, num_workers=cfg.training.num_workers, pin_memory=True)
DataLoader(
            val_subset, batch_sizes['test'], shuffle=False,
            sampler=valid_rand_aud_sampler, num_workers=cfg.training.num_workers, pin_memory=True)
DataLoader(
            val_subset, batch_sizes['test'], shuffle=False,
            sampler=valid_rand_rgb_sampler, num_workers=cfg.training.num_workers, pin_memory=True)
DataLoader(
            val_subset, batch_sizes['test'], shuffle=False,
            sampler=valid_perm_batch_sampler, num_workers=cfg.training.num_workers, pin_memory=True)
DataLoader(dset, cfg.sampler.batch_size, sampler=sampler, num_workers=num_workers,
                                     pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
            TSNDataSet(args.input_dir, args.test_list,
                    modality=args.modality,
                    image_tmpl="img_{:05d}.jpg" if args.modality == 'RGB' else args.flow_prefix+"flow_{}_{:05d}.jpg",
                    transform=torchvision.transforms.Compose([
                        cropping, Stack(roll=True),
                        ToTorchFormatTensor(div=False),
                        GroupNormalize(net.input_mean, net.input_std),
                    ])),
            batch_size=1, shuffle=False,
            num_workers=1, pin_memory=True)
DataLoader(ghit, batch_size=args.batch_size,
                             shuffle=False, num_workers=args.worker, drop_last=False)
DataLoader(datasets['test'], batch_size=cfg.batch_size,
                           num_workers=cfg.num_workers, pin_memory=True)
DataLoader(testset, batch_size=cfg.batch_size,
                        num_workers=cfg.num_workers, pin_memory=True)
DataLoader(feat_loading_dset, batch_size, num_workers=num_workers, shuffle=True)
DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False)
DataLoader(
        val_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False)
DataLoader(
        test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False)
DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False)
DataLoader(
        val_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False)
DataLoader(
        test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False)
DataLoader(
        dataset, 
        batch_size=batch_size, 
        shuffle=shuffle, 
        num_workers=args.num_workers, 
        pin_memory=True, 
        drop_last=drop_last)
DataLoader(train_set, batch_size=args.batch_size, num_workers=4)
DataLoader(test_set, batch_size=1)
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L178
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L183
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L187
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/SparseSync/scripts/make_fixed_offset.py#L41
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/SparseSync/scripts/make_fixed_offset.py#L42
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/SparseSync/scripts/make_fixed_offset.py#L43
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/SparseSync/scripts/train_utils.py#L122
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/SparseSync/scripts/train_utils.py#L125
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/SparseSync/scripts/train_utils.py#L128
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/SparseSync/scripts/train_utils.py#L131
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/SparseSync/scripts/train_utils.py#L134
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/SparseSync/scripts/train_utils.py#L137
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/evaluation/generate_samples.py#L140
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/feature_extraction/bn_inception/extract_feature.py#L146
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/feature_extraction/r2plus1d_18/extract_feature.py#L131
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/specvqgan/modules/losses/vggishish/predict.py#L37
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/specvqgan/modules/losses/vggishish/predict_gh.py#L36
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/specvqgan/modules/misc/feat_cluster.py#L64
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/specvqgan/onset_baseline/main.py#L69
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/specvqgan/onset_baseline/main.py#L78
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/specvqgan/onset_baseline/main.py#L172
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/specvqgan/onset_baseline/main_cxav.py#L69
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/specvqgan/onset_baseline/main_cxav.py#L78
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/specvqgan/onset_baseline/main_cxav.py#L172
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/specvqgan/onset_baseline/utils/torch_utils.py#L69
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/vocoder/scripts/train.py#L98
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/vocoder/scripts/train.py#L99

==================================
https://github.com/salesforce/ULIP
==================================

Found 6 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True,
        collate_fn=customized_collate_fn)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=(val_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=val_sampler, drop_last=False)
torch.utils.data.DataLoader(
        test_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=None, drop_last=False
    )
torch.utils.data.DataLoader(dataset,
                                                 batch_size=batch_size,
                                                 num_workers=int(dataloader_cfg.num_workers),
                                                 worker_init_fn=worker_init_fn,
                                                 drop_last=split == 'train',
                                                 sampler=sampler,
                                                 collate_fn=collate_fn, 
                                                 pin_memory=True
                                                 )
torch.utils.data.DataLoader(dataset,
                                                 batch_size=batch_size,
                                                 num_workers=int(dataloader_cfg.num_workers),
                                                 worker_init_fn=worker_init_fn,
                                                 drop_last=split == 'train',
                                                 shuffle=shuffle,
                                                 collate_fn=collate_fn,
                                                 pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=B, num_workers=1
                                                 )
https://github.com/salesforce/ULIP/blob/48d8d00b1cdb2aee79005817a202816f1c521911/main.py#L189
https://github.com/salesforce/ULIP/blob/48d8d00b1cdb2aee79005817a202816f1c521911/main.py#L194
https://github.com/salesforce/ULIP/blob/48d8d00b1cdb2aee79005817a202816f1c521911/main.py#L459
https://github.com/salesforce/ULIP/blob/48d8d00b1cdb2aee79005817a202816f1c521911/models/pointnext/PointNeXt/openpoints/dataset/build.py#L80
https://github.com/salesforce/ULIP/blob/48d8d00b1cdb2aee79005817a202816f1c521911/models/pointnext/PointNeXt/openpoints/dataset/build.py#L90
https://github.com/salesforce/ULIP/blob/48d8d00b1cdb2aee79005817a202816f1c521911/models/pointnext/PointNeXt/openpoints/models/layers/kmeans.py#L81

===============================================
https://github.com/hellomuffin/exif-as-language
===============================================

Found 1 times
DataLoader(
            self.train_dataset, 
            batch_size = self.training_config["batch_size"],
            shuffle=True, 
            num_workers=os.cpu_count()
        )
https://github.com/hellomuffin/exif-as-language/blob/6706f0d486afc56f5d7ecf9015a645debe559bc0/train.py#L51

=====================================
https://github.com/yuxiaochen1103/FDT
=====================================

Found 3 times
torch.utils.data.DataLoader(dataset, batch_size=cfg_dataset.batch_size,
                                               num_workers=cfg_dataset.num_workers,
                                               pin_memory=True,
                                               drop_last=True,
                                               collate_fn=dataset.collect_fn)
torch.utils.data.DataLoader(dataset,
                                            batch_size=512,
                                            num_workers=8,
                                            pin_memory=True,
                                            drop_last=False,
                                            sampler=sampler,
                                            collate_fn=dataset.collect_fn)
torch.utils.data.DataLoader(dataset,
                                            batch_size=64,
                                            sampler=sampler,
                                            num_workers=8,
                                            pin_memory=True,
                                            drop_last=False)
https://github.com/yuxiaochen1103/FDT/blob/ccf69830c1ee323bc66744da7dfa022da0bc70b2/prototype/data/clip_dataloader.py#L54
https://github.com/yuxiaochen1103/FDT/blob/ccf69830c1ee323bc66744da7dfa022da0bc70b2/prototype/data/coco_dataloader.py#L24
https://github.com/yuxiaochen1103/FDT/blob/ccf69830c1ee323bc66744da7dfa022da0bc70b2/prototype/data/img_cls_dataloader.py#L18

=================================
https://github.com/penghu-cs/RONO
=================================

Found 2 times
torch.utils.data.DataLoader(test_set, batch_size=1, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(train_set, batch_size=args.batch_size, shuffle=True, num_workers=0, drop_last=False)
https://github.com/penghu-cs/RONO/blob/0580fdf84630c858a9214935f327fc8a6f5d1857/evaluate_retrieval_mnist.py#L28
https://github.com/penghu-cs/RONO/blob/0580fdf84630c858a9214935f327fc8a6f5d1857/open_source_train_mnist.py#L51

======================================
https://github.com/OpenNLPLab/FNAC_AVL
======================================

Found 3 times
DataLoader(testdataset, batch_size=args.batch_size, shuffle=False, num_workers=args.workers)
torch.utils.data.DataLoader(
        traindataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=False, sampler=train_sampler, drop_last=True,
        persistent_workers=args.workers > 0)
torch.utils.data.DataLoader(
        testdataset, batch_size=1, shuffle=False,
        num_workers=args.workers, pin_memory=False, drop_last=False,
        persistent_workers=args.workers > 0)
https://github.com/OpenNLPLab/FNAC_AVL/blob/0a0ca78aa4b263fde37af85c82f4f6812853c6de/test.py#L95
https://github.com/OpenNLPLab/FNAC_AVL/blob/0a0ca78aa4b263fde37af85c82f4f6812853c6de/train.py#L154
https://github.com/OpenNLPLab/FNAC_AVL/blob/0a0ca78aa4b263fde37af85c82f4f6812853c6de/train.py#L165

=====================================
https://github.com/Xeaver/EmotionCLIP
=====================================

Found 5 times
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=False,
        drop_last=False,
        num_workers=args.dataloader_workers,
        pin_memory=True
    )
DataLoader(
        dataset=train_dataset,
        batch_size=args.batch_size,
        sampler=train_sampler,
        shuffle=(train_sampler is None),
        drop_last=True,
        num_workers=args.train_loader_workers,
        pin_memory=args.pin_memory
    )
DataLoader(
            dataset=finetune_dataset,
            batch_size=args.batch_size,
            sampler=None,
            shuffle=False,
            drop_last=False,
            num_workers=args.val_loader_workers,
            pin_memory=args.pin_memory
        )
DataLoader(
            dataset=val_dataset,
            batch_size=args.batch_size,
            sampler=None,
            shuffle=False,
            drop_last=False,
            num_workers=args.val_loader_workers,
            pin_memory=args.pin_memory
        )
torch.utils.data.DataLoader(dataset,batch_size=batch_size,num_workers=num_workers)
https://github.com/Xeaver/EmotionCLIP/blob/ce193c740f79daf8467913541967a2c3be5cbb78/linear_eval.py#L77
https://github.com/Xeaver/EmotionCLIP/blob/ce193c740f79daf8467913541967a2c3be5cbb78/main.py#L130
https://github.com/Xeaver/EmotionCLIP/blob/ce193c740f79daf8467913541967a2c3be5cbb78/main.py#L234
https://github.com/Xeaver/EmotionCLIP/blob/ce193c740f79daf8467913541967a2c3be5cbb78/main.py#L243
https://github.com/Xeaver/EmotionCLIP/blob/ce193c740f79daf8467913541967a2c3be5cbb78/preprocessing/yolo_additions/detect_human.py#L93

===============================
https://github.com/mlvlab/MELTR
===============================

Found 18 times
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            sampler=self.train_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=batch_size if batch_size is not None else self.batch_size,
            sampler=self.val_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            sampler=self.test_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=64,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(
            text_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        sample_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            sample_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
            sample_dset,
            batch_size=1,
            num_workers=pl_module.hparams.config["num_workers"],
            sampler=dist_sampler,
            pin_memory=True,
            collate_fn=functools.partial(
                sample_dset.collate,
                mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
            ),
        )
DataLoader(
        youcook_dataset,
        batch_size=args.batch_size // args.world_size,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True
    )
DataLoader(
        youcook_retrieval,
        sampler=test_retrieval_sampler,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        pin_memory=False,
    )
DataLoader(
        youcook_caption,
        sampler=test_caption_sampler,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        pin_memory=False,
    )
DataLoader(
        msrvtt_dataset,
        batch_size=args.batch_size // args.world_size,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        msrvtt_testset,
        sampler=test_msrvtt_sampler,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        drop_last=False,
    )
T.utils.data.DataLoader(Dataset_QAMC(args, split), 
                                            batch_size=args['size_batch'], shuffle=(split=='train'), 
                                            num_workers=32, pin_memory=True, drop_last=True)
T.utils.data.DataLoader(Dataset_QAOE(args, split), 
                                            batch_size=args['size_batch'], shuffle=(split=='train'), 
                                            num_workers=32, pin_memory=True, drop_last=True)
T.utils.data.DataLoader(Dataset_Retrieval(args, split), 
                                            batch_size=args['size_batch'], shuffle=(split=='train'), 
                                            num_workers=32, pin_memory=True)
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/allinone/AllInOne/datamodules/datamodule_base.py#L164
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/allinone/AllInOne/datamodules/datamodule_base.py#L175
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/allinone/AllInOne/datamodules/datamodule_base.py#L186
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/allinone/AllInOne/datamodules/multitask_datamodule.py#L55
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/allinone/AllInOne/datamodules/multitask_datamodule.py#L65
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/allinone/AllInOne/datamodules/multitask_datamodule.py#L75
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/allinone/AllInOne/modules/objectives.py#L876
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/allinone/AllInOne/modules/objectives.py#L892
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/allinone/AllInOne/modules/objectives.py#L1010
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/allinone/AllInOne/modules/objectives.py#L1132
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/univl/main.py#L285
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/univl/main.py#L310
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/univl/main.py#L329
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/univl/main.py#L389
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/univl/main.py#L429
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/violet/main_qamc.py#L235
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/violet/main_qaoe.py#L222
https://github.com/mlvlab/MELTR/blob/5d653e56d64fc3e89dd508ed789619a02d46cb4d/violet/main_retrieval.py#L199

===============================
https://github.com/hhc1997/MSCN
===============================

Found 7 times
DataLoader(
            dataset=dset,
            batch_size=batch_size,
            shuffle=False if samper_seq else True,
            pin_memory=True,
            collate_fn=collate_fn,
            num_workers=workers,
        )
DataLoader(
            dataset=dset,
            batch_size=batch_size,
            shuffle=False if samper_seq else True,
            pin_memory=True,
            collate_fn=collate_fn,
            num_workers=workers,
        )
DataLoader(
            dataset=dset,
            batch_size=batch_size,
            shuffle=False,
            pin_memory=True,
            collate_fn=collate_fn,
            num_workers=workers,
        )
DataLoader(
            dataset=dset,
            batch_size=batch_size,
            shuffle=True,
            pin_memory=True,
            collate_fn=collate_fn,
            num_workers=workers,
        )
DataLoader(
            dataset=dset,
            batch_size=batch_size,
            shuffle=True,
            pin_memory=True,
            collate_fn=collate_fn_meta_C,
            num_workers=workers,
        )
DataLoader(
            dataset=dset,
            batch_size=batch_size,
            shuffle=False,
            pin_memory=True,
            collate_fn=collate_fn,
            num_workers=workers,
        )
DataLoader(
        dataset=dset_c,
        batch_size=batch_size,
        shuffle=True,
        pin_memory=True,
        collate_fn=collate_fn,
        num_workers=workers,
    )
https://github.com/hhc1997/MSCN/blob/19f133ba6e83ebe9057d2880771f8d2c384e8eaa/data.py#L432
https://github.com/hhc1997/MSCN/blob/19f133ba6e83ebe9057d2880771f8d2c384e8eaa/data.py#L444
https://github.com/hhc1997/MSCN/blob/19f133ba6e83ebe9057d2880771f8d2c384e8eaa/data.py#L457
https://github.com/hhc1997/MSCN/blob/19f133ba6e83ebe9057d2880771f8d2c384e8eaa/data.py#L468
https://github.com/hhc1997/MSCN/blob/19f133ba6e83ebe9057d2880771f8d2c384e8eaa/data.py#L478
https://github.com/hhc1997/MSCN/blob/19f133ba6e83ebe9057d2880771f8d2c384e8eaa/data.py#L488
https://github.com/hhc1997/MSCN/blob/19f133ba6e83ebe9057d2880771f8d2c384e8eaa/data.py#L522

==========================================
https://github.com/postech-ami/Sound2Scene
==========================================

Found 7 times
DataLoader(train_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(test_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=4)
DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False, num_workers=4)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            shuffle=False,
            worker_init_fn=seed_worker,
            **loader_kwargs
        )
DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=shuffle,
            sampler=sampler,
            worker_init_fn=seed_worker if use_checkpointable_sampler else None,
            **loader_kwargs
        )
torch.utils.data.DataLoader(
            dataset=training_set,
            sampler=training_set_sampler,
            batch_size=batch_size // num_gpus,
            **data_loader_kwargs,
        )
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/test.py#L92
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/test.py#L93
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/train.py#L175
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/train.py#L176
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/data_utils/utils.py#L784
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/data_utils/utils.py#L820
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/stylegan2_ada_pytorch/training/training_loop.py#L202

===========================================================
https://github.com/muzairkhattak/multimodal-prompt-learning
===========================================================

Found 1 times
torch.utils.data.DataLoader(
        DatasetWrapper(cfg, dataset_input, transform=tfm_train, is_train=False),
        batch_size=cfg.DATALOADER.TRAIN_X.BATCH_SIZE,
        sampler=None,
        shuffle=False,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        drop_last=False,
        pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA),
    )
https://github.com/muzairkhattak/multimodal-prompt-learning/blob/69bce21ae8eda80ad6187534b2dce09cf6c59e17/lpclip/feat_extractor.py#L132

==============================
https://github.com/ppanzx/CHAN
==============================

Found 2 times
torch.utils.data.DataLoader(dataset=dset,
                                                  batch_size=batch_size,
                                                  shuffle=shuffle,
                                                  pin_memory=True,
                                                  collate_fn=collate_fn,
                                                  num_workers=num_workers,
                                                  drop_last=drop_last)
torch.utils.data.DataLoader(dataset=dset,
                                                  batch_size=batch_size,
                                                  shuffle=shuffle,
                                                  pin_memory=True,
                                                  collate_fn=collate_fn,
                                                  num_workers=num_workers,
                                                  drop_last=drop_last)
https://github.com/ppanzx/CHAN/blob/7a5075e116d049764a02d83437b1e7b416ecabfa/lib/datasets/image_caption_bert.py#L165
https://github.com/ppanzx/CHAN/blob/7a5075e116d049764a02d83437b1e7b416ecabfa/lib/datasets/image_caption_bigru.py#L170

=================================
https://github.com/ccq195/UNIReID
=================================

Found 8 times
DataLoader(train_set,
                                          batch_size=args.batch_size,
                                          sampler=RandomIdentitySampler(
                                              dataset.train, args.batch_size,
                                              args.num_instance),
                                          num_workers=num_workers,
                                          collate_fn=collate)
DataLoader(train_set,
                                      batch_size=args.batch_size,
                                      shuffle=True,
                                      num_workers=num_workers,
                                      collate_fn=collate)
DataLoader(val_img_set,
                                    batch_size=args.batch_size,
                                    shuffle=False,
                                    num_workers=num_workers)
DataLoader(val_txt_set,
                                    batch_size=args.batch_size,
                                    shuffle=False,
                                    num_workers=num_workers)
DataLoader(val_sketch_set,
                                    batch_size=args.batch_size,
                                    shuffle=False,
                                    num_workers=num_workers)
DataLoader(test_img_set,
                                     batch_size=args.test_batch_size,
                                     shuffle=False,
                                     num_workers=num_workers)
DataLoader(test_txt_set,
                                     batch_size=args.test_batch_size,
                                     shuffle=False,
                                     num_workers=num_workers)
DataLoader(test_sketch_set,
                                    batch_size=args.batch_size,
                                    shuffle=False,
                                    num_workers=num_workers)
https://github.com/ccq195/UNIReID/blob/2eb8683dc13b53cacecb97fb450efd5df33f47da/datasets/build.py#L139
https://github.com/ccq195/UNIReID/blob/2eb8683dc13b53cacecb97fb450efd5df33f47da/datasets/build.py#L149
https://github.com/ccq195/UNIReID/blob/2eb8683dc13b53cacecb97fb450efd5df33f47da/datasets/build.py#L169
https://github.com/ccq195/UNIReID/blob/2eb8683dc13b53cacecb97fb450efd5df33f47da/datasets/build.py#L173
https://github.com/ccq195/UNIReID/blob/2eb8683dc13b53cacecb97fb450efd5df33f47da/datasets/build.py#L177
https://github.com/ccq195/UNIReID/blob/2eb8683dc13b53cacecb97fb450efd5df33f47da/datasets/build.py#L200
https://github.com/ccq195/UNIReID/blob/2eb8683dc13b53cacecb97fb450efd5df33f47da/datasets/build.py#L204
https://github.com/ccq195/UNIReID/blob/2eb8683dc13b53cacecb97fb450efd5df33f47da/datasets/build.py#L208

==========================================================
https://github.com/sukun1045/video-physics-sound-diffusion
==========================================================

Found 7 times
torch.utils.data.DataLoader(
    eval_dataset,
    batch_size=1,
    shuffle=None,
    drop_last=cfg.dataset.test.drop_last,
    num_workers=cfg.workers,
    sampler=None
)
torch.utils.data.DataLoader(
    eval_dataset,
    batch_size=1,
    shuffle=None,
    drop_last=cfg.dataset.test.drop_last,
    num_workers=cfg.workers,
    sampler=None
)
torch.utils.data.DataLoader(
    eval_dataset,
    batch_size=1,
    shuffle=None,
    drop_last=cfg.dataset.test.drop_last,
    num_workers=cfg.workers,
    sampler=None
)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=batch_size,
        shuffle=(train_sampler is None),
        drop_last=cfg.dataset.train.drop_last,
        num_workers=cfg.workers,
        pin_memory=True,
        sampler=train_sampler
    )
torch.utils.data.DataLoader(
        eval_dataset,
        batch_size=1,
        shuffle=(eval_sampler is None),
        drop_last=cfg.dataset.test.drop_last,
        num_workers=cfg.workers,
        sampler=eval_sampler
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=batch_size,
        shuffle=(train_sampler is None),
        drop_last=cfg.dataset.train.drop_last,
        num_workers=cfg.workers,
        pin_memory=True,
        sampler=train_sampler
    )
torch.utils.data.DataLoader(
        eval_dataset,
        batch_size=1,
        shuffle=(eval_sampler is None),
        drop_last=cfg.dataset.test.drop_last,
        num_workers=cfg.workers,
        sampler=eval_sampler
    )
https://github.com/sukun1045/video-physics-sound-diffusion/blob/b8654f60e8d767395f72c5652c81dd8eb8b06a54/video-physics-sound-diffusion/tools/extract_latents.py#L89
https://github.com/sukun1045/video-physics-sound-diffusion/blob/b8654f60e8d767395f72c5652c81dd8eb8b06a54/video-physics-sound-diffusion/tools/generate_samples.py#L90
https://github.com/sukun1045/video-physics-sound-diffusion/blob/b8654f60e8d767395f72c5652c81dd8eb8b06a54/video-physics-sound-diffusion/tools/sound_residual_infer.py#L82
https://github.com/sukun1045/video-physics-sound-diffusion/blob/b8654f60e8d767395f72c5652c81dd8eb8b06a54/video-physics-sound-diffusion/tools/sound_residual_train.py#L162
https://github.com/sukun1045/video-physics-sound-diffusion/blob/b8654f60e8d767395f72c5652c81dd8eb8b06a54/video-physics-sound-diffusion/tools/sound_residual_train.py#L172
https://github.com/sukun1045/video-physics-sound-diffusion/blob/b8654f60e8d767395f72c5652c81dd8eb8b06a54/video-physics-sound-diffusion/tools/train.py#L157
https://github.com/sukun1045/video-physics-sound-diffusion/blob/b8654f60e8d767395f72c5652c81dd8eb8b06a54/video-physics-sound-diffusion/tools/train.py#L167

===================================
https://github.com/hssip/FashionSAP
===================================

Found 1 times
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
https://github.com/hssip/FashionSAP/blob/f98c70d4ff7cdbb4231c2251edbc6db20edadba6/dataset/__init__.py#L71

==============================
https://github.com/IIGROUP/MAP
==============================

Found 13 times
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            sampler=self.train_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=batch_size if batch_size is not None else self.batch_size,
            sampler=self.val_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            sampler=self.test_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            sampler=self.train_sampler,
            num_workers=self.num_workers,
            pin_memory=True,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.batch_size,
            sampler=self.val_sampler,
            num_workers=self.num_workers,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=16,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(
            text_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/datamodules/datamodule_base.py#L160
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/datamodules/datamodule_base.py#L171
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/datamodules/datamodule_base.py#L182
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/datamodules/f30k_caption_karpathy_datamodule.py#L22
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/datamodules/f30k_caption_karpathy_datamodule.py#L33
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/datamodules/f30k_caption_karpathy_datamodule.py#L44
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/datamodules/multitask_datamodule.py#L55
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/datamodules/multitask_datamodule.py#L65
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/datamodules/multitask_datamodule.py#L75
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/datamodules/tdiuc_datamodule.py#L54
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/datamodules/tdiuc_datamodule.py#L64
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/modules/objectives.py#L714
https://github.com/IIGROUP/MAP/blob/853ce8ebcdaa026c4243342a8334b274eb56229c/map/modules/objectives.py#L730

======================================
https://github.com/Galaxy922/GCFAggMVC
======================================

Found 2 times
DataLoader(
            dataset,
            batch_size=256,
            shuffle=False,
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=True,
        drop_last=True,
    )
https://github.com/Galaxy922/GCFAggMVC/blob/a0e68cc7448914d8e664a5619344c8283f648958/metric.py#L59
https://github.com/Galaxy922/GCFAggMVC/blob/a0e68cc7448914d8e664a5619344c8283f648958/train.py#L86

================================
https://github.com/xu5zhao/BiCro
================================

Found 5 times
torch.utils.data.DataLoader(
            dataset=dset,
            batch_size=batch_size,
            shuffle=True,
            pin_memory=True,
            collate_fn=collate_fn,
            num_workers=workers,
        )
torch.utils.data.DataLoader(
            dataset=labeled_dataset,
            batch_size=batch_size,
            shuffle=True,
            pin_memory=True,
            collate_fn=collate_fn,
            num_workers=workers,
        )
torch.utils.data.DataLoader(
            dataset=unlabeled_dataset,
            batch_size=batch_size,
            shuffle=True,
            pin_memory=True,
            collate_fn=collate_fn,
            num_workers=workers,
        )
torch.utils.data.DataLoader(
            dataset=dset,
            batch_size=batch_size,
            shuffle=False,
            pin_memory=True,
            collate_fn=collate_fn,
            num_workers=workers,
        )
torch.utils.data.DataLoader(
            dataset=dset,
            batch_size=batch_size,
            shuffle=False,
            pin_memory=True,
            collate_fn=collate_fn,
            num_workers=workers,
        )
https://github.com/xu5zhao/BiCro/blob/02316315d8be3da798f150e51c3d6315bb1b9234/data.py#L268
https://github.com/xu5zhao/BiCro/blob/02316315d8be3da798f150e51c3d6315bb1b9234/data.py#L289
https://github.com/xu5zhao/BiCro/blob/02316315d8be3da798f150e51c3d6315bb1b9234/data.py#L308
https://github.com/xu5zhao/BiCro/blob/02316315d8be3da798f150e51c3d6315bb1b9234/data.py#L321
https://github.com/xu5zhao/BiCro/blob/02316315d8be3da798f150e51c3d6315bb1b9234/data.py#L331

==============================
https://github.com/iigroup/scl
==============================

Found 14 times
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
                self.train_dataset,
                batch_size=self.batch_size,
                sampler=self.train_sampler,
                num_workers=self.num_workers,
                collate_fn=self.collate,
            )
DataLoader(
                self.train_video_dataset,
                batch_size=self.video_bs,
                sampler=self.train_video_sampler,
                num_workers=self.num_workers,
                collate_fn=self.video_collate,
            )
DataLoader(
                self.train_dataset,
                batch_size=self.batch_size,
                sampler=self.train_sampler,
                num_workers=self.num_workers,
                collate_fn=self.collate,
            )
DataLoader(
                self.train_video_dataset,
                batch_size=self.video_bs,
                sampler=self.train_video_sampler,
                num_workers=self.num_workers,
                collate_fn=self.video_collate,
            )
DataLoader(
                self.val_dataset,
                batch_size=batch_size if batch_size is not None else self.batch_size,
                sampler=self.val_sampler,
                num_workers=self.num_workers,
                collate_fn=self.collate,
            )
DataLoader(
                self.val_video_dataset,
                batch_size=self.video_bs,
                sampler=self.val_video_sampler,
                num_workers=self.num_workers,
                collate_fn=self.video_collate,
            )
DataLoader(
                self.test_dataset,
                batch_size=self.batch_size,
                sampler=self.test_sampler,
                num_workers=self.num_workers,
                collate_fn=self.collate,
            )
DataLoader(
                self.test_video_dataset,
                batch_size=self.video_bs,
                sampler=self.test_video_sampler,
                num_workers=self.num_workers,
                collate_fn=self.video_collate,
            )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=dm.mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=64,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(
            text_dset.collate,
            mlm_collator=dm.mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=dm.mlm_collator,
        ),
    )
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/datamodules/datamodule_base.py#L145
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/datamodules/datamodule_base.py#L156
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/datamodules/datamodule_base.py#L167
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/datamodules/multitask_datamodule.py#L85
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/datamodules/multitask_datamodule.py#L94
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/datamodules/multitask_datamodule.py#L103
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/datamodules/multitask_datamodule.py#L110
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/datamodules/multitask_datamodule.py#L122
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/datamodules/multitask_datamodule.py#L131
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/datamodules/multitask_datamodule.py#L142
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/datamodules/multitask_datamodule.py#L151
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/modules/objectives.py#L597
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/modules/objectives.py#L667
https://github.com/iigroup/scl/blob/cd0d81985536c5ed1f493a02ec2ba73e8a5c3e4e/scl/modules/objectives.py#L683

====================================
https://github.com/RitaRamo/smallcap
====================================

Found 1 times
torch.utils.data.DataLoader(
        EvalDataset(
            args.dataset_splits, 
            args.images_dir,
            args.images_names,
            clip_retrieval_feature_extractor, 
            args.split), 
        batch_size=1, 
        shuffle=True,  
        num_workers=0, 
        pin_memory=True
    )
https://github.com/RitaRamo/smallcap/blob/19cc4f4e5972c70fde16c8857b14c96e5492cb30/src/get_indexed_caps.py#L79

========================================
https://github.com/DanielTrosten/DeepMVC
========================================

Found 2 times
DataLoader(**dataloader_kwargs)
th.utils.data.DataLoader(dataset, batch_size=len(dataset))
https://github.com/DanielTrosten/DeepMVC/blob/39ffec55bab41fa376927dc4b4fc65e5967a48be/src/data/data_module.py#L107
https://github.com/DanielTrosten/DeepMVC/blob/39ffec55bab41fa376927dc4b4fc65e5967a48be/src/data/torchvision_datasets.py#L24

=================================================================
https://github.com/facebookresearch/novel-view-acoustic-synthesis
=================================================================

Found 3 times
torch.utils.data.DataLoader(test_set, num_workers=1, batch_size=args.batch_size,
                                                   pin_memory=True, persistent_workers=True, worker_init_fn=seed_worker)
torch.utils.data.DataLoader(train_set, shuffle=True, num_workers=args.num_worker,
                                                    pin_memory=True, batch_size=args.batch_size, persistent_workers=True)
torch.utils.data.DataLoader(val_set, num_workers=args.num_worker, batch_size=args.batch_size,
                                                  pin_memory=True, persistent_workers=True)
https://github.com/facebookresearch/novel-view-acoustic-synthesis/blob/62d1c04e825aa86ba918918bd0ad84632a7f5f86/nvas/trainer.py#L245
https://github.com/facebookresearch/novel-view-acoustic-synthesis/blob/62d1c04e825aa86ba918918bd0ad84632a7f5f86/nvas/trainer.py#L249
https://github.com/facebookresearch/novel-view-acoustic-synthesis/blob/62d1c04e825aa86ba918918bd0ad84632a7f5f86/nvas/trainer.py#L252

=====================================================
https://github.com/fanyunfeng-bit/Modal-Imbalance-PMR
=====================================================

Found 10 times
DataLoader(train_dataset, batch_size=args.batch_size,
                                  shuffle=True, pin_memory=False)
DataLoader(test_dataset, batch_size=args.batch_size,
                                 shuffle=False, pin_memory=False)
DataLoader(train_dataset, batch_size=args.batch_size,
                                  shuffle=True, pin_memory=False)
DataLoader(test_dataset, batch_size=args.batch_size,
                                 shuffle=False, pin_memory=False)
DataLoader(train_dataset, batch_size=args.batch_size,
                                  shuffle=True, pin_memory=False)
DataLoader(test_dataset, batch_size=args.batch_size,
                                 shuffle=False, pin_memory=False)
DataLoader(train_dataset, batch_size=args.batch_size,
                                  shuffle=True, pin_memory=False)
DataLoader(test_dataset, batch_size=args.batch_size,
                                 shuffle=False, pin_memory=False)
DataLoader(val_dataset, batch_size=args.batch_size,
                                    shuffle=False, pin_memory=False)
DataLoader(val_dataset, batch_size=args.batch_size,
                                    shuffle=True, pin_memory=False)
https://github.com/fanyunfeng-bit/Modal-Imbalance-PMR/blob/3615e48983555089b0e693380087617c3797a641/finetuning_classifier.py#L191
https://github.com/fanyunfeng-bit/Modal-Imbalance-PMR/blob/3615e48983555089b0e693380087617c3797a641/finetuning_classifier.py#L194
https://github.com/fanyunfeng-bit/Modal-Imbalance-PMR/blob/3615e48983555089b0e693380087617c3797a641/main_CE_test_grad.py#L417
https://github.com/fanyunfeng-bit/Modal-Imbalance-PMR/blob/3615e48983555089b0e693380087617c3797a641/main_CE_test_grad.py#L420
https://github.com/fanyunfeng-bit/Modal-Imbalance-PMR/blob/3615e48983555089b0e693380087617c3797a641/main_CE_test_grad_film.py#L460
https://github.com/fanyunfeng-bit/Modal-Imbalance-PMR/blob/3615e48983555089b0e693380087617c3797a641/main_CE_test_grad_film.py#L463
https://github.com/fanyunfeng-bit/Modal-Imbalance-PMR/blob/3615e48983555089b0e693380087617c3797a641/main_Prototype_grad.py#L494
https://github.com/fanyunfeng-bit/Modal-Imbalance-PMR/blob/3615e48983555089b0e693380087617c3797a641/main_Prototype_grad.py#L497
https://github.com/fanyunfeng-bit/Modal-Imbalance-PMR/blob/3615e48983555089b0e693380087617c3797a641/main_Prototype_grad.py#L501
https://github.com/fanyunfeng-bit/Modal-Imbalance-PMR/blob/3615e48983555089b0e693380087617c3797a641/main_Prototype_grad.py#L504

=====================================================
https://github.com/facebookresearch/chat2map-official
=====================================================

Found 1 times
DataLoader(dataset=datasets[split],
                                            batch_size=passive_mapping_cfg.batch_size,
                                            shuffle=(split=='train'),
                                            pin_memory=True,
                                            num_workers=passive_mapping_cfg.num_workers
                                            )
https://github.com/facebookresearch/chat2map-official/blob/d95fa9caf2b6488f79f9da8a2bbdd5f21c46144e/chat2map/mapping/passive_mapping/passive_mapping_trainer.py#L224

===================================
https://github.com/kodenii/NUWA-LIP
===================================

Found 5 times
DataLoader(train_dataset, sampler=train_sampler,
                                      batch_size=args.local_train_batch_size,
                                      num_workers=args.num_workers)
DataLoader(eval_dataset, sampler=eval_sampler,
                                     batch_size=args.local_eval_batch_size,
                                     num_workers=args.num_workers, pin_memory=True)
DataLoader(eval_dataset, sampler=eval_sampler, batch_size=args.local_eval_batch_size,
                                     num_workers=args.num_workers, pin_memory=True)
DataLoader(dataset, num_workers=num_workers, collate_fn=identity, batch_size=1)
DataLoader(dataset, num_workers=num_workers, batch_size=batch_size, collate_fn=lambda x: x)
https://github.com/kodenii/NUWA-LIP/blob/825f7843446a5132cf84f281cca3dc5a29a0747b/finetune.py#L138
https://github.com/kodenii/NUWA-LIP/blob/825f7843446a5132cf84f281cca3dc5a29a0747b/finetune.py#L141
https://github.com/kodenii/NUWA-LIP/blob/825f7843446a5132cf84f281cca3dc5a29a0747b/finetune.py#L189
https://github.com/kodenii/NUWA-LIP/blob/825f7843446a5132cf84f281cca3dc5a29a0747b/wutils.py#L313
https://github.com/kodenii/NUWA-LIP/blob/825f7843446a5132cf84f281cca3dc5a29a0747b/wutils.py#L337

===================================
https://github.com/feiyuchen7/M3NET
===================================

Found 6 times
DataLoader(trainset,
                              batch_size=batch_size,
                              sampler=train_sampler,
                              collate_fn=trainset.collate_fn,
                              num_workers=num_workers,
                              pin_memory=pin_memory)
DataLoader(trainset,
                              batch_size=batch_size,
                              sampler=valid_sampler,
                              collate_fn=trainset.collate_fn,
                              num_workers=num_workers,
                              pin_memory=pin_memory)
DataLoader(testset,
                             batch_size=batch_size,
                             collate_fn=testset.collate_fn,
                             num_workers=num_workers,
                             pin_memory=pin_memory)
DataLoader(trainset,
                              batch_size=batch_size,
                              collate_fn=trainset.collate_fn,
                              num_workers=num_workers,
                              pin_memory=pin_memory, worker_init_fn=_init_fn)
DataLoader(trainset,
                              batch_size=batch_size,
                              sampler=valid_sampler,
                              collate_fn=trainset.collate_fn,
                              num_workers=num_workers,
                              pin_memory=pin_memory)
DataLoader(testset,
                             batch_size=batch_size,
                             collate_fn=testset.collate_fn,
                             num_workers=num_workers,
                             pin_memory=pin_memory, worker_init_fn=_init_fn)
https://github.com/feiyuchen7/M3NET/blob/4d0fa88cd4f92c72b053527e877763f54e29ccb2/train.py#L41
https://github.com/feiyuchen7/M3NET/blob/4d0fa88cd4f92c72b053527e877763f54e29ccb2/train.py#L48
https://github.com/feiyuchen7/M3NET/blob/4d0fa88cd4f92c72b053527e877763f54e29ccb2/train.py#L56
https://github.com/feiyuchen7/M3NET/blob/4d0fa88cd4f92c72b053527e877763f54e29ccb2/train.py#L69
https://github.com/feiyuchen7/M3NET/blob/4d0fa88cd4f92c72b053527e877763f54e29ccb2/train.py#L75
https://github.com/feiyuchen7/M3NET/blob/4d0fa88cd4f92c72b053527e877763f54e29ccb2/train.py#L83

======================================
https://github.com/Nightmare-n/PVT-SSD
======================================

Found 1 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=drop_last, sampler=sampler, timeout=0
    )
https://github.com/Nightmare-n/PVT-SSD/blob/567005745a5be13b6aa20a8b22fd47e0635b3255/pcdet/datasets/__init__.py#L68

====================================
https://github.com/er-muyue/BeMapNet
====================================

Found 7 times
torch.utils.data.DataLoader(
            train_set,
            batch_size=self.batch_size_per_device,
            pin_memory=True,
            num_workers=self.data_loader_workers,
            shuffle=sampler is None,
            drop_last=True,
            sampler=sampler,
        )
torch.utils.data.DataLoader(
            val_set,
            batch_size=1,
            pin_memory=True,
            num_workers=self.data_loader_workers,
            shuffle=False,
            drop_last=False,
            sampler=sampler,
        )
torch.utils.data.DataLoader(
            train_set,
            batch_size=self.batch_size_per_device,
            pin_memory=True,
            num_workers=self.data_loader_workers,
            shuffle=sampler is None,
            drop_last=True,
            sampler=sampler,
        )
torch.utils.data.DataLoader(
            val_set,
            batch_size=1,
            pin_memory=True,
            num_workers=self.data_loader_workers,
            shuffle=False,
            drop_last=False,
            sampler=sampler,
        )
torch.utils.data.DataLoader(
            train_set,
            batch_size=self.batch_size_per_device,
            pin_memory=True,
            num_workers=self.data_loader_workers,
            shuffle=sampler is None,
            drop_last=True,
            sampler=sampler,
        )
torch.utils.data.DataLoader(
            val_set,
            batch_size=1,
            pin_memory=True,
            num_workers=self.data_loader_workers,
            shuffle=False,
            drop_last=False,
            sampler=sampler,
        )
DataLoader(
            BeMapNetResultForNuScenes(gt_dir, dt_dir, val_txt), 
            batch_size=batch_size, shuffle=False, drop_last=False, num_workers=8
        )
https://github.com/er-muyue/BeMapNet/blob/88e4f091310683eb1c8140e6ae4155fa1ae3404f/configs/bemapnet_nuscenes_effb0.py#L230
https://github.com/er-muyue/BeMapNet/blob/88e4f091310683eb1c8140e6ae4155fa1ae3404f/configs/bemapnet_nuscenes_effb0.py#L266
https://github.com/er-muyue/BeMapNet/blob/88e4f091310683eb1c8140e6ae4155fa1ae3404f/configs/bemapnet_nuscenes_res50.py#L234
https://github.com/er-muyue/BeMapNet/blob/88e4f091310683eb1c8140e6ae4155fa1ae3404f/configs/bemapnet_nuscenes_res50.py#L270
https://github.com/er-muyue/BeMapNet/blob/88e4f091310683eb1c8140e6ae4155fa1ae3404f/configs/bemapnet_nuscenes_swint.py#L224
https://github.com/er-muyue/BeMapNet/blob/88e4f091310683eb1c8140e6ae4155fa1ae3404f/configs/bemapnet_nuscenes_swint.py#L260
https://github.com/er-muyue/BeMapNet/blob/88e4f091310683eb1c8140e6ae4155fa1ae3404f/tools/evaluation/eval.py#L38

======================================
https://github.com/songw-zju/LiDAR2Map
======================================

Found 5 times
torch.utils.data.DataLoader(train_dataset, batch_size=bsz, sampler=train_sampler, num_workers=nworkers, drop_last=True)
torch.utils.data.DataLoader(val_dataset, batch_size=bsz, shuffle=False, num_workers=nworkers)
torch.utils.data.DataLoader(train_dataset, batch_size=bsz, shuffle=True, num_workers=nworkers, drop_last=True)
torch.utils.data.DataLoader(val_dataset, batch_size=bsz, shuffle=False, num_workers=nworkers)
torch.utils.data.DataLoader(dataset, batch_size=args.bsz, shuffle=False, drop_last=False)
https://github.com/songw-zju/LiDAR2Map/blob/6ae973dce08253319a43a6845842110de6bd2620/map/data/dataset.py#L206
https://github.com/songw-zju/LiDAR2Map/blob/6ae973dce08253319a43a6845842110de6bd2620/map/data/dataset.py#L207
https://github.com/songw-zju/LiDAR2Map/blob/6ae973dce08253319a43a6845842110de6bd2620/map/data/dataset.py#L213
https://github.com/songw-zju/LiDAR2Map/blob/6ae973dce08253319a43a6845842110de6bd2620/map/data/dataset.py#L214
https://github.com/songw-zju/LiDAR2Map/blob/6ae973dce08253319a43a6845842110de6bd2620/map/tools/evaluate_json.py#L22

==========================================
https://github.com/OpenDriveLab/ThinkTwice
==========================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        drop_last = True,
        **kwargs)
https://github.com/OpenDriveLab/ThinkTwice/blob/78e7575cffd812ab41fcf5dc1158422b3cfb64c9/open_loop_training/code/datasets/builder.py#L83

=====================================
https://github.com/OpenDriveLab/UniAD
=====================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/OpenDriveLab/UniAD/blob/a3bd2f714d629c7ddffa882a1dcbf9de5c5f3930/projects/mmdet3d_plugin/datasets/builder.py#L83

=========================================================
https://github.com/OpenDriveLab/Birds-eye-view-Perception
=========================================================

Found 3 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/OpenDriveLab/Birds-eye-view-Perception/blob/a0b2d7296d331a1a113ba3d6747a59e503115523/nuScenes_playground/FocalDistiller/projects/mmdet3d_plugin/datasets/builder.py#L83
https://github.com/OpenDriveLab/Birds-eye-view-Perception/blob/a0b2d7296d331a1a113ba3d6747a59e503115523/nuScenes_playground/VCD/mmdet3d/datasets/builder.py#L150
https://github.com/OpenDriveLab/Birds-eye-view-Perception/blob/a0b2d7296d331a1a113ba3d6747a59e503115523/waymo_playground/projects/mmdet3d_plugin/datasets/builder.py#L82

========================================
https://github.com/tusen-ai/Anchor3DLane
========================================

Found 3 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers,
        collate_fn=fast_collate if use_prefetcher else torch.utils.data.dataloader.default_collate,
    )
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
https://github.com/tusen-ai/Anchor3DLane/blob/6f3c5d01b82078724aee45c25b856ad3efc702ae/gen-efficientnet-pytorch/data/loader.py#L95
https://github.com/tusen-ai/Anchor3DLane/blob/6f3c5d01b82078724aee45c25b856ad3efc702ae/mmseg/datasets/builder.py#L148
https://github.com/tusen-ai/Anchor3DLane/blob/6f3c5d01b82078724aee45c25b856ad3efc702ae/mmseg/datasets/builder.py#L161

=====================================
https://github.com/yujheli/Pitt-Radar
=====================================

Found 6 times
DataLoader(dataset=train_set, num_workers=4, batch_size=opt.batch_size, shuffle=True)
DataLoader(dataset=val_set, num_workers=4, batch_size=1, shuffle=False)
DataLoader(dataset=train_set, num_workers=4, batch_size=opt.batch_size, shuffle=True)
DataLoader(dataset=val_set, num_workers=4, batch_size=1, shuffle=False)
DataLoader(dataset=train_set, num_workers=4, batch_size=opt.batch_size, shuffle=True)
DataLoader(dataset=val_set, num_workers=4, batch_size=1, shuffle=False)
https://github.com/yujheli/Pitt-Radar/blob/1260b190e8e4f81654841a39e20d4d02b72238a4/code/train_ADC_SR.py#L93
https://github.com/yujheli/Pitt-Radar/blob/1260b190e8e4f81654841a39e20d4d02b72238a4/code/train_ADC_SR.py#L94
https://github.com/yujheli/Pitt-Radar/blob/1260b190e8e4f81654841a39e20d4d02b72238a4/code/train_Hybrid_SR.py#L131
https://github.com/yujheli/Pitt-Radar/blob/1260b190e8e4f81654841a39e20d4d02b72238a4/code/train_Hybrid_SR.py#L132
https://github.com/yujheli/Pitt-Radar/blob/1260b190e8e4f81654841a39e20d4d02b72238a4/code/train_RAD_SR.py#L117
https://github.com/yujheli/Pitt-Radar/blob/1260b190e8e4f81654841a39e20d4d02b72238a4/code/train_RAD_SR.py#L118

=========================================
https://github.com/ucla-mobility/V2V4Real
=========================================

Found 13 times
DataLoader(opencda_dataset, batch_size=2, num_workers=10,
                             collate_fn=opencda_dataset.collate_batch_train,
                             shuffle=False,
                             pin_memory=False)
DataLoader(opencda_dataset, batch_size=1, num_workers=4,
                             collate_fn=opencda_dataset.collate_batch_test,
                             shuffle=False,
                             pin_memory=False)
DataLoader(opencood_dataset,
                             batch_size=1,
                             num_workers=0,
                             collate_fn=opencood_dataset.collate_batch_test,
                             shuffle=False,
                             pin_memory=False,
                             drop_last=False)
DataLoader(opencood_dataset,
                             batch_size=1,
                             num_workers=16,
                             collate_fn=opencood_dataset.collate_batch_test,
                             shuffle=False,
                             pin_memory=False,
                             drop_last=False)
DataLoader(opencood_train_dataset,
                                  batch_sampler=batch_sampler_train,
                                  num_workers=8,
                                  collate_fn=opencood_train_dataset.collate_batch_train)
DataLoader(opencood_validate_dataset,
                                sampler=sampler_val,
                                num_workers=8,
                                collate_fn=opencood_train_dataset.collate_batch_train,
                                drop_last=False)
DataLoader(opencood_train_dataset,
                                  batch_size=hypes['train_params']['batch_size'],
                                  num_workers=8,
                                  collate_fn=opencood_train_dataset.collate_batch_train,
                                  shuffle=True,
                                  pin_memory=False,
                                  drop_last=True)
DataLoader(opencood_validate_dataset,
                                batch_size=hypes['train_params']['batch_size'],
                                num_workers=8,
                                collate_fn=opencood_train_dataset.collate_batch_train,
                                shuffle=False,
                                pin_memory=False,
                                drop_last=True)
DataLoader(source_opencood_train_dataset,
                                     batch_size=hypes['train_params'][
                                         'batch_size'],
                                     num_workers=8,
                                     collate_fn=source_opencood_train_dataset.collate_batch_train,
                                     shuffle=True,
                                     pin_memory=False,
                                     drop_last=True)
DataLoader(target_opencood_train_dataset,
                                     batch_size=hypes['train_params'][
                                         'batch_size'],
                                     num_workers=8,
                                     collate_fn=source_opencood_train_dataset.collate_batch_train,
                                     shuffle=True,
                                     pin_memory=False,
                                     drop_last=True)
DataLoader(opencood_validate_dataset,
                            batch_size=hypes['train_params']['batch_size'],
                            num_workers=8,
                            collate_fn=source_opencood_train_dataset.collate_batch_train,
                            shuffle=False,
                            pin_memory=False,
                            drop_last=True)
DataLoader(opencda_dataset, batch_size=1, num_workers=8,
                             collate_fn=opencda_dataset.collate_batch_train,
                             shuffle=False,
                             pin_memory=False)
DataLoader(opencda_dataset, batch_size=1, num_workers=8,
                             collate_fn=opencda_dataset.collate_batch_test,
                             shuffle=False,
                             pin_memory=False)
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/data_utils/datasets/intermediate_fusion_dataset.py#L478
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/data_utils/datasets/late_fusion_dataset.py#L273
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/tools/debug_utils.py#L30
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/tools/inference.py#L53
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/tools/train.py#L54
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/tools/train.py#L58
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/tools/train.py#L64
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/tools/train.py#L71
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/tools/train_da.py#L50
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/tools/train_da.py#L58
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/tools/train_da.py#L77
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/visualization/vis_data_sequence.py#L29
https://github.com/ucla-mobility/V2V4Real/blob/da1db75383c78ecc704cb2fcb28a65217206b38b/opencood/visualization/vis_late_fusion.py#L13

=====================================
https://github.com/gangzhang842/cfnet
=====================================

Found 2 times
DataLoader(val_dataset,
                            batch_size=1,
                            shuffle=False,
                            num_workers=pDataset.Val.num_workers,
                            pin_memory=True)
DataLoader(train_dataset,
                            batch_size=pGen.batch_size_per_gpu,
                            shuffle=(train_sampler is None),
                            num_workers=pDataset.Train.num_workers,
                            sampler=train_sampler,
                            pin_memory=True)
https://github.com/gangzhang842/cfnet/blob/f7f2c793a9dd415d138c8b709b966f27b5c2756a/evaluate.py#L124
https://github.com/gangzhang842/cfnet/blob/f7f2c793a9dd415d138c8b709b966f27b5c2756a/train.py#L126

========================================
https://github.com/slothfulxtx/cxtrack3d
========================================

Found 3 times
DataLoader(
            train_dataset,
            batch_size=cfg.train_cfg.batch_size,
            pin_memory=True,
            num_workers=cfg.train_cfg.num_workers,
            shuffle=True
        )
DataLoader(
            val_dataset,
            shuffle=False,
            batch_size=cfg.eval_cfg.batch_size,
            pin_memory=False,
            num_workers=cfg.eval_cfg.num_workers,
            collate_fn=lambda x: x
        )
DataLoader(
            test_dataset,
            shuffle=False,
            batch_size=cfg.eval_cfg.batch_size,
            pin_memory=False,
            num_workers=cfg.eval_cfg.num_workers,
            collate_fn=lambda x: x
        )
https://github.com/slothfulxtx/cxtrack3d/blob/a9eb6726905b03ccb4f6daceca82e147f5298e43/main.py#L135
https://github.com/slothfulxtx/cxtrack3d/blob/a9eb6726905b03ccb4f6daceca82e147f5298e43/main.py#L142
https://github.com/slothfulxtx/cxtrack3d/blob/a9eb6726905b03ccb4f6daceca82e147f5298e43/main.py#L198

===============================
https://github.com/MCG-NJU/LinK
===============================

Found 6 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        shuffle=(sampler is None),
        num_workers=num_workers,
        collate_fn=collate_kitti,
        pin_memory=True,
        # pin_memory=False,
    )
DataLoader(
        dataset,
        batch_size=1,
        sampler=None,
        shuffle=False,
        num_workers=8,
        collate_fn=collate_kitti,
        pin_memory=False,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=2,
        collate_fn=sparse_collate_fn,
    )
torch.utils.data.DataLoader(
            dataset[split],
            batch_size=configs.batch_size if split == 'train' else 1,
            sampler=sampler,
            num_workers=4,
            pin_memory=True,
            collate_fn=dataset[split].collate_fn)
torch.utils.data.DataLoader(
            dataset[split],
            batch_size=configs.batch_size if split == 'train' else 1,
            sampler=sampler,
            num_workers=4,
            pin_memory=True,
            collate_fn=dataset[split].collate_fn)
torch.utils.data.DataLoader(
            dataset[split],
            batch_size=configs.batch_size if split=='train' else 1,
            sampler=sampler,
            num_workers=configs.workers_per_gpu,
            pin_memory=True,
            collate_fn=dataset[split].collate_fn)
https://github.com/MCG-NJU/LinK/blob/a91a9a5744062ae5e4f1d689ff3bf125897b4444/detection/det3d/datasets/loader/build_loader.py#L46
https://github.com/MCG-NJU/LinK/blob/a91a9a5744062ae5e4f1d689ff3bf125897b4444/detection/tools/demo.py#L61
https://github.com/MCG-NJU/LinK/blob/a91a9a5744062ae5e4f1d689ff3bf125897b4444/detection/torchsparse-u/examples/example.py#L55
https://github.com/MCG-NJU/LinK/blob/a91a9a5744062ae5e4f1d689ff3bf125897b4444/segmentation/evaluate.py#L61
https://github.com/MCG-NJU/LinK/blob/a91a9a5744062ae5e4f1d689ff3bf125897b4444/segmentation/test.py#L62
https://github.com/MCG-NJU/LinK/blob/a91a9a5744062ae5e4f1d689ff3bf125897b4444/segmentation/train.py#L87

====================================
https://github.com/wzzheng/TPVFormer
====================================

Found 2 times
torch.utils.data.DataLoader(dataset=train_dataset,
                                                       batch_size=train_dataloader_config["batch_size"],
                                                       collate_fn=custom_collate_fn,
                                                       shuffle=False if dist else train_dataloader_config["shuffle"],
                                                       sampler=sampler,
                                                       num_workers=train_dataloader_config["num_workers"])
torch.utils.data.DataLoader(dataset=val_dataset,
                                                     batch_size=val_dataloader_config["batch_size"],
                                                     collate_fn=custom_collate_fn,
                                                     shuffle=False if dist else val_dataloader_config["shuffle"],
                                                     sampler=val_sampler,
                                                     num_workers=val_dataloader_config["num_workers"])
https://github.com/wzzheng/TPVFormer/blob/a1cf223ae4b79f56a2b046016c35a8fb3a0b6284/builder/data_builder.py#L55
https://github.com/wzzheng/TPVFormer/blob/a1cf223ae4b79f56a2b046016c35a8fb3a0b6284/builder/data_builder.py#L61

===========================================
https://github.com/thu-ml/3D_Corruptions_AD
===========================================

Found 1 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0, worker_init_fn=partial(common_utils.worker_init_fn, seed=seed)
    )
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/__init__.py#L74

==============================
https://github.com/zlw9161/PKC
==============================

Found 11 times
DataLoader(testset, batch_size=1, shuffle=False, num_workers=0)
DataLoader(trainset, batch_size=1, shuffle=True, num_workers=0)
DataLoader(valset, batch_size=1, shuffle=False, num_workers=0)
DataLoader(testset, batch_size=1, shuffle=False, num_workers=0)
DataLoader(CarradaDataset(seq,
                                                             self.annot_type,
                                                             path_to_frames,
                                                             self.process_signal,
                                                             self.n_frames,
                                                             transformations,
                                                             add_temp),
                                              shuffle=self.is_shuffled,
                                              batch_size=self.batch_size,
                                              num_workers=4)
DataLoader(CarradaDataset(seq,
                                                             self.annot_type,
                                                             path_to_frames,
                                                             self.process_signal,
                                                             self.n_frames,
                                                             transformations,
                                                             add_temp),
                                              shuffle=False,
                                              batch_size=self.batch_size,
                                              num_workers=4)
DataLoader(SequenceCarradaDataset(dataset), batch_size=1,
                            shuffle=False, num_workers=0)
DataLoader(SequenceCarradaDataset(dataset), batch_size=1,
                                shuffle=True, num_workers=0)
DataLoader(CarradaDataset(seq,
                                                     'dense',
                                                     path_to_frames,
                                                     process_signal=True,
                                                     n_frames=n_frames),
                                      shuffle=False,
                                      batch_size=1,
                                      num_workers=0)
DataLoader(SequenceCarradaDataset(dataset), batch_size=1,
                                shuffle=True, num_workers=0)
DataLoader(CarradaDataset(seq,
                                                     'dense',
                                                     path_to_frames,
                                                     process_signal=True,
                                                     n_frames=n_frames),
                                      shuffle=False,
                                      batch_size=1,
                                      num_workers=0)
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/test.py#L61
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/learners/initializer.py#L39
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/learners/initializer.py#L40
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/learners/initializer.py#L41
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/learners/model.py#L107
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/learners/tester.py#L85
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/loaders/dataloaders.py#L281
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/loaders/dataloaders.py#L298
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/loaders/dataloaders.py#L303
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/loaders/dataloaders.py#L325
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/loaders/dataloaders.py#L330

=====================================
https://github.com/Nightmare-n/GD-MAE
=====================================

Found 1 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=drop_last, sampler=sampler, timeout=0
    )
https://github.com/Nightmare-n/GD-MAE/blob/abd05ce2c2c0a5d02736e3fb0ad6ddbea0bb2bba/pcdet/datasets/__init__.py#L70

=====================================================
https://github.com/Tsinghua-MARS-Lab/neural_map_prior
=====================================================

Found 2 times
torch.utils.data.DataLoader(
        dataset, batch_size=cfg['bsz'], shuffle=False, drop_last=False, num_workers=8)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/Tsinghua-MARS-Lab/neural_map_prior/blob/e0a8188a40e7a701b8c355b3c90c758310557998/project/neural_map_prior/datasets/evaluation/hdmap_eval.py#L50
https://github.com/Tsinghua-MARS-Lab/neural_map_prior/blob/e0a8188a40e7a701b8c355b3c90c758310557998/tools/mmdet_dataloader.py#L77

================================
https://github.com/Len-Li/Lift3D
================================

Found 1 times
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/Len-Li/Lift3D/blob/05c76439ea82b316278ac877a98b396680fecc24/training/training_loop.py#L146

===================================
https://github.com/gzgzys9887/DGLSS
===================================

Found 5 times
DataLoader(training_dataset, **training_loader_param, collate_fn=training_dataset.collate_fn)
DataLoader(val_dataset, **validation_loader_param, collate_fn=val_dataset.collate_fn_test)
DataLoader(dataset, **test_loader_param, collate_fn=dataset.collate_fn_test)
DataLoader(nuscenes_dataset, **loader_param, collate_fn=nuscenes_dataset.collate_fn)
DataLoader(waymo_dataset, **loader_param, collate_fn=waymo_dataset.collate_fn)
https://github.com/gzgzys9887/DGLSS/blob/fc046f27e82e030481de7c1170a28d489e8c8df1/main.py#L38
https://github.com/gzgzys9887/DGLSS/blob/fc046f27e82e030481de7c1170a28d489e8c8df1/main.py#L42
https://github.com/gzgzys9887/DGLSS/blob/fc046f27e82e030481de7c1170a28d489e8c8df1/main.py#L89
https://github.com/gzgzys9887/DGLSS/blob/fc046f27e82e030481de7c1170a28d489e8c8df1/utils/get_weights.py#L55
https://github.com/gzgzys9887/DGLSS/blob/fc046f27e82e030481de7c1170a28d489e8c8df1/utils/get_weights.py#L56

======================================
https://github.com/qcraftai/pillarnext
======================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        shuffle=(sampler is None and shuffle),
        num_workers=num_workers,
        collate_fn=collate,
        pin_memory=pin_memory,
    )
https://github.com/qcraftai/pillarnext/blob/a9a2864089092a5f9f8ded7c3a95bafa4edbf325/det3d/datasets/loader/build_loader.py#L17

====================================
https://github.com/PJLab-ADG/3DTrans
====================================

Found 10 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=drop_last, sampler=sampler, timeout=0
    )
DataLoader(
        pretrain_dataset, batch_size=batch_size['pretrain'], pin_memory=True, num_workers=workers,
        shuffle=(pretrain_sampler is None) and True, collate_fn=pretrain_dataset.collate_batch,
        drop_last=False, sampler=pretrain_sampler, timeout=0
    )
DataLoader(
        labeled_dataset, batch_size=batch_size['labeled'], pin_memory=True, num_workers=workers,
        shuffle=(labeled_sampler is None) and True, collate_fn=labeled_dataset.collate_batch,
        drop_last=False, sampler=labeled_sampler, timeout=0
    )
DataLoader(
        unlabeled_dataset, batch_size=batch_size['unlabeled'], pin_memory=True, num_workers=workers,
        shuffle=(unlabeled_sampler is None) and True, collate_fn=unlabeled_dataset.collate_batch,
        drop_last=False, sampler=unlabeled_sampler, timeout=0
    )
DataLoader(
        test_dataset, batch_size=batch_size['test'], pin_memory=True, num_workers=workers,
        shuffle=(test_sampler is None) and False, collate_fn=test_dataset.collate_batch,
        drop_last=False, sampler=test_sampler, timeout=0
    )
DataLoader(
        unlabeled_dataset, batch_size=batch_size['unlabeled'], pin_memory=True, num_workers=workers,
        shuffle=(unlabeled_sampler is None) and True, collate_fn=unlabeled_dataset.collate_batch,
        drop_last=False, sampler=unlabeled_sampler, timeout=0
    )
DataLoader(
        test_dataset, batch_size=batch_size['test'], pin_memory=True, num_workers=workers,
        shuffle=(test_sampler is None) and False, collate_fn=test_dataset.collate_batch,
        drop_last=False, sampler=test_sampler, timeout=0
    )
DataLoader(
        concat_dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset_1.collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
https://github.com/PJLab-ADG/3DTrans/blob/afc0708316a527dfbe2cd1591be082d5e09e64e8/pcdet/datasets/__init__.py#L114
https://github.com/PJLab-ADG/3DTrans/blob/afc0708316a527dfbe2cd1591be082d5e09e64e8/pcdet/datasets/__init__.py#L146
https://github.com/PJLab-ADG/3DTrans/blob/afc0708316a527dfbe2cd1591be082d5e09e64e8/pcdet/datasets/__init__.py#L177
https://github.com/PJLab-ADG/3DTrans/blob/afc0708316a527dfbe2cd1591be082d5e09e64e8/pcdet/datasets/__init__.py#L211
https://github.com/PJLab-ADG/3DTrans/blob/afc0708316a527dfbe2cd1591be082d5e09e64e8/pcdet/datasets/__init__.py#L228
https://github.com/PJLab-ADG/3DTrans/blob/afc0708316a527dfbe2cd1591be082d5e09e64e8/pcdet/datasets/__init__.py#L245
https://github.com/PJLab-ADG/3DTrans/blob/afc0708316a527dfbe2cd1591be082d5e09e64e8/pcdet/datasets/__init__.py#L263
https://github.com/PJLab-ADG/3DTrans/blob/afc0708316a527dfbe2cd1591be082d5e09e64e8/pcdet/datasets/__init__.py#L316
https://github.com/PJLab-ADG/3DTrans/blob/afc0708316a527dfbe2cd1591be082d5e09e64e8/pcdet/datasets/__init__.py#L334
https://github.com/PJLab-ADG/3DTrans/blob/afc0708316a527dfbe2cd1591be082d5e09e64e8/pcdet/datasets/__init__.py#L385

==============================
https://github.com/PRBonn/TARL
==============================

Found 3 times
DataLoader(data_set, batch_size=self.cfg['train']['batch_size'], shuffle=True,
                            num_workers=self.cfg['train']['num_workers'], collate_fn=collate)
DataLoader(data_set, batch_size=self.cfg['train']['batch_size'], shuffle=True,
                            num_workers=self.cfg['train']['num_workers'], collate_fn=collate)
DataLoader(data_set, batch_size=self.cfg['train']['batch_size'], shuffle=True,
                            num_workers=self.cfg['train']['num_workers'], collate_fn=collate)
https://github.com/PRBonn/TARL/blob/19aede7753b0900f79630d0b3576eb50cda5143a/tarl/datasets/datasets.py#L40
https://github.com/PRBonn/TARL/blob/19aede7753b0900f79630d0b3576eb50cda5143a/tarl/datasets/datasets.py#L69
https://github.com/PRBonn/TARL/blob/19aede7753b0900f79630d0b3576eb50cda5143a/tarl/datasets/datasets.py#L99

=================================
https://github.com/WoodwindHu/DTS
=================================

Found 3 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=True, sampler=sampler, timeout=0
    )
DataLoader(
        dataset_target, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler_target is None) and training, collate_fn=dataset_target.collate_batch,
        drop_last=False, sampler=sampler_target, timeout=0
    )
https://github.com/WoodwindHu/DTS/blob/4aad1962ccf39dec611a608696b6309e0fbc237a/pcdet/datasets/__init__.py#L73
https://github.com/WoodwindHu/DTS/blob/4aad1962ccf39dec611a608696b6309e0fbc237a/pcdet/datasets/__init__.py#L105
https://github.com/WoodwindHu/DTS/blob/4aad1962ccf39dec611a608696b6309e0fbc237a/pcdet/datasets/__init__.py#L134

==============================
https://github.com/liw95/SGLoc
==============================

Found 3 times
DataLoader(val_set,
                        batch_size=FLAGS.val_batch_size,
                        shuffle=False,
                        collate_fn=collation_fn,
                        num_workers=FLAGS.num_workers,
                        pin_memory=True)
DataLoader(train_set,
                          batch_size=FLAGS.batch_size,
                          shuffle=True,
                          collate_fn=collation_fn,
                          num_workers=FLAGS.num_workers,
                          pin_memory=True)
DataLoader(val_set,
                        batch_size=FLAGS.val_batch_size,
                        shuffle=False,
                        collate_fn=collation_fn,
                        num_workers=FLAGS.num_workers,
                        pin_memory=True)
https://github.com/liw95/SGLoc/blob/92e522aaba21d0bd0fc6bdc450eab9157d7542f9/code/test.py#L95
https://github.com/liw95/SGLoc/blob/92e522aaba21d0bd0fc6bdc450eab9157d7542f9/code/train.py#L104
https://github.com/liw95/SGLoc/blob/92e522aaba21d0bd0fc6bdc450eab9157d7542f9/code/train.py#L111

====================================
https://github.com/ming71/GCIoU-loss
====================================

Found 3 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
DataLoader(ds_train, BATCH_SIZE * N_DATA, shuffle=True, num_workers=4)
DataLoader(ds_test, BATCH_SIZE * N_DATA, shuffle=False, num_workers=4)
https://github.com/ming71/GCIoU-loss/blob/020c7c1205e40f9a6a4931397f43fc4b940bdb31/pcdet/datasets/__init__.py#L64
https://github.com/ming71/GCIoU-loss/blob/020c7c1205e40f9a6a4931397f43fc4b940bdb31/pcdet/ops/iou3d/demo.py#L106
https://github.com/ming71/GCIoU-loss/blob/020c7c1205e40f9a6a4931397f43fc4b940bdb31/pcdet/ops/iou3d/demo.py#L107

============================================
https://github.com/ADLab-AutoDrive/BEVHeight
============================================

Found 16 times
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.batch_size_per_device,
            num_workers=4,
            drop_last=True,
            shuffle=False,
            collate_fn=partial(collate_fn,
                               is_return_depth=False),
            sampler=None,
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=collate_fn,
            num_workers=4,
            sampler=None,
        )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.batch_size_per_device,
            num_workers=4,
            drop_last=True,
            shuffle=False,
            collate_fn=partial(collate_fn,
                               is_return_depth=False),
            sampler=None,
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=collate_fn,
            num_workers=4,
            sampler=None,
        )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.batch_size_per_device,
            num_workers=4,
            drop_last=True,
            shuffle=False,
            collate_fn=partial(collate_fn,
                               is_return_depth=False),
            sampler=None,
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=collate_fn,
            num_workers=4,
            sampler=None,
        )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.batch_size_per_device,
            num_workers=4,
            drop_last=True,
            shuffle=False,
            collate_fn=partial(collate_fn,
                               is_return_depth=False),
            sampler=None,
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=collate_fn,
            num_workers=4,
            sampler=None,
        )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.batch_size_per_device,
            num_workers=4,
            drop_last=True,
            shuffle=False,
            collate_fn=partial(collate_fn,
                               is_return_depth=False),
            sampler=None,
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=collate_fn,
            num_workers=4,
            sampler=None,
        )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.batch_size_per_device,
            num_workers=4,
            drop_last=True,
            shuffle=False,
            collate_fn=partial(collate_fn,
                               is_return_depth=False),
            sampler=None,
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=collate_fn,
            num_workers=4,
            sampler=None,
        )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.batch_size_per_device,
            num_workers=4,
            drop_last=True,
            shuffle=False,
            collate_fn=partial(collate_fn,
                               is_return_depth=False),
            sampler=None,
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=collate_fn,
            num_workers=4,
            sampler=None,
        )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.batch_size_per_device,
            num_workers=4,
            drop_last=True,
            shuffle=False,
            collate_fn=partial(collate_fn,
                               is_return_depth=False),
            sampler=None,
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=collate_fn,
            num_workers=4,
            sampler=None,
        )
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/dair-v2x/bev_height_lss_r101_864_1536_256x256_102.py#L320
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/dair-v2x/bev_height_lss_r101_864_1536_256x256_102.py#L345
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/dair-v2x/bev_height_lss_r101_864_1536_256x256_140.py#L320
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/dair-v2x/bev_height_lss_r101_864_1536_256x256_140.py#L345
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/dair-v2x/bev_height_lss_r50_864_1536_128x128_102.py#L320
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/dair-v2x/bev_height_lss_r50_864_1536_128x128_102.py#L345
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/dair-v2x/bev_height_lss_r50_864_1536_128x128_140.py#L320
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/dair-v2x/bev_height_lss_r50_864_1536_128x128_140.py#L345
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/rope3d/bev_height_lss_r101_864_1536_256x256_102.py#L320
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/rope3d/bev_height_lss_r101_864_1536_256x256_102.py#L345
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/rope3d/bev_height_lss_r101_864_1536_256x256_140.py#L320
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/rope3d/bev_height_lss_r101_864_1536_256x256_140.py#L345
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/rope3d/bev_height_lss_r50_864_1536_128x128_102.py#L320
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/rope3d/bev_height_lss_r50_864_1536_128x128_102.py#L345
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/rope3d/bev_height_lss_r50_864_1536_128x128_140.py#L320
https://github.com/ADLab-AutoDrive/BEVHeight/blob/f5894ab98525a4cd3a93f86d401356c02863499e/exps/rope3d/bev_height_lss_r50_864_1536_128x128_140.py#L345

===================================
https://github.com/NVlabs/VoxFormer
===================================

Found 2 times
DataLoader(test_dataset, 1, shuffle=False, num_workers=4, drop_last=False)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/NVlabs/VoxFormer/blob/63da92415447c2e97654bad977254c907f5ce703/preprocess/mobilestereonet/prediction.py#L44
https://github.com/NVlabs/VoxFormer/blob/63da92415447c2e97654bad977254c907f5ce703/projects/mmdet3d_plugin/datasets/builder.py#L83

=================================
https://github.com/Toytiny/CMFlow
=================================

Found 4 times
DataLoader(test_set,num_workers=args.num_workers, batch_size=1, shuffle=False, drop_last=False)
DataLoader(train_set, num_workers=args.num_workers, batch_size=args.batch_size, shuffle=True, drop_last=True)
DataLoader(val_set, num_workers=args.num_workers, batch_size=args.val_batch_size, shuffle=False, drop_last=False)
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
https://github.com/Toytiny/CMFlow/blob/16a095a250453b4fe1363e4ec9dddd20d0d64e4f/main.py#L203
https://github.com/Toytiny/CMFlow/blob/16a095a250453b4fe1363e4ec9dddd20d0d64e4f/main.py#L207
https://github.com/Toytiny/CMFlow/blob/16a095a250453b4fe1363e4ec9dddd20d0d64e4f/main.py#L208
https://github.com/Toytiny/CMFlow/blob/16a095a250453b4fe1363e4ec9dddd20d0d64e4f/preprocess/utils/RAFT/core/datasets.py#L230

================================
https://github.com/LuigiRiz/NOPS
================================

Found 7 times
DataLoader(
                dataset=dataset,
                batch_size=self.hparams.batch_size,
                collate_fn=collation_fn_restricted_dataset,
                num_workers=self.hparams.num_workers,
                shuffle=False,
            )
DataLoader(
            dataset=dataset,
            batch_size=self.hparams.batch_size,
            collate_fn=collation_fn_restricted_dataset_two_samples,
            num_workers=self.hparams.num_workers,
            shuffle=True,
        )
DataLoader(
            dataset=dataset,
            batch_size=self.hparams.batch_size,
            collate_fn=collation_fn_restricted_dataset,
            num_workers=self.hparams.num_workers,
        )
DataLoader(
                dataset=dataset,
                batch_size=self.hparams.batch_size,
                collate_fn=collation_fn_restricted_dataset,
                num_workers=self.hparams.num_workers,
            )
DataLoader(
                dataset=dataset,
                batch_size=self.hparams.batch_size,
                collate_fn=collation_fn_restricted_dataset,
                num_workers=self.hparams.num_workers,
                shuffle=False,
            )
DataLoader(
            dataset=dataset,
            batch_size=self.hparams.batch_size,
            collate_fn=collation_fn_restricted_dataset,
            num_workers=self.hparams.num_workers,
            shuffle=True,
        )
DataLoader(
            dataset=dataset,
            batch_size=self.hparams.batch_size,
            collate_fn=collation_fn_restricted_dataset,
            num_workers=self.hparams.num_workers,
        )
https://github.com/LuigiRiz/NOPS/blob/f096b84dceb9404cc7d499ae8925ab2de614ddc3/modules/Discoverer.py#L136
https://github.com/LuigiRiz/NOPS/blob/f096b84dceb9404cc7d499ae8925ab2de614ddc3/modules/Discoverer.py#L183
https://github.com/LuigiRiz/NOPS/blob/f096b84dceb9404cc7d499ae8925ab2de614ddc3/modules/Discoverer.py#L202
https://github.com/LuigiRiz/NOPS/blob/f096b84dceb9404cc7d499ae8925ab2de614ddc3/modules/Discoverer.py#L632
https://github.com/LuigiRiz/NOPS/blob/f096b84dceb9404cc7d499ae8925ab2de614ddc3/modules/Pretrainer.py#L81
https://github.com/LuigiRiz/NOPS/blob/f096b84dceb9404cc7d499ae8925ab2de614ddc3/modules/Pretrainer.py#L122
https://github.com/LuigiRiz/NOPS/blob/f096b84dceb9404cc7d499ae8925ab2de614ddc3/modules/Pretrainer.py#L141

===============================
https://github.com/RLuke22/FJMP
===============================

Found 14 times
DataLoader(
                dataset,
                batch_size=config["batch_size"],
                num_workers=config["workers"],
                sampler=train_sampler,
                collate_fn=collate_fn,
                pin_memory=True,
                worker_init_fn=worker_init_fn,
                drop_last=True,
            )
DataLoader(
            dataset,
            batch_size=config["batch_size"],
            num_workers=config["val_workers"],
            sampler=val_sampler,
            collate_fn=collate_fn,
            pin_memory=True,
        )
DataLoader(
                dataset,
                batch_size=config["batch_size"],
                num_workers=config["workers"],
                sampler=train_sampler,
                collate_fn=collate_fn,
                pin_memory=True,
                worker_init_fn=worker_init_fn,
                drop_last=True,
            )
DataLoader(
            dataset,
            batch_size=config["batch_size"],
            num_workers=config["val_workers"],
            sampler=val_sampler,
            collate_fn=collate_fn,
            pin_memory=True,
        )
DataLoader(
        dataset,
        batch_size=1,
        num_workers=config["val_workers"],
        shuffle=False,
        collate_fn=collate_fn,
        pin_memory=True,
    )
DataLoader(
        dataset,
        batch_size=config['batch_size'],
        num_workers=config['workers'],
        shuffle=False,
        collate_fn=from_numpy,
        pin_memory=True,
        drop_last=False)
DataLoader(
        dataset,
        batch_size=1,
        num_workers=config["workers"],
        shuffle=False,
        collate_fn=collate_fn,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset,
        batch_size=config['batch_size'],
        num_workers=config['workers'],
        shuffle=False,
        collate_fn=from_numpy,
        pin_memory=True,
        drop_last=False)
DataLoader(
        dataset,
        batch_size=config["batch_size"],
        num_workers=config["val_workers"],
        shuffle=False,
        collate_fn=collate_fn,
        pin_memory=True,
    )
DataLoader(
        dataset,
        batch_size=config['batch_size'],
        num_workers=config['workers'],
        shuffle=False,
        collate_fn=from_numpy,
        pin_memory=True,
        drop_last=False)
DataLoader(
        dataset,
        batch_size=config["batch_size"],
        num_workers=config["val_workers"],
        shuffle=False,
        collate_fn=collate_fn,
        pin_memory=True,
    )
DataLoader(
        dataset,
        batch_size=config['batch_size'],
        num_workers=config['workers'],
        shuffle=False,
        collate_fn=from_numpy,
        pin_memory=True,
        drop_last=False)
DataLoader(
        dataset,
        batch_size=config["batch_size"],
        num_workers=config["workers"],
        shuffle=False,
        collate_fn=collate_fn,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset,
        batch_size=config['batch_size'],
        num_workers=config['workers'],
        shuffle=False,
        collate_fn=from_numpy,
        pin_memory=True,
        drop_last=False)
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp.py#L1155
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp.py#L1169
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp.py#L1216
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp.py#L1230
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp_preprocess_argoverse2.py#L108
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp_preprocess_argoverse2.py#L153
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp_preprocess_argoverse2.py#L168
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp_preprocess_argoverse2.py#L216
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp_preprocess_interaction.py#L96
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp_preprocess_interaction.py#L138
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp_preprocess_interaction.py#L151
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp_preprocess_interaction.py#L196
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp_preprocess_interaction.py#L210
https://github.com/RLuke22/FJMP/blob/a48467a0e91bbeb650bc42373c70051d7cb5f7eb/fjmp_preprocess_interaction.py#L258

====================================
https://github.com/Yonghongwei/AdaBK
====================================

Found 4 times
torch.utils.data.DataLoader(trainset, pin_memory=True,batch_size=int(args.bs/torch.distributed.get_world_size()), num_workers=4,drop_last=True,sampler=train_sampler)
torch.utils.data.DataLoader(testset, batch_size=128, num_workers=4)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler,drop_last=True)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
https://github.com/Yonghongwei/AdaBK/blob/d654f049d1a4253a621b7a5f0b423a9c7e22b646/AdaBK/cifar100/main.py#L82
https://github.com/Yonghongwei/AdaBK/blob/d654f049d1a4253a621b7a5f0b423a9c7e22b646/AdaBK/cifar100/main.py#L85
https://github.com/Yonghongwei/AdaBK/blob/d654f049d1a4253a621b7a5f0b423a9c7e22b646/AdaBK/imagenet/main.py#L190
https://github.com/Yonghongwei/AdaBK/blob/d654f049d1a4253a621b7a5f0b423a9c7e22b646/AdaBK/imagenet/main.py#L195

=====================================
https://github.com/PengLiao12/EMT-NAS
=====================================

Found 4 times
torch.utils.data.DataLoader(trainset_train, batch_size=config.get('batch_size'), shuffle=True, num_workers=8)
torch.utils.data.DataLoader(trainset_val, batch_size=config.get('batch_size_val'), shuffle=True, num_workers=8)
torch.utils.data.DataLoader(trainset_train, batch_size=config.get('batch_size'), shuffle=True,
                                                         num_workers=8)
torch.utils.data.DataLoader(trainset_val, batch_size=config.get('batch_size_val'), shuffle=True,
                                                       num_workers=8)
https://github.com/PengLiao12/EMT-NAS/blob/b4f4fbce990fed44d441f83bd2e01a053f538c0a/data.py#L68
https://github.com/PengLiao12/EMT-NAS/blob/b4f4fbce990fed44d441f83bd2e01a053f538c0a/data.py#L70
https://github.com/PengLiao12/EMT-NAS/blob/b4f4fbce990fed44d441f83bd2e01a053f538c0a/data.py#L110
https://github.com/PengLiao12/EMT-NAS/blob/b4f4fbce990fed44d441f83bd2e01a053f538c0a/data.py#L112

=======================================
https://github.com/zhuohuangai/SharpDRO
=======================================

Found 9 times
torch.utils.data.DataLoader(
            distorted_dataset, batch_size=100, shuffle=False, num_workers=1)
torch.utils.data.DataLoader(
            distorted_dataset, batch_size=100, shuffle=False, num_workers=1)
torch.utils.data.DataLoader(
            distorted_dataset, batch_size=100, shuffle=False, num_workers=6)
torch.utils.data.DataLoader(
            distorted_dataset, batch_size=100, shuffle=False, num_workers=1)
DataLoader(train_dataset,
        sampler = labeled_sampler,
        batch_size = args.batch_size,
        num_workers = args.num_workers,
        drop_last = True)
DataLoader(val_dataset[0],
        sampler = val_sampler[0],
        batch_size = args.eval_batch_size,
        num_workers = args.num_workers,
        drop_last = False)
DataLoader(val_dataset[i],
        sampler = val_sampler[i],
        batch_size = args.eval_batch_size,
        num_workers = args.num_workers,
        drop_last = False)
DataLoader(test_dataset[0],
        sampler = test_sampler[0],
        batch_size = args.eval_batch_size,
        num_workers = args.num_workers,
        drop_last = False)
DataLoader(test_dataset[i],
        sampler = test_sampler[i],
        batch_size = args.eval_batch_size,
        num_workers = args.num_workers,
        drop_last = False)
https://github.com/zhuohuangai/SharpDRO/blob/36eefa209b3042056dfc4d51ba533bd1e4497d4b/corruptions/make_imagenet30_64x64_c.py#L549
https://github.com/zhuohuangai/SharpDRO/blob/36eefa209b3042056dfc4d51ba533bd1e4497d4b/corruptions/make_imagenet30_64x64_c_test.py#L549
https://github.com/zhuohuangai/SharpDRO/blob/36eefa209b3042056dfc4d51ba533bd1e4497d4b/corruptions/make_imagenet_64_c.py#L547
https://github.com/zhuohuangai/SharpDRO/blob/36eefa209b3042056dfc4d51ba533bd1e4497d4b/corruptions/make_imagenet_c.py#L584
https://github.com/zhuohuangai/SharpDRO/blob/36eefa209b3042056dfc4d51ba533bd1e4497d4b/dataset/prepare_dataset.py#L263
https://github.com/zhuohuangai/SharpDRO/blob/36eefa209b3042056dfc4d51ba533bd1e4497d4b/dataset/prepare_dataset.py#L269
https://github.com/zhuohuangai/SharpDRO/blob/36eefa209b3042056dfc4d51ba533bd1e4497d4b/dataset/prepare_dataset.py#L276
https://github.com/zhuohuangai/SharpDRO/blob/36eefa209b3042056dfc4d51ba533bd1e4497d4b/dataset/prepare_dataset.py#L282
https://github.com/zhuohuangai/SharpDRO/blob/36eefa209b3042056dfc4d51ba533bd1e4497d4b/dataset/prepare_dataset.py#L289

======================================
https://github.com/qinghai-zheng/LIBLE
======================================

Found 3 times
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True)
https://github.com/qinghai-zheng/LIBLE/blob/c11c6bb980ed9e813ef8f557db1393a797bed138/Demo_Artificial.py#L33
https://github.com/qinghai-zheng/LIBLE/blob/c11c6bb980ed9e813ef8f557db1393a797bed138/Demo_SJAFFE.py#L33
https://github.com/qinghai-zheng/LIBLE/blob/c11c6bb980ed9e813ef8f557db1393a797bed138/Demo_Yeast_alpha.py#L33

===============================
https://github.com/JackYFL/DISC
===============================

Found 20 times
DataLoader(dataset=train_dataset,
                                  batch_size=self.batch_size,
                                  shuffle=True,
                                  num_workers=self.num_workers,
                                  pin_memory=True)
DataLoader(dataset=test_dataset,
                                 batch_size=self.batch_size,
                                 shuffle=False,
                                 num_workers=self.num_workers,
                                 pin_memory=True)
DataLoader(dataset=train_dataset,
                                  batch_size=self.batch_size,
                                  shuffle=True,
                                  num_workers=self.num_workers,
                                  pin_memory=True)
DataLoader(dataset=test_dataset,
                                 batch_size=self.batch_size,
                                 shuffle=False,
                                 num_workers=self.num_workers,
                                 pin_memory=True)
DataLoader(dataset=train_dataset,
                                  batch_size=self.batch_size,
                                  shuffle=True,
                                  num_workers=self.num_workers,
                                  pin_memory=True)
DataLoader(dataset=test_dataset,
                                 batch_size=self.batch_size,
                                 shuffle=False,
                                 num_workers=self.num_workers,
                                 pin_memory=True)
DataLoader(dataset=eval_dataset,
                                 batch_size=self.batch_size,
                                 shuffle=False,
                                 num_workers=self.num_workers,
                                 pin_memory=True)
DataLoader(dataset=train_dataset,
                                  batch_size=self.batch_size,
                                  shuffle=True,
                                  num_workers=self.num_workers,
                                  pin_memory=True)
DataLoader(dataset=test_dataset,
                                 batch_size=self.batch_size,
                                 shuffle=False,
                                 num_workers=self.num_workers,
                                 pin_memory=True)
DataLoader(dataset=train_dataset,
                                      batch_size=self.batch_size,
                                      shuffle=True,
                                      pin_memory=True,
                                      drop_last=True,
                                      num_workers=self.num_workers)
DataLoader(dataset=train_dataset,
                                      batch_size=self.batch_size,
                                      shuffle=True,
                                      pin_memory=True,
                                      drop_last=False,
                                      num_workers=self.num_workers)
DataLoader(dataset=train_dataset,
                                      batch_size=self.batch_size,
                                      shuffle=True,
                                      pin_memory=True,
                                      drop_last=False,
                                      num_workers=self.num_workers)
DataLoader(dataset=train_dataset,
                                      batch_size=self.batch_size,
                                      shuffle=True,
                                      pin_memory=True,
                                      drop_last=False,
                                      num_workers=self.num_workers)
DataLoader(dataset=test_dataset,
                                     batch_size=self.batch_size,
                                     shuffle=False,
                                     pin_memory=True,
                                     drop_last=True,
                                     num_workers=self.num_workers)
DataLoader(dataset=train_dataset,
                                      batch_size=self.batch_size,
                                      shuffle=True,
                                      num_workers=self.num_workers,
                                      pin_memory=True)
DataLoader(dataset=train_dataset,
                                      batch_size=self.batch_size,
                                      shuffle=True,
                                      num_workers=self.num_workers,
                                      pin_memory=True)
DataLoader(dataset=test_dataset,
                                     batch_size=self.batch_size,
                                     shuffle=False,
                                     num_workers=self.num_workers,
                                     pin_memory=True)
DataLoader(dataset=train_dataset,
                                  batch_size=self.batch_size,
                                  shuffle=True,
                                  num_workers=self.num_workers,
                                  pin_memory=True)
DataLoader(dataset=test_dataset,
                                 batch_size=self.batch_size,
                                 shuffle=False,
                                 num_workers=self.num_workers,
                                 pin_memory=True)
DataLoader(dataset=imagenet_val,
                                     batch_size=self.batch_size,
                                     shuffle=False,
                                     num_workers=self.num_workers,
                                     pin_memory=True)
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/animal10N.py#L98
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/animal10N.py#L105
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/clothing1M.py#L174
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/clothing1M.py#L184
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/clothing1M.py#L198
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/clothing1M.py#L208
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/clothing1M.py#L218
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/food101N.py#L113
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/food101N.py#L120
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/noise_datasets.py#L375
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/noise_datasets.py#L391
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/noise_datasets.py#L407
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/noise_datasets.py#L421
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/noise_datasets.py#L435
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/tiny_imagenet.py#L277
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/tiny_imagenet.py#L287
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/tiny_imagenet.py#L297
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/webvision.py#L129
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/webvision.py#L138
https://github.com/JackYFL/DISC/blob/a21e910bffeb34873684937ac1066991a720552a/datasets/webvision.py#L146

========================================
https://github.com/haozhaowang/DaFKD2023
========================================

Found 2 times
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=True)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False, drop_last=True)
https://github.com/haozhaowang/DaFKD2023/blob/39a536c371a557461a26cf9a912150b0e5dfd3e2/data_loader.py#L698
https://github.com/haozhaowang/DaFKD2023/blob/39a536c371a557461a26cf9a912150b0e5dfd3e2/data_loader.py#L699

====================================
https://github.com/git-disl/scale-fl
====================================

Found 7 times
torch.utils.data.DataLoader(
                train_set, batch_size=batch_size,
                sampler=torch.utils.data.sampler.SubsetRandomSampler(
                    train_indices),
                num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
                val_set, batch_size=batch_size,
                sampler=torch.utils.data.sampler.SubsetRandomSampler(
                    val_indices),
                num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
                test_set,
                batch_size=batch_size, shuffle=False,
                num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
                train_set,
                batch_size=batch_size, shuffle=True,
                num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
                test_set,
                batch_size=batch_size, shuffle=False,
                num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=min(batch_size, len(idxs)),
                                           sampler=torch.utils.data.sampler.SubsetRandomSampler(idxs),
                                           num_workers=args.workers, pin_memory=True, collate_fn=collate_fn)
torch.utils.data.DataLoader(dataset, batch_size=min(batch_size, len(idxs)),
                                           sampler=torch.utils.data.sampler.SubsetRandomSampler(idxs),
                                           num_workers=args.workers, pin_memory=True)
https://github.com/git-disl/scale-fl/blob/c2084e461cef83751b99a958198aced66c1d7d7c/data_tools/dataloader.py#L180
https://github.com/git-disl/scale-fl/blob/c2084e461cef83751b99a958198aced66c1d7d7c/data_tools/dataloader.py#L186
https://github.com/git-disl/scale-fl/blob/c2084e461cef83751b99a958198aced66c1d7d7c/data_tools/dataloader.py#L192
https://github.com/git-disl/scale-fl/blob/c2084e461cef83751b99a958198aced66c1d7d7c/data_tools/dataloader.py#L198
https://github.com/git-disl/scale-fl/blob/c2084e461cef83751b99a958198aced66c1d7d7c/data_tools/dataloader.py#L203
https://github.com/git-disl/scale-fl/blob/c2084e461cef83751b99a958198aced66c1d7d7c/data_tools/dataloader.py#L227
https://github.com/git-disl/scale-fl/blob/c2084e461cef83751b99a958198aced66c1d7d7c/data_tools/dataloader.py#L231

==========================================================
https://github.com/yu-takagi/StableDiffusionReconstruction
==========================================================

Found 6 times
DataLoader(
        test_dataset,
        batch_size=config['batch_size'],
        num_workers=4,
        pin_memory=True,
        drop_last=False,
        shuffle=False,
    )
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/caption/BLIP/eval_retrieval_video.py#L201
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/caption/BLIP/data/__init__.py#L89
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/main.py#L203
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/main.py#L212
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/main.py#L228
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/main.py#L236

===========================================
https://github.com/YizhuoChen99/KD4DGM-CVPR
===========================================

Found 10 times
torch.utils.data.DataLoader(
                dataset=dataset,
                batch_size=loader.batch_size,
                drop_last=True,
                shuffle=True,
                **kwargs
            )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=batch_size,
        drop_last=True,
        shuffle=True,
        **kwargs
    )
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=batch_size,
        drop_last=True,
        shuffle=True,
        **kwargs
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        drop_last=True,
        shuffle=shuffle,
        sampler=sampler,
        **kwargs)
torch.utils.data.DataLoader(dataset,
                                                 batch_size=self.batch_size,
                                                 num_workers=self.workers)
torch.utils.data.DataLoader(dataset=dataset,
                                           batch_size=loader.batch_size,
                                           drop_last=True,
                                           shuffle=True,
                                           **kwargs)
torch.utils.data.DataLoader(train_dataset,
                                               batch_size=batch_size,
                                               drop_last=True,
                                               shuffle=True,
                                               **kwargs)
torch.utils.data.DataLoader(test_dataset,
                                              batch_size=batch_size,
                                              drop_last=True,
                                              shuffle=True,
                                              **kwargs)
torch.utils.data.DataLoader(dataset,
                                       batch_size=batch_size,
                                       drop_last=True,
                                       shuffle=shuffle,
                                       sampler=sampler,
                                       **kwargs)
torch.utils.data.DataLoader(dataset,
                                                 batch_size=self.batch_size,
                                                 num_workers=self.workers)
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/compressVAE/datasets/utils.py#L103
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/compressVAE/datasets/utils.py#L136
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/compressVAE/datasets/utils.py#L143
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/compressVAE/datasets/utils.py#L164
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/compressVAE/helpers/metrics_image.py#L139
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/continualVAE/datasets/utils.py#L108
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/continualVAE/datasets/utils.py#L142
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/continualVAE/datasets/utils.py#L147
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/continualVAE/datasets/utils.py#L163
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/continualVAE/helpers/metrics_image.py#L139

===================================================================================================================
https://github.com/UCSB-VRL/MethaneMapper-Spectral-Absorption-aware-Hyperspectral-Transformer-for-Methane-Detection
===================================================================================================================

Found 3 times
DataLoader(
        dataset_train,
        batch_sampler=batch_sampler_train,
        collate_fn=utils.collateHyperData,
        num_workers=args.num_workers,
    )
DataLoader(
        dataset_val,
        args.batch_size,
        sampler=sampler_val,
        drop_last=False,
        collate_fn=utils.collateHyperData,
        num_workers=args.num_workers,
    )
DataLoader(DIRECTORY)
https://github.com/UCSB-VRL/MethaneMapper-Spectral-Absorption-aware-Hyperspectral-Transformer-for-Methane-Detection/blob/1cc16759db671377a8c75b28c573673e7f8eb4e6/methanemapper/hyper_main.py#L195
https://github.com/UCSB-VRL/MethaneMapper-Spectral-Absorption-aware-Hyperspectral-Transformer-for-Methane-Detection/blob/1cc16759db671377a8c75b28c573673e7f8eb4e6/methanemapper/hyper_main.py#L201
https://github.com/UCSB-VRL/MethaneMapper-Spectral-Absorption-aware-Hyperspectral-Transformer-for-Methane-Detection/blob/1cc16759db671377a8c75b28c573673e7f8eb4e6/train_dataset_generator/train_data_generator.py#L158

================================
https://github.com/Zeyu-Zhu/PGCU
================================

Found 2 times
DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
DataLoader(test_dataset, batch_size=batch_size, shuffle=True)
https://github.com/Zeyu-Zhu/PGCU/blob/7b97befbbf467a44eed6da5f306682ec8ff8f322/train_pannet.py#L25
https://github.com/Zeyu-Zhu/PGCU/blob/7b97befbbf467a44eed6da5f306682ec8ff8f322/train_pannet.py#L26

=========================================
https://github.com/DominikMuhle/dnls_covs
=========================================

Found 5 times
DataLoader(
        training_dataset,
        batch_size=cfg.hyperparameter.batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=4,
        pin_memory=pin_memory,
        collate_fn=custom_collate,
    )
DataLoader(
            dataset,
            batch_size=2 * cfg.hyperparameter.batch_size,
            shuffle=False,
            num_workers=4,
            collate_fn=custom_collate,
        )
DataLoader(
        Subset(eval_datasets[sorted(eval_datasets.keys())[0]], [0, -1]),
        batch_size=1,
        shuffle=False,
        num_workers=1,
        collate_fn=custom_collate,
    )
DataLoader(
                sequence_subset,
                batch_size=1,
                shuffle=False,
                num_workers=4,
                pin_memory=True,
                collate_fn=custom_collate,
            )
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
    )
https://github.com/DominikMuhle/dnls_covs/blob/73d2e5c8dcd9afe2e6a82db3425d7d2704c54ae0/scripts/real_world.py#L103
https://github.com/DominikMuhle/dnls_covs/blob/73d2e5c8dcd9afe2e6a82db3425d7d2704c54ae0/scripts/real_world.py#L113
https://github.com/DominikMuhle/dnls_covs/blob/73d2e5c8dcd9afe2e6a82db3425d7d2704c54ae0/scripts/real_world.py#L122
https://github.com/DominikMuhle/dnls_covs/blob/73d2e5c8dcd9afe2e6a82db3425d7d2704c54ae0/scripts/covpred/evaluation/sequence.py#L135
https://github.com/DominikMuhle/dnls_covs/blob/73d2e5c8dcd9afe2e6a82db3425d7d2704c54ae0/scripts/covpred/training/synthetic.py#L242

============================================
https://github.com/Chasel-Tsui/mmrotate-dcfl
============================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/Chasel-Tsui/mmrotate-dcfl/blob/d60ca27234a3276a4ca714b5ad616366a4bbdd9a/mmdet/datasets/builder.py#L195

===========================================
https://github.com/michaeltrs/DeepSatModels
===========================================

Found 4 times
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers,
                                             pin_memory=True, sampler=sampler)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers,
                                             collate_fn=my_collate)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers,
                                             pin_memory=True, sampler=sampler)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers,
                                             collate_fn=my_collate)
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/data/MTLCC/dataloader.py#L22
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/data/MTLCC/dataloader.py#L30
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/data/PASTIS24/dataloader.py#L20
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/data/PASTIS24/dataloader.py#L28

=============================================
https://github.com/sysu-lwj-lab/OmniCity-v1.0
=============================================

Found 15 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/mmdet/datasets/builder.py#L125
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_data/test_datasets/test_common.py#L225
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L75
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L87
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L98
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L110
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L114
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L132
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L134
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L154
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L156
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L176
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L196
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L215
https://github.com/sysu-lwj-lab/OmniCity-v1.0/blob/0f967352206ba21534478d36c395438c5043899a/tests/test_runtime/test_eval_hook.py#L235

===============================
https://github.com/uzh-rpg/esfp
===============================

Found 3 times
DataLoader(
            sfp_train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
            num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
DataLoader(sfp_test_dataset, 
                                batch_size =1, 
                                shuffle=False, num_workers=8, 
                                drop_last=False)
DataLoader(sfp_test_dataset, 
                                batch_size =1, 
                                shuffle=False, num_workers=8, 
                                drop_last=False)
https://github.com/uzh-rpg/esfp/blob/8ce7b4c1de797c4b870a0b27346e4b004b603e2b/training_code/train.py#L459
https://github.com/uzh-rpg/esfp/blob/8ce7b4c1de797c4b870a0b27346e4b004b603e2b/training_code/train.py#L462
https://github.com/uzh-rpg/esfp/blob/8ce7b4c1de797c4b870a0b27346e4b004b603e2b/training_code/train.py#L488

============================================
https://github.com/renjiaoyi/imagerelighting
============================================

Found 6 times
DataLoader(BuildDataset(
        input_folder=os.path.join(parent_dir, 'imgs'),
        mask_folder=os.path.join(parent_dir, 'masks'),
        norm_transforms_=norm_transforms__,
        transforms_=transforms__), batch_size=1, shuffle=False)
DataLoader(
    BuildDataset2(
        input_folder=input_folder,
        mask_folder=mask_folder,
        norm_transforms_=norm_transforms__,
        transforms_=transforms__),
    batch_size=opt.batchsize,
    shuffle=False,
    num_workers=opt.cpus
)
DataLoader(
    SPECdataset(
        opt.dataroot,
        opt.batchsize,
        norm_transforms_=norm_transforms__,
        transforms_=transforms__),
    batch_size=opt.batchsize,
    shuffle=False,
    num_workers=opt.cpus
)
DataLoader(
    ANDataset(dataroot, transforms_=transforms_), batch_size=batch_size, shuffle=False
)
DataLoader(
    ANDataset(dataroot, transforms_=transforms_), batch_size=batch_size, shuffle=False
)
DataLoader(
    ANDataset(dataroot, transforms_=transforms_), batch_size=batch_size, shuffle=False
)
https://github.com/renjiaoyi/imagerelighting/blob/35e471c88433ef7418cfa586e5616ebc84575b88/InverseRendering/test_end2end_invrender.py#L95
https://github.com/renjiaoyi/imagerelighting/blob/35e471c88433ef7418cfa586e5616ebc84575b88/InverseRendering/test_spec_separation.py#L39
https://github.com/renjiaoyi/imagerelighting/blob/35e471c88433ef7418cfa586e5616ebc84575b88/InverseRendering/train_spec_separation.py#L43
https://github.com/renjiaoyi/imagerelighting/blob/35e471c88433ef7418cfa586e5616ebc84575b88/Relighting/naive_insertion.py#L54
https://github.com/renjiaoyi/imagerelighting/blob/35e471c88433ef7418cfa586e5616ebc84575b88/Relighting/render_script.py#L52
https://github.com/renjiaoyi/imagerelighting/blob/35e471c88433ef7418cfa586e5616ebc84575b88/Relighting/render_video.py#L53

============================================
https://github.com/LMozart/CVPR2023-DANI-Net
============================================

Found 2 times
torch.utils.data.DataLoader(train_set, 
                                               batch_size=batch_size, 
                                               num_workers=0,
                                               shuffle=True)
torch.utils.data.DataLoader(eval_set, 
                                               batch_size=1, 
                                               num_workers=0,
                                               shuffle=False)
https://github.com/LMozart/CVPR2023-DANI-Net/blob/a7bba4ce65ceac4c5bcbed22fd9fff9ace44713a/utils/dataset_utils.py#L43
https://github.com/LMozart/CVPR2023-DANI-Net/blob/a7bba4ce65ceac4c5bcbed22fd9fff9ace44713a/utils/dataset_utils.py#L48

===============================
https://github.com/MyNiuuu/VCSD
===============================

Found 2 times
DataLoader(
        dataset=dataset, batch_size=batch_size, 
        drop_last=True, num_workers=num_workers,
        sampler=data_sampler(dataset, shuffle=True, distributed=distributed),
        pin_memory=True
    )
DataLoader(
        dataset=dataset, batch_size=batch_size, 
        drop_last=True, num_workers=num_workers,
        pin_memory=True
    )
https://github.com/MyNiuuu/VCSD/blob/e246a4e3bcb1bfa89d8329dce4fb141116454fa5/util.py#L46
https://github.com/MyNiuuu/VCSD/blob/e246a4e3bcb1bfa89d8329dce4fb141116454fa5/util.py#L179

===============================
https://github.com/haimsaw/OReX
===============================

Found 3 times
DataLoader(new_dataset, batch_size=2 ** args.batch_size_exp, sampler=None,
                                      shuffle=True, pin_memory=True, num_workers=4)
DataLoader(xyzs, batch_size=2 ** args.batch_size_exp, shuffle=False,
                                 num_workers=4, pin_memory=True)
DataLoader(xyzs, batch_size=2 ** args.batch_size_exp, shuffle=False,
                                 num_workers=4, pin_memory=True)
https://github.com/haimsaw/OReX/blob/d09d4ea6a08d58495c6f283c34e80150327bea9a/Trainer.py#L91
https://github.com/haimsaw/OReX/blob/d09d4ea6a08d58495c6f283c34e80150327bea9a/Trainer.py#L127
https://github.com/haimsaw/OReX/blob/d09d4ea6a08d58495c6f283c34e80150327bea9a/Trainer.py#L140

===================================
https://github.com/Nimolty/SGTAPose
===================================

Found 2 times
torch.utils.data.DataLoader(
        Dataset, sampler=train_sampler, batch_size=opt.batch_size, 
        num_workers=opt.num_workers, pin_memory=True, drop_last=True
        )
torch.utils.data.DataLoader(
        ValDataset, sampler=val_sampler, batch_size=opt.batch_size, 
        num_workers=opt.num_workers, pin_memory=True, drop_last=True 
        )
https://github.com/Nimolty/SGTAPose/blob/e74304100a8754d4f98ac7f7bd4f5529ed760682/sgtapose/train.py#L252
https://github.com/Nimolty/SGTAPose/blob/e74304100a8754d4f98ac7f7bd4f5529ed760682/sgtapose/train.py#L257

=====================================
https://github.com/PKU-EPIC/PartManip
=====================================

Found 11 times
DataLoader(
            self.train_data_pipe,
            batch_size=self.train_batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=True,
        )
DataLoader(
                self.val_data_pipe,
                batch_size=self.val_batch_size,
                shuffle=False,
                num_workers=self.num_workers,
                collate_fn=data_utils.trivial_batch_collator,
                pin_memory=True,
                drop_last=False,
            )
DataLoader(
                self.intra_data_pipe,
                batch_size=self.val_batch_size,
                shuffle=False,
                num_workers=self.num_workers,
                collate_fn=data_utils.trivial_batch_collator,
                pin_memory=True,
                drop_last=False,
            )
DataLoader(
                self.inter_data_pipe,
                batch_size=self.val_batch_size,
                shuffle=False,
                num_workers=self.num_workers,
                collate_fn=data_utils.trivial_batch_collator,
                pin_memory=True,
                drop_last=False,
            )
DataLoader(
            self.test_data_pipe,
            batch_size=self.test_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=False,
        )
DataLoader(
            self.train_data_pipe,
            batch_size=self.train_batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=True,
        )
DataLoader(
            self.val_data_pipe,
            batch_size=self.val_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=False,
        )
DataLoader(
            self.test_data_pipe,
            batch_size=self.test_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=False,
        )
DataLoader(
            self.train_data_pipe,
            batch_size=self.train_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=True,
        )
DataLoader(
            self.val_data_pipe,
            batch_size=self.val_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=False,
        )
DataLoader(
            self.test_data_pipe,
            batch_size=self.test_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            collate_fn=data_utils.trivial_batch_collator,
            pin_memory=True,
            drop_last=False,
        )
https://github.com/PKU-EPIC/PartManip/blob/04b4e27064bb0d8b8c54d7f46199e29e20908cf2/gym/perception/datasets/gapartnet.py#L290
https://github.com/PKU-EPIC/PartManip/blob/04b4e27064bb0d8b8c54d7f46199e29e20908cf2/gym/perception/datasets/gapartnet.py#L302
https://github.com/PKU-EPIC/PartManip/blob/04b4e27064bb0d8b8c54d7f46199e29e20908cf2/gym/perception/datasets/gapartnet.py#L311
https://github.com/PKU-EPIC/PartManip/blob/04b4e27064bb0d8b8c54d7f46199e29e20908cf2/gym/perception/datasets/gapartnet.py#L320
https://github.com/PKU-EPIC/PartManip/blob/04b4e27064bb0d8b8c54d7f46199e29e20908cf2/gym/perception/datasets/gapartnet.py#L331
https://github.com/PKU-EPIC/PartManip/blob/04b4e27064bb0d8b8c54d7f46199e29e20908cf2/gym/perception/datasets/gapartnet_new.py#L327
https://github.com/PKU-EPIC/PartManip/blob/04b4e27064bb0d8b8c54d7f46199e29e20908cf2/gym/perception/datasets/gapartnet_new.py#L338
https://github.com/PKU-EPIC/PartManip/blob/04b4e27064bb0d8b8c54d7f46199e29e20908cf2/gym/perception/datasets/gapartnet_new.py#L349
https://github.com/PKU-EPIC/PartManip/blob/04b4e27064bb0d8b8c54d7f46199e29e20908cf2/gym/perception/datasets/scannet_v2.py#L216
https://github.com/PKU-EPIC/PartManip/blob/04b4e27064bb0d8b8c54d7f46199e29e20908cf2/gym/perception/datasets/scannet_v2.py#L227
https://github.com/PKU-EPIC/PartManip/blob/04b4e27064bb0d8b8c54d7f46199e29e20908cf2/gym/perception/datasets/scannet_v2.py#L238

===========================================
https://github.com/Kami-code/dexart-release
===========================================

Found 9 times
DataLoader(train_dataset, batch_size=64, shuffle=True, num_workers=12)
DataLoader(val_dataset, batch_size=128, shuffle=False, num_workers=12)
DataLoader(test_dataset, batch_size=128, shuffle=False, num_workers=12)
DataLoader(train_dataset, batch_size=32, shuffle=True, num_workers=12)
DataLoader(val_dataset, batch_size=128, shuffle=False, num_workers=12)
DataLoader(test_dataset, batch_size=128, shuffle=False, num_workers=12)
DataLoader(train_dataset, batch_size=64, shuffle=True, num_workers=12)
DataLoader(val_dataset, batch_size=128, shuffle=False, num_workers=12)
DataLoader(test_dataset, batch_size=128, shuffle=False, num_workers=12)
https://github.com/Kami-code/dexart-release/blob/b5c6522d9d487cf46806bdbba86b83501bfc1f0f/examples/pretrain/reconstruction/train_reconstruction.py#L142
https://github.com/Kami-code/dexart-release/blob/b5c6522d9d487cf46806bdbba86b83501bfc1f0f/examples/pretrain/reconstruction/train_reconstruction.py#L143
https://github.com/Kami-code/dexart-release/blob/b5c6522d9d487cf46806bdbba86b83501bfc1f0f/examples/pretrain/reconstruction/train_reconstruction.py#L144
https://github.com/Kami-code/dexart-release/blob/b5c6522d9d487cf46806bdbba86b83501bfc1f0f/examples/pretrain/segmentation/train_segmentation.py#L205
https://github.com/Kami-code/dexart-release/blob/b5c6522d9d487cf46806bdbba86b83501bfc1f0f/examples/pretrain/segmentation/train_segmentation.py#L206
https://github.com/Kami-code/dexart-release/blob/b5c6522d9d487cf46806bdbba86b83501bfc1f0f/examples/pretrain/segmentation/train_segmentation.py#L207
https://github.com/Kami-code/dexart-release/blob/b5c6522d9d487cf46806bdbba86b83501bfc1f0f/examples/pretrain/simsiam/train_simsiam.py#L142
https://github.com/Kami-code/dexart-release/blob/b5c6522d9d487cf46806bdbba86b83501bfc1f0f/examples/pretrain/simsiam/train_simsiam.py#L143
https://github.com/Kami-code/dexart-release/blob/b5c6522d9d487cf46806bdbba86b83501bfc1f0f/examples/pretrain/simsiam/train_simsiam.py#L144

================================
https://github.com/pypose/pypose
================================

Found 4 times
Data.DataLoader(dataset=train_dataset, batch_size=args.batch_size,
                                   collate_fn=imu_collate, shuffle=True)
Data.DataLoader(dataset=test_dataset, batch_size=args.batch_size,
                                  collate_fn=imu_collate, shuffle=False)
Data.DataLoader(dataset=evaluate_dataset, batch_size=1,
                                      collate_fn=imu_collate, shuffle=False)
Data.DataLoader(dataset=dataset, batch_size=args.batch_size,
                                 collate_fn=imu_collate, shuffle=False)
https://github.com/pypose/pypose/blob/08e9692e0eca40df5c62fbcfb8a26a12ea9ad106/examples/module/imu/imu_corrector.py#L161
https://github.com/pypose/pypose/blob/08e9692e0eca40df5c62fbcfb8a26a12ea9ad106/examples/module/imu/imu_corrector.py#L163
https://github.com/pypose/pypose/blob/08e9692e0eca40df5c62fbcfb8a26a12ea9ad106/examples/module/imu/imu_corrector.py#L165
https://github.com/pypose/pypose/blob/08e9692e0eca40df5c62fbcfb8a26a12ea9ad106/examples/module/imu/imu_integrator.py#L55

=====================================
https://github.com/ai4ce/DeepMapping2
=====================================

Found 4 times
DataLoader(train_dataset, batch_size=None, num_workers=4, shuffle=True)
DataLoader(eval_dataset, batch_size=64, num_workers=4)
DataLoader(train_dataset, batch_size=None, sampler=train_sampler)
DataLoader(eval_dataset, batch_size=128, num_workers=8)
https://github.com/ai4ce/DeepMapping2/blob/aedd28e65621987d576b17be85b03c3257bb7ce6/script/train.py#L71
https://github.com/ai4ce/DeepMapping2/blob/aedd28e65621987d576b17be85b03c3257bb7ce6/script/train.py#L72
https://github.com/ai4ce/DeepMapping2/blob/aedd28e65621987d576b17be85b03c3257bb7ce6/script/train_KITTI_ddp.py#L65
https://github.com/ai4ce/DeepMapping2/blob/aedd28e65621987d576b17be85b03c3257bb7ce6/script/train_KITTI_ddp.py#L68

====================================
https://github.com/vLAR-group/GrowSP
====================================

Found 9 times
DataLoader(test_dataset, batch_size=1, collate_fn=cfl_collate_fn_test(), num_workers=4, pin_memory=True)
DataLoader(val_dataset, batch_size=1, collate_fn=cfl_collate_fn_val(), num_workers=args.cluster_workers, pin_memory=True)
DataLoader(val_dataset, batch_size=1, collate_fn=cfl_collate_fn_val(), num_workers=args.cluster_workers, pin_memory=True)
DataLoader(trainset, batch_size=args.batch_size, shuffle=True, collate_fn=cfl_collate_fn(), num_workers=args.workers, pin_memory=True, worker_init_fn=worker_init_fn(seed))
DataLoader(clusterset, batch_size=1, collate_fn=cfl_collate_fn(), num_workers=args.cluster_workers, pin_memory=True)
DataLoader(trainset, batch_size=args.batch_size, shuffle=True, collate_fn=cfl_collate_fn(), num_workers=args.workers, pin_memory=True, worker_init_fn=worker_init_fn(seed))
DataLoader(clusterset, batch_size=1, collate_fn=cfl_collate_fn(), num_workers=args.cluster_workers, pin_memory=True)
DataLoader(trainset, batch_size=args.batch_size, shuffle=True, collate_fn=cfl_collate_fn(), num_workers=args.workers, pin_memory=True, worker_init_fn=worker_init_fn(seed))
DataLoader(clusterset, batch_size=1, collate_fn=cfl_collate_fn(), num_workers=args.cluster_workers, pin_memory=True)
https://github.com/vLAR-group/GrowSP/blob/b7eaece0847189c7b94854a03d7a3816bf478236/eval_S3DIS.py#L110
https://github.com/vLAR-group/GrowSP/blob/b7eaece0847189c7b94854a03d7a3816bf478236/eval_ScanNet.py#L107
https://github.com/vLAR-group/GrowSP/blob/b7eaece0847189c7b94854a03d7a3816bf478236/eval_SemanticKITTI.py#L93
https://github.com/vLAR-group/GrowSP/blob/b7eaece0847189c7b94854a03d7a3816bf478236/train_S3DIS.py#L73
https://github.com/vLAR-group/GrowSP/blob/b7eaece0847189c7b94854a03d7a3816bf478236/train_S3DIS.py#L75
https://github.com/vLAR-group/GrowSP/blob/b7eaece0847189c7b94854a03d7a3816bf478236/train_ScanNet.py#L67
https://github.com/vLAR-group/GrowSP/blob/b7eaece0847189c7b94854a03d7a3816bf478236/train_ScanNet.py#L69
https://github.com/vLAR-group/GrowSP/blob/b7eaece0847189c7b94854a03d7a3816bf478236/train_SemanticKITTI.py#L65
https://github.com/vLAR-group/GrowSP/blob/b7eaece0847189c7b94854a03d7a3816bf478236/train_SemanticKITTI.py#L68

====================================
https://github.com/sijieaaa/HypLiLoc
====================================

Found 2 times
DataLoader(test_set, batch_size=opt.batchsize_test, shuffle=False, 
        num_workers=opt.nThreads, 
        pin_memory=True,
    )
DataLoader(
        train_set, 
        batch_size=opt.batchsize, 
        shuffle=True,
        num_workers=opt.nThreads,
        pin_memory=True,
    )
https://github.com/sijieaaa/HypLiLoc/blob/e72b0b99dab1e7527de4591ca80905bafaa913d2/eval.py#L69
https://github.com/sijieaaa/HypLiLoc/blob/e72b0b99dab1e7527de4591ca80905bafaa913d2/train.py#L58

================================
https://github.com/hujiecpp/YOSO
================================

Found 3 times
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=1,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
https://github.com/hujiecpp/YOSO/blob/04b898d395ffd8318aa3761b0b2b6d20b3514f26/detectron2/data/build.py#L314
https://github.com/hujiecpp/YOSO/blob/04b898d395ffd8318aa3761b0b2b6d20b3514f26/detectron2/data/build.py#L325
https://github.com/hujiecpp/YOSO/blob/04b898d395ffd8318aa3761b0b2b6d20b3514f26/detectron2/data/build.py#L511

=========================================
https://github.com/zhijieshen-bjtu/DOPNet
=========================================

Found 2 times
torch.utils.data.DataLoader(
            train_dataset, sampler=train_sampler,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            pin_memory=True,
            drop_last=True,
        )
torch.utils.data.DataLoader(
        val_dataset, sampler=val_sampler,
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers,
        pin_memory=True,
        drop_last=False
    )
https://github.com/zhijieshen-bjtu/DOPNet/blob/93bb29f03ccbfa962c77f62e856314983c4c0c8c/dataset/build.py#L28
https://github.com/zhijieshen-bjtu/DOPNet/blob/93bb29f03ccbfa962c77f62e856314983c4c0c8c/dataset/build.py#L39

======================================
https://github.com/LilyDaytoy/OpenPVSG
======================================

Found 5 times
DataLoader(pvsg_rel_dataset, batch_size=1, shuffle=False)
DataLoader(pvsg_rel_dataset, batch_size=1, shuffle=False)
DataLoader(pvsg_rel_dataset, batch_size=1, shuffle=True)
DataLoader(pvsg_rel_dataset, batch_size=1, shuffle=False)
DataLoader(pvsg_rel_dataset, batch_size=1, shuffle=False)
https://github.com/LilyDaytoy/OpenPVSG/blob/4aee63bc343274f9a1d591e8d61f3e86f50616a8/tools/rel_test.py#L134
https://github.com/LilyDaytoy/OpenPVSG/blob/4aee63bc343274f9a1d591e8d61f3e86f50616a8/tools/rel_test_full.py#L47
https://github.com/LilyDaytoy/OpenPVSG/blob/4aee63bc343274f9a1d591e8d61f3e86f50616a8/tools/rel_train.py#L40
https://github.com/LilyDaytoy/OpenPVSG/blob/4aee63bc343274f9a1d591e8d61f3e86f50616a8/tools/rel_train.py#L44
https://github.com/LilyDaytoy/OpenPVSG/blob/4aee63bc343274f9a1d591e8d61f3e86f50616a8/tools/show_pred_results.py#L36

=================================
https://github.com/jzuern/lanegnn
=================================

Found 2 times
DataLoader(dataset_train,
                                  batch_size=args.bsize,
                                  shuffle=True,
                                  num_workers=4,
                                  drop_last=True)
DataLoader(dataset_test,
                                 batch_size=1,
                                 shuffle=True,
                                 num_workers=1,
                                 drop_last=False)
https://github.com/jzuern/lanegnn/blob/7ddca53340740d007a9528f5dce02306b5aa1109/methods/train_centerline_regression.py#L297
https://github.com/jzuern/lanegnn/blob/7ddca53340740d007a9528f5dce02306b5aa1109/methods/train_centerline_regression.py#L302

===============================
https://github.com/yhw-yhw/MIME
===============================

Found 8 times
DataLoader(
            train_dataset,
            batch_size=config["training"].get("batch_size", 128),
            sampler=train_sampler,
            num_workers=args.n_processes,
            collate_fn=train_dataset.collate_fn,
            drop_last=True,
            pin_memory=True
        )
DataLoader(
            validation_dataset,
            batch_size=config["validation"].get("batch_size", 1),
            sampler=val_sampler,
            num_workers=args.n_processes,
            collate_fn=validation_dataset.collate_fn,
            drop_last=True,
            pin_memory=True
        )
DataLoader(
            train_dataset,
            batch_size=config["training"].get("batch_size", 128),
            num_workers=args.n_processes,
            collate_fn=train_dataset.collate_fn,
            shuffle=True
        )
DataLoader(
            validation_dataset,
            batch_size=config["validation"].get("batch_size", 1),
            num_workers=args.n_processes,
            collate_fn=validation_dataset.collate_fn,
            shuffle=False
        )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=args.num_workers
    )
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers
    )
DataLoader(ds_train, BATCH_SIZE * N_DATA, shuffle=True, num_workers=4)
DataLoader(ds_test, BATCH_SIZE * N_DATA, shuffle=False, num_workers=4)
https://github.com/yhw-yhw/MIME/blob/ad7711f21a64eb541ffc6fa951dee25950148a66/scripts/train_network_DDP.py#L142
https://github.com/yhw-yhw/MIME/blob/ad7711f21a64eb541ffc6fa951dee25950148a66/scripts/train_network_DDP.py#L151
https://github.com/yhw-yhw/MIME/blob/ad7711f21a64eb541ffc6fa951dee25950148a66/scripts/train_network_DDP.py#L161
https://github.com/yhw-yhw/MIME/blob/ad7711f21a64eb541ffc6fa951dee25950148a66/scripts/train_network_DDP.py#L168
https://github.com/yhw-yhw/MIME/blob/ad7711f21a64eb541ffc6fa951dee25950148a66/scripts/evaluation/synthetic_vs_real_classifier.py#L198
https://github.com/yhw-yhw/MIME/blob/ad7711f21a64eb541ffc6fa951dee25950148a66/scripts/evaluation/synthetic_vs_real_classifier.py#L204
https://github.com/yhw-yhw/MIME/blob/ad7711f21a64eb541ffc6fa951dee25950148a66/thirdparty/Rotated_IoU/demo.py#L106
https://github.com/yhw-yhw/MIME/blob/ad7711f21a64eb541ffc6fa951dee25950148a66/thirdparty/Rotated_IoU/demo.py#L107

===================================
https://github.com/ywyue/RoomFormer
===================================

Found 9 times
DataLoader(dataset_eval, args.batch_size, sampler=sampler_eval,
                                 drop_last=False, collate_fn=trivial_batch_collator, num_workers=args.num_workers,
                                 pin_memory=True)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=trivial_batch_collator, num_workers=args.num_workers,
                                   pin_memory=True)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=trivial_batch_collator, num_workers=args.num_workers,
                                 pin_memory=True)
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
DataLoader(self.dataset, self.batch_size,
                                   drop_last=True,
                                   collate_fn=self.collate_fn,
                                   shuffle=True)
DataLoader(self.dataset, self.batch_size,
                                   drop_last=True,
                                   collate_fn=self.collate_fn)
DataLoader(self.dataset, self.batch_size,
                                   num_workers=1,
                                   drop_last=True,
                                   collate_fn=self.collate_fn)
https://github.com/ywyue/RoomFormer/blob/33ad087f50f15fce04719828db8d2a56fd4b630f/eval.py#L121
https://github.com/ywyue/RoomFormer/blob/33ad087f50f15fce04719828db8d2a56fd4b630f/main.py#L158
https://github.com/ywyue/RoomFormer/blob/33ad087f50f15fce04719828db8d2a56fd4b630f/main.py#L161
https://github.com/ywyue/RoomFormer/blob/33ad087f50f15fce04719828db8d2a56fd4b630f/detectron2/data/build.py#L321
https://github.com/ywyue/RoomFormer/blob/33ad087f50f15fce04719828db8d2a56fd4b630f/detectron2/data/build.py#L332
https://github.com/ywyue/RoomFormer/blob/33ad087f50f15fce04719828db8d2a56fd4b630f/detectron2/data/build.py#L537
https://github.com/ywyue/RoomFormer/blob/33ad087f50f15fce04719828db8d2a56fd4b630f/s3d_floorplan_eval/S3DLoader/S3DLoader.py#L37
https://github.com/ywyue/RoomFormer/blob/33ad087f50f15fce04719828db8d2a56fd4b630f/s3d_floorplan_eval/S3DLoader/S3DLoader.py#L51
https://github.com/ywyue/RoomFormer/blob/33ad087f50f15fce04719828db8d2a56fd4b630f/s3d_floorplan_eval/S3DLoader/S3DLoader.py#L63

====================================
https://github.com/lyclyc52/NeRF_RPN
====================================

Found 9 times
DataLoader(self.train_set, batch_size=self.args.batch_size, 
                                           collate_fn=collate_fn,
                                           shuffle=True, num_workers=4, pin_memory=True)
DataLoader(self.train_set, batch_size=self.args.batch_size // self.world_size,
                                           collate_fn=collate_fn,
                                           sampler=self.train_sampler, num_workers=2, pin_memory=True)
DataLoader(dataset, batch_size=self.args.batch_size // self.world_size, 
                                shuffle=False, num_workers=4,
                                collate_fn=collate_fn)
DataLoader(self.train_set, batch_size=self.args.batch_size, 
                                           collate_fn=BaseDataset.collate_fn,
                                           shuffle=True, num_workers=4, pin_memory=True)
DataLoader(self.train_set, batch_size=self.args.batch_size // self.world_size,
                                           collate_fn=BaseDataset.collate_fn,
                                           sampler=self.train_sampler, num_workers=2, pin_memory=True)
DataLoader(dataset, batch_size=self.args.batch_size // self.world_size, 
                                shuffle=False, num_workers=4,
                                collate_fn=dataset.collate_fn)
DataLoader(self.train_set, batch_size=self.args.batch_size, 
                                           collate_fn=RPNClassificationDataset.collate_fn,
                                           shuffle=True, num_workers=4, pin_memory=True)
DataLoader(self.train_set, batch_size=self.args.batch_size // self.world_size,
                                           collate_fn=RPNClassificationDataset.collate_fn,
                                           sampler=self.train_sampler, num_workers=2, pin_memory=True)
DataLoader(dataset, batch_size=1, 
                                shuffle=False, num_workers=1,
                                collate_fn=RPNClassificationDataset.collate_fn)
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/nerf_rpn/run_fcos.py#L305
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/nerf_rpn/run_fcos.py#L310
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/nerf_rpn/run_fcos.py#L430
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/nerf_rpn/run_rpn.py#L332
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/nerf_rpn/run_rpn.py#L337
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/nerf_rpn/run_rpn.py#L458
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/nerf_rpn/run_rpn_detect.py#L287
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/nerf_rpn/run_rpn_detect.py#L292
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/nerf_rpn/run_rpn_detect.py#L444

======================================
https://github.com/OreoChocolate/MUREN
======================================

Found 3 times
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
https://github.com/OreoChocolate/MUREN/blob/d7c8e63fad33eb0bd846dd36b3a8dbe536d8a39b/generate_vcoco_official.py#L261
https://github.com/OreoChocolate/MUREN/blob/d7c8e63fad33eb0bd846dd36b3a8dbe536d8a39b/main.py#L191
https://github.com/OreoChocolate/MUREN/blob/d7c8e63fad33eb0bd846dd36b3a8dbe536d8a39b/main.py#L193

===================================
https://github.com/murcherful/USSPA
===================================

Found 6 times
DataLoader(self.valid_dataset, batch_size = self.batch_size, shuffle=False, num_workers=self.num_work, collate_fn=self.valid_dataset._collate_fn)
DataLoader(self.valid_dataset, batch_size = self.batch_size, shuffle=False, num_workers=self.num_work, collate_fn=self.valid_dataset._collate_fn)
DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True, num_workers=self.num_work, collate_fn=self.train_dataset._collate_fn)
DataLoader(self.valid_dataset, batch_size=self.batch_size, shuffle=False, num_workers=self.num_work, collate_fn=self.valid_dataset._collate_fn)
DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True, num_workers=self.num_work, collate_fn=self.train_dataset._collate_fn)
DataLoader(self.valid_dataset, batch_size=self.batch_size, shuffle=False, num_workers=self.num_work, collate_fn=self.valid_dataset._collate_fn)
https://github.com/murcherful/USSPA/blob/a1efa9370287106f3cc1ae4fcaa83fbebdf463a3/code/util/test_util.py#L40
https://github.com/murcherful/USSPA/blob/a1efa9370287106f3cc1ae4fcaa83fbebdf463a3/code/util/test_util_gan.py#L40
https://github.com/murcherful/USSPA/blob/a1efa9370287106f3cc1ae4fcaa83fbebdf463a3/code/util/train_util.py#L98
https://github.com/murcherful/USSPA/blob/a1efa9370287106f3cc1ae4fcaa83fbebdf463a3/code/util/train_util.py#L100
https://github.com/murcherful/USSPA/blob/a1efa9370287106f3cc1ae4fcaa83fbebdf463a3/code/util/train_util_gan.py#L102
https://github.com/murcherful/USSPA/blob/a1efa9370287106f3cc1ae4fcaa83fbebdf463a3/code/util/train_util_gan.py#L103

=================================
https://github.com/rulixiang/ToCo
=================================

Found 11 times
DataLoader(
        train_dataset,
        batch_size=args.spg,
        #shuffle=True,
        num_workers=args.num_workers,
        pin_memory=False,
        drop_last=True,
        sampler=train_sampler,
        prefetch_factor=4)
DataLoader(val_dataset,
                            batch_size=1,
                            shuffle=False,
                            num_workers=args.num_workers,
                            pin_memory=False,
                            drop_last=False)
DataLoader(
        train_dataset,
        batch_size=args.spg,
        #shuffle=True,
        num_workers=args.num_workers,
        pin_memory=False,
        drop_last=True,
        sampler=train_sampler,
        prefetch_factor=4)
DataLoader(val_dataset,
                            batch_size=1,
                            shuffle=False,
                            num_workers=args.num_workers,
                            pin_memory=False,
                            drop_last=False)
DataLoader(val_dataset,
                            batch_size=1,
                            shuffle=False,
                            num_workers=8,
                            pin_memory=False,
                            drop_last=False)
DataLoader(val_dataset,
                            batch_size=1,
                            shuffle=False,
                            num_workers=8,
                            pin_memory=False,
                            drop_last=False)
DataLoader(dataset[pid], batch_size=1, shuffle=False, num_workers=2, pin_memory=False)
DataLoader(dataset[pid], batch_size=1, shuffle=False, num_workers=2, pin_memory=False)
DataLoader(dataset[pid], batch_size=1, shuffle=False, num_workers=2, pin_memory=False)
DataLoader(val_dataset,
                            batch_size=1,
                            shuffle=False,
                            num_workers=8,
                            pin_memory=False,
                            drop_last=False)
DataLoader(val_dataset,
                            batch_size=1,
                            shuffle=False,
                            num_workers=8,
                            pin_memory=False,
                            drop_last=False)
https://github.com/rulixiang/ToCo/blob/e13514d9a89a6c0b4131392a465fcf368a562b4e/scripts/dist_train_coco_seg_neg.py#L174
https://github.com/rulixiang/ToCo/blob/e13514d9a89a6c0b4131392a465fcf368a562b4e/scripts/dist_train_coco_seg_neg.py#L184
https://github.com/rulixiang/ToCo/blob/e13514d9a89a6c0b4131392a465fcf368a562b4e/scripts/dist_train_voc_seg_neg.py#L176
https://github.com/rulixiang/ToCo/blob/e13514d9a89a6c0b4131392a465fcf368a562b4e/scripts/dist_train_voc_seg_neg.py#L186
https://github.com/rulixiang/ToCo/blob/e13514d9a89a6c0b4131392a465fcf368a562b4e/tools/get_cls_token_cosine_sim_map.py#L169
https://github.com/rulixiang/ToCo/blob/e13514d9a89a6c0b4131392a465fcf368a562b4e/tools/infer_cam.py#L110
https://github.com/rulixiang/ToCo/blob/e13514d9a89a6c0b4131392a465fcf368a562b4e/tools/infer_seg_as_cam.py#L38
https://github.com/rulixiang/ToCo/blob/e13514d9a89a6c0b4131392a465fcf368a562b4e/tools/infer_seg_as_cam_coco.py#L39
https://github.com/rulixiang/ToCo/blob/e13514d9a89a6c0b4131392a465fcf368a562b4e/tools/infer_seg_coco_ddp.py#L42
https://github.com/rulixiang/ToCo/blob/e13514d9a89a6c0b4131392a465fcf368a562b4e/tools/infer_seg_coco_ddp.py#L164
https://github.com/rulixiang/ToCo/blob/e13514d9a89a6c0b4131392a465fcf368a562b4e/tools/infer_seg_voc.py#L154

======================================
https://github.com/MingyeXu/mm-3dscene
======================================

Found 13 times
DataLoader(TEST_DATASET, batch_size=BATCH_SIZE,
    shuffle=FLAGS.shuffle_dataset, num_workers=4, worker_init_fn=my_worker_init_fn)
DataLoader(TRAIN_DATASET, batch_size=BATCH_SIZE,
    shuffle=True, num_workers=16, worker_init_fn=my_worker_init_fn)
DataLoader(TEST_DATASET, batch_size=BATCH_SIZE,
    shuffle=True, num_workers=16, worker_init_fn=my_worker_init_fn)
DataLoader(TEST_DATASET, batch_size=BATCH_SIZE,
    shuffle=FLAGS.shuffle_dataset, num_workers=16, worker_init_fn=my_worker_init_fn)
DataLoader(TRAIN_DATASET, batch_size=BATCH_SIZE,
    shuffle=True, num_workers=4, worker_init_fn=my_worker_init_fn)
DataLoader(TEST_DATASET, batch_size=BATCH_SIZE,
    shuffle=True, num_workers=4, worker_init_fn=my_worker_init_fn)
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size, shuffle=(train_sampler is None), num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True, collate_fn=collate_fn_pretrain)
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size, shuffle=(train_sampler is None), num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True, collate_fn=collate_fn_s3dis)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val, shuffle=False, num_workers=args.workers, pin_memory=True, sampler=val_sampler, collate_fn=collate_fn_s3dis)
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size, shuffle=(train_sampler is None), num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True, collate_fn=collate_fn_s3dis)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val, shuffle=False, num_workers=args.workers, pin_memory=True, sampler=val_sampler, collate_fn=collate_fn_s3dis)
torch.utils.data.DataLoader(train_data, batch_size=8, shuffle=None, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(point_data, batch_size=16, shuffle=True, num_workers=1, pin_memory=True, worker_init_fn=worker_init_fn)
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/detection/downstream/eval.py#L93
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/detection/downstream/train.py#L146
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/detection/downstream/train.py#L148
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/detection/pretrain/eval.py#L93
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/detection/pretrain/pretrain.py#L196
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/detection/pretrain/pretrain.py#L198
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/segmentation/tool/pretrain.py#L247
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/segmentation/tool/train_s3dis.py#L185
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/segmentation/tool/train_s3dis.py#L195
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/segmentation/tool/train_scannet.py#L186
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/segmentation/tool/train_scannet.py#L196
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/segmentation/util/dataset_pretrain.py#L116
https://github.com/MingyeXu/mm-3dscene/blob/0879dd5a346a681b1ed96a70424a341409adc1e9/segmentation/util/scannet.py#L112

========================================
https://github.com/runnanchen/CLIP2Scene
========================================

Found 7 times
torch.utils.data.DataLoader(
        dset,
        batch_size=batch_size,
        # shuffle=False if sampler else True,
        shuffle=phase == "train",
        num_workers=num_threads,
        collate_fn=collate_fn,
        pin_memory=False,
        # sampler=sampler,
        drop_last=phase == "train",
        worker_init_fn=lambda id: np.random.seed(torch.initial_seed() // 2 ** 32 + id),
    )
torch.utils.data.DataLoader(
        dset,
        batch_size=batch_size,
        shuffle=phase == "train",
        num_workers=num_threads,
        collate_fn=collate_fn,
        pin_memory=False,
        drop_last=phase == "train",
        worker_init_fn=lambda id: np.random.seed(torch.initial_seed() // 2 ** 32 + id),
    )
torch.utils.data.DataLoader(
        dset,
        batch_size=batch_size,
        shuffle=phase == "train",
        num_workers=num_threads,
        collate_fn=collate_fn,
        pin_memory=False,
        drop_last=phase == "train",
        worker_init_fn=lambda id: np.random.seed(torch.initial_seed() // 2 ** 32 + id),
    )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=num_workers,
            collate_fn=default_collate_pair_fn,
            pin_memory=True,
            drop_last=True,
            worker_init_fn=lambda id: np.random.seed(
                torch.initial_seed() // 2 ** 32 + id
            ),
        )
DataLoader(
            self.val_dataset,
            batch_size=self.batch_size,
            shuffle=False,
            num_workers=num_workers,
            collate_fn=default_collate_pair_fn,
            pin_memory=True,
            drop_last=False,
            worker_init_fn=lambda id: np.random.seed(
                torch.initial_seed() // 2 ** 32 + id
            ),
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=num_workers,
            collate_fn=default_collate_pair_fn,
            pin_memory=True,
            drop_last=True,
            worker_init_fn=lambda id: np.random.seed(
                torch.initial_seed() // 2 ** 32 + id
            ),
        )
DataLoader(
            self.val_dataset,
            batch_size=self.batch_size,
            shuffle=False,
            num_workers=num_workers,
            collate_fn=default_collate_pair_fn,
            pin_memory=True,
            drop_last=False,
            worker_init_fn=lambda id: np.random.seed(
                torch.initial_seed() // 2 ** 32 + id
            ),
        )
https://github.com/runnanchen/CLIP2Scene/blob/f37dae727c466ea17e09a80e341565816095049c/downstream/dataloader_kitti.py#L215
https://github.com/runnanchen/CLIP2Scene/blob/f37dae727c466ea17e09a80e341565816095049c/downstream/dataloader_nuscenes.py#L319
https://github.com/runnanchen/CLIP2Scene/blob/f37dae727c466ea17e09a80e341565816095049c/downstream/dataloader_scannet.py#L281
https://github.com/runnanchen/CLIP2Scene/blob/f37dae727c466ea17e09a80e341565816095049c/downstream/lightning_datamodule.py#L67
https://github.com/runnanchen/CLIP2Scene/blob/f37dae727c466ea17e09a80e341565816095049c/downstream/lightning_datamodule.py#L94
https://github.com/runnanchen/CLIP2Scene/blob/f37dae727c466ea17e09a80e341565816095049c/pretrain/lightning_datamodule.py#L123
https://github.com/runnanchen/CLIP2Scene/blob/f37dae727c466ea17e09a80e341565816095049c/pretrain/lightning_datamodule.py#L150

==========================================
https://github.com/jiwei0921/MVSS-Baseline
==========================================

Found 6 times
DataLoader(dataset_train, num_workers=args.num_workers, batch_size=args.batch_size, shuffle=False, sampler=train_sampler, pin_memory=True)
DataLoader(dataset_val, num_workers=args.num_workers, batch_size=args.batch_size, shuffle=False)
DataLoader(dataset_val, num_workers=args.num_workers, batch_size=args.batch_size, shuffle=False)
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
DataLoader(dataset, num_workers=24, batch_size=1, shuffle=False)
https://github.com/jiwei0921/MVSS-Baseline/blob/0fc266c6e15f1917ab04425baf99c33a3490a8ad/MVNet/routines.py#L193
https://github.com/jiwei0921/MVSS-Baseline/blob/0fc266c6e15f1917ab04425baf99c33a3490a8ad/MVNet/routines.py#L199
https://github.com/jiwei0921/MVSS-Baseline/blob/0fc266c6e15f1917ab04425baf99c33a3490a8ad/MVNet/routines.py#L460
https://github.com/jiwei0921/MVSS-Baseline/blob/0fc266c6e15f1917ab04425baf99c33a3490a8ad/MVNet/TC_score/RAFT/core/datasets.py#L230
https://github.com/jiwei0921/MVSS-Baseline/blob/0fc266c6e15f1917ab04425baf99c33a3490a8ad/MVNet/TC_score/RAFT_core/datasets.py#L230
https://github.com/jiwei0921/MVSS-Baseline/blob/0fc266c6e15f1917ab04425baf99c33a3490a8ad/MVNet/datasets/classes_balancing.py#L23

==================================================
https://github.com/Visual-Attention-Network/LRPNet
==================================================

Found 1 times
torch.utils.data.DataLoader(
            dataset,
            batch_size = self.batch_size,
            collate_fn = self.inferCollate,
            num_workers = self.num_workers,
            shuffle = self.shuffle,
            pin_memory = True
            )
https://github.com/Visual-Attention-Network/LRPNet/blob/6c258a11da1cceec239a774dd646b5e32ea3566e/voxelnet/data/scannetv2_cuda.py#L68

=====================================
https://github.com/jamycheung/DELIVER
=====================================

Found 10 times
DataLoader(trainset, batch_size=2, num_workers=2, drop_last=False, pin_memory=False)
DataLoader(trainset, batch_size=2, num_workers=2, drop_last=True, pin_memory=False)
DataLoader(trainset, batch_size=1, num_workers=0, drop_last=False, pin_memory=False)
DataLoader(trainset, batch_size=2, num_workers=2, drop_last=True, pin_memory=False)
DataLoader(trainset, batch_size=2, num_workers=2, drop_last=True, pin_memory=False)
DataLoader(trainset, batch_size=2, num_workers=2, drop_last=True, pin_memory=False)
DataLoader(dataset, shuffle=True, batch_size=batch_size)
DataLoader(trainset, batch_size=train_cfg['BATCH_SIZE'], num_workers=num_workers, drop_last=True, pin_memory=False, sampler=sampler)
DataLoader(valset, batch_size=eval_cfg['BATCH_SIZE'], num_workers=num_workers, pin_memory=False, sampler=sampler_val)
DataLoader(dataset, batch_size=eval_cfg['BATCH_SIZE'], num_workers=eval_cfg['BATCH_SIZE'], pin_memory=False, sampler=sampler_val)
https://github.com/jamycheung/DELIVER/blob/b00b30b3cddf1a502ad187979f648b07a6019940/semseg/datasets/deliver.py#L122
https://github.com/jamycheung/DELIVER/blob/b00b30b3cddf1a502ad187979f648b07a6019940/semseg/datasets/kitti360.py#L113
https://github.com/jamycheung/DELIVER/blob/b00b30b3cddf1a502ad187979f648b07a6019940/semseg/datasets/mcubes.py#L458
https://github.com/jamycheung/DELIVER/blob/b00b30b3cddf1a502ad187979f648b07a6019940/semseg/datasets/mfnet.py#L89
https://github.com/jamycheung/DELIVER/blob/b00b30b3cddf1a502ad187979f648b07a6019940/semseg/datasets/nyu.py#L100
https://github.com/jamycheung/DELIVER/blob/b00b30b3cddf1a502ad187979f648b07a6019940/semseg/datasets/urbanlf.py#L110
https://github.com/jamycheung/DELIVER/blob/b00b30b3cddf1a502ad187979f648b07a6019940/semseg/utils/visualize.py#L20
https://github.com/jamycheung/DELIVER/blob/b00b30b3cddf1a502ad187979f648b07a6019940/tools/train_mm.py#L78
https://github.com/jamycheung/DELIVER/blob/b00b30b3cddf1a502ad187979f648b07a6019940/tools/train_mm.py#L79
https://github.com/jamycheung/DELIVER/blob/b00b30b3cddf1a502ad187979f648b07a6019940/tools/val_mm.py#L150

=====================================
https://github.com/baaivision/Painter
=====================================

Found 14 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False,
        )
DataLoader(dataset_val, batch_size=1, sampler=sampler_val,
                                 drop_last=False, collate_fn=ddp_utils.collate_fn, num_workers=2)
DataLoader(dataset_val, batch_size=1, sampler=sampler_val,
                                 drop_last=False, collate_fn=ddp_utils.collate_fn, num_workers=2)
DataLoader(dataset_val, batch_size=1, sampler=sampler_val,
                                 drop_last=False, collate_fn=ddp_utils.collate_fn, num_workers=2)
DataLoader(dataset_val, batch_size=1, sampler=sampler_val,
                                 drop_last=False, collate_fn=ddp_utils.collate_fn, num_workers=2)
DataLoader(dataset_val, batch_size=1, sampler=sampler_val,
                                 drop_last=False, collate_fn=ddp_utils.collate_fn, num_workers=2)
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/main_train.py#L293
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/main_train.py#L301
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/data/mmpose_custom/painter_inference_pose.py#L128
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/eval/ade20k_semantic/painter_inference_segm.py#L127
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/eval/coco_panoptic/painter_inference_pano_inst.py#L124
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/eval/coco_panoptic/painter_inference_pano_semseg.py#L126
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/eval/mmpose_custom/painter_inference_pose.py#L128

==========================================
https://github.com/SCPNet/Codes-for-SCPNet
==========================================

Found 2 times
torch.utils.data.DataLoader(dataset=train_dataset,
                                                       batch_size=train_dataloader_config["batch_size"],
                                                       collate_fn=collate_fn_BEV_tmp,
                                                       shuffle=train_dataloader_config["shuffle"],
                                                       num_workers=train_dataloader_config["num_workers"])
torch.utils.data.DataLoader(dataset=val_dataset,
                                                     batch_size=val_dataloader_config["batch_size"],
                                                     collate_fn=collate_fn_BEV_tmp,
                                                     shuffle=val_dataloader_config["shuffle"],
                                                     num_workers=val_dataloader_config["num_workers"])
https://github.com/SCPNet/Codes-for-SCPNet/blob/c0f55fa29e0b975454930f1237f5681327d53d09/builder/data_builder.py#L132
https://github.com/SCPNet/Codes-for-SCPNet/blob/c0f55fa29e0b975454930f1237f5681327d53d09/builder/data_builder.py#L137

========================================
https://github.com/tue-mps/cts-segmenter
========================================

Found 2 times
DataLoader(train_dataset,
                                batch_size=cfg.batch_size_train,
                                shuffle=True,
                                num_workers=cfg.num_workers,
                                drop_last=True)
DataLoader(eval_dataset,
                               batch_size=cfg.batch_size_test,
                               shuffle=True,
                               num_workers=cfg.num_workers,
                               drop_last=False)
https://github.com/tue-mps/cts-segmenter/blob/e23618892326642a84e6cc4856447a11ee86773c/policynet/train.py#L55
https://github.com/tue-mps/cts-segmenter/blob/e23618892326642a84e6cc4856447a11ee86773c/policynet/train.py#L66

========================================
https://github.com/pengsongyou/openscene
========================================

Found 7 times
torch.utils.data.DataLoader(
                    self.data_paths, collate_fn=lambda x: torch.load(x[0]),
                    num_workers=min(16, mp.cpu_count()), shuffle=False)
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size,
                                            shuffle=(train_sampler is None),
                                            num_workers=args.workers, pin_memory=True,
                                            sampler=train_sampler,
                                            drop_last=True, collate_fn=collation_fn,
                                            worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val,
                                                shuffle=False,
                                                num_workers=args.workers, pin_memory=True,
                                                drop_last=False, collate_fn=collation_fn_eval_all,
                                                sampler=val_sampler)
torch.utils.data.DataLoader(val_data, batch_size=args.test_batch_size,
                                            shuffle=False, num_workers=args.test_workers,
                                            pin_memory=True, drop_last=False,
                                            collate_fn=collation_fn_eval_all, sampler=val_sampler)
torch.utils.data.DataLoader(val_data, batch_size=args.test_batch_size,
                                                shuffle=False, num_workers=args.test_workers, pin_memory=True,
                                                drop_last=False, collate_fn=collation_fn_eval_all,
                                                sampler=val_sampler)
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size,
                                                shuffle=(train_sampler is None),
                                                num_workers=args.workers, pin_memory=True,
                                                drop_last=True, collate_fn=collation_fn,
                                                worker_init_fn=worker_init_fn,
                                                sampler=train_sampler)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val,
                                    shuffle=False, num_workers=args.workers, pin_memory=True,
                                    drop_last=False, collate_fn=collation_fn_eval_all,
                                    sampler=val_sampler)
https://github.com/pengsongyou/openscene/blob/0f369bc73d0724ae24b5e46bbada193f8ee9d193/dataset/point_loader.py#L118
https://github.com/pengsongyou/openscene/blob/0f369bc73d0724ae24b5e46bbada193f8ee9d193/run/distill.py#L185
https://github.com/pengsongyou/openscene/blob/0f369bc73d0724ae24b5e46bbada193f8ee9d193/run/distill.py#L200
https://github.com/pengsongyou/openscene/blob/0f369bc73d0724ae24b5e46bbada193f8ee9d193/run/eval_mink.py#L151
https://github.com/pengsongyou/openscene/blob/0f369bc73d0724ae24b5e46bbada193f8ee9d193/run/evaluate.py#L211
https://github.com/pengsongyou/openscene/blob/0f369bc73d0724ae24b5e46bbada193f8ee9d193/run/train_mink.py#L189
https://github.com/pengsongyou/openscene/blob/0f369bc73d0724ae24b5e46bbada193f8ee9d193/run/train_mink.py#L201

=================================
https://github.com/hesedjds/SQUAT
=================================

Found 2 times
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=collator,
        )
torch.utils.data.DataLoader(split,
        batch_size=cfg.SOLVER.IMS_PER_BATCH,
        shuffle=not (test_on or val_on),  # only shuffle the data in training
        pin_memory=True,
        num_workers=4,
        collate_fn=SimpleCollator(),
    )
https://github.com/hesedjds/SQUAT/blob/bd2e21c6f0ba3e79616581ce9067f8c9919b231f/pysgg/data/build.py#L308
https://github.com/hesedjds/SQUAT/blob/bd2e21c6f0ba3e79616581ce9067f8c9919b231f/pysgg/image_retrieval/dataloader.py#L98

================================
https://github.com/Liuxinyv/SAZS
================================

Found 3 times
DataLoader(dataset, batch_size=bsz, shuffle=shuffle, num_workers=nworker)
DataLoader(dataset, batch_size=bsz, shuffle=shuffle, num_workers=nworker)
DataLoader(dataset, batch_size=bsz, shuffle=shuffle, num_workers=nworker)
https://github.com/Liuxinyv/SAZS/blob/374991b34371f2135970a1eb90a7e8464c21cd9e/fewshot_data/data/dataset.py#L63
https://github.com/Liuxinyv/SAZS/blob/374991b34371f2135970a1eb90a7e8464c21cd9e/fewshot_data/data/dataset.py#L67
https://github.com/Liuxinyv/SAZS/blob/374991b34371f2135970a1eb90a7e8464c21cd9e/fewshot_data/data/dataset.py#L71

==================================
https://github.com/Charles-Xie/CQL
==================================

Found 3 times
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
https://github.com/Charles-Xie/CQL/blob/91125e37377314f21fe3115360d74175531d5c46/generate_vcoco_official.py#L307
https://github.com/Charles-Xie/CQL/blob/91125e37377314f21fe3115360d74175531d5c46/main.py#L199
https://github.com/Charles-Xie/CQL/blob/91125e37377314f21fe3115360d74175531d5c46/main.py#L201

=================================
https://github.com/itailang/SCOOP
=================================

Found 3 times
DataLoader(
        dataset,
        batch_size=args.batch_size,
        pin_memory=True,
        shuffle=False,
        num_workers=args.nb_workers,
        collate_fn=Batch,
        drop_last=False,
    )
DataLoader(
        train_dataset,
        batch_size=args.batch_size_train,
        pin_memory=True,
        shuffle=True,
        num_workers=args.nb_workers,
        collate_fn=Batch,
        drop_last=True,
    )
DataLoader(
        val_dataset,
        batch_size=args.batch_size_val,
        pin_memory=True,
        shuffle=False,
        num_workers=args.nb_workers,
        collate_fn=Batch,
        drop_last=False,
    )
https://github.com/itailang/SCOOP/blob/9f41e8baafed8689be867b8ab7b10159371de37d/scripts/evaluate_scoop.py#L366
https://github.com/itailang/SCOOP/blob/9f41e8baafed8689be867b8ab7b10159371de37d/scripts/train_scoop.py#L360
https://github.com/itailang/SCOOP/blob/9f41e8baafed8689be867b8ab7b10159371de37d/scripts/train_scoop.py#L371

====================================================================
https://github.com/moshuilanting/fast-context-scene-graph-generation
====================================================================

Found 4 times
torch.utils.data.DataLoader(dataset=data,
                                               batch_size=1, # batch_size == 1
                                               shuffle=True,
                                               num_workers=8)
torch.utils.data.DataLoader(dataset=data,
                                               batch_size=1,
                                               shuffle=False,
                                               num_workers=8)
torch.utils.data.DataLoader(dataset=data,
                                               batch_size=1, #batch_size ==1
                                               shuffle=False,
                                               num_workers=1)
torch.utils.data.DataLoader(dataset=data,
                                             batch_size=1,
                                             shuffle=False,
                                             num_workers=0)
https://github.com/moshuilanting/fast-context-scene-graph-generation/blob/f97d470cca5b18f0db5804a87bfc71236ff1729d/VG_dataset/ckn_main.py#L30
https://github.com/moshuilanting/fast-context-scene-graph-generation/blob/f97d470cca5b18f0db5804a87bfc71236ff1729d/VG_dataset/vdn_main.py#L42
https://github.com/moshuilanting/fast-context-scene-graph-generation/blob/f97d470cca5b18f0db5804a87bfc71236ff1729d/VG_dataset/eval/predcls_ckn_val.py#L151
https://github.com/moshuilanting/fast-context-scene-graph-generation/blob/f97d470cca5b18f0db5804a87bfc71236ff1729d/VG_dataset/eval/predcls_vdn_val.py#L175

===============================================
https://github.com/scenediffuser/Scene-Diffuser
===============================================

Found 4 times
DataLoader(self, **kwargs)
DataLoader(self, **kwargs)
DataLoader(self, **kwargs)
DataLoader(self, **kwargs)
https://github.com/scenediffuser/Scene-Diffuser/blob/4a62ca30a4b37bb6d7b538e512905c570c4ded7c/datasets/lemo_motion.py#L313
https://github.com/scenediffuser/Scene-Diffuser/blob/4a62ca30a4b37bb6d7b538e512905c570c4ded7c/datasets/lemo_pose.py#L242
https://github.com/scenediffuser/Scene-Diffuser/blob/4a62ca30a4b37bb6d7b538e512905c570c4ded7c/datasets/multidex_shadowhand_ur.py#L161
https://github.com/scenediffuser/Scene-Diffuser/blob/4a62ca30a4b37bb6d7b538e512905c570c4ded7c/datasets/scannet_path.py#L166

======================================================
https://github.com/compphoto/IntrinsicFlashPhotography
======================================================

Found 1 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.num_threads),
            )
https://github.com/compphoto/IntrinsicFlashPhotography/blob/fff31694efb2a1566af4db839bab0c40723d9702/data/__init__.py#L75

==========================================
https://github.com/QiuhongAnnaWei/LEGO-Net
==========================================

Found 3 times
DataLoader(dataset=data_set, batch_size = 8, shuffle=True)
DataLoader(train_data_set, **self.hparam_config.dataset.loader.args, shuffle = True)
DataLoader(val_data_set, **self.hparam_config.dataset.loader.args, shuffle = False)
https://github.com/QiuhongAnnaWei/LEGO-Net/blob/198ac4978ef73f64aabb3d9074e2ca364d1b389d/ConDor_torch/datasets/h5_dataset.py#L129
https://github.com/QiuhongAnnaWei/LEGO-Net/blob/198ac4978ef73f64aabb3d9074e2ca364d1b389d/ConDor_torch/trainers/ConDor_trainer.py#L39
https://github.com/QiuhongAnnaWei/LEGO-Net/blob/198ac4978ef73f64aabb3d9074e2ca364d1b389d/ConDor_torch/trainers/ConDor_trainer.py#L46

=================================
https://github.com/lyhdet/OV-3DET
=================================

Found 1 times
DataLoader(
            datasets[split],
            sampler=sampler,
            batch_size=args.batchsize_per_gpu,
            num_workers=args.dataset_num_workers,
            worker_init_fn=my_worker_init_fn,
        )
https://github.com/lyhdet/OV-3DET/blob/2a6e30c92dc4f21f3bf35ca54a8e642ab7131a3d/main.py#L479

===================================
https://github.com/anurag-198/WDASS
===================================

Found 3 times
DataLoader(val_set, batch_size=args.bs_val,
                            num_workers=args.num_workers // 2,
                            shuffle=False, drop_last=False,
                            sampler=val_sampler)
DataLoader(train_set_citi, batch_size=train_batch_size,
                                  num_workers=args.num_workers,
                                  shuffle=(train_sampler_citi is None),
                                  drop_last=True, sampler=train_sampler_citi)
DataLoader(train_set_gta, batch_size=train_batch_size,
                                  num_workers=args.num_workers,
                                  shuffle=(train_sampler_gta is None),
                                  drop_last=True, sampler=train_sampler_gta)
https://github.com/anurag-198/WDASS/blob/9067e7d452e7164b24d9e3d25f3c787ddc393c7d/datasets/__init__.py#L176
https://github.com/anurag-198/WDASS/blob/9067e7d452e7164b24d9e3d25f3c787ddc393c7d/datasets/__init__.py#L213
https://github.com/anurag-198/WDASS/blob/9067e7d452e7164b24d9e3d25f3c787ddc393c7d/datasets/__init__.py#L218

=====================================
https://github.com/brown-ivl/Cafi-Net
=====================================

Found 2 times
DataLoader(train_data_set, **self.hparam_config.dataset.loader.args, shuffle = True)
DataLoader(val_data_set, **self.hparam_config.val_dataset.loader.args, shuffle = False)
https://github.com/brown-ivl/Cafi-Net/blob/61714996245291bde11f8791ba83a03a12cbeafb/cafi_net/trainers/Canonical_fields_trainer.py#L42
https://github.com/brown-ivl/Cafi-Net/blob/61714996245291bde11f8791ba83a03a12cbeafb/cafi_net/trainers/Canonical_fields_trainer.py#L48

================================
https://github.com/clovaai/units
================================

Found 3 times
DataLoader(
        valid_set,
        val_batch_size,
        num_workers=conf.training.val_loader.num_workers,
        sampler=dist.data_sampler(
            valid_set, shuffle=False, distributed=conf.distributed
        ),
        collate_fn=valid_collator,
    )
DataLoader(
        train_set,
        batch_size,
        num_workers=conf.training.loader.num_workers,
        sampler=dist.data_sampler(
            train_set, shuffle=True, distributed=conf.distributed
        ),
        collate_fn=train_collator,
    )
DataLoader(
        valid_set,
        val_batch_size,
        num_workers=conf.training.val_loader.num_workers,
        sampler=dist.data_sampler(
            valid_set, shuffle=False, distributed=conf.distributed
        ),
        collate_fn=valid_collator,
    )
https://github.com/clovaai/units/blob/1397e73d54c7192e699583d04d890103ea888826/script/test.py#L152
https://github.com/clovaai/units/blob/1397e73d54c7192e699583d04d890103ea888826/script/train.py#L109
https://github.com/clovaai/units/blob/1397e73d54c7192e699583d04d890103ea888826/script/train.py#L126

======================================
https://github.com/zyong812/VS3_CVPR23
======================================

Found 1 times
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=collator,
        )
https://github.com/zyong812/VS3_CVPR23/blob/2561388442e1615830544e15cf5f71b20b9ffb6a/maskrcnn_benchmark/data/build.py#L474

==================================================
https://github.com/theodumont/modular-memorability
==================================================

Found 3 times
torch.utils.data.DataLoader(dataset, batch_size=8, shuffle=False, num_workers=cfg.CONST.NUM_WORKERS)
torch.utils.data.DataLoader(train_dataset, shuffle=True,  batch_size=batch_size, num_workers=cfg.CONST.NUM_WORKERS)
torch.utils.data.DataLoader(val_dataset,   shuffle=False, batch_size=batch_size, num_workers=cfg.CONST.NUM_WORKERS)
https://github.com/theodumont/modular-memorability/blob/3c9182c1263b7cadffc9f023bbda5fcbe12b1d43/gen_features.py#L336
https://github.com/theodumont/modular-memorability/blob/3c9182c1263b7cadffc9f023bbda5fcbe12b1d43/train.py#L175
https://github.com/theodumont/modular-memorability/blob/3c9182c1263b7cadffc9f023bbda5fcbe12b1d43/train.py#L176

=========================================
https://github.com/AHKerrigan/GeoGuessNet
=========================================

Found 6 times
torch.utils.data.DataLoader(train_dataset, batch_size=opt.batch_size, num_workers=opt.kernels, shuffle=False, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(val_dataset1, batch_size=opt.batch_size, num_workers=opt.kernels, shuffle=False, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(val_dataset2, batch_size=opt.batch_size, num_workers=opt.kernels, shuffle=False, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(train_dataset, batch_size=train_batch, num_workers=opt.kernels, shuffle=True, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(val_dataset1, batch_size=val_batch, num_workers=opt.kernels, shuffle=True, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(val_dataset2, batch_size=val_batch, num_workers=opt.kernels, shuffle=True, drop_last=False, pin_memory=True)
https://github.com/AHKerrigan/GeoGuessNet/blob/b24983259c7fd8f72d000fe71742b4b676c6d0be/main.py#L50
https://github.com/AHKerrigan/GeoGuessNet/blob/b24983259c7fd8f72d000fe71742b4b676c6d0be/main.py#L51
https://github.com/AHKerrigan/GeoGuessNet/blob/b24983259c7fd8f72d000fe71742b4b676c6d0be/main.py#L52
https://github.com/AHKerrigan/GeoGuessNet/blob/b24983259c7fd8f72d000fe71742b4b676c6d0be/mainlit.py#L69
https://github.com/AHKerrigan/GeoGuessNet/blob/b24983259c7fd8f72d000fe71742b4b676c6d0be/mainlit.py#L70
https://github.com/AHKerrigan/GeoGuessNet/blob/b24983259c7fd8f72d000fe71742b4b676c6d0be/mainlit.py#L71

=====================================
https://github.com/haoai-1997/HRDFuse
=====================================

Found 2 times
torch.utils.data.DataLoader(
    dataset=Dataset(
        rotate=True,
        flip=True,
        root_path=input_dir,
        path_to_img_list=train_file_list),
    batch_size=batch_size,
    shuffle=True,
    num_workers=4,
    drop_last=True)
torch.utils.data.DataLoader(
    dataset=Dataset(
        root_path=input_dir,
        path_to_img_list=val_file_list),
    batch_size=batch_size,
    shuffle=False,
    num_workers=4,
    drop_last=False)
https://github.com/haoai-1997/HRDFuse/blob/86bf21acbdb3dd10f0a4f2984296df4645976b32/train_fusion.py#L124
https://github.com/haoai-1997/HRDFuse/blob/86bf21acbdb3dd10f0a4f2984296df4645976b32/train_fusion.py#L135

=====================================
https://github.com/THU-LYJ-Lab/AR-Seg
=====================================

Found 8 times
DataLoader(test_ds,
                            batch_size = 1,
                            shuffle = False,
                            num_workers = 8,
                            pin_memory = False,
                            drop_last = True)
DataLoader(test_ds,
                                batch_size = 1,
                                shuffle = False,
                                num_workers = 4,
                                pin_memory = False,
                                drop_last = True)
DataLoader(test_ds,
                                batch_size = 1,
                                shuffle = False,
                                num_workers = 4,
                                pin_memory = False,
                                drop_last = True)
DataLoader(train_ds,
                    batch_size = batch_size,
                    shuffle = True,
                    num_workers = train_workers,
                    worker_init_fn=seed_worker,
                    pin_memory = False,
                    drop_last = True)
DataLoader(val_ds,
                    batch_size = 1,
                    shuffle = False,
                    num_workers = val_workers,
                    worker_init_fn=seed_worker,
                    pin_memory = False,
                    drop_last = True)
DataLoader(train_ds,
                    batch_size = batch_size,
                    shuffle = True,
                    num_workers = train_workers,
                    worker_init_fn=seed_worker,
                    pin_memory = False,
                    drop_last = True)
DataLoader(val_ds,
                    batch_size = 1,
                    shuffle = False,
                    num_workers = val_workers,
                    worker_init_fn=seed_worker,
                    pin_memory = False,
                    drop_last = True)
DataLoader(val_ds_stage1,
                    batch_size = 1,
                    shuffle = False,
                    num_workers = 4,
                    worker_init_fn=seed_worker,
                    pin_memory = False,
                    drop_last = True)
https://github.com/THU-LYJ-Lab/AR-Seg/blob/d2662498487a489386d60c7bac78ce9330bcf308/evaluation.py#L282
https://github.com/THU-LYJ-Lab/AR-Seg/blob/d2662498487a489386d60c7bac78ce9330bcf308/evaluation.py#L339
https://github.com/THU-LYJ-Lab/AR-Seg/blob/d2662498487a489386d60c7bac78ce9330bcf308/evaluation.py#L418
https://github.com/THU-LYJ-Lab/AR-Seg/blob/d2662498487a489386d60c7bac78ce9330bcf308/train.py#L124
https://github.com/THU-LYJ-Lab/AR-Seg/blob/d2662498487a489386d60c7bac78ce9330bcf308/train.py#L132
https://github.com/THU-LYJ-Lab/AR-Seg/blob/d2662498487a489386d60c7bac78ce9330bcf308/train_pair.py#L150
https://github.com/THU-LYJ-Lab/AR-Seg/blob/d2662498487a489386d60c7bac78ce9330bcf308/train_pair.py#L159
https://github.com/THU-LYJ-Lab/AR-Seg/blob/d2662498487a489386d60c7bac78ce9330bcf308/train_pair.py#L167

===========================================
https://github.com/NVlabs/mask-auto-labeler
===========================================

Found 3 times
DataLoader(dataset, batch_size=self.args.batch_size, shuffle=True,
                                    num_workers=self.num_workers)
DataLoader(dataset, collate_fn=custom_collate_fn,
                                         batch_size=self.args.batch_size, num_workers=self.num_workers)
DataLoader(dataset, collate_fn=custom_collate_fn, 
                                         batch_size=self.args.batch_size, num_workers=self.num_workers)
https://github.com/NVlabs/mask-auto-labeler/blob/0ab9be4fe6b17f3e21b5829f88db001ef2bd665c/datasets/pl_data_module.py#L197
https://github.com/NVlabs/mask-auto-labeler/blob/0ab9be4fe6b17f3e21b5829f88db001ef2bd665c/datasets/pl_data_module.py#L227
https://github.com/NVlabs/mask-auto-labeler/blob/0ab9be4fe6b17f3e21b5829f88db001ef2bd665c/datasets/pl_data_module.py#L252

=========================================================
https://github.com/chufengt/Visual-Recognition-by-Request
=========================================================

Found 17 times
DataLoader(mask_data, batch_size=args.batch_size, shuffle=False, num_workers=4)
DataLoader(mask_data, batch_size=args.batch_size, shuffle=False, num_workers=4)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
        test_dataset,
        batch_size=1,
        sampler=None,
        num_workers=0,
        shuffle=False,
    )
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/instance-segmentation/adet/modeling/MEInst/LME/mask_evaluation.py#L72
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/instance-segmentation/adet/modeling/MEInst/LME/mask_generation.py#L77
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/mmseg/datasets/builder.py#L148
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/mmseg/datasets/builder.py#L161
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_eval_hook.py#L46
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_eval_hook.py#L58
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_eval_hook.py#L60
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_eval_hook.py#L84
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_eval_hook.py#L96
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_eval_hook.py#L98
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_eval_hook.py#L133
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_eval_hook.py#L145
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_eval_hook.py#L147
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_eval_hook.py#L173
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_eval_hook.py#L185
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_eval_hook.py#L187
https://github.com/chufengt/Visual-Recognition-by-Request/blob/3373ec09e9cf3ea5290c6b60818adfc4ebc76b88/whole-to-part-semantic-segmentation/tests/test_apis/test_single_gpu.py#L37

============================================
https://github.com/MingXiangL/AttentionShift
============================================

Found 5 times
torch.utils.data.DataLoader(dataset, batch_size=opt.batchSize,
                                         shuffle=True, num_workers=int(opt.workers))
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, collate_fn=collate_fn)
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True,
        sampler=val_sampler,
        collate_fn=collate_fn)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/MingXiangL/AttentionShift/blob/f655a04ad64281e3eef48d4e6229bf06dae161f4/apex-master/examples/dcgan/main_amp.py#L103
https://github.com/MingXiangL/AttentionShift/blob/f655a04ad64281e3eef48d4e6229bf06dae161f4/apex-master/examples/imagenet/main_amp.py#L228
https://github.com/MingXiangL/AttentionShift/blob/f655a04ad64281e3eef48d4e6229bf06dae161f4/apex-master/examples/imagenet/main_amp.py#L232
https://github.com/MingXiangL/AttentionShift/blob/f655a04ad64281e3eef48d4e6229bf06dae161f4/mmdet/datasets/builder.py#L125
https://github.com/MingXiangL/AttentionShift/blob/f655a04ad64281e3eef48d4e6229bf06dae161f4/mmdet/datasets/.ipynb_checkpoints/builder-checkpoint.py#L125

==========================================
https://github.com/MinghanLi/MDQE_CVPR2023
==========================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/MinghanLi/MDQE_CVPR2023/blob/eca2de3558ea09e52365b54985aab0783834270d/mdqe/data/build.py#L249

============================
https://github.com/lslrh/SIM
============================

Found 5 times
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=1,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
DataLoader(mask_data, batch_size=args.batch_size, shuffle=False, num_workers=4)
DataLoader(mask_data, batch_size=args.batch_size, shuffle=False, num_workers=4)
https://github.com/lslrh/SIM/blob/b2510defc9effc78b12d64b62391383951a9055c/adet/data/build.py#L314
https://github.com/lslrh/SIM/blob/b2510defc9effc78b12d64b62391383951a9055c/adet/data/build.py#L325
https://github.com/lslrh/SIM/blob/b2510defc9effc78b12d64b62391383951a9055c/adet/data/build.py#L511
https://github.com/lslrh/SIM/blob/b2510defc9effc78b12d64b62391383951a9055c/build/lib.linux-x86_64-3.7/adet/modeling/MEInst/LME/mask_evaluation.py#L72
https://github.com/lslrh/SIM/blob/b2510defc9effc78b12d64b62391383951a9055c/build/lib.linux-x86_64-3.7/adet/modeling/MEInst/LME/mask_generation.py#L77

=================================
https://github.com/JiahuiLei/EFEM
=================================

Found 3 times
DataLoader(
            dataset,
            batch_size=bs,
            shuffle=False,
            num_workers=0,
            pin_memory=False,
            drop_last=False,
        )
DataLoader(
                datasets_dict[mode],
                batch_size=bs,
                shuffle=shuffle_dataset,
                num_workers=n_workers,
                pin_memory=cfg["dataset"]["pin_mem"],
                drop_last=mode == "train",  # ! check this
            )
DataLoader(
                datasets_dict[mode],
                batch_size=bs,
                shuffle=shuffle_dataset,
                num_workers=n_workers,
                pin_memory=cfg["dataset"]["pin_mem"],
                drop_last=mode == "train",
                collate_fn=getattr(datasets_dict[mode], "collate_fn", None),
            )
https://github.com/JiahuiLei/EFEM/blob/5f10102df4e6e1be5e5d33c79e2b0572ed0391d2/lib_efem/database.py#L113
https://github.com/JiahuiLei/EFEM/blob/5f10102df4e6e1be5e5d33c79e2b0572ed0391d2/lib_shape_prior/core/solver.py#L34
https://github.com/JiahuiLei/EFEM/blob/5f10102df4e6e1be5e5d33c79e2b0572ed0391d2/lib_shape_prior/core/solver_v2.py#L38

===================================
https://github.com/ChunmingHe/FEDER
===================================

Found 2 times
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory,
                                  worker_init_fn=seed_worker)
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
https://github.com/ChunmingHe/FEDER/blob/fac6b2a46ec8f7603d0ef3573694a47fea80ee41/utils/data_val.py#L184
https://github.com/ChunmingHe/FEDER/blob/fac6b2a46ec8f7603d0ef3573694a47fea80ee41/utils/dataloader.py#L76

====================================
https://github.com/Reagan1311/LOCATE
====================================

Found 3 times
torch.utils.data.DataLoader(dataset=testset,
                                             batch_size=args.test_batch_size,
                                             shuffle=False,
                                             num_workers=args.test_num_workers,
                                             pin_memory=True)
torch.utils.data.DataLoader(dataset=trainset,
                                              batch_size=args.batch_size,
                                              shuffle=True,
                                              num_workers=args.num_workers,
                                              pin_memory=True)
torch.utils.data.DataLoader(dataset=testset,
                                             batch_size=args.test_batch_size,
                                             shuffle=False,
                                             num_workers=args.test_num_workers,
                                             pin_memory=True)
https://github.com/Reagan1311/LOCATE/blob/8db3d015809b8b80cd8f1173b78f84686d77c3c0/test.py#L63
https://github.com/Reagan1311/LOCATE/blob/8db3d015809b8b80cd8f1173b78f84686d77c3c0/train.py#L96
https://github.com/Reagan1311/LOCATE/blob/8db3d015809b8b80cd8f1173b78f84686d77c3c0/train.py#L107

=====================================
https://github.com/SHI-Labs/OneFormer
=====================================

Found 1 times
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
https://github.com/SHI-Labs/OneFormer/blob/4962ef6a96ffb76a76771bfa3e8b3587f209752b/oneformer/data/build.py#L114

====================================
https://github.com/SysCV/MaskFreeVIS
====================================

Found 2 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/SysCV/MaskFreeVIS/blob/0e7018b7fe613b0469a095bda7725dbd906d3161/mask2former_video/data_video/build.py#L252
https://github.com/SysCV/MaskFreeVIS/blob/0e7018b7fe613b0469a095bda7725dbd906d3161/mfvis_nococo/mask2former_video/data_video/build.py#L244

===============================
https://github.com/l1997i/lim3d
===============================

Found 1 times
DataLoader(dataset=self.train_dataset, **self.config['train_dataloader'])
https://github.com/l1997i/lim3d/blob/3db1590191b204bf252c3e6bef215f16d1f5ff38/predict.py#L36

================================
https://github.com/wjf5203/VNext
================================

Found 10 times
torch.utils.data.DataLoader(
        dataset,
        sampler=(TrainingSampler if training else InferenceSampler)(len(dataset)),
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
    )
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
data.DataLoader(dataset, num_workers=0, collate_fn=operator.itemgetter(0))
data.DataLoader(
            dataset,
            num_workers=2,
            collate_fn=operator.itemgetter(0),
            worker_init_fn=worker_init_reset_seed,
            # reset seed should not affect behavior of TrainingSampler
        )
https://github.com/wjf5203/VNext/blob/f00187144ee7ccb65f45bbc018121ebd32dbeccc/configs/Misc/torchvision_imagenet_R_50.py#L41
https://github.com/wjf5203/VNext/blob/f00187144ee7ccb65f45bbc018121ebd32dbeccc/detectron2/data/build.py#L315
https://github.com/wjf5203/VNext/blob/f00187144ee7ccb65f45bbc018121ebd32dbeccc/detectron2/data/build.py#L326
https://github.com/wjf5203/VNext/blob/f00187144ee7ccb65f45bbc018121ebd32dbeccc/detectron2/data/build.py#L523
https://github.com/wjf5203/VNext/blob/f00187144ee7ccb65f45bbc018121ebd32dbeccc/projects/IDOL/idol/data/build.py#L241
https://github.com/wjf5203/VNext/blob/f00187144ee7ccb65f45bbc018121ebd32dbeccc/projects/InstMove/MinVIS_motion/mask2former_video/data_video/build.py#L244
https://github.com/wjf5203/VNext/blob/f00187144ee7ccb65f45bbc018121ebd32dbeccc/projects/InstMove/MinVIS_motion/minvis/data_video/build.py#L244
https://github.com/wjf5203/VNext/blob/f00187144ee7ccb65f45bbc018121ebd32dbeccc/projects/SeqFormer/seqformer/data/build.py#L241
https://github.com/wjf5203/VNext/blob/f00187144ee7ccb65f45bbc018121ebd32dbeccc/tests/data/test_sampler.py#L47
https://github.com/wjf5203/VNext/blob/f00187144ee7ccb65f45bbc018121ebd32dbeccc/tests/data/test_sampler.py#L52

=====================================
https://github.com/clovaai/PointWSSIS
=====================================

Found 12 times
DataLoader(mask_data, batch_size=args.batch_size, shuffle=False, num_workers=4)
DataLoader(mask_data, batch_size=args.batch_size, shuffle=False, num_workers=4)
data.DataLoader(
        train_dst,
        batch_size=batch_per_gpu_train,
        num_workers=args.workers,
        sampler=DistributedSampler(train_dst, num_replicas=n_gpus, rank=args.local_rank) if args.ddp else None, 
        shuffle=False if args.ddp else True,
        pin_memory=True,
        drop_last=True,
    )
data.DataLoader(
        valid_dst,
        batch_size=1,
        num_workers=0,
        sampler=DistributedSampler(valid_dst, num_replicas=n_gpus, rank=args.local_rank) if args.ddp else None, 
        pin_memory=True,
        drop_last=False,
    )
data.DataLoader(
        valid_dst,
        batch_size=1,
        num_workers=0,
        sampler=DistributedSampler(valid_dst, num_replicas=n_gpus, rank=args.local_rank) if args.ddp else None, 
        pin_memory=False,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=(TrainingSampler if training else InferenceSampler)(len(dataset)),
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
    )
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
torch.utils.data.DataLoader(
        dataset,  # pyre-ignore[6]
        batch_size=dataset_cfg.IMAGE_LOADER.BATCH_SIZE,
        sampler=training_sampler,
        num_workers=dataset_cfg.IMAGE_LOADER.NUM_WORKERS,
        collate_fn=trivial_batch_collator,
        worker_init_fn=worker_init_reset_seed,
    )
data.DataLoader(dataset, num_workers=0, collate_fn=operator.itemgetter(0))
data.DataLoader(
            dataset,
            num_workers=2,
            collate_fn=operator.itemgetter(0),
            worker_init_fn=worker_init_reset_seed,
            # reset seed should not affect behavior of TrainingSampler
        )
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/AdelaiDet/adet/modeling/MEInst/LME/mask_evaluation.py#L72
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/AdelaiDet/adet/modeling/MEInst/LME/mask_generation.py#L77
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/MaskRefineNet/main.py#L344
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/MaskRefineNet/main.py#L354
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/MaskRefineNet/merge_strong_and_refined_weak_labels.py#L154
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/detectron2/configs/Misc/torchvision_imagenet_R_50.py#L41
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/detectron2/detectron2/data/build.py#L321
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/detectron2/detectron2/data/build.py#L332
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/detectron2/detectron2/data/build.py#L537
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/detectron2/projects/DensePose/densepose/data/build.py#L661
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/detectron2/tests/data/test_sampler.py#L47
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/detectron2/tests/data/test_sampler.py#L52

========================================
https://github.com/zmhhmz/GPCIS_CVPR2023
========================================

Found 2 times
DataLoader(
            trainset, cfg.batch_size,
            sampler=get_sampler(trainset, shuffle=True, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
DataLoader(
            valset, cfg.val_batch_size,
            sampler=get_sampler(valset, shuffle=False, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
https://github.com/zmhhmz/GPCIS_CVPR2023/blob/6460415a2e784f5623a0c859971f884a89eb0fd0/isegm/engine/gp_trainer.py#L73
https://github.com/zmhhmz/GPCIS_CVPR2023/blob/6460415a2e784f5623a0c859971f884a89eb0fd0/isegm/engine/gp_trainer.py#L80

================================
https://github.com/fudan-zvg/GSS
================================

Found 2 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
https://github.com/fudan-zvg/GSS/blob/b9909a471b09a244fa9da7d80a839df3c4e273c2/mmseg/datasets/builder.py#L148
https://github.com/fudan-zvg/GSS/blob/b9909a471b09a244fa9da7d80a839df3c4e273c2/mmseg/datasets/builder.py#L161

=========================================================
https://github.com/txynwpu/Distributional_uncertainty_SOD
=========================================================

Found 30 times
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1)
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/base/data.py#L180
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/base/test.py#L56
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/base/train.py#L277
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_COTTA/data.py#L180
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_COTTA/test.py#L84
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_COTTA/train.py#L300
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_CTTA/data.py#L180
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_CTTA/test.py#L50
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_CTTA/test_TTA.py#L133
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_DC/data.py#L179
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_MC_dropout/data.py#L179
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_MC_dropout/test.py#L62
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_MC_dropout/train.py#L277
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_TALT/data.py#L180
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_TALT/test.py#L57
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_TALT/train.py#L407
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_TCP/data.py#L180
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_TCP/test.py#L55
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_TCP/train.py#L286
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_WB/data.py#L180
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_WB/test.py#L54
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_WB/train.py#L379
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_deep_ensemble/data.py#L179
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_deep_ensemble/test.py#L55
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_deep_ensemble/train.py#L283
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_post_hoc/data.py#L179
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_post_hoc/eval_react.py#L62
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_post_hoc/test.py#L72
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_post_hoc/test_gradNorm.py#L63
https://github.com/txynwpu/Distributional_uncertainty_SOD/blob/91bbb919a4043d58c8974119cd0c1c76109f7821/code/model_post_hoc/train.py#L277

======================================
https://github.com/jialeli1/lidarseg3d
======================================

Found 5 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        shuffle=(sampler is None),
        num_workers=num_workers,
        collate_fn=collate_kitti,
        # pin_memory=True,
        pin_memory=False,
    )
DataLoader(dataset, batch_size=16, num_workers=0)
DataLoader(dataset, batch_size=16, num_workers=16)
DataLoader(dataset, batch_size=16, num_workers=0)
DataLoader(
        dataset,
        batch_size=1,
        sampler=None,
        shuffle=False,
        num_workers=8,
        collate_fn=collate_kitti,
        pin_memory=False,
    )
https://github.com/jialeli1/lidarseg3d/blob/6af716503600646c9366fe53f35d1189d9b78b50/det3d/datasets/loader/build_loader.py#L46
https://github.com/jialeli1/lidarseg3d/blob/6af716503600646c9366fe53f35d1189d9b78b50/nuscenes-devkit/python-sdk/nuscenes/prediction/tests/run_covernet.py#L52
https://github.com/jialeli1/lidarseg3d/blob/6af716503600646c9366fe53f35d1189d9b78b50/nuscenes-devkit/python-sdk/nuscenes/prediction/tests/run_image_generation.py#L77
https://github.com/jialeli1/lidarseg3d/blob/6af716503600646c9366fe53f35d1189d9b78b50/nuscenes-devkit/python-sdk/nuscenes/prediction/tests/run_mtp.py#L63
https://github.com/jialeli1/lidarseg3d/blob/6af716503600646c9366fe53f35d1189d9b78b50/tools/demo.py#L61

===================================================
https://github.com/marvin-eisenberger/gmsm-matching
===================================================

Found 3 times
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(dataset_val, batch_size=1, shuffle=False)
https://github.com/marvin-eisenberger/gmsm-matching/blob/d7830e1cb5c26068455b7455e790cc067ae60709/model.py#L44
https://github.com/marvin-eisenberger/gmsm-matching/blob/d7830e1cb5c26068455b7455e790cc067ae60709/model.py#L282
https://github.com/marvin-eisenberger/gmsm-matching/blob/d7830e1cb5c26068455b7455e790cc067ae60709/model.py#L338

====================================
https://github.com/bytedance/FreeSeg
====================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/bytedance/FreeSeg/blob/7707335cc3f2a1a73d4d2829f3cdbb0e031d3961/mask2former/data/build.py#L339

==============================
https://github.com/zpbao/MoTok
==============================

Found 6 times
torch.utils.data.DataLoader(test_set, batch_size=8,
                                shuffle=True, num_workers=4, drop_last=False)
torch.utils.data.DataLoader(test_set, batch_size=8,
                                shuffle=False, num_workers=4, drop_last=False)
torch.utils.data.DataLoader(test_set, batch_size=1,
                                shuffle=False, num_workers=4, drop_last=False)
torch.utils.data.DataLoader(train_set, batch_size=opt.batch_size,
                            shuffle=True, num_workers=opt.num_workers, drop_last=True)
torch.utils.data.DataLoader(train_set, batch_size=opt.batch_size,
                            shuffle=True, num_workers=opt.num_workers, drop_last=True)
torch.utils.data.DataLoader(train_set, batch_size=opt.batch_size,
                            shuffle=True, num_workers=opt.num_workers, drop_last=True)
https://github.com/zpbao/MoTok/blob/628627b6348e54f7d729d61b51b7291dd1b9fb65/evalkitti.py#L50
https://github.com/zpbao/MoTok/blob/628627b6348e54f7d729d61b51b7291dd1b9fb65/evalmovi.py#L41
https://github.com/zpbao/MoTok/blob/628627b6348e54f7d729d61b51b7291dd1b9fb65/evalpd.py#L41
https://github.com/zpbao/MoTok/blob/628627b6348e54f7d729d61b51b7291dd1b9fb65/train_kitti.py#L104
https://github.com/zpbao/MoTok/blob/628627b6348e54f7d729d61b51b7291dd1b9fb65/train_movi.py#L85
https://github.com/zpbao/MoTok/blob/628627b6348e54f7d729d61b51b7291dd1b9fb65/train_pd.py#L86

====================================
https://github.com/feiaxyt/EMC-Click
====================================

Found 8 times
DataLoader(
            trainset, cfg.batch_size,
            sampler=get_sampler(trainset, shuffle=True, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
DataLoader(
            valset, cfg.val_batch_size,
            sampler=get_sampler(valset, shuffle=False, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
DataLoader(
            trainset, cfg.batch_size,
            sampler=get_sampler(trainset, shuffle=True, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
DataLoader(
            valset, cfg.val_batch_size,
            sampler=get_sampler(valset, shuffle=False, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
DataLoader(
            trainset, cfg.batch_size,
            sampler=get_sampler(trainset, shuffle=True, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
DataLoader(
            valset, cfg.val_batch_size,
            sampler=get_sampler(valset, shuffle=False, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
DataLoader(
            trainset, cfg.batch_size,
            sampler=get_sampler(trainset, shuffle=True, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
DataLoader(
            valset, cfg.val_batch_size,
            sampler=get_sampler(valset, shuffle=False, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
https://github.com/feiaxyt/EMC-Click/blob/e660ad0081a6be8519978c57c8c3149fda7052f6/isegm/engine/baseline_trainer.py#L73
https://github.com/feiaxyt/EMC-Click/blob/e660ad0081a6be8519978c57c8c3149fda7052f6/isegm/engine/baseline_trainer.py#L80
https://github.com/feiaxyt/EMC-Click/blob/e660ad0081a6be8519978c57c8c3149fda7052f6/isegm/engine/cdnet_trainer.py#L73
https://github.com/feiaxyt/EMC-Click/blob/e660ad0081a6be8519978c57c8c3149fda7052f6/isegm/engine/cdnet_trainer.py#L80
https://github.com/feiaxyt/EMC-Click/blob/e660ad0081a6be8519978c57c8c3149fda7052f6/isegm/engine/clickatt_trainer_batchconsistant.py#L80
https://github.com/feiaxyt/EMC-Click/blob/e660ad0081a6be8519978c57c8c3149fda7052f6/isegm/engine/clickatt_trainer_batchconsistant.py#L87
https://github.com/feiaxyt/EMC-Click/blob/e660ad0081a6be8519978c57c8c3149fda7052f6/isegm/engine/focalclick_trainer.py#L73
https://github.com/feiaxyt/EMC-Click/blob/e660ad0081a6be8519978c57c8c3149fda7052f6/isegm/engine/focalclick_trainer.py#L80

=================================
https://github.com/grantword8/BLV
=================================

Found 15 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
        test_dataset,
        batch_size=1,
        sampler=None,
        num_workers=0,
        shuffle=False,
    )
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/mmseg/datasets/builder.py#L148
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/mmseg/datasets/builder.py#L161
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_eval_hook.py#L46
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_eval_hook.py#L58
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_eval_hook.py#L60
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_eval_hook.py#L84
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_eval_hook.py#L96
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_eval_hook.py#L98
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_eval_hook.py#L133
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_eval_hook.py#L145
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_eval_hook.py#L147
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_eval_hook.py#L173
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_eval_hook.py#L185
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_eval_hook.py#L187
https://github.com/grantword8/BLV/blob/e08cc6cbfe158fedbfaecc82196a8c2ff5725b70/fully_sup/tests/test_apis/test_single_gpu.py#L37

==========================================
https://github.com/Jazzcharles/OVSegmentor
==========================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=config.train.batch_size,
        num_workers=config.num_workers,
        pin_memory=True,
        drop_last=True,
        persistent_workers=True,
        collate_fn=collate_fn, ### NOTEL THIS ###
        #shuffle=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        sampler=sampler_val,
        batch_size=config.val.batch_size,
        num_workers=config.val.num_workers,
        pin_memory=True,
        drop_last=False,
        persistent_workers=True,
    )
https://github.com/Jazzcharles/OVSegmentor/blob/a3f115f716f6000b3b090e0c7a8f0ff566a0a848/datasets/builder.py#L118
https://github.com/Jazzcharles/OVSegmentor/blob/a3f115f716f6000b3b090e0c7a8f0ff566a0a848/datasets/builder.py#L130

=============================
https://github.com/chtsy/buol
=============================

Found 2 times
torch.utils.data.DataLoader(
            ds,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=batch_sampler,
        )
torch.utils.data.DataLoader(
            ds,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=batch_sampler,
        )
https://github.com/chtsy/buol/blob/12636f9812c9823fbe4c60463117b1049ea8512d/main.py#L87
https://github.com/chtsy/buol/blob/12636f9812c9823fbe4c60463117b1049ea8512d/main.py#L97

================================
https://github.com/Pbihao/HDMNet
================================

Found 3 times
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val, shuffle=False, num_workers=args.workers, pin_memory=False, sampler=None)
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size, num_workers=args.workers, \
                                                pin_memory=True, sampler=train_sampler, drop_last=True, \
                                                shuffle=False if args.distributed else True)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val, shuffle=False, num_workers=args.workers, pin_memory=False, sampler=None)
https://github.com/Pbihao/HDMNet/blob/46ca7abd2c3ec096c08ff17f74bbbc7ba0a7e509/test.py#L142
https://github.com/Pbihao/HDMNet/blob/46ca7abd2c3ec096c08ff17f74bbbc7ba0a7e509/train.py#L161
https://github.com/Pbihao/HDMNet/blob/46ca7abd2c3ec096c08ff17f74bbbc7ba0a7e509/train.py#L188

=====================================
https://github.com/LiheYoung/UniMatch
=====================================

Found 19 times
DataLoader(trainset_l, batch_size=cfg['batch_size'],
                               pin_memory=True, num_workers=1, drop_last=True, sampler=trainsampler_l)
DataLoader(trainset_u, batch_size=cfg['batch_size'],
                               pin_memory=True, num_workers=1, drop_last=True, sampler=trainsampler_u)
DataLoader(valset, batch_size=1, pin_memory=True, num_workers=1,
                           drop_last=False, sampler=valsampler)
DataLoader(trainset, batch_size=cfg['batch_size'],
                             pin_memory=True, num_workers=1, drop_last=True, sampler=trainsampler)
DataLoader(valset, batch_size=1, pin_memory=True, num_workers=1,
                           drop_last=False, sampler=valsampler)
DataLoader(trainset_l, batch_size=cfg['batch_size'],
                               pin_memory=True, num_workers=1, drop_last=True, sampler=trainsampler_l)
DataLoader(trainset_u, batch_size=cfg['batch_size'],
                               pin_memory=True, num_workers=1, drop_last=True, sampler=trainsampler_u)
DataLoader(valset, batch_size=1, pin_memory=True, num_workers=1,
                           drop_last=False, sampler=valsampler)
DataLoader(trainset, batch_size=cfg['batch_size'],
                             pin_memory=True, num_workers=1, drop_last=True, sampler=trainsampler)
DataLoader(valset, batch_size=1, pin_memory=True, num_workers=1,
                           drop_last=False, sampler=valsampler)
DataLoader(trainset_l, batch_size=cfg['batch_size'],
                               pin_memory=True, num_workers=1, drop_last=True, sampler=trainsampler_l)
DataLoader(trainset_u, batch_size=cfg['batch_size'],
                               pin_memory=True, num_workers=1, drop_last=True, sampler=trainsampler_u)
DataLoader(trainset_u, batch_size=cfg['batch_size'],
                                   pin_memory=True, num_workers=1, drop_last=True, sampler=trainsampler_u_mix)
DataLoader(valset, batch_size=1, pin_memory=True, num_workers=1,
                           drop_last=False, sampler=valsampler)
DataLoader(trainset, batch_size=cfg['batch_size'],
                             pin_memory=True, num_workers=1, drop_last=True, sampler=trainsampler)
DataLoader(valset, batch_size=1, pin_memory=True, num_workers=1,
                           drop_last=False, sampler=valsampler)
DataLoader(trainset_l, batch_size=cfg['batch_size'],
                               pin_memory=True, num_workers=1, drop_last=True, sampler=trainsampler_l)
DataLoader(trainset_u, batch_size=cfg['batch_size'],
                               pin_memory=True, num_workers=1, drop_last=True, sampler=trainsampler_u)
DataLoader(valset, batch_size=1, pin_memory=True, num_workers=1,
                           drop_last=False, sampler=valsampler)
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/fixmatch.py#L84
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/fixmatch.py#L87
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/fixmatch.py#L90
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/supervised.py#L134
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/supervised.py#L137
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/unimatch.py#L84
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/unimatch.py#L87
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/unimatch.py#L90
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/more-scenarios/medical/supervised.py#L73
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/more-scenarios/medical/supervised.py#L76
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/more-scenarios/medical/unimatch.py#L75
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/more-scenarios/medical/unimatch.py#L78
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/more-scenarios/medical/unimatch.py#L81
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/more-scenarios/medical/unimatch.py#L84
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/more-scenarios/remote-sensing/supervised.py#L114
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/more-scenarios/remote-sensing/supervised.py#L117
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/more-scenarios/remote-sensing/unimatch.py#L80
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/more-scenarios/remote-sensing/unimatch.py#L83
https://github.com/LiheYoung/UniMatch/blob/583e32492b0ac150e0946b65864d2dcc642220b8/more-scenarios/remote-sensing/unimatch.py#L86

==================================================
https://github.com/AyanKumarBhunia/Sketch2Saliency
==================================================

Found 6 times
data.DataLoader(dataset_Train, batch_size=hp.batchsize, shuffle=True,
                                         num_workers=int(hp.nThreads))
data.DataLoader(dataset_Test, batch_size=hp.batchsize, shuffle=True,
                                         num_workers=int(hp.nThreads))
data.DataLoader(dataset_Train, batch_size=hp.batchsize, shuffle=True,
                                       num_workers=int(hp.nThreads), collate_fn=collate_self_Train)
data.DataLoader(dataset_Test, batch_size=1, shuffle=False, collate_fn=collate_self_Test,
                                      num_workers=int(hp.nThreads))
data.DataLoader(dataset_Train, batch_size=hp.batchsize, shuffle=True,
                                         num_workers=int(hp.nThreads))
data.DataLoader(dataset_Test, batch_size=hp.batchsize, shuffle=False,
                                         num_workers=int(hp.nThreads))
https://github.com/AyanKumarBhunia/Sketch2Saliency/blob/012357862ef3fd6d00f2596031d81f966e7550f1/code/Baseline_Class/dataset.py#L113
https://github.com/AyanKumarBhunia/Sketch2Saliency/blob/012357862ef3fd6d00f2596031d81f966e7550f1/code/Baseline_Class/dataset.py#L116
https://github.com/AyanKumarBhunia/Sketch2Saliency/blob/012357862ef3fd6d00f2596031d81f966e7550f1/code/photo2sketch_2D_GMM/dataset.py#L152
https://github.com/AyanKumarBhunia/Sketch2Saliency/blob/012357862ef3fd6d00f2596031d81f966e7550f1/code/photo2sketch_2D_GMM/dataset.py#L156
https://github.com/AyanKumarBhunia/Sketch2Saliency/blob/012357862ef3fd6d00f2596031d81f966e7550f1/code/photo2sketch_2D_GMM/dataset.py#L428
https://github.com/AyanKumarBhunia/Sketch2Saliency/blob/012357862ef3fd6d00f2596031d81f966e7550f1/code/photo2sketch_2D_GMM/dataset.py#L431

================================
https://github.com/Gavinwxy/DGCL
================================

Found 6 times
DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample,
        shuffle=False,
        pin_memory=False,
    )
DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample_sup,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
    )
DataLoader(
        dset_unsup,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample_unsup,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
    )
DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample,
        shuffle=False,
        pin_memory=False,
    )
DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample_sup,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
    )
DataLoader(
        dset_unsup,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample_unsup,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
    )
https://github.com/Gavinwxy/DGCL/blob/54671805ff415e530a78f047822d7a31612435fb/dgcl/dataset/cityscapes.py#L111
https://github.com/Gavinwxy/DGCL/blob/54671805ff415e530a78f047822d7a31612435fb/dgcl/dataset/cityscapes.py#L143
https://github.com/Gavinwxy/DGCL/blob/54671805ff415e530a78f047822d7a31612435fb/dgcl/dataset/cityscapes.py#L154
https://github.com/Gavinwxy/DGCL/blob/54671805ff415e530a78f047822d7a31612435fb/dgcl/dataset/pascal_voc.py#L113
https://github.com/Gavinwxy/DGCL/blob/54671805ff415e530a78f047822d7a31612435fb/dgcl/dataset/pascal_voc.py#L145
https://github.com/Gavinwxy/DGCL/blob/54671805ff415e530a78f047822d7a31612435fb/dgcl/dataset/pascal_voc.py#L156

==================================
https://github.com/miranheo/GenVIS
==================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/miranheo/GenVIS/blob/58db73c184b977a55cf19b19f50a1b496132bdc0/vita/data/build.py#L249

===============================
https://github.com/dongyh20/C2P
===============================

Found 22 times
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True,
                                              num_workers=args.workers, pin_memory=False)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True,
                                              num_workers=args.workers, pin_memory=False)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True,
                                              num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True,
                                              num_workers=args.workers, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.workers, pin_memory=False)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=False)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=False)
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/finetune_as_p4.py#L215
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/finetune_as_p4.py#L216
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/finetune_as_pptr.py#L214
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/finetune_as_pptr.py#L215
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/finetune_msr.py#L147
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/finetune_msr.py#L149
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/finetune_seg_p4.py#L72
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/finetune_seg_pptr.py#L70
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/finetune_syn.py#L159
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/finetune_syn.py#L161
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/pretrain_as.py#L148
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/pretrain_msr.py#L118
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/pretrain_seg_p4.py#L148
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/pretrain_seg_pptr.py#L148
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/pretrain_syn.py#L150
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/test_seg.py#L121
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/train-syn.py#L157
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/train-syn.py#L159
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/train_msr.py#L147
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/train_msr.py#L149
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/train_seg_p4.py#L144
https://github.com/dongyh20/C2P/blob/7c9b7e2d7d98657edd5dc097292bf53d61a40239/train_seg_pptr.py#L144

=========================================================================
https://github.com/dongliangcao/Self-Supervised-Multimodal-Shape-Matching
=========================================================================

Found 1 times
torch.utils.data.DataLoader(**dataloader_args)
https://github.com/dongliangcao/Self-Supervised-Multimodal-Shape-Matching/blob/1510b5ae440b47525cb2fde6fe02e305eb982600/datasets/__init__.py#L138

===================================
https://github.com/nowsyn/sparsemat
===================================

Found 3 times
DataLoader(
        test_dataset,
        batch_size=cfg.test.batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=cfg.test.num_workers
    )
DataLoader(
        train_dataset,
        batch_size=cfg.train.batch_size,
        shuffle=True,
        pin_memory=True,
        drop_last=True,
        num_workers=cfg.train.num_workers
    )
DataLoader(
        test_dataset,
        batch_size=cfg.test.batch_size,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
        num_workers=cfg.test.num_workers
    )
https://github.com/nowsyn/sparsemat/blob/2678757dfb7db185f91ee54e54d1e68944febded/test.py#L145
https://github.com/nowsyn/sparsemat/blob/2678757dfb7db185f91ee54e54d1e68944febded/train.py#L249
https://github.com/nowsyn/sparsemat/blob/2678757dfb7db185f91ee54e54d1e68944febded/train.py#L257

==================================
https://github.com/CVMI-Lab/MarS3D
==================================

Found 4 times
torch.utils.data.DataLoader(train_data,
                                               batch_size=cfg.batch_size,
                                               shuffle=(train_sampler is None),
                                               num_workers=cfg.workers,
                                               sampler=train_sampler,
                                               collate_fn=partial(point_collate_fn,
                                                                  max_batch_points=cfg.max_batch_points,
                                                                  mix_prob=cfg.mix_prob
                                                                  ),
                                               pin_memory=True,
                                               worker_init_fn=init_fn,
                                               drop_last=True,
                                               persistent_workers=True)
torch.utils.data.DataLoader(val_data,
                                                 batch_size=cfg.batch_size_val,
                                                 shuffle=False,
                                                 num_workers=cfg.workers,
                                                 pin_memory=True,
                                                 sampler=val_sampler,
                                                 collate_fn=collate_fn)
torch.utils.data.DataLoader(train_data,
                                               batch_size=cfg.batch_size,
                                               shuffle=(train_sampler is None),
                                               num_workers=cfg.workers,
                                               sampler=train_sampler,
                                               collate_fn=partial(point_collate_fn,
                                                                  max_batch_points=cfg.max_batch_points,
                                                                  mix_prob=cfg.mix_prob
                                                                  ),
                                               pin_memory=True,
                                               worker_init_fn=init_fn,
                                               drop_last=True,
                                               persistent_workers=True)
torch.utils.data.DataLoader(val_data,
                                                 batch_size=cfg.batch_size_val,
                                                 shuffle=False,
                                                 num_workers=cfg.workers,
                                                 pin_memory=True,
                                                 sampler=val_sampler,
                                                 collate_fn=collate_fn)
https://github.com/CVMI-Lab/MarS3D/blob/683e4de51148fee52a92563c25dcf190857a92e4/tools/test.py#L174
https://github.com/CVMI-Lab/MarS3D/blob/683e4de51148fee52a92563c25dcf190857a92e4/tools/test.py#L195
https://github.com/CVMI-Lab/MarS3D/blob/683e4de51148fee52a92563c25dcf190857a92e4/tools/train.py#L176
https://github.com/CVMI-Lab/MarS3D/blob/683e4de51148fee52a92563c25dcf190857a92e4/tools/train.py#L197

===================================
https://github.com/TACJu/Compositor
===================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/TACJu/Compositor/blob/ccda83fcf4093287958ce35236eac464d19f0b00/Compositor_Mask2Former/mask2former_video/data_video/build.py#L244

================================
https://github.com/nomewang/M3DM
================================

Found 2 times
DataLoader(dataset=dataset, batch_size=1, shuffle=False, num_workers=1, drop_last=False,
                             pin_memory=True)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
https://github.com/nomewang/M3DM/blob/62b7f468aa006f6b348f09e02f85655f416c9d76/dataset.py#L186
https://github.com/nomewang/M3DM/blob/62b7f468aa006f6b348f09e02f85655f416c9d76/fusion_pretrain.py#L131

=================================
https://github.com/sangrockEG/ACR
=================================

Found 3 times
DataLoader(infer_dataset, shuffle=False, pin_memory=True)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, pin_memory=True, drop_last=True, num_workers=4)
DataLoader(val_dataset, shuffle=False, pin_memory=True)
https://github.com/sangrockEG/ACR/blob/443dff9ef8fa0a4d0188c1ffdfd60ceac74f6bff/infer_pl.py#L75
https://github.com/sangrockEG/ACR/blob/443dff9ef8fa0a4d0188c1ffdfd60ceac74f6bff/train_pl.py#L79
https://github.com/sangrockEG/ACR/blob/443dff9ef8fa0a4d0188c1ffdfd60ceac74f6bff/train_pl.py#L80

=======================================
https://github.com/rahul-goel/isrf_code
=======================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
    )
https://github.com/rahul-goel/isrf_code/blob/b2b1a7aae629c59171120d8006d8a3d886bd3e92/feature_extractor/extract.py#L40

====================================
https://github.com/ShenghaiRong/BECO
====================================

Found 24 times
DataLoader(
            dataset=datasets_dict[k],
            batch_size=config['batch_size'] if is_train else 1,
            shuffle=(sampler_dict[k] is None and is_train),
            sampler=sampler_dict[k],
            num_workers=config['num_workers'],
            drop_last=config['drop_last'],
            pin_memory=True,
            worker_init_fn = init_fn,
            generator = rng,
            persistent_workers=True
        )
DataLoader(databin, shuffle=False, num_workers=0, pin_memory=False)
DataLoader(databin, shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=False)
DataLoader(infer_dataset, shuffle=False, num_workers=args.num_workers, pin_memory=True)
DataLoader(databin, shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=False)
DataLoader(databin,
                             shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=False)
DataLoader(train_dataset, batch_size=args.cam_batch_size,
                                   shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(val_dataset, batch_size=args.cam_batch_size,
                                 shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(train_dataset, batch_size=args.irn_batch_size,
                                   shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(infer_dataset, batch_size=args.irn_batch_size,
                                   shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(databin, shuffle=False, num_workers=0, pin_memory=False)
DataLoader(databin, shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=False)
DataLoader(databin, shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=False)
DataLoader(databin,
                             shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=False)
DataLoader(train_dataset, batch_size=args.cam_batch_size,
                                   shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(val_dataset, batch_size=args.cam_batch_size,shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(train_dataset, batch_size=args.cam_batch_size,
                                   shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(val_dataset, batch_size=args.cam_batch_size,shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(dataset, batch_size=1, shuffle=False, num_workers=8, pin_memory=False)
DataLoader(train_dataset, batch_size=args.mde_batch_size,shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(train_dataset, batch_size=args.irn_batch_size,
                                   shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(infer_dataset, batch_size=args.irn_batch_size,
                                   shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(train_dataset, batch_size=args.recam_batch_size,shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(val_dataset, batch_size=args.recam_batch_size,shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=True)
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/datasets/__init__.py#L64
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step/cam_to_ir_label.py#L16
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step/make_cam.py#L20
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step/make_cocoann.py#L14
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step/make_ins_seg_labels.py#L112
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step/make_sem_seg_labels.py#L21
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step/train_cam.py#L47
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step/train_cam.py#L53
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step/train_irn.py#L27
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step/train_irn.py#L91
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/cam_to_ir_label.py#L18
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/make_cam.py#L22
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/make_recam.py#L22
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/make_sem_seg_labels.py#L33
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/train_cam.py#L51
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/train_cam.py#L59
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/train_cam_coco.py#L52
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/train_cam_coco.py#L60
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/train_cam_mde_coco.py#L74
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/train_cam_mde_coco.py#L187
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/train_irn.py#L30
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/train_irn.py#L95
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/train_recam.py#L56
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/step_coco/train_recam.py#L63

============================================================
https://github.com/yk-pku/Two-shot-Video-Object-Segmentation
============================================================

Found 3 times
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=4)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=4)
DataLoader(dataset, para['batch_size'], sampler=train_sampler, num_workers=para['num_workers'],
                            worker_init_fn=worker_init_fn, drop_last=True, pin_memory=True)
https://github.com/yk-pku/Two-shot-Video-Object-Segmentation/blob/2c1c1c797298177a7cef860c18a98b89dcf9817e/eval_youtube.py#L73
https://github.com/yk-pku/Two-shot-Video-Object-Segmentation/blob/2c1c1c797298177a7cef860c18a98b89dcf9817e/eval_youtube_phase2.py#L94
https://github.com/yk-pku/Two-shot-Video-Object-Segmentation/blob/2c1c1c797298177a7cef860c18a98b89dcf9817e/train.py#L87

===================================
https://github.com/csvt32745/FTP-VM
===================================

Found 3 times
DataLoader(dataset, batch_size=1, num_workers=args.n_workers, shuffle=False, pin_memory=True)
DataLoader(dataset, batch_size=1, num_workers=8, shuffle=False, pin_memory=True)
DataLoader(source, batch_size=seq_chunk, pin_memory=True, num_workers=num_workers)
https://github.com/csvt32745/FTP-VM/blob/9fa2c7bd9dda173fb0660fc44d64f4b6620186a5/inference_dataset.py#L181
https://github.com/csvt32745/FTP-VM/blob/9fa2c7bd9dda173fb0660fc44d64f4b6620186a5/inference_dataset_update_mem.py#L83
https://github.com/csvt32745/FTP-VM/blob/9fa2c7bd9dda173fb0660fc44d64f4b6620186a5/inference_footages_util.py#L79

=======================================
https://github.com/VinAIResearch/ISBNet
=======================================

Found 2 times
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            collate_fn=dataset.collate_fn,
            shuffle=shuffle,
            sampler=sampler,
            drop_last=True,
            pin_memory=True,
        )
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            collate_fn=dataset.collate_fn,
            shuffle=False,
            sampler=sampler,
            drop_last=False,
            pin_memory=True,
        )
https://github.com/VinAIResearch/ISBNet/blob/44beb835a25b91d98a7b8ad35b90969b941b8f3b/isbnet/data/__init__.py#L38
https://github.com/VinAIResearch/ISBNet/blob/44beb835a25b91d98a7b8ad35b90969b941b8f3b/isbnet/data/__init__.py#L50

========================================
https://github.com/dwang181/selectivecal
========================================

Found 2 times
DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=4, pin_memory=True)
DataLoader(testset, batch_size=batch_size, shuffle=True, num_workers=4, pin_memory=True)
https://github.com/dwang181/selectivecal/blob/a41419ed2969f65168e08e6f7b0303bbb6ed3b3b/calibrator_train.py#L126
https://github.com/dwang181/selectivecal/blob/a41419ed2969f65168e08e6f7b0303bbb6ed3b3b/calibrator_train.py#L129

=====================================================
https://github.com/NiFangBaAGe/Explicit-Visual-Prompt
=====================================================

Found 2 times
DataLoader(dataset, batch_size=spec['batch_size'],
                        num_workers=8)
DataLoader(dataset, batch_size=spec['batch_size'],
        shuffle=(tag == 'train'), num_workers=8, pin_memory=True)
https://github.com/NiFangBaAGe/Explicit-Visual-Prompt/blob/601ae9985f04264c0411aa3722822f70134fa488/test.py#L137
https://github.com/NiFangBaAGe/Explicit-Visual-Prompt/blob/601ae9985f04264c0411aa3722822f70134fa488/train.py#L30

============================
https://github.com/hynnsk/HP
============================

Found 2 times
DataLoader(dataset, 1, shuffle=False, num_workers=8, collate_fn=lambda l: l)
DataLoader(ds, num_workers=12, collate_fn=lambda l: l[0])
https://github.com/hynnsk/HP/blob/3e92daa996ce3a4f418a4595d7f15c2d8ec9de80/dataset/crop_datasets.py#L148
https://github.com/hynnsk/HP/blob/3e92daa996ce3a4f418a4595d7f15c2d8ec9de80/dataset/data.py#L445

===================================
https://github.com/mrkshllr/FewTURE
===================================

Found 4 times
torch.utils.data.DataLoader(
        dataset, batch_sampler=sampler, num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(train_dataset, batch_sampler=train_sampler,
                                               num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(val_dataset, batch_sampler=val_sampler,
                                             num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True
    )
https://github.com/mrkshllr/FewTURE/blob/c67d4c1fe01d683abcc46eb409ce8eed6fcf1b76/eval_FewTURE.py#L286
https://github.com/mrkshllr/FewTURE/blob/c67d4c1fe01d683abcc46eb409ce8eed6fcf1b76/train_metatrain_FewTURE.py#L368
https://github.com/mrkshllr/FewTURE/blob/c67d4c1fe01d683abcc46eb409ce8eed6fcf1b76/train_metatrain_FewTURE.py#L377
https://github.com/mrkshllr/FewTURE/blob/c67d4c1fe01d683abcc46eb409ce8eed6fcf1b76/train_selfsup_pretrain.py#L232

====================================
https://github.com/Luffy03/AGMM-SASS
====================================

Found 5 times
DataLoader(dataset, batch_size=1,
                           shuffle=False, pin_memory=True, num_workers=8, drop_last=False)
DataLoader(trainset, batch_size=cfg['batch_size'],
                             pin_memory=True, num_workers=4, drop_last=True, sampler=trainsampler)
DataLoader(valset, batch_size=1, pin_memory=True, num_workers=2,
                           drop_last=False, sampler=valsampler)
DataLoader(trainset, batch_size=cfg['batch_size'],
                             pin_memory=True, num_workers=4, drop_last=True, sampler=trainsampler)
DataLoader(valset, batch_size=1, pin_memory=True, num_workers=2,
                           drop_last=False, sampler=valsampler)
https://github.com/Luffy03/AGMM-SASS/blob/a47bb57ec997b58320d6a6a9630c312b5001c0e7/eval.py#L59
https://github.com/Luffy03/AGMM-SASS/blob/a47bb57ec997b58320d6a6a9630c312b5001c0e7/train_city.py#L78
https://github.com/Luffy03/AGMM-SASS/blob/a47bb57ec997b58320d6a6a9630c312b5001c0e7/train_city.py#L81
https://github.com/Luffy03/AGMM-SASS/blob/a47bb57ec997b58320d6a6a9630c312b5001c0e7/train_voc.py#L81
https://github.com/Luffy03/AGMM-SASS/blob/a47bb57ec997b58320d6a6a9630c312b5001c0e7/train_voc.py#L84

=======================================
https://github.com/yucornetto/MGMatting
=======================================

Found 2 times
DataLoader(train_dataset,
                                      batch_size=CONFIG.model.batch_size,
                                      shuffle=(train_sampler is None),
                                      num_workers=CONFIG.data.workers,
                                      pin_memory=True,
                                      sampler=train_sampler,
                                      drop_last=True)
DataLoader(test_dataset,
                                     batch_size=1,
                                     shuffle=False,
                                     num_workers=CONFIG.data.workers,
                                     sampler=test_sampler,
                                     drop_last=False)
https://github.com/yucornetto/MGMatting/blob/2bac93f01a6482d69229065ba16096fece95b34c/code-base/main.py#L54
https://github.com/yucornetto/MGMatting/blob/2bac93f01a6482d69229065ba16096fece95b34c/code-base/main.py#L62

===================================
https://github.com/xiaoyao3302/CCVC
===================================

Found 6 times
DataLoader(trainset_l, batch_size=args.batch_size,
                               pin_memory=True, num_workers=args.num_workers, drop_last=True, sampler=trainsampler_l)
DataLoader(trainset_u, batch_size=args.batch_size,
                               pin_memory=True, num_workers=args.num_workers, drop_last=True, sampler=trainsampler_u)
DataLoader(valset, batch_size=1, pin_memory=True, num_workers=args.num_workers, drop_last=False)
DataLoader(trainset_l, batch_size=args.batch_size,
                               pin_memory=True, num_workers=args.num_workers, drop_last=True, sampler=trainsampler_l)
DataLoader(trainset_u, batch_size=args.batch_size,
                               pin_memory=True, num_workers=args.num_workers, drop_last=True, sampler=trainsampler_u)
DataLoader(valset, batch_size=1, pin_memory=True, num_workers=args.num_workers, drop_last=False)
https://github.com/xiaoyao3302/CCVC/blob/274672cca69e9aec809b3f0ecd86ed9885d2a0a5/CCVC_aug.py#L167
https://github.com/xiaoyao3302/CCVC/blob/274672cca69e9aec809b3f0ecd86ed9885d2a0a5/CCVC_aug.py#L175
https://github.com/xiaoyao3302/CCVC/blob/274672cca69e9aec809b3f0ecd86ed9885d2a0a5/CCVC_aug.py#L178
https://github.com/xiaoyao3302/CCVC/blob/274672cca69e9aec809b3f0ecd86ed9885d2a0a5/CCVC_no_aug.py#L164
https://github.com/xiaoyao3302/CCVC/blob/274672cca69e9aec809b3f0ecd86ed9885d2a0a5/CCVC_no_aug.py#L172
https://github.com/xiaoyao3302/CCVC/blob/274672cca69e9aec809b3f0ecd86ed9885d2a0a5/CCVC_no_aug.py#L175

==================================
https://github.com/ZhenZHAO/AugSeg
==================================

Found 6 times
DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample,
        shuffle=False,
        pin_memory=False,
        worker_init_fn=seed_worker,
    )
DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample_sup,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
        worker_init_fn=seed_worker,
    )
DataLoader(
        dset_unsup,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample_unsup,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
        worker_init_fn=seed_worker,
    )
DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample,
        shuffle=False,
        pin_memory=False,
        worker_init_fn=seed_worker,
    )
DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample_sup,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
        worker_init_fn=seed_worker,
    )
DataLoader(
        dset_unsup,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample_unsup,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
        worker_init_fn=seed_worker,
    )
https://github.com/ZhenZHAO/AugSeg/blob/1a741c7c190bca8243d9af4f1b3b1c1bffbfbafe/augseg/dataset/cityscapes.py#L140
https://github.com/ZhenZHAO/AugSeg/blob/1a741c7c190bca8243d9af4f1b3b1c1bffbfbafe/augseg/dataset/cityscapes.py#L184
https://github.com/ZhenZHAO/AugSeg/blob/1a741c7c190bca8243d9af4f1b3b1c1bffbfbafe/augseg/dataset/cityscapes.py#L194
https://github.com/ZhenZHAO/AugSeg/blob/1a741c7c190bca8243d9af4f1b3b1c1bffbfbafe/augseg/dataset/pascal_voc.py#L139
https://github.com/ZhenZHAO/AugSeg/blob/1a741c7c190bca8243d9af4f1b3b1c1bffbfbafe/augseg/dataset/pascal_voc.py#L183
https://github.com/ZhenZHAO/AugSeg/blob/1a741c7c190bca8243d9af4f1b3b1c1bffbfbafe/augseg/dataset/pascal_voc.py#L193

===================================
https://github.com/threedle/DA-Wand
===================================

Found 1 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.num_threads),
            collate_fn=collate_fn)
https://github.com/threedle/DA-Wand/blob/7c7d1f39ba820ce25b87f930c6e7bfde26d945fa/data/__init__.py#L17

======================================
https://github.com/zhaozhengChen/LPCAM
======================================

Found 17 times
DataLoader(databin, shuffle=False, num_workers=0, pin_memory=False)
DataLoader(databin, shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=False)
DataLoader(dataset, batch_size=1, shuffle=False, num_workers=4, pin_memory=True, drop_last=False)
DataLoader(dataset, batch_size=1, shuffle=False, num_workers=4, pin_memory=True, drop_last=False)
DataLoader(databin,shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=False)
DataLoader(train_dataset, batch_size=args.cam_batch_size,
                                   shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(val_dataset, batch_size=args.cam_batch_size,
                                 shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(train_dataset, batch_size=args.irn_batch_size,
                                   shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(infer_dataset, batch_size=args.irn_batch_size,
                                   shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(databin, shuffle=False, num_workers=0, pin_memory=False)
DataLoader(databin, shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=False)
DataLoader(dataset, batch_size=1, shuffle=False, num_workers=8, pin_memory=False, drop_last=False)
DataLoader(databin,
                             shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=False)
DataLoader(train_dataset, batch_size=args.cam_batch_size,
                                   shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(val_dataset, batch_size=args.cam_batch_size,shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(train_dataset, batch_size=args.irn_batch_size,
                                   shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(infer_dataset, batch_size=args.irn_batch_size,
                                   shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=True)
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step/cam_to_ir_label.py#L22
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step/make_cam.py#L20
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step/make_lpcam.py#L31
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step/make_lpcam.py#L157
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step/make_sem_seg_labels.py#L25
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step/train_cam.py#L50
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step/train_cam.py#L56
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step/train_irn.py#L28
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step/train_irn.py#L92
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step_coco/cam_to_ir_label.py#L16
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step_coco/make_cam.py#L21
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step_coco/make_lpcam.py#L179
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step_coco/make_sem_seg_labels.py#L22
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step_coco/train_cam.py#L51
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step_coco/train_cam.py#L59
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step_coco/train_irn.py#L30
https://github.com/zhaozhengChen/LPCAM/blob/39cdd8d87051496c999526316dfb5b9c0bfd49ca/step_coco/train_irn.py#L95

======================================
https://github.com/veizgyauzgyauz/FCFI
======================================

Found 4 times
DataLoader(
            trainset, cfg.batch_size,
            sampler=get_sampler(trainset, shuffle=True, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
DataLoader(
            valset, cfg.val_batch_size,
            sampler=get_sampler(valset, shuffle=False, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
DataLoader(
            trainset, cfg.batch_size,
            sampler=get_sampler(trainset, shuffle=True, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
DataLoader(
            valset, cfg.val_batch_size,
            sampler=get_sampler(valset, shuffle=False, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
https://github.com/veizgyauzgyauz/FCFI/blob/ea36fd53057904ed70c20fb440233f04d115dbd8/isegm/engine/trainer_deeplab.py#L80
https://github.com/veizgyauzgyauz/FCFI/blob/ea36fd53057904ed70c20fb440233f04d115dbd8/isegm/engine/trainer_deeplab.py#L87
https://github.com/veizgyauzgyauz/FCFI/blob/ea36fd53057904ed70c20fb440233f04d115dbd8/isegm/engine/trainer_hrnet.py#L80
https://github.com/veizgyauzgyauz/FCFI/blob/ea36fd53057904ed70c20fb440233f04d115dbd8/isegm/engine/trainer_hrnet.py#L87

===================================
https://github.com/XuJiacong/PIDNet
===================================

Found 3 times
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=1,
        shuffle=False,
        num_workers=0,
        pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=batch_size,
        shuffle=config.TRAIN.SHUFFLE,
        num_workers=config.WORKERS,
        pin_memory=False,
        drop_last=True)
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=config.TEST.BATCH_SIZE_PER_GPU * len(gpus),
        shuffle=False,
        num_workers=config.WORKERS,
        pin_memory=False)
https://github.com/XuJiacong/PIDNet/blob/fefa51716bddc13a4321af2c70a074367100645a/tools/eval.py#L94
https://github.com/XuJiacong/PIDNet/blob/fefa51716bddc13a4321af2c70a074367100645a/tools/train.py#L96
https://github.com/XuJiacong/PIDNet/blob/fefa51716bddc13a4321af2c70a074367100645a/tools/train.py#L116

===============================
https://github.com/MendelXu/SAN
===============================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/MendelXu/SAN/blob/81a9a2bd79d433292d46cfa0597caea5005e0116/san/data/build.py#L334

=====================================
https://github.com/ZhouHuang23/FSPNet
=====================================

Found 2 times
DataLoader(Dataset, batch_size=batch_size, num_workers=batch_size*2)
DataLoader(Dataset, batch_size=args.batch_size_per_gpu, num_workers=args.batch_size_per_gpu, collate_fn=dataset.my_collate_fn, sampler=Datasampler, drop_last=True)
https://github.com/ZhouHuang23/FSPNet/blob/fce46dd4663c76b84db58d89943c86359cd98e26/test.py#L42
https://github.com/ZhouHuang23/FSPNet/blob/fce46dd4663c76b84db58d89943c86359cd98e26/train.py#L113

==============================
https://github.com/naver/relis
==============================

Found 32 times
data.DataLoader(
                self.trg_parent_set, batch_size=self.args.batch_size,
                shuffle=False, pin_memory=True)
data.DataLoader(
                dataset, batch_size=1,
                shuffle=False, pin_memory=True)
data.DataLoader(
                dataset, batch_size=1,
                shuffle=False, pin_memory=True)
data.DataLoader(
                dataset, batch_size=1,
                shuffle=False, pin_memory=True)
data.DataLoader(
                self.trg_parent_set, batch_size=self.args.batch_size,
                shuffle=False, pin_memory=True)
data.DataLoader(
                self.trg_parent_set, batch_size=self.args.batch_size,
                shuffle=False, pin_memory=True)
data.DataLoader(
                self.trg_parent_set, batch_size=self.args.batch_size,
                shuffle=False, pin_memory=True)
data.DataLoader(
                val_set, batch_size=1,
                shuffle=True, pin_memory=True)
data.DataLoader(
                train_set, batch_size=1,
                shuffle=True, pin_memory=True)
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=(TrainingSampler if training else InferenceSampler)(len(dataset)),
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
    )
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
torch.utils.data.DataLoader(
        dataset,  # pyre-ignore[6]
        batch_size=dataset_cfg.IMAGE_LOADER.BATCH_SIZE,
        sampler=training_sampler,
        num_workers=dataset_cfg.IMAGE_LOADER.NUM_WORKERS,
        collate_fn=trivial_batch_collator,
        worker_init_fn=worker_init_reset_seed,
    )
data.DataLoader(dataset, num_workers=0, collate_fn=operator.itemgetter(0))
data.DataLoader(
            dataset,
            num_workers=2,
            collate_fn=operator.itemgetter(0),
            worker_init_fn=worker_init_reset_seed,
            # reset seed should not affect behavior of TrainingSampler
        )
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
        test_dataset,
        batch_size=1,
        sampler=None,
        num_workers=0,
        shuffle=False,
    )
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/eval.py#L362
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/eval_calibration_lts.py#L244
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/eval_ood_lts.py#L252
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/eval_prr_lts.py#L232
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/extract_features.py#L233
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/extract_logits.py#L245
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/generate_augmented_data.py#L127
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/train_lts_network.py#L232
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/train_lts_network.py#L236
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/Mask2Former/mask2former_video/data_video/build.py#L244
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/detectron2/configs/Misc/torchvision_imagenet_R_50.py#L41
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/detectron2/detectron2/data/build.py#L321
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/detectron2/detectron2/data/build.py#L332
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/detectron2/detectron2/data/build.py#L537
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/detectron2/projects/DensePose/densepose/data/build.py#L661
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/detectron2/tests/data/test_sampler.py#L47
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/detectron2/tests/data/test_sampler.py#L52
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/mmseg/datasets/builder.py#L148
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/mmseg/datasets/builder.py#L161
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_eval_hook.py#L46
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_eval_hook.py#L58
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_eval_hook.py#L60
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_eval_hook.py#L84
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_eval_hook.py#L96
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_eval_hook.py#L98
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_eval_hook.py#L133
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_eval_hook.py#L145
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_eval_hook.py#L147
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_eval_hook.py#L173
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_eval_hook.py#L185
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_eval_hook.py#L187
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/mmsegmentation/tests/test_apis/test_single_gpu.py#L37

==============================
https://github.com/lsa1997/POP
==============================

Found 2 times
torch.utils.data.DataLoader(train_dataset,
                                       batch_size=batch_size,
                                       num_workers=num_workers,
                                       drop_last=True,
                                       shuffle=is_shuffle,
                                       pin_memory=True,
                                       sampler=train_sampler)
torch.utils.data.DataLoader(test_dataset,
                                       batch_size=batch_size,
                                       num_workers=self.args.num_workers,
                                       drop_last=False,
                                       shuffle=is_shuffle,
                                       pin_memory=True,
                                       sampler=test_sampler)
https://github.com/lsa1997/POP/blob/28b9ff59d0feec5914a2622470521bfbe8e916d5/engine.py#L90
https://github.com/lsa1997/POP/blob/28b9ff59d0feec5914a2622470521bfbe8e916d5/engine.py#L110

================================
https://github.com/ZhenZHAO/iMAS
================================

Found 6 times
DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample,
        shuffle=False,
        pin_memory=False,
        drop_last=True,
        worker_init_fn=seed_worker,
    )
DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample_sup,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
        worker_init_fn=seed_worker,
    )
DataLoader(
        dset_unsup,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample_unsup,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
        worker_init_fn=seed_worker,
    )
DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample,
        shuffle=False,
        pin_memory=False,
        worker_init_fn=seed_worker,
    )
DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample_sup,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
        worker_init_fn=seed_worker,
    )
DataLoader(
        dset_unsup,
        batch_size=batch_size,
        num_workers=workers,
        sampler=sample_unsup,
        shuffle=False,
        pin_memory=True,
        drop_last=True,
        worker_init_fn=seed_worker,
    )
https://github.com/ZhenZHAO/iMAS/blob/96e57e03b627164c0894fdf5cc47edb87a369444/imas/dataset/cityscapes.py#L158
https://github.com/ZhenZHAO/iMAS/blob/96e57e03b627164c0894fdf5cc47edb87a369444/imas/dataset/cityscapes.py#L215
https://github.com/ZhenZHAO/iMAS/blob/96e57e03b627164c0894fdf5cc47edb87a369444/imas/dataset/cityscapes.py#L225
https://github.com/ZhenZHAO/iMAS/blob/96e57e03b627164c0894fdf5cc47edb87a369444/imas/dataset/pascal_voc.py#L163
https://github.com/ZhenZHAO/iMAS/blob/96e57e03b627164c0894fdf5cc47edb87a369444/imas/dataset/pascal_voc.py#L225
https://github.com/ZhenZHAO/iMAS/blob/96e57e03b627164c0894fdf5cc47edb87a369444/imas/dataset/pascal_voc.py#L235

============================================
https://github.com/aka-discover/CCMBA_CVPR23
============================================

Found 1 times
data.DataLoader(train_dst, batch_size=4, shuffle=True, num_workers=2,drop_last=True)
https://github.com/aka-discover/CCMBA_CVPR23/blob/24bc4261e850baef2fd46d093d846a1a9839dc24/tester.py#L17

================================
https://github.com/alinlab/ifseg
================================

Found 7 times
DataLoader(
            dataset, batch_size=32, collate_fn=dataset.collate, num_workers=8
        )
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=self.max_sentences,
            collate_fn=self.collate_fn,
            num_workers=self.num_workers,
            timeout=self.timeout,
            worker_init_fn=worker_init_fn,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            self.dataset,
            collate_fn=self.collate_fn,
            batch_sampler=batches[offset:],
            num_workers=self.num_workers,
            timeout=self.timeout,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            self.dataset,
            collate_fn=self.collate_fn,
            batch_sampler=batches[offset:],
            num_workers=self.num_workers,
        )
torch.utils.data.DataLoader(
            backtranslation_dataset,
            batch_size=2,
            collate_fn=backtranslation_dataset.collater,
        )
torch.utils.data.DataLoader(
            dataset=language_pair_dataset,
            batch_size=2,
            collate_fn=language_pair_dataset.collater,
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        collate_fn=(lambda samples: collate(samples, padding_idx, eos_idx)),
    )
https://github.com/alinlab/ifseg/blob/77c075ca89dd22654bc18d7bb9a2685e24c38311/custom_fairseq/examples/wav2vec/vq-wav2vec_featurize.py#L207
https://github.com/alinlab/ifseg/blob/77c075ca89dd22654bc18d7bb9a2685e24c38311/custom_fairseq/fairseq/data/iterators.py#L210
https://github.com/alinlab/ifseg/blob/77c075ca89dd22654bc18d7bb9a2685e24c38311/custom_fairseq/fairseq/data/iterators.py#L468
https://github.com/alinlab/ifseg/blob/77c075ca89dd22654bc18d7bb9a2685e24c38311/custom_fairseq/fairseq/data/iterators.py#L756
https://github.com/alinlab/ifseg/blob/77c075ca89dd22654bc18d7bb9a2685e24c38311/custom_fairseq/tests/test_backtranslation_dataset.py#L78
https://github.com/alinlab/ifseg/blob/77c075ca89dd22654bc18d7bb9a2685e24c38311/custom_fairseq/tests/test_noising.py#L444
https://github.com/alinlab/ifseg/blob/77c075ca89dd22654bc18d7bb9a2685e24c38311/custom_fairseq/tests/utils.py#L52

=====================================
https://github.com/DonaldRR/SimpleNet
=====================================

Found 3 times
torch.utils.data.DataLoader(
                train_dataset,
                batch_size=batch_size,
                shuffle=True,
                num_workers=num_workers,
                prefetch_factor=2,
                pin_memory=True,
            )
torch.utils.data.DataLoader(
                test_dataset,
                batch_size=batch_size,
                shuffle=False,
                num_workers=num_workers,
                prefetch_factor=2,
                pin_memory=True,
            )
torch.utils.data.DataLoader(
                    val_dataset,
                    batch_size=batch_size,
                    shuffle=False,
                    num_workers=num_workers,
                    prefetch_factor=4,
                    pin_memory=True,
                )
https://github.com/DonaldRR/SimpleNet/blob/351a2b8d4e8cfc944dbccbf9bc6ceda930c6f26b/main.py#L302
https://github.com/DonaldRR/SimpleNet/blob/351a2b8d4e8cfc944dbccbf9bc6ceda930c6f26b/main.py#L311
https://github.com/DonaldRR/SimpleNet/blob/351a2b8d4e8cfc944dbccbf9bc6ceda930c6f26b/main.py#L335

========================================
https://github.com/Haoqing-Wang/LocalMIM
========================================

Found 6 times
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset_val,
        sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset_val,
        sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False)
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True)
https://github.com/Haoqing-Wang/LocalMIM/blob/314a6e558a8c47bf0ef146235e2ced8d01e27fe6/Swin/run_finetune.py#L134
https://github.com/Haoqing-Wang/LocalMIM/blob/314a6e558a8c47bf0ef146235e2ced8d01e27fe6/Swin/run_finetune.py#L141
https://github.com/Haoqing-Wang/LocalMIM/blob/314a6e558a8c47bf0ef146235e2ced8d01e27fe6/Swin/run_pretrain.py#L111
https://github.com/Haoqing-Wang/LocalMIM/blob/314a6e558a8c47bf0ef146235e2ced8d01e27fe6/ViT/run_finetune.py#L139
https://github.com/Haoqing-Wang/LocalMIM/blob/314a6e558a8c47bf0ef146235e2ced8d01e27fe6/ViT/run_finetune.py#L146
https://github.com/Haoqing-Wang/LocalMIM/blob/314a6e558a8c47bf0ef146235e2ced8d01e27fe6/ViT/run_pretrain.py#L106

================================
https://github.com/wgcban/adamae
================================

Found 4 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=True
        )
torch.utils.data.DataLoader(
            dataset_test, 
            sampler=sampler_test,
            batch_size= args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=True
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        worker_init_fn=msc.utils.seed_worker
    )
https://github.com/wgcban/adamae/blob/aa198502f3da26a5ecb1999aeaf19a7a04bab272/finetune_class.py#L261
https://github.com/wgcban/adamae/blob/aa198502f3da26a5ecb1999aeaf19a7a04bab272/finetune_class.py#L271
https://github.com/wgcban/adamae/blob/aa198502f3da26a5ecb1999aeaf19a7a04bab272/finetune_class.py#L282
https://github.com/wgcban/adamae/blob/aa198502f3da26a5ecb1999aeaf19a7a04bab272/pretrain_mae_vit.py#L180

===================================
https://github.com/jmiemirza/ActMAD
===================================

Found 1 times
DataLoader(ConcatDataset(datasets),
                          batch_size=args.batch_size,
                          shuffle=True,
                          num_workers=args.workers,
                          drop_last=True)
https://github.com/jmiemirza/ActMAD/blob/401544d94072c13d6c07c916bbc18d5358c0237f/utils/data_loader.py#L85

================================
https://github.com/CQUPT-CV/DLBD
================================

Found 1 times
torch.utils.data.DataLoader(train_data,
                                               batch_size=256,
                                               shuffle=True)
https://github.com/CQUPT-CV/DLBD/blob/3358758ab7799eefe842096957cd84431b707a47/main_DLBD_cifar10.py#L117

==========================================
https://github.com/facebookresearch/CutLER
==========================================

Found 4 times
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/facebookresearch/CutLER/blob/32ab22f66445fd3ed2afd28961b9d45e0fc72bff/cutler/data/build.py#L326
https://github.com/facebookresearch/CutLER/blob/32ab22f66445fd3ed2afd28961b9d45e0fc72bff/cutler/data/build.py#L337
https://github.com/facebookresearch/CutLER/blob/32ab22f66445fd3ed2afd28961b9d45e0fc72bff/cutler/data/build.py#L542
https://github.com/facebookresearch/CutLER/blob/32ab22f66445fd3ed2afd28961b9d45e0fc72bff/videocutler/mask2former_video/data_video/build.py#L244

===============================
https://github.com/XinyuSun/MME
===============================

Found 4 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
            dataset_test, sampler=sampler_test,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        worker_init_fn=utils.seed_worker
    )
https://github.com/XinyuSun/MME/blob/17689a923297ab53e28991e2c7e5a089c746d0b6/finetune/run.py#L265
https://github.com/XinyuSun/MME/blob/17689a923297ab53e28991e2c7e5a089c746d0b6/finetune/run.py#L275
https://github.com/XinyuSun/MME/blob/17689a923297ab53e28991e2c7e5a089c746d0b6/finetune/run.py#L286
https://github.com/XinyuSun/MME/blob/17689a923297ab53e28991e2c7e5a089c746d0b6/pretrain/run.py#L281

=========================================
https://github.com/OpenDriveLab/maskalign
=========================================

Found 5 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
https://github.com/OpenDriveLab/maskalign/blob/2430c0229d8322137a01843d9ae4fb2073664014/main_finetune.py#L204
https://github.com/OpenDriveLab/maskalign/blob/2430c0229d8322137a01843d9ae4fb2073664014/main_finetune.py#L212
https://github.com/OpenDriveLab/maskalign/blob/2430c0229d8322137a01843d9ae4fb2073664014/main_linprobe.py#L178
https://github.com/OpenDriveLab/maskalign/blob/2430c0229d8322137a01843d9ae4fb2073664014/main_linprobe.py#L186
https://github.com/OpenDriveLab/maskalign/blob/2430c0229d8322137a01843d9ae4fb2073664014/main_pretrain.py#L171

======================================
https://github.com/Haochen-Wang409/HPM
======================================

Found 7 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
            dataset_train, sampler=sampler_train,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=True,
        )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
https://github.com/Haochen-Wang409/HPM/blob/490092c3f27e19a6692f3c73e189cf0c0465bfde/main_finetune.py#L203
https://github.com/Haochen-Wang409/HPM/blob/490092c3f27e19a6692f3c73e189cf0c0465bfde/main_finetune.py#L211
https://github.com/Haochen-Wang409/HPM/blob/490092c3f27e19a6692f3c73e189cf0c0465bfde/main_knn.py#L255
https://github.com/Haochen-Wang409/HPM/blob/490092c3f27e19a6692f3c73e189cf0c0465bfde/main_knn.py#L263
https://github.com/Haochen-Wang409/HPM/blob/490092c3f27e19a6692f3c73e189cf0c0465bfde/main_linprob.py#L148
https://github.com/Haochen-Wang409/HPM/blob/490092c3f27e19a6692f3c73e189cf0c0465bfde/main_linprob.py#L164
https://github.com/Haochen-Wang409/HPM/blob/490092c3f27e19a6692f3c73e189cf0c0465bfde/main_pretrain.py#L160

==============================
https://github.com/skyoux/mokd
==============================

Found 5 times
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=False,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=False,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=False,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=False,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
https://github.com/skyoux/mokd/blob/f7b138618c6730d0aa61f0d3e183e62d11330763/eval_knn.py#L38
https://github.com/skyoux/mokd/blob/f7b138618c6730d0aa61f0d3e183e62d11330763/eval_knn.py#L46
https://github.com/skyoux/mokd/blob/f7b138618c6730d0aa61f0d3e183e62d11330763/eval_linear.py#L130
https://github.com/skyoux/mokd/blob/f7b138618c6730d0aa61f0d3e183e62d11330763/eval_linear.py#L157
https://github.com/skyoux/mokd/blob/f7b138618c6730d0aa61f0d3e183e62d11330763/main_mokd.py#L163

=================================
https://github.com/baaivision/EVA
=================================

Found 29 times
torch.utils.data.DataLoader(
        dataset,
        sampler=(TrainingSampler if training else InferenceSampler)(len(dataset)),
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
    )
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
data.DataLoader(dataset, num_workers=0, collate_fn=operator.itemgetter(0))
data.DataLoader(
            dataset,
            num_workers=2,
            collate_fn=operator.itemgetter(0),
            worker_init_fn=worker_init_reset_seed,
            # reset seed should not affect behavior of TrainingSampler
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(args.batch_size) if args.linear_probe else int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
DataLoader(
        train_data, sampler=sampler_train,
        batch_size=config.TRAIN.BATCH_SIZE,
        num_workers=16,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=config.TRAIN.BATCH_SIZE),
    )
DataLoader(
        val_data, sampler=sampler_val,
        batch_size=config.TEST.BATCH_SIZE,
        num_workers=16,
        pin_memory=True,
        drop_last=False,
        collate_fn=partial(mmcv_collate, samples_per_gpu=2),
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(args.batch_size) if args.linear_probe else int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=(TrainingSampler if training else InferenceSampler)(len(dataset)),
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
    )
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
torch.utils.data.DataLoader(
        dataset,  # pyre-ignore[6]
        batch_size=dataset_cfg.IMAGE_LOADER.BATCH_SIZE,
        sampler=training_sampler,
        num_workers=dataset_cfg.IMAGE_LOADER.NUM_WORKERS,
        collate_fn=trivial_batch_collator,
        worker_init_fn=worker_init_reset_seed,
    )
data.DataLoader(dataset, num_workers=0, collate_fn=operator.itemgetter(0))
data.DataLoader(
            dataset,
            num_workers=2,
            collate_fn=operator.itemgetter(0),
            worker_init_fn=worker_init_reset_seed,
            # reset seed should not affect behavior of TrainingSampler
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=args.workers,
        sampler=sampler,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=args.workers,
        sampler=sampler,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-01/det/configs/Misc/torchvision_imagenet_R_50.py#L41
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-01/det/detectron2/data/build.py#L321
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-01/det/detectron2/data/build.py#L332
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-01/det/detectron2/data/build.py#L537
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-01/det/tests/data/test_sampler.py#L47
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-01/det/tests/data/test_sampler.py#L52
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-01/eva/run_class_finetuning.py#L293
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-01/eva/run_class_finetuning.py#L302
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-01/eva/run_eva_pretraining.py#L319
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-01/eva/run_eva_pretraining.py#L327
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-01/video/datasets/build.py#L286
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-01/video/datasets/build.py#L333
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-02/asuka/run_class_finetuning.py#L298
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-02/asuka/run_class_finetuning.py#L307
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-02/asuka/run_eva02_pretraining.py#L331
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-02/asuka/run_eva02_pretraining.py#L339
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-02/det/configs/Misc/torchvision_imagenet_R_50.py#L41
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-02/det/detectron2/data/build.py#L321
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-02/det/detectron2/data/build.py#L332
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-02/det/detectron2/data/build.py#L537
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-02/det/projects/DensePose/densepose/data/build.py#L661
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-02/det/tests/data/test_sampler.py#L47
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-02/det/tests/data/test_sampler.py#L52
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-CLIP-18B/shinji/training/data.py#L150
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-CLIP-18B/shinji/training/data.py#L572
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-CLIP-18B/shinji/training/data.py#L614
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-CLIP/rei/training/data.py#L150
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-CLIP/rei/training/data.py#L572
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-CLIP/rei/training/data.py#L614

=============================
https://github.com/LTH14/mage
=============================

Found 5 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
https://github.com/LTH14/mage/blob/1becb14475354fc40df35ba7c7c7bf418a137cd3/main_finetune.py#L197
https://github.com/LTH14/mage/blob/1becb14475354fc40df35ba7c7c7bf418a137cd3/main_finetune.py#L205
https://github.com/LTH14/mage/blob/1becb14475354fc40df35ba7c7c7bf418a137cd3/main_linprobe.py#L160
https://github.com/LTH14/mage/blob/1becb14475354fc40df35ba7c7c7bf418a137cd3/main_linprobe.py#L168
https://github.com/LTH14/mage/blob/1becb14475354fc40df35ba7c7c7bf418a137cd3/main_pretrain.py#L141

=====================================
https://github.com/sunsmarterjie/iTPN
=====================================

Found 9 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(args.batch_size) if args.linear_probe else int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
https://github.com/sunsmarterjie/iTPN/blob/78ff9f98d751069cb537664efe27b58585134d5f/det/mmdet/datasets/builder.py#L195
https://github.com/sunsmarterjie/iTPN/blob/78ff9f98d751069cb537664efe27b58585134d5f/fast_itpn/run_class_finetuning.py#L300
https://github.com/sunsmarterjie/iTPN/blob/78ff9f98d751069cb537664efe27b58585134d5f/fast_itpn/run_class_finetuning.py#L309
https://github.com/sunsmarterjie/iTPN/blob/78ff9f98d751069cb537664efe27b58585134d5f/itpn_clip/run_itpn_finetuning.py#L271
https://github.com/sunsmarterjie/iTPN/blob/78ff9f98d751069cb537664efe27b58585134d5f/itpn_clip/run_itpn_finetuning.py#L280
https://github.com/sunsmarterjie/iTPN/blob/78ff9f98d751069cb537664efe27b58585134d5f/itpn_clip/run_itpn_pretraining.py#L222
https://github.com/sunsmarterjie/iTPN/blob/78ff9f98d751069cb537664efe27b58585134d5f/itpn_pixel/main_finetune.py#L220
https://github.com/sunsmarterjie/iTPN/blob/78ff9f98d751069cb537664efe27b58585134d5f/itpn_pixel/main_finetune.py#L228
https://github.com/sunsmarterjie/iTPN/blob/78ff9f98d751069cb537664efe27b58585134d5f/itpn_pixel/main_pretrain.py#L146

=========================================================
https://github.com/weivision/Correlational-Image-Modeling
=========================================================

Found 3 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
https://github.com/weivision/Correlational-Image-Modeling/blob/f00e35aab2d417219bb8dfad3c3ef54acbf5deb3/tools/main_finetune.py#L209
https://github.com/weivision/Correlational-Image-Modeling/blob/f00e35aab2d417219bb8dfad3c3ef54acbf5deb3/tools/main_finetune.py#L217
https://github.com/weivision/Correlational-Image-Modeling/blob/f00e35aab2d417219bb8dfad3c3ef54acbf5deb3/tools/main_pretrain.py#L229

=============================================
https://github.com/object-understanding/SLASH
=============================================

Found 7 times
torch.utils.data.DataLoader(
        dataset_val, batch_size=cfg.TRAIN.BATCH_SIZE, shuffle=False, num_workers=cfg.DATA.NUM_WORKERS
    )
torch.utils.data.DataLoader(
            dataset_train, 
            pin_memory=True, 
            batch_size=cfg.TRAIN.BATCH_SIZE-batch_fusion_ws_num_samples, 
            shuffle=True, 
            num_workers=cfg.DATA.NUM_WORKERS)
torch.utils.data.DataLoader(
                dataset_train_sub, 
                pin_memory=True, 
                batch_size=batch_fusion_ws_num_samples, 
                shuffle=True, 
                num_workers=cfg.DATA.NUM_WORKERS
            )
torch.utils.data.DataLoader(
            dataset_train, 
            pin_memory=True, 
            batch_size=cfg.TRAIN.BATCH_SIZE, 
            shuffle=True, 
            num_workers=cfg.DATA.NUM_WORKERS
        )
torch.utils.data.DataLoader(
                dataset_train_sub, 
                pin_memory=True, 
                batch_size=cfg.TRAIN.BATCH_SIZE, 
                shuffle=True, 
                num_workers=cfg.DATA.NUM_WORKERS
            )
torch.utils.data.DataLoader(
        dataset_val, 
        pin_memory=True, 
        batch_size=1, 
        shuffle=False, 
        num_workers=cfg.DATA.NUM_WORKERS
    )
torch.utils.data.DataLoader(
        dataset_val, 
        pin_memory=True, 
        batch_size=args.num_vis, 
        shuffle=False, 
        num_workers=cfg.DATA.NUM_WORKERS
    )
https://github.com/object-understanding/SLASH/blob/b6e9aca9ce7f1393d3b1c2a06902f8815bfd1010/eval_metric.py#L66
https://github.com/object-understanding/SLASH/blob/b6e9aca9ce7f1393d3b1c2a06902f8815bfd1010/train.py#L113
https://github.com/object-understanding/SLASH/blob/b6e9aca9ce7f1393d3b1c2a06902f8815bfd1010/train.py#L119
https://github.com/object-understanding/SLASH/blob/b6e9aca9ce7f1393d3b1c2a06902f8815bfd1010/train.py#L127
https://github.com/object-understanding/SLASH/blob/b6e9aca9ce7f1393d3b1c2a06902f8815bfd1010/train.py#L135
https://github.com/object-understanding/SLASH/blob/b6e9aca9ce7f1393d3b1c2a06902f8815bfd1010/train.py#L143
https://github.com/object-understanding/SLASH/blob/b6e9aca9ce7f1393d3b1c2a06902f8815bfd1010/train.py#L151

===============================================
https://github.com/XLearning-SCU/2023-CVPR-FCMI
===============================================

Found 3 times
data.DataLoader(dataset, batch_size=512, num_workers=NumWorkers)
data.DataLoader(data_set,
                                   batch_size=batch_size,
                                   shuffle=True,
                                   drop_last=True, num_workers=NumWorkers)
data.DataLoader(data_set, batch_size=batch_size * 100, num_workers=NumWorkers)
https://github.com/XLearning-SCU/2023-CVPR-FCMI/blob/d83a5acaf1826a9717697b1e79de4a18ed1bcaa7/DataSetMaster/dataset.py#L166
https://github.com/XLearning-SCU/2023-CVPR-FCMI/blob/d83a5acaf1826a9717697b1e79de4a18ed1bcaa7/DataSetMaster/dataset.py#L424
https://github.com/XLearning-SCU/2023-CVPR-FCMI/blob/d83a5acaf1826a9717697b1e79de4a18ed1bcaa7/DataSetMaster/dataset.py#L428

====================================================
https://github.com/ZhanzhouFeng/Evolved-Part-Masking
====================================================

Found 5 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
https://github.com/ZhanzhouFeng/Evolved-Part-Masking/blob/28228aa154294c5e000d1a50a1bb2ff54ac0ae10/Script/main_finetune.py#L203
https://github.com/ZhanzhouFeng/Evolved-Part-Masking/blob/28228aa154294c5e000d1a50a1bb2ff54ac0ae10/Script/main_finetune.py#L211
https://github.com/ZhanzhouFeng/Evolved-Part-Masking/blob/28228aa154294c5e000d1a50a1bb2ff54ac0ae10/Script/main_linprobe.py#L171
https://github.com/ZhanzhouFeng/Evolved-Part-Masking/blob/28228aa154294c5e000d1a50a1bb2ff54ac0ae10/Script/main_linprobe.py#L179
https://github.com/ZhanzhouFeng/Evolved-Part-Masking/blob/28228aa154294c5e000d1a50a1bb2ff54ac0ae10/Script/main_pretrain.py#L150

=====================================
https://github.com/utkarshmall13/caco
=====================================

Found 8 times
DataLoader(
            dataset=self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=False,
            drop_last=True
        )
DataLoader(
            dataset=self.val_dataset,
            batch_size=self.batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=False,
            drop_last=True
        )
DataLoader(
            self.train_dataset,
            batch_size=32,
            shuffle=True,
            num_workers=8,
            drop_last=True,
            pin_memory=True
        )
DataLoader(
            self.val_dataset,
            batch_size=32,
            shuffle=False,
            num_workers=8,
            drop_last=True,
            pin_memory=True
        )
DataLoader(
            dataset=self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=False,
            drop_last=True
        )
DataLoader(
            dataset=self.train_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            pin_memory=False,
            drop_last=True,
            sampler=sampler,
            persistent_workers=False
        )
DataLoader(
            dataset=self.train_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            pin_memory=False,
            drop_last=True,
            sampler=sampler,
            persistent_workers=False
        )
DataLoader(dataset, batch_size=1, shuffle=True, num_workers=8, collate_fn=lambda x: x[0])
https://github.com/utkarshmall13/caco/blob/0a6bd0050f02e487b3536822915a8ed4994ba34a/src/datasets/bigearthnet_datamodule.py#L80
https://github.com/utkarshmall13/caco/blob/0a6bd0050f02e487b3536822915a8ed4994ba34a/src/datasets/bigearthnet_datamodule.py#L90
https://github.com/utkarshmall13/caco/blob/0a6bd0050f02e487b3536822915a8ed4994ba34a/src/datasets/eurosat_datamodule.py#L24
https://github.com/utkarshmall13/caco/blob/0a6bd0050f02e487b3536822915a8ed4994ba34a/src/datasets/eurosat_datamodule.py#L34
https://github.com/utkarshmall13/caco/blob/0a6bd0050f02e487b3536822915a8ed4994ba34a/src/datasets/seco_datamodule.py#L37
https://github.com/utkarshmall13/caco/blob/0a6bd0050f02e487b3536822915a8ed4994ba34a/src/datasets/seco_datamodule.py#L120
https://github.com/utkarshmall13/caco/blob/0a6bd0050f02e487b3536822915a8ed4994ba34a/src/datasets/seco_datamodule.py#L143
https://github.com/utkarshmall13/caco/blob/0a6bd0050f02e487b3536822915a8ed4994ba34a/src/datasets/seco_utils.py#L12

==============================
https://github.com/GANPerf/LCR
==============================

Found 16 times
torch.utils.data.DataLoader(
        dataset=get_dataset( 
            transform=get_aug(train=False, train_classifier=True, **args.aug_kwargs), 
            train=True, 
            **args.dataset_kwargs
        ),
        batch_size=args.eval.batch_size,
        shuffle=True,
        **args.dataloader_kwargs
    )
torch.utils.data.DataLoader(
        dataset=get_dataset(
            transform=get_aug(train=False, train_classifier=False, **args.aug_kwargs), 
            train=False,
            **args.dataset_kwargs
        ),
        batch_size=args.eval.batch_size,
        shuffle=False,
        **args.dataloader_kwargs
    )
torch.utils.data.DataLoader(
        dataset=get_dataset( 
            transform=get_aug(train=False, train_classifier=True, **args.aug_kwargs), 
            train=True, 
            **args.dataset_kwargs
        ),
        batch_size=args.eval.batch_size,
        shuffle=True,
        **args.dataloader_kwargs
    )
torch.utils.data.DataLoader(
        dataset=get_dataset(
            transform=get_aug(train=False, train_classifier=False, **args.aug_kwargs), 
            train=False,
            **args.dataset_kwargs
        ),
        batch_size=args.eval.batch_size,
        shuffle=False,
        **args.dataloader_kwargs
    )
torch.utils.data.DataLoader(
        dataset=get_dataset( 
            transform=get_aug(train=False, train_classifier=True, **args.aug_kwargs), 
            train=True, 
            **args.dataset_kwargs
        ),
        batch_size=args.eval.batch_size,
        shuffle=True,
        **args.dataloader_kwargs
    )
torch.utils.data.DataLoader(
        dataset=get_dataset(
            transform=get_aug(train=False, train_classifier=False, **args.aug_kwargs), 
            train=False,
            **args.dataset_kwargs
        ),
        batch_size=args.eval.batch_size,
        shuffle=False,
        **args.dataloader_kwargs
    )
torch.utils.data.DataLoader(
        dataset=get_dataset( 
            transform=get_aug(train=False, train_classifier=True, **args.aug_kwargs), 
            train=True, 
            **args.dataset_kwargs
        ),
        batch_size=args.eval.batch_size,
        shuffle=True,
        **args.dataloader_kwargs
    )
torch.utils.data.DataLoader(
        dataset=get_dataset(
            transform=get_aug(train=False, train_classifier=False, **args.aug_kwargs), 
            train=False,
            **args.dataset_kwargs
        ),
        batch_size=args.eval.batch_size,
        shuffle=False,
        **args.dataloader_kwargs
    )
torch.utils.data.DataLoader(
        dataset=get_dataset(
            transform=get_aug(train=True, **args.aug_kwargs), 
            train=True,
            **args.dataset_kwargs),
        shuffle=True,
        batch_size=args.train.batch_size,
        **args.dataloader_kwargs
    )
torch.utils.data.DataLoader(
        dataset=get_dataset(
            transform=get_aug(train=False, train_classifier=False, **args.aug_kwargs), 
            train=True,
            **args.dataset_kwargs),
        shuffle=False,
        batch_size=args.train.batch_size,
        **args.dataloader_kwargs
    )
torch.utils.data.DataLoader(
        dataset=get_dataset(
            transform=get_aug(train=False, train_classifier=False, **args.aug_kwargs),
            train=False,
            **args.dataset_kwargs),
        shuffle=False,
        batch_size=args.train.batch_size,
        **args.dataloader_kwargs
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=False, sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=False)
torch.utils.data.DataLoader(dataset, batch_size=2, shuffle=True, num_workers=0,
                                              drop_last=True)
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/linear_cub_eval.py#L16
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/linear_cub_eval.py#L26
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/linear_eval.py#L16
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/linear_eval.py#L26
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/linear_imagenet100_eval.py#L16
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/linear_imagenet100_eval.py#L26
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/linear_stanfordcars_eval.py#L16
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/linear_stanfordcars_eval.py#L26
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/main.py#L22
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/main.py#L32
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/main.py#L42
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/main_lincls.py#L281
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/main_lincls.py#L285
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/main_moco.py#L282
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/main_moco.py#L286
https://github.com/GANPerf/LCR/blob/fe591d4ee9b6dccba8710f9f73ef41b9a129f013/datasets/CUB200.py#L118

===================================
https://github.com/jimmy-dq/DropMAE
===================================

Found 1 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
https://github.com/jimmy-dq/DropMAE/blob/5db038045c550b4f153ae6b458608d71a16dfba9/main_pretrain_kinetics.py#L164

================================================
https://github.com/megvii-research/US3L-CVPR2023
================================================

Found 7 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=256, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(
            dataset,
            batch_size=config.QUANT.CALIBRATION.BATCHSIZE,
            shuffle=False,
            num_workers=config.QUANT.CALIBRATION.NUM_WORKERS,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
                dataset,
                sampler=train_sampler,
                batch_size=config.TRAIN.BATCH_SIZE,  # per-gpu
                num_workers=config.TRAIN.NUM_WORKERS,
                pin_memory=True,
                drop_last = config.TRAIN.DROP_LAST,
                shuffle=True if train_sampler is None else False,
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=min(256, config.TRAIN.BATCH_SIZE),
                #batch_size = 32,
                num_workers=config.TRAIN.NUM_WORKERS,
                shuffle=False,
                drop_last=False,
                pin_memory=True,
            )
https://github.com/megvii-research/US3L-CVPR2023/blob/394f681233482b36cc4f597870c2dc9f4d7f6544/ViT_experiments/main_lincls_ddp.py#L234
https://github.com/megvii-research/US3L-CVPR2023/blob/394f681233482b36cc4f597870c2dc9f4d7f6544/ViT_experiments/main_lincls_ddp.py#L238
https://github.com/megvii-research/US3L-CVPR2023/blob/394f681233482b36cc4f597870c2dc9f4d7f6544/ViT_experiments/main_moco_ddp.py#L312
https://github.com/megvii-research/US3L-CVPR2023/blob/394f681233482b36cc4f597870c2dc9f4d7f6544/ViT_experiments/main_moco_ofa_ddp.py#L326
https://github.com/megvii-research/US3L-CVPR2023/blob/394f681233482b36cc4f597870c2dc9f4d7f6544/datasets/__init__.py#L112
https://github.com/megvii-research/US3L-CVPR2023/blob/394f681233482b36cc4f597870c2dc9f4d7f6544/datasets/__init__.py#L133
https://github.com/megvii-research/US3L-CVPR2023/blob/394f681233482b36cc4f597870c2dc9f4d7f6544/datasets/__init__.py#L143

=============================
https://github.com/shlokk/HCL
=============================

Found 3 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
https://github.com/shlokk/HCL/blob/4833aff2428b2935115587b5eb62013579210284/main_hcl.py#L292
https://github.com/shlokk/HCL/blob/4833aff2428b2935115587b5eb62013579210284/main_lincls.py#L283
https://github.com/shlokk/HCL/blob/4833aff2428b2935115587b5eb62013579210284/main_lincls.py#L287

=====================================
https://github.com/yichen928/ActiveFT
=====================================

Found 5 times
torch.utils.data.DataLoader(
        dataset,
        shuffle=False,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(3 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(3 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/yichen928/ActiveFT/blob/12fd912603287e470daf7ea326a17330696eb900/data_selection/extract_feature.py#L98
https://github.com/yichen928/ActiveFT/blob/12fd912603287e470daf7ea326a17330696eb900/deit/main.py#L223
https://github.com/yichen928/ActiveFT/blob/12fd912603287e470daf7ea326a17330696eb900/deit/main.py#L231
https://github.com/yichen928/ActiveFT/blob/12fd912603287e470daf7ea326a17330696eb900/deit/main_aug.py#L223
https://github.com/yichen928/ActiveFT/blob/12fd912603287e470daf7ea326a17330696eb900/deit/main_aug.py#L231

======================================
https://github.com/OliverRensu/TinyMIM
======================================

Found 3 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
https://github.com/OliverRensu/TinyMIM/blob/d0847051aa00c171de0c31344079565bf853f503/main_finetune.py#L202
https://github.com/OliverRensu/TinyMIM/blob/d0847051aa00c171de0c31344079565bf853f503/main_finetune.py#L210
https://github.com/OliverRensu/TinyMIM/blob/d0847051aa00c171de0c31344079565bf853f503/main_pretrain.py#L163

=================================
https://github.com/CVRL/SiNC-rPPG
=================================

Found 3 times
torch.utils.data.DataLoader(train_set, batch_size=arg_obj.batch_size,
                                               shuffle=True, num_workers=arg_obj.num_workers)
torch.utils.data.DataLoader(val_set, batch_size=1, shuffle=False, num_workers=1)
torch.utils.data.DataLoader(val_set, batch_size=1, shuffle=False, num_workers=1)
https://github.com/CVRL/SiNC-rPPG/blob/4c8ef7ccc14e4636f7e8f53230ef6b89cd51b4aa/src/train.py#L56
https://github.com/CVRL/SiNC-rPPG/blob/4c8ef7ccc14e4636f7e8f53230ef6b89cd51b4aa/src/utils/validate.py#L54
https://github.com/CVRL/SiNC-rPPG/blob/4c8ef7ccc14e4636f7e8f53230ef6b89cd51b4aa/src/utils/validate.py#L124

================================
https://github.com/stegmuel/CrOC
================================

Found 1 times
torch.utils.data.DataLoader(dataset, **keyword_args, **kwargs)
https://github.com/stegmuel/CrOC/blob/cf7f83ac43adf45fd66bd3c8d1134aba4bf85613/croc_utils/datasets.py#L131

=============================
https://github.com/relh/moves
=============================

Found 2 times
DataLoader(train_data, batch_size=args.batch_size // args.num_gpus, num_workers=0, sampler=train_sampler, drop_last=True)
DataLoader(valid_data, batch_size=args.batch_size // args.num_gpus, num_workers=0, sampler=valid_sampler, drop_last=True)
https://github.com/relh/moves/blob/c7390565c3a2b9b14f56a81920a226c216041af0/main.py#L54
https://github.com/relh/moves/blob/c7390565c3a2b9b14f56a81920a226c216041af0/main.py#L55

=======================================
https://github.com/JohnsonSign/PointCMP
=======================================

Found 4 times
torch.utils.data.DataLoader(
                    train_dataset, 
                    batch_size=args.batch_size, 
                    shuffle=True,
                    num_workers=args.workers, 
                    pin_memory=True, 
                    drop_last=True
    )
torch.utils.data.DataLoader(
                    train_dataset, 
                    batch_size=args.batch_size, 
                    shuffle=True,
                    num_workers=args.workers, 
                    pin_memory=True, 
                    drop_last=True
    )
torch.utils.data.DataLoader(
                    dataset, 
                    batch_size=args.batch_size, 
                    num_workers=args.workers, 
                    shuffle=True,
                    pin_memory=True, 
                    drop_last=True
    )
torch.utils.data.DataLoader(
                dataset_test, 
                batch_size=args.batch_size, 
                num_workers=args.workers, 
                pin_memory=True
    )
https://github.com/JohnsonSign/PointCMP/blob/fa8487713679932b607c1524d1eddcc8cf6985fe/0-pretrain-msr.py#L112
https://github.com/JohnsonSign/PointCMP/blob/fa8487713679932b607c1524d1eddcc8cf6985fe/0-pretrain-test.py#L109
https://github.com/JohnsonSign/PointCMP/blob/fa8487713679932b607c1524d1eddcc8cf6985fe/1-linear-msr.py#L179
https://github.com/JohnsonSign/PointCMP/blob/fa8487713679932b607c1524d1eddcc8cf6985fe/1-linear-msr.py#L197

=================================
https://github.com/moothes/A2S-v2
=================================

Found 1 times
data.DataLoader(dataset=dataset,
                                  batch_size=config['batch'],
                                  shuffle=True,
                                  num_workers=4,
                                  pin_memory=True,
                                  drop_last=True)
https://github.com/moothes/A2S-v2/blob/018a5c5e92397084499fbd3ccd80d6db4be94a2d/data.py#L203

===================================
https://github.com/Zx55/SiameseDETR
===================================

Found 3 times
DataLoader(dataset, batch_sampler=batch_sampler, collate_fn=collate_fn, 
                        num_workers=args.num_workers)
DataLoader(dataset, args.batch_size, sampler=sampler, drop_last=False,
                        collate_fn=collate_fn, num_workers=args.num_workers)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=collate_fn,
        pin_memory=False,
        worker_init_fn=worker_init_fn if seed is not None else None,
        **kwargs)
https://github.com/Zx55/SiameseDETR/blob/ae604dce39c7b5d82169acc26e925eff022aeb77/downstream_finetune/conditionaldetr/datasets/__init__.py#L49
https://github.com/Zx55/SiameseDETR/blob/ae604dce39c7b5d82169acc26e925eff022aeb77/downstream_finetune/conditionaldetr/datasets/__init__.py#L60
https://github.com/Zx55/SiameseDETR/blob/ae604dce39c7b5d82169acc26e925eff022aeb77/openselfsup/datasets/loader/build_loader.py#L94

==============================
https://github.com/DreamMr/PCL
==============================

Found 8 times
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=config['batch_size'],
            num_workers=config['num_threads'],
            pin_memory=True,
            drop_last=False,
            shuffle=False
        )
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=config['batch_size'],
            num_workers=config['num_threads'],
            pin_memory=True,
            drop_last=False,
            shuffle=False
        )
torch.utils.data.DataLoader(
        pfe_train_dataset,
        batch_size=config['batch_size'],
        num_workers=config['num_threads'],
        pin_memory=True,
        drop_last=True,
        shuffle=True
    )
torch.utils.data.DataLoader(
        exp_train_dataset,
        batch_size=config['batch_size'],
        num_workers=config['num_threads'],
        pin_memory=True,
        drop_last=True,
        shuffle=True
    )
torch.utils.data.DataLoader(
        pose_train_dataset,
        batch_size=10,
        num_workers=config['num_threads'],
        pin_memory=True,
        drop_last=True,
        shuffle=True
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=config['batch_size'],
        num_workers=config['num_threads'],
        pin_memory=True,
        drop_last=False,
        shuffle=True
    )
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=config['batch_size'],
        num_workers=config['num_threads'],
        pin_memory=True,
        drop_last=False,
        shuffle=True
    )
torch.utils.data.DataLoader(
            dataset,
            pin_memory = pin_memory,
            batch_size=batch_size,
            shuffle=shuffle,
            num_workers=num_workers)
https://github.com/DreamMr/PCL/blob/6e71d4110873a434fa29dcd406607ec2ab5fe827/main.py#L291
https://github.com/DreamMr/PCL/blob/6e71d4110873a434fa29dcd406607ec2ab5fe827/main.py#L300
https://github.com/DreamMr/PCL/blob/6e71d4110873a434fa29dcd406607ec2ab5fe827/main.py#L316
https://github.com/DreamMr/PCL/blob/6e71d4110873a434fa29dcd406607ec2ab5fe827/main.py#L324
https://github.com/DreamMr/PCL/blob/6e71d4110873a434fa29dcd406607ec2ab5fe827/main.py#L332
https://github.com/DreamMr/PCL/blob/6e71d4110873a434fa29dcd406607ec2ab5fe827/main_pose.py#L321
https://github.com/DreamMr/PCL/blob/6e71d4110873a434fa29dcd406607ec2ab5fe827/main_pose.py#L329
https://github.com/DreamMr/PCL/blob/6e71d4110873a434fa29dcd406607ec2ab5fe827/data_process/CustomDatasetDataLoader.py#L16

=============================================
https://github.com/ryl0427/Code-for-OT-Filter
=============================================

Found 4 times
torch.utils.data.DataLoader(CIFAR_noisy_train, args.batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(CIFAR_test, args.batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(
    labeled_dataset, args.batch_size, shuffle=True, num_workers=0, drop_last=True)
torch.utils.data.DataLoader(
    unlabeled_dataset, args.batch_size, shuffle=True, num_workers=0, drop_last=True)
https://github.com/ryl0427/Code-for-OT-Filter/blob/2cf492f25df561a848dec0148633a77f7ebfc19a/Train_CIFAR.py#L110
https://github.com/ryl0427/Code-for-OT-Filter/blob/2cf492f25df561a848dec0148633a77f7ebfc19a/Train_CIFAR.py#L111
https://github.com/ryl0427/Code-for-OT-Filter/blob/2cf492f25df561a848dec0148633a77f7ebfc19a/Train_CIFAR.py#L309
https://github.com/ryl0427/Code-for-OT-Filter/blob/2cf492f25df561a848dec0148633a77f7ebfc19a/Train_CIFAR.py#L312

=================================
https://github.com/YanhaoWu/STSSL
=================================

Found 3 times
torch.utils.data.DataLoader(
        data_val,
        batch_size=args.batch_size,
        collate_fn=SparseCollation(args.sparse_resolution, inf),
        shuffle=True,
    )
torch.utils.data.DataLoader(
          data_train,
          batch_size=args.batch_size,
          collate_fn=collate_fn,
          shuffle=True,
          num_workers=args.num_workers,
          pin_memory=pin_memory
      )
torch.utils.data.DataLoader(
          data_train,
          batch_size=args.batch_size,
          collate_fn=collate_fn,
          shuffle=True,
          num_workers=args.num_workers,
          pin_memory=pin_memory
      )
https://github.com/YanhaoWu/STSSL/blob/7ae9fc684d188376f4ef97cca1a8aa6fde619acf/inference.py#L78
https://github.com/YanhaoWu/STSSL/blob/7ae9fc684d188376f4ef97cca1a8aa6fde619acf/utils.py#L96
https://github.com/YanhaoWu/STSSL/blob/7ae9fc684d188376f4ef97cca1a8aa6fde619acf/utils.py#L109

=========================================
https://github.com/neuroethology/BKinD-3D
=========================================

Found 7 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True,
        sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True
    )
torch.utils.data.DataLoader(
        dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
https://github.com/neuroethology/BKinD-3D/blob/cd8a4e6771c65915f084aef2d61a282c09886acb/test_simplehuman36m.py#L229
https://github.com/neuroethology/BKinD-3D/blob/cd8a4e6771c65915f084aef2d61a282c09886acb/test_simplehuman36m.py#L233
https://github.com/neuroethology/BKinD-3D/blob/cd8a4e6771c65915f084aef2d61a282c09886acb/train_video_multiview.py#L120
https://github.com/neuroethology/BKinD-3D/blob/cd8a4e6771c65915f084aef2d61a282c09886acb/train_video_multiview.py#L125
https://github.com/neuroethology/BKinD-3D/blob/cd8a4e6771c65915f084aef2d61a282c09886acb/evaluation/get_gt_kpts.py#L51
https://github.com/neuroethology/BKinD-3D/blob/cd8a4e6771c65915f084aef2d61a282c09886acb/evaluation/get_model_kpts.py#L73
https://github.com/neuroethology/BKinD-3D/blob/cd8a4e6771c65915f084aef2d61a282c09886acb/utils/misc.py#L36

=====================================
https://github.com/tinyvision/SOLIDER
=====================================

Found 2 times
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
https://github.com/tinyvision/SOLIDER/blob/b8779cc5cfaa7d44b277e8305bc42bce377fe8c0/main_dino.py#L162
https://github.com/tinyvision/SOLIDER/blob/b8779cc5cfaa7d44b277e8305bc42bce377fe8c0/main_solider.py#L170

==================================================
https://github.com/illhyhl1111/LearningBySketching
==================================================

Found 9 times
DataLoader(train_set_, shuffle=False, pin_memory=True, 
                                        batch_size=args.eval_batch_size, drop_last=False, num_workers=8)
DataLoader(test_set_, shuffle=False, pin_memory=True,
                                       batch_size=args.eval_batch_size, drop_last=False, num_workers=8)
DataLoader(self.train_set, shuffle=True, pin_memory=False, batch_size=args.eval_batch_size, drop_last=True)
DataLoader(self.test_set, shuffle=False, pin_memory=False, batch_size=args.eval_batch_size, drop_last=True)
DataLoader(dataset, batch_size=args.batch_size, shuffle=False)
DataLoader(train_set, shuffle=True, num_workers=16, pin_memory=True, batch_size=args.batch)
DataLoader(val_set, shuffle=True, num_workers=8, pin_memory=True, batch_size=args.batch)
DataLoader(eval_train_set, shuffle=False, num_workers=8, pin_memory=True, batch_size=256)
DataLoader(eval_test_set, shuffle=False, num_workers=8, pin_memory=True, batch_size=256)
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/evaluate.py#L93
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/evaluate.py#L95
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/evaluate.py#L101
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/evaluate.py#L102
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/generate_data.py#L380
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/main.py#L260
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/main.py#L261
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/main.py#L262
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/main.py#L263

=============================================
https://github.com/tractableai/perceptual-mae
=============================================

Found 4 times
torch.utils.data.DataLoader(train_dataset, 
                                           batch_size=int(self.config.training.batch_size), 
                                           shuffle=True, 
                                           num_workers=int(self.config.training.num_workers),
                                           pin_memory=True, 
                                           drop_last=True)
torch.utils.data.DataLoader(val_dataset, 
                                           batch_size=int(self.config.training.batch_size), 
                                           shuffle= False, 
                                           num_workers=int(self.config.training.num_workers),
                                           pin_memory=True, 
                                           drop_last=True)
torch.utils.data.DataLoader(test_dataset, 
                                           batch_size=int(self.config.training.batch_size), 
                                           shuffle= False, 
                                           num_workers=int(self.config.training.num_workers),
                                           pin_memory=True, 
                                           drop_last=True)
torch.utils.data.DataLoader(imgs, batch_size=batch_size)
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/datasets/base_dataset_builder.py#L80
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/datasets/base_dataset_builder.py#L90
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/datasets/base_dataset_builder.py#L100
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/testers/image_reconstruction_metrics.py#L41

=================================
https://github.com/Sense-X/MixMIM
=================================

Found 3 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        persistent_workers=False, # turn on when memory is sufficient
    )
https://github.com/Sense-X/MixMIM/blob/2b2f5a9a8c0fa18b8e261d0bc21301300589fb21/main_finetune.py#L203
https://github.com/Sense-X/MixMIM/blob/2b2f5a9a8c0fa18b8e261d0bc21301300589fb21/main_finetune.py#L211
https://github.com/Sense-X/MixMIM/blob/2b2f5a9a8c0fa18b8e261d0bc21301300589fb21/main_pretrain.py#L156

================================
https://github.com/valeoai/FOUND
================================

Found 2 times
torch.utils.data.DataLoader(dataset, 
                                            batch_size=config.training["batch_size"], 
                                            shuffle=True, 
                                            num_workers=2
                                            )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=2
    )
https://github.com/valeoai/FOUND/blob/1ad22bacf1a6854faff1b5d4be300d54cad6f277/main_found_train.py#L73
https://github.com/valeoai/FOUND/blob/1ad22bacf1a6854faff1b5d4be300d54cad6f277/evaluation/saliency.py#L157

==============================
https://github.com/WYC-321/MCF
==============================

Found 1 times
DataLoader(db_train, batch_sampler=batch_sampler, num_workers=4, pin_memory=True,
                             worker_init_fn=worker_init_fn)
https://github.com/WYC-321/MCF/blob/ad20659b9842dbc8fbcaca307ee7d7fec34938f6/code/train_MCF.py#L130

=====================================
https://github.com/ManiadisG/DivClust
=====================================

Found 2 times
DataLoader(dataset_train, num_workers=args.num_workers,pin_memory=True, batch_size=args.batch_size, shuffle=True, drop_last=True)
DataLoader(dataset_val, num_workers=args.num_workers,pin_memory=True, batch_size=args.batch_size, shuffle=False, drop_last=False)
https://github.com/ManiadisG/DivClust/blob/56d241f3e942f16c58eb531a19dbc5bf7c79220b/main.py#L23
https://github.com/ManiadisG/DivClust/blob/56d241f3e942f16c58eb531a19dbc5bf7c79220b/main.py#L24

=======================================================
https://github.com/SwinTransformer/MIM-Depth-Estimation
=======================================================

Found 3 times
DataLoader(test_dataset, batch_size=1, shuffle=False,
                             pin_memory=True)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size,
                                               shuffle=True, num_workers=args.workers, 
                                               pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(val_dataset, batch_size=1, shuffle=False,
                                             pin_memory=True)
https://github.com/SwinTransformer/MIM-Depth-Estimation/blob/59ba08d66033b9e3469f67e8c5c6f2c325398dce/test.py#L66
https://github.com/SwinTransformer/MIM-Depth-Estimation/blob/59ba08d66033b9e3469f67e8c5c6f2c325398dce/train.py#L109
https://github.com/SwinTransformer/MIM-Depth-Estimation/blob/59ba08d66033b9e3469f67e8c5c6f2c325398dce/train.py#L112

===========================================
https://github.com/sungnyun/openssl-simcore
===========================================

Found 37 times
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=True,
            num_workers=args.num_workers, pin_memory=True, drop_last=drop_last)
torch.utils.data.DataLoader(
            train_dataset1, batch_size=args.batch_size, shuffle=True,
            num_workers=args.num_workers, pin_memory=True, drop_last=drop_last)
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=True,
            num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=True,
            num_workers=8, pin_memory=True)
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=8, pin_memory=True)
DataLoader(DatasetSplit(self.dataset, unlabel_idxs), shuffle=False)
DataLoader(DatasetSplit(self.dataset, data_idxs), shuffle=False)
DataLoader(DatasetSplit(self.dataset, data_idxs), shuffle=False)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, collate_fn=collate_fn, num_workers=8, **kwargs)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, collate_fn=collate_fn, num_workers=8, **kwargs)
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=True,
            num_workers=args.num_workers, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
            dataset1, batch_size=args.batch_size, shuffle=True,
            num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
            dataset2, batch_size=args.batch_size, shuffle=True,
            num_workers=args.num_workers, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(train_labeled_dataset, batch_size=args.batch_size, shuffle=True,
                                                            num_workers=8, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(train_labeled_dataset, batch_size=args.teacher_batch_size, shuffle=True,
                                                            num_workers=8, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
                train_labeled_dataset, batch_size=args.batch_size, shuffle=True,
                num_workers=4, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
            train_unlabeled_dataset, batch_size=int(args.batch_size*args.mu), shuffle=True,
            num_workers=4, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=4,
        drop_last=True,
        shuffle=False)
torch.utils.data.DataLoader(
                            unlabeled_dataset, batch_size=int(args.batch_size*args.mu), sampler=unlabeled_sampler,
                            num_workers=4, pin_memory=True, drop_last=True)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, **kwargs)
DataLoader(val_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, **kwargs)
DataLoader(val_set, batch_size=args.batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(
            train_labeled_dataset, batch_size=args.batch_size, shuffle=True,
            num_workers=4, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
            train_unlabeled_dataset, batch_size=int(args.batch_size*args.mu), shuffle=True,
            num_workers=4, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            merge_dataset, batch_size=args.batch_size, shuffle=True,
            num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
                labeled_dataset, batch_size=args.batch_size, shuffle=True,
                num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
                unlabeled_dataset, batch_size=args.batch_size, shuffle=True,
                num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
            IndexDataset(merge_dataset), batch_size=args.batch_size, shuffle=False,
            num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
                train_dataset, batch_size=args.batch_size, shuffle=False,
                num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
                val_dataset, batch_size=args.batch_size, shuffle=False,
                num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(sample_dataset1, batch_size=args.batch_size, shuffle=False, num_workers=1)
torch.utils.data.DataLoader(sample_dataset2, batch_size=args.batch_size, shuffle=False, num_workers=8)
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/train_selfsup.py#L284
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/train_selfsup.py#L305
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/train_sup.py#L204
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/train_sup.py#L207
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/active/train.py#L167
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/active/train.py#L170
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/active/methods/strategy.py#L37
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/active/methods/strategy.py#L50
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/active/methods/strategy.py#L69
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/detection/dataloaders/__init__.py#L29
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/detection/dataloaders/__init__.py#L41
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/mining/train.py#L176
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/mining/train.py#L184
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/mining/train.py#L187
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/opensemi/train.py#L216
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/opensemi/train.py#L218
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/opensemi/train.py#L221
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/opensemi/train.py#L225
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/opensemi/train.py#L228
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/opensemi/train.py#L419
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/opensemi/train.py#L478
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/segmentation/dataloaders/__init__.py#L14
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/segmentation/dataloaders/__init__.py#L15
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/segmentation/dataloaders/__init__.py#L27
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/segmentation/dataloaders/__init__.py#L28
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/semisup/train.py#L230
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/semisup/train.py#L233
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/semisup/train.py#L236
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/weblysup/train.py#L165
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/weblysup/train.py#L168
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/weblysup/train.py#L335
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/weblysup/train.py#L338
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/downstream/weblysup/train.py#L454
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/util/knn_evaluation.py#L34
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/util/knn_evaluation.py#L37
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/util/sampling.py#L77
https://github.com/sungnyun/openssl-simcore/blob/97b4c9e6492a24d833d6391f203dad1793a08aa6/util/sampling.py#L78

=========================================
https://github.com/xxLifeLover/MetaViewer
=========================================

Found 1 times
torch.utils.data.DataLoader(dataset_train, shuffle=True,
                                                    batch_size=args.batch_size, num_workers=args.num_workers,
                                                    pin_memory=args.pin_mem, drop_last=True)
https://github.com/xxLifeLover/MetaViewer/blob/7205a35113395c199557c6508b1352ff396ba79f/main.py#L76

=========================================
https://github.com/facebookresearch/ijepa
=========================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        collate_fn=collator,
        sampler=dist_sampler,
        batch_size=batch_size,
        drop_last=drop_last,
        pin_memory=pin_mem,
        num_workers=num_workers,
        persistent_workers=False)
https://github.com/facebookresearch/ijepa/blob/52c1ae95d05f743e000e8f10a1f3a79b10cff048/src/datasets/imagenet1k.py#L52

==========================================================
https://github.com/YannickStruempler/inr_based_compression
==========================================================

Found 20 times
DataLoader(dataset, shuffle=True, batch_size=1, pin_memory=True,
                                     num_workers=0)
DataLoader(AimetDataset(dataset), shuffle=False, batch_size=1, pin_memory=True,
                                           num_workers=0)
DataLoader(coord_dataset, shuffle=True, pin_memory=True,
                                num_workers=0)
DataLoader(coord_dataset, shuffle=True, batch_size=FLAGS.maml_batch_size, pin_memory=True,
                                num_workers=0)
DataLoader(coord_dataset, shuffle=True, batch_size=1, pin_memory=True,
                                    num_workers=0)
DataLoader(coord_dataset, shuffle=True, batch_size=FLAGS.maml_batch_size, pin_memory=True,
                            num_workers=0)
DataLoader(val_coord_dataset, shuffle=True, batch_size=FLAGS.maml_batch_size, pin_memory=True,
                                num_workers=0)
torch.utils.data.DataLoader(datasets.FakeData(size=dataset_size, image_size=image_size,
                                                                num_classes=10, transform=transform,
                                                                target_transform=None),
                                              batch_size=batch_size, shuffle=False)
torch_data.DataLoader(train_set, batch_size=self.batch_size, shuffle=False,
                                                       num_workers=self.num_workers, pin_memory=True)
torch_data.DataLoader(val_set, batch_size=self.batch_size, shuffle=False,
                                                     num_workers=self.num_workers, pin_memory=True)
torch.utils.data.DataLoader(datasets.MNIST('../data', train=True, download=mnist_download,
                                                                       transform=transforms.Compose([transforms.ToTensor(),
                                                                                                     transforms.Normalize((0.5307,), (0.9081,))])),
                                                        batch_size=self._train_batch_size, shuffle=self._shuffle, **self._kwargs)
torch.utils.data.DataLoader(datasets.MNIST('../data', train=False,
                                                                      transform=transforms.Compose([transforms.ToTensor(),
                                                                                                    transforms.Normalize((0.5307,), (0.9081,))])),
                                                       batch_size=self._test_batch_size, shuffle=self._shuffle, **self._kwargs)
DataLoader(self.train_dataset, batch_size=self.args.batch_size, 
                                            shuffle=True, pin_memory=True, num_workers=0)
DataLoader(self.train_dataset, batch_size=self.args.batch_size, 
                                                    shuffle=True, pin_memory=True, num_workers=0)
DataLoader(self.val_volumetric_dataset,
                                          batch_size=self.num_samples,
                                          shuffle=False, pin_memory=True, num_workers=4)
DataLoader(self.val_dataset,
                                          batch_size=self.num_samples,
                                          shuffle=False, pin_memory=True, num_workers=4)
DataLoader(AimetDatasetSDF(dataset), shuffle=False, batch_size=len(dataset),
                                           pin_memory=True,
                                           num_workers=8)
DataLoader(mesh_dataset, shuffle=True, batch_size=FLAGS.batch_size, pin_memory=True, num_workers=8)
DataLoader(mesh_dataset, shuffle=True, batch_size=TRAINING_FLAGS['batch_size'],
                                    pin_memory=True,
                                    num_workers=8)
DataLoader(batch[0], batch_size=5)
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/image_compression/Quantizer.py#L252
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/image_compression/Quantizer.py#L258
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/image_compression/overfitINR.py#L113
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/image_compression/overfitMetaSiren.py#L185
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/image_compression/quantize_and_test.py#L104
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/image_compression/trainMetaSiren.py#L103
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/image_compression/trainMetaSiren.py#L105
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/lib/aimet_torch/utils.py#L324
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/lib/aimet_torch/examples/imagenet_dataloader.py#L77
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/lib/aimet_torch/examples/imagenet_dataloader.py#L88
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/lib/aimet_torch/examples/mnist_torch_model.py#L97
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/lib/aimet_torch/examples/mnist_torch_model.py#L103
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/lib/nglod/lib/trainer.py#L157
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/lib/nglod/lib/trainer.py#L243
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/lib/nglod/lib/validator/GeometricValidator.py#L43
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/lib/nglod/lib/validator/PointCloudValidator.py#L23
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/shape_compression/Quantizer.py#L253
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/shape_compression/overfitINR3D.py#L101
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/shape_compression/quantize_and_test3D.py#L132
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/torchmeta/tests/test_dataloaders.py#L31

==============================
https://github.com/ICTMCG/POSE
==============================

Found 10 times
DataLoader(
        dataset=close_set,
        num_workers=config.num_workers,
        batch_size=config.batch_size,
        pin_memory=True,
        shuffle=True,
        drop_last=False,
    )
DataLoader(
        dataset=out_set,
        num_workers=config.num_workers,
        batch_size=config.batch_size,
        pin_memory=True,
        shuffle=True,
        drop_last=False,
    )
DataLoader(
            dataset=train_set,
            num_workers=config.num_workers,
            batch_size=config.batch_size,
            pin_memory=True,
            shuffle=True,
            drop_last=False,
        )
DataLoader(
            dataset=val_set,
            num_workers=config.num_workers,
            batch_size=config.batch_size,
            pin_memory=True,
            shuffle=True,
            drop_last=False,
        )
DataLoader(
            dataset=tsne_set,
            num_workers=config.num_workers,
            batch_size=config.batch_size,
            pin_memory=True,
            shuffle=True,
            drop_last=True
        )
DataLoader(
            dataset=test_set,
            num_workers=config.num_workers,
            batch_size=config.batch_size,
            pin_memory=True,
            shuffle=True,
            drop_last=False,
        )
DataLoader(
            dataset=out_set,
            num_workers=config.num_workers,
            batch_size=config.batch_size,
            pin_memory=True,
            shuffle=True,
            drop_last=False
        )
DataLoader(
            dataset=out_set1,
            num_workers=config.num_workers,
            batch_size=config.batch_size,
            pin_memory=True,
            shuffle=True,
            drop_last=False
        )
DataLoader(
            dataset=out_set2,
            num_workers=config.num_workers,
            batch_size=config.batch_size,
            pin_memory=True,
            shuffle=True,
            drop_last=False
        )
DataLoader(
            dataset=out_set3,
            num_workers=config.num_workers,
            batch_size=config.batch_size,
            pin_memory=True,
            shuffle=True,
            drop_last=False
        )
https://github.com/ICTMCG/POSE/blob/185b25d9160e09b57c62cea23f08b2b126b62798/test.py#L88
https://github.com/ICTMCG/POSE/blob/185b25d9160e09b57c62cea23f08b2b126b62798/test.py#L97
https://github.com/ICTMCG/POSE/blob/185b25d9160e09b57c62cea23f08b2b126b62798/data/dataset.py#L73
https://github.com/ICTMCG/POSE/blob/185b25d9160e09b57c62cea23f08b2b126b62798/data/dataset.py#L83
https://github.com/ICTMCG/POSE/blob/185b25d9160e09b57c62cea23f08b2b126b62798/data/dataset.py#L93
https://github.com/ICTMCG/POSE/blob/185b25d9160e09b57c62cea23f08b2b126b62798/data/dataset.py#L103
https://github.com/ICTMCG/POSE/blob/185b25d9160e09b57c62cea23f08b2b126b62798/data/dataset.py#L113
https://github.com/ICTMCG/POSE/blob/185b25d9160e09b57c62cea23f08b2b126b62798/data/dataset.py#L124
https://github.com/ICTMCG/POSE/blob/185b25d9160e09b57c62cea23f08b2b126b62798/data/dataset.py#L134
https://github.com/ICTMCG/POSE/blob/185b25d9160e09b57c62cea23f08b2b126b62798/data/dataset.py#L144

==================================================
https://github.com/FLAIR-THU/PairedLogitsInversion
==================================================

Found 34 times
torch.utils.data.DataLoader(
            public_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
            generator=g,
        )
torch.utils.data.DataLoader(
            public_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
        )
torch.utils.data.DataLoader(
                private_dataset_list[i],
                batch_size=batch_size,
                shuffle=True,
                num_workers=num_workers,
                worker_init_fn=worker_init_fn,
                generator=g,
            )
torch.utils.data.DataLoader(
                private_dataset_list[i],
                batch_size=batch_size,
                shuffle=True,
                num_workers=num_workers,
                worker_init_fn=worker_init_fn,
            )
torch.utils.data.DataLoader(
            public_dataset_train,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
            generator=g,
        )
torch.utils.data.DataLoader(
            public_dataset_train,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
        )
torch.utils.data.DataLoader(
                private_dataset_train_list[i],
                batch_size=batch_size,
                shuffle=True,
                num_workers=num_workers,
                worker_init_fn=worker_init_fn,
                generator=g,
            )
torch.utils.data.DataLoader(
                private_dataset_train_list[i],
                batch_size=batch_size,
                shuffle=True,
                num_workers=num_workers,
                worker_init_fn=worker_init_fn,
            )
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
            generator=g,
        )
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
        )
torch.utils.data.DataLoader(
            public_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
            generator=g,
        )
torch.utils.data.DataLoader(
            public_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
        )
torch.utils.data.DataLoader(
                private_dataset_list[i],
                batch_size=batch_size,
                shuffle=True,
                num_workers=num_workers,
                worker_init_fn=worker_init_fn,
                generator=g,
            )
torch.utils.data.DataLoader(
                private_dataset_list[i],
                batch_size=batch_size,
                shuffle=True,
                num_workers=num_workers,
                worker_init_fn=worker_init_fn,
            )
torch.utils.data.DataLoader(
            public_dataset_train,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
            generator=g,
        )
torch.utils.data.DataLoader(
            public_dataset_train,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
        )
torch.utils.data.DataLoader(
                private_dataset_train_list[i],
                batch_size=batch_size,
                shuffle=True,
                num_workers=num_workers,
                worker_init_fn=worker_init_fn,
                generator=g,
            )
torch.utils.data.DataLoader(
                private_dataset_train_list[i],
                batch_size=batch_size,
                shuffle=True,
                num_workers=num_workers,
                worker_init_fn=worker_init_fn,
            )
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
            generator=g,
        )
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
        )
torch.utils.data.DataLoader(
            public_inv_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
            generator=g,
        )
torch.utils.data.DataLoader(
            public_inv_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
        )
torch.utils.data.DataLoader(
            public_inv_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
            generator=g,
        )
torch.utils.data.DataLoader(
            public_inv_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
        )
torch.utils.data.DataLoader(
            public_inv_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
            generator=g,
        )
torch.utils.data.DataLoader(
            public_inv_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            worker_init_fn=worker_init_fn,
        )
torch.utils.data.DataLoader(
        inv_trainset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers,
        worker_init_fn=worker_init_fn,
        generator=g,
    )
torch.utils.data.DataLoader(
        torch.utils.data.TensorDataset(public_x_tensor, y_pred_local_tensor),
        batch_size=inv_batch_size,
        shuffle=True,
        num_workers=num_workers,
        worker_init_fn=worker_init_fn,
        generator=g,
    )
torch.utils.data.DataLoader(
        inv_trainset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers,
        worker_init_fn=worker_init_fn,
        generator=g,
    )
torch.utils.data.DataLoader(
        torch.utils.data.TensorDataset(
            public_x_tensor, y_pred_server_tensor, y_pred_local_tensor, y_label_tensor
        ),
        batch_size=inv_batch_size,
        shuffle=False,
        num_workers=num_workers,
        worker_init_fn=worker_init_fn,
        generator=g,
    )
torch.utils.data.DataLoader(
        inv_trainset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers,
        worker_init_fn=worker_init_fn,
        generator=g,
    )
torch.utils.data.DataLoader(
        torch.utils.data.TensorDataset(
            public_x_tensor, y_pred_server_tensor, y_pred_local_tensor, y_label_tensor
        ),
        batch_size=inv_batch_size,
        shuffle=True,
        num_workers=num_workers,
        worker_init_fn=worker_init_fn,
        generator=g,
    )
torch.utils.data.DataLoader(
        test_set, batch_size=test_batch_size, shuffle=True, num_workers=0
    )
torch.utils.data.DataLoader(
            temp_trainset, batch_size=batch_size, shuffle=True, num_workers=0
        )
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L184
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L193
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L204
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L216
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L414
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L423
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L434
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L446
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L457
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L466
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L636
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L645
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L656
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L668
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L963
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L972
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L983
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L995
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L1006
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/dataloader.py#L1015
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/inv_dataloader.py#L210
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/inv_dataloader.py#L219
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/inv_dataloader.py#L418
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/inv_dataloader.py#L427
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/inv_dataloader.py#L597
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/inv_dataloader.py#L606
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/tbi_setup.py#L99
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/tbi_setup.py#L125
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/tbi_setup.py#L170
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/tbi_setup.py#L204
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/tbi_setup.py#L251
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utils/tbi_setup.py#L282
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utilsdata/dataloader.py#L44
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/utilsdata/dataloader.py#L60

====================================
https://github.com/JaNg2333/DartBlur
====================================

Found 1 times
DataLoader(training_dataset, shuffle=True, batch_size=self.batch_size, num_workers=self.num_workers, pin_memory=True,
                                    drop_last=True, collate_fn=detection_collate)
https://github.com/JaNg2333/DartBlur/blob/28cdf7627447231a5c14e102f894b948f69bec2b/trainer.py#L389

============================================
https://github.com/ZhendongWang6/AltFreezing
============================================

Found 1 times
DataLoader(feeds, batch_size=len(feeds), shuffle=False)
https://github.com/ZhendongWang6/AltFreezing/blob/ff90ceb606f84981ad8567ae381d2caf2c1982c9/test_tools/ct/face_alignment/predictor.py#L119

=======================================
https://github.com/YMJS-Irfan/DP-FedSAM
=======================================

Found 19 times
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=True, drop_last=False)
DataLoader(DatasetSplit(dataset, idxs), batch_size=batch_size, shuffle=True)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=True, drop_last=False)
torch.utils.data.DataLoader(
        train_data, batch_size=args.batch_size, shuffle=True, pin_memory=True, num_workers=2)
torch.utils.data.DataLoader(
        valid_data, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=2)
torch.utils.data.DataLoader(
        train_data, batch_size=args.batch_size * len(gpus),
        sampler=torch.utils.data.sampler.SubsetRandomSampler(indices[:split]),
        pin_memory=True, num_workers=2)
torch.utils.data.DataLoader(
        train_data, batch_size=args.batch_size * len(gpus),
        sampler=torch.utils.data.sampler.SubsetRandomSampler(indices[split:num_train]),
        pin_memory=True, num_workers=2)
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/cifar10/data_loader.py#L207
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/cifar10/data_loader.py#L208
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/cifar10/data_val_loader.py#L252
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/cifar10/data_val_loader.py#L253
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/cifar100/data_loader.py#L213
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/cifar100/data_loader.py#L214
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/cifar100/data_val_loader.py#L248
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/cifar100/data_val_loader.py#L249
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/emnist/data_loader.py#L28
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/emnist/data_val_loader.py#L252
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/emnist/data_val_loader.py#L253
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/tiny_imagenet/data_loader.py#L253
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/tiny_imagenet/data_loader.py#L254
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/tiny_imagenet/data_val_loader.py#L252
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/data_preprocessing/tiny_imagenet/data_val_loader.py#L253
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/model/cv/darts/train.py#L113
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/model/cv/darts/train.py#L116
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/model/cv/darts/train_search.py#L147
https://github.com/YMJS-Irfan/DP-FedSAM/blob/016bd7fc2ac22927ce760acb01be40bb56e739a3/fedml_api/model/cv/darts/train_search.py#L152

===================================
https://github.com/pipilurj/DynaFed
===================================

Found 9 times
torch.utils.data.DataLoader(subset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
torch.utils.data.DataLoader(test_data, batch_size=256, num_workers=num_workers)
torch.utils.data.DataLoader(subset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
torch.utils.data.DataLoader(test_data, batch_size=256, num_workers=num_workers)
torch.utils.data.DataLoader(dst_train, batch_size=256, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(distilled_dataset, batch_size=256, shuffle=True)
torch.utils.data.DataLoader(distilled_dataset, batch_size=32, shuffle=True, num_workers=4)
torch.utils.data.DataLoader(distilled_dataset, batch_size=32, shuffle=True, num_workers=4)
torch.utils.data.DataLoader(distilled_dataset, batch_size=256, shuffle=True, num_workers=4)
https://github.com/pipilurj/DynaFed/blob/08dd56b4621800f520e88f1c1540d26f6767c9af/data.py#L135
https://github.com/pipilurj/DynaFed/blob/08dd56b4621800f520e88f1c1540d26f6767c9af/data.py#L136
https://github.com/pipilurj/DynaFed/blob/08dd56b4621800f520e88f1c1540d26f6767c9af/data.py#L161
https://github.com/pipilurj/DynaFed/blob/08dd56b4621800f520e88f1c1540d26f6767c9af/data.py#L162
https://github.com/pipilurj/DynaFed/blob/08dd56b4621800f520e88f1c1540d26f6767c9af/image_synthesizer.py#L91
https://github.com/pipilurj/DynaFed/blob/08dd56b4621800f520e88f1c1540d26f6767c9af/server.py#L104
https://github.com/pipilurj/DynaFed/blob/08dd56b4621800f520e88f1c1540d26f6767c9af/utils.py#L457
https://github.com/pipilurj/DynaFed/blob/08dd56b4621800f520e88f1c1540d26f6767c9af/utils.py#L496
https://github.com/pipilurj/DynaFed/blob/08dd56b4621800f520e88f1c1540d26f6767c9af/utils.py#L536

=============================================================
https://github.com/sutd-visual-computing-group/Re-thinking_MI
=============================================================

Found 7 times
DataLoader(trainset, batch_size=1)
DataLoader(testset, batch_size=1)
torch.utils.data.DataLoader(dataset, batch_size=64, sampler=train_sampler)
torch.utils.data.DataLoader(dataset, sampler=valid_sampler)
torch.utils.data.DataLoader(dataset, sampler=test_sampler)
torch.utils.data.DataLoader(data_set,
                                batch_size=batch_size,
                                shuffle=shuffle_flag,
                                drop_last=True,
                                num_workers=0,
                                pin_memory=True)
torch.utils.data.DataLoader(data_set,
                                batch_size=batch_size,
                                shuffle=shuffle_flag,
                                drop_last=True,
                                num_workers=2,
                                pin_memory=True)
https://github.com/sutd-visual-computing-group/Re-thinking_MI/blob/ed4b6b8900e4d7fed8f70d7e6a444893963d920e/dataloader.py#L190
https://github.com/sutd-visual-computing-group/Re-thinking_MI/blob/ed4b6b8900e4d7fed8f70d7e6a444893963d920e/dataloader.py#L191
https://github.com/sutd-visual-computing-group/Re-thinking_MI/blob/ed4b6b8900e4d7fed8f70d7e6a444893963d920e/dataloader.py#L259
https://github.com/sutd-visual-computing-group/Re-thinking_MI/blob/ed4b6b8900e4d7fed8f70d7e6a444893963d920e/dataloader.py#L261
https://github.com/sutd-visual-computing-group/Re-thinking_MI/blob/ed4b6b8900e4d7fed8f70d7e6a444893963d920e/dataloader.py#L263
https://github.com/sutd-visual-computing-group/Re-thinking_MI/blob/ed4b6b8900e4d7fed8f70d7e6a444893963d920e/utils.py#L47
https://github.com/sutd-visual-computing-group/Re-thinking_MI/blob/ed4b6b8900e4d7fed8f70d7e6a444893963d920e/utils.py#L54

==================================
https://github.com/mxzheng/TrojViT
==================================

Found 4 times
torch.utils.data.DataLoader(torch.utils.data.Subset(val_dataset, np.arange(384)), batch_size=args.batch_size, shuffle=False,
                                             num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(val_dataset, batch_size=16,shuffle =True,
                                             num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size, shuffle=False,
                                             num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(torch.utils.data.Subset(val_dataset, np.arange(1024)) , batch_size=args.batch_size, shuffle=True,
                                             num_workers=args.workers, pin_memory=True)
https://github.com/mxzheng/TrojViT/blob/3e9fc1d5b4f76f0fc4d85e2e667f9ff8f393f4ac/utils.py#L38
https://github.com/mxzheng/TrojViT/blob/3e9fc1d5b4f76f0fc4d85e2e667f9ff8f393f4ac/utils.py#L52
https://github.com/mxzheng/TrojViT/blob/3e9fc1d5b4f76f0fc4d85e2e667f9ff8f393f4ac/utils.py#L66
https://github.com/mxzheng/TrojViT/blob/3e9fc1d5b4f76f0fc4d85e2e667f9ff8f393f4ac/utils.py#L82

==================================================
https://github.com/HungerPWAY/Fair-Scratch-Tickets
==================================================

Found 33 times
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs
        )
torch.utils.data.DataLoader(
            test_dataset, batch_size=args.batch_size, shuffle=False, **kwargs
        )
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs
        )
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size, shuffle=False, **kwargs
        )
torch.utils.data.DataLoader(
            test_dataset, batch_size=args.batch_size, shuffle=False, **kwargs
        )
DataLoader(dataset, batch_size=batch_size, shuffle=shuffle, **kwargs)
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs
        )
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size, shuffle=False, **kwargs
        )
torch.utils.data.DataLoader(
            test_dataset, batch_size=args.batch_size, shuffle=False, **kwargs
        )
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs
        )
torch.utils.data.DataLoader(
            test_dataset, batch_size=args.batch_size, shuffle=False, **kwargs
        )
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs
        )
torch.utils.data.DataLoader(
            test_dataset, batch_size=args.batch_size, shuffle=False, **kwargs
        )
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs
        )
torch.utils.data.DataLoader(
            datasets.ImageFolder(
                valdir,
                transforms.Compose(
                    [
                        transforms.Resize(256),
                        transforms.CenterCrop(224),
                        transforms.ToTensor(),
                        normalize,
                    ]
                ),
            ),
            batch_size=args.batch_size,
            shuffle=False,
            **kwargs
        )
torch.utils.data.DataLoader(
            datasets.MNIST(
                data_root,
                train=True,
                download=True,
                transform=transforms.Compose(
                    [transforms.ToTensor(), transforms.Normalize((0.1307,), (0.3081,))]
                ),
            ),
            batch_size=args.batch_size,
            shuffle=True,
            **kwargs
        )
torch.utils.data.DataLoader(
            datasets.MNIST(
                data_root,
                train=False,
                transform=transforms.Compose(
                    [transforms.ToTensor(), transforms.Normalize((0.1307,), (0.3081,))]
                ),
            ),
            batch_size=args.batch_size,
            shuffle=True,
            **kwargs
        )
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs
        )
torch.utils.data.DataLoader(
            datasets.ImageFolder(
                valdir,
                transforms.Compose(
                    [
                        transforms.Resize(256),
                        transforms.CenterCrop(224),
                        transforms.ToTensor(),
                        normalize,
                    ]
                ),
            ),
            batch_size=args.batch_size,
            shuffle=False,
            **kwargs
        )
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(self.train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(self.val_dataset, batch_size=args.batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(self.test_dataset, batch_size=args.batch_size, shuffle=False, **kwargs)
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/LFW.py#L196
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/LFW.py#L200
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/LFW.py#L204
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/bigcifar.py#L30
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/bigcifar.py#L45
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/celeba.py#L81
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/celeba.py#L91
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/celeba.py#L101
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/celeba_adv.py#L42
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/celeba_blond_hair.py#L81
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/celeba_blond_hair.py#L91
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/celeba_blond_hair.py#L101
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/cifar.py#L38
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/cifar.py#L48
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/cifar10s.py#L307
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/cifar10s.py#L317
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/imagenet.py#L41
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/imagenet.py#L45
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/mnist.py#L16
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/mnist.py#L29
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/tinyimagenet.py#L41
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/tinyimagenet.py#L45
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/utkface.py#L175
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/utkface.py#L177
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/utkface2.py#L189
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/utkface2.py#L192
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/utkface2.py#L195
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/utkface2_adv.py#L189
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/utkface2_adv.py#L192
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/utkface2_adv.py#L195
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/utkface_x.py#L178
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/utkface_x.py#L180
https://github.com/HungerPWAY/Fair-Scratch-Tickets/blob/96dc6e17ba58121a1bda31ee85cd8670535bfcb4/data/utkface_x.py#L182

=============================================
https://github.com/fahadshamshad/Clip2Protect
=============================================

Found 2 times
DataLoader(self.train_dataset,
										   batch_size=self.opts.batch_size,
										   shuffle=True,
										   num_workers=int(self.opts.workers),
										   drop_last=True)
DataLoader(self.test_dataset,
										  batch_size=self.opts.test_batch_size,
										  shuffle=False,
										  num_workers=int(self.opts.test_workers),
										  drop_last=True)
https://github.com/fahadshamshad/Clip2Protect/blob/8596a82cd04a1c85ecc6a805daa2d2710d85de96/models/StyleCLIP/mapper/training/coach.py#L43
https://github.com/fahadshamshad/Clip2Protect/blob/8596a82cd04a1c85ecc6a805daa2d2710d85de96/models/StyleCLIP/mapper/training/coach.py#L48

======================================================
https://github.com/IST-DASLab/pruned-vision-model-bias
======================================================

Found 9 times
DataLoader(self.data_train, batch_size=self.batch_size, shuffle=True,
                                       num_workers=self.num_workers)
DataLoader(self.data_val, batch_size=self.batch_size, shuffle=False,
                                      num_workers=self.num_workers)
DataLoader(self.data_test, batch_size=self.batch_size, shuffle=False,
                                      num_workers=self.num_workers)
DataLoader(get_datasets(*self.data)[0], batch_size=self.batch_size, shuffle=True)
torch.utils.data.DataLoader(dset, batch_size=1, num_workers=num_workers, 
                                                   sampler=SubsetRandomSampler(subset_inds))
torch.utils.data.DataLoader(dset, batch_size=batch_size, num_workers=num_workers,
                                                   sampler=SubsetRandomSampler(subset_inds))
torch.utils.data.DataLoader(dset, batch_size=batch_size, num_workers=num_workers,
                                                   sampler=SubsetRandomSampler(subset_inds))
torch.utils.data.DataLoader(dset, batch_size=batch_size, num_workers=num_workers,
                                                   sampler=SubsetRandomSampler(subset_inds))
torch.utils.data.DataLoader(dataset, batch_size=1000, shuffle=False, **kwargs)
https://github.com/IST-DASLab/pruned-vision-model-bias/blob/22ea40cd249b5ed8aa36dfe8e136e234728e7405/policies/manager.py#L184
https://github.com/IST-DASLab/pruned-vision-model-bias/blob/22ea40cd249b5ed8aa36dfe8e136e234728e7405/policies/manager.py#L186
https://github.com/IST-DASLab/pruned-vision-model-bias/blob/22ea40cd249b5ed8aa36dfe8e136e234728e7405/policies/manager.py#L188
https://github.com/IST-DASLab/pruned-vision-model-bias/blob/22ea40cd249b5ed8aa36dfe8e136e234728e7405/policies/manager.py#L327
https://github.com/IST-DASLab/pruned-vision-model-bias/blob/22ea40cd249b5ed8aa36dfe8e136e234728e7405/policies/pruners.py#L368
https://github.com/IST-DASLab/pruned-vision-model-bias/blob/22ea40cd249b5ed8aa36dfe8e136e234728e7405/policies/pruners.py#L409
https://github.com/IST-DASLab/pruned-vision-model-bias/blob/22ea40cd249b5ed8aa36dfe8e136e234728e7405/policies/pruners.py#L467
https://github.com/IST-DASLab/pruned-vision-model-bias/blob/22ea40cd249b5ed8aa36dfe8e136e234728e7405/policies/pruners.py#L586
https://github.com/IST-DASLab/pruned-vision-model-bias/blob/22ea40cd249b5ed8aa36dfe8e136e234728e7405/utils/misc.py#L159

==========================================
https://github.com/mqraitem/Bias-Mimicking
==========================================

Found 2 times
data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=True if sampler is None and split == 'train' else False,
        sampler=sampler,
        num_workers=num_workers,
        pin_memory=False, 
        drop_last=two_crop)
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=shuffle,
        sampler=sampler,
        num_workers=num_workers,
        pin_memory=False,
        drop_last=two_crop
    )
https://github.com/mqraitem/Bias-Mimicking/blob/df6f92a11a66348f441170feddaa6c9b16ff2258/debias/datasets/cifar10.py#L246
https://github.com/mqraitem/Bias-Mimicking/blob/df6f92a11a66348f441170feddaa6c9b16ff2258/debias/datasets/utk_face.py#L301

===========================================
https://github.com/tnurbek/capride-learning
===========================================

Found 12 times
torch.utils.data.DataLoader(subsets[i], batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=False,
        num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(subsets[i], batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=False,
        num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(elem, batch_size=batch_size, shuffle=shuffle, 
                        num_workers=num_workers, pin_memory=pin_memory)
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=False,
        num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(elem, batch_size=batch_size, shuffle=shuffle, 
                        num_workers=num_workers, pin_memory=pin_memory)
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=False,
        num_workers=num_workers, pin_memory=pin_memory,
    )
https://github.com/tnurbek/capride-learning/blob/6b43509c4326c6c7955fa34056e4d0c442039bf5/data_loader.py#L81
https://github.com/tnurbek/capride-learning/blob/6b43509c4326c6c7955fa34056e4d0c442039bf5/data_loader.py#L93
https://github.com/tnurbek/capride-learning/blob/6b43509c4326c6c7955fa34056e4d0c442039bf5/data_loader.py#L112
https://github.com/tnurbek/capride-learning/blob/6b43509c4326c6c7955fa34056e4d0c442039bf5/data_loader.py#L183
https://github.com/tnurbek/capride-learning/blob/6b43509c4326c6c7955fa34056e4d0c442039bf5/data_loader.py#L191
https://github.com/tnurbek/capride-learning/blob/6b43509c4326c6c7955fa34056e4d0c442039bf5/data_loader.py#L214
https://github.com/tnurbek/capride-learning/blob/6b43509c4326c6c7955fa34056e4d0c442039bf5/data_loader.py#L256
https://github.com/tnurbek/capride-learning/blob/6b43509c4326c6c7955fa34056e4d0c442039bf5/data_loader.py#L260
https://github.com/tnurbek/capride-learning/blob/6b43509c4326c6c7955fa34056e4d0c442039bf5/data_loader.py#L278
https://github.com/tnurbek/capride-learning/blob/6b43509c4326c6c7955fa34056e4d0c442039bf5/data_loader.py#L408
https://github.com/tnurbek/capride-learning/blob/6b43509c4326c6c7955fa34056e4d0c442039bf5/data_loader.py#L411
https://github.com/tnurbek/capride-learning/blob/6b43509c4326c6c7955fa34056e4d0c442039bf5/data_loader.py#L471

===================================
https://github.com/omegafragger/DDU
===================================

Found 19 times
torch.utils.data.DataLoader(val_dataset, batch_size=args.test_batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(test_dataset, batch_size=args.test_batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(
            active_learning_data.training_dataset, sampler=sampler, batch_size=args.train_batch_size, **kwargs,
        )
torch.utils.data.DataLoader(
            active_learning_data.training_dataset, shuffle=True, batch_size=args.train_batch_size, **kwargs,
        )
torch.utils.data.DataLoader(
            active_learning_data.pool_dataset, batch_size=args.scoring_batch_size, shuffle=False, **kwargs,
        )
torch.utils.data.DataLoader(train_subset, batch_size=batch_size, num_workers=0, shuffle=True)
torch.utils.data.DataLoader(valid_subset, batch_size=batch_size, num_workers=0, shuffle=False)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=train, num_workers=0)
torch.utils.data.DataLoader(
        train_subset, batch_size=batch_size, num_workers=num_workers, pin_memory=pin_memory, shuffle=True,
    )
torch.utils.data.DataLoader(
        valid_subset, batch_size=batch_size, num_workers=num_workers, pin_memory=pin_memory, shuffle=False,
    )
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(
        train_subset, batch_size=batch_size, num_workers=num_workers, pin_memory=pin_memory, shuffle=True,
    )
torch.utils.data.DataLoader(
        valid_subset, batch_size=batch_size, num_workers=num_workers, pin_memory=pin_memory, shuffle=False,
    )
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(
        train_subset, batch_size=batch_size, num_workers=num_workers, pin_memory=pin_memory, shuffle=True,
    )
torch.utils.data.DataLoader(
        valid_subset, batch_size=batch_size, num_workers=num_workers, pin_memory=pin_memory, shuffle=False,
    )
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers, pin_memory=pin_memory,
    )
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/active_learning_script.py#L116
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/active_learning_script.py#L117
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/active_learning_script.py#L146
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/active_learning_script.py#L150
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/active_learning_script.py#L155
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/dirty_mnist.py#L38
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/dirty_mnist.py#L40
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/dirty_mnist.py#L55
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/fashion_mnist.py#L21
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/ambiguous_mnist/ambiguous_mnist.py#L12
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/ood_detection/cifar10.py#L70
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/ood_detection/cifar10.py#L73
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/ood_detection/cifar10.py#L103
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/ood_detection/cifar100.py#L70
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/ood_detection/cifar100.py#L73
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/ood_detection/cifar100.py#L103
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/ood_detection/svhn.py#L56
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/ood_detection/svhn.py#L59
https://github.com/omegafragger/DDU/blob/f597744c65df4ff51615ace5e86e82ffefe1cd0f/data/ood_detection/svhn.py#L89

===============================================
https://github.com/yulongt23/Transfer-Inference
===============================================

Found 64 times
DataLoader(
            new_dataset, batch_size=256, shuffle=False, num_workers=1)
DataLoader(
            feature_dataset, batch_size=256, shuffle=False, num_workers=1)
DataLoader(
                self.train_dataset, batch_size=batch_size, shuffle=False,
                pin_memory=True, worker_init_fn=worker_init_fn, sampler=train_sampler)
DataLoader(
                self.val_dataset, batch_size=batch_size, shuffle=False,
                num_workers=8, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(
                self.train_dataset, batch_size=batch_size, shuffle=shuffle,
                num_workers=16, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(
                self.val_dataset, batch_size=batch_size, shuffle=False,
                num_workers=8, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(
                self.train_dataset, batch_size=batch_size, shuffle=False,
                pin_memory=True, worker_init_fn=worker_init_fn, sampler=train_sampler)
DataLoader(
                self.val_dataset, batch_size=batch_size, shuffle=False,
                num_workers=8, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(
                self.train_dataset, batch_size=batch_size, shuffle=shuffle,
                num_workers=16, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(
                self.val_dataset, batch_size=batch_size, shuffle=False,
                num_workers=8, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(
                self.trainset, batch_size=batch_size, shuffle=False, num_workers=4,
                pin_memory=True, worker_init_fn=worker_init_fn, sampler=train_sampler)
DataLoader(
                self.testset, batch_size=batch_size, shuffle=False, num_workers=2,
                pin_memory=True, sampler=test_sampler)
DataLoader(
                self.trainset, batch_size=batch_size, shuffle=shuffle,
                num_workers=4, worker_init_fn=worker_init_fn, drop_last=True)
DataLoader(
                self.testset, batch_size=batch_size, shuffle=False,
                num_workers=4, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.trainset,
                                     batch_size=batch_size, shuffle=shuffle,
                                     num_workers=2, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.testset,
                                batch_size=batch_size, shuffle=False,
                                num_workers=2, worker_init_fn=worker_init_fn)
DataLoader(
            sampleset, batch_size=batch_size, shuffle=False, num_workers=2)
DataLoader(self.trainset,
                                 batch_size=batch_size, shuffle=shuffle,
                                 num_workers=4, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.testset,
                                batch_size=2 * batch_size, shuffle=False,
                                num_workers=2, worker_init_fn=worker_init_fn)
DataLoader(
            trainset, batch_size=batch_size, shuffle=shuffle,
            num_workers=2, drop_last=False)
DataLoader(
                self.trainset, batch_size=batch_size, shuffle=False, num_workers=4,
                pin_memory=True, worker_init_fn=worker_init_fn, sampler=train_sampler)
DataLoader(
                self.testset, batch_size=batch_size, shuffle=False, num_workers=2,
                pin_memory=True, sampler=test_sampler)
DataLoader(
                self.trainset, batch_size=batch_size, shuffle=shuffle,
                num_workers=4, worker_init_fn=worker_init_fn, drop_last=True)
DataLoader(
                self.testset, batch_size=batch_size, shuffle=False,
                num_workers=4, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.trainset,
                                     batch_size=batch_size, shuffle=shuffle,
                                     num_workers=2, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.testset,
                                batch_size=batch_size, shuffle=False,
                                num_workers=2, worker_init_fn=worker_init_fn)
DataLoader(
            sampleset, batch_size=batch_size, shuffle=False, num_workers=2)
DataLoader(self.trainset,
                                 batch_size=batch_size, shuffle=shuffle,
                                 num_workers=4, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.testset,
                                batch_size=2 * batch_size, shuffle=False,
                                num_workers=2, worker_init_fn=worker_init_fn)
DataLoader(
            trainset, batch_size=batch_size, shuffle=shuffle,
            num_workers=2, drop_last=False)
DataLoader(
                self.trainset, batch_size=batch_size, shuffle=False, num_workers=4,
                pin_memory=True, worker_init_fn=worker_init_fn, sampler=train_sampler)
DataLoader(
                self.testset, batch_size=batch_size, shuffle=False, num_workers=2,
                pin_memory=True, sampler=test_sampler)
DataLoader(
                self.trainset, batch_size=batch_size, shuffle=shuffle,
                num_workers=4, worker_init_fn=worker_init_fn, drop_last=True)
DataLoader(
                self.testset, batch_size=batch_size, shuffle=False,
                num_workers=4, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.trainset,
                                     batch_size=batch_size, shuffle=shuffle,
                                     num_workers=2, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.testset,
                                batch_size=batch_size, shuffle=False,
                                num_workers=2, worker_init_fn=worker_init_fn)
DataLoader(
            sampleset, batch_size=batch_size, shuffle=False, num_workers=2)
DataLoader(self.trainset,
                                 batch_size=batch_size, shuffle=shuffle,
                                 num_workers=4, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.testset,
                                batch_size=2 * batch_size, shuffle=False,
                                num_workers=2, worker_init_fn=worker_init_fn)
DataLoader(
            trainset, batch_size=batch_size, shuffle=shuffle,
            num_workers=2, drop_last=False)
DataLoader(
                self.trainset, batch_size=batch_size, shuffle=False, num_workers=4,
                pin_memory=True, worker_init_fn=worker_init_fn, sampler=train_sampler)
DataLoader(
                self.testset, batch_size=batch_size, shuffle=False, num_workers=4,
                pin_memory=True)
DataLoader(
                self.trainset, batch_size=batch_size, shuffle=shuffle,
                num_workers=4, worker_init_fn=worker_init_fn, drop_last=True)
DataLoader(
                self.testset, batch_size=batch_size, shuffle=False,
                num_workers=4, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(
                self.trainset, batch_size=batch_size, shuffle=False, num_workers=4,
                pin_memory=True, worker_init_fn=worker_init_fn, sampler=train_sampler)
DataLoader(
                self.testset, batch_size=batch_size, shuffle=False, num_workers=2,
                pin_memory=True, sampler=test_sampler)
DataLoader(
                self.trainset, batch_size=batch_size, shuffle=shuffle,
                num_workers=4, worker_init_fn=worker_init_fn, drop_last=True)
DataLoader(
                self.testset, batch_size=batch_size, shuffle=False,
                num_workers=4, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.trainset,
                                     batch_size=batch_size, shuffle=shuffle,
                                     num_workers=2, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.testset,
                                batch_size=batch_size, shuffle=False,
                                num_workers=2, worker_init_fn=worker_init_fn)
DataLoader(
            sampleset, batch_size=batch_size, shuffle=False, num_workers=2)
DataLoader(self.trainset,
                                 batch_size=batch_size, shuffle=shuffle,
                                 num_workers=4, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.testset,
                                batch_size=2 * batch_size, shuffle=False,
                                num_workers=4, worker_init_fn=worker_init_fn)
DataLoader(
            trainset, batch_size=batch_size, shuffle=shuffle,
            num_workers=2, drop_last=False)
DataLoader(
                self.trainset, batch_size=batch_size, shuffle=False, num_workers=4,
                pin_memory=True, worker_init_fn=worker_init_fn, sampler=train_sampler)
DataLoader(
                self.testset, batch_size=batch_size, shuffle=False, num_workers=2,
                pin_memory=True, sampler=test_sampler)
DataLoader(
                self.trainset, batch_size=batch_size, shuffle=shuffle,
                num_workers=4, worker_init_fn=worker_init_fn, drop_last=True)
DataLoader(
                self.testset, batch_size=batch_size, shuffle=False,
                num_workers=4, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.trainset,
                                     batch_size=batch_size, shuffle=shuffle,
                                     num_workers=2, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.testset,
                                batch_size=batch_size, shuffle=False,
                                num_workers=2, worker_init_fn=worker_init_fn)
DataLoader(
            sampleset, batch_size=batch_size, shuffle=False, num_workers=2)
DataLoader(self.trainset,
                                 batch_size=batch_size, shuffle=shuffle,
                                 num_workers=4, worker_init_fn=worker_init_fn, drop_last=False)
DataLoader(self.testset,
                                batch_size=2 * batch_size, shuffle=False,
                                num_workers=2, worker_init_fn=worker_init_fn)
DataLoader(
            trainset, batch_size=batch_size, shuffle=shuffle,
            num_workers=2, drop_last=False)
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/verify_parameters_acc.py#L191
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/verify_parameters_acc.py#L236
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/imagenet.py#L110
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/imagenet.py#L120
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/imagenet.py#L127
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/imagenet.py#L131
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/imagenet_wo_face.py#L197
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/imagenet_wo_face.py#L207
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/imagenet_wo_face.py#L214
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/imagenet_wo_face.py#L218
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age.py#L372
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age.py#L376
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age.py#L382
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age.py#L385
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age.py#L583
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age.py#L586
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age.py#L737
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age.py#L777
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age.py#L781
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age.py#L848
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age_t_race.py#L443
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age_t_race.py#L447
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age_t_race.py#L453
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age_t_race.py#L456
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age_t_race.py#L654
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age_t_race.py#L657
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age_t_race.py#L808
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age_t_race.py#L848
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age_t_race.py#L852
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_age_t_race.py#L919
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face.py#L354
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face.py#L358
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face.py#L364
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face.py#L367
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face.py#L565
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face.py#L568
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face.py#L719
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face.py#L759
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face.py#L763
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face.py#L830
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L338
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L342
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L348
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L351
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L409
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L413
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L419
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L422
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L518
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L521
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L665
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L686
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L690
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_gender.py#L757
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_t_age.py#L350
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_t_age.py#L354
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_t_age.py#L360
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_t_age.py#L363
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_t_age.py#L562
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_t_age.py#L565
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_t_age.py#L716
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_t_age.py#L756
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_t_age.py#L760
https://github.com/yulongt23/Transfer-Inference/blob/050c2225cabf146933625effc002c897d8ded7bd/datasets/maad_face_t_age.py#L827

=====================================
https://github.com/ParkGeonYeong/DCWP
=====================================

Found 3 times
data.DataLoader(dataset=dataset,
                                   batch_size=args.batch_size,
                                   shuffle=False,
                                   num_workers=args.num_workers,
                                   sampler=sampler,
                                   pin_memory=True)
data.DataLoader(dataset=dataset,
                                batch_size=args.batch_size,
                                shuffle=True,
                                num_workers=args.num_workers,
                                pin_memory=True)
data.DataLoader(dataset=dataset,
                           batch_size=args.batch_size,
                           shuffle=True,
                           num_workers=args.num_workers,
                           pin_memory=True)
https://github.com/ParkGeonYeong/DCWP/blob/e1a733da2ed16236f5977610824913db65e95e32/data/data_loader.py#L30
https://github.com/ParkGeonYeong/DCWP/blob/e1a733da2ed16236f5977610824913db65e95e32/data/data_loader.py#L37
https://github.com/ParkGeonYeong/DCWP/blob/e1a733da2ed16236f5977610824913db65e95e32/data/data_loader.py#L50

===============================
https://github.com/somepago/DCR
===============================

Found 7 times
torch.utils.data.DataLoader(
        dataset_values,
        sampler=sampler,
        batch_size=64,
        num_workers=args.workers,
        pin_memory=True,
        drop_last=False,
        shuffle=False
    )
torch.utils.data.DataLoader(
        dataset_query,
        batch_size=64,
        num_workers=args.workers,
        pin_memory=True,
        drop_last=False,
        shuffle=False
    )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=args.train_batch_size,
            shuffle=False,
            collate_fn=lambda examples: collate_fn(examples),
            num_workers=args.num_workers,
            sampler = sampler
        )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=args.train_batch_size,
            shuffle=True,
            collate_fn=lambda examples: collate_fn(examples),
            num_workers=args.num_workers,
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=num_workers)
DataLoader(dataset=dataset,
                             batch_size=batch_size,
                             shuffle=False,
                             num_workers=num_workers,
                             pin_memory=True)
https://github.com/somepago/DCR/blob/bac8b5fbf739c75be6a187f97e2b81e0fd51115c/diff_retrieval.py#L349
https://github.com/somepago/DCR/blob/bac8b5fbf739c75be6a187f97e2b81e0fd51115c/diff_retrieval.py#L358
https://github.com/somepago/DCR/blob/bac8b5fbf739c75be6a187f97e2b81e0fd51115c/diff_train.py#L472
https://github.com/somepago/DCR/blob/bac8b5fbf739c75be6a187f97e2b81e0fd51115c/diff_train.py#L481
https://github.com/somepago/DCR/blob/bac8b5fbf739c75be6a187f97e2b81e0fd51115c/embedding_search/utils.py#L68
https://github.com/somepago/DCR/blob/bac8b5fbf739c75be6a187f97e2b81e0fd51115c/metrics/fid.py#L112
https://github.com/somepago/DCR/blob/bac8b5fbf739c75be6a187f97e2b81e0fd51115c/metrics/ipr.py#L317

=============================================================================
https://github.com/QuangNguyen2609/ARCHITECTURAL-BACKDOORS-IN-NEURAL-NETWORKS
=============================================================================

Found 2 times
torch.utils.data.DataLoader(trainset,
                                          batch_size=batch_size,
                                          shuffle=True,
                                          num_workers=6)
torch.utils.data.DataLoader(testset,
                                         batch_size=batch_size,
                                         shuffle=False,
                                         num_workers=6)
https://github.com/QuangNguyen2609/ARCHITECTURAL-BACKDOORS-IN-NEURAL-NETWORKS/blob/59a3e99f44d6ca7a1eaefaebda5466ffd7f336a5/src/train_alex_cifar.py#L62
https://github.com/QuangNguyen2609/ARCHITECTURAL-BACKDOORS-IN-NEURAL-NETWORKS/blob/59a3e99f44d6ca7a1eaefaebda5466ffd7f336a5/src/train_alex_cifar.py#L73

==================================
https://github.com/qiulingxu/MEDIC
==================================

Found 36 times
DataLoader(train_data, batch_size=opt.batch_size, shuffle=True)
DataLoader(dataset=test_data_clean,
                                       batch_size=opt.batch_size,
                                       shuffle=False,
                                       )
DataLoader(dataset=test_data_bad,
                                       batch_size=opt.batch_size,
                                       shuffle=False,
                                       )
DataLoader(dataset=train_data_bad,
                                       batch_size=opt.batch_size,
                                       shuffle=False,
                                       )
DataLoader(dataset=trainset,
                                batch_size=opt.batch_size,
                                shuffle=True,
                                )
torch.utils.data.DataLoader(dataset=train_set, batch_size=BATCH_SIZE, shuffle=True)
torch.utils.data.DataLoader(dataset=poi_set, batch_size=BATCH_SIZE, shuffle=True)
torch.utils.data.DataLoader(dataset=val_set, batch_size=BATCH_SIZE, shuffle=False)
DataLoader(clean_val, batch_size=args.batch_size,
                                  shuffle=False, sampler=random_sampler, num_workers=0)
DataLoader(poison_test, batch_size=args.batch_size, num_workers=0)
DataLoader(clean_test, batch_size=args.batch_size, num_workers=0)
DataLoader(poison_test, batch_size=args.batch_size, num_workers=0)
DataLoader(clean_test, batch_size=args.batch_size, num_workers=0)
torch.utils.data.DataLoader(dataset=train_set, batch_size=BATCH_SIZE, 
                                               sampler=get_sampler(train_set, N_CLASS+1, 90))
torch.utils.data.DataLoader(dataset=poi_set, batch_size=BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(dataset=val_set, batch_size=BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(dataset=train_set, batch_size=BATCH_SIZE, shuffle=True)
torch.utils.data.DataLoader(dataset=poi_set, batch_size=BATCH_SIZE, shuffle=True)
torch.utils.data.DataLoader(dataset=val_set, batch_size=BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(dataset=train_set, batch_size=BATCH_SIZE, shuffle=True)
torch.utils.data.DataLoader(dataset=poi_set, batch_size=BATCH_SIZE, shuffle=True)
torch.utils.data.DataLoader(dataset=val_set, batch_size=BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(dataset=train_set, batch_size=BATCH_SIZE, shuffle=True)
torch.utils.data.DataLoader(dataset=poi_set, batch_size=BATCH_SIZE, shuffle=True)
torch.utils.data.DataLoader(dataset=val_set, batch_size=BATCH_SIZE, shuffle=False)
DataLoader(dataset,
                                batch_size=batch_size,
                                num_workers=min([os.cpu_count(), batch_size if batch_size > 1 else 0, 8]),
                                pin_memory=True,
                                collate_fn=dataset.collate_fn)
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             num_workers=nw,
                                             shuffle=not opt.rect,  # Shuffle=True unless rectangular training is used
                                             pin_memory=True,
                                             collate_fn=dataset.collate_fn)
torch.utils.data.DataLoader(LoadImagesAndLabels(test_path, img_size_test, batch_size * 2,
                                                                 hyp=hyp,
                                                                 rect=True,
                                                                 cache_images=opt.cache_images,
                                                                 single_cls=opt.single_cls),
                                             batch_size=batch_size * 2,
                                             num_workers=nw,
                                             pin_memory=True,
                                             collate_fn=dataset.collate_fn)
torch.utils.data.DataLoader(LoadImagesAndLabels(poison_path, img_size_test, batch_size * 2,
                                                                 hyp=hyp,
                                                                 rect=True,
                                                                 cache_images=opt.cache_images,
                                                                 single_cls=opt.single_cls),
                                             batch_size=batch_size * 2,
                                             num_workers=nw,
                                             pin_memory=True,
                                             collate_fn=dataset.collate_fn)
DataLoader(dataset=test_dataset, batch_size=32, shuffle=False,
                                  drop_last=False, num_workers=8, pin_memory=True)
DataLoader(dataset=test_dataset, batch_size=32, shuffle=False,
                                          drop_last=False, num_workers=8, pin_memory=True)
DataLoader(dataset=train_dataset, batch_size=config.batch_size, shuffle=True,
                               drop_last=False, num_workers=8, pin_memory=True)
DataLoader(dataset=val_dataset, batch_size=config.batch_size, shuffle=False,
                               drop_last=False, num_workers=8, pin_memory=True)
DataLoader(dataset=test_dataset, batch_size=32, shuffle=False,
                                  drop_last=False, num_workers=8, pin_memory=True)
DataLoader(dataset=train_dataset, batch_size=config.batch_size, shuffle=True,
                             drop_last=False, num_workers=8, pin_memory=True)
DataLoader(dataset=test_dataset, batch_size=config.batch_size, shuffle=False,
                              drop_last=False, num_workers=8, pin_memory=True)
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/data_loader.py#L231
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/data_loader.py#L274
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/data_loader.py#L279
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/data_loader.py#L311
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/train_adaptive.py#L206
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/train_composite.py#L57
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/train_composite.py#L63
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/train_composite.py#L67
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/ANP/optimize_mask_cifar.py#L55
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/ANP/optimize_mask_cifar.py#L57
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/ANP/optimize_mask_cifar.py#L58
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/ANP/prune_neuron_cifar.py#L41
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/ANP/prune_neuron_cifar.py#L42
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/attack_youtubeface.py#L63
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/attack_youtubeface.py#L70
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/attack_youtubeface.py#L74
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/train_adv.py#L404
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/train_adv.py#L409
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/train_adv.py#L412
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/train_adv.py#L502
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/train_adv.py#L507
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/train_adv.py#L510
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/train_adv.py#L819
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/train_adv.py#L824
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/train_adv.py#L827
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/yolov3/test.py#L64
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/yolov3/train.py#L177
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/yolov3/train.py#L185
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/composite/yolov3/train.py#L196
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/trojai_interface/round4/gen_data.py#L263
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/trojai_interface/round4/gen_data.py#L317
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/trojai_interface/round4/trojai_adv.py#L253
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/trojai_interface/round4/trojai_adv.py#L256
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/trojai_interface/round4/trojai_adv.py#L333
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/trojai_interface/round4/trojai_adv.py#L403
https://github.com/qiulingxu/MEDIC/blob/042e7699d713c5f42ea7461fc5a004bac0792701/trojai_interface/round4/trojai_adv.py#L405

=============================================
https://github.com/alibaba-mmai-research/MoLo
=============================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=(False if sampler else shuffle),
        sampler=sampler,
        num_workers=cfg.DATA_LOADER.NUM_WORKERS,
        pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
        drop_last=drop_last,
        collate_fn=collate_fn
    )
https://github.com/alibaba-mmai-research/MoLo/blob/f7f73b6dd8cba446b414b1c47652ab26033bc88e/datasets/base/builder.py#L84

===================================================================
https://github.com/alexandrosstergiou/progressive-action-prediction
===================================================================

Found 3 times
torch.utils.data.DataLoader(val,
            batch_size=kwargs['batch_size'], shuffle=False,
            num_workers=kwargs['num_workers'], pin_memory=False)
torch.utils.data.DataLoader(train_iter,batch_size=batch_shape[0], shuffle=True,num_workers=10, pin_memory=False,drop_last=True)
torch.utils.data.DataLoader(eval_iter,batch_size=batch_shape[0], shuffle=False,num_workers=10, pin_memory=False,drop_last=True)
https://github.com/alexandrosstergiou/progressive-action-prediction/blob/3f2ff82e8aaae713a10058877374a0c08e33c02c/data/iterator_factory.py#L222
https://github.com/alexandrosstergiou/progressive-action-prediction/blob/3f2ff82e8aaae713a10058877374a0c08e33c02c/run/model.py#L411
https://github.com/alexandrosstergiou/progressive-action-prediction/blob/3f2ff82e8aaae713a10058877374a0c08e33c02c/run/model.py#L412

================================
https://github.com/wlin-at/ViTTA
================================

Found 35 times
torch.utils.data.DataLoader(
            get_dataset_tanet(args,  split='val', dataset_type='eval'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True, )
torch.utils.data.DataLoader(
            get_dataset_videoswin(args, split='val', dataset_type='eval'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True,
        )
torch.utils.data.DataLoader(
            get_dataset(args, split='val'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            get_dataset_tanet(args,  split='val'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True, )
torch.utils.data.DataLoader(
            get_dataset_videoswin(args, split='val'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True,
        )
torch.utils.data.DataLoader(
            get_dataset(args, split='val'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            get_dataset_tanet(args,  split='val', dataset_type='tta'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True
        )
torch.utils.data.DataLoader(
            get_dataset_tanet(args, split='val', dataset_type='eval'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True
        )
torch.utils.data.DataLoader(
            get_dataset_videoswin(args,  split='val', dataset_type= 'tta'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True
        )
torch.utils.data.DataLoader(
            get_dataset_videoswin(args, split='val', dataset_type='eval'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True
        )
torch.utils.data.DataLoader(
            get_dataset_tanet(args,  split='val', dataset_type='tta'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True
        )
torch.utils.data.DataLoader(
            get_dataset_tanet(args,  split='val', dataset_type='eval'),
            batch_size=args.batch_size_eval, shuffle=False,
            num_workers=args.workers, pin_memory=True
        )
torch.utils.data.DataLoader(
            get_dataset_videoswin(args,  split='val', dataset_type= 'tta'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True
        )
torch.utils.data.DataLoader(
            get_dataset_videoswin(args, split='val', dataset_type='eval'),
            batch_size=args.batch_size_eval, shuffle=False,
            num_workers=args.workers, pin_memory=True
        )
torch.utils.data.DataLoader(
            get_dataset(args, split='val'),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True
        )
torch.utils.data.DataLoader(
            get_dataset(args, split='val'),
            batch_size=args.batch_size_eval, shuffle=False,
            num_workers=args.workers, pin_memory=True
        )
torch.utils.data.DataLoader(
        get_dataset(args, split='val'),
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True
    )
torch.utils.data.DataLoader(
        get_dataset(args, split='val'),
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True
    )
torch.utils.data.DataLoader(
                    get_dataset_tanet(args,  split='val', dataset_type='eval'),
                    batch_size=args.batch_size, shuffle=False,
                    num_workers=args.workers, pin_memory=True, )
torch.utils.data.DataLoader(
                    get_dataset_videoswin(args, split='val', dataset_type='eval'),
                    batch_size=args.batch_size, shuffle=False,
                    num_workers=args.workers, pin_memory=True, )
torch.utils.data.DataLoader(
                    get_dataset(args, split='val'),
                    batch_size=args.batch_size, shuffle=False,
                    num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
                    get_dataset_tanet(args, split='val'),
                    batch_size=args.batch_size, shuffle=False,
                    num_workers=args.workers, pin_memory=True, )
torch.utils.data.DataLoader(
                    get_dataset(args, split='val'),
                    batch_size=args.batch_size, shuffle=False,
                    num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
                    get_dataset_tanet(args,  split='val'),
                    batch_size=args.batch_size, shuffle=False,
                    num_workers=args.workers, pin_memory=True, )
torch.utils.data.DataLoader(
                    get_dataset(args, split='val'),
                    batch_size=args.batch_size, shuffle=False,
                    num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
                    get_dataset_tanet(args, split='val'),
                    batch_size=args.batch_size, shuffle=False,
                    num_workers=args.workers, pin_memory=True, )
torch.utils.data.DataLoader(
                    get_dataset(args, split='val'),
                    batch_size=args.batch_size, shuffle=False,
                    num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
                    get_dataset_tanet_dua(args, tanet_model=model.module, split='val')[1],
                    batch_size=1, shuffle=False,
                    num_workers=args.workers, pin_memory=True, )
torch.utils.data.DataLoader(
                    get_dataset_tanet_dua(args, tanet_model=model.module, split='val')[0],
                    batch_size=args.batch_size, shuffle=False,
                    num_workers=args.workers, pin_memory=True, )
torch.utils.data.DataLoader(
                    get_dataset(args, split='val')[0],
                    batch_size=1, shuffle=True,
                    num_workers=args.workers, pin_memory=True
                )
torch.utils.data.DataLoader(
                    get_dataset(args, split='val')[1],
                    batch_size=args.batch_size, shuffle=True,
                    num_workers=args.workers, pin_memory=True
                )
torch.utils.data.DataLoader(
                    get_dataset_tanet(args,  split='val'),
                    batch_size=args.batch_size, shuffle=False,
                    num_workers=args.workers, pin_memory=True, )
torch.utils.data.DataLoader(
                    get_dataset(args, split='val'),
                    batch_size=args.batch_size, shuffle=False,
                    num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(  # TSN video dataset
        get_dataset(args, split='train'),
        batch_size=args.batch_size, shuffle=True,
        num_workers=args.workers, pin_memory=True, )
torch.utils.data.DataLoader(
        get_dataset(args, split='val'),
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True
    )
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L256
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L261
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L268
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L344
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L349
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L356
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L432
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L437
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L444
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L449
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L778
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L784
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L790
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L795
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L801
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L807
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L1088
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/basics.py#L1094
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L104
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L109
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L115
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L129
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L134
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L146
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L151
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L163
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L168
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L182
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L186
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L191
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L196
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L212
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_eval.py#L217
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_train.py#L76
https://github.com/wlin-at/ViTTA/blob/b4f560e2a4829cacd183590663be192a3af53784/corpus/main_train.py#L81

============================
https://github.com/intel/TVP
============================

Found 6 times
torch.utils.data.DataLoader(
            dataset,
            sampler=sampler,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=None,
            collate_fn=operator.itemgetter(0),
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=batch_sampler,
            collate_fn=trivial_batch_collator,
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
        dataset,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
DataLoader(dataset,
                            batch_size=batch_size,
                            shuffle=False,
                            sampler=sampler,
                            num_workers=cfg.n_workers,
                            pin_memory=cfg.pin_mem,
                            collate_fn=data_collator.collate_batch)
DataLoader(dataset,
                            batch_size=batch_size,
                            shuffle=False,
                            sampler=sampler,
                            num_workers=cfg.n_workers,
                            pin_memory=cfg.pin_mem,
                            collate_fn=vtg_collator.collate_batch)
DataLoader(dataset,
                            batch_size=batch_size,
                            shuffle=False,
                            sampler=sampler,
                            num_workers=cfg.n_workers,
                            pin_memory=cfg.pin_mem,
                            collate_fn=vtg_collator.collate_batch)
https://github.com/intel/TVP/blob/5c7e27f9ef344824984d01dbf1e7cba82ae66dc5/src/modeling/grid_feats/build_loader.py#L56
https://github.com/intel/TVP/blob/5c7e27f9ef344824984d01dbf1e7cba82ae66dc5/src/modeling/grid_feats/build_loader.py#L69
https://github.com/intel/TVP/blob/5c7e27f9ef344824984d01dbf1e7cba82ae66dc5/src/modeling/grid_feats/build_loader.py#L99
https://github.com/intel/TVP/blob/5c7e27f9ef344824984d01dbf1e7cba82ae66dc5/src/pretrain/run_pretrain.py#L139
https://github.com/intel/TVP/blob/5c7e27f9ef344824984d01dbf1e7cba82ae66dc5/src/tasks/run_temporal_grounding_pf_prompt.py#L162
https://github.com/intel/TVP/blob/5c7e27f9ef344824984d01dbf1e7cba82ae66dc5/src/tasks/run_temporal_grounding_pf_prompt.py#L216

==============================
https://github.com/Jun-CEN/PSL
==============================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=(False if sampler else shuffle),
        sampler=sampler,
        num_workers=cfg.DATA_LOADER.NUM_WORKERS,
        pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
        drop_last=drop_last,
        collate_fn=collate_fn
    )
https://github.com/Jun-CEN/PSL/blob/6460af2abc1fb18e2cdb844507f80ea5330c8c0e/datasets/base/builder.py#L119

========================================
https://github.com/DAVEISHAN/TimeBalance
========================================

Found 11 times
DataLoader(train_dataset, batch_size=params.batch_size, shuffle=True, num_workers=params.num_workers, collate_fn=collate_fn_train)
DataLoader(validation_dataset, batch_size=params.v_batch_size, shuffle=True, num_workers=params.num_workers, collate_fn=collate_fn2)
DataLoader(train_dataset, batch_size=params.batch_size, shuffle=True, num_workers=params.num_workers, collate_fn=collate_fn_train)
DataLoader(train_dataset, batch_size=params.batch_size, shuffle=True, num_workers=params.num_workers, collate_fn=collate_fn2)
DataLoader(train_dataset, batch_size=params.batch_size, shuffle=True, num_workers=params.num_workers, collate_fn=collate_fn2)
DataLoader(train_dataset_labeled, batch_size=params.batch_size, shuffle=True, num_workers=params.num_workers, collate_fn=collate_fn_train)
DataLoader(train_dataset_unlabeled, batch_size=params.batch_size, shuffle=True, num_workers=params.num_workers, collate_fn=collate_fn_train)
DataLoader(validation_dataset, batch_size=params.v_batch_size, shuffle=True, num_workers=params.num_workers, collate_fn=collate_fn2)
DataLoader(train_dataset_labeled, batch_size=params.batch_size, shuffle=True, num_workers=params.num_workers, collate_fn=collate_fn_train)
DataLoader(train_dataset_unlabeled, batch_size=params.batch_size, shuffle=True, num_workers=params.num_workers, collate_fn=collate_fn_train)
DataLoader(train_dataset, batch_size=16, \
        shuffle=False, num_workers=8, collate_fn=collate_fn2)
https://github.com/DAVEISHAN/TimeBalance/blob/2efb8cb7374e1a20766cdf19b6382d0a1f5963a3/finetune.py#L285
https://github.com/DAVEISHAN/TimeBalance/blob/2efb8cb7374e1a20766cdf19b6382d0a1f5963a3/finetune.py#L372
https://github.com/DAVEISHAN/TimeBalance/blob/2efb8cb7374e1a20766cdf19b6382d0a1f5963a3/finetune.py#L467
https://github.com/DAVEISHAN/TimeBalance/blob/2efb8cb7374e1a20766cdf19b6382d0a1f5963a3/pretraining.py#L253
https://github.com/DAVEISHAN/TimeBalance/blob/2efb8cb7374e1a20766cdf19b6382d0a1f5963a3/pretraining.py#L332
https://github.com/DAVEISHAN/TimeBalance/blob/2efb8cb7374e1a20766cdf19b6382d0a1f5963a3/train_semisup.py#L369
https://github.com/DAVEISHAN/TimeBalance/blob/2efb8cb7374e1a20766cdf19b6382d0a1f5963a3/train_semisup.py#L375
https://github.com/DAVEISHAN/TimeBalance/blob/2efb8cb7374e1a20766cdf19b6382d0a1f5963a3/train_semisup.py#L466
https://github.com/DAVEISHAN/TimeBalance/blob/2efb8cb7374e1a20766cdf19b6382d0a1f5963a3/train_semisup.py#L559
https://github.com/DAVEISHAN/TimeBalance/blob/2efb8cb7374e1a20766cdf19b6382d0a1f5963a3/train_semisup.py#L565
https://github.com/DAVEISHAN/TimeBalance/blob/2efb8cb7374e1a20766cdf19b6382d0a1f5963a3/dataloaders/dl_ssl.py#L339

==========================================
https://github.com/facebookresearch/LaViLa
==========================================

Found 12 times
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True, drop_last=False
        )
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True, drop_last=False
        )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True
    )
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=(val_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=val_sampler, drop_last=False
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True
    )
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=(val_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=val_sampler, drop_last=False
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler, drop_last=False
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True
    )
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=(val_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=val_sampler, drop_last=False
    )
torch.utils.data.DataLoader(
        ek100_dataset, batch_size=args.batch_size * (1 + args.num_hard_neg), shuffle=(ek100_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=ek100_sampler, drop_last=False
    )
https://github.com/facebookresearch/LaViLa/blob/8002b5ab0db31789b9897a0a9c36729099e21ad4/eval_narrator.py#L165
https://github.com/facebookresearch/LaViLa/blob/8002b5ab0db31789b9897a0a9c36729099e21ad4/eval_zeroshot.py#L130
https://github.com/facebookresearch/LaViLa/blob/8002b5ab0db31789b9897a0a9c36729099e21ad4/eval_zeroshot.py#L169
https://github.com/facebookresearch/LaViLa/blob/8002b5ab0db31789b9897a0a9c36729099e21ad4/eval_zeroshot.py#L203
https://github.com/facebookresearch/LaViLa/blob/8002b5ab0db31789b9897a0a9c36729099e21ad4/main_finetune_classification.py#L332
https://github.com/facebookresearch/LaViLa/blob/8002b5ab0db31789b9897a0a9c36729099e21ad4/main_finetune_classification.py#L337
https://github.com/facebookresearch/LaViLa/blob/8002b5ab0db31789b9897a0a9c36729099e21ad4/main_finetune_retrieval.py#L305
https://github.com/facebookresearch/LaViLa/blob/8002b5ab0db31789b9897a0a9c36729099e21ad4/main_finetune_retrieval.py#L310
https://github.com/facebookresearch/LaViLa/blob/8002b5ab0db31789b9897a0a9c36729099e21ad4/main_infer_narrator.py#L146
https://github.com/facebookresearch/LaViLa/blob/8002b5ab0db31789b9897a0a9c36729099e21ad4/main_pretrain.py#L323
https://github.com/facebookresearch/LaViLa/blob/8002b5ab0db31789b9897a0a9c36729099e21ad4/main_pretrain.py#L328
https://github.com/facebookresearch/LaViLa/blob/8002b5ab0db31789b9897a0a9c36729099e21ad4/main_pretrain.py#L333

==========================================
https://github.com/muzairkhattak/ViFi-CLIP
==========================================

Found 2 times
DataLoader(
        train_data, sampler=sampler_train,
        batch_size=config.TRAIN.BATCH_SIZE,
        num_workers=16,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=config.TRAIN.BATCH_SIZE),
    )
DataLoader(
        val_data, sampler=sampler_val,
        batch_size=2,
        num_workers=16,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=2),
    )
https://github.com/muzairkhattak/ViFi-CLIP/blob/e2d1948307f582052078eb8a4afbeb50247166f1/datasets/build.py#L276
https://github.com/muzairkhattak/ViFi-CLIP/blob/e2d1948307f582052078eb8a4afbeb50247166f1/datasets/build.py#L305

==========================================
https://github.com/md-mohaiminul/TranS4mer
==========================================

Found 6 times
torch.utils.data.DataLoader(
        dataset=get_dataset(cfg, mode=mode, is_train=is_train),
        batch_size=cfg.TRAIN.BATCH_SIZE.batch_size_per_proc,
        num_workers=cfg.TRAIN.NUM_WORKERS,
        pin_memory=cfg.TRAIN.PIN_MEMORY,
        persistent_workers=is_train,
        drop_last=is_train,
        shuffle=is_train,
        collate_fn=get_collate_fn(cfg),
    )
torch.utils.data.DataLoader(
            dataset,
            batch_sampler=batch_sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
DataLoader(train_dataset, batch_size=BATCH_SIZE)
DataLoader(val_dataset, batch_size=BATCH_SIZE)
torch.utils.data.DataLoader(
        dataset=get_dataset(cfg, mode=mode, is_train=is_train),
        batch_size=bsz,
        num_workers=cfg.TRAIN.NUM_WORKERS,
        pin_memory=cfg.TRAIN.PIN_MEMORY,
        drop_last=is_train,
        shuffle=is_train,
        #shuffle=False,
        collate_fn=get_collate_fn(cfg),
    )
https://github.com/md-mohaiminul/TranS4mer/blob/98de379770e0d4034280abb9923928c103377286/trans4mer/finetune/utils/main_utils.py#L64
https://github.com/md-mohaiminul/TranS4mer/blob/98de379770e0d4034280abb9923928c103377286/trans4mer/model/TimeSformer/timesformer/datasets/loader.py#L91
https://github.com/md-mohaiminul/TranS4mer/blob/98de379770e0d4034280abb9923928c103377286/trans4mer/model/TimeSformer/timesformer/datasets/loader.py#L102
https://github.com/md-mohaiminul/TranS4mer/blob/98de379770e0d4034280abb9923928c103377286/trans4mer/model/gatedS4/train.py#L78
https://github.com/md-mohaiminul/TranS4mer/blob/98de379770e0d4034280abb9923928c103377286/trans4mer/model/gatedS4/train.py#L79
https://github.com/md-mohaiminul/TranS4mer/blob/98de379770e0d4034280abb9923928c103377286/trans4mer/pretrain/utils/main_utils.py#L67

========================================
https://github.com/Junhua-Liao/Light-ASD
========================================

Found 2 times
torch.utils.data.DataLoader(loader, batch_size = 1, shuffle = True, num_workers = args.nDataLoaderThread, pin_memory = True)
torch.utils.data.DataLoader(loader, batch_size = 1, shuffle = False, num_workers = 64, pin_memory = True)
https://github.com/Junhua-Liao/Light-ASD/blob/00a4a4efcd0cef91deb3154edd5dd940b65a15bd/train.py#L39
https://github.com/Junhua-Liao/Light-ASD/blob/00a4a4efcd0cef91deb3154edd5dd940b65a15bd/train.py#L45

==================================
https://github.com/MCG-NJU/STMixer
==================================

Found 1 times
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=collator,
        )
https://github.com/MCG-NJU/STMixer/blob/2c3cd1de2623fc47ad93cfda3a8fcb9713736a55/alphaction/dataset/build.py#L110

=====================================
https://github.com/farewellthree/STAN
=====================================

Found 4 times
DataLoader(
            dataset=dataset,
            sampler=sampler if batch_sampler is None else None,
            batch_sampler=batch_sampler,
            collate_fn=collate_fn,
            worker_init_fn=init_fn,
            **dataloader_cfg)
DataLoader(
            dataset=dataset,
            sampler=sampler if batch_sampler is None else None,
            batch_sampler=batch_sampler,
            collate_fn=collate_fn,
            worker_init_fn=init_fn,
            **dataloader_cfg)
DataLoader(
            dataset=dataset,
            sampler=sampler if batch_sampler is None else None,
            batch_sampler=batch_sampler,
            collate_fn=collate_fn,
            worker_init_fn=init_fn,
            **dataloader_cfg)
DataLoader(range(dataset_size), batch_size)
https://github.com/farewellthree/STAN/blob/c9dc7b6a3ebd0159b2898979b44fb6c92946abcd/mmaction/engine/runner/flexible_runner.py#L899
https://github.com/farewellthree/STAN/blob/c9dc7b6a3ebd0159b2898979b44fb6c92946abcd/mmaction/engine/runner/ndatasets_runner.py#L274
https://github.com/farewellthree/STAN/blob/c9dc7b6a3ebd0159b2898979b44fb6c92946abcd/mmaction/engine/runner/ndatasets_runner.py#L362
https://github.com/farewellthree/STAN/blob/c9dc7b6a3ebd0159b2898979b44fb6c92946abcd/tools/visualizations/vis_scheduler.py#L239

========================================
https://github.com/wenzhengzeng/MPEblink
========================================

Found 21 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/mmdet/datasets/builder.py#L181
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_data/test_datasets/test_common.py#L224
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L76
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L88
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L99
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L111
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L115
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L133
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L135
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L155
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L157
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L177
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L197
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L216
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_runtime/test_eval_hook.py#L236
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_utils/test_hook.py#L92
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_utils/test_hook.py#L190
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_utils/test_hook.py#L246
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_utils/test_hook.py#L268
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_utils/test_hook.py#L310
https://github.com/wenzhengzeng/MPEblink/blob/603dde5debc3524dc4065fe332bd001fce3bc17b/tests/test_utils/test_hook.py#L347

==============================
https://github.com/hengRUC/VSP
==============================

Found 18 times
torch.utils.data.DataLoader(train_dataset, batch_size=cfg.TRAIN.BATCH_SIZE,
                                                    shuffle=False,
                                                    num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=train_sampler,
                                                    drop_last=True)
torch.utils.data.DataLoader(train_eval_dataset, batch_size=1, shuffle=False,
                                                    num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=None)
torch.utils.data.DataLoader(train_dataset, batch_size=cfg.TRAIN.BATCH_SIZE, 
                                                    shuffle=True if train_sampler is None else False,
                                                    num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=train_sampler,
                                                    drop_last=True)
torch.utils.data.DataLoader(train_eval_dataset, batch_size=1, shuffle=False,
                                                    num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=train_eval_sampler)
torch.utils.data.DataLoader(train_dataset, batch_size=cfg.TRAIN.BATCH_SIZE, 
                                                    shuffle=True if train_sampler is None else False,
                                                    num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=train_sampler,
                                                    drop_last=True)
torch.utils.data.DataLoader(train_eval_dataset, batch_size=1, shuffle=False,
                                                        num_workers=0, pin_memory=True, sampler=None)
torch.utils.data.DataLoader(train_dataset, num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, 
                                            batch_sampler=train_sampler)
torch.utils.data.DataLoader(train_dataset, batch_size=cfg.TRAIN.BATCH_SIZE, 
                                                        shuffle=True if train_sampler is None else False,
                                                        num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=train_sampler,
                                                        drop_last=True)
torch.utils.data.DataLoader(train_eval_dataset, batch_size=1, shuffle=False,
                                                        num_workers=0, pin_memory=True, sampler=None)
torch.utils.data.DataLoader(val_dataset, batch_size=cfg.EVAL.BATCH_SIZE, shuffle=False,
                                                    num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=None,
                                                    drop_last=True)
torch.utils.data.DataLoader(val_eval_dataset, batch_size=1, shuffle=False,
                                                num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=None)
torch.utils.data.DataLoader(val_dataset, batch_size=cfg.EVAL.BATCH_SIZE, shuffle=False,
                                                    num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=None,
                                                    drop_last=True)
torch.utils.data.DataLoader(val_eval_dataset, batch_size=1, shuffle=False,
                                                num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=val_eval_sampler)
torch.utils.data.DataLoader(val_dataset,num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, 
                                            batch_sampler=val_sampler)
torch.utils.data.DataLoader(val_dataset, batch_size=cfg.EVAL.BATCH_SIZE, shuffle=False,
                                                        num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=None,
                                                        drop_last=True)
torch.utils.data.DataLoader(val_eval_dataset, batch_size=1, shuffle=False,
                                                num_workers=0, pin_memory=True, sampler=None)
torch.utils.data.DataLoader(train_embs, batch_size=batch_size, 
                                    shuffle=False if cfg.NUM_GPUS > 1 else True, collate_fn=colleta_fn,
                                    num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=train_sampler,
                                    drop_last=True)
torch.utils.data.DataLoader(val_embs, batch_size=batch_size,
                                    shuffle=False, collate_fn=colleta_fn,
                                    num_workers=cfg.DATA.NUM_WORKERS, pin_memory=True, sampler=val_sampler,
                                    drop_last=False)
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L10
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L15
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L21
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L27
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L33
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L42
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L52
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L56
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L63
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L72
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L76
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L82
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L87
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L94
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L98
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/datasets/__init__.py#L104
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/evaluation/evaluate_finegym.py#L156
https://github.com/hengRUC/VSP/blob/e08491650f50cfa256d4e784c06327ea7cbbdec8/evaluation/evaluate_finegym.py#L162

==================================
https://github.com/zhysora/FR-Head
==================================

Found 2 times
torch.utils.data.DataLoader(
                dataset=train_dataset,
                batch_size=self.arg.batch_size,
                shuffle=True,
                num_workers=self.arg.num_worker,
                drop_last=True,
                worker_init_fn=init_seed)
torch.utils.data.DataLoader(
            dataset=Feeder(**self.arg.test_feeder_args),
            batch_size=self.arg.test_batch_size,
            shuffle=False,
            num_workers=self.arg.num_worker,
            drop_last=False,
            worker_init_fn=init_seed)
https://github.com/zhysora/FR-Head/blob/d53ea51800f39214d69653489c429c2c7868328a/main.py#L126
https://github.com/zhysora/FR-Head/blob/d53ea51800f39214d69653489c429c2c7868328a/main.py#L139

================================================
https://github.com/facebookresearch/ProcedureVRL
================================================

Found 3 times
torch.utils.data.DataLoader(
            dataset,
            batch_sampler=batch_sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=collate,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
DataLoader(transformed_dataset["train"], batch_size=batch_size, shuffle=True)
https://github.com/facebookresearch/ProcedureVRL/blob/fcbf833bf469d42f0d657be5ff7ec092d68e65aa/lib/datasets/loader.py#L111
https://github.com/facebookresearch/ProcedureVRL/blob/fcbf833bf469d42f0d657be5ff7ec092d68e65aa/lib/datasets/loader.py#L128
https://github.com/facebookresearch/ProcedureVRL/blob/fcbf833bf469d42f0d657be5ff7ec092d68e65aa/lib/models/diffusion_model.py#L476

================================================
https://github.com/MengyuanChen21/CVPR2023-CMPAE
================================================

Found 4 times
DataLoader(train_dataset, batch_size=args.batch_size,
                              shuffle=True, num_workers=5, pin_memory=True, sampler=None)
DataLoader(val_dataset, batch_size=1, shuffle=False,
                            num_workers=1, pin_memory=True, sampler=None)
DataLoader(test_dataset, batch_size=1, shuffle=False,
                             num_workers=1, pin_memory=True, sampler=None)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=1, pin_memory=True)
https://github.com/MengyuanChen21/CVPR2023-CMPAE/blob/73345f766d418b8c679cef659d4089546fb8e663/main.py#L37
https://github.com/MengyuanChen21/CVPR2023-CMPAE/blob/73345f766d418b8c679cef659d4089546fb8e663/main.py#L39
https://github.com/MengyuanChen21/CVPR2023-CMPAE/blob/73345f766d418b8c679cef659d4089546fb8e663/main.py#L41
https://github.com/MengyuanChen21/CVPR2023-CMPAE/blob/73345f766d418b8c679cef659d4089546fb8e663/main.py#L392

=====================================
https://github.com/ChenHsing/SVFormer
=====================================

Found 6 times
torch.utils.data.DataLoader(
            dataset,
            batch_sampler=batch_sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=2,
                shuffle=(False if sampler else shuffle),
                num_workers=0,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
            dataset,
            batch_sampler=batch_sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=2,
                shuffle=(False if sampler else shuffle),
                num_workers=0,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
https://github.com/ChenHsing/SVFormer/blob/51d6698f69a1ef5f079dd9c4624836a3d42d98c2/build/lib/timesformer/datasets/loader.py#L120
https://github.com/ChenHsing/SVFormer/blob/51d6698f69a1ef5f079dd9c4624836a3d42d98c2/build/lib/timesformer/datasets/loader.py#L132
https://github.com/ChenHsing/SVFormer/blob/51d6698f69a1ef5f079dd9c4624836a3d42d98c2/build/lib/timesformer/datasets/loader.py#L145
https://github.com/ChenHsing/SVFormer/blob/51d6698f69a1ef5f079dd9c4624836a3d42d98c2/timesformer/datasets/loader.py#L120
https://github.com/ChenHsing/SVFormer/blob/51d6698f69a1ef5f079dd9c4624836a3d42d98c2/timesformer/datasets/loader.py#L132
https://github.com/ChenHsing/SVFormer/blob/51d6698f69a1ef5f079dd9c4624836a3d42d98c2/timesformer/datasets/loader.py#L145

================================
https://github.com/zgzxy001/STMT
================================

Found 2 times
DataLoader(dataset=data_train, batch_size=32,
                              shuffle=True, drop_last=True, num_workers=8)
DataLoader(dataset=data_val, batch_size=32, num_workers=8)
https://github.com/zgzxy001/STMT/blob/d7593d9f125481d00856d44e798e9f2edfeb05aa/src/main.py#L60
https://github.com/zgzxy001/STMT/blob/d7593d9f125481d00856d44e798e9f2edfeb05aa/src/main.py#L69

============================================================
https://github.com/DavidZhang73/AssemblyVideoManualAlignment
============================================================

Found 3 times
DataLoader(
            self._train_dataset,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            drop_last=self.hparams.drop_last,
            shuffle=self.hparams.shuffle,
            collate_fn=self.collate_fn,
            prefetch_factor=self.hparams.prefetch_factor,
        )
DataLoader(
            self._val_dataset,
            batch_size=self.hparams.val_batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            drop_last=False,
            shuffle=False,
            collate_fn=self.collate_fn,
            prefetch_factor=self.hparams.prefetch_factor,
        )
DataLoader(
            self._test_dataset,
            batch_size=self.hparams.test_batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            drop_last=False,
            shuffle=False,
            collate_fn=self.collate_fn,
            prefetch_factor=self.hparams.prefetch_factor,
        )
https://github.com/DavidZhang73/AssemblyVideoManualAlignment/blob/68fc325c04e162d83c4811cc3159cb0bf6337803/src/data_modules/iaw.py#L308
https://github.com/DavidZhang73/AssemblyVideoManualAlignment/blob/68fc325c04e162d83c4811cc3159cb0bf6337803/src/data_modules/iaw.py#L320
https://github.com/DavidZhang73/AssemblyVideoManualAlignment/blob/68fc325c04e162d83c4811cc3159cb0bf6337803/src/data_modules/iaw.py#L332

========================================
https://github.com/zhou745/GauFuse_WSTAL
========================================

Found 4 times
torch.utils.data.DataLoader(self.train_dataset,
                                                                     batch_size=1,
                                                                     shuffle=True,
                                                                     num_workers=0,
                                                                     drop_last=False)
torch.utils.data.DataLoader(self.train_dataset, batch_size=1,
                                                                         shuffle=False, drop_last=False,num_workers=0)
torch.utils.data.DataLoader(VideoDataset(self.args, 'test'), batch_size=1,
                                                                    shuffle=False, drop_last=False,num_workers=0)
torch.utils.data.DataLoader(VideoDataset(self.args, 'test'), batch_size=1,
                                                                    shuffle=False, drop_last=False,num_workers=0)
https://github.com/zhou745/GauFuse_WSTAL/blob/3f3013aa42cc667f15ee5d7efa7047afa3f99837/method.py#L38
https://github.com/zhou745/GauFuse_WSTAL/blob/3f3013aa42cc667f15ee5d7efa7047afa3f99837/method.py#L43
https://github.com/zhou745/GauFuse_WSTAL/blob/3f3013aa42cc667f15ee5d7efa7047afa3f99837/method.py#L45
https://github.com/zhou745/GauFuse_WSTAL/blob/3f3013aa42cc667f15ee5d7efa7047afa3f99837/method.py#L48

===================================
https://github.com/svip-lab/WeakSVR
===================================

Found 3 times
torch.utils.data.DataLoader(dataset=dataset,
                                          batch_size=cfg.TRAIN.BATCH_SIZE,
                                          shuffle=False,
                                          sampler=train_sampler,
                                          drop_last=drop_last,
                                          num_workers=cfg.DATASET.NUM_WORKERS,
                                          pin_memory=False)
torch.utils.data.DataLoader(dataset=dataset,
                                          batch_size=cfg.TRAIN.BATCH_SIZE * torch.cuda.device_count() if torch.cuda.is_available() else cfg.TRAIN.BATCH_SIZE,
                                          shuffle=False,
                                          sampler=sampler,
                                          drop_last=False,
                                          num_workers=cfg.DATASET.NUM_WORKERS * torch.cuda.device_count() if torch.cuda.is_available() else 0,
                                          pin_memory=False)
data.DataLoader(dataset=sample_dataset,
                              batch_size=bn,
                              shuffle=False,
                              num_workers=num_worker,
                              pin_memory=False)
https://github.com/svip-lab/WeakSVR/blob/0760da13d186545773eb84bdceae82562e3a297d/Data/clip_dataset.py#L362
https://github.com/svip-lab/WeakSVR/blob/0760da13d186545773eb84bdceae82562e3a297d/Data/clip_dataset.py#L394
https://github.com/svip-lab/WeakSVR/blob/0760da13d186545773eb84bdceae82562e3a297d/Data/sample.py#L87

=================================
https://github.com/ttgeng233/UnAV
=================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator,
        worker_init_fn=(worker_init_reset_seed if is_training else None),
        shuffle=is_training,
        drop_last=is_training,
        generator=generator,
        persistent_workers=True
    )
https://github.com/ttgeng233/UnAV/blob/8b83b8aad3be4d75776b5b3fdbef547d3428db1f/libs/datasets/datasets.py#L31

====================================
https://github.com/shiyi-zh0408/LOGO
====================================

Found 11 times
torch.utils.data.DataLoader(test_dataset, batch_size=args.bs_test,
                                                  shuffle=False, num_workers=int(args.workers),
                                                  pin_memory=True)
torch.utils.data.DataLoader(train_dataset, batch_size=args.bs_train,
                                                       shuffle=False, num_workers=int(args.workers),
                                                       pin_memory=True)
torch.utils.data.DataLoader(test_dataset, batch_size=args.bs_test,
                                                  shuffle=False, num_workers=int(args.workers),
                                                  pin_memory=True)
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        persistent_workers=persistent_workers)
torch.utils.data.DataLoader(train_dataset,
                                                       batch_size=args.bs_train,
                                                       shuffle=False,
                                                       num_workers=int(args.workers),
                                                       pin_memory=True)
torch.utils.data.DataLoader(test_dataset,
                                                  batch_size=args.bs_test,
                                                  shuffle=False,
                                                  num_workers=int(args.workers),
                                                  pin_memory=True)
torch.utils.data.DataLoader(test_dataset, batch_size=args.bs_test,
                                                  shuffle=False, num_workers=int(args.workers),
                                                  pin_memory=True)
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        persistent_workers=persistent_workers)
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        persistent_workers=persistent_workers)
torch.utils.data.DataLoader(VideoDataset('test', args),
                                                      batch_size=args.test_batch_size,
                                                      num_workers=args.num_workers,
                                                      shuffle=False,
                                                      pin_memory=True,
                                                      worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(VideoDataset('train', args),
                                                           batch_size=args.train_batch_size,
                                                           num_workers=args.num_workers,
                                                           shuffle=False,
                                                           pin_memory=False,
                                                           worker_init_fn=worker_init_fn)
https://github.com/shiyi-zh0408/LOGO/blob/12b047de333cd318c2d68890020b9e53e17b7080/CoRe-GOAT/tools/runner.py#L20
https://github.com/shiyi-zh0408/LOGO/blob/12b047de333cd318c2d68890020b9e53e17b7080/CoRe-GOAT/tools/runner.py#L58
https://github.com/shiyi-zh0408/LOGO/blob/12b047de333cd318c2d68890020b9e53e17b7080/CoRe-GOAT/tools/runner.py#L61
https://github.com/shiyi-zh0408/LOGO/blob/12b047de333cd318c2d68890020b9e53e17b7080/CoRe-GOAT/utils/multi_gpu.py#L56
https://github.com/shiyi-zh0408/LOGO/blob/12b047de333cd318c2d68890020b9e53e17b7080/FineDiving-GOAT/tools/runner.py#L31
https://github.com/shiyi-zh0408/LOGO/blob/12b047de333cd318c2d68890020b9e53e17b7080/FineDiving-GOAT/tools/runner.py#L37
https://github.com/shiyi-zh0408/LOGO/blob/12b047de333cd318c2d68890020b9e53e17b7080/FineDiving-GOAT/tools/runner.py#L311
https://github.com/shiyi-zh0408/LOGO/blob/12b047de333cd318c2d68890020b9e53e17b7080/FineDiving-GOAT/utils/goat_utils.py#L58
https://github.com/shiyi-zh0408/LOGO/blob/12b047de333cd318c2d68890020b9e53e17b7080/MUSDL-GOAT/utils.py#L59
https://github.com/shiyi-zh0408/LOGO/blob/12b047de333cd318c2d68890020b9e53e17b7080/MUSDL-GOAT/MTL-AQA/main.py#L72
https://github.com/shiyi-zh0408/LOGO/blob/12b047de333cd318c2d68890020b9e53e17b7080/MUSDL-GOAT/MTL-AQA/main.py#L87

=========================================
https://github.com/facebookresearch/EgoT2
=========================================

Found 35 times
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=self.args.num_workers)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=False, num_workers=self.args.num_workers)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=self.args.num_workers)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=False, num_workers=self.args.num_workers)
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=False,
            **params)
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=False,
            **params)
torch.utils.data.DataLoader(
            lam_dataset,
            batch_size=args.lam_train_batch_size,
            num_workers=args.num_workers,
            pin_memory=False,
            shuffle=True)
torch.utils.data.DataLoader(
            ttm_dataset,
            batch_sampler=SequenceBatchSampler(ttm_dataset, args.ttm_batch_size),
            num_workers=args.num_workers,
            collate_fn=collate_fn_prompt,
            pin_memory=False)
torch.utils.data.DataLoader(asd_dataset, batch_size=1, shuffle=True, num_workers=self.args.num_workers)
torch.utils.data.DataLoader(
            lam_dataset,
            batch_size=args.lam_val_batch_size,
            num_workers=args.num_workers,
            pin_memory=False,
            shuffle=True)
torch.utils.data.DataLoader(
            ttm_dataset,
            batch_size=1,
            num_workers=args.num_workers,
            pin_memory=False)
torch.utils.data.DataLoader(asd_dataset, batch_size=1, shuffle=False, num_workers=self.args.num_workers)
torch.utils.data.DataLoader(
            lam_dataset,
            batch_size=args.lam_train_batch_size,
            num_workers=args.num_workers,
            pin_memory=False,
            shuffle=True)
torch.utils.data.DataLoader(
            ttm_dataset,
            batch_sampler=SequenceBatchSampler(ttm_dataset, args.ttm_batch_size),
            num_workers=args.num_workers,
            collate_fn=collate_fn_2task_prompt,
            pin_memory=False)
torch.utils.data.DataLoader(asd_dataset, batch_size=1, shuffle=True, num_workers=self.args.num_workers)
torch.utils.data.DataLoader(
            lam_dataset,
            batch_size=args.lam_val_batch_size,
            num_workers=args.num_workers,
            pin_memory=False,
            shuffle=False)
torch.utils.data.DataLoader(
            ttm_dataset,
            batch_size=1,
            num_workers=args.num_workers,
            pin_memory=False)
torch.utils.data.DataLoader(asd_dataset, batch_size=1, shuffle=False, num_workers=self.args.num_workers)
torch.utils.data.DataLoader(
            train_dataset,
            batch_sampler=SequenceBatchSampler(train_dataset, args.batch_size),
            num_workers=args.num_workers,
            collate_fn=collate_fn,
            pin_memory=False)
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=1,
            num_workers=args.num_workers,
            pin_memory=False)
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=1,
            num_workers=0,
            pin_memory=False)
torch.utils.data.DataLoader(
            train_dataset,
            # shuffle=True,
            # batch_size=args.batch_size,
            batch_sampler=SequenceBatchSampler(train_dataset, args.batch_size),
            num_workers=args.num_workers,
            collate_fn=collate_fn_2task,
            pin_memory=False)
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=1,
            num_workers=args.num_workers,
            pin_memory=False)
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=1,
            num_workers=0,
            pin_memory=False)
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=(False if sampler else shuffle),
        sampler=sampler,
        num_workers=cfg.DATA_LOADER.NUM_WORKERS,
        pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
        drop_last=drop_last,
        collate_fn=get_collate(cfg.DATA.TASK),
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=(False if sampler else shuffle),
        sampler=sampler,
        num_workers=cfg.DATA_LOADER.NUM_WORKERS,
        pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
        drop_last=drop_last,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=32,
        shuffle=False,
        sampler=None,
        num_workers=32,
        drop_last=False
    )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=self.args.num_workers,
            drop_last=drop_last
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=self.args.num_workers,
            drop_last=drop_last
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=self.args.num_workers,
            drop_last=drop_last
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=self.args.num_workers,
            drop_last=drop_last
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=self.args.num_workers,
            drop_last=drop_last
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=self.args.num_workers,
            drop_last=drop_last
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=self.args.num_workers,
            drop_last=drop_last
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=self.args.num_workers,
            drop_last=drop_last
        )
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/asd/video_task.py#L86
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/asd/video_task.py#L93
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/asd/video_task_taskspecific.py#L69
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/asd/video_task_taskspecific.py#L76
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/lam/video_task.py#L63
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/lam/video_task.py#L79
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/multitask/video_task.py#L126
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/multitask/video_task.py#L135
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/multitask/video_task.py#L147
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/multitask/video_task.py#L158
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/multitask/video_task.py#L167
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/multitask/video_task.py#L178
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/multitask/video_tasktranslation.py#L135
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/multitask/video_tasktranslation.py#L144
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/multitask/video_tasktranslation.py#L156
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/multitask/video_tasktranslation.py#L167
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/multitask/video_tasktranslation.py#L176
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/multitask/video_tasktranslation.py#L187
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/ttm/video_task.py#L72
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/ttm/video_task.py#L84
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/ttm/video_task.py#L94
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/ttm/video_task_2loader.py#L70
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/ttm/video_task_2loader.py#L84
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HHI/tasks/ttm/video_task_2loader.py#L94
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HOI/dataset/lta/loader.py#L116
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HOI/dataset/pnr/loader.py#L58
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HOI/submission/eval_lta.py#L68
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HOI/tasks/multitask/video_task.py#L293
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HOI/tasks/multitask/video_task.py#L481
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HOI/tasks/multitask/video_task.py#L632
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HOI/tasks/multitask/video_task_action.py#L143
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HOI/tasks/multitask/video_task_separate.py#L87
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HOI/tasks/multitask/video_task_separate.py#L180
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HOI/tasks/multitask/video_task_separate.py#L267
https://github.com/facebookresearch/EgoT2/blob/1e261806cacfbbc350215adfdf034af13288719e/HOI/tasks/multitask/video_task_separate.py#L373

=============================================
https://github.com/RenHuan1999/CVPR2023_P-MIL
=============================================

Found 2 times
DataLoader(dataset=dataset,
                              batch_size=args.batch_size,
                              num_workers=args.batch_size,
                              drop_last=True,
                              pin_memory=True,
                              sampler=sampler_train,
                              collate_fn=utils.collate_fn)
DataLoader(dataset=dataset,
                             batch_size=1,
                             drop_last=False,
                             pin_memory=True,
                             sampler=sampler_test,
                             collate_fn=utils.collate_fn)
https://github.com/RenHuan1999/CVPR2023_P-MIL/blob/855e683f3a83ac1d582752b23e6914e49bf7d567/main.py#L30
https://github.com/RenHuan1999/CVPR2023_P-MIL/blob/855e683f3a83ac1d582752b23e6914e49bf7d567/main.py#L127

=====================================
https://github.com/dingfengshi/TriDet
=====================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator,
        worker_init_fn=(worker_init_reset_seed if is_training else None),
        shuffle=is_training,
        drop_last=is_training,
        generator=generator,
        persistent_workers=True
    )
https://github.com/dingfengshi/TriDet/blob/764b8165b0d7eb3dfce29f126493564e15003d6e/libs/datasets/datasets.py#L23

======================================
https://github.com/LanglandsLin/ActCLR
======================================

Found 10 times
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=1,
        drop_last=False)
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=1,
        drop_last=False)
torch.utils.data.DataLoader(
                dataset=train_dataset,
                batch_size=self.arg.batch_size,
                num_workers=self.arg.num_worker * torchlight.ngpu(
                    self.arg.device),
                drop_last=True,
                sampler=self.train_sampler)
torch.utils.data.DataLoader(
                dataset=test_dataset,
                batch_size=self.arg.test_batch_size,
                num_workers=self.arg.num_worker * torchlight.ngpu(
                    self.arg.device),
                drop_last=True,
                sampler=self.test_sampler)
torch.utils.data.DataLoader(
                dataset=mem_train_dataset,
                batch_size=self.arg.batch_size,
                num_workers=self.arg.num_worker * torchlight.ngpu(
                    self.arg.device),
                drop_last=False,
                sampler=self.mem_train_sampler)
torch.utils.data.DataLoader(
                dataset=mem_test_dataset,
                batch_size=self.arg.test_batch_size,
                num_workers=self.arg.num_worker * torchlight.ngpu(
                    self.arg.device),
                drop_last=False,
                sampler=self.mem_test_sampler)
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=1,
        drop_last=False)
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=1,
        drop_last=False)
torch.utils.data.DataLoader(
                dataset=train_feeder(**self.arg.train_feeder_args),
                batch_size=self.arg.batch_size,
                shuffle=True,
                pin_memory=True,    # set True when memory is abundant
                num_workers=self.arg.num_worker * torchlight.ngpu(
                    self.arg.device),
                drop_last=False,
                worker_init_fn=init_seed)
torch.utils.data.DataLoader(
                dataset=test_feeder(**self.arg.test_feeder_args),
                batch_size=self.arg.test_batch_size,
                shuffle=False,
                pin_memory=True,
                num_workers=self.arg.num_worker * torchlight.ngpu(
                    self.arg.device),
                drop_last=False,
                worker_init_fn=init_seed)
https://github.com/LanglandsLin/ActCLR/blob/5d565f0f4304be97d46934d4a8c9a0db02ff78f3/feeder/preprocess_ntu.py#L47
https://github.com/LanglandsLin/ActCLR/blob/5d565f0f4304be97d46934d4a8c9a0db02ff78f3/feeder/preprocess_pku.py#L47
https://github.com/LanglandsLin/ActCLR/blob/5d565f0f4304be97d46934d4a8c9a0db02ff78f3/processor/processor.py#L79
https://github.com/LanglandsLin/ActCLR/blob/5d565f0f4304be97d46934d4a8c9a0db02ff78f3/processor/processor.py#L91
https://github.com/LanglandsLin/ActCLR/blob/5d565f0f4304be97d46934d4a8c9a0db02ff78f3/processor/processor.py#L103
https://github.com/LanglandsLin/ActCLR/blob/5d565f0f4304be97d46934d4a8c9a0db02ff78f3/processor/processor.py#L115
https://github.com/LanglandsLin/ActCLR/blob/5d565f0f4304be97d46934d4a8c9a0db02ff78f3/skeleton_recognition/feeder/preprocess_ntu.py#L47
https://github.com/LanglandsLin/ActCLR/blob/5d565f0f4304be97d46934d4a8c9a0db02ff78f3/skeleton_recognition/feeder/preprocess_pku.py#L47
https://github.com/LanglandsLin/ActCLR/blob/5d565f0f4304be97d46934d4a8c9a0db02ff78f3/skeleton_recognition/processor/processor.py#L91
https://github.com/LanglandsLin/ActCLR/blob/5d565f0f4304be97d46934d4a8c9a0db02ff78f3/skeleton_recognition/processor/processor.py#L103

======================================
https://github.com/daniel-code/TubeViT
======================================

Found 4 times
DataLoader(
        val_set,
        batch_size=batch_size,
        num_workers=num_workers,
        shuffle=False,
        drop_last=True,
        sampler=val_sampler,
    )
DataLoader(
        train_set,
        batch_size=batch_size,
        num_workers=num_workers,
        shuffle=True,
        drop_last=True,
        pin_memory=True,
    )
DataLoader(
        val_set,
        batch_size=batch_size,
        num_workers=num_workers,
        shuffle=False,
        drop_last=True,
        pin_memory=True,
    )
DataLoader(
        train_set,
        batch_size=batch_size,
        num_workers=num_workers,
        shuffle=False,
        drop_last=True,
        sampler=train_sampler,
    )
https://github.com/daniel-code/TubeViT/blob/776b1a4b93bd80d5f908c3df9a8bfb5ae5429b21/scripts/evaluate.py#L79
https://github.com/daniel-code/TubeViT/blob/776b1a4b93bd80d5f908c3df9a8bfb5ae5429b21/scripts/train.py#L106
https://github.com/daniel-code/TubeViT/blob/776b1a4b93bd80d5f908c3df9a8bfb5ae5429b21/scripts/train.py#L115
https://github.com/daniel-code/TubeViT/blob/776b1a4b93bd80d5f908c3df9a8bfb5ae5429b21/scripts/visualise_dataset.py#L65

===============================
https://github.com/brjathu/LART
===============================

Found 2 times
DataLoader(
            dataset=self.data_train,
            batch_size=self.hparams.cfg.train_batch_size,
            num_workers=self.hparams.cfg.train_num_workers,
            pin_memory=self.hparams.cfg.pin_memory,
            shuffle=True,
        )
DataLoader(
            dataset=self.data_val,
            batch_size=self.hparams.cfg.test_batch_size if not(self.hparams.cfg.full_seq_render) else 1,
            num_workers=self.hparams.cfg.test_num_workers,
            pin_memory=self.hparams.cfg.pin_memory,
            shuffle=False,
        )
https://github.com/brjathu/LART/blob/9d332425e8c28beb5702a2eaf57a635a1a203b1e/lart/datamodules/phalp_datamodule.py#L76
https://github.com/brjathu/LART/blob/9d332425e8c28beb5702a2eaf57a635a1a203b1e/lart/datamodules/phalp_datamodule.py#L85

================================
https://github.com/srama2512/NaQ
================================

Found 7 times
DataLoader(
        eval_dataset,
        collate_fn=Ego4d_collate,
        batch_size=opt.eval_bsz,
        num_workers=opt.num_workers,
        shuffle=False,
        pin_memory=opt.pin_memory,
    )
DataLoader(
        train_dataset,
        collate_fn=Ego4d_collate,
        batch_size=opt.bsz,
        num_workers=opt.num_workers,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        pin_memory=opt.pin_memory,
    )
DataLoader(
        val_dataset,
        collate_fn=Ego4d_collate,
        batch_size=opt.eval_bsz,
        num_workers=opt.num_workers,
        shuffle=False,
        pin_memory=opt.pin_memory,
    )
torch.utils.data.DataLoader(
        dataset=train_set,
        batch_size=configs.batch_size,
        shuffle=True,
        collate_fn=train_collate_fn,
    )
torch.utils.data.DataLoader(
        dataset=test_set,
        batch_size=configs.batch_size,
        shuffle=False,
        collate_fn=test_collate_fn,
    )
torch.utils.data.DataLoader(
        dataset=train_set,
        batch_size=configs.batch_size,
        shuffle=(train_sampler is None),
        pin_memory=True,
        num_workers=configs.data_loader_workers,
        collate_fn=train_collate_fn,
        sampler=train_sampler,
    )
torch.utils.data.DataLoader(
        dataset=test_set,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=configs.data_loader_workers,
        collate_fn=test_collate_fn,
        sampler=test_sampler,
    )
https://github.com/srama2512/NaQ/blob/ab133fa57f59244bdf18958d3c34f1d11a28efac/ReLER/ms_cm/inference_ego4d_slowfast.py#L345
https://github.com/srama2512/NaQ/blob/ab133fa57f59244bdf18958d3c34f1d11a28efac/ReLER/ms_cm/train_ego4d_slowfast.py#L220
https://github.com/srama2512/NaQ/blob/ab133fa57f59244bdf18958d3c34f1d11a28efac/ReLER/ms_cm/train_ego4d_slowfast.py#L231
https://github.com/srama2512/NaQ/blob/ab133fa57f59244bdf18958d3c34f1d11a28efac/ReLER/ms_cm/vslnet_utils/data_loader.py#L122
https://github.com/srama2512/NaQ/blob/ab133fa57f59244bdf18958d3c34f1d11a28efac/ReLER/ms_cm/vslnet_utils/data_loader.py#L133
https://github.com/srama2512/NaQ/blob/ab133fa57f59244bdf18958d3c34f1d11a28efac/VSLNet/utils/data_loader.py#L231
https://github.com/srama2512/NaQ/blob/ab133fa57f59244bdf18958d3c34f1d11a28efac/VSLNet/utils/data_loader.py#L255

============================================
https://github.com/BeSpontaneous/FFN-pytorch
============================================

Found 16 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler,
        drop_last=True)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler,
        drop_last=True)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
            persistent_workers=True
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
                persistent_workers=True
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
                persistent_workers=True
            )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
            persistent_workers=True
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
                persistent_workers=True
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
                persistent_workers=True
            )
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/2D_Network/main.py#L198
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/2D_Network/main.py#L203
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/2D_Network/main_FFN.py#L208
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/2D_Network/main_FFN.py#L213
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/3D_Network/build/lib/slowfast/datasets/loader.py#L117
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/3D_Network/build/lib/slowfast/datasets/loader.py#L138
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/3D_Network/build/lib/slowfast/datasets/loader.py#L165
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/3D_Network/slowfast/datasets/loader.py#L117
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/3D_Network/slowfast/datasets/loader.py#L138
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/3D_Network/slowfast/datasets/loader.py#L165
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/Transformer_Network/build/lib/slowfast/datasets/loader.py#L115
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/Transformer_Network/build/lib/slowfast/datasets/loader.py#L137
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/Transformer_Network/build/lib/slowfast/datasets/loader.py#L158
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/Transformer_Network/slowfast/datasets/loader.py#L115
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/Transformer_Network/slowfast/datasets/loader.py#L137
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/Transformer_Network/slowfast/datasets/loader.py#L158

==================================
https://github.com/TencentARC/TVTS
==================================

Found 11 times
DataLoader(sampler=self.valid_sampler, **self.init_kwargs)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
            dataset_test, sampler=sampler_test,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
            dataset_test, sampler=sampler_test,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
            dataset_test, sampler=sampler_test,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
DataLoader(sampler=self.valid_sampler, **self.init_kwargs)
https://github.com/TencentARC/TVTS/blob/290a63efd63f40012e0b6dafd9954dbac40db41d/v1/base/base_data_loader.py#L65
https://github.com/TencentARC/TVTS/blob/290a63efd63f40012e0b6dafd9954dbac40db41d/v1/downstream/run_class_finetuning.py#L275
https://github.com/TencentARC/TVTS/blob/290a63efd63f40012e0b6dafd9954dbac40db41d/v1/downstream/run_class_finetuning.py#L285
https://github.com/TencentARC/TVTS/blob/290a63efd63f40012e0b6dafd9954dbac40db41d/v1/downstream/run_class_finetuning.py#L296
https://github.com/TencentARC/TVTS/blob/290a63efd63f40012e0b6dafd9954dbac40db41d/v1/downstream/run_class_linear.py#L275
https://github.com/TencentARC/TVTS/blob/290a63efd63f40012e0b6dafd9954dbac40db41d/v1/downstream/run_class_linear.py#L285
https://github.com/TencentARC/TVTS/blob/290a63efd63f40012e0b6dafd9954dbac40db41d/v1/downstream/run_class_linear.py#L296
https://github.com/TencentARC/TVTS/blob/290a63efd63f40012e0b6dafd9954dbac40db41d/v1/downstream/run_class_zero.py#L275
https://github.com/TencentARC/TVTS/blob/290a63efd63f40012e0b6dafd9954dbac40db41d/v1/downstream/run_class_zero.py#L285
https://github.com/TencentARC/TVTS/blob/290a63efd63f40012e0b6dafd9954dbac40db41d/v1/downstream/run_class_zero.py#L296
https://github.com/TencentARC/TVTS/blob/290a63efd63f40012e0b6dafd9954dbac40db41d/v2/base/base_data_loader.py#L65

==================================
https://github.com/ruiwang2021/mvd
==================================

Found 4 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
            dataset_test, sampler=sampler_test,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        worker_init_fn=utils.seed_worker,
        collate_fn=collate_func,
    )
https://github.com/ruiwang2021/mvd/blob/45b877a6d18202a81528eeb31ff2da2c0e9ef2ea/run_class_finetuning.py#L298
https://github.com/ruiwang2021/mvd/blob/45b877a6d18202a81528eeb31ff2da2c0e9ef2ea/run_class_finetuning.py#L308
https://github.com/ruiwang2021/mvd/blob/45b877a6d18202a81528eeb31ff2da2c0e9ef2ea/run_class_finetuning.py#L319
https://github.com/ruiwang2021/mvd/blob/45b877a6d18202a81528eeb31ff2da2c0e9ef2ea/run_mvd_pretraining.py#L253

==============================
https://github.com/whwu95/BIKE
==============================

Found 7 times
DataLoader(val_data,
        batch_size=config.data.batch_size, num_workers=config.data.workers,
        sampler=val_sampler, pin_memory=True, drop_last=False)
DataLoader(val_data,
        batch_size=config.data.batch_size, num_workers=config.data.workers,
        sampler=val_sampler, pin_memory=True, drop_last=False)
DataLoader(val_data,
        batch_size=config.data.batch_size, num_workers=config.data.workers,
        sampler=val_sampler, pin_memory=True, drop_last=False)
DataLoader(train_data,
        batch_size=config.data.batch_size, num_workers=config.data.workers,
        sampler=train_sampler, drop_last=True)
DataLoader(val_data,
        batch_size=config.data.batch_size,num_workers=config.data.workers,
        sampler=val_sampler, drop_last=False)
DataLoader(train_data,
        batch_size=config.data.batch_size, num_workers=config.data.workers,
        sampler=train_sampler, drop_last=True)
DataLoader(val_data,
        batch_size=config.data.batch_size,num_workers=config.data.workers,
        sampler=val_sampler, drop_last=False)
https://github.com/whwu95/BIKE/blob/6f048f3b5813fd9353f8ff2cb64924d05ad1fa9e/test.py#L146
https://github.com/whwu95/BIKE/blob/6f048f3b5813fd9353f8ff2cb64924d05ad1fa9e/test_charades.py#L167
https://github.com/whwu95/BIKE/blob/6f048f3b5813fd9353f8ff2cb64924d05ad1fa9e/test_zeroshot.py#L147
https://github.com/whwu95/BIKE/blob/6f048f3b5813fd9353f8ff2cb64924d05ad1fa9e/train.py#L212
https://github.com/whwu95/BIKE/blob/6f048f3b5813fd9353f8ff2cb64924d05ad1fa9e/train.py#L217
https://github.com/whwu95/BIKE/blob/6f048f3b5813fd9353f8ff2cb64924d05ad1fa9e/train_attributes.py#L172
https://github.com/whwu95/BIKE/blob/6f048f3b5813fd9353f8ff2cb64924d05ad1fa9e/train_attributes.py#L187

=====================================
https://github.com/salesforce/paprika
=====================================

Found 8 times
DataLoader(adapter_train_dataset,
                                          batch_size=args.adapter_batch_size,
                                          sampler=adapter_train_sampler,
                                          num_workers=args.num_workers, 
                                          pin_memory=True)
DataLoader(adapter_train_dataset,
                                              batch_size=args.adapter_batch_size,
                                              shuffle=True,
                                              num_workers=args.num_workers, 
                                              # drop_last=True,
                                              pin_memory=True)
DataLoader(adapter_train_dataset,
                                          batch_size=args.adapter_batch_size,
                                          sampler=adapter_train_sampler,
                                          num_workers=args.num_workers, 
                                          pin_memory=True)
DataLoader(adapter_train_dataset,
                                              batch_size=args.adapter_batch_size,
                                              shuffle=True,
                                              num_workers=args.num_workers, 
                                              # drop_last=True,
                                              pin_memory=True)
DataLoader(downstream_train_dataset,
                                         batch_size=args.task_head_batch_size,
                                         shuffle=True,
                                         num_workers=args.num_workers, 
                                         collate_fn=downstream_train_dataset.custom_collate,
                                         pin_memory=True)
DataLoader(downstream_test_dataset,
                                        batch_size=args.task_head_batch_size,
                                        shuffle=True,
                                        num_workers=args.num_workers, 
                                        collate_fn=downstream_test_dataset.custom_collate,
                                        pin_memory=True)
DataLoader(downstream_train_dataset,
                                         batch_size=args.task_head_batch_size,
                                         shuffle=True,
                                         num_workers=args.num_workers, 
                                         collate_fn=downstream_train_dataset.custom_collate,
                                         pin_memory=True)
DataLoader(downstream_test_dataset,
                                        batch_size=args.task_head_batch_size,
                                        shuffle=True,
                                        num_workers=args.num_workers, 
                                        collate_fn=downstream_test_dataset.custom_collate,
                                        pin_memory=True)
https://github.com/salesforce/paprika/blob/cbefd714f3368733b1dc4dc3f2ee1e2ba69f57ed/engines/main_DS_pretrain.py#L75
https://github.com/salesforce/paprika/blob/cbefd714f3368733b1dc4dc3f2ee1e2ba69f57ed/engines/main_DS_pretrain.py#L89
https://github.com/salesforce/paprika/blob/cbefd714f3368733b1dc4dc3f2ee1e2ba69f57ed/engines/main_Paprika_pretrain.py#L74
https://github.com/salesforce/paprika/blob/cbefd714f3368733b1dc4dc3f2ee1e2ba69f57ed/engines/main_Paprika_pretrain.py#L88
https://github.com/salesforce/paprika/blob/cbefd714f3368733b1dc4dc3f2ee1e2ba69f57ed/engines/main_train_taskhead.py#L57
https://github.com/salesforce/paprika/blob/cbefd714f3368733b1dc4dc3f2ee1e2ba69f57ed/engines/main_train_taskhead.py#L67
https://github.com/salesforce/paprika/blob/cbefd714f3368733b1dc4dc3f2ee1e2ba69f57ed/engines/main_train_taskhead_no_adapter.py#L56
https://github.com/salesforce/paprika/blob/cbefd714f3368733b1dc4dc3f2ee1e2ba69f57ed/engines/main_train_taskhead_no_adapter.py#L66

==========================================
https://github.com/facebookresearch/HierVL
==========================================

Found 1 times
DataLoader(sampler=self.valid_sampler, **self.init_kwargs)
https://github.com/facebookresearch/HierVL/blob/998a8527ed6a3306e031ee73ed81978db6e99861/base/base_data_loader.py#L70

=======================================
https://github.com/aayushjr/HybridCLAUS
=======================================

Found 3 times
DataLoader(
        dataset=evalset,
        batch_size=TRAIN_BATCH_SIZE,
        num_workers=5,
        shuffle=False
    )
DataLoader(
        dataset=trainset,
        batch_size=TRAIN_BATCH_SIZE,
        num_workers=5,
        shuffle=True
    )
DataLoader(
        dataset=validationset,
        batch_size=VAL_BATCH_SIZE,
        num_workers=5,
        shuffle=False
    )
https://github.com/aayushjr/HybridCLAUS/blob/d3d7fd93c93a0ef9e4ec8ab30bcd3cc1a1bfc115/cluster_extract.py#L89
https://github.com/aayushjr/HybridCLAUS/blob/d3d7fd93c93a0ef9e4ec8ab30bcd3cc1a1bfc115/ucf101_cluster.py#L355
https://github.com/aayushjr/HybridCLAUS/blob/d3d7fd93c93a0ef9e4ec8ab30bcd3cc1a1bfc115/ucf101_cluster.py#L362

=================================
https://github.com/ktr-hubrt/UMIL
=================================

Found 5 times
DataLoader(
        train_data, sampler=sampler_train,
        batch_size=config.TRAIN.BATCH_SIZE,
        num_workers=8,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=config.TRAIN.BATCH_SIZE),
    )
DataLoader(
        train_data, sampler=sampler_train,
        batch_size=config.TRAIN.BATCH_SIZE_UMIL,
        num_workers=8,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=config.TRAIN.BATCH_SIZE_UMIL),
    )
DataLoader(
        val_data, sampler=sampler_val,
        batch_size=2,
        num_workers=16,
        pin_memory=True,
        drop_last=False,
        collate_fn=partial(mmcv_collate, samples_per_gpu=2),
    )
DataLoader(
        test_data, sampler=sampler_test,
        batch_size=64,
        num_workers=8,
        pin_memory=True,
        drop_last=False,
        collate_fn=partial(mmcv_collate, samples_per_gpu=2),
    )
DataLoader(
        train_data_test, sampler=train_sampler_test,
        batch_size=64,
        num_workers=16,
        pin_memory=True,
        drop_last=False,
        collate_fn=partial(mmcv_collate, samples_per_gpu=2),
    )
https://github.com/ktr-hubrt/UMIL/blob/0eaffdded3c8e9a0069a306ce93395b12eda5259/datasets/build.py#L426
https://github.com/ktr-hubrt/UMIL/blob/0eaffdded3c8e9a0069a306ce93395b12eda5259/datasets/build.py#L434
https://github.com/ktr-hubrt/UMIL/blob/0eaffdded3c8e9a0069a306ce93395b12eda5259/datasets/build.py#L463
https://github.com/ktr-hubrt/UMIL/blob/0eaffdded3c8e9a0069a306ce93395b12eda5259/datasets/build.py#L488
https://github.com/ktr-hubrt/UMIL/blob/0eaffdded3c8e9a0069a306ce93395b12eda5259/datasets/build.py#L514

=======================================
https://github.com/OpenGVLab/VideoMAEv2
=======================================

Found 4 times
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
        persistent_workers=True)
torch.utils.data.DataLoader(
            dataset_val,
            sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False,
            persistent_workers=True)
torch.utils.data.DataLoader(
            dataset_test,
            sampler=sampler_test,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False,
            persistent_workers=True)
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
        worker_init_fn=utils.seed_worker,
        persistent_workers=True)
https://github.com/OpenGVLab/VideoMAEv2/blob/9492db0047a9e30446a4093543a1a39dfe62b459/run_class_finetuning.py#L467
https://github.com/OpenGVLab/VideoMAEv2/blob/9492db0047a9e30446a4093543a1a39dfe62b459/run_class_finetuning.py#L478
https://github.com/OpenGVLab/VideoMAEv2/blob/9492db0047a9e30446a4093543a1a39dfe62b459/run_class_finetuning.py#L490
https://github.com/OpenGVLab/VideoMAEv2/blob/9492db0047a9e30446a4093543a1a39dfe62b459/run_mae_pretraining.py#L321

===============================
https://github.com/MCG-NJU/PDPP
===============================

Found 6 times
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=args.batch_size_val,
        shuffle=False,
        drop_last=False,
        num_workers=args.num_thread_reader,
        sampler=test_sampler,
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=(train_sampler is None),
        drop_last=True,
        num_workers=args.num_thread_reader,
        pin_memory=args.pin_memory,
        sampler=train_sampler,
    )
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=args.batch_size_val,
        shuffle=False,
        drop_last=False,
        num_workers=args.num_thread_reader,
        sampler=test_sampler,
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=(train_sampler is None),
        drop_last=True,
        num_workers=args.num_thread_reader,
        pin_memory=args.pin_memory,
        sampler=train_sampler,
    )
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=args.batch_size_val,
        shuffle=False,
        drop_last=False,
        num_workers=args.num_thread_reader,
        sampler=test_sampler,
    )
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=args.batch_size_val,
        shuffle=False,
        drop_last=False,
        num_workers=args.num_thread_reader,
        sampler=test_sampler,
    )
https://github.com/MCG-NJU/PDPP/blob/5c888c24368da694043f9aad89b8483e05c65467/inference.py#L195
https://github.com/MCG-NJU/PDPP/blob/5c888c24368da694043f9aad89b8483e05c65467/main_distributed.py#L100
https://github.com/MCG-NJU/PDPP/blob/5c888c24368da694043f9aad89b8483e05c65467/main_distributed.py#L109
https://github.com/MCG-NJU/PDPP/blob/5c888c24368da694043f9aad89b8483e05c65467/train_mlp.py#L216
https://github.com/MCG-NJU/PDPP/blob/5c888c24368da694043f9aad89b8483e05c65467/train_mlp.py#L225
https://github.com/MCG-NJU/PDPP/blob/5c888c24368da694043f9aad89b8483e05c65467/uncertain.py#L260

=========================================
https://github.com/dmoltisanti/air-cvpr23
=========================================

Found 4 times
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=False,
                              pin_memory=True, num_workers=args.workers)
DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False,
                             pin_memory=True, num_workers=args.workers)
DataLoader(train_dataset, batch_size=args.train_batch, shuffle=True,
                              pin_memory=True, num_workers=args.train_workers, collate_fn=collate_fn)
DataLoader(test_dataset, batch_size=args.test_batch, shuffle=False, pin_memory=True,
                             num_workers=args.test_workers, collate_fn=collate_fn)
https://github.com/dmoltisanti/air-cvpr23/blob/4b09522b605a7000c9d7f1defe8229615a998c17/extract_s3d_features.py#L135
https://github.com/dmoltisanti/air-cvpr23/blob/4b09522b605a7000c9d7f1defe8229615a998c17/extract_s3d_features.py#L137
https://github.com/dmoltisanti/air-cvpr23/blob/4b09522b605a7000c9d7f1defe8229615a998c17/run.py#L82
https://github.com/dmoltisanti/air-cvpr23/blob/4b09522b605a7000c9d7f1defe8229615a998c17/run.py#L88

=======================================
https://github.com/TalalWasim/Vita-CLIP
=======================================

Found 2 times
torch.utils.data.DataLoader(
        dataset, sampler=sampler, batch_size=batch_size_per_gpu,
        num_workers=args.num_workers, pin_memory=False, drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset, sampler=sampler, batch_size=1,
        num_workers=args.num_workers, pin_memory=False,
    )
https://github.com/TalalWasim/Vita-CLIP/blob/c85829935b4ff73f7e92f0b956f59a5a944a6569/video_dataset/dataloader.py#L115
https://github.com/TalalWasim/Vita-CLIP/blob/c85829935b4ff73f7e92f0b956f59a5a944a6569/video_dataset/dataloader.py#L152

=======================================
https://github.com/shengyangsun/HSC_VAD
=======================================

Found 2 times
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, num_workers=args.num_workers, drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, num_workers=args.num_workers, drop_last=True)
https://github.com/shengyangsun/HSC_VAD/blob/175c3154aeff2c959c706f9e99adaff7be0089d9/HSC_training.py#L80
https://github.com/shengyangsun/HSC_VAD/blob/175c3154aeff2c959c706f9e99adaff7be0089d9/motion_classifier_training.py#L67

=======================================
https://github.com/sayaknag/unbiasedSGG
=======================================

Found 5 times
torch.utils.data.DataLoader(AG_dataset, shuffle=False, num_workers=0, collate_fn=cuda_collate_fn)
torch.utils.data.DataLoader(AG_dataset_train, shuffle=True, num_workers=4,
                                               collate_fn=cuda_collate_fn, pin_memory=False)
torch.utils.data.DataLoader(AG_dataset_test, shuffle=False, num_workers=4,
                                              collate_fn=cuda_collate_fn, pin_memory=False)
torch.utils.data.DataLoader(dataset, batch_size=1,
                            shuffle=False, num_workers=0,
                            pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size,
                            sampler=sampler_batch, num_workers=args.num_workers)
https://github.com/sayaknag/unbiasedSGG/blob/d3a8fffb7d1ec7678a2c302ce413578eec7e3cbb/test.py#L23
https://github.com/sayaknag/unbiasedSGG/blob/d3a8fffb7d1ec7678a2c302ce413578eec7e3cbb/train.py#L49
https://github.com/sayaknag/unbiasedSGG/blob/d3a8fffb7d1ec7678a2c302ce413578eec7e3cbb/train.py#L53
https://github.com/sayaknag/unbiasedSGG/blob/d3a8fffb7d1ec7678a2c302ce413578eec7e3cbb/fasterRCNN/test_net.py#L229
https://github.com/sayaknag/unbiasedSGG/blob/d3a8fffb7d1ec7678a2c302ce413578eec7e3cbb/fasterRCNN/trainval_net.py#L220

================================
https://github.com/basilevh/tcow
================================

Found 6 times
torch.utils.data.DataLoader(
        final_train_dataset, batch_size=args.batch_size, num_workers=args.num_workers,
        shuffle=shuffle, worker_init_fn=_seed_worker, drop_last=True, pin_memory=False)
torch.utils.data.DataLoader(
        final_val_aug_dataset, batch_size=args.batch_size, num_workers=args.num_workers,
        shuffle=shuffle, worker_init_fn=_seed_worker, drop_last=True, pin_memory=False)
torch.utils.data.DataLoader(
        final_val_noaug_dataset, batch_size=args.batch_size, num_workers=args.num_workers,
        shuffle=shuffle, worker_init_fn=_seed_worker, drop_last=True, pin_memory=False)
torch.utils.data.DataLoader(
        final_test_dataset, batch_size=test_args.batch_size, num_workers=test_args.num_workers,
        shuffle=shuffle, worker_init_fn=_seed_worker, drop_last=False, pin_memory=False)
torch.utils.data.DataLoader(
            dataset,
            batch_sampler=batch_sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
https://github.com/basilevh/tcow/blob/28b80c192f7c7d714a3f632dbadb29aa01e549c4/data/data.py#L74
https://github.com/basilevh/tcow/blob/28b80c192f7c7d714a3f632dbadb29aa01e549c4/data/data.py#L77
https://github.com/basilevh/tcow/blob/28b80c192f7c7d714a3f632dbadb29aa01e549c4/data/data.py#L81
https://github.com/basilevh/tcow/blob/28b80c192f7c7d714a3f632dbadb29aa01e549c4/data/data.py#L160
https://github.com/basilevh/tcow/blob/28b80c192f7c7d714a3f632dbadb29aa01e549c4/third_party/TimeSformer/timesformer/datasets/loader.py#L91
https://github.com/basilevh/tcow/blob/28b80c192f7c7d714a3f632dbadb29aa01e549c4/third_party/TimeSformer/timesformer/datasets/loader.py#L102

=================================
https://github.com/Ali2500/TarViS
=================================

Found 5 times
DataLoader(dataset, 1, shuffle=args.shuffle, num_workers=args.num_workers, collate_fn=collate_fn_train)
DataLoader(
            seq_clip_generator, shuffle=False, batch_size=1, num_workers=0,
            collate_fn=collate_fn_inference
        )
DataLoader(
            seq_clip_generator, shuffle=False, batch_size=1, num_workers=args.num_workers,
            collate_fn=collate_fn_inference
        )
DataLoader(
            dataset, batch_sampler=batch_sampler, num_workers=num_workers, collate_fn=collate_fn_train,
            worker_init_fn=dataloder_worker_init
        )
DataLoader(dataset, sub_iter_batch_size_per_gpu, shuffle, sampler, num_workers=num_workers,
                          collate_fn=collate_fn)
https://github.com/Ali2500/TarViS/blob/8d5022abb0eb88dc94ae513ca63ee563c694461b/tarvis/data/visualizer.py#L303
https://github.com/Ali2500/TarViS/blob/8d5022abb0eb88dc94ae513ca63ee563c694461b/tarvis/demo/inferer.py#L91
https://github.com/Ali2500/TarViS/blob/8d5022abb0eb88dc94ae513ca63ee563c694461b/tarvis/inference/main.py#L246
https://github.com/Ali2500/TarViS/blob/8d5022abb0eb88dc94ae513ca63ee563c694461b/tarvis/training/main.py#L233
https://github.com/Ali2500/TarViS/blob/8d5022abb0eb88dc94ae513ca63ee563c694461b/tarvis/training/model_trainer/api.py#L454

=================================================
https://github.com/megvii-research/CVPR2023-DMVFN
=================================================

Found 3 times
DataLoader(val_dataset, batch_size=1, pin_memory=True, num_workers=1)
DataLoader(dataset, batch_size=args.batch_size, num_workers=4, pin_memory=True, drop_last=True, sampler=sampler)
DataLoader(val_dataset, batch_size=1, pin_memory=True, num_workers=1)
https://github.com/megvii-research/CVPR2023-DMVFN/blob/1ccc0a22096e41895a87d9c012823075c9f27b27/scripts/test.py#L63
https://github.com/megvii-research/CVPR2023-DMVFN/blob/1ccc0a22096e41895a87d9c012823075c9f27b27/scripts/train.py#L85
https://github.com/megvii-research/CVPR2023-DMVFN/blob/1ccc0a22096e41895a87d9c012823075c9f27b27/scripts/train.py#L119

=============================
https://github.com/difhnp/MAT
=============================

Found 4 times
DataLoader(
        trainset,
        batch_size=1,
        num_workers=0,
        shuffle=True,
        sampler=None,
        drop_last=True,
        collate_fn=lmdb_patchFT_collate_fn
    )
DataLoader(
        trainset,
        batch_size=1,
        num_workers=0,
        shuffle=True,
        sampler=None,
        drop_last=True,
        collate_fn=lmdb_translation_template_collate_fn
    )
DataLoader(train_set, batch_sampler=batch_sampler_train,
                                  num_workers=self.cfg.data.num_works,
                                  collate_fn=dataset_collate_fn)
DataLoader(val_set, batch_sampler=batch_sampler_val,
                                num_workers=self.cfg.data.num_works,
                                collate_fn=dataset_collate_fn)
https://github.com/difhnp/MAT/blob/58082cdd068d2a01f32c60afcd357f312c7f6f63/lib/dataset/lmdb_patch_fast_tracking.py#L192
https://github.com/difhnp/MAT/blob/58082cdd068d2a01f32c60afcd357f312c7f6f63/lib/dataset/lmdb_translation_template.py#L224
https://github.com/difhnp/MAT/blob/58082cdd068d2a01f32c60afcd357f312c7f6f63/lib/trainer/trainer.py#L445
https://github.com/difhnp/MAT/blob/58082cdd068d2a01f32c60afcd357f312c7f6f63/lib/trainer/trainer.py#L449

===========================================
https://github.com/MediaBrain-SJTU/EqMotion
===========================================

Found 13 times
torch.utils.data.DataLoader(dataset_train, batch_size=args.batch_size, shuffle=True, drop_last=True,
                                               num_workers=8)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, shuffle=False, drop_last=False,
                                              num_workers=8)
torch.utils.data.DataLoader(dataset_train, batch_size=args.batch_size, shuffle=True, drop_last=True,
                                               num_workers=8)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, shuffle=False, drop_last=False,
                                                num_workers=8)
torch.utils.data.DataLoader(dataset_train, batch_size=args.batch_size, shuffle=True, drop_last=True,
                                               num_workers=8)
torch.utils.data.DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, drop_last=False,
                                             num_workers=8)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, shuffle=False, drop_last=False,
                                              num_workers=8)
torch.utils.data.DataLoader(dataset_train, batch_size=args.batch_size, shuffle=True, drop_last=True)
torch.utils.data.DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(dataset_train, batch_size=args.batch_size, shuffle=True, drop_last=True)
torch.utils.data.DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, shuffle=False, drop_last=False)
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_eth_diverse.py#L149
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_eth_diverse.py#L151
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_h36m.py#L124
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_h36m.py#L134
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_md17.py#L98
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_md17.py#L103
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_md17.py#L108
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_nbody.py#L95
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_nbody.py#L98
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_nbody.py#L101
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_nbody_reasoning.py#L102
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_nbody_reasoning.py#L105
https://github.com/MediaBrain-SJTU/EqMotion/blob/5aec2e0b61c511fa93a24138dd90da59a089084b/main_nbody_reasoning.py#L108

==============================
https://github.com/TRI-ML/VOST
==============================

Found 3 times
DataLoader(seq_dataset,
                                            batch_size=1,
                                            shuffle=False,
                                            num_workers=cfg.TEST_WORKERS,
                                            pin_memory=True)
DataLoader(train_dataset,
                                       batch_size=int(cfg.TRAIN_BATCH_SIZE /
                                                      cfg.TRAIN_GPUS),
                                       shuffle=False,
                                       num_workers=cfg.DATA_WORKERS,
                                       pin_memory=True,
                                       sampler=self.train_sampler,
                                       drop_last=True,
                                       prefetch_factor=4)
DataLoader(seq_dataset,
                                    batch_size=1,
                                    shuffle=False,
                                    num_workers=cfg.TEST_WORKERS,
                                    pin_memory=True)
https://github.com/TRI-ML/VOST/blob/fe274574cb03c8a3ea83e121dd76e20b703781fd/aot_plus/networks/managers/evaluator.py#L242
https://github.com/TRI-ML/VOST/blob/fe274574cb03c8a3ea83e121dd76e20b703781fd/aot_plus/networks/managers/trainer.py#L379
https://github.com/TRI-ML/VOST/blob/fe274574cb03c8a3ea83e121dd76e20b703781fd/aot_plus/tools/demo.py#L173

================================
https://github.com/dvl-tum/SUSHI
================================

Found 1 times
DataLoader(bbox_dataset, batch_size=1000, pin_memory=True,
                                     num_workers=self.config.num_workers,
                                     worker_init_fn=seed_worker, generator=seed_generator(),)
https://github.com/dvl-tum/SUSHI/blob/803c20768cc9ec5de0a82c1587da1854d417801f/src/data/seq_processor.py#L300

================================
https://github.com/dvl-tum/GHOST
================================

Found 2 times
torch.utils.data.DataLoader(
        Dataset,
        batch_size=nci*nec,
        shuffle=False,
        sampler=sampler,
        num_workers=dataset_config.nb_workers,
        drop_last=True,
        pin_memory=True,
        worker_init_fn=seed_worker
    )
torch.utils.data.DataLoader(
        dataset_ev,
        batch_size=50,
        shuffle=False,
        num_workers=dataset_config.nb_workers,
        pin_memory=True,
        drop_last=False
    )
https://github.com/dvl-tum/GHOST/blob/755a5dacfcf4dd122a4cac73061b24e9c84f3c19/ReID/data/data_utility.py#L93
https://github.com/dvl-tum/GHOST/blob/755a5dacfcf4dd122a4cac73061b24e9c84f3c19/ReID/data/data_utility.py#L129

=====================================
https://github.com/0liliulei/Mask-VOS
=====================================

Found 4 times
DataLoader(dataset, batch_size=1, shuffle=False, \
                                    drop_last=False)
DataLoader(dataset, batch_size=1, shuffle=False, \
                                    drop_last=False)
DataLoader(dataset, batch_size=1, shuffle=False, \
                                    drop_last=False)
data.DataLoader(dataset, batch_size=batch_size, \
                               shuffle=shuffle, drop_last=drop_last, **kwargs)
https://github.com/0liliulei/Mask-VOS/blob/6276e914a33ce3fc8d85b408cf2cb80fcc703bdc/gen_mask.py#L215
https://github.com/0liliulei/Mask-VOS/blob/6276e914a33ce3fc8d85b408cf2cb80fcc703bdc/infer_mask.py#L258
https://github.com/0liliulei/Mask-VOS/blob/6276e914a33ce3fc8d85b408cf2cb80fcc703bdc/infer_vos.py#L338
https://github.com/0liliulei/Mask-VOS/blob/6276e914a33ce3fc8d85b408cf2cb80fcc703bdc/datasets/__init__.py#L65

=========================================
https://github.com/megvii-research/MOTRv2
=========================================

Found 2 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=collate_fn, num_workers=args.num_workers,
                                   pin_memory=True)
DataLoader(ListImgDataset(self.args.mot_path, self.img_list, det_db), 1, num_workers=2)
https://github.com/megvii-research/MOTRv2/blob/1aac7c3beb093d4b523419a197e9531597e01798/main.py#L219
https://github.com/megvii-research/MOTRv2/blob/1aac7c3beb093d4b523419a197e9531597e01798/submit_dance.py#L116

===================================
https://github.com/microsoft/VideoX
===================================

Found 11 times
DataLoader(test_dataset,
                            batch_size=config.TRAIN.BATCH_SIZE,
                            shuffle=False,
                            num_workers=config.WORKERS,
                            pin_memory=False,
                            collate_fn=datasets.collate_fn)
DataLoader(train_dataset,
                                    batch_size=config.TRAIN.BATCH_SIZE,
                                    shuffle=config.TRAIN.SHUFFLE,
                                    num_workers=config.WORKERS,
                                    pin_memory=False,
                                    collate_fn=datasets.collate_fn)
DataLoader(val_dataset,
                                    batch_size=config.TEST.BATCH_SIZE,
                                    shuffle=False,
                                    num_workers=config.WORKERS,
                                    pin_memory=False,
                                    collate_fn=datasets.collate_fn)
DataLoader(test_dataset,
                                    batch_size=config.TEST.BATCH_SIZE,
                                    shuffle=False,
                                    num_workers=config.WORKERS,
                                    pin_memory=False,
                                    collate_fn=datasets.collate_fn)
DataLoader(eval_train_dataset,
                                    batch_size=config.TEST.BATCH_SIZE,
                                    shuffle=False,
                                    num_workers=config.WORKERS,
                                    pin_memory=False,
                                    collate_fn=datasets.collate_fn)
DataLoader(train_dataset,
                              batch_size=cfg.TRAIN.BATCH_SIZE,
                              shuffle=cfg.TRAIN.SHUFFLE,
                              num_workers=cfg.WORKERS,
                              pin_memory=True,
                              drop_last=True,
                              collate_fn=collate_fn)
DataLoader(val_dataset,
                                batch_size=cfg.TEST.BATCH_SIZE,
                                shuffle=False,
                                num_workers=cfg.WORKERS,
                                pin_memory=True,
                                collate_fn=collate_fn)
DataLoader(test_dataset,
                             batch_size=cfg.TEST.BATCH_SIZE,
                             shuffle=False,
                             num_workers=cfg.WORKERS,
                             pin_memory=True,
                             collate_fn=collate_fn)
DataLoader(dataset,
                        batch_size=cfg.TEST.BATCH_SIZE,
                        shuffle=False,
                        num_workers=cfg.WORKERS,
                        pin_memory=True,
                        collate_fn=collate_fn)
DataLoader(
        train_data, sampler=sampler_train,
        batch_size=config.TRAIN.BATCH_SIZE,
        num_workers=16,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=config.TRAIN.BATCH_SIZE),
    )
DataLoader(
        val_data, sampler=sampler_val,
        batch_size=2,
        num_workers=16,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=2),
    )
https://github.com/microsoft/VideoX/blob/71ef17ad97a021e123ba41b78376e21ef4094f75/2D-TAN/moment_localization/test.py#L81
https://github.com/microsoft/VideoX/blob/71ef17ad97a021e123ba41b78376e21ef4094f75/2D-TAN/moment_localization/train.py#L108
https://github.com/microsoft/VideoX/blob/71ef17ad97a021e123ba41b78376e21ef4094f75/2D-TAN/moment_localization/train.py#L115
https://github.com/microsoft/VideoX/blob/71ef17ad97a021e123ba41b78376e21ef4094f75/2D-TAN/moment_localization/train.py#L122
https://github.com/microsoft/VideoX/blob/71ef17ad97a021e123ba41b78376e21ef4094f75/2D-TAN/moment_localization/train.py#L129
https://github.com/microsoft/VideoX/blob/71ef17ad97a021e123ba41b78376e21ef4094f75/MS-2D-TAN/moment_localization/run.py#L276
https://github.com/microsoft/VideoX/blob/71ef17ad97a021e123ba41b78376e21ef4094f75/MS-2D-TAN/moment_localization/run.py#L286
https://github.com/microsoft/VideoX/blob/71ef17ad97a021e123ba41b78376e21ef4094f75/MS-2D-TAN/moment_localization/run.py#L294
https://github.com/microsoft/VideoX/blob/71ef17ad97a021e123ba41b78376e21ef4094f75/MS-2D-TAN/moment_localization/run.py#L358
https://github.com/microsoft/VideoX/blob/71ef17ad97a021e123ba41b78376e21ef4094f75/X-CLIP/datasets/build.py#L276
https://github.com/microsoft/VideoX/blob/71ef17ad97a021e123ba41b78376e21ef4094f75/X-CLIP/datasets/build.py#L305

=================================================
https://github.com/wenguanwang/VOS_Correspondence
=================================================

Found 5 times
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=4)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=4)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=4, pin_memory=True)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=2)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=4)
https://github.com/wenguanwang/VOS_Correspondence/blob/37b98c8414066ee7f1268872933fa7fec314e0cd/eval_davis.py#L217
https://github.com/wenguanwang/VOS_Correspondence/blob/37b98c8414066ee7f1268872933fa7fec314e0cd/eval_davis.py#L220
https://github.com/wenguanwang/VOS_Correspondence/blob/37b98c8414066ee7f1268872933fa7fec314e0cd/eval_davis_2016.py#L41
https://github.com/wenguanwang/VOS_Correspondence/blob/37b98c8414066ee7f1268872933fa7fec314e0cd/eval_generic.py#L70
https://github.com/wenguanwang/VOS_Correspondence/blob/37b98c8414066ee7f1268872933fa7fec314e0cd/eval_youtube.py#L71

================================
https://github.com/SysCV/ovtrack
================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs
    )
https://github.com/SysCV/ovtrack/blob/612945335adac0026f853a879067a169702ce312/ovtrack/datasets/builder.py#L139

=================================================
https://github.com/TonyLianLong/RCF-UnsupVideoSeg
=================================================

Found 3 times
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.hparams.batch_size,
            num_workers=self.args.workers,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=self.hparams.batch_size,
            num_workers=self.args.workers,
            pin_memory=True,
            sampler=torch.utils.data.SequentialSampler(val_dataset),
            shuffle=False
        )
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=self.hparams.batch_size,
            num_workers=self.args.workers,
            pin_memory=True,
            sampler=torch.utils.data.SequentialSampler(test_dataset),
            shuffle=False
        )
https://github.com/TonyLianLong/RCF-UnsupVideoSeg/blob/d19a22fc5f06aa49971afaab991175ec0638383b/main.py#L330
https://github.com/TonyLianLong/RCF-UnsupVideoSeg/blob/d19a22fc5f06aa49971afaab991175ec0638383b/main.py#L348
https://github.com/TonyLianLong/RCF-UnsupVideoSeg/blob/d19a22fc5f06aa49971afaab991175ec0638383b/main.py#L363

=============================================
https://github.com/qianduoduolr/Spa-then-Temp
=============================================

Found 2 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=pin_memory,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        drop_last=drop_last,
        **kwargs)
https://github.com/qianduoduolr/Spa-then-Temp/blob/4c943628aae9b5afe4cc15eefc8a0eb800736515/vcl/datasets/builder.py#L148

===================================
https://github.com/NVlabs/BundleSDF
===================================

Found 4 times
DataLoader(self.train_dataset, sampler=sampler, **self.train_loader_params)
DataLoader(self.val_dataset, sampler=sampler, **self.val_loader_params)
DataLoader(dataset, sampler=sampler, **self.val_loader_params)
DataLoader(self.test_dataset, sampler=sampler, **self.test_loader_params)
https://github.com/NVlabs/BundleSDF/blob/77b28c86b7b27a2abb4398b86dc5ef62b8e4034c/BundleTrack/LoFTR/src/lightning/data.py#L297
https://github.com/NVlabs/BundleSDF/blob/77b28c86b7b27a2abb4398b86dc5ef62b8e4034c/BundleTrack/LoFTR/src/lightning/data.py#L305
https://github.com/NVlabs/BundleSDF/blob/77b28c86b7b27a2abb4398b86dc5ef62b8e4034c/BundleTrack/LoFTR/src/lightning/data.py#L310
https://github.com/NVlabs/BundleSDF/blob/77b28c86b7b27a2abb4398b86dc5ef62b8e4034c/BundleTrack/LoFTR/src/lightning/data.py#L316

===============================
https://github.com/rkyuca/medvt
===============================

Found 9 times
DataLoader(dataset_val, batch_sampler=batch_sampler_val, collate_fn=avos_utils.collate_fn,
                                 num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=misc.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, batch_sampler=batch_sampler_val, collate_fn=misc.collate_fn,
                                 num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                       num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                       collate_fn=avos_utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, batch_sampler=batch_sampler_val, collate_fn=avos_utils.collate_fn,
                                 num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=misc.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, batch_sampler=batch_sampler_val, collate_fn=misc.collate_fn,
                                 num_workers=args.num_workers)
DataLoader(dataset_val, batch_sampler=batch_sampler_val, collate_fn=utils.misc.collate_fn,
                                 num_workers=args.num_workers)
https://github.com/rkyuca/medvt/blob/555a462cffae9564be42df6414dbd72c11a36bba/inference_swin_medvt_a2d.py#L150
https://github.com/rkyuca/medvt/blob/555a462cffae9564be42df6414dbd72c11a36bba/train_resnet_medvt_avos.py#L245
https://github.com/rkyuca/medvt/blob/555a462cffae9564be42df6414dbd72c11a36bba/train_resnet_medvt_avos.py#L255
https://github.com/rkyuca/medvt/blob/555a462cffae9564be42df6414dbd72c11a36bba/train_swin_medvt_a2d.py#L277
https://github.com/rkyuca/medvt/blob/555a462cffae9564be42df6414dbd72c11a36bba/train_swin_medvt_a2d.py#L280
https://github.com/rkyuca/medvt/blob/555a462cffae9564be42df6414dbd72c11a36bba/train_swin_medvt_a2d.py#L295
https://github.com/rkyuca/medvt/blob/555a462cffae9564be42df6414dbd72c11a36bba/train_swin_medvt_avos.py#L233
https://github.com/rkyuca/medvt/blob/555a462cffae9564be42df6414dbd72c11a36bba/train_swin_medvt_avos.py#L244
https://github.com/rkyuca/medvt/blob/555a462cffae9564be42df6414dbd72c11a36bba/avos/evals.py#L702

========================================================================
https://github.com/Etienne-Meunier-Inria/ST-Space-Time-Flow-Segmentation
========================================================================

Found 5 times
DataLoader(self.dtrain, **self.kwargs_dataloader ,shuffle=self.shuffle_fit)
DataLoader(self.dval, **self.kwargs_dataloader, shuffle=self.shuffle_fit)
DataLoader(self.dtest, **self.kwargs_dataloader, shuffle=False)
DataLoader(dlm, collate_fn=dlm.collate_fn, batch_size=5)
DataLoader(dlm, collate_fn=dlm.collate_fn, batch_size=1, num_workers=4)
https://github.com/Etienne-Meunier-Inria/ST-Space-Time-Flow-Segmentation/blob/c825b81dd55d5aa2e8028934f4c9bc6d9ab72b3a/csvflowdatamodule/CsvDataset.py#L341
https://github.com/Etienne-Meunier-Inria/ST-Space-Time-Flow-Segmentation/blob/c825b81dd55d5aa2e8028934f4c9bc6d9ab72b3a/csvflowdatamodule/CsvDataset.py#L344
https://github.com/Etienne-Meunier-Inria/ST-Space-Time-Flow-Segmentation/blob/c825b81dd55d5aa2e8028934f4c9bc6d9ab72b3a/csvflowdatamodule/CsvDataset.py#L347
https://github.com/Etienne-Meunier-Inria/ST-Space-Time-Flow-Segmentation/blob/c825b81dd55d5aa2e8028934f4c9bc6d9ab72b3a/evaluationmodule/DataLoadingModule.py#L92
https://github.com/Etienne-Meunier-Inria/ST-Space-Time-Flow-Segmentation/blob/c825b81dd55d5aa2e8028934f4c9bc6d9ab72b3a/evaluationmodule/Evaluation.py#L40

===============================================
https://github.com/yuzhms/Streaming-Video-Model
===============================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/yuzhms/Streaming-Video-Model/blob/46989d2b6163234c9e0d76446a478c93625ca6ed/mmtrack/datasets/builder.py#L126

====================================
https://github.com/L1bra1/WeakMotion
====================================

Found 8 times
torch.utils.data.DataLoader(evalset, batch_size=1, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(trainset, batch_size=BATCH_SIZE, shuffle=True, num_workers=num_workers)
torch.utils.data.DataLoader(evalset, batch_size=1, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(trainset, batch_size=BATCH_SIZE, shuffle=True, num_workers=num_workers)
torch.utils.data.DataLoader(evalset, batch_size=1, shuffle=False, num_workers=num_workers)
DataLoader(dataset, batch_size=16, num_workers=0)
DataLoader(dataset, batch_size=16, num_workers=16)
DataLoader(dataset, batch_size=16, num_workers=0)
https://github.com/L1bra1/WeakMotion/blob/2b65e28ce270c9f8a4ace32a3a1579b14557ffc3/evaluate_WeakMotionNet.py#L93
https://github.com/L1bra1/WeakMotion/blob/2b65e28ce270c9f8a4ace32a3a1579b14557ffc3/train_PreSegNet.py#L147
https://github.com/L1bra1/WeakMotion/blob/2b65e28ce270c9f8a4ace32a3a1579b14557ffc3/train_PreSegNet.py#L157
https://github.com/L1bra1/WeakMotion/blob/2b65e28ce270c9f8a4ace32a3a1579b14557ffc3/train_WeakMotionNet.py#L152
https://github.com/L1bra1/WeakMotion/blob/2b65e28ce270c9f8a4ace32a3a1579b14557ffc3/train_WeakMotionNet.py#L165
https://github.com/L1bra1/WeakMotion/blob/2b65e28ce270c9f8a4ace32a3a1579b14557ffc3/gen_data/nuscenes/prediction/tests/run_covernet.py#L52
https://github.com/L1bra1/WeakMotion/blob/2b65e28ce270c9f8a4ace32a3a1579b14557ffc3/gen_data/nuscenes/prediction/tests/run_image_generation.py#L77
https://github.com/L1bra1/WeakMotion/blob/2b65e28ce270c9f8a4ace32a3a1579b14557ffc3/gen_data/nuscenes/prediction/tests/run_mtp.py#L63

=====================================================
https://github.com/lihaoliu-cambridge/scotch-and-soda
=====================================================

Found 2 times
DataLoader(visha_dataset, batch_size=batch_size, shuffle=True)
DataLoader(visha_dataset, batch_size=batch_size)
https://github.com/lihaoliu-cambridge/scotch-and-soda/blob/ac5740f54761e76387849339a149f6232184e0da/train.py#L39
https://github.com/lihaoliu-cambridge/scotch-and-soda/blob/ac5740f54761e76387849339a149f6232184e0da/train.py#L41

====================================
https://github.com/CASIA-IVA-Lab/ZBS
====================================

Found 3 times
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=None,
        collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
        worker_init_fn=worker_init_reset_seed,
    )
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers,
                                   pin_memory=True)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers,
                                 pin_memory=True)
https://github.com/CASIA-IVA-Lab/ZBS/blob/48935827c2cb0643ff978458c0056891574e3f5d/detic/data/custom_dataset_dataloader.py#L144
https://github.com/CASIA-IVA-Lab/ZBS/blob/48935827c2cb0643ff978458c0056891574e3f5d/third_party/Deformable-DETR/main.py#L169
https://github.com/CASIA-IVA-Lab/ZBS/blob/48935827c2cb0643ff978458c0056891574e3f5d/third_party/Deformable-DETR/main.py#L172

=================================
https://github.com/Jee-King/AFNet
=================================

Found 1 times
torch.utils.data.DataLoader(**dataloader_args)
https://github.com/Jee-King/AFNet/blob/90a54452024fb4e03b2987a790e1ee6feb8f10af/basicsr/data/__init__.py#L119

=========================================
https://github.com/thuliu-yt16/dualvector
=========================================

Found 4 times
DataLoader(dataset, batch_size=spec['batch_size'],
        shuffle=spec['shuffle'], num_workers=min(spec['batch_size'], os.cpu_count(), 32), pin_memory=True)
DataLoader(dataset, batch_size=spec['batch_size'],
        shuffle=spec['shuffle'], num_workers=12, pin_memory=True)
DataLoader(dataset, batch_size=spec['batch_size'],
        shuffle=spec['shuffle'], num_workers=spec['batch_size'], pin_memory=True)
DataLoader(dataset, batch_size=spec['batch_size'],
        shuffle=spec['shuffle'], num_workers=12, pin_memory=True)
https://github.com/thuliu-yt16/dualvector/blob/e88a18317188ce31f0d92bcf20e0f00efd125192/train.py#L66
https://github.com/thuliu-yt16/dualvector/blob/e88a18317188ce31f0d92bcf20e0f00efd125192/eval/eval_generation_multiref.py#L52
https://github.com/thuliu-yt16/dualvector/blob/e88a18317188ce31f0d92bcf20e0f00efd125192/eval/eval_reconstruction.py#L54
https://github.com/thuliu-yt16/dualvector/blob/e88a18317188ce31f0d92bcf20e0f00efd125192/eval/sample_font.py#L57

===================================
https://github.com/TangZJ/able-nerf
===================================

Found 6 times
DataLoader(self.train_dataset, shuffle=True, num_workers=self.cfg.train.num_workers, batch_size=self.cfg.train.batch_size, pin_memory=True)
DataLoader(self.val_dataset, shuffle=False, num_workers=self.cfg.val.num_workers, batch_size=self.cfg.val.im_batch_size, pin_memory=True)
DataLoader(self.test_dataset, shuffle=False, num_workers=self.cfg.val.num_workers, batch_size=self.cfg.val.im_batch_size, pin_memory=True)
DataLoader(test_dataset, 
        shuffle=False, 
        num_workers=cfg.val.num_workers, 
        batch_size=cfg.val.im_batch_size, 
        pin_memory=True)
DataLoader(dataset=train_data, batch_size=4, shuffle=False, pin_memory=False, num_workers=4)
DataLoader(dataset=train_data, batch_size=4, shuffle=False, pin_memory=False, num_workers=4)
https://github.com/TangZJ/able-nerf/blob/52092d3ce2e15f89b36ebc1f9e8725e23f7f16df/ablenerf_litsystem.py#L39
https://github.com/TangZJ/able-nerf/blob/52092d3ce2e15f89b36ebc1f9e8725e23f7f16df/ablenerf_litsystem.py#L43
https://github.com/TangZJ/able-nerf/blob/52092d3ce2e15f89b36ebc1f9e8725e23f7f16df/ablenerf_litsystem.py#L47
https://github.com/TangZJ/able-nerf/blob/52092d3ce2e15f89b36ebc1f9e8725e23f7f16df/eval.py#L43
https://github.com/TangZJ/able-nerf/blob/52092d3ce2e15f89b36ebc1f9e8725e23f7f16df/data_utils/datasets.py#L190
https://github.com/TangZJ/able-nerf/blob/52092d3ce2e15f89b36ebc1f9e8725e23f7f16df/models/utils.py#L540

====================================
https://github.com/robincourant/jaws
====================================

Found 7 times
DataLoader(
                list(range(size)),
                batch_size=1,
                collate_fn=self.collate_ind_calibs,
                shuffle=self.training,
                num_workers=5,
            )
DataLoader(
                list(range(size)),
                batch_size=1,
                collate_fn=self.collate,
                shuffle=self.training,
                num_workers=5,
            )
DataLoader(
                list(range(size)),
                batch_size=1,
                collate_fn=self.collate_ind_calibs,
                shuffle=self.training,
                num_workers=5,
            )
DataLoader(
                list(range(size)),
                batch_size=1,
                collate_fn=self.collate,
                shuffle=self.training,
                num_workers=5,
            )
torch.utils.data.DataLoader(
    # data_loader = RandomResolutionDataLoader(
        dataset,
        batch_size=images_per_batch,
        shuffle=shuffle,
        num_workers=cfg.WORKERS,
        pin_memory=cfg.PIN_MEMORY,
        sampler=train_sampler
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=images_per_batch,
        shuffle=False,
        num_workers=cfg.WORKERS,
        pin_memory=False
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=1,
        shuffle=False,
        num_workers=0,
        pin_memory=False
    )
https://github.com/robincourant/jaws/blob/8d83a6483a0c481e015d9f4587fef33f013edee9/jaws/src/datamodules/datasets/dnerf_dataset.py#L476
https://github.com/robincourant/jaws/blob/8d83a6483a0c481e015d9f4587fef33f013edee9/jaws/src/datamodules/datasets/dnerf_dataset.py#L484
https://github.com/robincourant/jaws/blob/8d83a6483a0c481e015d9f4587fef33f013edee9/jaws/src/datamodules/datasets/nerf_dataset.py#L433
https://github.com/robincourant/jaws/blob/8d83a6483a0c481e015d9f4587fef33f013edee9/jaws/src/datamodules/datasets/nerf_dataset.py#L441
https://github.com/robincourant/jaws/blob/8d83a6483a0c481e015d9f4587fef33f013edee9/lib/LitePose/lib/dataset/build.py#L80
https://github.com/robincourant/jaws/blob/8d83a6483a0c481e015d9f4587fef33f013edee9/lib/LitePose/lib/dataset/build.py#L97
https://github.com/robincourant/jaws/blob/8d83a6483a0c481e015d9f4587fef33f013edee9/lib/LitePose/lib/dataset/build.py#L116

================================
https://github.com/uhzoaix/NerVE
================================

Found 1 times
DataLoader(
            my_dataset, 
            collate_fn=ds_collate_fn,
            shuffle=do_shuffle, 
            batch_size=num_batch, 
            pin_memory=True, 
            num_workers=num_workers
    )
https://github.com/uhzoaix/NerVE/blob/20730c0415ebfb7f87c8124560bf87e29ac91806/data/__init__.py#L39

================================
https://github.com/cams-hoi/CAMS
================================

Found 2 times
DataLoader(self.train_dataset,
                                      batch_size=self.config.batch_size,
                                      sampler=self.train_sampler,
                                      num_workers=0)
DataLoader(self.val_dataset,
                                      batch_size=self.config.batch_size,
                                      sampler=self.val_sampler,
                                      num_workers=0)
https://github.com/cams-hoi/CAMS/blob/7de3961930238dae8f698cd6ba9b11abec5bb674/core/solvers/solver.py#L95
https://github.com/cams-hoi/CAMS/blob/7de3961930238dae8f698cd6ba9b11abec5bb674/core/solvers/solver.py#L100

=====================================
https://github.com/colorful-liyu/3DQD
=====================================

Found 5 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            drop_last=True,
            num_workers=int(opt.nThreads))
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            drop_last=drop_last,
            num_workers=int(opt.nThreads))
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=opt.batch_size,
            shuffle=False,
            drop_last=False,
            num_workers=int(opt.nThreads))
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=opt.batch_size,
            shuffle=False,
            drop_last=True,
            num_workers=int(opt.nThreads))
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=opt.batch_size,
            shuffle=True,
            drop_last=True,
            num_workers=int(opt.nThreads))
https://github.com/colorful-liyu/3DQD/blob/1c616db20ae3111ee98ecf4fb23be3c1f9fa66d4/datasets/dataloader.py#L15
https://github.com/colorful-liyu/3DQD/blob/1c616db20ae3111ee98ecf4fb23be3c1f9fa66d4/datasets/dataloader.py#L43
https://github.com/colorful-liyu/3DQD/blob/1c616db20ae3111ee98ecf4fb23be3c1f9fa66d4/datasets/dataloader.py#L50
https://github.com/colorful-liyu/3DQD/blob/1c616db20ae3111ee98ecf4fb23be3c1f9fa66d4/utils/demo_util.py#L79
https://github.com/colorful-liyu/3DQD/blob/1c616db20ae3111ee98ecf4fb23be3c1f9fa66d4/utils/demo_util.py#L107

=======================================
https://github.com/eladrich/latent-nerf
=======================================

Found 2 times
DataLoader(list(range(self.size)), batch_size=1, collate_fn=self.collate, shuffle=self.training,
                            num_workers=0)
DataLoader(list(range(self.size)), batch_size=1, collate_fn=self.collate, shuffle=self.training,
                            num_workers=0)
https://github.com/eladrich/latent-nerf/blob/f49ecefcd48972e69a28e3116fe95edf0fac4dc8/src/latent_nerf/training/nerf_dataset.py#L188
https://github.com/eladrich/latent-nerf/blob/f49ecefcd48972e69a28e3116fe95edf0fac4dc8/src/latent_paint/training/views_dataset.py#L77

===========================================
https://github.com/JLUtangchuan/Parts2Words
===========================================

Found 1 times
torch.utils.data.DataLoader(dataset=dset,
                                              batch_size=batch_size,
                                              shuffle=shuffle,
                                              pin_memory=True,
                                              collate_fn=collate_fn,
                                              num_workers=num_workers)
https://github.com/JLUtangchuan/Parts2Words/blob/da51ddebc26f0b4cddaf25d75240678d02bf0a29/parts2words/dataloaders/data.py#L165

=========================================
https://github.com/BunnySoCrazy/SECAD-Net
=========================================

Found 1 times
data_utils.DataLoader(
		occ_dataset,
		batch_size=specs["BatchSize"],
		shuffle=True,
		num_workers=4
	)
https://github.com/BunnySoCrazy/SECAD-Net/blob/059e6075871afa4b05c7d726dc0efbdee396f32e/train.py#L23

=================================================
https://github.com/ligoudaner377/homo_translucent
=================================================

Found 1 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.num_threads),
            pin_memory=True)
https://github.com/ligoudaner377/homo_translucent/blob/2e583df00b904bc612d3e82999d09efc8d1adf97/data/__init__.py#L75

==================================
https://github.com/ubc-vision/NFFB
==================================

Found 8 times
DataLoader(self.train_dataset,
                          num_workers=16,
                          persistent_workers=True,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.train_dataset,
                          num_workers=16,
                          persistent_workers=True,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.train_dataset,
                          num_workers=16,
                          persistent_workers=True,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                            num_workers=8,
                            batch_size=None,
                            pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
https://github.com/ubc-vision/NFFB/blob/59aec650e02f2401293e17d292bbbb73408beac7/train_img.py#L110
https://github.com/ubc-vision/NFFB/blob/59aec650e02f2401293e17d292bbbb73408beac7/train_img.py#L118
https://github.com/ubc-vision/NFFB/blob/59aec650e02f2401293e17d292bbbb73408beac7/train_img.py#L125
https://github.com/ubc-vision/NFFB/blob/59aec650e02f2401293e17d292bbbb73408beac7/train_nerf.py#L164
https://github.com/ubc-vision/NFFB/blob/59aec650e02f2401293e17d292bbbb73408beac7/train_nerf.py#L171
https://github.com/ubc-vision/NFFB/blob/59aec650e02f2401293e17d292bbbb73408beac7/train_sdf.py#L106
https://github.com/ubc-vision/NFFB/blob/59aec650e02f2401293e17d292bbbb73408beac7/train_sdf.py#L113
https://github.com/ubc-vision/NFFB/blob/59aec650e02f2401293e17d292bbbb73408beac7/train_sdf.py#L119

=============================================
https://github.com/dolev104/neural_congealing
=============================================

Found 1 times
DataLoader(dataset, config["batch_size"], shuffle=True, pin_memory=True)
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/train.py#L30

=====================================
https://github.com/DrZiji/VecFloorSeg
=====================================

Found 3 times
torch.utils.data.DataLoader([self.data], shuffle=False,
                                               collate_fn=lambda xs: xs[0],
                                               **self.kwargs)
DataLoader(range(self.num_nodes_dict[self.metapath[0][0]]),
                          collate_fn=self._sample, **kwargs)
DataLoader(range(self.adj.sparse_size(0)),
                          collate_fn=self.sample, **kwargs)
https://github.com/DrZiji/VecFloorSeg/blob/c3f51b39a4649c6b978898589a71df2e9c8159ba/torch_geometric/data/lightning_datamodule.py#L303
https://github.com/DrZiji/VecFloorSeg/blob/c3f51b39a4649c6b978898589a71df2e9c8159ba/torch_geometric/nn/models/metapath2vec.py#L140
https://github.com/DrZiji/VecFloorSeg/blob/c3f51b39a4649c6b978898589a71df2e9c8159ba/torch_geometric/nn/models/node2vec.py#L85

===================================================
https://github.com/yilundu/cross_attention_renderer
===================================================

Found 8 times
DataLoader(val_dataset, batch_size=1, shuffle=True, drop_last=True, num_workers=4, pin_memory=False, worker_init_fn=worker_init_fn)
DataLoader(val_dataset, batch_size=1, shuffle=True, drop_last=True, num_workers=0, pin_memory=False, worker_init_fn=worker_init_fn)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True,
                                  drop_last=True, num_workers=8, pin_memory=False, worker_init_fn=worker_init_fn)
DataLoader(val_dataset, batch_size=8, shuffle=True, drop_last=True, num_workers=4, pin_memory=False, worker_init_fn=worker_init_fn)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True,
                                  drop_last=True, num_workers=0, worker_init_fn=worker_init_fn)
DataLoader(val_dataset, batch_size=1, shuffle=True, drop_last=False, num_workers=0, worker_init_fn=worker_init_fn)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True,
                                  drop_last=True, num_workers=8, pin_memory=False, worker_init_fn=worker_init_fn)
DataLoader(val_dataset, batch_size=8, shuffle=True, drop_last=True, num_workers=4, pin_memory=False, worker_init_fn=worker_init_fn)
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/experiment_scripts/eval_acid.py#L95
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/experiment_scripts/eval_realestate10k.py#L105
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/experiment_scripts/train_acid.py#L87
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/experiment_scripts/train_acid.py#L94
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/experiment_scripts/train_co3d.py#L88
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/experiment_scripts/train_co3d.py#L94
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/experiment_scripts/train_realestate10k.py#L80
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/experiment_scripts/train_realestate10k.py#L86

===================================
https://github.com/minglllli/CBAFed
===================================

Found 2 times
data.DataLoader(dataset=ds, batch_size=train_bs, drop_last=False, shuffle=True, num_workers=8)
data.DataLoader(dataset=ds, batch_size=train_bs, drop_last=False, shuffle=False, num_workers=8)
https://github.com/minglllli/CBAFed/blob/4f2eef4f3764eba4ac94a1709fbc1b8caa967ac5/cifar_load.py#L286
https://github.com/minglllli/CBAFed/blob/4f2eef4f3764eba4ac94a1709fbc1b8caa967ac5/cifar_load.py#L293

=========================================
https://github.com/nku-zhichengzhang/CTEN
=========================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=workers,
        pin_memory=True,
        drop_last=opt.dl
    )
https://github.com/nku-zhichengzhang/CTEN/blob/90131de50c6671edd5d688e32a30a38b6c60edf4/core/dataset.py#L40

===================================================
https://github.com/tinglyfeng/sentiment_pretraining
===================================================

Found 5 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=batch_size, shuffle=(train_sampler is None),
        num_workers=8, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=batch_size, shuffle=False,
        num_workers=8, pin_memory=True)
DataLoader(data,64)
torch.utils.data.DataLoader(
        train_dataset, batch_size=cfg['loader']['batch_size'], shuffle=(train_sampler is None),
        num_workers=cfg['loader']['workers'], pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=cfg['loader']['batch_size'],
        shuffle = False,
        num_workers=cfg['loader']['workers'],
        pin_memory=True
    )
https://github.com/tinglyfeng/sentiment_pretraining/blob/da7e482aaa7fa18cee28d35ca98d7262cfcd9edb/amalgamation/loader.py#L31
https://github.com/tinglyfeng/sentiment_pretraining/blob/da7e482aaa7fa18cee28d35ca98d7262cfcd9edb/amalgamation/loader.py#L35
https://github.com/tinglyfeng/sentiment_pretraining/blob/da7e482aaa7fa18cee28d35ca98d7262cfcd9edb/pre_training/datasets.py#L135
https://github.com/tinglyfeng/sentiment_pretraining/blob/da7e482aaa7fa18cee28d35ca98d7262cfcd9edb/pre_training/loader.py#L18
https://github.com/tinglyfeng/sentiment_pretraining/blob/da7e482aaa7fa18cee28d35ca98d7262cfcd9edb/pre_training/loader.py#L22

===============================
https://github.com/downdric/MSD
===============================

Found 4 times
data.DataLoader(train_set, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers)
data.DataLoader(test_set, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers)
data.DataLoader(train_set, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers)
data.DataLoader(test_set, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers)
https://github.com/downdric/MSD/blob/6c4d8efd74c67d9974fea8d895a49436caafd689/main.py#L136
https://github.com/downdric/MSD/blob/6c4d8efd74c67d9974fea8d895a49436caafd689/main.py#L137
https://github.com/downdric/MSD/blob/6c4d8efd74c67d9974fea8d895a49436caafd689/models/vision_models.py#L33
https://github.com/downdric/MSD/blob/6c4d8efd74c67d9974fea8d895a49436caafd689/models/vision_models.py#L34

===================================
https://github.com/showlab/afformer
===================================

Found 3 times
DataLoader(self.dataset_train, batch_size=self.batch_size_per_gpu, 
            collate_fn=self.dataset_train.collate_fn, shuffle=True, 
            num_workers=self.num_workers, pin_memory=True, drop_last=True)
DataLoader(self.dataset_val, batch_size=self.batch_size_per_gpu, 
            collate_fn=self.dataset_val.collate_fn, shuffle=False, 
            num_workers=self.num_workers, pin_memory=True, drop_last=True)
DataLoader(self.dataset, batch_size=1, 
            shuffle=False, num_workers=1, drop_last=self.drop_last, collate_fn=lambda x:x)
https://github.com/showlab/afformer/blob/c4dc71788af77afa15ea96a30391c4a7e726889f/main.py#L72
https://github.com/showlab/afformer/blob/c4dc71788af77afa15ea96a30391c4a7e726889f/main.py#L77
https://github.com/showlab/afformer/blob/c4dc71788af77afa15ea96a30391c4a7e726889f/affominer/miner.py#L265

==================================
https://github.com/FangyunWei/SLRT
==================================

Found 12 times
DataLoader(
        h2s_dataset,
        batch_size=args.batch_size// args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(sampler is None),
        sampler=sampler,
        drop_last=True,
    )
DataLoader(
        h2s_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        ph_train_dataset,
        batch_size=args.batch_size// args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(sampler is None),
        sampler=sampler,
        drop_last=True,
    )
DataLoader(
        hp_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        train_dataset,
        batch_size=args.batch_size// args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(sampler is None),
        sampler=sampler,
        drop_last=True,
    )
DataLoader(
        testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
torch.utils.data.DataLoader(
                dataloader_train,
                batch_size=args.train_batch,
                collate_fn=train_collate,
                sampler=sampler_train,
                shuffle=data_shuffle,
                **loader_kwargs,
            )
torch.utils.data.DataLoader(
            dataloader_val,
            batch_size=args.test_batch,
            shuffle=False,
            sampler=sampler_val,
            collate_fn=dataloader_val.collate_fn,
            **loader_kwargs,
        )
torch.utils.data.DataLoader(
                dataloader_train,
                batch_size=args.train_batch,
                collate_fn=train_collate,
                sampler=sampler_train,
                shuffle=data_shuffle,
                **loader_kwargs,
            )
torch.utils.data.DataLoader(
            dataloader_val,
            batch_size=args.test_batch,
            shuffle=False,
            sampler=sampler_val,
            collate_fn=dataloader_val.collate_fn,
            **loader_kwargs,
        )
torch.utils.data.DataLoader(dataset,
                                             collate_fn = collate_func,
                                             batch_size = cfg['training']['batch_size'],
                                             num_workers = cfg['training'].get('num_workers',2),
                                             sampler = sampler
                                             )
torch.utils.data.DataLoader(dataset,
                                             collate_fn=lambda x:collate_fn_(
                                                 inputs=x,
                                                 task=cfg['task'],
                                                 data_cfg=cfg['data'],
                                                 is_train=(mode=='train'),
                                                 text_tokenizer=text_tokenizer,
                                                 gloss_tokenizer=gloss_tokenizer,
                                                 name2keypoint=dataset.name2keypoints),
                                             batch_size=cfg['training']['batch_size'],
                                             num_workers=cfg['training'].get('num_workers',2),
                                             sampler=sampler,
                                             )
https://github.com/FangyunWei/SLRT/blob/c79439b9293daae7c633155f5c96470c89a54f20/CiCo/CLCL/dataloaders/data_dataloaders.py#L35
https://github.com/FangyunWei/SLRT/blob/c79439b9293daae7c633155f5c96470c89a54f20/CiCo/CLCL/dataloaders/data_dataloaders.py#L62
https://github.com/FangyunWei/SLRT/blob/c79439b9293daae7c633155f5c96470c89a54f20/CiCo/CLCL/dataloaders/data_dataloaders.py#L91
https://github.com/FangyunWei/SLRT/blob/c79439b9293daae7c633155f5c96470c89a54f20/CiCo/CLCL/dataloaders/data_dataloaders.py#L118
https://github.com/FangyunWei/SLRT/blob/c79439b9293daae7c633155f5c96470c89a54f20/CiCo/CLCL/dataloaders/data_dataloaders.py#L148
https://github.com/FangyunWei/SLRT/blob/c79439b9293daae7c633155f5c96470c89a54f20/CiCo/CLCL/dataloaders/data_dataloaders.py#L175
https://github.com/FangyunWei/SLRT/blob/c79439b9293daae7c633155f5c96470c89a54f20/CiCo/I3D_feature_extractor/datasets/multidataloader.py#L64
https://github.com/FangyunWei/SLRT/blob/c79439b9293daae7c633155f5c96470c89a54f20/CiCo/I3D_feature_extractor/datasets/multidataloader.py#L77
https://github.com/FangyunWei/SLRT/blob/c79439b9293daae7c633155f5c96470c89a54f20/CiCo/I3D_trainer/datasets/multidataloader.py#L72
https://github.com/FangyunWei/SLRT/blob/c79439b9293daae7c633155f5c96470c89a54f20/CiCo/I3D_trainer/datasets/multidataloader.py#L85
https://github.com/FangyunWei/SLRT/blob/c79439b9293daae7c633155f5c96470c89a54f20/NLA-SLR/dataset/Dataloader.py#L60
https://github.com/FangyunWei/SLRT/blob/c79439b9293daae7c633155f5c96470c89a54f20/TwoStreamNetwork/dataset/Dataloader.py#L74

==================================
https://github.com/noahcao/OC_SORT
==================================

Found 15 times
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_dancetrack_test.py#L136
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_dancetrack_val.py#L136
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_l_mix_det.py#L122
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_m_mix_det.py#L122
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_nano_mix_det.py#L142
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_s_mix_det.py#L122
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_tiny_mix_det.py#L123
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_x_ablation.py#L122
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_x_ch.py#L122
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_x_mix_det.py#L122
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_x_mix_mot20_ch.py#L123
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_x_mot17_ablation_half_train.py#L122
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_x_mot17_half.py#L122
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/exps/example/mot/yolox_x_mot17_train.py#L122
https://github.com/noahcao/OC_SORT/blob/7a390a5f35dbbb45df6cd584588c216aea527248/yolox/exp/yolox_base.py#L229

============================
https://github.com/TPCD/DCCL
============================

Found 36 times
DataLoader(FakeLabelDataset(pseudo_labeled_dataset, root=None, transform=train_transform),
                               batch_size=args.batch_size, num_workers=args.num_workers, sampler=PK_sampler,
                               shuffle=False, pin_memory=True, drop_last=True)
DataLoader(FakeLabelDataset(pseudo_labeled_dataset, root=None, transform=train_transform),
                                   batch_size=args.batch_size, num_workers=args.num_workers, sampler=PK_sampler,
                                   shuffle=False, pin_memory=True, drop_last=True)
DataLoader(train_dataset, num_workers=args.num_workers, batch_size=args.batch_size, shuffle=False,
                              sampler=sampler, drop_last=True)
DataLoader(unlabelled_train_examples_test, num_workers=args.num_workers,
                                            batch_size=args.batch_size, shuffle=True)
DataLoader(test_dataset, num_workers=args.num_workers,
                                 batch_size=args.batch_size, shuffle=True)
DataLoader(unlabelled_train_examples_test, num_workers=args.num_workers,
                                            batch_size=args.batch_size, shuffle=False)
DataLoader(test_dataset, num_workers=args.num_workers,
                                 batch_size=args.batch_size, shuffle=False)
DataLoader(labelled_train_examples, num_workers=args.num_workers,
                                       batch_size=args.batch_size, shuffle=False)
DataLoader(labelled_train_examples_attribute_dataset,
                                                          num_workers=args.num_workers,
                                                          batch_size=args.batch_size, shuffle=False)
DataLoader(whole_train_test_dataset, num_workers=args.num_workers,
                                         batch_size=args.batch_size, shuffle=False)
DataLoader(ssk_test_dataset, num_workers=args.num_workers,
                                 batch_size=args.batch_size, shuffle=False)
DataLoader(unlabelled_train_examples_test, num_workers=args.num_workers,
                                        batch_size=args.batch_size, shuffle=False)
DataLoader(test_dataset, num_workers=args.num_workers,
                                      batch_size=args.batch_size, shuffle=False)
DataLoader(train_dataset, num_workers=args.num_workers,
                              batch_size=args.batch_size, shuffle=False)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers)
DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers)
DataLoader(unlabelled_train_examples_test, num_workers=args.num_workers,
                                        batch_size=args.batch_size, shuffle=False)
DataLoader(test_dataset, num_workers=args.num_workers,
                                      batch_size=args.batch_size, shuffle=False)
DataLoader(train_dataset, num_workers=args.num_workers,
                              batch_size=args.batch_size, shuffle=False)
DataLoader(unlabelled_train_examples_test, num_workers=args.num_workers,
                                         batch_size=args.batch_size, shuffle=False)
DataLoader(test_dataset, num_workers=args.num_workers,
                             batch_size=args.batch_size, shuffle=False)
DataLoader(train_dataset, num_workers=args.num_workers,
                              batch_size=args.batch_size, shuffle=False)
DataLoader(train_dataset, num_workers=args.num_workers, batch_size=args.batch_size, shuffle=False,
                                sampler=sampler, drop_last=True)
DataLoader(unlabelled_train_examples_test, num_workers=args.num_workers,
                                            batch_size=args.batch_size, shuffle=False)
DataLoader(test_dataset, num_workers=args.num_workers,
                                        batch_size=args.batch_size, shuffle=False)
DataLoader(labelled_train_examples, num_workers=args.num_workers,
                                            batch_size=args.batch_size, shuffle=False)
DataLoader(whole_train_test_dataset, num_workers=args.num_workers,
                                            batch_size=args.batch_size, shuffle=False)
DataLoader(subset, num_workers=args.num_workers,
                                        batch_size=args.batch_size, shuffle=False)
DataLoader(train_dataset, num_workers=args.num_workers, batch_size=args.batch_size, shuffle=False,
                              sampler=sampler, drop_last=True)
DataLoader(unlabelled_train_examples_test, num_workers=args.num_workers,
                                            batch_size=args.batch_size, shuffle=True)
DataLoader(test_dataset, num_workers=args.num_workers,
                                        batch_size=args.batch_size, shuffle=True)
DataLoader(unlabelled_train_examples_test, num_workers=args.num_workers,
                                        batch_size=args.batch_size, shuffle=False)
DataLoader(test_dataset, num_workers=args.num_workers,
                                        batch_size=args.batch_size, shuffle=False)
DataLoader(labelled_train_examples, num_workers=args.num_workers,
                                        batch_size=args.batch_size, shuffle=False)
DataLoader(whole_train_test_dataset,num_workers=args.num_workers,
                                        batch_size=args.batch_size, shuffle=False)
DataLoader(subset, num_workers=args.num_workers,
                                        batch_size=args.batch_size//args.experts_num, sampler=sub_sampler, shuffle=False, drop_last=True)
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/G0_CUB200.py#L192
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/G0_CUB200.py#L244
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/G0_CUB200.py#L761
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/G0_CUB200.py#L764
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/G0_CUB200.py#L766
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/G0_CUB200.py#L769
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/G0_CUB200.py#L771
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/G0_CUB200.py#L774
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/G0_CUB200.py#L776
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/G0_CUB200.py#L779
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/G0_CUB200.py#L782
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/ssk_means.py#L168
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/ssk_means.py#L170
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/ssk_means.py#L172
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/clustering/extract_features.py#L213
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/clustering/extract_features.py#L214
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/clustering/ssk_means.py#L168
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/clustering/ssk_means.py#L170
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/clustering/ssk_means.py#L172
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/estimate_k/estimate_k.py#L278
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/estimate_k/estimate_k.py#L280
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/estimate_k/estimate_k.py#L282
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/partitioning/kmeans_subset.py#L156
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/partitioning/kmeans_subset.py#L158
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/partitioning/kmeans_subset.py#L160
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/partitioning/kmeans_subset.py#L162
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/partitioning/kmeans_subset.py#L164
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/partitioning/subset_len.py#L123
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/representation_learning/representation_learning.py#L622
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/representation_learning/representation_learning.py#L625
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/representation_learning/representation_learning.py#L627
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/representation_learning/representation_learning.py#L630
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/representation_learning/representation_learning.py#L632
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/representation_learning/representation_learning.py#L635
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/representation_learning/representation_learning.py#L637
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/methods/representation_learning/representation_learning.py#L734

===============================================
https://github.com/hyunjunChhoi/Balanced_Energy
===============================================

Found 20 times
torch.utils.data.DataLoader(test_data, batch_size=args.test_bs, shuffle=False,
                                          num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(train_data, batch_size=args.test_bs, shuffle=False, 
                                          num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(ood_data, batch_size=args.test_bs, shuffle=False,
                                             num_workers=4, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(test_data, batch_size=args.test_bs, shuffle=False,
                                          num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(train_data, batch_size=args.test_bs, shuffle=False, 
                                          num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(ood_data, batch_size=args.test_bs, shuffle=False,
                                             num_workers=4, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(
    train_data_in,
    batch_size=args.batch_size, shuffle=True,
    num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
    ood_data,
    batch_size=args.oe_batch_size, shuffle=False,
    num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
    test_data,
    batch_size=args.batch_size, shuffle=False,
    num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
    ood_data_inf,
    batch_size=args.batch_size, shuffle=False,
    num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
    train_data_in,
    batch_size=args.batch_size, shuffle=True,
    num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
    ood_data,
    batch_size=args.oe_batch_size, shuffle=False,
    num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
    test_data,
    batch_size=args.batch_size, shuffle=False,
    num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
    ood_data_inf,
    batch_size=args.batch_size, shuffle=False,
    num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
    train_data_in,
    batch_size=args.batch_size, shuffle=True,
    num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
    ood_data,
    batch_size=args.oe_batch_size, shuffle=False,
    num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
    test_data,
    batch_size=args.batch_size, shuffle=False,
    num_workers=args.prefetch, pin_memory=True)
torch.utils.data.DataLoader(
    ood_data_inf,
    batch_size=args.batch_size, shuffle=False,
    num_workers=args.prefetch, pin_memory=True)
DataLoader(train_set, batch_size=train_batch_size, shuffle=True, num_workers=num_workers,
                                drop_last=True, pin_memory=True)
data.DataLoader(train_dataset,
                                   batch_size=batch_size,
                                   num_workers=config.num_workers,
                                   drop_last=True,
                                   shuffle=is_shuffle,
                                   pin_memory=True,
                                   sampler=train_sampler,
                                   collate_fn=collate_fn)
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_test_SC_res.py#L78
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_test_SC_res.py#L231
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_test_SC_res.py#L346
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_test_SC_wide.py#L78
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_test_SC_wide.py#L231
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_test_SC_wide.py#L346
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_train_im_res.py#L125
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_train_im_res.py#L130
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_train_im_res.py#L135
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_train_im_res.py#L140
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_train_im_wide.py#L124
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_train_im_wide.py#L129
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_train_im_wide.py#L134
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_train_im_wide.py#L139
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_train_res.py#L126
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_train_res.py#L131
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_train_res.py#L136
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/inf_train_res.py#L141
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/classification/utils/tinyimages_300k.py#L47
https://github.com/hyunjunChhoi/Balanced_Energy/blob/62260c7fbc941d36d1c7dfb76d3c9a26972606da/segmentation/code/dataset/data_loader.py#L122

==========================================
https://github.com/IDEA-Research/Lite-DETR
==========================================

Found 2 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, 1, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
https://github.com/IDEA-Research/Lite-DETR/blob/6392353c1f37ece35844d6578faffe307c9e737d/main.py#L214
https://github.com/IDEA-Research/Lite-DETR/blob/6392353c1f37ece35844d6578faffe307c9e737d/main.py#L216

========================================
https://github.com/aneeshan95/Sketch_LVM
========================================

Found 2 times
DataLoader(dataset=train_dataset, batch_size=opts.batch_size, num_workers=opts.workers)
DataLoader(dataset=val_dataset, batch_size=opts.batch_size, num_workers=opts.workers)
https://github.com/aneeshan95/Sketch_LVM/blob/ca33be98cb9f986813f611c997ceaa474b0bc96e/experiments/LN_prompt.py#L19
https://github.com/aneeshan95/Sketch_LVM/blob/ca33be98cb9f986813f611c997ceaa474b0bc96e/experiments/LN_prompt.py#L20

======================================================
https://github.com/PKU-ICST-MIPL/PosterLayout-CVPR2023
======================================================

Found 5 times
DataLoader(testing_set, num_workers=16, batch_size=test_batch_size, shuffle=False)
DataLoader(training_set, num_workers=16, batch_size=train_batch_size, shuffle=True)
DataLoader(testing_set, num_workers=16, batch_size=test_batch_size, shuffle=False)
DataLoader(training_set, num_workers=16, batch_size=train_batch_size, shuffle=True)
DataLoader(testing_set, num_workers=16, batch_size=test_batch_size, shuffle=False)
https://github.com/PKU-ICST-MIPL/PosterLayout-CVPR2023/blob/ede13bf1eff29deee40371ee43a4b17c63a97e31/dataloader.py#L120
https://github.com/PKU-ICST-MIPL/PosterLayout-CVPR2023/blob/ede13bf1eff29deee40371ee43a4b17c63a97e31/dataloader.py#L126
https://github.com/PKU-ICST-MIPL/PosterLayout-CVPR2023/blob/ede13bf1eff29deee40371ee43a4b17c63a97e31/infer.py#L73
https://github.com/PKU-ICST-MIPL/PosterLayout-CVPR2023/blob/ede13bf1eff29deee40371ee43a4b17c63a97e31/main.py#L162
https://github.com/PKU-ICST-MIPL/PosterLayout-CVPR2023/blob/ede13bf1eff29deee40371ee43a4b17c63a97e31/main.py#L165

==================================
https://github.com/raymin0223/LoGo
==================================

Found 9 times
DataLoader(dataset, batch_size=self.args.test_bs)
DataLoader(DatasetSplit(dataset, data_idx), batch_size=self.args.local_bs, shuffle=True)
DataLoader(DatasetSplit(self.dataset_query, data_idxs), shuffle=False)
DataLoader(DatasetSplit(self.dataset_query, unlabel_idxs), shuffle=False)
DataLoader(DatasetSplit(self.dataset_query, unlabel_idxs), shuffle=False)
DataLoader(DatasetSplit(self.dataset_query, data_idxs), shuffle=False)
DataLoader(DatasetSplit(self.dataset_query, data_idxs), shuffle=False)
DataLoader(DatasetSplit(self.dataset_query, data_idxs), shuffle=False)
DataLoader(DatasetSplit(self.dataset_train, label_idxs), batch_size=self.args.local_bs, shuffle=True)
https://github.com/raymin0223/LoGo/blob/536e8cbd6cc8bba55181d8afb5fd09111ea61ac8/fl_methods/base.py#L31
https://github.com/raymin0223/LoGo/blob/536e8cbd6cc8bba55181d8afb5fd09111ea61ac8/fl_methods/base.py#L62
https://github.com/raymin0223/LoGo/blob/536e8cbd6cc8bba55181d8afb5fd09111ea61ac8/query_strategies/alfa_mix.py#L107
https://github.com/raymin0223/LoGo/blob/536e8cbd6cc8bba55181d8afb5fd09111ea61ac8/query_strategies/egl.py#L35
https://github.com/raymin0223/LoGo/blob/536e8cbd6cc8bba55181d8afb5fd09111ea61ac8/query_strategies/strategy.py#L41
https://github.com/raymin0223/LoGo/blob/536e8cbd6cc8bba55181d8afb5fd09111ea61ac8/query_strategies/strategy.py#L57
https://github.com/raymin0223/LoGo/blob/536e8cbd6cc8bba55181d8afb5fd09111ea61ac8/query_strategies/strategy.py#L83
https://github.com/raymin0223/LoGo/blob/536e8cbd6cc8bba55181d8afb5fd09111ea61ac8/query_strategies/strategy.py#L112
https://github.com/raymin0223/LoGo/blob/536e8cbd6cc8bba55181d8afb5fd09111ea61ac8/query_strategies/strategy.py#L141

============================================
https://github.com/Adamdad/ConsistentTeacher
============================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu, flatten=True),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs,
    )
https://github.com/Adamdad/ConsistentTeacher/blob/b49a9ce1c0ae78d13528be0a9a4eff65a627d581/ssod/datasets/builder.py#L77

===============================================
https://github.com/akhtarvision/bpc_calibration
===============================================

Found 2 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers,
                                   pin_memory=True)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers,
                                 pin_memory=True)
https://github.com/akhtarvision/bpc_calibration/blob/c377d386298c7be45a5a99b2360c49110ed0c48c/main.py#L169
https://github.com/akhtarvision/bpc_calibration/blob/c377d386298c7be45a5a99b2360c49110ed0c48c/main.py#L172

========================================
https://github.com/bimsarapathiraja/MCCL
========================================

Found 1 times
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=collator,
        )
https://github.com/bimsarapathiraja/MCCL/blob/68206745dc55b2ccf1c3992e21849ad8ab4e33f2/fcos_core/data/build.py#L166

================================================
https://github.com/sun-umn/Deep-Random-Projector
================================================

Found 3 times
DataLoader(img_dataset, batch_size=1, shuffle=False, drop_last=False)
DataLoader(img_dataset, batch_size=1, shuffle=False, drop_last=False)
DataLoader(img_dataset, batch_size=1, shuffle=False, drop_last=False)
https://github.com/sun-umn/Deep-Random-Projector/blob/cdddfb1e69b4e50d67f5ca6350bffa8c9fd60856/1_Denoising/util.py#L51
https://github.com/sun-umn/Deep-Random-Projector/blob/cdddfb1e69b4e50d67f5ca6350bffa8c9fd60856/2_Super_Resolution/util.py#L52
https://github.com/sun-umn/Deep-Random-Projector/blob/cdddfb1e69b4e50d67f5ca6350bffa8c9fd60856/3_Inpainting/util.py#L52

===================================
https://github.com/WuyangLuo/SIEDOB
===================================

Found 9 times
DataLoader(dataset=train_dataset, batch_size=cfg['batch_size'], shuffle=cfg['shuffle'], num_workers=cfg['worker'])
DataLoader(dataset=test_dataset, batch_size=cfg['test_batch_size'], shuffle=False, num_workers=cfg['worker'])
DataLoader(dataset=test_dataset, batch_size=1, shuffle=False, num_workers=0)
DataLoader(dataset=train_dataset, batch_size=cfg['batch_size'], shuffle=cfg['shuffle'], num_workers=cfg['worker'])
DataLoader(dataset=test_dataset, batch_size=cfg['test_batch_size'], shuffle=False, num_workers=cfg['worker'])
DataLoader(dataset=train_dataset, batch_size=cfg['batch_size'], shuffle=cfg['shuffle'], num_workers=cfg['worker'])
DataLoader(dataset=test_dataset, batch_size=cfg['test_batch_size'], shuffle=False, num_workers=cfg['worker'])
DataLoader(dataset=train_dataset, batch_size=cfg['batch_size'], shuffle=cfg['shuffle'], num_workers=cfg['worker'])
DataLoader(dataset=test_dataset, batch_size=cfg['test_batch_size'], shuffle=False, num_workers=cfg['worker'])
https://github.com/WuyangLuo/SIEDOB/blob/8599f4e330520a2cc2f44e82fbdd01cfd982a965/background/train.py#L49
https://github.com/WuyangLuo/SIEDOB/blob/8599f4e330520a2cc2f44e82fbdd01cfd982a965/background/train.py#L51
https://github.com/WuyangLuo/SIEDOB/blob/8599f4e330520a2cc2f44e82fbdd01cfd982a965/fusion/test_one_image.py#L55
https://github.com/WuyangLuo/SIEDOB/blob/8599f4e330520a2cc2f44e82fbdd01cfd982a965/fusion/train.py#L49
https://github.com/WuyangLuo/SIEDOB/blob/8599f4e330520a2cc2f44e82fbdd01cfd982a965/fusion/train.py#L51
https://github.com/WuyangLuo/SIEDOB/blob/8599f4e330520a2cc2f44e82fbdd01cfd982a965/instance_inpainting/train.py#L42
https://github.com/WuyangLuo/SIEDOB/blob/8599f4e330520a2cc2f44e82fbdd01cfd982a965/instance_inpainting/train.py#L44
https://github.com/WuyangLuo/SIEDOB/blob/8599f4e330520a2cc2f44e82fbdd01cfd982a965/instance_style/train.py#L42
https://github.com/WuyangLuo/SIEDOB/blob/8599f4e330520a2cc2f44e82fbdd01cfd982a965/instance_style/train.py#L44

===============================
https://github.com/NVlabs/ODISE
===============================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/NVlabs/ODISE/blob/2b187e4b2ff4c3d5da342aec2cc234b537720a65/third_party/Mask2Former/mask2former_video/data_video/build.py#L244

=====================================================
https://github.com/amazon-science/polygon-transformer
=====================================================

Found 7 times
DataLoader(
            dataset, batch_size=32, collate_fn=dataset.collate, num_workers=8
        )
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=self.max_sentences,
            collate_fn=self.collate_fn,
            num_workers=self.num_workers,
            timeout=self.timeout,
            worker_init_fn=worker_init_fn,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            self.dataset,
            collate_fn=self.collate_fn,
            batch_sampler=batches[offset:],
            num_workers=self.num_workers,
            timeout=self.timeout,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            self.dataset,
            collate_fn=self.collate_fn,
            batch_sampler=batches[offset:],
            num_workers=self.num_workers,
        )
torch.utils.data.DataLoader(
            backtranslation_dataset,
            batch_size=2,
            collate_fn=backtranslation_dataset.collater,
        )
torch.utils.data.DataLoader(
            dataset=language_pair_dataset,
            batch_size=2,
            collate_fn=language_pair_dataset.collater,
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        collate_fn=(lambda samples: collate(samples, padding_idx, eos_idx)),
    )
https://github.com/amazon-science/polygon-transformer/blob/69fc728b2ec6a2b3595ec34db64074badcb19151/fairseq/examples/wav2vec/vq-wav2vec_featurize.py#L207
https://github.com/amazon-science/polygon-transformer/blob/69fc728b2ec6a2b3595ec34db64074badcb19151/fairseq/fairseq/data/iterators.py#L210
https://github.com/amazon-science/polygon-transformer/blob/69fc728b2ec6a2b3595ec34db64074badcb19151/fairseq/fairseq/data/iterators.py#L468
https://github.com/amazon-science/polygon-transformer/blob/69fc728b2ec6a2b3595ec34db64074badcb19151/fairseq/fairseq/data/iterators.py#L756
https://github.com/amazon-science/polygon-transformer/blob/69fc728b2ec6a2b3595ec34db64074badcb19151/fairseq/tests/test_backtranslation_dataset.py#L78
https://github.com/amazon-science/polygon-transformer/blob/69fc728b2ec6a2b3595ec34db64074badcb19151/fairseq/tests/test_noising.py#L444
https://github.com/amazon-science/polygon-transformer/blob/69fc728b2ec6a2b3595ec34db64074badcb19151/fairseq/tests/utils.py#L52

===========================================
https://github.com/facebookresearch/genecis
===========================================

Found 8 times
torch.utils.data.DataLoader(determ_dataset, shuffle=False, num_workers=4, batch_size=8, collate_fn=DeterministicDatasetWithConcreteness.collate_fn)
torch.utils.data.DataLoader(
            self,
            batch_size=batch_size,
            shuffle=shuffle,
            num_workers=num_workers,
            drop_last=drop_last,
            collate_fn=lambda i: i)
torch.utils.data.DataLoader(
        train_dataset,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        worker_init_fn=worker_init_fn,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        cirr_val_dataset_return_images,
        sampler=None,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        cirr_val_dataset_global,
        sampler=None,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        change_attribute_valset,
        sampler=None,
        batch_size=int(args.batch_size_per_gpu / 8),
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        same_object_valset,
        sampler=None,
        batch_size=int(args.batch_size_per_gpu / 8),
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        val_dataset_cc3m,
        sampler=torch.utils.data.DistributedSampler(val_dataset_cc3m, shuffle=False),
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        worker_init_fn=worker_init_fn,
        pin_memory=True,
        drop_last=True,
    )
https://github.com/facebookresearch/genecis/blob/0c5c968c01b8ccffcc0990af2b430d21d7a12f49/datasets/cc_3m_dataset.py#L27
https://github.com/facebookresearch/genecis/blob/0c5c968c01b8ccffcc0990af2b430d21d7a12f49/datasets/mit_states_dataset.py#L43
https://github.com/facebookresearch/genecis/blob/0c5c968c01b8ccffcc0990af2b430d21d7a12f49/train/train_cc3m.py#L171
https://github.com/facebookresearch/genecis/blob/0c5c968c01b8ccffcc0990af2b430d21d7a12f49/train/train_cc3m.py#L181
https://github.com/facebookresearch/genecis/blob/0c5c968c01b8ccffcc0990af2b430d21d7a12f49/train/train_cc3m.py#L189
https://github.com/facebookresearch/genecis/blob/0c5c968c01b8ccffcc0990af2b430d21d7a12f49/train/train_cc3m.py#L197
https://github.com/facebookresearch/genecis/blob/0c5c968c01b8ccffcc0990af2b430d21d7a12f49/train/train_cc3m.py#L205
https://github.com/facebookresearch/genecis/blob/0c5c968c01b8ccffcc0990af2b430d21d7a12f49/train/train_cc3m.py#L214

=======================================
https://github.com/BrandonHanx/FAME-ViL
=======================================

Found 9 times
torch.utils.data.DataLoader(
        dataset=dataset_instance,
        collate_fn=BatchCollator(
            dataset_instance.dataset_name, dataset_instance.dataset_type
        ),
        drop_last=(is_xla() or dataset_instance.dataset_type == "train"),  # see also MultiDatasetLoader.__len__
        **other_args,
    )
torch.utils.data.DataLoader(
                dataset=NumbersDataset((idx + 1) * (10 ** idx)), num_workers=0
            )
torch.utils.data.DataLoader(
            dataset=dataset,
            batch_size=self.batch_size,
            shuffle=False,
            num_workers=1,
            drop_last=False,
        )
DataLoader(dataset=dataset, batch_size=4, num_workers=0)
torch.utils.data.DataLoader(
            dataset=dataset,
            batch_size=self.batch_size,
            shuffle=False,
            num_workers=1,
            drop_last=False,
        )
torch.utils.data.DataLoader(
            NumbersDataset(), batch_size=self.config.training.batch_size
        )
torch.utils.data.DataLoader(
            NumbersDataset(), batch_size=self.config.training.batch_size
        )
torch.utils.data.DataLoader(
            NumbersDataset(2), batch_size=self.config.training.batch_size
        )
DataLoader(
        my_dataset, batch_size=32, shuffle=False, num_workers=4, drop_last=False
    )
https://github.com/BrandonHanx/FAME-ViL/blob/7a259a0813dafe2c23abb422766ef1c29b3bfc7c/mmf/utils/build.py#L321
https://github.com/BrandonHanx/FAME-ViL/blob/7a259a0813dafe2c23abb422766ef1c29b3bfc7c/tests/datasets/test_iteration_strategies.py#L21
https://github.com/BrandonHanx/FAME-ViL/blob/7a259a0813dafe2c23abb422766ef1c29b3bfc7c/tests/datasets/test_multi_datamodule.py#L45
https://github.com/BrandonHanx/FAME-ViL/blob/7a259a0813dafe2c23abb422766ef1c29b3bfc7c/tests/datasets/test_multi_dataset_loader.py#L52
https://github.com/BrandonHanx/FAME-ViL/blob/7a259a0813dafe2c23abb422766ef1c29b3bfc7c/tests/trainers/test_trainer_mocks.py#L60
https://github.com/BrandonHanx/FAME-ViL/blob/7a259a0813dafe2c23abb422766ef1c29b3bfc7c/tests/trainers/callbacks/test_logistics.py#L81
https://github.com/BrandonHanx/FAME-ViL/blob/7a259a0813dafe2c23abb422766ef1c29b3bfc7c/tests/trainers/callbacks/test_lr_scheduler.py#L67
https://github.com/BrandonHanx/FAME-ViL/blob/7a259a0813dafe2c23abb422766ef1c29b3bfc7c/tests/trainers/callbacks/test_user_callback.py#L44
https://github.com/BrandonHanx/FAME-ViL/blob/7a259a0813dafe2c23abb422766ef1c29b3bfc7c/tools/scripts/features/extract_vqvae_indices.py#L80

=============================
https://github.com/chojw/genb
=============================

Found 3 times
DataLoader(eval_dset, batch_size, shuffle=False, num_workers=0)
DataLoader(train_dset, batch_size, shuffle=True, num_workers=0)
DataLoader(eval_dset, batch_size, shuffle=False, num_workers=0)
https://github.com/chojw/genb/blob/9994b5e77411fba3297f063ccaa9477ccfb0a677/eval.py#L115
https://github.com/chojw/genb/blob/9994b5e77411fba3297f063ccaa9477ccfb0a677/main.py#L95
https://github.com/chojw/genb/blob/9994b5e77411fba3297f063ccaa9477ccfb0a677/main.py#L96

======================================
https://github.com/microsoft/X-Decoder
======================================

Found 1 times
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
https://github.com/microsoft/X-Decoder/blob/165f8a6314ac84f5c36aaab7216f90dd97e38a43/datasets/build.py#L230

=================================
https://github.com/TencentARC/FLM
=================================

Found 12 times
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            sampler=self.train_sampler,
            num_workers=self.num_workers,
            collate_fn=self.train_collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=batch_size if batch_size is not None else self.batch_size,
            sampler=self.val_sampler,
            num_workers=self.num_workers,
            collate_fn=self.val_collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            sampler=self.test_sampler,
            num_workers=self.num_workers,
            collate_fn=self.test_collate,
        )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=32,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=64,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(
            text_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
https://github.com/TencentARC/FLM/blob/bd8b19d9f3a00ac6d4e58c9766957032036bffe8/flm/datamodules/datamodule_base.py#L291
https://github.com/TencentARC/FLM/blob/bd8b19d9f3a00ac6d4e58c9766957032036bffe8/flm/datamodules/datamodule_base.py#L302
https://github.com/TencentARC/FLM/blob/bd8b19d9f3a00ac6d4e58c9766957032036bffe8/flm/datamodules/datamodule_base.py#L313
https://github.com/TencentARC/FLM/blob/bd8b19d9f3a00ac6d4e58c9766957032036bffe8/flm/datamodules/f30k_caption_karpathy_datamodule.py#L23
https://github.com/TencentARC/FLM/blob/bd8b19d9f3a00ac6d4e58c9766957032036bffe8/flm/datamodules/f30k_caption_karpathy_datamodule.py#L34
https://github.com/TencentARC/FLM/blob/bd8b19d9f3a00ac6d4e58c9766957032036bffe8/flm/datamodules/f30k_caption_karpathy_datamodule.py#L45
https://github.com/TencentARC/FLM/blob/bd8b19d9f3a00ac6d4e58c9766957032036bffe8/flm/datamodules/multitask_datamodule.py#L103
https://github.com/TencentARC/FLM/blob/bd8b19d9f3a00ac6d4e58c9766957032036bffe8/flm/datamodules/multitask_datamodule.py#L113
https://github.com/TencentARC/FLM/blob/bd8b19d9f3a00ac6d4e58c9766957032036bffe8/flm/datamodules/multitask_datamodule.py#L123
https://github.com/TencentARC/FLM/blob/bd8b19d9f3a00ac6d4e58c9766957032036bffe8/flm/modules/objectives.py#L383
https://github.com/TencentARC/FLM/blob/bd8b19d9f3a00ac6d4e58c9766957032036bffe8/flm/modules/objectives.py#L513
https://github.com/TencentARC/FLM/blob/bd8b19d9f3a00ac6d4e58c9766957032036bffe8/flm/modules/objectives.py#L529

==============================================================
https://github.com/The-Learning-And-Vision-Atelier-LAVA/BUFFER
==============================================================

Found 3 times
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=config.train.batch_size,
        shuffle=shuffle,
        num_workers=num_workers,
        collate_fn=partial(collate_fn_descriptor, config=config, neighborhood_limits=neighborhood_limits),
        drop_last=drop_last,
    )
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=config.train.batch_size,
        shuffle=shuffle,
        num_workers=num_workers,
        collate_fn=partial(collate_fn_descriptor, config=config, neighborhood_limits=neighborhood_limits),
        drop_last=drop_last,
    )
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=config.test.batch_size,
        shuffle=shuffle,
        num_workers=num_workers,
        collate_fn=partial(collate_fn_descriptor, config=config, neighborhood_limits=neighborhood_limits),
        drop_last=drop_last,
    )
https://github.com/The-Learning-And-Vision-Atelier-LAVA/BUFFER/blob/6f905699b9b187c52eafcda0b95a283d6b52b9b2/KITTI/dataloader.py#L253
https://github.com/The-Learning-And-Vision-Atelier-LAVA/BUFFER/blob/6f905699b9b187c52eafcda0b95a283d6b52b9b2/ThreeDMatch/dataloader.py#L257
https://github.com/The-Learning-And-Vision-Atelier-LAVA/BUFFER/blob/6f905699b9b187c52eafcda0b95a283d6b52b9b2/generalization/ThreeD2ETH/dataloader.py#L256

========================================
https://github.com/JeongsooP/RGB-no-more
========================================

Found 4 times
torch.utils.data.DataLoader(traindata_subset, batch_size=batch_size, pin_memory=True,
                                                shuffle=False if distributed else shuffle, num_workers=num_workers, 
                                                sampler=train_sampler, prefetch_factor=8 if not num_workers==0 else 2, 
                                                persistent_workers=True if not num_workers==0 else False,
                                                collate_fn = None, worker_init_fn=seedftn, generator=seed_generator)
torch.utils.data.DataLoader(valdata_subset, batch_size=batch_size, pin_memory=True,
                                                shuffle=False, num_workers=num_workers, sampler=val_sampler,
                                                prefetch_factor=8 if not num_workers==0 else 2, 
                                                persistent_workers=True if not num_workers==0 else False,
                                                collate_fn = None, worker_init_fn=seedftn, generator=seed_generator)
torch.utils.data.DataLoader(trainvaldata_subset, batch_size=batch_size, pin_memory=True,
                                                shuffle=False, num_workers=num_workers, sampler=trainval_sampler,
                                                prefetch_factor=8 if not num_workers==0 else 2, 
                                                persistent_workers=True if not num_workers==0 else False,
                                                collate_fn = None, worker_init_fn=seedftn, generator=seed_generator)
torch.utils.data.DataLoader(datasubset, batch_size=batch_size, pin_memory=True,
                                                shuffle=False if distributed else shuffle, num_workers=num_workers, 
                                                sampler=sampler, prefetch_factor=8 if not num_workers==0 else 2, 
                                                persistent_workers=True if not num_workers==0 else False,
                                                collate_fn = None, worker_init_fn=seedftn, generator=seed_generator)
https://github.com/JeongsooP/RGB-no-more/blob/dce075711991a5d2e7668e5137f37fb74e1dc4f2/datasets.py#L542
https://github.com/JeongsooP/RGB-no-more/blob/dce075711991a5d2e7668e5137f37fb74e1dc4f2/datasets.py#L547
https://github.com/JeongsooP/RGB-no-more/blob/dce075711991a5d2e7668e5137f37fb74e1dc4f2/datasets.py#L552
https://github.com/JeongsooP/RGB-no-more/blob/dce075711991a5d2e7668e5137f37fb74e1dc4f2/datasets.py#L577

=================================================
https://github.com/szymanowiczs/viewset-diffusion
=================================================

Found 2 times
DataLoader(dataset, batch_size=batch_size, shuffle=True,
                                pin_memory=True, num_workers=4,
                                persistent_workers=True)
DataLoader(val_dataset, batch_size=batch_size,
                                    shuffle=True, pin_memory=True, 
                                    num_workers=4, persistent_workers=True)
https://github.com/szymanowiczs/viewset-diffusion/blob/45003948f2ea6b70f72e5dc60b14beb2428699a4/train.py#L119
https://github.com/szymanowiczs/viewset-diffusion/blob/45003948f2ea6b70f72e5dc60b14beb2428699a4/train.py#L131

========================================
https://github.com/wrk226/creative_birds
========================================

Found 3 times
data.DataLoader(
    content_dataset, batch_size=args.batch_size,
    sampler=InfiniteSamplerWrapper(content_dataset),
    num_workers=args.n_threads)
data.DataLoader(
    style_dataset, batch_size=args.batch_size,
    sampler=InfiniteSamplerWrapper(style_dataset),
    num_workers=args.n_threads)
DataLoader(TESTDataset(opts),
                      batch_size=opts.batch_size,
                      shuffle=shuffle,
                      num_workers=0,
                      drop_last=True)
https://github.com/wrk226/creative_birds/blob/30c02dbee6d20558160f1a49d1a9bec5c60ae214/evo_trans/AdaIN/train.py#L103
https://github.com/wrk226/creative_birds/blob/30c02dbee6d20558160f1a49d1a9bec5c60ae214/evo_trans/AdaIN/train.py#L107
https://github.com/wrk226/creative_birds/blob/30c02dbee6d20558160f1a49d1a9bec5c60ae214/evo_trans/data/cub.py#L81

==================================
https://github.com/htx0601/AGG-Net
==================================

Found 2 times
DataLoader(dataset_train, batch_size=args.batch_size_train, shuffle=True, num_workers=4, drop_last=True)
DataLoader(dataset_test, batch_size=args.batch_size_eval, shuffle=False, num_workers=0)
https://github.com/htx0601/AGG-Net/blob/bc5158c30caa675bdabc469b62e69c425b8a7957/trainer.py#L48
https://github.com/htx0601/AGG-Net/blob/bc5158c30caa675bdabc469b62e69c425b8a7957/trainer.py#L49

=========================================
https://github.com/shawLyu/Occ-SDF-Hybrid
=========================================

Found 2 times
torch.utils.data.DataLoader(self.train_dataset,
                                                            batch_size=self.batch_size,
                                                            shuffle=True,
                                                            collate_fn=self.train_dataset.collate_fn,
                                                            num_workers=8)
torch.utils.data.DataLoader(self.train_dataset,
                                                           batch_size=self.conf.get_int('plot.plot_nimgs'),
                                                           shuffle=True,
                                                           collate_fn=self.train_dataset.collate_fn
                                                           )
https://github.com/shawLyu/Occ-SDF-Hybrid/blob/c5b420dc07e67b1213473d09b481b7a46a5e143f/code/training/monosdf_train.py#L102
https://github.com/shawLyu/Occ-SDF-Hybrid/blob/c5b420dc07e67b1213473d09b481b7a46a5e143f/code/training/monosdf_train.py#L107

===========================================
https://github.com/donghaotian123/CVSformer
===========================================

Found 1 times
data.DataLoader(train_dataset,
                                   batch_size=batch_size,
                                   num_workers=config.num_workers,
                                   drop_last=False,
                                   shuffle=is_shuffle,
                                   pin_memory=True,
                                   sampler=train_sampler)
https://github.com/donghaotian123/CVSformer/blob/19fc8320006d347fa4f9a9e49ae38e644c063fe0/core/semantic_scene_completion/dataloader.py#L55

========================================
https://github.com/yutaojiang1/Diffuse3D
========================================

Found 2 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
https://github.com/yutaojiang1/Diffuse3D/blob/920efe13b6385c6e88f9e23e11b3dd1134dab1a3/BilateralDiffusion/scripts/image_datasets.py#L115
https://github.com/yutaojiang1/Diffuse3D/blob/920efe13b6385c6e88f9e23e11b3dd1134dab1a3/BilateralDiffusion/scripts/image_datasets.py#L119

=================================
https://github.com/ZhangCYG/U-RED
=================================

Found 3 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=bs,
        num_workers=cfg["num_workers"],
        pin_memory=True,
        shuffle=(True if cfg["mode"] == 'train' else False),
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=bs,
        num_workers=cfg["num_workers"],
        pin_memory=True,
        shuffle=(True if cfg["mode"] == 'train' else False),
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=bs,
        num_workers=cfg["num_workers"],
        pin_memory=True,
        shuffle=(True if cfg["mode"] == 'train' else False),
    )
https://github.com/ZhangCYG/U-RED/blob/5468a57aeaf2d7965282c9f57cdae78c5545c397/engine/test.py#L43
https://github.com/ZhangCYG/U-RED/blob/5468a57aeaf2d7965282c9f57cdae78c5545c397/engine/train.py#L45
https://github.com/ZhangCYG/U-RED/blob/5468a57aeaf2d7965282c9f57cdae78c5545c397/engine/vis.py#L41

=====================================
https://github.com/huangyangyi/ELICIT
=====================================

Found 1 times
torch.utils.data.DataLoader(dataset=dataset,
                                              batch_size=batch_size,
                                              shuffle=shuffle,
                                              drop_last=drop_last,
                                              num_workers=cfg.num_workers,
                                              worker_init_fn=_worker_init_fn)
https://github.com/huangyangyi/ELICIT/blob/bc792014b3f3dee91cc1fae04c81043c578fe65e/core/data/create_dataset.py#L140

========================================
https://github.com/kieran514/robustdepth
========================================

Found 5 times
DataLoader(dataset, 1, shuffle=False, num_workers=6,
                            pin_memory=True, drop_last=False)
DataLoader(dataset, opt.batch_size, shuffle=False,
                            num_workers=opt.num_workers, pin_memory=True, drop_last=False)
DataLoader(
            train_dataset, self.opt.batch_size, shuffle=False,
            num_workers=self.opt.num_workers, pin_memory=True, drop_last=True,
            worker_init_fn=seed_worker)
DataLoader(
            val_dataset, 1, shuffle=False,
            num_workers=self.opt.val_num_workers, pin_memory=True, drop_last=False)
DataLoader(
            robust_val_dataset, 1, shuffle=False,
            num_workers=self.opt.val_num_workers, pin_memory=True, drop_last=False)
https://github.com/kieran514/robustdepth/blob/8d96d0e6dc3c69bcf21a211bb0c4414304dded96/Robust-Depth/evaluate_depth.py#L113
https://github.com/kieran514/robustdepth/blob/8d96d0e6dc3c69bcf21a211bb0c4414304dded96/Robust-Depth/evaluate_pose.py#L60
https://github.com/kieran514/robustdepth/blob/8d96d0e6dc3c69bcf21a211bb0c4414304dded96/Robust-Depth/trainer.py#L151
https://github.com/kieran514/robustdepth/blob/8d96d0e6dc3c69bcf21a211bb0c4414304dded96/Robust-Depth/trainer.py#L163
https://github.com/kieran514/robustdepth/blob/8d96d0e6dc3c69bcf21a211bb0c4414304dded96/Robust-Depth/trainer.py#L179

==================================
https://github.com/bruceyo/GLA-GCN
==================================

Found 2 times
torch.utils.data.DataLoader(
            train_data,
            batch_size=opt.batch_size,
            num_workers=int(opt.workers),
            pin_memory=True,
            sampler=train_sampler)
torch.utils.data.DataLoader(
            test_data,
            batch_size=opt.batch_size *
            torch.distributed.get_world_size(),
            shuffle=False,
            num_workers=int(opt.workers),
            pin_memory=True)
https://github.com/bruceyo/GLA-GCN/blob/fd72990cb0983a753af6c1f9759ee29765a5409b/main_sagcn_gpus_individual_fc_3dhp.py#L264
https://github.com/bruceyo/GLA-GCN/blob/fd72990cb0983a753af6c1f9759ee29765a5409b/main_sagcn_gpus_individual_fc_3dhp.py#L275

=============================
https://github.com/hbai98/DOT
=============================

Found 1 times
torch.utils.data.DataLoader(dataset, batch_size=3 * 1)
https://github.com/hbai98/DOT/blob/9540c53aab72e4dc148331fc4ecdd32f16a354a5/DOT/nerf_sh/train2.py#L203

=====================================
https://github.com/XinyaChen21/Veri3d
=====================================

Found 1 times
data.DataLoader(
        dataset,
        batch_size=opt.batch,
        sampler=train_sampler,
        drop_last=True,
    )
https://github.com/XinyaChen21/Veri3d/blob/5253ed000e8bae296bc79a1964efc5119de06716/train_deepfashion.py#L108

================================
https://github.com/xljh0520/JOTR
================================

Found 3 times
DataLoader(dataset=testset_loader, batch_size=cfg.test_batch_size, 
                    shuffle=False, num_workers=cfg.num_thread, pin_memory=True,
                    sampler=testset_sampler
                    )
DataLoader(dataset=testset_loader, batch_size=cfg.test_batch_size, 
                    shuffle=False, num_workers=cfg.num_thread, pin_memory=True,
                    sampler=testset_sampler
                    )
DataLoader(dataset=trainset_loader, batch_size=self.cfg.train_batch_size, 
                shuffle=(self.sampler is None), num_workers=self.cfg.num_thread, pin_memory=True,
                sampler=self.sampler)
https://github.com/xljh0520/JOTR/blob/8f026e637979b3d135a6210eee5650a3f54c3e05/eval.py#L92
https://github.com/xljh0520/JOTR/blob/8f026e637979b3d135a6210eee5650a3f54c3e05/train.py#L115
https://github.com/xljh0520/JOTR/blob/8f026e637979b3d135a6210eee5650a3f54c3e05/common/base.py#L137

===========================================
https://github.com/junzhezhang/DeformToon3D
===========================================

Found 11 times
DataLoader(self.dataset, batch_size=self.opt.style.style_batch, num_workers=self.opt.style.num_workers, shuffle=True, pin_memory=True)
data.DataLoader(
        dataset,
        batch_size=args.batch,
        sampler=data_sampler(dataset, shuffle=True, distributed=args.distributed),
        drop_last=True,
    )
data.DataLoader(
        dataset,
        batch_size=args.batch,
        sampler=data_sampler(dataset, shuffle=True, distributed=args.distributed),
        drop_last=True,
    )
data.DataLoader(
        dataset,
        batch_size=args.batch,
        sampler=data_sampler(dataset, shuffle=True, distributed=args.distributed),
        drop_last=True,
    )
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
DataLoader(dataset,
	                        batch_size=args.batch_size,
	                        shuffle=False,
	                        num_workers=int(args.workers),
	                        drop_last=True)
DataLoader(dataset,
                            batch_size=opts.test_batch_size,
                            shuffle=False,
                            num_workers=int(opts.test_workers),
                            drop_last=True)
DataLoader(dataset,
	                        batch_size=opts.test_batch_size,
	                        shuffle=False,
	                        num_workers=int(opts.test_workers),
	                        drop_last=True)
DataLoader(self.train_dataset,
										   batch_size=self.opts.batch_size,
										   shuffle=True,
										   num_workers=int(self.opts.workers),
										   drop_last=True)
DataLoader(self.test_dataset,
										  batch_size=self.opts.test_batch_size,
										  shuffle=False,
										  num_workers=int(self.opts.test_workers),
										  drop_last=True)
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=num_workers)
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/main.py#L147
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/finetune_dualstylegan.py#L490
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/finetune_stylegan.py#L381
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/pretrain_dualstylegan.py#L448
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/VToonify/model/raft/core/datasets.py#L230
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/pixel2style2pixel/scripts/calc_losses_on_images.py#L40
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/pixel2style2pixel/scripts/inference.py#L59
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/pixel2style2pixel/scripts/style_mixing.py#L53
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/pixel2style2pixel/training/coach.py#L61
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/pixel2style2pixel/training/coach.py#L66
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/lib/utils/fid_score.py#L111

========================================
https://github.com/zubair-irshad/NeO-360
========================================

Found 12 times
DataLoader(
            self.train_dataset,
            shuffle=True,
            num_workers=4,
            batch_size=2048,
            pin_memory=True,
        )
DataLoader(
            self.val_dataset,
            shuffle=False,
            num_workers=4,
            batch_size=1,  # validate one image (H*W rays) at a time
            pin_memory=True,
        )
DataLoader(
            self.test_dataset,
            shuffle=False,
            num_workers=4,
            batch_size=1,
            pin_memory=True,
        )
DataLoader(
            self.train_dataset,
            shuffle=True,
            num_workers=32,
            batch_size=self.hparams.batch_size,
            pin_memory=True,
        )
DataLoader(
            self.val_dataset,
            shuffle=False,
            num_workers=4,
            batch_size=1,  # validate one image (H*W rays) at a time
            pin_memory=True,
        )
DataLoader(
            self.test_dataset,
            shuffle=False,
            num_workers=4,
            batch_size=1,
            pin_memory=True,
        )
DataLoader(
            self.train_dataset,
            shuffle=True,
            num_workers=2,
            batch_size=2048,
            pin_memory=True,
        )
DataLoader(
            self.val_dataset,
            shuffle=False,
            num_workers=2,
            batch_size=1,  # validate one image (H*W rays) at a time
            pin_memory=True,
        )
DataLoader(
            self.test_dataset,
            shuffle=False,
            num_workers=0,
            batch_size=1,
            pin_memory=True,
        )
DataLoader(self.train_dataset,
                          shuffle=True,
                          num_workers=8,
                          batch_size=self.hparams.batch_size,
                          pin_memory=True)
DataLoader(self.val_dataset,
                          shuffle=False,
                          num_workers=4,
                          batch_size=1, # validate one image (H*W rays) at a time
                          pin_memory=True)
DataLoader(self.test_dataset,
                        shuffle=False,
                        num_workers=4,
                        batch_size=1,
                        pin_memory=True)
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/models/mipnerf360/model.py#L630
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/models/mipnerf360/model.py#L639
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/models/mipnerf360/model.py#L648
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/models/neo360/model.py#L1028
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/models/neo360/model.py#L1037
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/models/neo360/model.py#L1046
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/models/vanilla_nerf/model.py#L440
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/models/vanilla_nerf/model.py#L449
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/models/vanilla_nerf/model.py#L458
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/models/vanilla_nerf/model_pixel.py#L510
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/models/vanilla_nerf/model_pixel.py#L517
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/models/vanilla_nerf/model_pixel.py#L524

=========================================
https://github.com/psyai-net/D-IF_release
=========================================

Found 6 times
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=not self.overfit,
            num_workers=self.cfg.num_threads,
            pin_memory=True,
            worker_init_fn=self.worker_init_fn
        )
DataLoader(
            current_dataset,
            batch_size=self.batch_size,
            shuffle=False,
            num_workers=self.cfg.num_threads,
            pin_memory=True
        )
DataLoader(
            self.test_dataset,
            batch_size=1,
            shuffle=False,
            num_workers=self.cfg.num_threads,
            pin_memory=True
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.cfg.num_threads,
            pin_memory=True,
            worker_init_fn=self.worker_init_fn
        )
DataLoader(
            current_dataset,
            batch_size=1,
            shuffle=False,
            num_workers=self.cfg.num_threads,
            pin_memory=True,
            worker_init_fn=self.worker_init_fn
        )
DataLoader(
            self.test_dataset,
            batch_size=1,
            shuffle=False,
            num_workers=self.cfg.num_threads,
            pin_memory=True
        )
https://github.com/psyai-net/D-IF_release/blob/f5b82ff5e18ca42115741c3f808520bf664329d0/lib/dataset/NormalModule.py#L58
https://github.com/psyai-net/D-IF_release/blob/f5b82ff5e18ca42115741c3f808520bf664329d0/lib/dataset/NormalModule.py#L76
https://github.com/psyai-net/D-IF_release/blob/f5b82ff5e18ca42115741c3f808520bf664329d0/lib/dataset/NormalModule.py#L88
https://github.com/psyai-net/D-IF_release/blob/f5b82ff5e18ca42115741c3f808520bf664329d0/lib/dataset/PIFuDataModule.py#L40
https://github.com/psyai-net/D-IF_release/blob/f5b82ff5e18ca42115741c3f808520bf664329d0/lib/dataset/PIFuDataModule.py#L58
https://github.com/psyai-net/D-IF_release/blob/f5b82ff5e18ca42115741c3f808520bf664329d0/lib/dataset/PIFuDataModule.py#L71

========================================
https://github.com/ZrrSkywalker/MonoDETR
========================================

Found 3 times
DataLoader(dataset=dataset, batch_size=1)
DataLoader(dataset=train_set,
                              batch_size=cfg['batch_size'],
                              num_workers=workers,
                              worker_init_fn=my_worker_init_fn,
                              shuffle=True,
                              pin_memory=False,
                              drop_last=False)
DataLoader(dataset=test_set,
                             batch_size=cfg['batch_size'],
                             num_workers=workers,
                             worker_init_fn=my_worker_init_fn,
                             shuffle=False,
                             pin_memory=False,
                             drop_last=False)
https://github.com/ZrrSkywalker/MonoDETR/blob/c724572bddbc067832a0e0d860a411003f36c2fa/lib/datasets/kitti/kitti_dataset.py#L339
https://github.com/ZrrSkywalker/MonoDETR/blob/c724572bddbc067832a0e0d860a411003f36c2fa/lib/helpers/dataloader_helper.py#L21
https://github.com/ZrrSkywalker/MonoDETR/blob/c724572bddbc067832a0e0d860a411003f36c2fa/lib/helpers/dataloader_helper.py#L28

=======================================
https://github.com/freemty/urbanGIRAFFE
=======================================

Found 4 times
DataLoader(dataset,
                            batch_sampler=batch_sampler,
                            num_workers=num_workers,
                            collate_fn=collator,
                            worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(
    datasets.CIFAR10('../data/', train=True, download=True,
        transform=transforms.Compose([
            transforms.ToTensor(),
            transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])),
        batch_size=args.batch_size, shuffle=True, num_workers=1, pin_memory=True)
torch.utils.data.DataLoader(dataset)
torch.utils.data.DataLoader(road_semantic, batch_size=1, shuffle=False, num_workers=0)
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/datasets/make_dataset.py#L124
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/networks/reference/pytorch_spectral_normalization_gan/main.py#L30
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/utils_scripts/vis/vis_cars.py#L32
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/utils_scripts/vis/vis_road.py#L387

=====================================
https://github.com/jhchan0805/ReLeaPS
=====================================

Found 1 times
torch.utils.data.DataLoader(dataset, batch_size=4096, shuffle=False)
https://github.com/jhchan0805/ReLeaPS/blob/573f7722bf655b705df5003a5d7a755bd9eca69d/src/benchmark/splinenet.py#L98

===============================
https://github.com/tri-ml/vidar
===============================

Found 1 times
DataLoader(dataset,
        batch_size=cfg_has(cfg, 'batch_size', 1),
        pin_memory=cfg_has(cfg, 'pin_memory', True),
        num_workers=cfg_has(cfg, 'num_workers', 8),
        worker_init_fn=worker_init_fn,
        shuffle=False if ddp else shuffle,
        sampler=get_datasampler(dataset, shuffle=shuffle) if ddp else None,
        collate_fn=None if cfg_has(cfg, 'collate', True) else no_collate,
    )
https://github.com/tri-ml/vidar/blob/782725a5e1371a2b5e3f9a116f9ccdcf2f829a12/vidar/utils/setup.py#L293

======================================
https://github.com/shaomq2187/TransSfP
======================================

Found 8 times
DataLoader(dataset,
                             num_workers=num_workers,
                             batch_size=batch_size,
                             drop_last=True,
                             pin_memory=pin_memory)
DataLoader(dataset_tiny_white_cup_black_background_12_28,
                             batch_size=1,
                             num_workers=num_workers,
                             drop_last=True,
                             pin_memory=pin_memory)
DataLoader(dataset_tiny_white_cup_edges_black_background_12_28,
                             batch_size=1,
                             num_workers=num_workers,
                             drop_last=True,
                             pin_memory=pin_memory)
DataLoader(dataset_bird_back_1_20,
                             batch_size=1,
                             num_workers=num_workers,
                             drop_last=True,
                             pin_memory=pin_memory)
DataLoader(dataset_cat_back_1_20,
                             batch_size=1,
                             num_workers=num_workers,
                             drop_last=True,
                             pin_memory=pin_memory)
DataLoader(dataset_cat_front_1_20,
                             batch_size=1,
                             num_workers=num_workers,
                             drop_last=True,
                             pin_memory=pin_memory)
DataLoader(dataset_hemi_sphere_big_1_20,
                             batch_size=1,
                             num_workers=num_workers,
                             drop_last=True,
                             pin_memory=pin_memory)
DataLoader(dataset_hemi_sphere_small_1_20,
                             batch_size=1,
                             num_workers=num_workers,
                             drop_last=True,
                             pin_memory=pin_memory)
https://github.com/shaomq2187/TransSfP/blob/e9823ad95a736bafd3a0b1628fff8467517169a8/code/get_dataloader.py#L189
https://github.com/shaomq2187/TransSfP/blob/e9823ad95a736bafd3a0b1628fff8467517169a8/code/get_dataloader.py#L194
https://github.com/shaomq2187/TransSfP/blob/e9823ad95a736bafd3a0b1628fff8467517169a8/code/get_dataloader.py#L199
https://github.com/shaomq2187/TransSfP/blob/e9823ad95a736bafd3a0b1628fff8467517169a8/code/get_dataloader.py#L204
https://github.com/shaomq2187/TransSfP/blob/e9823ad95a736bafd3a0b1628fff8467517169a8/code/get_dataloader.py#L209
https://github.com/shaomq2187/TransSfP/blob/e9823ad95a736bafd3a0b1628fff8467517169a8/code/get_dataloader.py#L214
https://github.com/shaomq2187/TransSfP/blob/e9823ad95a736bafd3a0b1628fff8467517169a8/code/get_dataloader.py#L219
https://github.com/shaomq2187/TransSfP/blob/e9823ad95a736bafd3a0b1628fff8467517169a8/code/get_dataloader.py#L224

=========================================
https://github.com/Rowl1ng/3Dsketch2shape
=========================================

Found 7 times
data_utils.DataLoader(
        sdf_dataset,
        batch_size=scene_per_batch,
        shuffle=True,
        num_workers=num_data_loader_threads,
        drop_last=True,
    )
data_utils.DataLoader(
        sdf_dataset_test,
        batch_size=scene_per_batch,
        shuffle=False,
        num_workers=num_data_loader_threads,
        drop_last=True,
    )
DataLoader(
                                                dataset=self.train_shape_samples, 
                                                batch_size=self.batch_size * 2,
                                                shuffle=True,
                                                num_workers=4,
                                                drop_last=True
                                                )
DataLoader(
                                                dataset=self.train_samples,
                                                batch_size=self.batch_size,
                                                shuffle=True,
                                                num_workers=4,
                                                drop_last=True
                                                )
DataLoader(
                                                dataset=self.test_samples,
                                                batch_size=self.batch_size,
                                                shuffle=False,
                                                num_workers=4,
                                                drop_last=True
                                            )
DataLoader(
                                                dataset=shape_dataset,
                                                batch_size=self.batch_size,
                                                shuffle=False,
                                                num_workers=4,
                                                drop_last=False
                                            )
DataLoader(dataset=dataset,
                                    batch_size=16,
                                    num_workers=4,
                                    shuffle=False,
                                    drop_last=False)
https://github.com/Rowl1ng/3Dsketch2shape/blob/3058e7a8935e4557a921e5e9040ac20248d70f08/train/AE_trainer.py#L192
https://github.com/Rowl1ng/3Dsketch2shape/blob/3058e7a8935e4557a921e5e9040ac20248d70f08/train/AE_trainer.py#L199
https://github.com/Rowl1ng/3Dsketch2shape/blob/3058e7a8935e4557a921e5e9040ac20248d70f08/train/flow_sdf_trainer.py#L97
https://github.com/Rowl1ng/3Dsketch2shape/blob/3058e7a8935e4557a921e5e9040ac20248d70f08/train/flow_sdf_trainer.py#L119
https://github.com/Rowl1ng/3Dsketch2shape/blob/3058e7a8935e4557a921e5e9040ac20248d70f08/train/flow_sdf_trainer.py#L126
https://github.com/Rowl1ng/3Dsketch2shape/blob/3058e7a8935e4557a921e5e9040ac20248d70f08/train/flow_sdf_trainer.py#L1101
https://github.com/Rowl1ng/3Dsketch2shape/blob/3058e7a8935e4557a921e5e9040ac20248d70f08/utils/sketch_mesh_visualization.py#L87

=========================================
https://github.com/X-zhangyang/Get3DHuman
=========================================

Found 3 times
DataLoader(train_dataset,
                               batch_size=opt_data.batch_size, shuffle=not opt_data.serial_batches,
                               num_workers=0, pin_memory=opt_data.pin_memory)
DataLoader(test_dataset,
                              batch_size=1, shuffle=False,
                              num_workers=0, pin_memory=opt_data.pin_memory)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/X-zhangyang/Get3DHuman/blob/cf5d90db6749c99ca7b16bc675262144c957e0e3/Get3DHuman/libs/network_our.py#L22
https://github.com/X-zhangyang/Get3DHuman/blob/cf5d90db6749c99ca7b16bc675262144c957e0e3/Get3DHuman/libs/network_our.py#L27
https://github.com/X-zhangyang/Get3DHuman/blob/cf5d90db6749c99ca7b16bc675262144c957e0e3/Get3DHuman/training/training_loop.py#L146

=========================================
https://github.com/cvlab-columbia/zero123
=========================================

Found 4 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_val_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/main.py#L235
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/main.py#L244
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/main.py#L260
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/main.py#L268

===========================================================================================
https://github.com/robotic-vision-lab/Learning-Implicitly-From-Spatial-Transformers-Network
===========================================================================================

Found 1 times
torch.utils.data.DataLoader(trainset,
                                             batch_size=config.train_batch_size,
                                             shuffle=True,
                                             num_workers=4,
                                             drop_last=True)
https://github.com/robotic-vision-lab/Learning-Implicitly-From-Spatial-Transformers-Network/blob/c17bdb0695cf3cfc17c71e772f2146daacb969bb/train.py#L136

================================
https://github.com/skhu101/SHERF
================================

Found 4 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
DataLoader(test_set, batch_size=1, shuffle=False, num_workers=0, pin_memory=False)
DataLoader(test_set, batch_size=1, shuffle=False, num_workers=0, pin_memory=False)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/skhu101/SHERF/blob/9f360fc49ef6d659ddf63001d1e0b08b2fd2de29/sherf/metrics/metric_utils.py#L233
https://github.com/skhu101/SHERF/blob/9f360fc49ef6d659ddf63001d1e0b08b2fd2de29/sherf/training/test_loop.py#L172
https://github.com/skhu101/SHERF/blob/9f360fc49ef6d659ddf63001d1e0b08b2fd2de29/sherf/training/test_loop.py#L270
https://github.com/skhu101/SHERF/blob/9f360fc49ef6d659ddf63001d1e0b08b2fd2de29/sherf/training/training_loop.py#L180

===============================
https://github.com/jnnan/chairs
===============================

Found 5 times
DataLoader(train_dataset, batch_size=1, shuffle=True, num_workers=1)
DataLoader(test_dataset, batch_size=1, shuffle=True, num_workers=4)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=6)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=6)
DataLoader(test_dataset, batch_size=batch_size, shuffle=True, num_workers=6)
https://github.com/jnnan/chairs/blob/a5ca44d4ad9eecf55d9be0b2f4d1f8ccf1ee87f5/optimize_cvae_part.py#L50
https://github.com/jnnan/chairs/blob/a5ca44d4ad9eecf55d9be0b2f4d1f8ccf1ee87f5/test_voxel_pred.py#L44
https://github.com/jnnan/chairs/blob/a5ca44d4ad9eecf55d9be0b2f4d1f8ccf1ee87f5/train_contrast_voxel_vae.py#L23
https://github.com/jnnan/chairs/blob/a5ca44d4ad9eecf55d9be0b2f4d1f8ccf1ee87f5/train_voxel_pred.py#L23
https://github.com/jnnan/chairs/blob/a5ca44d4ad9eecf55d9be0b2f4d1f8ccf1ee87f5/train_voxel_pred.py#L25

==============================
https://github.com/edz-o/3DNBF
==============================

Found 16 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_workers=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/mmhuman3d/data/datasets/builder.py#L99
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L74
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L85
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L98
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L109
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L121
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L125
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L144
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L146
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L167
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L169
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L191
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L211
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L231
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L251
https://github.com/edz-o/3DNBF/blob/3f9e868c46c0f91b7a0f56ea9d19adda2a5b0bcf/tests/test_eval_hook.py#L272

============================================
https://github.com/ZM-Zhou/TiO-Depth_pytorch
============================================

Found 4 times
DataLoader(test_dataset,
                             1,
                             num_workers=opts.num_workers,
                             shuffle=False,
                             drop_last=True)
DataLoader(train_dataset,
                                           opts.batch_size,
                                           num_workers=opts.num_workers,
                                           shuffle=False,
                                           pin_memory=True,
                                           drop_last=True,
                                           sampler=self.train_sampler)
DataLoader(train_dataset,
                                           opts.batch_size,
                                           num_workers=opts.num_workers,
                                           shuffle=True,
                                           pin_memory=True,
                                           drop_last=True)
DataLoader(val_dataset,
                                     1,
                                     num_workers=opts.num_workers,
                                     shuffle=False,
                                     pin_memory=True)
https://github.com/ZM-Zhou/TiO-Depth_pytorch/blob/09fa3d9706bd80b9d5c3366e0d8f8ba58d99a026/evaluate.py#L143
https://github.com/ZM-Zhou/TiO-Depth_pytorch/blob/09fa3d9706bd80b9d5c3366e0d8f8ba58d99a026/train_dist_2.py#L175
https://github.com/ZM-Zhou/TiO-Depth_pytorch/blob/09fa3d9706bd80b9d5c3366e0d8f8ba58d99a026/train_dist_2.py#L183
https://github.com/ZM-Zhou/TiO-Depth_pytorch/blob/09fa3d9706bd80b9d5c3366e0d8f8ba58d99a026/train_dist_2.py#L190

====================================
https://github.com/YufeiWang777/LRRU
====================================

Found 3 times
torch.utils.data.DataLoader(data_train, batch_size=batch_size,
                                               shuffle=False, num_workers=args.num_threads,
                                               pin_memory=True, sampler=sampler_train, drop_last=True)
torch.utils.data.DataLoader(data_val, batch_size=batch_size,
                                             shuffle=False, num_workers=args.num_threads,
                                             pin_memory=True, sampler=sampler_val)
DataLoader(dataset=data_test,
                             batch_size=1,
                             shuffle=False,
                             num_workers=1)
https://github.com/YufeiWang777/LRRU/blob/02be555f3a5046f4441eafa782194fbd31dbdca0/train_apex.py#L122
https://github.com/YufeiWang777/LRRU/blob/02be555f3a5046f4441eafa782194fbd31dbdca0/train_apex.py#L130
https://github.com/YufeiWang777/LRRU/blob/02be555f3a5046f4441eafa782194fbd31dbdca0/val.py#L56

======================================
https://github.com/zhangyp15/OccFormer
======================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/zhangyp15/OccFormer/blob/44aee79434d6aedca0d97fe62965032505f583e7/projects/mmdet3d_plugin/datasets/builder.py#L83

==========================================
https://github.com/RuojinCai/Doppelgangers
==========================================

Found 5 times
torch.utils.data.DataLoader(
            dataset=tr_dataset, batch_size=cfg.data.train.batch_size,
            shuffle=(train_sampler is None),
            num_workers=cfg.data.num_workers, pin_memory=True,
            sampler=train_sampler, drop_last=True, worker_init_fn=init_np_seed)
torch.utils.data.DataLoader(
            dataset=te_dataset, batch_size=cfg.data.test.batch_size, shuffle=False,
            num_workers=cfg.data.num_workers, pin_memory=True, drop_last=False,
            worker_init_fn=init_np_seed)
torch.utils.data.DataLoader(
        dataset=tr_dataset, batch_size=cfg.train.batch_size,
        shuffle=True, num_workers=cfg.num_workers, drop_last=True,
        worker_init_fn=init_np_seed)
torch.utils.data.DataLoader(
        dataset=te_dataset, batch_size=cfg.test.batch_size,
        shuffle=False, num_workers=cfg.num_workers, drop_last=False,
        worker_init_fn=init_np_seed)
torch.utils.data.DataLoader(
        dataset=te_dataset, batch_size=cfg.test.batch_size,
        shuffle=False, num_workers=cfg.num_workers, drop_last=False,
        worker_init_fn=init_np_seed)
https://github.com/RuojinCai/Doppelgangers/blob/3be295cf4d05088e577d2eed3f124ef22375d0fd/train_multi_gpu.py#L133
https://github.com/RuojinCai/Doppelgangers/blob/3be295cf4d05088e577d2eed3f124ef22375d0fd/train_multi_gpu.py#L138
https://github.com/RuojinCai/Doppelgangers/blob/3be295cf4d05088e577d2eed3f124ef22375d0fd/doppelgangers/datasets/pairwise_disambiguation_dataset.py#L107
https://github.com/RuojinCai/Doppelgangers/blob/3be295cf4d05088e577d2eed3f124ef22375d0fd/doppelgangers/datasets/pairwise_disambiguation_dataset.py#L111
https://github.com/RuojinCai/Doppelgangers/blob/3be295cf4d05088e577d2eed3f124ef22375d0fd/doppelgangers/datasets/sfm_disambiguation_dataset.py#L84

==================================
https://github.com/nexuslrf/ENVIDR
==================================

Found 3 times
DataLoader(test_ids, batch_size=batch_size, collate_fn=self.collate, shuffle=self.training, num_workers=0)
DataLoader(test_ids, batch_size=1, collate_fn=self.collate, shuffle=self.training, num_workers=num_workers, pin_memory=True, prefetch_factor=8, persistent_workers=True)
DataLoader(test_ids, batch_size=1, collate_fn=self.collate, shuffle=self.training)
https://github.com/nexuslrf/ENVIDR/blob/64630034384b72a7d86aa41c1b8b3d2e6f207de6/nerf/provider.py#L384
https://github.com/nexuslrf/ENVIDR/blob/64630034384b72a7d86aa41c1b8b3d2e6f207de6/nerf/sph_loader.py#L349
https://github.com/nexuslrf/ENVIDR/blob/64630034384b72a7d86aa41c1b8b3d2e6f207de6/nerf/sph_loader.py#L351

======================================
https://github.com/VITA-Group/GNT-MOVE
======================================

Found 5 times
torch.utils.data.DataLoader(
            dataset,
            batch_size=1,
            worker_init_fn=lambda _: np.random.seed(),
            num_workers=args.workers,
            pin_memory=True,
            sampler=sampler,
            shuffle=True if sampler is None else False,
        )
DataLoader(dataset, batch_size=1)
DataLoader(dataset, batch_size=1)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=1,
        worker_init_fn=lambda _: np.random.seed(),
        num_workers=args.workers,
        pin_memory=True,
        sampler=train_sampler,
        shuffle=True if train_sampler is None else False,
    )
DataLoader(val_dataset, batch_size=1)
https://github.com/VITA-Group/GNT-MOVE/blob/3817bfcda0ad726b37165867a1c5703bb6be0b8d/eval.py#L65
https://github.com/VITA-Group/GNT-MOVE/blob/3817bfcda0ad726b37165867a1c5703bb6be0b8d/eval.py#L78
https://github.com/VITA-Group/GNT-MOVE/blob/3817bfcda0ad726b37165867a1c5703bb6be0b8d/render.py#L64
https://github.com/VITA-Group/GNT-MOVE/blob/3817bfcda0ad726b37165867a1c5703bb6be0b8d/train.py#L77
https://github.com/VITA-Group/GNT-MOVE/blob/3817bfcda0ad726b37165867a1c5703bb6be0b8d/train.py#L90

=============================
https://github.com/SysCV/r3d3
=============================

Found 1 times
DataLoader(
                dataset,
                batch_size=1,
                pin_memory=True,
                num_workers=n_workers,
                shuffle=False,
            )
https://github.com/SysCV/r3d3/blob/140a89873661265cb25ce43d2600bcfd3e8d76d6/evaluation_utils/dataloader_wrapper.py#L102

======================================
https://github.com/tiangexiang/OccNeRF
======================================

Found 1 times
torch.utils.data.DataLoader(dataset=dataset,
                                              batch_size=batch_size,
                                              shuffle=shuffle,
                                              drop_last=drop_last,
                                              num_workers=2,#cfg.num_workers,
                                              worker_init_fn=_worker_init_fn)
https://github.com/tiangexiang/OccNeRF/blob/5e254d88ef1bd9acb0936ab6a040d94546efd451/core/data/create_dataset.py#L67

===================================
https://github.com/wqtwjt1996/SUM-L
===================================

Found 2 times
torch.utils.data.DataLoader(
            dataset,
            batch_sampler=batch_sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=collate_fn,
            # timeout=10,
        )
https://github.com/wqtwjt1996/SUM-L/blob/9d57c619545e0bc5d16f30fbf332839971b6752c/slowfast/datasets/loader.py#L187
https://github.com/wqtwjt1996/SUM-L/blob/9d57c619545e0bc5d16f30fbf332839971b6752c/slowfast/datasets/loader.py#L212

=====================================
https://github.com/valeoai/WaffleIron
=====================================

Found 4 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
        collate_fn=Collate(),
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
        collate_fn=Collate(),
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=(train_sampler is None),
        num_workers=args.workers,
        pin_memory=True,
        sampler=train_sampler,
        drop_last=True,
        collate_fn=Collate(),
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers,
        pin_memory=True,
        sampler=val_sampler,
        drop_last=False,
        collate_fn=Collate(),
    )
https://github.com/valeoai/WaffleIron/blob/9e845eb96ebd5a50fd444c74cb3939f6f952d025/eval_kitti.py#L77
https://github.com/valeoai/WaffleIron/blob/9e845eb96ebd5a50fd444c74cb3939f6f952d025/eval_nuscenes.py#L71
https://github.com/valeoai/WaffleIron/blob/9e845eb96ebd5a50fd444c74cb3939f6f952d025/launch_train.py#L111
https://github.com/valeoai/WaffleIron/blob/9e845eb96ebd5a50fd444c74cb3939f6f952d025/launch_train.py#L121

=====================================
https://github.com/nburgdorfer/V-FUSE
=====================================

Found 4 times
DataLoader(self.train_dataset,
                                         self.cfg["training"]["batch_size"],
                                         shuffle=True,
                                         num_workers=self.cfg["training"]["num_workers"],
                                         pin_memory=True,
                                         drop_last=True)
DataLoader(self.val_dataset,
                                         1,
                                         shuffle=False,
                                         num_workers=self.cfg["training"]["num_workers"],
                                         pin_memory=True,
                                         drop_last=False)
DataLoader(self.dataset,
                                         1,
                                         shuffle=False,
                                         num_workers=self.cfg["training"]["num_workers"],
                                         pin_memory=False,
                                         drop_last=False)
torch.utils.data.DataLoader(load_set, batch_size=ARGS.batch_size, shuffle=False, num_workers=ARGS.num_workers, pin_memory=True)
https://github.com/nburgdorfer/V-FUSE/blob/97a5362411b3b5a30b05473daefecf10e82e9837/src/vfuse.py#L89
https://github.com/nburgdorfer/V-FUSE/blob/97a5362411b3b5a30b05473daefecf10e82e9837/src/vfuse.py#L97
https://github.com/nburgdorfer/V-FUSE/blob/97a5362411b3b5a30b05473daefecf10e82e9837/src/vfuse.py#L110
https://github.com/nburgdorfer/V-FUSE/blob/97a5362411b3b5a30b05473daefecf10e82e9837/src/tools/evaluation/run_stats.py#L45

==========================================
https://github.com/pansanity666/TransHuman
==========================================

Found 1 times
torch.utils.data.DataLoader(dataset,
                                              batch_sampler=batch_sampler,
                                              num_workers=num_workers,
                                              collate_fn=collator,
                                              worker_init_fn=worker_init_fn)
https://github.com/pansanity666/TransHuman/blob/efe870349f39e8e5fce3379b76107b0c4e35e2df/lib/datasets/make_dataset.py#L85

========================================
https://github.com/Ethereal-Tian/DPS_Net
========================================

Found 1 times
data.DataLoader(dataset, batch_size=args.batch_size, 
        pin_memory=True, shuffle=True, num_workers=int(os.environ.get('SLURM_CPUS_PER_TASK', 6))-2, drop_last=True)
https://github.com/Ethereal-Tian/DPS_Net/blob/b8dc083327be0cac8699f7f55644f1783e538f25/core/rgbp_stereo_datasets.py#L327

===================================
https://github.com/apple/ml-neilfpp
===================================

Found 1 times
torch.utils.data.DataLoader(
            self.dataset, batch_size=1, shuffle=False, drop_last=False, 
            collate_fn=self.dataset.collate_fn)
https://github.com/apple/ml-neilfpp/blob/da02a63fff9b830b502f9f30db6ed6670de7390e/code/training/train.py#L171

=====================================
https://github.com/exiawsh/StreamPETR
=====================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        batch_sampler=batch_sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/exiawsh/StreamPETR/blob/2315cf9f077817ec7089c87094ba8a63f76c2acf/projects/mmdet3d_plugin/datasets/builder.py#L107

====================================
https://github.com/zhangzw12319/lcps
====================================

Found 10 times
torch.utils.data.DataLoader(dataset=test_dataset,
                                                         batch_size=test_batch_size,
                                                         collate_fn=collate_fn_BEV,
                                                         sampler=test_sampler,
                                                         pin_memory=True,
                                                         num_workers=num_worker)
torch.utils.data.DataLoader(dataset=test_dataset,
                                                         batch_size=test_batch_size,
                                                         collate_fn=collate_fn_BEV,
                                                         shuffle=False,
                                                         pin_memory=True,
                                                         num_workers=num_worker)
torch.utils.data.DataLoader(dataset=train_dataset,
                                                           batch_size=train_batch_size,
                                                           collate_fn=collate_fn_BEV,
                                                           sampler=train_sampler,
                                                           pin_memory=True,
                                                           num_workers=num_worker)
torch.utils.data.DataLoader(dataset=val_dataset,
                                                         batch_size=val_batch_size,
                                                         collate_fn=collate_fn_BEV,
                                                         sampler=val_sampler,
                                                         pin_memory=True,
                                                         num_workers=num_worker)
torch.utils.data.DataLoader(dataset=train_dataset,
                                                           batch_size=train_batch_size,
                                                           collate_fn=collate_fn_BEV,
                                                           shuffle=True,
                                                           pin_memory=True,
                                                           num_workers=num_worker)
torch.utils.data.DataLoader(dataset=val_dataset,
                                                         batch_size=val_batch_size,
                                                         collate_fn=collate_fn_BEV,
                                                         shuffle=False,
                                                         pin_memory=True,
                                                         num_workers=num_worker)
torch.utils.data.DataLoader(dataset=val_dataset,
                                                         batch_size=val_batch_size,
                                                         collate_fn=collate_fn_BEV,
                                                         sampler=val_sampler,
                                                         pin_memory=True,
                                                         num_workers=num_worker)
torch.utils.data.DataLoader(dataset=val_dataset,
                                                         batch_size=val_batch_size,
                                                         collate_fn=collate_fn_BEV,
                                                         shuffle=False,
                                                         pin_memory=True,
                                                         num_workers=num_worker)
torch.utils.data.DataLoader(dataset=val_dataset,
                                                         batch_size=val_batch_size,
                                                         collate_fn=collate_fn_BEV,
                                                         sampler=val_sampler,
                                                         pin_memory=True,
                                                         num_workers=num_worker)
torch.utils.data.DataLoader(dataset=val_dataset,
                                                         batch_size=val_batch_size,
                                                         collate_fn=collate_fn_BEV,
                                                         shuffle=False,
                                                         pin_memory=True,
                                                         num_workers=num_worker)
https://github.com/zhangzw12319/lcps/blob/479075f9cb461bc5ec1f2df19eb2649e27a672fb/test.py#L139
https://github.com/zhangzw12319/lcps/blob/479075f9cb461bc5ec1f2df19eb2649e27a672fb/test.py#L146
https://github.com/zhangzw12319/lcps/blob/479075f9cb461bc5ec1f2df19eb2649e27a672fb/train.py#L170
https://github.com/zhangzw12319/lcps/blob/479075f9cb461bc5ec1f2df19eb2649e27a672fb/train.py#L176
https://github.com/zhangzw12319/lcps/blob/479075f9cb461bc5ec1f2df19eb2649e27a672fb/train.py#L183
https://github.com/zhangzw12319/lcps/blob/479075f9cb461bc5ec1f2df19eb2649e27a672fb/train.py#L189
https://github.com/zhangzw12319/lcps/blob/479075f9cb461bc5ec1f2df19eb2649e27a672fb/val.py#L141
https://github.com/zhangzw12319/lcps/blob/479075f9cb461bc5ec1f2df19eb2649e27a672fb/val.py#L148
https://github.com/zhangzw12319/lcps/blob/479075f9cb461bc5ec1f2df19eb2649e27a672fb/vis_projection.py#L138
https://github.com/zhangzw12319/lcps/blob/479075f9cb461bc5ec1f2df19eb2649e27a672fb/vis_projection.py#L145

=============================================
https://github.com/qianmingduowan/Sat2Density
=============================================

Found 8 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=shuffle and (sampler is None),
        sampler=sampler,
        pin_memory=True,
        num_workers=num_workers,
        drop_last=drop_last,
        persistent_workers=persistent_workers if num_workers > 0 else False
    )
DataLoader(data_pred,batch_size=1,shuffle=False,num_workers=10)
DataLoader(data_gt,batch_size=1,shuffle=False,num_workers=10)
DataLoader(train_data,batch_size=opt.batch_size,shuffle=True,num_workers=opt.data.num_workers,drop_last=True)
DataLoader(val_data,batch_size=opt.batch_size,shuffle=False,num_workers=opt.data.num_workers)
DataLoader(sty_data,batch_size=1,num_workers=1,shuffle=False)
DataLoader(sty1_data,batch_size=1,num_workers=1,shuffle=False)
DataLoader(sty2_data,batch_size=1,num_workers=1,shuffle=False)
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/imaginaire/utils/dataset.py#L56
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/inference/get_score_from_dir.py#L56
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/inference/get_score_from_dir.py#L57
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/craft_feature.py#L113
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/craft_feature.py#L119
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/craft_feature.py#L125
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/craft_feature.py#L129
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/craft_feature.py#L132

=================================================================
https://github.com/dvlab-research/Mask-Attention-Free-Transformer
=================================================================

Found 2 times
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            collate_fn=dataset.collate_fn,
            shuffle=shuffle,
            sampler=sampler,
            drop_last=True,
            pin_memory=True,
            persistent_workers=persistent_workers)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            collate_fn=dataset.collate_fn,
            shuffle=False,
            sampler=sampler,
            drop_last=False,
            pin_memory=True,
            persistent_workers=persistent_workers)
https://github.com/dvlab-research/Mask-Attention-Free-Transformer/blob/4b5048c0e08c2fc42f660dfea3209043179ace1b/maft/dataset/__init__.py#L26
https://github.com/dvlab-research/Mask-Attention-Free-Transformer/blob/4b5048c0e08c2fc42f660dfea3209043179ace1b/maft/dataset/__init__.py#L38

==============================================
https://github.com/zhuoxiao-chen/ReDB-DA-3Ddet
==============================================

Found 1 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
https://github.com/zhuoxiao-chen/ReDB-DA-3Ddet/blob/7d24bd0f1d0ea14efbaf539c4717ffd28cd30ef8/pcdet/datasets/__init__.py#L66

==========================================
https://github.com/KaiqiangXiong/CL-MVSNet
==========================================

Found 1 times
data.DataLoader(dataset, args.batch_size, sampler=sampler, num_workers=4, drop_last=(mode == "train"), pin_memory=True)
https://github.com/KaiqiangXiong/CL-MVSNet/blob/92a6190b99f30a9f7c098a0d4773f036994fd683/datasets/__init__.py#L23

==============================
https://github.com/Sense-X/HoP
==============================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/Sense-X/HoP/blob/9f6e8823c26a7b126091d6dffaf7eb277a14b5d5/mmdet3d_plugin/datasets/builder.py#L83

=====================================
https://github.com/amundra15/livehand
=====================================

Found 2 times
DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=0, drop_last=False, generator=torch.Generator(device='cuda'))
DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=0, drop_last=True, generator=torch.Generator(device='cuda'))
https://github.com/amundra15/livehand/blob/b5137cf2da7efd1b58b5b54b50b81dd1a460d331/test.py#L33
https://github.com/amundra15/livehand/blob/b5137cf2da7efd1b58b5b54b50b81dd1a460d331/train.py#L34

====================================
https://github.com/MCG-NJU/SparseBEV
====================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/MCG-NJU/SparseBEV/blob/527428d4530741c7adc765d7b584a5cd1963b5d1/loaders/builder.py#L39

========================================
https://github.com/Zerg-Overmind/Strivec
========================================

Found 1 times
DataLoader(dataset, batch_size=2)
https://github.com/Zerg-Overmind/Strivec/blob/4ba68526fd036fc66b7eb6c933ce395ebbf258a6/mvs/mvsnet/module.py#L91

====================================================
https://github.com/weitong8591/differentiable_ransac
====================================================

Found 10 times
torch.utils.data.DataLoader(
            dataset, batch_size=opt.batch_size, num_workers=0, pin_memory=False, shuffle=False
        )
torch.utils.data.DataLoader(
            dataset, batch_size=opt.batch_size, num_workers=0, pin_memory=False, shuffle=False)
torch.utils.data.DataLoader(
            dataset, batch_size=opt.batch_size, num_workers=0, pin_memory=False, shuffle=False)
torch.utils.data.DataLoader(
            dataset, batch_size=opt.batch_size, num_workers=opt.num_workers, pin_memory=False, shuffle=False)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=config.batch_size,
        num_workers=config.num_workers,
        pin_memory=True,
        shuffle=True
    )
torch.utils.data.DataLoader(
        valid_dataset,
        batch_size=config.batch_size,
        num_workers=0,
        pin_memory=True,
        shuffle=True
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=config.batch_size,
        num_workers=config.num_workers,
        pin_memory=True,
        shuffle=True
    )
torch.utils.data.DataLoader(
        v_dataset,
        batch_size=config.batch_size,
        num_workers=config.num_workers,
        pin_memory=True,
        shuffle=True
    )
torch.utils.data.DataLoader(train_dataset, batch_size=config.batch_size, num_workers=0,
                                               pin_memory=True, shuffle=True)
torch.utils.data.DataLoader(valid_dataset, batch_size=config.batch_size, num_workers=0,
                                               pin_memory=True, shuffle=True)
https://github.com/weitong8591/differentiable_ransac/blob/d128128c1038f1eb8fbde94c2779bfc41092e994/test.py#L134
https://github.com/weitong8591/differentiable_ransac/blob/d128128c1038f1eb8fbde94c2779bfc41092e994/test_magsac.py#L226
https://github.com/weitong8591/differentiable_ransac/blob/d128128c1038f1eb8fbde94c2779bfc41092e994/test_magsac_point.py#L101
https://github.com/weitong8591/differentiable_ransac/blob/d128128c1038f1eb8fbde94c2779bfc41092e994/test_ransac_loftr.py#L174
https://github.com/weitong8591/differentiable_ransac/blob/d128128c1038f1eb8fbde94c2779bfc41092e994/train.py#L263
https://github.com/weitong8591/differentiable_ransac/blob/d128128c1038f1eb8fbde94c2779bfc41092e994/train.py#L271
https://github.com/weitong8591/differentiable_ransac/blob/d128128c1038f1eb8fbde94c2779bfc41092e994/train_point.py#L170
https://github.com/weitong8591/differentiable_ransac/blob/d128128c1038f1eb8fbde94c2779bfc41092e994/train_point.py#L178
https://github.com/weitong8591/differentiable_ransac/blob/d128128c1038f1eb8fbde94c2779bfc41092e994/train_ransac_loftr.py#L188
https://github.com/weitong8591/differentiable_ransac/blob/d128128c1038f1eb8fbde94c2779bfc41092e994/train_ransac_loftr.py#L191

==================================
https://github.com/DIVE128/DMVSNet
==================================

Found 1 times
data.DataLoader(dataset, args.batch_size, sampler=sampler, num_workers=4, drop_last=(mode == "train"), pin_memory=True)
https://github.com/DIVE128/DMVSNet/blob/d37a0b2da8017ac88d48208e4f062c72248c48d5/datasets/__init__.py#L29

==========================================
https://github.com/andrewsonga/Total-Recon
==========================================

Found 12 times
DataLoader(data_inuse,
         batch_size= opts_dict['batch_size'], num_workers=num_workers, 
         drop_last=True, worker_init_fn=_init_fn, pin_memory=True,
         sampler=sampler)
DataLoader(dataset,
         batch_size= 1, num_workers=num_workers, drop_last=False, pin_memory=True, shuffle=False)
DataLoader(data_inuse,
         batch_size= opts_dict['batch_size'], num_workers=num_workers, 
         drop_last=True, worker_init_fn=_init_fn, pin_memory=True,
         sampler=sampler)
DataLoader(dataset,
         batch_size= 1, num_workers=num_workers, drop_last=False, pin_memory=True, shuffle=False)
DataLoader(dataset,
         batch_size= 1, num_workers=0, drop_last=False, 
         pin_memory=True, shuffle=False)
torch.utils.data.DataLoader(
        dataset,
        sampler=(TrainingSampler if training else InferenceSampler)(len(dataset)),
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
            dataset,
            sampler=sampler,
            num_workers=num_workers,
            batch_sampler=None,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=trivial_batch_collator,
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
        dataset,  # pyre-ignore[6]
        batch_size=dataset_cfg.IMAGE_LOADER.BATCH_SIZE,
        sampler=training_sampler,
        num_workers=dataset_cfg.IMAGE_LOADER.NUM_WORKERS,
        collate_fn=trivial_batch_collator,
        worker_init_fn=worker_init_reset_seed,
    )
data.DataLoader(dataset, num_workers=0, collate_fn=operator.itemgetter(0))
data.DataLoader(
            dataset,
            num_workers=2,
            collate_fn=operator.itemgetter(0),
            worker_init_fn=worker_init_reset_seed,
            # reset seed should not affect behavior of TrainingSampler
        )
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/dataloader/frameloader.py#L47
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/dataloader/frameloader.py#L59
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/dataloader/frameloader_obj.py#L47
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/dataloader/frameloader_obj.py#L59
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/preprocess/img2lines.py#L92
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/third_party/detectron2_old/configs/Misc/torchvision_imagenet_R_50.py#L41
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/third_party/detectron2_old/detectron2/data/build.py#L286
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/third_party/detectron2_old/detectron2/data/build.py#L299
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/third_party/detectron2_old/detectron2/data/build.py#L456
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/third_party/detectron2_old/projects/DensePose/densepose/data/build.py#L658
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/third_party/detectron2_old/tests/data/test_sampler.py#L43
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/third_party/detectron2_old/tests/data/test_sampler.py#L48

======================================
https://github.com/windingwind/seal-3d
======================================

Found 4 times
torch.utils.data.DataLoader(train_dataset, batch_size=1, shuffle=True)
torch.utils.data.DataLoader(valid_dataset, batch_size=1)
DataLoader(list(range(size)), batch_size=1, collate_fn=self.collate, shuffle=self.training, num_workers=0)
DataLoader(list(range(size)), batch_size=1, collate_fn=self.collate, shuffle=self.training, num_workers=0)
https://github.com/windingwind/seal-3d/blob/c0688ae2af3be603ea219d2c20f17ac80b5a7e63/main_sdf.py#L44
https://github.com/windingwind/seal-3d/blob/c0688ae2af3be603ea219d2c20f17ac80b5a7e63/main_sdf.py#L47
https://github.com/windingwind/seal-3d/blob/c0688ae2af3be603ea219d2c20f17ac80b5a7e63/dnerf/provider.py#L358
https://github.com/windingwind/seal-3d/blob/c0688ae2af3be603ea219d2c20f17ac80b5a7e63/nerf/provider.py#L329

==================================
https://github.com/phdymz/PointMBF
==================================

Found 2 times
DataLoader(
        dataset=dataset,
        batch_size=int(batch_size),
        shuffle=shuffle,
        pin_memory=True,
        num_workers=cfg.num_workers,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=int(batch_size),
        shuffle=shuffle,
        num_workers=cfg.num_workers,
        collate_fn=partial(collate_fn, config=cfg, neighborhood_limits=neighborhood_limits),
        drop_last=False
    )
https://github.com/phdymz/PointMBF/blob/62652d5248e807f06183888339f7310cffe47daf/datasets/builder.py#L121
https://github.com/phdymz/PointMBF/blob/62652d5248e807f06183888339f7310cffe47daf/datasets/builder.py#L181

===================================
https://github.com/A-suozhang/ada3d
===================================

Found 1 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        # shuffle=(sampler is None) and training,
        shuffle=False,   # DEBUG: use sema shuffle for even training
        collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0, worker_init_fn=partial(common_utils.worker_init_fn, seed=seed)
    )
https://github.com/A-suozhang/ada3d/blob/9512743df55281e9f5933b09f503ae2882fe9a5a/openpcdet/pcdet/datasets/__init__.py#L76

=====================================
https://github.com/ashawkey/nerf2mesh
=====================================

Found 3 times
DataLoader(list(range(size)), batch_size=1, collate_fn=self.collate, shuffle=self.training, num_workers=0)
DataLoader(list(range(size)), batch_size=1, collate_fn=self.collate, shuffle=self.training, num_workers=0)
DataLoader(list(range(size)), batch_size=1, collate_fn=self.collate, shuffle=self.training, num_workers=0)
https://github.com/ashawkey/nerf2mesh/blob/c95c72f19d51635fa3de0cce8f3f263cf74f1b17/nerf/colmap_provider.py#L581
https://github.com/ashawkey/nerf2mesh/blob/c95c72f19d51635fa3de0cce8f3f263cf74f1b17/nerf/dtu_provider.py#L294
https://github.com/ashawkey/nerf2mesh/blob/c95c72f19d51635fa3de0cce8f3f263cf74f1b17/nerf/provider.py#L329

====================================
https://github.com/fengziyue/CVRecon
====================================

Found 3 times
torch.utils.data.DataLoader(
        dset, batch_size=2, collate_fn=collate.sparse_collate_fn
    )
torch.utils.data.DataLoader(
            dset,
            batch_size=batch_size,
            num_workers=nworkers,
            collate_fn=collate.sparse_collate_fn,
            drop_last=True,
            #persistent_workers=True,
        )
torch.utils.data.DataLoader(dataset, batch_size=None, collate_fn=collate_fn,
                                                 batch_sampler=None, num_workers=args.loader_num_workers)
https://github.com/fengziyue/CVRecon/blob/90de66f6e79cb5c32cbb4878fe7e39d9441571f7/cvrecon/data.py#L578
https://github.com/fengziyue/CVRecon/blob/90de66f6e79cb5c32cbb4878fe7e39d9441571f7/cvrecon/lightningmodel.py#L132
https://github.com/fengziyue/CVRecon/blob/90de66f6e79cb5c32cbb4878fe7e39d9441571f7/tools/generate_gt.py#L214

================================
https://github.com/kyleleey/RICO
================================

Found 3 times
torch.utils.data.DataLoader(self.train_dataset,
                                                            batch_size=self.batch_size,
                                                            shuffle=True,
                                                            collate_fn=self.train_dataset.collate_fn,
                                                            num_workers=4)
torch.utils.data.DataLoader(self.train_dataset,
                                                           batch_size=self.conf.get_int('plot.plot_nimgs'),
                                                           shuffle=True,
                                                           collate_fn=self.train_dataset.collate_fn
                                                           )
torch.utils.data.DataLoader(
    train_dataset,
    batch_size=conf.get_int('plot.plot_nimgs'),
    shuffle=False,
    collate_fn=train_dataset.collate_fn)
https://github.com/kyleleey/RICO/blob/4254e6ff8581d21833e1b42e0352a7a63da788b1/code/training/rico_train.py#L97
https://github.com/kyleleey/RICO/blob/4254e6ff8581d21833e1b42e0352a7a63da788b1/code/training/rico_train.py#L102
https://github.com/kyleleey/RICO/blob/4254e6ff8581d21833e1b42e0352a7a63da788b1/scripts/edit_render.py#L292

=======================================
https://github.com/jimmy19991222/ELFNet
=======================================

Found 3 times
data.DataLoader(dataset_train, batch_size=args.batch_size, shuffle=True,
                                        num_workers=args.num_workers, pin_memory=True)
data.DataLoader(dataset_validation, batch_size=args.batch_size, shuffle=False,
                                             num_workers=args.num_workers, pin_memory=True)
data.DataLoader(dataset_test, batch_size=args.batch_size, shuffle=False,
                                       num_workers=args.num_workers, pin_memory=True)
https://github.com/jimmy19991222/ELFNet/blob/b2051cd149fb7442be04acab03fce47f05b9a370/dataset/__init__.py#L46
https://github.com/jimmy19991222/ELFNet/blob/b2051cd149fb7442be04acab03fce47f05b9a370/dataset/__init__.py#L48
https://github.com/jimmy19991222/ELFNet/blob/b2051cd149fb7442be04acab03fce47f05b9a370/dataset/__init__.py#L50

======================================
https://github.com/VinAIResearch/GaPro
======================================

Found 5 times
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            collate_fn=dataset.collate_fn,
            shuffle=shuffle,
            sampler=sampler,
            drop_last=True,
            pin_memory=True,
        )
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            collate_fn=dataset.collate_fn,
            shuffle=False,
            sampler=sampler,
            drop_last=False,
            pin_memory=True,
        )
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            collate_fn=dataset.collate_fn,
            shuffle=shuffle,
            sampler=sampler,
            drop_last=True,
            pin_memory=True,
            persistent_workers=persistent_workers,
        )
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            collate_fn=dataset.collate_fn,
            shuffle=False,
            sampler=sampler,
            drop_last=False,
            pin_memory=True,
            persistent_workers=persistent_workers,
        )
DataLoader(train_ds, batch_size=bs, shuffle=True, drop_last=False)
https://github.com/VinAIResearch/GaPro/blob/c54edc654a705a3e78ee29d3c6f776b6ee6a940b/ISBNet/isbnet/data/__init__.py#L30
https://github.com/VinAIResearch/GaPro/blob/c54edc654a705a3e78ee29d3c6f776b6ee6a940b/ISBNet/isbnet/data/__init__.py#L42
https://github.com/VinAIResearch/GaPro/blob/c54edc654a705a3e78ee29d3c6f776b6ee6a940b/SPFormer/spformer/dataset/__init__.py#L27
https://github.com/VinAIResearch/GaPro/blob/c54edc654a705a3e78ee29d3c6f776b6ee6a940b/SPFormer/spformer/dataset/__init__.py#L40
https://github.com/VinAIResearch/GaPro/blob/c54edc654a705a3e78ee29d3c6f776b6ee6a940b/gapro/gaussian_process_utils.py#L330

========================================
https://github.com/AllenXiangX/Retro-FPN
========================================

Found 25 times
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size, shuffle=(train_sampler is None), num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True, collate_fn=collate_fn)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val, shuffle=False, num_workers=args.workers, pin_memory=True, sampler=val_sampler, collate_fn=collate_fn)
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size, shuffle=(train_sampler is None), num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True, collate_fn=collate_fn)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val, shuffle=False, num_workers=args.workers, pin_memory=True, sampler=val_sampler, collate_fn=collate_fn)
torch.utils.data.DataLoader(val_data, batch_size=args.test_batch_size,
                                                 shuffle=False, num_workers=args.test_workers, pin_memory=True,
                                                 drop_last=False, collate_fn=collation_fn_eval_all,
                                                 sampler=val_sampler)
torch.utils.data.DataLoader(val_data, batch_size=args.test_batch_size,
                                                 shuffle=False, num_workers=args.test_workers, pin_memory=True,
                                                 drop_last=False, collate_fn=collation_fn_eval_all,
                                                 sampler=val_sampler)
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size,
                                                   shuffle=(train_sampler is None),
                                                   num_workers=args.workers, pin_memory=True, sampler=train_sampler,
                                                   drop_last=True, collate_fn=collation_fn,
                                                   worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val,
                                                     shuffle=False, num_workers=args.workers, pin_memory=True,
                                                     drop_last=False, collate_fn=collation_fn_eval_all,
                                                     sampler=val_sampler)
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size,
                                                   shuffle=(train_sampler is None),
                                                   num_workers=args.workers, pin_memory=True, sampler=train_sampler,
                                                   drop_last=True, collate_fn=collation_fn,
                                                   worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val,
                                                     shuffle=False, num_workers=args.workers, pin_memory=True,
                                                     drop_last=False, collate_fn=collation_fn_eval_all,
                                                     sampler=val_sampler)
DataLoader(
        dataset,
        num_workers=config.num_workers,
        shuffle=is_train,
        collate_fn=minkowski_collate_fn if is_minknet else stack_collate_fn,
        batch_size=config.batch_size,
    )
torch.utils.data.DataLoader(dset, **args)
DataLoader(
            DummyDataset("train", voxel_size=self.voxel_size),
            batch_size=self.batch_size,
            collate_fn=minkowski_collate_fn,
            shuffle=True,
        )
DataLoader(
            DummyDataset("val", voxel_size=self.voxel_size),
            batch_size=self.val_batch_size,
            collate_fn=minkowski_collate_fn,
        )
DataLoader(
        dataset, num_workers=4, collate_fn=stack_collate_fn, batch_size=16,
    )
DataLoader(
        dataset, num_workers=4, collate_fn=minkowski_collate_fn, batch_size=16,
    )
torch.utils.data.DataLoader(dset, **args)
DataLoader(
        train_dataset,
        batch_size=config.batch_size,
        # 1) collate_fn=collation_fn,
        # 2) collate_fn=ME.utils.batch_sparse_collate,
        # 3) collate_fn=ME.utils.SparseCollation(),
        collate_fn=ME.utils.batch_sparse_collate,
        num_workers=1)
torch.utils.data.DataLoader(dset, **args)
torch.utils.data.DataLoader(
                    self.data_paths, collate_fn=lambda x: torch.load(x[0]),
                    num_workers=min(8, mp.cpu_count()), shuffle=False)
torch.utils.data.DataLoader(train_data, batch_size=16, shuffle=True, num_workers=4, pin_memory=True,
                                               worker_init_fn=worker_init_fn, collate_fn=collation_fn)
torch.utils.data.DataLoader(val_data, batch_size=16, shuffle=False, num_workers=4, pin_memory=True,
                                             worker_init_fn=worker_init_fn, collate_fn=collation_fn_eval_all)
torch.utils.data.DataLoader(train_data,
                                                   batch_size=self.cfg.batch_size_per_gpu,
                                                   shuffle=(train_sampler is None),
                                                   num_workers=self.cfg.num_worker_per_gpu,
                                                   sampler=train_sampler,
                                                   collate_fn=partial(point_collate_fn,
                                                                      max_batch_points=self.cfg.max_batch_points,
                                                                      mix_prob=self.cfg.mix_prob
                                                                      ),
                                                   pin_memory=True,
                                                   worker_init_fn=init_fn,
                                                   drop_last=True,
                                                   persistent_workers=True)
torch.utils.data.DataLoader(val_data,
                                                     batch_size=self.cfg.batch_size_val_per_gpu,
                                                     shuffle=False,
                                                     num_workers=self.cfg.num_worker_per_gpu,
                                                     pin_memory=True,
                                                     sampler=val_sampler,
                                                     collate_fn=collate_fn)
torch.utils.data.DataLoader(test_dataset,
                                              batch_size=cfg.batch_size_val_per_gpu,
                                              shuffle=False,
                                              num_workers=cfg.num_worker_per_gpu,
                                              pin_memory=True,
                                              collate_fn=collate_fn)
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_point-transformer/train.py#L187
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_point-transformer/train.py#L197
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_point-transformer/tool/train.py#L173
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_point-transformer/tool/train.py#L183
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/test.py#L151
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/test.py#L161
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/train.py#L203
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/train.py#L212
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/train.py#L221
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/train.py#L230
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/MinkowskiEngine/examples/classification_modelnet40.py#L314
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/MinkowskiEngine/examples/completion.py#L119
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/MinkowskiEngine/examples/multigpu_lightning.py#L152
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/MinkowskiEngine/examples/multigpu_lightning.py#L160
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/MinkowskiEngine/examples/pointnet.py#L253
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/MinkowskiEngine/examples/pointnet.py#L258
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/MinkowskiEngine/examples/reconstruction.py#L276
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/MinkowskiEngine/examples/training.py#L181
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/MinkowskiEngine/examples/vae.py#L181
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/dataset/scanNet3D.py#L124
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/dataset/scanNet3D.py#L201
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/s3dis_scannet_minkowskinet/dataset/scanNet3D.py#L203
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/scannet_ptv2/pcr/engines/defaults.py#L545
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/scannet_ptv2/pcr/engines/defaults.py#L568
https://github.com/AllenXiangX/Retro-FPN/blob/5cfffe453b2bb887b2118acb36363e85e84925ab/scannet_ptv2/tools/test.py#L71

============================================
https://github.com/JeffWang987/OpenOccupancy
============================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/JeffWang987/OpenOccupancy/blob/a97019a31b968e25206472eb28d10ee0ec0ab9b5/projects/occ_plugin/datasets/builder.py#L82

====================================================
https://github.com/nikola3794/normal-clustering-nerf
====================================================

Found 2 times
DataLoader(self.train_dataset,
                          num_workers=16, #16
                          persistent_workers=True, #True
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8, #8
                          batch_size=None,
                          pin_memory=True)
https://github.com/nikola3794/normal-clustering-nerf/blob/1ea5a5be08667217854a5764f6045fb54a7739c1/train_nerf.py#L294
https://github.com/nikola3794/normal-clustering-nerf/blob/1ea5a5be08667217854a5764f6045fb54a7739c1/train_nerf.py#L301

==================================
https://github.com/tianfr/MonoNeRF
==================================

Found 3 times
torch.utils.data.DataLoader(
        llff_dataset, batch_size=2, shuffle=False, num_workers=8, pin_memory=False
    )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=args.batch_size,
            shuffle=True,
            num_workers=0,
            pin_memory=True,
        )
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
https://github.com/tianfr/MonoNeRF/blob/b0f501f27b2a5d041a4bb15f3d7d339faf4f6d72/src/data/LLFFDataset.py#L559
https://github.com/tianfr/MonoNeRF/blob/b0f501f27b2a5d041a4bb15f3d7d339faf4f6d72/train/trainlib/trainer.py#L113
https://github.com/tianfr/MonoNeRF/blob/b0f501f27b2a5d041a4bb15f3d7d339faf4f6d72/train/utils/RAFT/datasets.py#L230

======================================
https://github.com/xubaixinxbx/3dheads
======================================

Found 2 times
torch.utils.data.DataLoader(self.train_dataset,
                                                            batch_size=self.batch_size,
                                                            shuffle=True,
                                                            collate_fn=self.train_dataset.collate_fn,
                                                            num_workers=8,
                                                            )
torch.utils.data.DataLoader(self.train_dataset,
                                                           batch_size=self.conf.get_int('plot.plot_nimgs'),
                                                           shuffle=True,
                                                           collate_fn=self.train_dataset.collate_fn
                                                           )
https://github.com/xubaixinxbx/3dheads/blob/19e03cf5d8ec2e3be8e49cc6ca8326b6f3374a68/code/training/volsdf_train.py#L92
https://github.com/xubaixinxbx/3dheads/blob/19e03cf5d8ec2e3be8e49cc6ca8326b6f3374a68/code/training/volsdf_train.py#L98

==============================
https://github.com/naver/croco
==============================

Found 4 times
torch.utils.data.DataLoader(
        dataset, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
DataLoader(dataset, batch_size=1, shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
        train_dataset, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
DataLoader(val_dataset, batch_size=1, shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=False)
https://github.com/naver/croco/blob/743ee71a2a9bf57cea6832a9064a70a0597fcfcb/pretrain.py#L109
https://github.com/naver/croco/blob/743ee71a2a9bf57cea6832a9064a70a0597fcfcb/stereoflow/test.py#L137
https://github.com/naver/croco/blob/743ee71a2a9bf57cea6832a9064a70a0597fcfcb/stereoflow/train.py#L184
https://github.com/naver/croco/blob/743ee71a2a9bf57cea6832a9064a70a0597fcfcb/stereoflow/train.py#L197

==========================================================
https://github.com/AaltoVision/surface-curvature-estimator
==========================================================

Found 4 times
DataLoader(self.train_dataset, sampler=sampler, **self.train_loader_params)
DataLoader(self.val_dataset, sampler=sampler, **self.val_loader_params)
DataLoader(dataset, sampler=sampler, **self.val_loader_params)
DataLoader(self.test_dataset, sampler=sampler, **self.test_loader_params)
https://github.com/AaltoVision/surface-curvature-estimator/blob/10b13bde1e86c49392be1147072b455d4516e4fd/src/lightning/data.py#L310
https://github.com/AaltoVision/surface-curvature-estimator/blob/10b13bde1e86c49392be1147072b455d4516e4fd/src/lightning/data.py#L318
https://github.com/AaltoVision/surface-curvature-estimator/blob/10b13bde1e86c49392be1147072b455d4516e4fd/src/lightning/data.py#L323
https://github.com/AaltoVision/surface-curvature-estimator/blob/10b13bde1e86c49392be1147072b455d4516e4fd/src/lightning/data.py#L329

==================================
https://github.com/Arlo0o/NaviNeRF
==================================

Found 4 times
torch.utils.data.DataLoader(
            UnannotatedDataset(self.dataset_dir), size[0] * size[1], shuffle=True)
torch.utils.data.DataLoader(
                    dataset=copy.deepcopy(self.dataset), sampler=item_subset, batch_size=bsz)
torch.utils.data.DataLoader(
        dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//world_size, **data_loader_kwargs)
torch.utils.data.DataLoader(
            dataset=copy.deepcopy(training_set), sampler=training_set_sampler, batch_size=batch_size//world_size, **data_loader_kwargs)
https://github.com/Arlo0o/NaviNeRF/blob/5a451fbb983beee2df3de642890fd69aedac44c7/torch_tools/visualization.py#L30
https://github.com/Arlo0o/NaviNeRF/blob/5a451fbb983beee2df3de642890fd69aedac44c7/training/stylenerf.py#L2344
https://github.com/Arlo0o/NaviNeRF/blob/5a451fbb983beee2df3de642890fd69aedac44c7/training/training_loop.py#L149
https://github.com/Arlo0o/NaviNeRF/blob/5a451fbb983beee2df3de642890fd69aedac44c7/training/training_loop.py#L152

=================================
https://github.com/sanmin0312/P2D
=================================

Found 6 times
DataLoader(dataset, batch_size=16, num_workers=0)
DataLoader(dataset, batch_size=16, num_workers=16)
DataLoader(dataset, batch_size=16, num_workers=0)
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.batch_size_per_device,
            num_workers=4,
            drop_last=True,
            shuffle=False,
            collate_fn=partial(collate_fn,
                               is_return_depth=self.data_return_depth
                               or self.use_fusion),
            sampler=None,
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=partial(collate_fn, is_return_depth=self.use_fusion),
            num_workers=4,
            sampler=None,
        )
torch.utils.data.DataLoader(
            predict_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=partial(collate_fn, is_return_depth=self.use_fusion),
            num_workers=4,
            sampler=None,
        )
https://github.com/sanmin0312/P2D/blob/31e9e82b07fc50dca9ded22a12ae20b0f4a9d942/p2d/evaluators/evalonly/nuscenes/prediction/tests/run_covernet.py#L52
https://github.com/sanmin0312/P2D/blob/31e9e82b07fc50dca9ded22a12ae20b0f4a9d942/p2d/evaluators/evalonly/nuscenes/prediction/tests/run_image_generation.py#L77
https://github.com/sanmin0312/P2D/blob/31e9e82b07fc50dca9ded22a12ae20b0f4a9d942/p2d/evaluators/evalonly/nuscenes/prediction/tests/run_mtp.py#L63
https://github.com/sanmin0312/P2D/blob/31e9e82b07fc50dca9ded22a12ae20b0f4a9d942/p2d/exps/nuscenes/base_exp.py#L412
https://github.com/sanmin0312/P2D/blob/31e9e82b07fc50dca9ded22a12ae20b0f4a9d942/p2d/exps/nuscenes/base_exp.py#L438
https://github.com/sanmin0312/P2D/blob/31e9e82b07fc50dca9ded22a12ae20b0f4a9d942/p2d/exps/nuscenes/base_exp.py#L464

===========================================
https://github.com/JulesSanchez/3DLabelProp
===========================================

Found 1 times
torch.utils.data.DataLoader(
                            valid_dataset,
                            num_workers=8,
                            collate_fn=collate_val,
                            shuffle=True,
                            batch_size=2
                        )
https://github.com/JulesSanchez/3DLabelProp/blob/7f4d7516868f718f59d376ab673426e04e4bf365/train.py#L82

====================================
https://github.com/TQTQliu/ET-MVSNet
====================================

Found 12 times
DataLoader(test_dataset, args.batch_size, shuffle=False, num_workers=4, drop_last=False)
DataLoader(test_dataset, args.batch_size, shuffle=False, num_workers=4, drop_last=False)
DataLoader(test_dataset, args.batch_size, shuffle=False, num_workers=4, drop_last=False)
DataLoader(test_dataset, args.batch_size, shuffle=False, num_workers=4, drop_last=False)
DataLoader(train_dataset, args.batch_size, sampler=train_sampler, num_workers=1,
                                    drop_last=True,
                                    pin_memory=args.pin_m)
DataLoader(test_dataset, args.batch_size, sampler=test_sampler, num_workers=1, drop_last=False,
                                   pin_memory=args.pin_m)
DataLoader(train_dataset, args.batch_size, shuffle=True, num_workers=1, drop_last=True,
                                    pin_memory=args.pin_m)
DataLoader(test_dataset, args.batch_size, shuffle=False, num_workers=1, drop_last=False,
                                   pin_memory=args.pin_m)
DataLoader(train_dataset, args.batch_size, sampler=train_sampler, num_workers=1,
                                    drop_last=True,
                                    pin_memory=args.pin_m)
DataLoader(test_dataset, args.batch_size, sampler=test_sampler, num_workers=1, drop_last=False,
                                   pin_memory=args.pin_m)
DataLoader(train_dataset, args.batch_size, shuffle=True, num_workers=1, drop_last=True,
                                    pin_memory=args.pin_m)
DataLoader(test_dataset, args.batch_size, shuffle=False, num_workers=1, drop_last=False,
                                   pin_memory=args.pin_m)
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/test_dtu_dypcd.py#L409
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/test_dtu_pcd.py#L175
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/test_dypcd_tnt_adv.py#L383
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/test_dypcd_tnt_inter.py#L376
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/train_bld.py#L385
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/train_bld.py#L388
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/train_bld.py#L391
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/train_bld.py#L393
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/train_dtu.py#L373
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/train_dtu.py#L376
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/train_dtu.py#L379
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/train_dtu.py#L381

================================
https://github.com/SmiletoE/HPAL
================================

Found 4 times
torch.utils.data.DataLoader(dataset=dataset, batch_size=self.args.train_batch_size_mink,
                                        collate_fn=dataset.collate_fn,
                                        sampler=sampler, shuffle=(sampler is None),
                                        num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(dataset=dataset, batch_size=self.args.val_batch_size_mink,
                                        collate_fn=dataset.collate_fn, sampler=sampler, shuffle=False,
                                        num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(dataset=dataset, batch_size=1,
                                                     collate_fn=dataset.collate_fn, sampler=None, shuffle=False,
                                                     num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(dataset=dataset, batch_size=1,
                                                     collate_fn=dataset.collate_fn, sampler=None, shuffle=False,
                                                     num_workers=4, pin_memory=True)
https://github.com/SmiletoE/HPAL/blob/4ae6f7bc19c91a71f415716daa1ddd78f50d6e0d/Mink/base_agent.py#L84
https://github.com/SmiletoE/HPAL/blob/4ae6f7bc19c91a71f415716daa1ddd78f50d6e0d/Mink/base_agent.py#L93
https://github.com/SmiletoE/HPAL/blob/4ae6f7bc19c91a71f415716daa1ddd78f50d6e0d/Mink/base_agent.py#L442
https://github.com/SmiletoE/HPAL/blob/4ae6f7bc19c91a71f415716daa1ddd78f50d6e0d/Mink/base_agent.py#L544

=========================================
https://github.com/ethanweber/nerfbusters
=========================================

Found 3 times
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.workers,
            pin_memory=True,
            drop_last=True,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.val_batch_size,
            shuffle=False,
            num_workers=self.workers,
            pin_memory=True,
            drop_last=False,
        )
DataLoader(
            self.test_dataset,
            batch_size=32,
            shuffle=False,
            num_workers=self.workers,
            pin_memory=True,
            drop_last=False,
        )
https://github.com/ethanweber/nerfbusters/blob/7ff88817a47922979806def2329b69009eeee3e3/nerfbusters/data_modules/datamodule.py#L70
https://github.com/ethanweber/nerfbusters/blob/7ff88817a47922979806def2329b69009eeee3e3/nerfbusters/data_modules/datamodule.py#L80
https://github.com/ethanweber/nerfbusters/blob/7ff88817a47922979806def2329b69009eeee3e3/nerfbusters/data_modules/datamodule.py#L92

========================================
https://github.com/quotation2520/PG-RCNN
========================================

Found 3 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0, worker_init_fn=partial(common_utils.worker_init_fn, seed=seed)
    )
DataLoader(ds_train, BATCH_SIZE * N_DATA, shuffle=True, num_workers=4)
DataLoader(ds_test, BATCH_SIZE * N_DATA, shuffle=False, num_workers=4)
https://github.com/quotation2520/PG-RCNN/blob/822a07ed36b8b3c144d8c69712206e7f994cf3c0/pcdet/datasets/__init__.py#L71
https://github.com/quotation2520/PG-RCNN/blob/822a07ed36b8b3c144d8c69712206e7f994cf3c0/pcdet/ops/iou3d/demo.py#L106
https://github.com/quotation2520/PG-RCNN/blob/822a07ed36b8b3c144d8c69712206e7f994cf3c0/pcdet/ops/iou3d/demo.py#L107

=========================================
https://github.com/weitong8591/ars_magsac
=========================================

Found 3 times
torch.utils.data.DataLoader(trainset, shuffle=True, num_workers=6, batch_size=opt.batchsize)
torch.utils.data.DataLoader(testset, shuffle=False, num_workers=6, batch_size=opt.batchsize)
torch.utils.data.DataLoader(trainset, shuffle=True, num_workers=6, batch_size=opt.batchsize)
https://github.com/weitong8591/ars_magsac/blob/064ca0dc77b4fcf0d9160b6aaf0e285a8a2dfde8/init_pymagsac.py#L45
https://github.com/weitong8591/ars_magsac/blob/064ca0dc77b4fcf0d9160b6aaf0e285a8a2dfde8/test_pymagsac.py#L68
https://github.com/weitong8591/ars_magsac/blob/064ca0dc77b4fcf0d9160b6aaf0e285a8a2dfde8/train_pymagsac.py#L32

================================
https://github.com/liuQuan98/GCL
================================

Found 2 times
torch.utils.data.DataLoader(
        dset,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=num_threads,
        collate_fn=collate_function,
        pin_memory=False,
        drop_last=True)
torch.utils.data.DataLoader(
        dset,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=num_threads,
        collate_fn=collate_function,
        pin_memory=False,
        drop_last=True)
https://github.com/liuQuan98/GCL/blob/52aa605947c2b79dc1d1dddccf3f22745eefce34/lib/colocation_data_loader.py#L748
https://github.com/liuQuan98/GCL/blob/52aa605947c2b79dc1d1dddccf3f22745eefce34/lib/complement_data_loader.py#L1375

========================================
https://github.com/GaryZhu1996/UMIFormer
========================================

Found 3 times
torch.utils.data.DataLoader(
            dataset=dataset,
            batch_size=1,
            sampler=test_sampler,
            num_workers=cfg.CONST.NUM_WORKER,
            pin_memory=True)
torch.utils.data.DataLoader(
        dataset=train_dataset,
        batch_sampler=train_batch_sampler,
        num_workers=cfg.CONST.NUM_WORKER,
        pin_memory=True)
torch.utils.data.DataLoader(
        dataset=val_dataset,
        batch_size=1,
        sampler=val_sampler,
        num_workers=cfg.CONST.NUM_WORKER,
        pin_memory=True)
https://github.com/GaryZhu1996/UMIFormer/blob/644a55b18f52bc39d4cb6606a8d9ab97ef47eb20/core/pipeline_test.py#L38
https://github.com/GaryZhu1996/UMIFormer/blob/644a55b18f52bc39d4cb6606a8d9ab97ef47eb20/core/pipeline_train.py#L97
https://github.com/GaryZhu1996/UMIFormer/blob/644a55b18f52bc39d4cb6606a8d9ab97ef47eb20/core/pipeline_train.py#L103

===========================================================
https://github.com/LiyingCV/Long-Range-Grouping-Transformer
===========================================================

Found 3 times
torch.utils.data.DataLoader(
            dataset=dataset,
            batch_size=1,
            sampler=test_sampler,
            num_workers=cfg.CONST.NUM_WORKER,
            pin_memory=True)
torch.utils.data.DataLoader(
        dataset=train_dataset,
        batch_sampler=train_batch_sampler,
        num_workers=cfg.CONST.NUM_WORKER,
        pin_memory=True)
torch.utils.data.DataLoader(
        dataset=val_dataset,
        batch_size=1,
        sampler=val_sampler,
        num_workers=cfg.CONST.NUM_WORKER,
        pin_memory=True)
https://github.com/LiyingCV/Long-Range-Grouping-Transformer/blob/a46194af396d0221c97bc1609dfee5aa3779cf96/core/pipeline_test.py#L36
https://github.com/LiyingCV/Long-Range-Grouping-Transformer/blob/a46194af396d0221c97bc1609dfee5aa3779cf96/core/pipeline_train.py#L71
https://github.com/LiyingCV/Long-Range-Grouping-Transformer/blob/a46194af396d0221c97bc1609dfee5aa3779cf96/core/pipeline_train.py#L77

==============================================
https://github.com/Luoyadan/KECOR-active-3Ddet
==============================================

Found 4 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
DataLoader(
        labelled_set, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler_labelled is None) and training, collate_fn=labelled_set.collate_batch,
        drop_last=False, sampler=sampler_labelled, timeout=0
        )
DataLoader(
        unlabelled_set, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler_unlabelled is None) and training, collate_fn=unlabelled_set.collate_batch,
        drop_last=False, sampler=sampler_unlabelled, timeout=0
        )
DataLoader(
                self.unlabelled_set, batch_size=1, pin_memory=True, num_workers=self.unlabelled_loader.num_workers,
                shuffle=False, collate_fn=self.unlabelled_set.collate_batch,
                drop_last=False, sampler=self.unlabelled_loader.sampler, timeout=0
                )
https://github.com/Luoyadan/KECOR-active-3Ddet/blob/1848ea6183bd627d0e981f5d500ea5f8cc4c956c/pcdet/datasets/__init__.py#L72
https://github.com/Luoyadan/KECOR-active-3Ddet/blob/1848ea6183bd627d0e981f5d500ea5f8cc4c956c/pcdet/datasets/__init__.py#L167
https://github.com/Luoyadan/KECOR-active-3Ddet/blob/1848ea6183bd627d0e981f5d500ea5f8cc4c956c/pcdet/datasets/__init__.py#L172
https://github.com/Luoyadan/KECOR-active-3Ddet/blob/1848ea6183bd627d0e981f5d500ea5f8cc4c956c/pcdet/query_strategies/badge_sampling.py#L117

=========================================
https://github.com/wengflow/robust-e-nerf
=========================================

Found 4 times
torch.utils.data.DataLoader(
            dataset=self.train_dataset,
            batch_size=1,
            num_workers=self.num_workers,
            shuffle=False,
            pin_memory=True,
            drop_last=False,
            persistent_workers=(self.num_workers > 0)
        )
torch.utils.data.DataLoader(
            dataset=self.train_normalized_sampler,
            batch_size=1,
            num_workers=self.num_workers,
            shuffle=False,
            pin_memory=True,
            drop_last=False,
            persistent_workers=(self.num_workers > 0)
        )
torch.utils.data.DataLoader(
            dataset=self.val_dataset,
            batch_size=self.val_batch_size,
            num_workers=self.num_workers,            
            shuffle=False,
            pin_memory=True,
            drop_last=False,
            persistent_workers=(self.num_workers > 0)
        )
torch.utils.data.DataLoader(
            dataset=self.test_dataset,
            batch_size=self.test_batch_size,
            num_workers=self.num_workers,
            shuffle=False,
            pin_memory=True,
            drop_last=False,
            persistent_workers=(self.num_workers > 0)
        )
https://github.com/wengflow/robust-e-nerf/blob/5bb9b46140c0063a25f00ebdc23d5b9a8a6edeac/robust_e_nerf/data/datamodule.py#L205
https://github.com/wengflow/robust-e-nerf/blob/5bb9b46140c0063a25f00ebdc23d5b9a8a6edeac/robust_e_nerf/data/datamodule.py#L214
https://github.com/wengflow/robust-e-nerf/blob/5bb9b46140c0063a25f00ebdc23d5b9a8a6edeac/robust_e_nerf/data/datamodule.py#L243
https://github.com/wengflow/robust-e-nerf/blob/5bb9b46140c0063a25f00ebdc23d5b9a8a6edeac/robust_e_nerf/data/datamodule.py#L263

==========================================================================
https://github.com/jiaxiZeng/Parameterized-Cost-Volume-for-Stereo-Matching
==========================================================================

Found 1 times
data.DataLoader(train_dataset, batch_size=args.batch_size,  # 28 * 4
                                   pin_memory=True, shuffle=True, num_workers=24, prefetch_factor=4, drop_last=True)
https://github.com/jiaxiZeng/Parameterized-Cost-Volume-for-Stereo-Matching/blob/5ad699493ed1675f055cc8ad24d9e001574bf62c/core/stereo_datasets.py#L453

==============================================
https://github.com/MachinePerceptionLab/CQ-NIR
==============================================

Found 2 times
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, num_workers=n_workers, 
        shuffle=shuffle, collate_fn=collate_remove_none,
    )
DataLoader(ds_faces, batch_size=self.refine_max_faces,
                                shuffle=True)
https://github.com/MachinePerceptionLab/CQ-NIR/blob/5e614c3da9f13b3512d33b4a931e6a8192a6229f/unisurf_cq/dataloading/dataloading.py#L60
https://github.com/MachinePerceptionLab/CQ-NIR/blob/5e614c3da9f13b3512d33b4a931e6a8192a6229f/unisurf_cq/model/extracting.py#L267

================================
https://github.com/ymingxie/parq
================================

Found 3 times
torch.utils.data.DataLoader(dataset, **params)
torch.utils.data.DataLoader(dataset, **params)
torch.utils.data.DataLoader(
            dataset,
            batch_size=None,
            collate_fn=collate_fn,
            batch_sampler=None,
            num_workers=args.loader_num_workers,
        )
https://github.com/ymingxie/parq/blob/eabe12972477142e0e7e05779d0cec98e7682517/datasets/demo_dataset.py#L59
https://github.com/ymingxie/parq/blob/eabe12972477142e0e7e05779d0cec98e7682517/datasets/scannet_dataset.py#L59
https://github.com/ymingxie/parq/blob/eabe12972477142e0e7e05779d0cec98e7682517/scripts/scannet_preprocessing/generate_scannet_anno_snippet.py#L108

==================================
https://github.com/PJLab-ADG/PCSim
==================================

Found 10 times
DataLoader(opencood_dataset,
                             batch_size=1,
                             num_workers=0,
                             collate_fn=opencood_dataset.collate_batch_test,
                             shuffle=False,
                             pin_memory=False,
                             drop_last=False)
DataLoader(opencood_dataset,
                             batch_size=1,
                             num_workers=10,
                             collate_fn=opencood_dataset.collate_batch_test,
                             shuffle=False,
                             pin_memory=False,
                             drop_last=False)
DataLoader(opencood_train_dataset,
                              batch_size=hypes['train_params']['batch_size'],
                              num_workers=8,
                              collate_fn=opencood_train_dataset.collate_batch_train,
                              shuffle=True,
                              pin_memory=False,
                              drop_last=True)
DataLoader(opencood_validate_dataset,
                            batch_size=hypes['train_params']['batch_size'],
                            num_workers=8,
                            collate_fn=opencood_train_dataset.collate_batch_train,
                            shuffle=False,
                            pin_memory=False,
                            drop_last=True)
DataLoader(opencda_dataset, batch_size=1, num_workers=8,
                             collate_fn=opencda_dataset.collate_batch_train,
                             shuffle=False,
                             pin_memory=False)
data.DataLoader(inten.data.Dataset(config['train']), **config['train_loader'])
data.DataLoader(inten.data.Dataset(config['val']), **config['val_loader'])
data.DataLoader(inten.data.Dataset(config['train']), **config['train_loader'])
data.DataLoader(inten.data.Dataset(config['val']), **config['val_loader'])
data.DataLoader(inten.data.WaymoDataset(config['val']), collate_fn=waymo_collate, **config['val_loader'])
https://github.com/PJLab-ADG/PCSim/blob/0a0ea957f489ef14c4db338f0c035bd41f0544f1/Placement-Evaluation/v2xvit/tools/debug_utils.py#L30
https://github.com/PJLab-ADG/PCSim/blob/0a0ea957f489ef14c4db338f0c035bd41f0544f1/Placement-Evaluation/v2xvit/tools/inference.py#L53
https://github.com/PJLab-ADG/PCSim/blob/0a0ea957f489ef14c4db338f0c035bd41f0544f1/Placement-Evaluation/v2xvit/tools/train.py#L37
https://github.com/PJLab-ADG/PCSim/blob/0a0ea957f489ef14c4db338f0c035bd41f0544f1/Placement-Evaluation/v2xvit/tools/train.py#L44
https://github.com/PJLab-ADG/PCSim/blob/0a0ea957f489ef14c4db338f0c035bd41f0544f1/Placement-Evaluation/v2xvit/visualization/vis_data_sequence.py#L27
https://github.com/PJLab-ADG/PCSim/blob/0a0ea957f489ef14c4db338f0c035bd41f0544f1/RainyPCSim/intensity_predictor/python/model_eval.py#L21
https://github.com/PJLab-ADG/PCSim/blob/0a0ea957f489ef14c4db338f0c035bd41f0544f1/RainyPCSim/intensity_predictor/python/model_eval.py#L22
https://github.com/PJLab-ADG/PCSim/blob/0a0ea957f489ef14c4db338f0c035bd41f0544f1/RainyPCSim/intensity_predictor/python/model_run.py#L19
https://github.com/PJLab-ADG/PCSim/blob/0a0ea957f489ef14c4db338f0c035bd41f0544f1/RainyPCSim/intensity_predictor/python/model_run.py#L20
https://github.com/PJLab-ADG/PCSim/blob/0a0ea957f489ef14c4db338f0c035bd41f0544f1/RainyPCSim/intensity_predictor/python/model_surround_eval.py#L40

=====================================
https://github.com/apple/ml-finerecon
=====================================

Found 3 times
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.config.batch_size_per_device,
            num_workers=self.config.workers_train,
            persistent_workers=self.config.workers_train > 0,
            shuffle=True,
            drop_last=True,
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=1,
            num_workers=self.config.workers_val,
        )
torch.utils.data.DataLoader(
            predict_dataset,
            batch_size=1,
            num_workers=self.config.workers_predict,
        )
https://github.com/apple/ml-finerecon/blob/6951557d7f0d998c8a0e211f84d0e4f6b387ac0f/fine_recon.py#L1147
https://github.com/apple/ml-finerecon/blob/6951557d7f0d998c8a0e211f84d0e4f6b387ac0f/fine_recon.py#L1170
https://github.com/apple/ml-finerecon/blob/6951557d7f0d998c8a0e211f84d0e4f6b387ac0f/fine_recon.py#L1188

============================================
https://github.com/eriksandstroem/Point-SLAM
============================================

Found 2 times
DataLoader(
            self.frame_reader, batch_size=1, shuffle=False, num_workers=1)
DataLoader(dataset, batch_size=1, shuffle=False)
https://github.com/eriksandstroem/Point-SLAM/blob/6943bef84ce65883673ab801a4613aee9907ecc6/src/Tracker.py#L77
https://github.com/eriksandstroem/Point-SLAM/blob/6943bef84ce65883673ab801a4613aee9907ecc6/src/tools/get_mesh_tsdf_fusion.py#L283

=====================================
https://github.com/nerminsamet/seedal
=====================================

Found 5 times
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
https://github.com/nerminsamet/seedal/blob/52fdeeb42cf83b4b65814ae8b81efb2f7d61bb07/dino_model/eval_knn.py#L39
https://github.com/nerminsamet/seedal/blob/52fdeeb42cf83b4b65814ae8b81efb2f7d61bb07/dino_model/eval_knn.py#L47
https://github.com/nerminsamet/seedal/blob/52fdeeb42cf83b4b65814ae8b81efb2f7d61bb07/dino_model/eval_linear.py#L52
https://github.com/nerminsamet/seedal/blob/52fdeeb42cf83b4b65814ae8b81efb2f7d61bb07/dino_model/eval_linear.py#L59
https://github.com/nerminsamet/seedal/blob/52fdeeb42cf83b4b65814ae8b81efb2f7d61bb07/dino_model/main_dino.py#L145

===================================
https://github.com/bartn8/vppstereo
===================================

Found 4 times
data.DataLoader(dataset, batch_size=args.batch_size, 
                pin_memory=False, shuffle=False, num_workers=1, drop_last=True)
data.DataLoader(dataset, batch_size=args.batch_size, 
                pin_memory=False, shuffle=False, num_workers=1, drop_last=True)
data.DataLoader(dataset, batch_size=args.batch_size, 
                pin_memory=False, shuffle=False, num_workers=1, drop_last=True)
data.DataLoader(dataset, batch_size=args.batch_size, 
                pin_memory=False, shuffle=False, num_workers=1, drop_last=True)
https://github.com/bartn8/vppstereo/blob/410fe90da254f777bec0bf671714491e2bb0203f/dataloaders/datasets.py#L420
https://github.com/bartn8/vppstereo/blob/410fe90da254f777bec0bf671714491e2bb0203f/dataloaders/datasets.py#L427
https://github.com/bartn8/vppstereo/blob/410fe90da254f777bec0bf671714491e2bb0203f/dataloaders/datasets.py#L434
https://github.com/bartn8/vppstereo/blob/410fe90da254f777bec0bf671714491e2bb0203f/dataloaders/datasets.py#L441

=====================================
https://github.com/TencentARC/HOSNeRF
=====================================

Found 14 times
DataLoader(
            dataset=self.train_dset,
            batch_sampler=sampler,
            num_workers=self.num_workers,
            pin_memory=True,
            shuffle=False,
            persistent_workers=True,
        )
DataLoader(
            dataset=self.val_dset,
            batch_size=self.chunk,
            sampler=sampler,
            num_workers=self.num_workers,
            pin_memory=True,
            shuffle=False,
            persistent_workers=True,
        )
DataLoader(
            dataset=self.test_dset,
            batch_size=self.chunk,
            sampler=sampler,
            num_workers=self.num_workers,
            pin_memory=True,
            shuffle=False,
            persistent_workers=True,
        )
DataLoader(
            dataset=self.predict_dset,
            batch_size=self.chunk,
            sampler=sampler,
            num_workers=self.num_workers,
            pin_memory=True,
            shuffle=False,
            persistent_workers=True,
        )
torch.utils.data.DataLoader(dataset=dataset,
                                              batch_size=batch_size,
                                              shuffle=shuffle,
                                              drop_last=drop_last,
                                              pin_memory=True,
                                              persistent_workers=True,
                                              num_workers=cfg.num_workers)
DataLoader(
            dataset=self.train_dset,
            batch_sampler=sampler,
            num_workers=self.num_workers,
            pin_memory=True,
            shuffle=False,
            persistent_workers=True,
        )
DataLoader(
            dataset=self.val_dset,
            batch_size=self.chunk,
            sampler=sampler,
            num_workers=self.num_workers,
            pin_memory=True,
            shuffle=False,
            persistent_workers=True,
        )
DataLoader(
            dataset=self.test_dset,
            batch_size=self.chunk,
            sampler=sampler,
            num_workers=self.num_workers,
            pin_memory=True,
            shuffle=False,
            persistent_workers=True,
        )
DataLoader(
            dataset=self.predict_dset,
            batch_size=self.chunk,
            sampler=sampler,
            num_workers=self.num_workers,
            pin_memory=True,
            shuffle=False,
            persistent_workers=True,
        )
torch.utils.data.DataLoader(dataset=dataset,
                                              batch_size=batch_size,
                                              shuffle=shuffle,
                                              drop_last=drop_last,
                                              pin_memory=True,
                                              persistent_workers=True,
                                              num_workers=cfg.num_workers)
DataLoader(
            dataset=self.train_dset,
            batch_sampler=sampler,
            num_workers=self.num_workers,
            pin_memory=True,
            shuffle=False,
            persistent_workers=True,
        )
DataLoader(
            dataset=self.val_dset,
            batch_size=self.chunk,
            sampler=sampler,
            num_workers=self.num_workers,
            pin_memory=True,
            shuffle=False,
            persistent_workers=True,
        )
DataLoader(
            dataset=self.test_dset,
            batch_size=self.chunk,
            sampler=sampler,
            num_workers=self.num_workers,
            pin_memory=True,
            shuffle=False,
            persistent_workers=True,
        )
DataLoader(
            dataset=self.predict_dset,
            batch_size=self.chunk,
            sampler=sampler,
            num_workers=self.num_workers,
            pin_memory=True,
            shuffle=False,
            persistent_workers=True,
        )
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/1st_State-Conditional_Scene/src/data/interface.py#L337
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/1st_State-Conditional_Scene/src/data/interface.py#L356
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/1st_State-Conditional_Scene/src/data/interface.py#L376
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/1st_State-Conditional_Scene/src/data/interface.py#L396
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/2nd_State_Conditional_Human-Object/core/data/create_dataset.py#L66
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/2nd_State_Conditional_Human-Object/src/data/interface.py#L239
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/2nd_State_Conditional_Human-Object/src/data/interface.py#L258
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/2nd_State_Conditional_Human-Object/src/data/interface.py#L278
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/2nd_State_Conditional_Human-Object/src/data/interface.py#L298
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/3rd_Complete_HOSNeRF/core/data/create_dataset.py#L65
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/3rd_Complete_HOSNeRF/src/data/interface.py#L246
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/3rd_Complete_HOSNeRF/src/data/interface.py#L265
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/3rd_Complete_HOSNeRF/src/data/interface.py#L285
https://github.com/TencentARC/HOSNeRF/blob/ca169704a9d965e8266c034cceb506ffba72f405/3rd_Complete_HOSNeRF/src/data/interface.py#L305

==================================================
https://github.com/manycore-research/PlankAssembly
==================================================

Found 7 times
DataLoader(
            dataset, batch_size=self.cfg.BATCH_SIZE,
            num_workers=self.cfg.NUM_WORKERS,
            shuffle=True, drop_last=True)
DataLoader(
            dataset, batch_size=self.cfg.BATCH_SIZE,
            num_workers=self.cfg.NUM_WORKERS)
DataLoader(
            dataset, batch_size=self.cfg.BATCH_SIZE,
            num_workers=self.cfg.NUM_WORKERS)
DataLoader(
            dataset, batch_size=self.cfg.BATCH_SIZE,
            num_workers=self.cfg.NUM_WORKERS,
            shuffle=True, drop_last=True)
DataLoader(
            dataset, batch_size=self.cfg.BATCH_SIZE,
            num_workers=self.cfg.NUM_WORKERS)
DataLoader(
            dataset, batch_size=self.cfg.BATCH_SIZE,
            num_workers=self.cfg.NUM_WORKERS)
DataLoader(
            dataset, batch_size=self.cfg.BATCH_SIZE,
            num_workers=self.cfg.NUM_WORKERS,
            shuffle=True, drop_last=True)
https://github.com/manycore-research/PlankAssembly/blob/4fa99105b1a966adae763bfaeee6044c41be15d8/trainer_complete.py#L39
https://github.com/manycore-research/PlankAssembly/blob/4fa99105b1a966adae763bfaeee6044c41be15d8/trainer_complete.py#L49
https://github.com/manycore-research/PlankAssembly/blob/4fa99105b1a966adae763bfaeee6044c41be15d8/trainer_complete.py#L58
https://github.com/manycore-research/PlankAssembly/blob/4fa99105b1a966adae763bfaeee6044c41be15d8/trainer_sideface.py#L29
https://github.com/manycore-research/PlankAssembly/blob/4fa99105b1a966adae763bfaeee6044c41be15d8/trainer_sideface.py#L39
https://github.com/manycore-research/PlankAssembly/blob/4fa99105b1a966adae763bfaeee6044c41be15d8/trainer_sideface.py#L48
https://github.com/manycore-research/PlankAssembly/blob/4fa99105b1a966adae763bfaeee6044c41be15d8/trainer_visible.py#L19

===========================
https://github.com/V2AI/EFG
===========================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=config.dataloader.batch_size,
        sampler=sampler,
        num_workers=config.dataloader.num_workers if not config.misc.debug else 0,
        collate_fn=trivial_batch_collator,
        worker_init_fn=worker_init_reset_seed,
        generator=g,
        pin_memory=True,
    )
https://github.com/V2AI/EFG/blob/784e32908304b8ea28639f59d751cfb0a164e587/efg/data/builder.py#L139

======================================
https://github.com/daveredrum/Text2Tex
======================================

Found 19 times
DataLoader(dataset, num_workers=0, batch_size=batch_size, shuffle=True)
DataLoader(dataset, num_workers=0, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=True,
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
        num_workers=1,
    )
torch.utils.data.DataLoader(sample_dataset, batch_size=total_sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset, batch_size=total_train_batch_size, shuffle=True, collate_fn=collate_fn, drop_last=True
    )
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, collate_fn=collate_fn, num_workers=1
    )
torch.utils.data.DataLoader(
                sample_dataset, batch_size=args.sample_batch_size, num_workers=1
            )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, collate_fn=collate_fn
    )
torch.utils.data.DataLoader(train_dataset, batch_size=args.train_batch_size, shuffle=True)
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=True,
        collate_fn=lambda examples: collate_fn(len(instance_data_dir), examples, args.with_prior_preservation),
        num_workers=1,
    )
torch.utils.data.DataLoader(
        train_dataset, shuffle=True, collate_fn=collate_fn, batch_size=args.train_batch_size
    )
torch.utils.data.DataLoader(
        train_dataset, shuffle=True, collate_fn=collate_fn, batch_size=total_train_batch_size, drop_last=True
    )
torch.utils.data.DataLoader(train_dataset, batch_size=args.train_batch_size, shuffle=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=total_train_batch_size, shuffle=True, drop_last=True, collate_fn=collate_fn
    )
torch.utils.data.DataLoader(
        dataset, batch_size=args.train_batch_size, shuffle=True, num_workers=args.dataloader_num_workers
    )
torch.utils.data.DataLoader(
        dataset, batch_size=args.train_batch_size, shuffle=True, num_workers=args.dataloader_num_workers
    )
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/ControlNet/tutorial_train.py#L29
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/ControlNet/tutorial_train_sd21.py#L29
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/dreambooth/train_dreambooth.py#L513
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/dreambooth/train_dreambooth.py#L634
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/dreambooth/train_dreambooth_flax.py#L362
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/dreambooth/train_dreambooth_flax.py#L452
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/research_projects/colossalai/train_dreambooth_colossalai.py#L398
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/research_projects/colossalai/train_dreambooth_colossalai.py#L537
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/research_projects/dreambooth_inpaint/train_dreambooth_inpaint.py#L439
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/research_projects/dreambooth_inpaint/train_dreambooth_inpaint.py#L587
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/research_projects/intel_opts/textual_inversion/textual_inversion_bf16.py#L490
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/research_projects/multi_subject_dreambooth/train_multi_subject_dreambooth.py#L545
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/research_projects/multi_subject_dreambooth/train_multi_subject_dreambooth.py#L668
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/text_to_image/train_text_to_image.py#L610
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/text_to_image/train_text_to_image_flax.py#L373
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/textual_inversion/textual_inversion.py#L553
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/textual_inversion/textual_inversion_flax.py#L456
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/unconditional_image_generation/train_unconditional.py#L334
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/diffusers/examples/unconditional_image_generation/train_unconditional_ort.py#L336

============================================
https://github.com/SamsungLabs/NeuralHaircut
============================================

Found 1 times
DataLoader(
            self.dataset,
            batch_size=self.dataset.nimages,
            shuffle=False,
            num_workers=0
        )
https://github.com/SamsungLabs/NeuralHaircut/blob/1dbdd07797458e6e0000bd3a02f3092d419d1756/src/multiview_optimization/runner.py#L93

=================================
https://github.com/wbhu/Tri-MipRF
=================================

Found 3 times
DataLoader(
        train_dataset,
        batch_size=batch_size,
        num_workers=num_workers,
        shuffle=False,
        collate_fn=ray_collate,
        pin_memory=True,
        worker_init_fn=None,
        pin_memory_device='cuda',
        prefetch_factor=2,
    )
DataLoader(
        test_dataset,
        batch_size=None,
        num_workers=1,
        shuffle=False,
        pin_memory=True,
        worker_init_fn=None,
        pin_memory_device='cuda',
    )
DataLoader(
            training_dataset,
            batch_size=8,
            shuffle=False,
            num_workers=0,
            collate_fn=ray_collate,
            pin_memory=True,
            worker_init_fn=None,
            pin_memory_device='cuda',
        )
https://github.com/wbhu/Tri-MipRF/blob/5b54a274d338ab64405d8123837e2d393c2262c2/main.py#L27
https://github.com/wbhu/Tri-MipRF/blob/5b54a274d338ab64405d8123837e2d393c2262c2/main.py#L39
https://github.com/wbhu/Tri-MipRF/blob/5b54a274d338ab64405d8123837e2d393c2262c2/dataset/ray_dataset.py#L209

============================================
https://github.com/qianqianwang68/omnimotion
============================================

Found 1 times
torch.utils.data.DataLoader(dataset,
                                              batch_size=args.num_pairs,
                                              worker_init_fn=seed_worker,
                                              generator=g,
                                              num_workers=args.num_workers,
                                              sampler=data_sampler,
                                              shuffle=True if data_sampler is None else False,
                                              pin_memory=True)
https://github.com/qianqianwang68/omnimotion/blob/9576dd95477a65d65340425eb9c110853900f509/train.py#L65

===========================================
https://github.com/rawalkhirodkar/egohumans
===========================================

Found 122 times
DataLoader(dataset, batch_size=self.args.batch_size, num_workers=8)
DataLoader(
            dataset=self.train_ds,
            batch_size=self.hparams.DATASET.BATCH_SIZE,
            num_workers=self.hparams.DATASET.NUM_WORKERS,
            pin_memory=self.hparams.DATASET.PIN_MEMORY,
            shuffle=self.hparams.DATASET.SHUFFLE_TRAIN,
        )
DataLoader(
                    dataset=val_ds,
                    batch_size=self.hparams.DATASET.BATCH_SIZE,
                    shuffle=False,
                    num_workers=self.hparams.DATASET.NUM_WORKERS,
                )
DataLoader(detection_dataset, batch_size=det_batch_size, num_workers=0)
DataLoader(mocap_db, batch_size=min(args.batch_size, len(detection_all)), num_workers=0)
DataLoader(
        list(range(cfg.num_iters)), batch_size=batch_size)
DataLoader(
        trainset, batch_size=128, shuffle=True, num_workers=2)
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(ExampleDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((30, 2)))
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(data, batch_size=1)
DataLoader(data, batch_size=3)
DataLoader(data, batch_size=1)
DataLoader(data[:6], batch_size=3)
DataLoader(data[6:], batch_size=2)
DataLoader(data, batch_size=1)
DataLoader(data, batch_size=3)
DataLoader(data, batch_size=1)
DataLoader(data[:6], batch_size=3)
DataLoader(data[6:], batch_size=2)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_workers=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=pin_memory,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        drop_last=drop_last,
        **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(
        ExampleDataset(),
        batch_size=1,
        sampler=None,
        num_workers=0,
        shuffle=False)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
dutils.DataLoader(dataset,
                                   batch_size=batch_size,
                                   num_workers=num_workers,
                                   shuffle=False)
DataLoader(mocap_db, batch_size=len(bboxes), num_workers=0)
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/assets/pare/pare/core/tester.py#L387
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/assets/pare/pare/core/trainer.py#L841
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/assets/pare/pare/core/trainer.py#L878
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/cliff/demo.py#L81
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/cliff/demo.py#L115
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/.dev_scripts/visualize_lr.py#L138
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/examples/train.py#L56
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_cnn/test_rfsearch/test_search.py#L108
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L111
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L117
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L123
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L129
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L141
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L158
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L160
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L178
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L180
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L197
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L199
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L216
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L218
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L235
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L253
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L269
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L285
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L306
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L308
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L331
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L333
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L367
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L456
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_eval_hook.py#L458
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L132
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L221
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L332
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L352
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L403
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L456
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L469
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L742
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L818
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L899
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1053
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1130
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1186
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1205
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1282
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1383
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1488
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1565
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1591
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1611
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1636
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1653
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1670
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1697
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1884
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1892
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1910
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1918
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L1919
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L2026
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L2034
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L2052
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L2060
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmcv/tests/test_runner/test_hooks.py#L2061
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/mmdet/datasets/builder.py#L195
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_data/test_datasets/test_common.py#L224
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L76
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L88
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L99
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L111
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L115
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L133
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L135
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L155
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L157
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L177
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L197
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L216
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_runtime/test_eval_hook.py#L236
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_utils/test_hook.py#L92
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_utils/test_hook.py#L190
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_utils/test_hook.py#L246
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_utils/test_hook.py#L268
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_utils/test_hook.py#L310
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmdetection/tests/test_utils/test_hook.py#L347
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/mmhuman3d/data/datasets/builder.py#L94
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L74
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L85
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L98
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L109
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L121
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L125
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L144
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L146
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L167
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L169
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L191
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L211
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L231
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L251
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmhuman3d/tests/test_eval_hook.py#L272
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/mmpose/datasets/builder.py#L141
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L76
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L88
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L99
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L111
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L115
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L134
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L136
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L157
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L159
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L180
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L200
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L220
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_eval_hook.py#L241
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/tests/test_backward_compatibility/test_eval_hook_compatibility.py#L31
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmtracking/mmtrack/datasets/builder.py#L139
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmtracking/tests/test_data/test_datasets/test_common.py#L20
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/smplx/transfer_model/data/build.py#L43
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/lib/models/smpl_estimator.py#L70

===============================
https://github.com/tusen-ai/SST
===============================

Found 2 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/tusen-ai/SST/blob/e3121d46ec1544e483d974020180fc3499a930ca/mmdet3d/apis/seq_training_apis.py#L83
https://github.com/tusen-ai/SST/blob/e3121d46ec1544e483d974020180fc3499a930ca/mmdet3d/datasets/build_dataloader_sequential.py#L65

=============================================
https://github.com/zyh16143998882/ICCV23-IDPT
=============================================

Found 7 times
torch.utils.data.DataLoader(data, batch_size=12, shuffle=True)
torch.utils.data.DataLoader(TRAIN_DATASET, batch_size=args.batch_size, shuffle=True, num_workers=10, drop_last=True)
torch.utils.data.DataLoader(TEST_DATASET, batch_size=args.batch_size, shuffle=False, num_workers=10)
torch.utils.data.DataLoader(dataset, batch_size = config.others.bs,
                                            num_workers = int(args.num_workers),
                                            drop_last = config.others.subset == 'train',
                                            worker_init_fn = worker_init_fn,
                                            sampler = sampler)
torch.utils.data.DataLoader(dataset, batch_size=config.others.bs,
                                                shuffle = shuffle, 
                                                drop_last = config.others.subset == 'train',
                                                num_workers = int(args.num_workers),
                                                worker_init_fn=worker_init_fn)
DataLoader(ModelNet40SVM(partition='train', num_points=1024), num_workers=8, batch_size=128, shuffle=True)
DataLoader(ModelNet40SVM(partition='test', num_points=1024), num_workers=8, batch_size=128, shuffle=True)
https://github.com/zyh16143998882/ICCV23-IDPT/blob/bf152f22645468e77a6af917aec44b08aa37ab39/segmentation/dataset.py#L168
https://github.com/zyh16143998882/ICCV23-IDPT/blob/bf152f22645468e77a6af917aec44b08aa37ab39/segmentation/main.py#L107
https://github.com/zyh16143998882/ICCV23-IDPT/blob/bf152f22645468e77a6af917aec44b08aa37ab39/segmentation/main.py#L109
https://github.com/zyh16143998882/ICCV23-IDPT/blob/bf152f22645468e77a6af917aec44b08aa37ab39/tools/builder.py#L15
https://github.com/zyh16143998882/ICCV23-IDPT/blob/bf152f22645468e77a6af917aec44b08aa37ab39/tools/builder.py#L22
https://github.com/zyh16143998882/ICCV23-IDPT/blob/bf152f22645468e77a6af917aec44b08aa37ab39/tools/builder.py#L30
https://github.com/zyh16143998882/ICCV23-IDPT/blob/bf152f22645468e77a6af917aec44b08aa37ab39/tools/builder.py#L31

=================================
https://github.com/rsy6318/GeoUDF
=================================

Found 4 times
torch.utils.data.DataLoader(dataset,batch_size=arg.batch_size,shuffle=True,drop_last=True,num_workers=16)
torch.utils.data.DataLoader(dataset_test,batch_size=arg.batch_size//10,shuffle=False,drop_last=False,num_workers=16)
torch.utils.data.DataLoader(dataset,batch_size=arg.batch_size,shuffle=True,drop_last=True,num_workers=16)
torch.utils.data.DataLoader(dataset_test,batch_size=1,shuffle=False,drop_last=False,num_workers=16)
https://github.com/rsy6318/GeoUDF/blob/ad48aaaacfccb74e6a766b7ac6c84a89a4ae325b/main_pu.py#L65
https://github.com/rsy6318/GeoUDF/blob/ad48aaaacfccb74e6a766b7ac6c84a89a4ae325b/main_pu.py#L66
https://github.com/rsy6318/GeoUDF/blob/ad48aaaacfccb74e6a766b7ac6c84a89a4ae325b/main_rec.py#L78
https://github.com/rsy6318/GeoUDF/blob/ad48aaaacfccb74e6a766b7ac6c84a89a4ae325b/main_rec.py#L79

======================================
https://github.com/diffFacto/diffFacto
======================================

Found 4 times
DataLoader(train_dataset, batch_size=batch_size, num_workers=num_workers, drop_last=drop_last, sampler=sampler, worker_init_fn=worker_init_fn)
DataLoader(train_dataset, cfg.train_bs, shuffle=True, num_workers=4, drop_last=True)
DataLoader(val_dataset, cfg.val_bs, shuffle=False, num_workers=0)
DataLoader(self.dataset, batch_size=args.batch_size, shuffle=False, num_workers=0)
https://github.com/diffFacto/diffFacto/blob/2b7e09b780d3139ad0dd86e53ee56ece5198aa81/python/difffacto/datasets/dataset_utils.py#L30
https://github.com/diffFacto/diffFacto/blob/2b7e09b780d3139ad0dd86e53ee56ece5198aa81/python/difffacto/runner/pretrain_runner.py#L108
https://github.com/diffFacto/diffFacto/blob/2b7e09b780d3139ad0dd86e53ee56ece5198aa81/python/difffacto/runner/pretrain_runner.py#L109
https://github.com/diffFacto/diffFacto/blob/2b7e09b780d3139ad0dd86e53ee56ece5198aa81/tools/optimize_noise.py#L49

=======================================
https://github.com/iscas3dv/deformshape
=======================================

Found 1 times
DataLoader(sdf_dataset, shuffle=True,collate_fn=sdf_dataset.collate_fn,batch_size=meta_params['batch_size'], num_workers=16, drop_last = True)
https://github.com/iscas3dv/deformshape/blob/f7459e0cc66849baf9c1d541d1c84b3019e59607/train.py#L88

======================================
https://github.com/dsilvavinicius/nise
======================================

Found 4 times
DataLoader(
            dataset,
            batch_sampler=BatchSampler(sampler, batch_size=BATCH_SIZE, drop_last=False),
            pin_memory=True,
            num_workers=0
        )
DataLoader(
            dataset,
            shuffle=True,
            batch_size=1,
            pin_memory=True,
            num_workers=0
        )
DataLoader(
            dataset,
            batch_sampler=BatchSampler(sampler, batch_size=BATCH_SIZE, drop_last=False),
            pin_memory=True,
            num_workers=0
        )
DataLoader(
            dataset,
            shuffle=True,
            batch_size=1,
            pin_memory=True,
            num_workers=0
        )
https://github.com/dsilvavinicius/nise/blob/0a48f58c2acf55c177e5f1366b2c48ad07f058e4/main.py#L37
https://github.com/dsilvavinicius/nise/blob/0a48f58c2acf55c177e5f1366b2c48ad07f058e4/main.py#L44
https://github.com/dsilvavinicius/nise/blob/0a48f58c2acf55c177e5f1366b2c48ad07f058e4/experiment_scripts/lipschitz_exp.py#L38
https://github.com/dsilvavinicius/nise/blob/0a48f58c2acf55c177e5f1366b2c48ad07f058e4/experiment_scripts/lipschitz_exp.py#L45

=========================================
https://github.com/Rgtemze/HyperDiffusion
=========================================

Found 19 times
DataLoader(
            train_dt,
            batch_size=Config.get("batch_size"),
            shuffle=True,
            num_workers=8,
            pin_memory=True,
        )
DataLoader(
            train_dt, batch_size=Config.get("batch_size"), shuffle=True, num_workers=2
        )
DataLoader(
        torch.utils.data.Subset(train_dt, [0]), batch_size=1, shuffle=False
    )
DataLoader(
        torch.utils.data.Subset(train_dt, [0]), batch_size=1, shuffle=False
    )
torch.utils.data.DataLoader(
        test_dataset, batch_size=args.batch_size, shuffle=False, num_workers=10
    )
torch.utils.data.DataLoader(
        TEST_DATASET, batch_size=args.batch_size, shuffle=False, num_workers=4
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=10,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        test_dataset, batch_size=args.batch_size, shuffle=False, num_workers=10
    )
torch.utils.data.DataLoader(
        TRAIN_DATASET,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=10,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        TEST_DATASET, batch_size=args.batch_size, shuffle=False, num_workers=10
    )
torch.utils.data.DataLoader(
        TRAIN_DATASET,
        batch_size=BATCH_SIZE,
        shuffle=True,
        num_workers=10,
        pin_memory=True,
        drop_last=True,
        worker_init_fn=lambda x: np.random.seed(x + int(time.time())),
    )
torch.utils.data.DataLoader(
        TEST_DATASET,
        batch_size=BATCH_SIZE,
        shuffle=False,
        num_workers=10,
        pin_memory=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(data, batch_size=12, shuffle=True)
torch.utils.data.DataLoader(
        point_data,
        batch_size=16,
        shuffle=True,
        num_workers=16,
        pin_memory=True,
        worker_init_fn=worker_init_fn,
    )
DataLoader(
            self.datasets["train"],
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=False if is_iterable_dataset else True,
            worker_init_fn=init_fn,
        )
DataLoader(
            self.datasets["validation"],
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            worker_init_fn=init_fn,
            shuffle=shuffle,
        )
DataLoader(
            self.datasets["test"],
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            worker_init_fn=init_fn,
            shuffle=shuffle,
        )
DataLoader(
            self.datasets["predict"],
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            worker_init_fn=init_fn,
        )
DataLoader(
                sdf_dataset, shuffle=True, batch_size=1, pin_memory=True, num_workers=0
            )
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/main.py#L159
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/main.py#L189
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/main.py#L195
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/main.py#L198
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/Pointnet_Pointnet2_pytorch/test_classification.py#L130
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/Pointnet_Pointnet2_pytorch/test_partseg.py#L102
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/Pointnet_Pointnet2_pytorch/train_classification.py#L162
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/Pointnet_Pointnet2_pytorch/train_classification.py#L169
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/Pointnet_Pointnet2_pytorch/train_partseg.py#L135
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/Pointnet_Pointnet2_pytorch/train_partseg.py#L145
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/Pointnet_Pointnet2_pytorch/train_semseg.py#L177
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/Pointnet_Pointnet2_pytorch/train_semseg.py#L186
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/Pointnet_Pointnet2_pytorch/data_utils/ModelNetDataLoader.py#L170
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/Pointnet_Pointnet2_pytorch/data_utils/S3DISDataLoader.py#L280
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/ldm/main.py#L226
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/ldm/main.py#L242
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/ldm/main.py#L262
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/ldm/main.py#L278
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/experiment_scripts/train_sdf.py#L116

==============================================================================================
https://github.com/crtie/Leveraging-SE-3-Equivariance-for-Learning-3D-Geometric-Shape-Assembly
==============================================================================================

Found 7 times
DataLoader(
        dataset=train_set,
        batch_size=cfg.exp.batch_size,
        shuffle=True,
        num_workers=cfg.exp.num_workers,
        pin_memory=True,
        drop_last=True,
        persistent_workers=(cfg.exp.num_workers > 0),
    )
DataLoader(
        dataset=val_set,
        batch_size=cfg.exp.batch_size * 2,
        shuffle=False,
        num_workers=cfg.exp.num_workers,
        pin_memory=True,
        drop_last=False,
        persistent_workers=(cfg.exp.num_workers > 0),
    )
DataLoader(
        dataset=train_set,
        batch_size=cfg.exp.batch_size,
        shuffle=True,
        num_workers=cfg.exp.num_workers,
        pin_memory=True,
        drop_last=True,
        persistent_workers=(cfg.exp.num_workers > 0),
    )
DataLoader(
        dataset=val_set,
        batch_size=cfg.exp.batch_size * 2,
        shuffle=False,
        num_workers=cfg.exp.num_workers,
        pin_memory=True,
        drop_last=False,
        persistent_workers=(cfg.exp.num_workers > 0),
    )
DataLoader(
        dataset=val_data,
        batch_size=cfg.exp.batch_size,
        num_workers=cfg.exp.num_workers,
        # persistent_workers=True,
        pin_memory=True,
        shuffle=True,
        drop_last=True
    )
DataLoader(
        dataset=train_data,
        batch_size=cfg.exp.batch_size,
        num_workers=cfg.exp.num_workers,
        # persistent_workers=True,
        pin_memory=True,
        shuffle=True,
        drop_last=False
    )
DataLoader(
        dataset=val_data,
        batch_size=cfg.exp.batch_size,
        num_workers=cfg.exp.num_workers,
        # persistent_workers=True,
        pin_memory=True,
        shuffle=True,
        drop_last=False
    )
https://github.com/crtie/Leveraging-SE-3-Equivariance-for-Learning-3D-Geometric-Shape-Assembly/blob/9b5d29b5db9101ee64caf9f9cf5bcbdac3903865/BreakingBad/multi_part_assembly/datasets/geometry_data.py#L228
https://github.com/crtie/Leveraging-SE-3-Equivariance-for-Learning-3D-Geometric-Shape-Assembly/blob/9b5d29b5db9101ee64caf9f9cf5bcbdac3903865/BreakingBad/multi_part_assembly/datasets/geometry_data.py#L241
https://github.com/crtie/Leveraging-SE-3-Equivariance-for-Learning-3D-Geometric-Shape-Assembly/blob/9b5d29b5db9101ee64caf9f9cf5bcbdac3903865/BreakingBad/multi_part_assembly/datasets/partnet_data.py#L255
https://github.com/crtie/Leveraging-SE-3-Equivariance-for-Learning-3D-Geometric-Shape-Assembly/blob/9b5d29b5db9101ee64caf9f9cf5bcbdac3903865/BreakingBad/multi_part_assembly/datasets/partnet_data.py#L268
https://github.com/crtie/Leveraging-SE-3-Equivariance-for-Learning-3D-Geometric-Shape-Assembly/blob/9b5d29b5db9101ee64caf9f9cf5bcbdac3903865/NSM/script/eval_eqv_CR.py#L78
https://github.com/crtie/Leveraging-SE-3-Equivariance-for-Learning-3D-Geometric-Shape-Assembly/blob/9b5d29b5db9101ee64caf9f9cf5bcbdac3903865/NSM/script/train_eqv_CR.py#L150
https://github.com/crtie/Leveraging-SE-3-Equivariance-for-Learning-3D-Geometric-Shape-Assembly/blob/9b5d29b5db9101ee64caf9f9cf5bcbdac3903865/NSM/script/train_eqv_CR.py#L171

======================================
https://github.com/Roywangj/AdaptPoint
======================================

Found 11 times
torch.utils.data.DataLoader(ScanObjectNNC(split=split, transform=data_transform), num_workers=int(cfg.dataloader.num_workers), \
                            batch_size=cfg.get('val_batch_size', cfg.batch_size), shuffle=False, drop_last=False)
torch.utils.data.DataLoader(ScanObjectNNC(split=split, transform=data_transform), num_workers=int(cfg.dataloader.num_workers), \
                            batch_size=cfg.get('val_batch_size', cfg.batch_size), shuffle=False, drop_last=False)
torch.utils.data.DataLoader(ScanObjectNNC(split=split, transform=data_transform), num_workers=int(cfg.dataloader.num_workers), \
                            batch_size=cfg.get('val_batch_size', cfg.batch_size), shuffle=False, drop_last=False)
torch.utils.data.DataLoader(ModelNetC(split=split, transform=data_transform), num_workers=int(cfg.dataloader.num_workers), \
                            batch_size=cfg.get('val_batch_size', cfg.batch_size), shuffle=False, drop_last=False)
torch.utils.data.DataLoader(ModelNetC(split=split, transform=data_transform), num_workers=int(cfg.dataloader.num_workers), \
                            batch_size=cfg.get('val_batch_size', cfg.batch_size), shuffle=False, drop_last=False)
torch.utils.data.DataLoader(ScanObjectNNC(split=split, transform=data_transform), num_workers=int(cfg.dataloader.num_workers), \
                            batch_size=cfg.get('val_batch_size', cfg.batch_size), shuffle=False, drop_last=False)
torch.utils.data.DataLoader(ShapeNetPartC(split=split, transform=dataset_transform), num_workers=int(cfg.dataloader.num_workers), \
                            batch_size=cfg.get('val_batch_size', cfg.batch_size), shuffle=False, drop_last=False)
torch.utils.data.DataLoader(ShapeNetPartC(split=split, transform=dataset_transform), num_workers=int(cfg.dataloader.num_workers), \
                            batch_size=cfg.get('val_batch_size', cfg.batch_size), shuffle=False, drop_last=False)
torch.utils.data.DataLoader(dataset,
                                                 batch_size=batch_size,
                                                 num_workers=int(dataloader_cfg.num_workers),
                                                 worker_init_fn=worker_init_fn,
                                                 drop_last=split == 'train',
                                                 sampler=sampler,
                                                 collate_fn=collate_fn, 
                                                 pin_memory=True
                                                 )
torch.utils.data.DataLoader(dataset,
                                                 batch_size=batch_size,
                                                 num_workers=int(dataloader_cfg.num_workers),
                                                 worker_init_fn=worker_init_fn,
                                                 drop_last=split == 'train',
                                                 shuffle=shuffle,
                                                 collate_fn=collate_fn,
                                                 pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=B, num_workers=1
                                                 )
https://github.com/Roywangj/AdaptPoint/blob/a93c78fe876ed937380cb8872378646ce0d8de61/examples/classification/testing_scanobjectnnc.py#L47
https://github.com/Roywangj/AdaptPoint/blob/a93c78fe876ed937380cb8872378646ce0d8de61/examples/classification/train_autoaug.py#L556
https://github.com/Roywangj/AdaptPoint/blob/a93c78fe876ed937380cb8872378646ce0d8de61/examples/classification/train_autoaug_beifen.py#L549
https://github.com/Roywangj/AdaptPoint/blob/a93c78fe876ed937380cb8872378646ce0d8de61/examples/classification/train_autoaug_modelnet.py#L570
https://github.com/Roywangj/AdaptPoint/blob/a93c78fe876ed937380cb8872378646ce0d8de61/examples/classification/train_modelnetc.py#L352
https://github.com/Roywangj/AdaptPoint/blob/a93c78fe876ed937380cb8872378646ce0d8de61/examples/classification/train_scanobjectnnc.py#L345
https://github.com/Roywangj/AdaptPoint/blob/a93c78fe876ed937380cb8872378646ce0d8de61/examples/shapenetpart/train_adapt.py#L604
https://github.com/Roywangj/AdaptPoint/blob/a93c78fe876ed937380cb8872378646ce0d8de61/examples/shapenetpart/train_shapenetc.py#L412
https://github.com/Roywangj/AdaptPoint/blob/a93c78fe876ed937380cb8872378646ce0d8de61/openpoints/dataset/build.py#L80
https://github.com/Roywangj/AdaptPoint/blob/a93c78fe876ed937380cb8872378646ce0d8de61/openpoints/dataset/build.py#L90
https://github.com/Roywangj/AdaptPoint/blob/a93c78fe876ed937380cb8872378646ce0d8de61/openpoints/models/layers/kmeans.py#L81

=============================================
https://github.com/CuiRuikai/Partial2Complete
=============================================

Found 2 times
torch.utils.data.DataLoader(dataset, batch_size = config.others.bs if shuffle else 1,
                                            num_workers = int(args.num_workers),
                                            drop_last = config.others.subset == 'train',
                                            worker_init_fn = worker_init_fn,
                                            sampler = sampler)
torch.utils.data.DataLoader(dataset, batch_size=config.others.bs if shuffle else 1,
                                                shuffle = shuffle,
                                                drop_last = config.others.subset == 'train',
                                                num_workers = int(args.num_workers),
                                                worker_init_fn=worker_init_fn)
https://github.com/CuiRuikai/Partial2Complete/blob/b339ba95ceab7033347ecb508e19f039ae64cad9/tools/builder.py#L18
https://github.com/CuiRuikai/Partial2Complete/blob/b339ba95ceab7033347ecb508e19f039ae64cad9/tools/builder.py#L25

============================================
https://github.com/ftbabi/LayersNet_ICCV2023
============================================

Found 1 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate_fn, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            **kwargs)
https://github.com/ftbabi/LayersNet_ICCV2023/blob/eed32b27e039fa97f4f61102f5bad2751d062edb/layersnet/datasets/builder.py#L133

=========================================
https://github.com/Chen-Suyi/SIRA_Pytorch
=========================================

Found 18 times
DataLoader(
                train_ds,
                batch_size=cfg.train.batch_size,
                num_workers=cfg.train.num_workers,
                sampler=train_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                worker_init_fn=reset_seed_worker_init_fn,
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                valid_ds,
                batch_size=cfg.test.batch_size,
                num_workers=cfg.test.num_workers,
                sampler=valid_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                test_ds,
                batch_size=cfg.test.batch_size,
                num_workers=cfg.test.num_workers,
                sampler=test_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                train_ds,
                batch_size=cfg.train.batch_size,
                num_workers=cfg.train.num_workers,
                sampler=train_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                worker_init_fn=reset_seed_worker_init_fn,
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                valid_ds,
                batch_size=cfg.val.batch_size,
                num_workers=cfg.val.num_workers,
                sampler=valid_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                test_ds,
                batch_size=cfg.test.batch_size,
                num_workers=cfg.test.num_workers,
                sampler=test_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                train_ds,
                batch_size=cfg.train.batch_size,
                num_workers=cfg.train.num_workers,
                sampler=train_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                worker_init_fn=reset_seed_worker_init_fn,
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                valid_ds,
                batch_size=cfg.val.batch_size,
                num_workers=cfg.val.num_workers,
                sampler=valid_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                test_ds,
                batch_size=cfg.test.batch_size,
                num_workers=cfg.test.num_workers,
                sampler=test_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                train_ds,
                batch_size=cfg.train.batch_size,
                num_workers=cfg.train.num_workers,
                sampler=train_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                worker_init_fn=reset_seed_worker_init_fn,
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                valid_ds,
                batch_size=cfg.val.batch_size,
                num_workers=cfg.val.num_workers,
                sampler=valid_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                test_ds,
                batch_size=cfg.test.batch_size,
                num_workers=cfg.test.num_workers,
                sampler=test_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                train_ds,
                batch_size=cfg.train.batch_size,
                num_workers=cfg.train.num_workers,
                sampler=train_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                worker_init_fn=reset_seed_worker_init_fn,
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                valid_ds,
                batch_size=cfg.val.batch_size,
                num_workers=cfg.val.num_workers,
                sampler=valid_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                test_ds,
                batch_size=cfg.test.batch_size,
                num_workers=cfg.test.num_workers,
                sampler=test_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                pin_memory=False,
                drop_last=False,
            )
DataLoader(
                test_ds,
                batch_size=cfg.test.batch_size,
                num_workers=cfg.test.num_workers,
                sampler=test_s,
                collate_fn=partial(
                    registration_collate_fn_stack_mode,
                    num_stages=cfg.backbone.num_stages,
                    voxel_size=cfg.backbone.init_voxel_size,
                    search_radius=cfg.backbone.init_radius,
                    neighbor_limits=neighbor_limits,
                    precompute_data=True,
                ),
                pin_memory=False,
                drop_last=False,
            )
torch.utils.data.DataLoader(
            self.data,
            shuffle=False,
            num_workers=args.num_workers,
            collate_fn=partial(collate_func))
torch.utils.data.DataLoader(
            self.data,
            shuffle=True,
            num_workers=args.num_workers,
            collate_fn=partial(collate_func))
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L49
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L74
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L98
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L154
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L194
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L233
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L289
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L331
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L370
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L426
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L468
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L507
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L563
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L603
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L642
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/PCR/data_loader/data_loader.py#L674
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/SIRA/test.py#L28
https://github.com/Chen-Suyi/SIRA_Pytorch/blob/1d253988e9f738fb8d2fa7d76545dde98cde035e/SIRA/train.py#L35

============================================================
https://github.com/TrepangCat/3D_Semantic_Subspace_Traverser
============================================================

Found 3 times
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=False,
        num_workers=args.n_workers,
        prefetch_factor=8,
    )
DataLoader(
        dataset,
        batch_size=args.batch,
        shuffle=True,
        drop_last=True,
        num_workers=args.n_workers,
        prefetch_factor=32,
    )
DataLoader(
        dataset,
        batch_size=args.batch,
        shuffle=True,
        drop_last=True,
        # drop_last=False,
        num_workers=args.n_workers,
        prefetch_factor=16,
    )
https://github.com/TrepangCat/3D_Semantic_Subspace_Traverser/blob/d4592ae35ead56165024726b9eff9ce938e85b3c/VAE_produce_data.py#L70
https://github.com/TrepangCat/3D_Semantic_Subspace_Traverser/blob/d4592ae35ead56165024726b9eff9ce938e85b3c/train_GAN.py#L1511
https://github.com/TrepangCat/3D_Semantic_Subspace_Traverser/blob/d4592ae35ead56165024726b9eff9ce938e85b3c/train_VAE.py#L750

=================================================
https://github.com/KAIST-Geometric-AI-Group/SALAD
=================================================

Found 1 times
torch.utils.data.DataLoader(
            ds,
            batch_size=self.hparams.batch_size,
            shuffle=stage == "train",
            drop_last=stage == "train",
            num_workers=4,
        )
https://github.com/KAIST-Geometric-AI-Group/SALAD/blob/f30659e1824ef97c0bd57db5c5e4742a7a22420c/salad/models/base_model.py#L120

=========================================
https://github.com/justin941208/MAPConNet
=========================================

Found 2 times
torch.utils.data.DataLoader(dataset, batch_size=opt.batchSize, shuffle=True, num_workers=int(opt.nThreads), drop_last=opt.isTrain)
torch.utils.data.DataLoader(dataset_unlabelled, batch_size=opt.batchSize, shuffle=True, num_workers=int(opt.nThreads), drop_last=opt.isTrain)
https://github.com/justin941208/MAPConNet/blob/f8e1dd5c516c4c0076f68a3950f6f9cab08622e1/train.py#L32
https://github.com/justin941208/MAPConNet/blob/f8e1dd5c516c4c0076f68a3950f6f9cab08622e1/train.py#L35

=====================================
https://github.com/yossilevii100/EPiC
=====================================

Found 3 times
DataLoader(ModelNet40(args=args, partition='train'), num_workers=8,
                              batch_size=args.batch_size, shuffle=True, drop_last=True)
DataLoader(ModelNet40(args=args, partition='test'),
                             num_workers=8,
                             batch_size=args.test_batch_size, shuffle=True, drop_last=False)
DataLoader(ModelNetC(args=args, split=split),
                                     batch_size=args.test_batch_size, shuffle=False, drop_last=False)
https://github.com/yossilevii100/EPiC/blob/66ed77e56a0e87260021b7a5590555204eb39f9a/main.py#L188
https://github.com/yossilevii100/EPiC/blob/66ed77e56a0e87260021b7a5590555204eb39f9a/main.py#L190
https://github.com/yossilevii100/EPiC/blob/66ed77e56a0e87260021b7a5590555204eb39f9a/main.py#L516

=====================================================================================
https://github.com/rqhuang88/Spatially-and-Spectrally-Consistent-Deep-Functional-Maps
=====================================================================================

Found 3 times
torch.utils.data.DataLoader(train_dataset, batch_size=None, shuffle=False)
torch.utils.data.DataLoader(train_dataset, batch_size=None, shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=None, shuffle=False)
https://github.com/rqhuang88/Spatially-and-Spectrally-Consistent-Deep-Functional-Maps/blob/2b416a5c28ac2b711a32335585a47d755d954e60/eval.py#L113
https://github.com/rqhuang88/Spatially-and-Spectrally-Consistent-Deep-Functional-Maps/blob/2b416a5c28ac2b711a32335585a47d755d954e60/train.py#L98
https://github.com/rqhuang88/Spatially-and-Spectrally-Consistent-Deep-Functional-Maps/blob/2b416a5c28ac2b711a32335585a47d755d954e60/train.py#L99

==================================
https://github.com/czvvd/SVDFormer
==================================

Found 7 times
torch.utils.data.DataLoader(dataset=dataset_loader.get_dataset(
        utils.data_loaders.DatasetSubset.TEST),
                                                  batch_size=1,
                                                  num_workers=4,
                                                  collate_fn=utils.data_loaders.collate_fn_55,
                                                  pin_memory=True,
                                                  shuffle=False)
torch.utils.data.DataLoader(dataset=dataset_loader.get_dataset(
        utils.data_loaders.DatasetSubset.TEST),
                                                  batch_size=1,
                                                  num_workers=4,
                                                  collate_fn=utils.data_loaders.collate_fn_55,
                                                  pin_memory=True,
                                                  shuffle=False)
torch.utils.data.DataLoader(dataset=dataset_loader.get_dataset(
        utils.data_loaders.DatasetSubset.TEST),
                                                  batch_size=1,
                                                  num_workers=cfg.CONST.NUM_WORKERS//2,
                                                  collate_fn=utils.data_loaders.collate_fn,
                                                  pin_memory=True,
                                                  shuffle=False)
torch.utils.data.DataLoader(dataset=train_dataset_loader,
                                                    batch_size=cfg.TRAIN.BATCH_SIZE,
                                                    num_workers=cfg.CONST.NUM_WORKERS,
                                                    collate_fn=utils.data_loaders.collate_fn_55,pin_memory=True,
                                                    shuffle=True,
                                                    drop_last=False)
torch.utils.data.DataLoader(dataset=test_dataset_loader.get_dataset(
        utils.data_loaders.DatasetSubset.TEST),
                                                  batch_size=2,
                                                  num_workers=cfg.CONST.NUM_WORKERS//2,
                                                  collate_fn=utils.data_loaders.collate_fn_55,
                                                  pin_memory=True,
                                                  shuffle=False)
torch.utils.data.DataLoader(dataset=train_dataset_loader.get_dataset(
        utils.data_loaders.DatasetSubset.TRAIN),
                                                    batch_size=cfg.TRAIN.BATCH_SIZE,
                                                    num_workers=cfg.CONST.NUM_WORKERS,
                                                    collate_fn=utils.data_loaders.collate_fn,pin_memory=True,
                                                    shuffle=True,
                                                    drop_last=False)
torch.utils.data.DataLoader(dataset=test_dataset_loader.get_dataset(
        utils.data_loaders.DatasetSubset.TEST),
                                                  batch_size=cfg.TRAIN.BATCH_SIZE,
                                                  num_workers=cfg.CONST.NUM_WORKERS//2,
                                                  collate_fn=utils.data_loaders.collate_fn,
                                                  pin_memory=True,
                                                  shuffle=False)
https://github.com/czvvd/SVDFormer/blob/5c9e6824e4684310a0bc4ac2ab16b630951ce8e8/core/eval_55.py#L17
https://github.com/czvvd/SVDFormer/blob/5c9e6824e4684310a0bc4ac2ab16b630951ce8e8/core/test_55.py#L18
https://github.com/czvvd/SVDFormer/blob/5c9e6824e4684310a0bc4ac2ab16b630951ce8e8/core/test_pcn.py#L18
https://github.com/czvvd/SVDFormer/blob/5c9e6824e4684310a0bc4ac2ab16b630951ce8e8/core/train_55.py#L28
https://github.com/czvvd/SVDFormer/blob/5c9e6824e4684310a0bc4ac2ab16b630951ce8e8/core/train_55.py#L34
https://github.com/czvvd/SVDFormer/blob/5c9e6824e4684310a0bc4ac2ab16b630951ce8e8/core/train_pcn.py#L26
https://github.com/czvvd/SVDFormer/blob/5c9e6824e4684310a0bc4ac2ab16b630951ce8e8/core/train_pcn.py#L33

================================
https://github.com/SimingYan/IAE
================================

Found 6 times
torch.utils.data.DataLoader(
    train_dataset, batch_size=batch_size, num_workers=cfg['training']['n_workers'], shuffle=True,
    collate_fn=data.collate_remove_none,
    worker_init_fn=data.worker_init_fn)
torch.utils.data.DataLoader(
        val_dataset, batch_size=1, num_workers=cfg['training']['n_workers_val'], shuffle=False,
    collate_fn=data.collate_remove_none,
    worker_init_fn=data.worker_init_fn)
DataLoader(TRAIN_DATASET, batch_size=args.batch_size, shuffle=True, num_workers=8, drop_last=True)
DataLoader(TEST_DATASET, batch_size=args.batch_size, shuffle=False, num_workers=4)
DataLoader(TRAIN_DATASET, batch_size=args.batch_size, shuffle=False, num_workers=4)
DataLoader(TEST_DATASET, batch_size=args.batch_size, shuffle=False, num_workers=4)
https://github.com/SimingYan/IAE/blob/8f5f68cd4c4ef7441d3080edb2dac001f5e4e2d9/train.py#L53
https://github.com/SimingYan/IAE/blob/8f5f68cd4c4ef7441d3080edb2dac001f5e4e2d9/train.py#L58
https://github.com/SimingYan/IAE/blob/8f5f68cd4c4ef7441d3080edb2dac001f5e4e2d9/downstream_tasks/classification/train_cls.py#L61
https://github.com/SimingYan/IAE/blob/8f5f68cd4c4ef7441d3080edb2dac001f5e4e2d9/downstream_tasks/classification/train_cls.py#L62
https://github.com/SimingYan/IAE/blob/8f5f68cd4c4ef7441d3080edb2dac001f5e4e2d9/downstream_tasks/classification/train_svm.py#L92
https://github.com/SimingYan/IAE/blob/8f5f68cd4c4ef7441d3080edb2dac001f5e4e2d9/downstream_tasks/classification/train_svm.py#L93

=====================================
https://github.com/Omergral/Semantify
=====================================

Found 2 times
DataLoader(train_dataset, **config.dataloader)
DataLoader(val_dataset, **config.dataloader)
https://github.com/Omergral/Semantify/blob/aaa4cd864113684fd06ad08082a6db7eed2df805/semantify/train/train_mapper.py#L36
https://github.com/Omergral/Semantify/blob/aaa4cd864113684fd06ad08082a6db7eed2df805/semantify/train/train_mapper.py#L37

====================================
https://github.com/samb-t/x2ct-vqvae
====================================

Found 11 times
DataLoader(test_dataset, batch_size=8, shuffle=False, 
                                 num_workers=0, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(val_latent_ids, batch_size=1, shuffle=False)
DataLoader(test_dataset, batch_size=1, shuffle=False, 
                             num_workers=0, pin_memory=True, drop_last=False)
DataLoader(train_dataset, batch_size=H.train.batch_size, shuffle=True, 
                              num_workers=workers, pin_memory=True, drop_last=True)
DataLoader(test_dataset, batch_size=H.train.test_batch_size, shuffle=True, 
                             num_workers=workers, pin_memory=True, drop_last=True)
DataLoader(train_dataset, batch_size=1, shuffle=False, 
                                    num_workers=4, pin_memory=True, drop_last=False)
DataLoader(test_dataset, batch_size=1, shuffle=False, 
                                    num_workers=4, pin_memory=True, drop_last=False)
DataLoader(train_dataset, batch_size=H.train.batch_size, shuffle=True, 
                              num_workers=workers, pin_memory=True, drop_last=True)
DataLoader(test_dataset, batch_size=H.train.test_batch_size, shuffle=True, 
                             num_workers=workers, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(train_latent_ids, batch_size=H.train.batch_size, shuffle=shuffle)
torch.utils.data.DataLoader(val_latent_ids, batch_size=H.train.batch_size, shuffle=shuffle)
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/calculate_PRDC.py#L134
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/calculate_PRDC.py#L145
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/eval_sampler.py#L147
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/train_ct_vqgan.py#L179
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/train_ct_vqgan.py#L183
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/train_sampler.py#L197
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/train_sampler.py#L199
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/train_xray_vqgan.py#L183
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/train_xray_vqgan.py#L187
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/utils/sampler_utils.py#L98
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/utils/sampler_utils.py#L101

===========================================
https://github.com/ark1234/ICCV2023-HyperCD
===========================================

Found 6 times
torch.utils.data.DataLoader(dataset=train_dataset_loader.get_dataset(
        utils.data_loaders.DatasetSubset.TRAIN),
                                                    batch_size=cfg.TRAIN.BATCH_SIZE,
                                                    num_workers=cfg.CONST.NUM_WORKERS,
                                                    collate_fn=utils.data_loaders.collate_fn,
                                                    pin_memory=True,
                                                    shuffle=True,
                                                    drop_last=False)
torch.utils.data.DataLoader(dataset=val_dataset_loader.get_dataset(
        utils.data_loaders.DatasetSubset.TEST),
                                                  batch_size=cfg.TRAIN.BATCH_SIZE,
                                                  num_workers=cfg.CONST.NUM_WORKERS//2,
                                                  collate_fn=utils.data_loaders.collate_fn,
                                                  pin_memory=True,
                                                  shuffle=False)
torch.utils.data.DataLoader(dataset=test_dataset_loader.get_dataset(
        utils.data_loaders.DatasetSubset.TEST),
                                                  batch_size=1,
                                                  num_workers=cfg.CONST.NUM_WORKERS,
                                                  collate_fn=utils.data_loaders.collate_fn,
                                                  pin_memory=True,
                                                  shuffle=False)
torch.utils.data.DataLoader(dataset=train_dataset_loader.get_dataset(
        utils.data_loaders.DatasetSubset.TRAIN),
                                                    batch_size=cfg.TRAIN.BATCH_SIZE,
                                                    num_workers=cfg.CONST.NUM_WORKERS,
                                                    collate_fn=utils.data_loaders.collate_fn,
                                                    pin_memory=True,
                                                    shuffle=True,
                                                    drop_last=True)
torch.utils.data.DataLoader(dataset=val_dataset_loader.get_dataset(
        utils.data_loaders.DatasetSubset.TEST),
                                                  batch_size=cfg.TRAIN.BATCH_SIZE,
                                                  num_workers=cfg.CONST.NUM_WORKERS//2,
                                                  collate_fn=utils.data_loaders.collate_fn,
                                                  pin_memory=True,
                                                  shuffle=False)
torch.utils.data.DataLoader(dataset=test_dataset_loader.get_dataset(
        utils.data_loaders.DatasetSubset.TEST),
                                                  batch_size=1,
                                                  num_workers=cfg.CONST.NUM_WORKERS,
                                                  collate_fn=utils.data_loaders.collate_fn,
                                                  pin_memory=True,
                                                  shuffle=False)
https://github.com/ark1234/ICCV2023-HyperCD/blob/36029c7bbaa1bc184e12fbaae0653c2e485b1c3d/codes/train_pcn.py#L155
https://github.com/ark1234/ICCV2023-HyperCD/blob/36029c7bbaa1bc184e12fbaae0653c2e485b1c3d/codes/train_pcn.py#L163
https://github.com/ark1234/ICCV2023-HyperCD/blob/36029c7bbaa1bc184e12fbaae0653c2e485b1c3d/codes/train_pcn.py#L227
https://github.com/ark1234/ICCV2023-HyperCD/blob/36029c7bbaa1bc184e12fbaae0653c2e485b1c3d/codes/train_shapenet55.py#L153
https://github.com/ark1234/ICCV2023-HyperCD/blob/36029c7bbaa1bc184e12fbaae0653c2e485b1c3d/codes/train_shapenet55.py#L161
https://github.com/ark1234/ICCV2023-HyperCD/blob/36029c7bbaa1bc184e12fbaae0653c2e485b1c3d/codes/train_shapenet55.py#L225

=====================================
https://github.com/aryanmikaeili/SKED
=====================================

Found 1 times
DataLoader(list(range(self.size)), batch_size=1, collate_fn=self.collate, shuffle=self.training,
                            num_workers=0)
https://github.com/aryanmikaeili/SKED/blob/223b2ea535432b362d7d042e5d3dd4b40ad93872/code/dataset/dataset.py#L138

=====================================
https://github.com/Finspire13/DiffAct
=====================================

Found 1 times
torch.utils.data.DataLoader(
            train_train_dataset, batch_size=1, shuffle=True, num_workers=4)
https://github.com/Finspire13/DiffAct/blob/a223e0c27a6f02adfb321a518cb0f7dd0d0896b6/main.py#L68

=================================
https://github.com/maoyunyao/MAMP
=================================

Found 5 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        worker_init_fn=worker_init_fn,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        worker_init_fn=worker_init_fn,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        worker_init_fn=worker_init_fn,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        worker_init_fn=worker_init_fn,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        worker_init_fn=worker_init_fn,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
https://github.com/maoyunyao/MAMP/blob/09e6252a5c7d061c226395d25e6aa47a69e7e58d/main_finetune.py#L204
https://github.com/maoyunyao/MAMP/blob/09e6252a5c7d061c226395d25e6aa47a69e7e58d/main_finetune.py#L213
https://github.com/maoyunyao/MAMP/blob/09e6252a5c7d061c226395d25e6aa47a69e7e58d/main_linprobe.py#L179
https://github.com/maoyunyao/MAMP/blob/09e6252a5c7d061c226395d25e6aa47a69e7e58d/main_linprobe.py#L188
https://github.com/maoyunyao/MAMP/blob/09e6252a5c7d061c226395d25e6aa47a69e7e58d/main_pretrain.py#L164

===============================
https://github.com/chihina/PJAE
===============================

Found 12 times
DataLoader(dataset=test_set,
                                batch_size=cfg.exp_set.batch_size,
                                shuffle=True,
                                num_workers=cfg.exp_set.num_workers,
                                pin_memory=True)
DataLoader(dataset=valid_set,
                                batch_size=cfg.exp_set.batch_size,
                                shuffle=False,
                                num_workers=cfg.exp_set.num_workers,
                                pin_memory=True)
DataLoader(dataset=test_set,
                                batch_size=cfg.exp_set.batch_size,
                                shuffle=False,
                                num_workers=cfg.exp_set.num_workers,
                                pin_memory=True)
DataLoader(dataset=valid_set,
                                batch_size=cfg.exp_set.batch_size,
                                shuffle=False,
                                num_workers=cfg.exp_set.num_workers,
                                pin_memory=True)
DataLoader(dataset=test_set,
                                batch_size=cfg.exp_set.batch_size,
                                shuffle=False,
                                num_workers=cfg.exp_set.num_workers,
                                pin_memory=True)
DataLoader(dataset=valid_set,
                                batch_size=cfg.exp_set.batch_size,
                                shuffle=False,
                                num_workers=cfg.exp_set.num_workers,
                                pin_memory=True)
DataLoader(dataset=test_set,
                                batch_size=cfg.exp_set.batch_size,
                                shuffle=False,
                                num_workers=cfg.exp_set.num_workers,
                                pin_memory=True)
DataLoader(dataset=test_set,
                                batch_size=cfg.exp_set.batch_size,
                                shuffle=False,
                                num_workers=cfg.exp_set.num_workers,
                                pin_memory=True)
DataLoader(dataset=test_set,
                                batch_size=cfg.exp_set.batch_size,
                                shuffle=False,
                                num_workers=cfg.exp_set.num_workers,
                                pin_memory=True)
DataLoader(dataset=test_set,
                                batch_size=cfg.exp_set.batch_size,
                                shuffle=False,
                                num_workers=cfg.exp_set.num_workers,
                                pin_memory=True)
DataLoader(dataset=train_set,
                                batch_size=cfg.exp_set.batch_size,
                                shuffle=True, 
                                num_workers=cfg.exp_set.num_workers,
                                pin_memory=False)
DataLoader(dataset=val_set,
                                batch_size=cfg.exp_set.batch_size,
                                shuffle=False,
                                num_workers=cfg.exp_set.num_workers,
                                pin_memory=False)
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/demo_ours.py#L178
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/eval_on_videocoatt_hgt.py#L85
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/eval_on_videocoatt_hgt.py#L91
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/eval_on_videocoatt_isa.py#L134
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/eval_on_videocoatt_isa.py#L140
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/eval_on_videocoatt_ours.py#L138
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/eval_on_videocoatt_ours.py#L144
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/eval_on_volleyball_ball_detection.py#L73
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/eval_on_volleyball_isa.py#L99
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/eval_on_volleyball_ours.py#L107
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/train.py#L227
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/train.py#L234

=======================================
https://github.com/li-ronghui/FineDance
=======================================

Found 2 times
DataLoader(
            train_dataset,
            batch_size=opt.batch_size,
            shuffle=True,
            num_workers=min(int(num_cpus * 0.5), 40),      # num_workers=min(int(num_cpus * 0.75), 32), 
            pin_memory=True,
            drop_last=True,
        )
DataLoader(
            test_dataset,
            batch_size=opt.batch_size,
            shuffle=True,
            num_workers=2,
            pin_memory=True,
            drop_last=True,
        )
https://github.com/li-ronghui/FineDance/blob/bb13fe852d32cc9959c48a33fca85d2c6c531192/train_seq.py#L142
https://github.com/li-ronghui/FineDance/blob/bb13fe852d32cc9959c48a33fca85d2c6c531192/train_seq.py#L150

==============================
https://github.com/yhZhai/SOAR
==============================

Found 35 times
DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=num_workers,
                pin_memory=pin_memory,
                worker_init_fn=init_fn,
                **kwargs)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=videos_per_gpu),
        pin_memory=pin_memory,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        drop_last=drop_last,
        **kwargs)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(ExampleDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((10, 2)))
DataLoader(
            test_dataset,
            batch_size=2,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=2)
DataLoader(test_dataset, batch_size=2)
DataLoader(test_bigger_dataset, batch_size=2)
DataLoader(test_bigger_dataset, batch_size=2)
DataLoader(test_bigger_dataset, batch_size=2)
DataLoader(test_bigger_dataset, batch_size=2)
DataLoader(test_bigger_dataset, batch_size=2)
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/mmaction/datasets/builder.py#L121
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/mmaction/datasets/builder.py#L146
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_data/test_sampler.py#L27
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_data/test_sampler.py#L36
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_data/test_sampler.py#L45
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_data/test_sampler.py#L60
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_data/test_sampler.py#L70
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_data/test_sampler.py#L80
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_data/test_sampler.py#L90
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_apis_test.py#L64
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_apis_test.py#L83
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L101
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L107
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L113
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L119
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L123
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L125
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L143
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L145
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L162
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L164
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L181
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L199
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L215
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L231
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_eval_hook.py#L254
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_lr.py#L17
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_precise_bn.py#L103
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_precise_bn.py#L115
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_precise_bn.py#L119
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_precise_bn.py#L134
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_precise_bn.py#L144
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_precise_bn.py#L155
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_precise_bn.py#L166
https://github.com/yhZhai/SOAR/blob/2640a88ea0d57d70a8b86e1df62e2c53e3630719/tests/test_runtime/test_precise_bn.py#L189

===============================
https://github.com/MartinXM/GAP
===============================

Found 4 times
torch.utils.data.DataLoader(
                dataset=Feeder(**self.arg.train_feeder_args),
                batch_size=self.arg.batch_size,
                shuffle=True,
                num_workers=self.arg.num_worker,
                drop_last=True,
                worker_init_fn=init_seed)
torch.utils.data.DataLoader(
            dataset=Feeder(**self.arg.test_feeder_args),
            batch_size=self.arg.test_batch_size,
            shuffle=False,
            num_workers=self.arg.num_worker,
            drop_last=False,
            worker_init_fn=init_seed)
torch.utils.data.DataLoader(
                dataset=Feeder(**self.arg.train_feeder_args),
                batch_size=self.arg.batch_size,
                shuffle=True,
                num_workers=self.arg.num_worker,
                drop_last=True,
                worker_init_fn=init_seed)
torch.utils.data.DataLoader(
            dataset=Feeder(**self.arg.test_feeder_args),
            batch_size=self.arg.test_batch_size,
            shuffle=False,
            num_workers=self.arg.num_worker,
            drop_last=False,
            worker_init_fn=init_seed)
https://github.com/MartinXM/GAP/blob/ca17b54267859a8c65a2b252872ba3853c010e19/main_multipart_ntu.py#L289
https://github.com/MartinXM/GAP/blob/ca17b54267859a8c65a2b252872ba3853c010e19/main_multipart_ntu.py#L296
https://github.com/MartinXM/GAP/blob/ca17b54267859a8c65a2b252872ba3853c010e19/main_multipart_ucla.py#L290
https://github.com/MartinXM/GAP/blob/ca17b54267859a8c65a2b252872ba3853c010e19/main_multipart_ucla.py#L297

=================================
https://github.com/giaczara/dallv
=================================

Found 7 times
DataLoader(
            dataset=self.data_train,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            shuffle=True,
        )
DataLoader(
            dataset=self.data_val,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            shuffle=False,
        )
DataLoader(
            dataset=self.data_test,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            shuffle=False,
        )
DataLoader(
            dataset=self.data_train,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.workers,
            pin_memory=self.hparams.pin_memory,
            shuffle=True,
            drop_last=True,
        )
DataLoader(
            dataset=self.data_val,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.workers,
            pin_memory=self.hparams.pin_memory,
            shuffle=False,
            drop_last=True,
        )
DataLoader(
            dataset=self.data_val,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.workers,
            pin_memory=self.hparams.pin_memory,
            shuffle=False,
        )
DataLoader(
            dataset=predict_dataset,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.workers,
            pin_memory=self.hparams.pin_memory,
            shuffle=False,
            drop_last=False,
        )
https://github.com/giaczara/dallv/blob/8e81d76ebbcc1264a041f0553b4047b6d63fd179/src/datamodules/mnist_datamodule.py#L91
https://github.com/giaczara/dallv/blob/8e81d76ebbcc1264a041f0553b4047b6d63fd179/src/datamodules/mnist_datamodule.py#L100
https://github.com/giaczara/dallv/blob/8e81d76ebbcc1264a041f0553b4047b6d63fd179/src/datamodules/mnist_datamodule.py#L109
https://github.com/giaczara/dallv/blob/8e81d76ebbcc1264a041f0553b4047b6d63fd179/src/datamodules/video_datamodule.py#L137
https://github.com/giaczara/dallv/blob/8e81d76ebbcc1264a041f0553b4047b6d63fd179/src/datamodules/video_datamodule.py#L147
https://github.com/giaczara/dallv/blob/8e81d76ebbcc1264a041f0553b4047b6d63fd179/src/datamodules/video_datamodule.py#L157
https://github.com/giaczara/dallv/blob/8e81d76ebbcc1264a041f0553b4047b6d63fd179/src/datamodules/video_datamodule.py#L173

===================================
https://github.com/aleflabo/MoCoDAD
===================================

Found 2 times
DataLoader(dataset, **loader_args, shuffle=(split == 'train'))
DataLoader(val_dataset, **loader_args, shuffle=False)
https://github.com/aleflabo/MoCoDAD/blob/0b4a165c2f9ec523ec04ae6a70b4737a137c707b/utils/dataset.py#L316
https://github.com/aleflabo/MoCoDAD/blob/0b4a165c2f9ec523ec04ae6a70b4737a137c707b/utils/dataset.py#L326

======================================
https://github.com/jbistanbul/MiniROAD
======================================

Found 1 times
data.DataLoader(
        dataset=data_layer(cfg, mode),
        batch_size=cfg["batch_size"] if mode == 'train' else cfg["test_batch_size"],
        shuffle=True if mode == 'train' else False,
        num_workers=cfg["num_workers"],
        pin_memory=False,
    )
https://github.com/jbistanbul/MiniROAD/blob/9cc22df2c39c447254be4857e61b16fe211f9bbf/datasets/dataset_builder.py#L17

======================================
https://github.com/LTContext/LTContext
======================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=cfg.DATA_LOADER.NUM_WORKERS,
        collate_fn=custom_collate_fn,
        pin_memory=True,
        drop_last=False,
    )
https://github.com/LTContext/LTContext/blob/ced456cddb2f9978e6372f3a46b38696c46cd700/ltc/dataset/loader.py#L40

====================================
https://github.com/anshulbshah/STEPs
====================================

Found 2 times
DataLoader(valDataset, batch_size=1, shuffle=False,num_workers=0,worker_init_fn=seed_worker)
DataLoader(trainDataset, batch_size=args.batch_size,num_workers=args.num_workers, drop_last=True,worker_init_fn=seed_worker,sampler=sampler)
https://github.com/anshulbshah/STEPs/blob/3eb0af430088f92ef4eeae5ce96dfef54d3c667c/methods/evaluation.py#L57
https://github.com/anshulbshah/STEPs/blob/3eb0af430088f92ef4eeae5ce96dfef54d3c667c/methods/selfsup.py#L23

===============================
https://github.com/MCG-NJU/EVAD
===============================

Found 2 times
torch.utils.data.DataLoader(
            dataset,
            batch_sampler=batch_sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            # collate_fn=detection_collatev2 if cfg.DETECTION.ENABLE else None,
            collate_fn=c_fn,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
https://github.com/MCG-NJU/EVAD/blob/0efdb7e1156d4b0b419cd240555f8bbca45e4bf6/slowfast/datasets/loader.py#L133
https://github.com/MCG-NJU/EVAD/blob/0efdb7e1156d4b0b419cd240555f8bbca45e4bf6/slowfast/datasets/loader.py#L151

==================================
https://github.com/fredzzhang/pvic
==================================

Found 2 times
DataLoader(
        dataset=trainset,
        collate_fn=custom_collate, batch_size=args.batch_size // args.world_size,
        num_workers=args.num_workers, pin_memory=True,
        sampler=DistributedSampler(
            trainset, num_replicas=args.world_size,
            rank=rank, drop_last=True)
    )
DataLoader(
        dataset=testset,
        collate_fn=custom_collate, batch_size=args.batch_size // args.world_size,
        num_workers=args.num_workers, pin_memory=True,
        sampler=DistributedSampler(
            testset, num_replicas=args.world_size,
            rank=rank, drop_last=True)
    )
https://github.com/fredzzhang/pvic/blob/0f9e1015569ad60dc30e502886e874d4e03a352b/main.py#L54
https://github.com/fredzzhang/pvic/blob/0f9e1015569ad60dc30e502886e874d4e03a352b/main.py#L62

=======================================
https://github.com/sqiangcao99/E2E-LOAD
=======================================

Found 2 times
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            #pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            #collate_fn=collate_func,
            #worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
https://github.com/sqiangcao99/E2E-LOAD/blob/beddae33d57b30393ccb2145be377ce3953183bf/src/datasets/loader.py#L103
https://github.com/sqiangcao99/E2E-LOAD/blob/beddae33d57b30393ccb2145be377ce3953183bf/src/datasets/loader.py#L135

===================================
https://github.com/Qinying-Liu/CASE
===================================

Found 2 times
data.DataLoader(
        ThumosFeature(data_path=config.data_path, mode='train',
                      modal=config.modal, feature_fps=config.feature_fps,
                      num_segments=config.num_segments, len_feature=config.len_feature,
                      seed=config.seed, sampling='random', supervision='strong'),
        batch_size=config.batch_size,
        shuffle=True, num_workers=config.num_workers, drop_last=True)
data.DataLoader(
        ThumosFeature(data_path=config.data_path, mode='test',
                      modal=config.modal, feature_fps=config.feature_fps,
                      num_segments=config.num_segments, len_feature=config.len_feature,
                      seed=config.seed, sampling='uniform', supervision='strong'),
        batch_size=1,
        shuffle=False, num_workers=config.num_workers)
https://github.com/Qinying-Liu/CASE/blob/300df5830b0cf4d66d33ea6b05bb6160693c83c9/main_case.py#L20
https://github.com/Qinying-Liu/CASE/blob/300df5830b0cf4d66d33ea6b05bb6160693c83c9/main_case.py#L28

====================================
https://github.com/Jho-Yonsei/HD-GCN
====================================

Found 2 times
torch.utils.data.DataLoader(
                dataset=Feeder(**self.arg.train_feeder_args),
                batch_size=self.arg.batch_size,
                shuffle=True,
                num_workers=self.arg.num_worker,
                drop_last=True,
                worker_init_fn=init_seed)
torch.utils.data.DataLoader(
            dataset=Feeder(**self.arg.test_feeder_args),
            batch_size=self.arg.test_batch_size,
            shuffle=False,
            num_workers=self.arg.num_worker,
            drop_last=False,
            worker_init_fn=init_seed)
https://github.com/Jho-Yonsei/HD-GCN/blob/672da2c3d84c9ea41dab124b7be8b3f82a83b6b2/main.py#L275
https://github.com/Jho-Yonsei/HD-GCN/blob/672da2c3d84c9ea41dab124b7be8b3f82a83b6b2/main.py#L282

=============================================
https://github.com/OPTML-Group/Robust-MoE-CNN
=============================================

Found 25 times
DataLoader(train_set, batch_size=batch_size, shuffle=True, num_workers=num_workers, pin_memory=True)
DataLoader(train_set, batch_size=batch_size, shuffle=True, num_workers=num_workers, pin_memory=True)
DataLoader(test_set, batch_size=batch_size, shuffle=False, num_workers=num_workers, pin_memory=True)
DataLoader(
            trainset,
            batch_size=self.args.batch_size,
            shuffle=True,
            **kwargs
        )
DataLoader(
            valset,
            batch_size=self.args.batch_size,
            shuffle=True,
            **kwargs
        )
DataLoader(
            testset, batch_size=self.args.test_batch_size, shuffle=False, **kwargs
        )
DataLoader(
            trainset,
            batch_size=self.args.batch_size,
            shuffle=True,
            num_workers=num_workers,
            **kwargs
        )
DataLoader(
            trainset_twin,
            batch_size=self.args.batch_size,
            shuffle=True,
            num_workers=num_workers,
            **kwargs
        )
DataLoader(
            testset, batch_size=self.args.test_batch_size, shuffle=False, num_workers=num_workers, **kwargs
        )
DataLoader(train_set, batch_size=batch_size, num_workers=num_workers, shuffle=True)
DataLoader(train_set, batch_size=batch_size, num_workers=num_workers, shuffle=True)
DataLoader(validation_set, batch_size=batch_size, num_workers=num_workers, shuffle=False)
DataLoader(
            trainset,
            shuffle=True,
            batch_size=self.args.batch_size,
            num_workers=8,
            pin_memory=True,
            **kwargs,
        )
DataLoader(
            trainset,
            shuffle=True,
            batch_size=self.args.batch_size,
            num_workers=8,
            pin_memory=True,
            **kwargs,
        )
DataLoader(
            testset,
            batch_size=self.args.test_batch_size,
            shuffle=False,
            num_workers=4,
            pin_memory=True,
            **kwargs,
        )
DataLoader(
            trainset,
            shuffle=True,
            batch_size=self.args.batch_size,
            num_workers=8,
            pin_memory=True,
            **kwargs,
        )
DataLoader(
            trainset,
            shuffle=True,
            batch_size=self.args.batch_size,
            num_workers=8,
            pin_memory=True,
            **kwargs,
        )
DataLoader(
            testset,
            batch_size=self.args.test_batch_size,
            shuffle=False,
            num_workers=4,
            pin_memory=True,
            **kwargs,
        )
DataLoader(
            trainset,
            shuffle=True,
            batch_size=self.args.batch_size,
            num_workers=8,
            pin_memory=True,
            **kwargs
        )
DataLoader(
            trainset,
            shuffle=True,
            batch_size=self.args.batch_size,
            num_workers=8,
            pin_memory=True,
            **kwargs
        )
DataLoader(
            testset,
            batch_size=self.args.test_batch_size,
            shuffle=False,
            num_workers=4,
            pin_memory=True,
            **kwargs,
        )
DataLoader(dataset, num_workers=16, collate_fn=lambda x: x)
DataLoader(
            trainset,
            batch_size=self.args.batch_size,
            num_workers=self.args.num_workers,
            shuffle=True,
            **kwargs
        )
DataLoader(
            trainset,
            batch_size=self.args.batch_size,
            num_workers=self.args.num_workers,
            shuffle=True,
            **kwargs
        )
DataLoader(
            testset, batch_size=self.args.test_batch_size, num_workers=self.args.num_workers, shuffle=False, **kwargs
        )
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/cifar.py#L66
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/cifar.py#L67
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/cifar.py#L68
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/cifar.py#L118
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/cifar.py#L125
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/cifar.py#L138
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/cifar.py#L233
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/cifar.py#L241
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/cifar.py#L255
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/huggingface.py#L73
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/huggingface.py#L74
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/huggingface.py#L75
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/imagenet.py#L54
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/imagenet.py#L63
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/imagenet.py#L71
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/imagenet.py#L122
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/imagenet.py#L131
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/imagenet.py#L139
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/imagenet.py#L197
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/imagenet.py#L207
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/imagenet.py#L216
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/lmdb_dataset.py#L89
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/tiny_imagenet.py#L102
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/tiny_imagenet.py#L112
https://github.com/OPTML-Group/Robust-MoE-CNN/blob/c50796fb8284512b6f6ad8e843f95182cec527cf/data/tiny_imagenet.py#L120

================================
https://github.com/Zoky-2020/SGA
================================

Found 4 times
DataLoader(test_dataset, batch_size=args.batch_size,
                             num_workers=4, collate_fn=test_dataset.collate_fn)
DataLoader(test_dataset, batch_size=args.batch_size,
                             num_workers=4, collate_fn=test_dataset.collate_fn)
DataLoader(test_dataset, batch_size=args.batch_size,
                             num_workers=4, collate_fn=test_dataset.collate_fn)
DataLoader(test_dataset, batch_size=args.batch_size,
                             num_workers=4, collate_fn=test_dataset.collate_fn)
https://github.com/Zoky-2020/SGA/blob/f49e6926cd13148e49bdbc2c3e537660e096230c/eval_albef2clip-vit_flickr.py#L323
https://github.com/Zoky-2020/SGA/blob/f49e6926cd13148e49bdbc2c3e537660e096230c/eval_albef2tcl_flickr.py#L333
https://github.com/Zoky-2020/SGA/blob/f49e6926cd13148e49bdbc2c3e537660e096230c/eval_clip-vit2albef_flickr.py#L325
https://github.com/Zoky-2020/SGA/blob/f49e6926cd13148e49bdbc2c3e537660e096230c/eval_clip-vit2clip-cnn.py#L316

=========================================
https://github.com/nishadsinghi/CleanCLIP
=========================================

Found 17 times
DataLoader(dataset, batch_size = args.batch_size, shuffle = False, pin_memory = True, drop_last = False)
DataLoader(dataset, batch_size = args.batch_size, shuffle = False, pin_memory = True, drop_last = False)
DataLoader(dataset_original, batch_size = args.batch_size, shuffle = False, pin_memory = True, drop_last = False)
DataLoader(dataset_backdoor, batch_size = args.batch_size, shuffle = False, pin_memory = True, drop_last = False)
DataLoader(dataset_clean, batch_size=args.batch_size, shuffle=False, pin_memory=True,
                                         drop_last=False)
DataLoader(dataset_backdoor_detected, batch_size=args.batch_size, shuffle=False,
                                                  pin_memory=True, drop_last=False)
DataLoader(dataset_backdoor_undetected, batch_size=args.batch_size,
                                                    shuffle=False, pin_memory=True, drop_last=False)
DataLoader(dataset, batch_size = options.batch_size, shuffle = (sampler is None), num_workers = options.num_workers, pin_memory = True, sampler = sampler, drop_last = True)
DataLoader(dataset, batch_size = batch_size, shuffle = (sampler is None), num_workers = options.num_workers, pin_memory = True, sampler = sampler, drop_last = True)
DataLoader(dataset, batch_size = options.batch_size, shuffle = False, num_workers = options.num_workers, pin_memory = True, sampler = None, drop_last = False)
torch.utils.data.DataLoader(dataset, batch_size = options.batch_size, num_workers = options.num_workers, sampler = None)
torch.utils.data.DataLoader(dataset, batch_size = options.linear_probe_batch_size, num_workers = options.num_workers, sampler = None, shuffle = True)
torch.utils.data.DataLoader(train_dataset, batch_size = options.batch_size, shuffle = True)
DataLoader(dataset, batch_size = options.batch_size, shuffle = False, num_workers = options.num_workers, pin_memory = True, drop_last = False)
torch.utils.data.DataLoader(dataset, batch_size = batch_size)
torch.utils.data.DataLoader(dataset, batch_size = options.batch_size, shuffle = train, worker_init_fn = options.worker_init_fn, generator = options.generator)
torch.utils.data.DataLoader(dataset, batch_size = options.batch_size)
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/backdoor/pca-tsne-labelled-dataset.py#L89
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/backdoor/tsne-labelled.py#L91
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/backdoor/tsne.py#L83
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/backdoor/tsne.py#L84
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/backdoor/tsne_detected_vs_undetected_vs_clean.py#L97
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/backdoor/tsne_detected_vs_undetected_vs_clean.py#L99
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/backdoor/tsne_detected_vs_undetected_vs_clean.py#L101
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/src/data.py#L122
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/src/data.py#L137
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/src/data.py#L148
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/src/data.py#L232
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/src/data.py#L274
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/src/evaluate.py#L245
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/utils/embeddings.py#L161
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/utils/hypersphere_labels.py#L20
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/utils/linear_probe.py#L37
https://github.com/nishadsinghi/CleanCLIP/blob/d6e2f1dbf0ad952c05b816c6024d8205682a0674/utils/zeroshot.py#L14

===================================================================================
https://github.com/geyao1995/advancing-example-exploitation-in-adversarial-training
===================================================================================

Found 7 times
torch.utils.data.DataLoader(trainset, batch_size=bs_train, shuffle=True,
                                               num_workers=6, pin_memory=True)
torch.utils.data.DataLoader(testset, batch_size=bs_eval, shuffle=False,
                                              num_workers=6, pin_memory=True)
torch.utils.data.DataLoader(trainset, batch_size=bs_train, shuffle=True,
                                               num_workers=6, pin_memory=True)
torch.utils.data.DataLoader(testset, batch_size=bs_eval, shuffle=False,
                                              num_workers=6, pin_memory=True)
torch.utils.data.DataLoader(trainset, batch_size=bs_train, shuffle=True,
                                               num_workers=6, pin_memory=True)
torch.utils.data.DataLoader(testset, batch_size=bs_eval, shuffle=False,
                                              num_workers=6, pin_memory=True)
torch.utils.data.DataLoader(test_set, batch_size=128, shuffle=False,
                                              num_workers=6, pin_memory=True)
https://github.com/geyao1995/advancing-example-exploitation-in-adversarial-training/blob/ec64793397dc76e72c54b1636575b26a2cdade14/utils/dataloaders.py#L34
https://github.com/geyao1995/advancing-example-exploitation-in-adversarial-training/blob/ec64793397dc76e72c54b1636575b26a2cdade14/utils/dataloaders.py#L36
https://github.com/geyao1995/advancing-example-exploitation-in-adversarial-training/blob/ec64793397dc76e72c54b1636575b26a2cdade14/utils/dataloaders.py#L67
https://github.com/geyao1995/advancing-example-exploitation-in-adversarial-training/blob/ec64793397dc76e72c54b1636575b26a2cdade14/utils/dataloaders.py#L69
https://github.com/geyao1995/advancing-example-exploitation-in-adversarial-training/blob/ec64793397dc76e72c54b1636575b26a2cdade14/utils/dataloaders.py#L100
https://github.com/geyao1995/advancing-example-exploitation-in-adversarial-training/blob/ec64793397dc76e72c54b1636575b26a2cdade14/utils/dataloaders.py#L102
https://github.com/geyao1995/advancing-example-exploitation-in-adversarial-training/blob/ec64793397dc76e72c54b1636575b26a2cdade14/utils/dataloaders.py#L126

=================================
https://github.com/Zixuan-Zhu/VaB
=================================

Found 11 times
DataLoader(
                dataset=all_dataset,
                batch_size=128,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=labeled_dataset,
                batch_size=self.batch_size,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=unlabeled_dataset,
                batch_size=batchsize,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=labeled_dataset,
                batch_size=128,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=unlabeled_dataset,
                batch_size=128,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=test_dataset_CL,
                batch_size=self.batch_size,
                shuffle=False,
                num_workers=self.num_workers)
DataLoader(
                dataset=test_dataset_BD,
                batch_size=self.batch_size,
                shuffle=False,
                num_workers=self.num_workers)
DataLoader(
                dataset=test_dataset_CL,
                batch_size=128,
                shuffle=False,
                num_workers=self.num_workers)
DataLoader(
                dataset=test_dataset_BD,
                batch_size=128,
                shuffle=False,
                num_workers=self.num_workers)
DataLoader(
                dataset=eval_dataset1,
                batch_size=128,
                shuffle=False,
                num_workers=self.num_workers)
DataLoader(
                dataset=all_dataset,
                batch_size=self.batch_size,
                shuffle=True,
                num_workers=self.num_workers)
https://github.com/Zixuan-Zhu/VaB/blob/8a70c1157ca52ff2ae62a403253c8bcca218df7e/dataloader_cifar10.py#L309
https://github.com/Zixuan-Zhu/VaB/blob/8a70c1157ca52ff2ae62a403253c8bcca218df7e/dataloader_cifar10.py#L318
https://github.com/Zixuan-Zhu/VaB/blob/8a70c1157ca52ff2ae62a403253c8bcca218df7e/dataloader_cifar10.py#L325
https://github.com/Zixuan-Zhu/VaB/blob/8a70c1157ca52ff2ae62a403253c8bcca218df7e/dataloader_cifar10.py#L334
https://github.com/Zixuan-Zhu/VaB/blob/8a70c1157ca52ff2ae62a403253c8bcca218df7e/dataloader_cifar10.py#L341
https://github.com/Zixuan-Zhu/VaB/blob/8a70c1157ca52ff2ae62a403253c8bcca218df7e/dataloader_cifar10.py#L351
https://github.com/Zixuan-Zhu/VaB/blob/8a70c1157ca52ff2ae62a403253c8bcca218df7e/dataloader_cifar10.py#L357
https://github.com/Zixuan-Zhu/VaB/blob/8a70c1157ca52ff2ae62a403253c8bcca218df7e/dataloader_cifar10.py#L366
https://github.com/Zixuan-Zhu/VaB/blob/8a70c1157ca52ff2ae62a403253c8bcca218df7e/dataloader_cifar10.py#L372
https://github.com/Zixuan-Zhu/VaB/blob/8a70c1157ca52ff2ae62a403253c8bcca218df7e/dataloader_cifar10.py#L381
https://github.com/Zixuan-Zhu/VaB/blob/8a70c1157ca52ff2ae62a403253c8bcca218df7e/dataloader_cifar10.py#L390

===================================
https://github.com/StolikTomer/SAGA
===================================

Found 3 times
DataLoader(data_struct, batch_size=np.int(ae_params['B_size']), shuffle=True)
DataLoader(val_data, batch_size=1, shuffle=False)
DataLoader(train_data, batch_size=np.int(params['B_size']), shuffle=True)
https://github.com/StolikTomer/SAGA/blob/1ba917c59132d1f18329b55608c0a101d3126472/src/train_ae.py#L53
https://github.com/StolikTomer/SAGA/blob/1ba917c59132d1f18329b55608c0a101d3126472/src/train_classifier.py#L16
https://github.com/StolikTomer/SAGA/blob/1ba917c59132d1f18329b55608c0a101d3126472/src/train_classifier.py#L35

================================================
https://github.com/qiufan319/benchmark_pc_attack
================================================

Found 39 times
DataLoader(orig_testset, batch_size=args.batch_size,
                                 shuffle=True, num_workers=0,
                                 pin_memory=True, drop_last=False)
DataLoader(adv_testset, batch_size=args.batch_size,
                                shuffle=True, num_workers=0,
                                pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size,
                                shuffle=True, num_workers=0,
                                pin_memory=True, drop_last=False)
DataLoader(test_set, batch_size=args.batch_size,
                             shuffle=False, num_workers=0,
                             pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size,
                              shuffle=True, num_workers=0,
                              pin_memory=True, drop_last=True)
DataLoader(test_set, batch_size=args.batch_size,
                             shuffle=False, num_workers=0,
                             pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, num_workers=10, drop_last=True)
DataLoader(test_set, batch_size=100, shuffle=False, num_workers=10, drop_last=False)
torch.utils.data.DataLoader(test_dataset, batch_size=1, shuffle=False, drop_last=False,
        num_workers=cfg.num_workers, pin_memory=True)
torch.utils.data.DataLoader(test_dataset, batch_size=cfg.batch_size, shuffle=False, drop_last=False, num_workers=cfg.num_workers, pin_memory=True)
torch.utils.data.DataLoader(dense_test_dataset, batch_size=cfg.batch_size, shuffle=False, drop_last=False, num_workers=cfg.num_workers, pin_memory=True)
torch.utils.data.DataLoader(test_dataset, batch_size=cfg.batch_size, shuffle=False, drop_last=False, num_workers=cfg.num_workers, pin_memory=True)
torch.utils.data.DataLoader(dense_test_dataset, batch_size=cfg.batch_size, shuffle=False, drop_last=False, num_workers=cfg.num_workers, pin_memory=True)
torch.utils.data.DataLoader(test_dataset_untarget, batch_size=1, shuffle=False, drop_last=False, num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(test_dataset_all, batch_size=1, shuffle=False, drop_last=False, num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(test_dataset, 1, shuffle=True, drop_last=True, num_workers=8, pin_memory=True)
DataLoader(testset, batch_size=args.batchSize,
                         shuffle=False, num_workers=0,
                         pin_memory=True, drop_last=False)
DataLoader(attack_testset, batch_size=args.batchSize,
                                shuffle=False, num_workers=0,
                                pin_memory=True, drop_last=False)
DataLoader(trainset, batch_size=args.batch_size,
                          shuffle=True, num_workers=8,
                          pin_memory=True, drop_last=True)
DataLoader(testset, batch_size=args.batch_size * 2,
                         shuffle=False, num_workers=8,
                         pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
        attack_testset,
        batch_size=opt.batchSize,
        shuffle=True,
        num_workers=int(opt.workers))
DataLoader(trainset, batch_size=args.batch_size,
                          shuffle=True, num_workers=8,
                          pin_memory=True, drop_last=True)
DataLoader(testset, batch_size=args.batch_size * 2,
                         shuffle=False, num_workers=8,
                         pin_memory=True, drop_last=False)
DataLoader(test_set, batch_size=args.batch_size,
                             shuffle=False, num_workers=4,
                             pin_memory=True, drop_last=False,
                             )
DataLoader(test_dataset, batch_size=cfg.batch_size,
                             shuffle=False, num_workers=0,
                             pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(TEST_DATASET, batch_size=para['batch_size'],
                             shuffle=False, num_workers=0,
                             pin_memory=True, drop_last=False)
DataLoader(test_set, batch_size=args.batch_size,
                             shuffle=False, num_workers=0,
                             pin_memory=True, drop_last=False)
DataLoader(test_set, batch_size=args.batch_size,
                             shuffle=False, num_workers=0,
                             pin_memory=True, drop_last=False)
DataLoader(test_set, batch_size=args.batch_size,
                             shuffle=False, num_workers=4,
                             pin_memory=True, drop_last=False,
                             )
DataLoader(test_set, batch_size=args.batch_size,
                             shuffle=False, num_workers=4,
                             pin_memory=True, drop_last=False)
DataLoader(test_set, batch_size=args.batch_size,
                             shuffle=False, num_workers=0,
                             pin_memory=True, drop_last=False,
                             sampler=None)
DataLoader(test_set, batch_size=args.batch_size,
                             shuffle=False, num_workers=0,
                             pin_memory=True, drop_last=False,
                             sampler=None)
DataLoader(test_set, batch_size=args.batch_size,
                             shuffle=False, num_workers=0,
                             pin_memory=True, drop_last=False,
                             sampler=None)
torch.utils.data.DataLoader(data, batch_size=12, shuffle=True)
torch.utils.data.DataLoader(TRAIN_DATASET, batch_size=args.batch_size, shuffle=True,
                                               num_workers=4, drop_last=True)
torch.utils.data.DataLoader(TEST_DATASET, batch_size=args.batch_size, shuffle=False,
                                              num_workers=4, drop_last=False)
torch.utils.data.DataLoader(TRAIN_DATASET, batch_size=args.batch_size, shuffle=True,
                                               num_workers=4, drop_last=True)
torch.utils.data.DataLoader(TEST_DATASET, batch_size=args.batch_size, shuffle=False,
                                              num_workers=4, drop_last=False)
torch.utils.data.DataLoader(data, batch_size=12, shuffle=True)
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/AT/adversarial_training.py#L257
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/AT/adversarial_training.py#L260
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/AT/adversarial_training.py#L264
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/inference.py#L220
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/train.py#L221
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/train.py#L226
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/Advpc/latent_3d_points/src/ae_train.py#L166
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/Advpc/latent_3d_points/src/ae_train.py#L167
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/GAO/defense.py#L63
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/GAO/main_attack.py#L120
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/GAO/main_attack.py#L125
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/GAO/Attacker/geoA3_attack.py#L453
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/GAO/Attacker/geoA3_attack.py#L458
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/GAO/Provider/modelnet10_instance250.py#L134
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/GAO/Provider/modelnet10_instance250.py#L137
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/GAO/Provider/save_ori_obj.py#L87
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/PCBA/attack_evaluation.py#L43
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/PCBA/attack_evaluation.py#L57
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/PCBA/train_attacked.py#L48
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/PCBA/train_attacked.py#L54
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/PCBA/train_attacked.py#L83
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/PCBA/train_surrogate.py#L48
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack/PCBA/train_surrogate.py#L54
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack_scripts/AOF.py#L356
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack_scripts/GAO.py#L117
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack_scripts/L3A_attack.py#L182
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack_scripts/SIA.py#L68
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack_scripts/untargeted_add_attack.py#L188
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack_scripts/untargeted_advpc_attack.py#L184
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack_scripts/untargeted_drop_attack.py#L142
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack_scripts/untargeted_fgm_attack.py#L205
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack_scripts/untargeted_knn_attack.py#L170
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/attack_scripts/untargeted_perturb_attack.py#L175
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/baselines/dataset/ModelNetDataLoader.py#L172
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/pointcutmix/train_pointcutmix_k.py#L228
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/pointcutmix/train_pointcutmix_k.py#L230
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/pointcutmix/train_pointcutmix_r.py#L222
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/pointcutmix/train_pointcutmix_r.py#L224
https://github.com/qiufan319/benchmark_pc_attack/blob/176ef710706784d538939aaac7cc613a85468c97/pointcutmix/data_utils/ModelNetDataLoader.py#L100

========================================
https://github.com/CGCL-codes/AdvEncoder
========================================

Found 2 times
DataLoader(train_dataset, batch_size=bs, num_workers=5, drop_last=False, shuffle=True)
DataLoader(test_dataset, batch_size=bs, num_workers=5, drop_last=False, shuffle = False)
https://github.com/CGCL-codes/AdvEncoder/blob/3dd1c4e8076ec619edd771a12a1a56c61296a73e/utils/load_data.py#L24
https://github.com/CGCL-codes/AdvEncoder/blob/3dd1c4e8076ec619edd771a12a1a56c61296a73e/utils/load_data.py#L25

====================================
https://github.com/suzhigangssz/AVIH
====================================

Found 1 times
torch.utils.data.DataLoader(dataset, batch_size=opt.batch_size, shuffle=True)
https://github.com/suzhigangssz/AVIH/blob/1151cfd3fd8d8f9222d775afe3eb79fcf459df28/main.py#L55

=================================
https://github.com/meet-cjli/CTRL
=================================

Found 8 times
DataLoader(TensorDataset(x_train_tensor, y_train_tensor, train_index), batch_size=self.args.batch_size, sampler=train_sampler, shuffle= (train_sampler is None), drop_last=True)
DataLoader(TensorDataset(x_test_tensor, y_test_tensor, test_index), batch_size=self.args.eval_batch_size, shuffle=False, drop_last=True)
DataLoader(TensorDataset(x_test_pos_tensor, y_test_pos_tensor, test_index), batch_size=self.args.eval_batch_size, shuffle=False)
DataLoader(TensorDataset(x_memory_tensor, y_memory_tensor, memory_index), batch_size=self.args.eval_batch_size, shuffle=False)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.num_workers, pin_memory=True, sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(
        ft_dataset, batch_size=args.eval_batch_size, shuffle=(ft_sampler is None),
        num_workers=args.num_workers, pin_memory=True, sampler=ft_sampler)
torch.utils.data.DataLoader(
        test_dataset, args.eval_batch_size, shuffle=False,
        num_workers=args.num_workers, pin_memory=True, drop_last=True, sampler=None)
torch.utils.data.DataLoader(
        memory_dataset, args.eval_batch_size, shuffle=False,
        num_workers=args.num_workers, pin_memory=True)
https://github.com/meet-cjli/CTRL/blob/e3d26f035a65a7aeddebfe27982e2dca9d7cf2c0/loaders/diffaugment.py#L125
https://github.com/meet-cjli/CTRL/blob/e3d26f035a65a7aeddebfe27982e2dca9d7cf2c0/loaders/diffaugment.py#L126
https://github.com/meet-cjli/CTRL/blob/e3d26f035a65a7aeddebfe27982e2dca9d7cf2c0/loaders/diffaugment.py#L127
https://github.com/meet-cjli/CTRL/blob/e3d26f035a65a7aeddebfe27982e2dca9d7cf2c0/loaders/diffaugment.py#L128
https://github.com/meet-cjli/CTRL/blob/e3d26f035a65a7aeddebfe27982e2dca9d7cf2c0/loaders/diffaugment.py#L278
https://github.com/meet-cjli/CTRL/blob/e3d26f035a65a7aeddebfe27982e2dca9d7cf2c0/loaders/diffaugment.py#L282
https://github.com/meet-cjli/CTRL/blob/e3d26f035a65a7aeddebfe27982e2dca9d7cf2c0/loaders/diffaugment.py#L289
https://github.com/meet-cjli/CTRL/blob/e3d26f035a65a7aeddebfe27982e2dca9d7cf2c0/loaders/diffaugment.py#L293

============================================================================================
https://github.com/retsuh-bqw/ICCV23-Towards-Building-More-Robust-Models-with-Frequency-Bias
============================================================================================

Found 1 times
torch.utils.data.DataLoader(self.dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers)
https://github.com/retsuh-bqw/ICCV23-Towards-Building-More-Robust-Models-with-Frequency-Bias/blob/d42e6e6cb56cf7856f4ae5164cc187788081fc26/dataset.py#L66

========================================
https://github.com/microsoft/robustlearn
========================================

Found 36 times
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(
                train_dataset, batch_size=batch_size, sampler=train_sampler, shuffle=True,
                num_workers=8, worker_init_fn=seed_worker, generator=g
            )
torch.utils.data.DataLoader(
                valid_dataset, batch_size=batch_size, sampler=valid_sampler,
                num_workers=8, worker_init_fn=seed_worker, generator=g
            )
torch.utils.data.DataLoader(
                train_dataset, batch_size=batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(
            testset, batch_size=batch_size, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(
                train_dataset, batch_size=batch_size, sampler=train_sampler, shuffle=True,
                num_workers=8, worker_init_fn=seed_worker, generator=g
            )
torch.utils.data.DataLoader(
                valid_dataset, batch_size=batch_size, sampler=valid_sampler,
                num_workers=8, worker_init_fn=seed_worker, generator=g
            )
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(train_dataset, batch_size=128, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(generate_adv_dataset(args, deepcopy(model)), batch_size=512, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, num_workers=8)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, num_workers=8)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler)
        )
DataLoader(
        dataset=val_raw_dataset,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        drop_last=False,
        shuffle=False)
DataLoader(
        dataset=val_aug_dataset,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        drop_last=False,
        shuffle=False)
DataLoader(
        dataset=test_raw_dataset,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        drop_last=False,
        shuffle=False)
DataLoader(
        dataset=test_aug_dataset,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        drop_last=False,
        shuffle=False)
DataLoader(dataset=tr, batch_size=args.batch_size,
                              num_workers=args.N_WORKERS, drop_last=False, shuffle=True)
DataLoader(
        dataset=tr, batch_size=args.batch_size, num_workers=args.N_WORKERS, drop_last=False, shuffle=False)
DataLoader(dataset=val, batch_size=args.batch_size,
                              num_workers=args.N_WORKERS, drop_last=False, shuffle=False)
DataLoader(dataset=tar, batch_size=args.batch_size,
                               num_workers=args.N_WORKERS, drop_last=False, shuffle=False)
torch.utils.data.DataLoader(
                data, batch_size=args.batch, shuffle=False)
torch.utils.data.DataLoader(
                trl[-1], batch_size=args.batch, shuffle=True)
torch.utils.data.DataLoader(
                val[-1], batch_size=args.batch, shuffle=False)
torch.utils.data.DataLoader(
                tel[-1], batch_size=args.batch, shuffle=False)
DataLoader(dataset=set_,
                           batch_sampler=sampler_dic['sampler'](set_, **sampler_dic['params']),
                           num_workers=num_workers)
DataLoader(dataset=set_, batch_size=batch_size, shuffle=False,
                           sampler=sampler_dic['sampler'](set_, **sampler_dic['params']),
                           num_workers=num_workers)
DataLoader(dataset=set_, batch_size=batch_size,
                          shuffle=shuffle, num_workers=num_workers)
DataLoader(
        dataset=env,
        batch_size=64,
        num_workers=args.N_WORKERS,
        drop_last=False,
        shuffle=False)
DataLoader(
        dataset=env,
        batch_size=64,
        num_workers=args.N_WORKERS,
        drop_last=False,
        shuffle=False)
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler)
        )
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/dataloader.py#L285
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/dataloader.py#L287
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/dataloader.py#L317
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/dataloader.py#L321
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/dataloader.py#L326
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/dataloader.py#L332
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/dataloader.py#L366
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/dataloader.py#L370
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/dataloader.py#L376
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/dataloader.py#L381
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/main.py#L34
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/main.py#L58
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/utils.py#L72
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/utils.py#L104
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/utils.py#L161
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/utils.py#L212
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/RiFT/utils.py#L293
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/ddlearn/data_util/fast_data_loader.py#L39
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/ddlearn/data_util/get_dataloader.py#L51
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/ddlearn/data_util/get_dataloader.py#L58
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/ddlearn/data_util/get_dataloader.py#L65
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/ddlearn/data_util/get_dataloader.py#L72
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/diversify/datautil/getdataloader_single.py#L17
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/diversify/datautil/getdataloader_single.py#L19
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/diversify/datautil/getdataloader_single.py#L21
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/diversify/datautil/getdataloader_single.py#L23
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/fedclip/utils/prepare_data_dg_clip.py#L75
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/fedclip/utils/prepare_data_dg_clip.py#L90
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/fedclip/utils/prepare_data_dg_clip.py#L92
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/fedclip/utils/prepare_data_dg_clip.py#L94
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/marc/data/dataloader.py#L152
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/marc/data/dataloader.py#L160
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/marc/data/dataloader.py#L166
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/sdmix/datautil/getdataloader.py#L34
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/sdmix/datautil/getdataloader.py#L42
https://github.com/microsoft/robustlearn/blob/4d17ca0c08b0273f42e8e71c6e08481b6c2289ae/sdmix/datautil/mydataloader.py#L36

=============================================================
https://github.com/liuxuannan/Stochastic-Gradient-Aggregation
=============================================================

Found 3 times
torch.utils.data.DataLoader(X,batch_size=batch_size,shuffle=True,num_workers=0)
torch.utils.data.DataLoader(X,batch_size=100,shuffle=True,num_workers=0)
torch.utils.data.DataLoader(
        val_dataset,
        batch_size = batch_size,                              
        shuffle = False,
        num_workers = 0
    )
https://github.com/liuxuannan/Stochastic-Gradient-Aggregation/blob/b326bead877a5f9eeaa1e309408aafa83443cd0c/imagenet_attack.py#L26
https://github.com/liuxuannan/Stochastic-Gradient-Aggregation/blob/b326bead877a5f9eeaa1e309408aafa83443cd0c/imagenet_attack.py#L27
https://github.com/liuxuannan/Stochastic-Gradient-Aggregation/blob/b326bead877a5f9eeaa1e309408aafa83443cd0c/utils.py#L82

===============================================
https://github.com/kcshum/neural_360_decoration
===============================================

Found 9 times
torch.utils.data.DataLoader(dataset, batch_size=shed.minibatch, shuffle=True, num_workers=4)
DataLoader(self.data[split], **self.dataloader)
DataLoader(self.bgdata[split], **self.dataloader)
DataLoader(self.data[split], **self.dataloader)
DataLoader(self.bgdata[split], **self.dataloader)
DataLoader(self.data[split], **self.dataloader)
DataLoader(self.edgedata[split], **self.dataloader)
DataLoader(self.data[split], **self.dataloader)
DataLoader(NullIterableDataset(size), **self.dataloader)
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/scripts/style-gan-pytorch/train.py#L196
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/data/imagefolder.py#L68
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/data/inandoutimagefolder.py#L98
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/data/inandoutimagefolder.py#L98
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/data/inandoutlayoutimagefolder.py#L118
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/data/inandoutlayoutimagefolder.py#L118
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/data/inandoutlayoutimagefolder.py#L118
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/data/multiimagefolder.py#L59
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/data/nodata.py#L45

==================================
https://github.com/CHENBIN99/AdaEA
==================================

Found 3 times
torch.utils.data.DataLoader(test_set, batch_size=args.batch_size, shuffle=False, pin_memory=True,
                                                  num_workers=args.num_worker)
torch.utils.data.DataLoader(test_set, batch_size=args.batch_size, shuffle=False, pin_memory=True,
                                                  num_workers=args.num_worker)
torch.utils.data.DataLoader(test_set, batch_size=args.batch_size, shuffle=False, pin_memory=True,
                                                  num_workers=args.num_worker)
https://github.com/CHENBIN99/AdaEA/blob/416b1128bfa4672c3a317945c3eb8fc34071abc3/utils/get_dataset.py#L14
https://github.com/CHENBIN99/AdaEA/blob/416b1128bfa4672c3a317945c3eb8fc34071abc3/utils/get_dataset.py#L24
https://github.com/CHENBIN99/AdaEA/blob/416b1128bfa4672c3a317945c3eb8fc34071abc3/utils/get_dataset.py#L34

==============================
https://github.com/wpy1999/SAT
==============================

Found 5 times
torch.utils.data.DataLoader(dataset=ValData, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(dataset=ValData, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(dataset=TrainData, batch_size=args.batch_size,shuffle=True, num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(dataset=ValData, batch_size=128,shuffle=False, num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(dataset=TrainData, batch_size=args.batch_size,sampler=train_sampler,
                     num_workers=args.num_workers, pin_memory=True, drop_last=True)
https://github.com/wpy1999/SAT/blob/702290d7a29197920e115581cfc02ebe1ed528c8/evaluator.py#L163
https://github.com/wpy1999/SAT/blob/702290d7a29197920e115581cfc02ebe1ed528c8/evaluator_ImageNet.py#L162
https://github.com/wpy1999/SAT/blob/702290d7a29197920e115581cfc02ebe1ed528c8/train.py#L109
https://github.com/wpy1999/SAT/blob/702290d7a29197920e115581cfc02ebe1ed528c8/train.py#L110
https://github.com/wpy1999/SAT/blob/702290d7a29197920e115581cfc02ebe1ed528c8/train_ImageNet.py#L105

=========================================
https://github.com/RollinDing/VertexSerum
=========================================

Found 2 times
torch.utils.data.DataLoader(train_set, batch_size=batchsize, shuffle=True)
torch.utils.data.DataLoader(test_set, batch_size=testbatch, shuffle=False)
https://github.com/RollinDing/VertexSerum/blob/c7e44e22713192107317fe3cbbd92ad8f2985de2/src/attacks/evaluate.py#L223
https://github.com/RollinDing/VertexSerum/blob/c7e44e22713192107317fe3cbbd92ad8f2985de2/src/attacks/evaluate.py#L227

=====================================================
https://github.com/t-maho/transferability_measure_fit
=====================================================

Found 1 times
DataLoader(dataset, batch_size=self.batch_size, shuffle=False)
https://github.com/t-maho/transferability_measure_fit/blob/a15167f9590b32051dae1c042553aac4200ecf49/fit/fit.py#L217

==================================
https://github.com/dyoony/SRST_AWR
==================================

Found 17 times
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False, num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(lb_dataset, batch_size=args.lb_batch_size, shuffle=True, num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(ulb_dataset, batch_size=args.ul_batch_size, shuffle=True, num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(test_dataset, batch_size=args.ul_batch_size, shuffle=False, num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(lb_dataset, batch_size=args.lb_batch_size, shuffle=True, num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(ulb_dataset, batch_size=args.ul_batch_size, shuffle=True, num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(lb_dataset, batch_size=args.lb_batch_size, shuffle=True, num_workers=0, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(ulb_dataset, batch_size=args.ul_batch_size, shuffle=True, num_workers=0, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(test_dataset, batch_size=args.ul_batch_size, shuffle=False, num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size, shuffle=shuffle_train, 
                                                   num_workers=num_workers, pin_memory=pin_memory)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size_test, shuffle=False, 
                                                  num_workers=num_workers, pin_memory=pin_memory)
torch.utils.data.DataLoader(val_dataset, batch_size=batch_size_test, shuffle=False, 
                                                         num_workers=num_workers, pin_memory=pin_memory)
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size, shuffle=shuffle_train, 
                                                   num_workers=num_workers, pin_memory=pin_memory)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size_test, shuffle=False, 
                                                  num_workers=num_workers, pin_memory=pin_memory)
torch.utils.data.DataLoader(val_dataset, batch_size=batch_size_test, shuffle=False, 
                                                         num_workers=num_workers, pin_memory=pin_memory)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/eval.py#L108
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/main.py#L213
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/main.py#L214
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/main.py#L218
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/train_teacher.py#L176
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/train_teacher.py#L177
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/train_teacher.py#L179
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/train_teacher.py#L180
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/train_teacher.py#L252
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/load_data/datasets.py#L57
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/load_data/datasets.py#L59
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/load_data/datasets.py#L62
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/load_data/.ipynb_checkpoints/datasets-checkpoint.py#L57
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/load_data/.ipynb_checkpoints/datasets-checkpoint.py#L59
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/load_data/.ipynb_checkpoints/datasets-checkpoint.py#L62
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/utils/misc.py#L23
https://github.com/dyoony/SRST_AWR/blob/a95734ad0d8fa0a0b7f42228c58eea8af641a488/utils/.ipynb_checkpoints/misc-checkpoint.py#L23

=======================================================
https://github.com/LukasStruppek/Rickrolling-the-Artist
=======================================================

Found 4 times
DataLoader(dataset,
                            batch_size=config.clean_batch_size,
                            shuffle=True)
DataLoader(dataset,
                            batch_size=config.clean_batch_size,
                            shuffle=True)
DataLoader(dataset,
                            batch_size=config.clean_batch_size,
                            shuffle=True)
torch.utils.data.DataLoader(images,
                                         batch_size=128,
                                         num_workers=16)
https://github.com/LukasStruppek/Rickrolling-the-Artist/blob/25c14914b03d3806a2a3262e55b7bd314491081c/perform_TAA.py#L30
https://github.com/LukasStruppek/Rickrolling-the-Artist/blob/25c14914b03d3806a2a3262e55b7bd314491081c/perform_TPA.py#L30
https://github.com/LukasStruppek/Rickrolling-the-Artist/blob/25c14914b03d3806a2a3262e55b7bd314491081c/perform_concept_removal.py#L30
https://github.com/LukasStruppek/Rickrolling-the-Artist/blob/25c14914b03d3806a2a3262e55b7bd314491081c/metrics/imagenet_accuracy.py#L31

=========================================
https://github.com/luyg45/HardNoBoxAttack
=========================================

Found 3 times
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=True,
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
https://github.com/luyg45/HardNoBoxAttack/blob/f1e10fa147ccf24744e153275866e34f8bfd0c03/ARcal.py#L207
https://github.com/luyg45/HardNoBoxAttack/blob/f1e10fa147ccf24744e153275866e34f8bfd0c03/action_attackbyAR.py#L370
https://github.com/luyg45/HardNoBoxAttack/blob/f1e10fa147ccf24744e153275866e34f8bfd0c03/main_moco_inter_skeleton.py#L162

========================================================
https://github.com/damianliumin/non-adversarial_backdoor
========================================================

Found 11 times
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(testset_attack, batch_size=100, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(testset_clean, batch_size=100, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(dataset, batch_size=100, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(clean_dataset, batch_size=100, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(testset_clean, batch_size=100, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(trainset_pseudo, batch_size=100, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(testset_attack, batch_size=100, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(testset_clean, batch_size=100, shuffle=False, num_workers=8)
https://github.com/damianliumin/non-adversarial_backdoor/blob/1452a1cb9dd1d39c6c6c5a76f9b68b4b034a7a1c/backdoor_detection_lga.py#L29
https://github.com/damianliumin/non-adversarial_backdoor/blob/1452a1cb9dd1d39c6c6c5a76f9b68b4b034a7a1c/backdoor_detection_lga.py#L30
https://github.com/damianliumin/non-adversarial_backdoor/blob/1452a1cb9dd1d39c6c6c5a76f9b68b4b034a7a1c/backdoor_detection_lga.py#L31
https://github.com/damianliumin/non-adversarial_backdoor/blob/1452a1cb9dd1d39c6c6c5a76f9b68b4b034a7a1c/evaluate_filter.py#L77
https://github.com/damianliumin/non-adversarial_backdoor/blob/1452a1cb9dd1d39c6c6c5a76f9b68b4b034a7a1c/evaluate_filter.py#L80
https://github.com/damianliumin/non-adversarial_backdoor/blob/1452a1cb9dd1d39c6c6c5a76f9b68b4b034a7a1c/pseudo_label_vd.py#L34
https://github.com/damianliumin/non-adversarial_backdoor/blob/1452a1cb9dd1d39c6c6c5a76f9b68b4b034a7a1c/pseudo_label_vd.py#L35
https://github.com/damianliumin/non-adversarial_backdoor/blob/1452a1cb9dd1d39c6c6c5a76f9b68b4b034a7a1c/pseudo_label_vd.py#L36
https://github.com/damianliumin/non-adversarial_backdoor/blob/1452a1cb9dd1d39c6c6c5a76f9b68b4b034a7a1c/train_nab.py#L37
https://github.com/damianliumin/non-adversarial_backdoor/blob/1452a1cb9dd1d39c6c6c5a76f9b68b4b034a7a1c/train_nab.py#L38
https://github.com/damianliumin/non-adversarial_backdoor/blob/1452a1cb9dd1d39c6c6c5a76f9b68b4b034a7a1c/train_nab.py#L39

==============================================
https://github.com/wagner-group/reap-benchmark
==============================================

Found 4 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=(sampler is None),
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=(split == "train"),
    )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        pin_memory=pin_memory,
        collate_fn=build.trivial_batch_collator
        if collate_fn is None
        else collate_fn,
    )
torch.utils.data.DataLoader(
        dataset, batch_size=bs, shuffle=False, num_workers=8, pin_memory=True
    )
torch.utils.data.DataLoader(
        dataset, batch_size=bs, shuffle=False, num_workers=8, pin_memory=True
    )
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/adv_patch_bench/dataloaders/mtsd_mapillary.py#L42
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/adv_patch_bench/dataloaders/detectron/custom_build.py#L91
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/scripts_gen_reap/example_transforms_get_missed_alpha_betas.py#L514
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/scripts_gen_reap/fix_use_polygon_transforms.py#L564

====================================================================
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL
====================================================================

Found 51 times
torch.utils.data.DataLoader(dataset=train_dataset, 
                                           batch_size=batch_size, 
                                           shuffle=True)
torch.utils.data.DataLoader(dataset=test_dataset, 
                                          batch_size=batch_size, 
                                          shuffle=False)
torch.utils.data.DataLoader(dataset=train_dataset, 
                                           batch_size=batch_size, 
                                           shuffle=True)
torch.utils.data.DataLoader(train_dataset,
        batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(test_dataset
        ,
        batch_size=args.test_batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(poisoned_emnist_dataset,
         batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(emnist_train_dataset,
         batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(emnist_test_dataset,
         batch_size=args.test_batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(fashion_mnist_test_dataset,
         batch_size=args.test_batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(grayscale_trainset, batch_size=128, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=128, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=100, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(grayscale_testset, batch_size=100, shuffle=False, num_workers=2)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False)
torch.utils.data.DataLoader(poisoned_dataset,
                                                            batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(emnist_test_dataset,
                                                          batch_size=args.test_batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(fashion_mnist_test_dataset,
                                                                 batch_size=args.test_batch_size, shuffle=False,
                                                                 **kwargs)
torch.utils.data.DataLoader(emnist_train_dataset,
                                                         batch_size=args.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(ardis_test_dataset,
                                                                     batch_size=args.test_batch_size, shuffle=False,
                                                                     **kwargs)
torch.utils.data.DataLoader(poisoned_trainset, batch_size=args.batch_size,
                                                                shuffle=True)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=True)
torch.utils.data.DataLoader(clean_trainset, batch_size=args.batch_size, shuffle=True)
torch.utils.data.DataLoader(testset, batch_size=args.test_batch_size, shuffle=False)
torch.utils.data.DataLoader(poisoned_testset, batch_size=args.test_batch_size,
                                                                     shuffle=False)
torch.utils.data.DataLoader(poisoned_trainset, batch_size=args.batch_size,
                                                                shuffle=True)
torch.utils.data.DataLoader(clean_trainset, batch_size=args.batch_size, shuffle=True)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=True)
torch.utils.data.DataLoader(testset, batch_size=args.test_batch_size, shuffle=False)
torch.utils.data.DataLoader(poisoned_testset, batch_size=args.test_batch_size,
                                                                     shuffle=False)
torch.utils.data.DataLoader(poisoned_trainset, batch_size=args.batch_size,
                                                                shuffle=True)
torch.utils.data.DataLoader(clean_trainset, batch_size=args.batch_size, shuffle=True)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=True)
torch.utils.data.DataLoader(testset, batch_size=args.test_batch_size, shuffle=False)
torch.utils.data.DataLoader(poisoned_testset, batch_size=args.test_batch_size,
                                                                     shuffle=False)
torch.utils.data.DataLoader(poisoned_trainset, batch_size=args.batch_size,
                                                                shuffle=True)
torch.utils.data.DataLoader(clean_trainset, batch_size=args.batch_size, shuffle=True)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=True)
torch.utils.data.DataLoader(testset, batch_size=args.test_batch_size, shuffle=False)
torch.utils.data.DataLoader(poisoned_testset, batch_size=args.test_batch_size,
                                                                     shuffle=False)
torch.utils.data.DataLoader(poisoned_trainset, batch_size=128, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=128, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=100, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(poisoned_testset, batch_size=50, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(checking_trainset, batch_size=128, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(poisoned_trainset, batch_size=128, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=128, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=100, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(poisoned_testset, batch_size=50, shuffle=False, num_workers=2)
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/full_rank_test.py#L28
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/full_rank_test.py#L32
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/full_rank_test.py#L113
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/main.py#L139
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/main.py#L141
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/main_resume.py#L240
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/main_resume.py#L243
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/main_resume.py#L246
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/main_resume.py#L248
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/simulated_averaging_wb.py#L241
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/simulated_averaging_wb.py#L242
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/simulated_averaging_wb.py#L256
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/simulated_averaging_wb.py#L257
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L286
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L287
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L355
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L356
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L396
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L398
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L400
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L403
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L411
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L498
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L500
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L501
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L511
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L512
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L625
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L627
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L628
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L636
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L637
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L704
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L706
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L707
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L715
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L716
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L792
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L794
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L795
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L803
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/utils.py#L804
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/saved_datasets/main.py#L81
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/saved_datasets/main.py#L82
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/saved_datasets/main.py#L89
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/saved_datasets/main.py#L90
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/saved_datasets/main_test.py#L120
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/saved_datasets/main_test.py#L129
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/saved_datasets/main_test.py#L130
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/saved_datasets/main_test.py#L137
https://github.com/siquanhuang/Multi-metrics_against_backdoors_in_FL/blob/ed02e901eb206a1e9209902638ce0a6362a67594/saved_datasets/main_test.py#L138

================================
https://github.com/jianshuod/TBA
================================

Found 3 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=workers,
        pin_memory=pin_memory,
        sampler=None
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=workers,
        pin_memory=pin_memory
    )
torch.utils.data.DataLoader(
        dataset=val_set,
        batch_size=256, shuffle=False, pin_memory=True)
https://github.com/jianshuod/TBA/blob/2e1464e0d83fe57c17ef23486ed15144b72854bc/utils/dataloader.py#L36
https://github.com/jianshuod/TBA/blob/2e1464e0d83fe57c17ef23486ed15144b72854bc/utils/dataloader.py#L44
https://github.com/jianshuod/TBA/blob/2e1464e0d83fe57c17ef23486ed15144b72854bc/utils/utils.py#L169

========================================
https://github.com/FAT-CS/ConvergeSmooth
========================================

Found 6 times
torch.utils.data.DataLoader(
        dataset=train_dataset,
        batch_size=batch_size,
        shuffle=True,
        pin_memory=True,
        num_workers=num_workers,
    )
torch.utils.data.DataLoader(
        dataset=test_dataset,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=num_workers,
    )
torch.utils.data.DataLoader(
        dataset=train_dataset,
        batch_size=50000,
        shuffle=True,
        pin_memory=True,
        num_workers=num_workers,
    )
torch.utils.data.DataLoader(
        dataset=test_dataset,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=num_workers,
    )
torch.utils.data.DataLoader(
        dataset=train_dataset,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=num_workers,
    )
torch.utils.data.DataLoader(
        dataset=test_dataset,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=num_workers,
    )
https://github.com/FAT-CS/ConvergeSmooth/blob/d94f6bcef0417fcb25a9bcb67d491a095e9d1419/utils.py#L35
https://github.com/FAT-CS/ConvergeSmooth/blob/d94f6bcef0417fcb25a9bcb67d491a095e9d1419/utils.py#L42
https://github.com/FAT-CS/ConvergeSmooth/blob/d94f6bcef0417fcb25a9bcb67d491a095e9d1419/utils.py#L66
https://github.com/FAT-CS/ConvergeSmooth/blob/d94f6bcef0417fcb25a9bcb67d491a095e9d1419/utils.py#L73
https://github.com/FAT-CS/ConvergeSmooth/blob/d94f6bcef0417fcb25a9bcb67d491a095e9d1419/utils.py#L98
https://github.com/FAT-CS/ConvergeSmooth/blob/d94f6bcef0417fcb25a9bcb67d491a095e9d1419/utils.py#L105

=========================================
https://github.com/RandolphCarter0/TRMUAP
=========================================

Found 3 times
DataLoader(val_dataset, batch_size=batch_size, shuffle=shuffle,
                                   num_workers=0)
DataLoader(train_dataset, batch_size=batch_size, shuffle=shuffle,
                                   num_workers=0)
DataLoader(test_dataset, batch_size=batch_size, shuffle=shuffle,
                                  num_workers=0)
https://github.com/RandolphCarter0/TRMUAP/blob/4306b58662e0291c87b3548b4a501371265c4243/functions.py#L102
https://github.com/RandolphCarter0/TRMUAP/blob/4306b58662e0291c87b3548b4a501371265c4243/functions.py#L111
https://github.com/RandolphCarter0/TRMUAP/blob/4306b58662e0291c87b3548b4a501371265c4243/functions.py#L114

=======================================
https://github.com/BNU-IVC/FastPoseGait
=======================================

Found 1 times
tordata.DataLoader(
            dataset=dataset,
            batch_sampler=sampler,
            collate_fn=CollateFn(dataset.label_set, sampler_cfg),
            num_workers=data_cfg['num_workers'],
            pin_memory=True)
https://github.com/BNU-IVC/FastPoseGait/blob/8140f6714f2f47cb6a2d90afcdb777b8c6fd5857/fastposegait/modeling/base_model.py#L217

==========================================
https://github.com/liufeng2915/3DInvarReID
==========================================

Found 6 times
torch.utils.data.DataLoader(self.syn_dataset,
                                batch_size=int(self.opt.img_batch_size/self.opt.num_instances),
                                num_workers=self.opt.num_workers,
                                persistent_workers=self.opt.num_workers>0,
                                shuffle=True,
                                drop_last=True,
                                pin_memory=False)
torch.utils.data.DataLoader(self.real_train_dataset,
                                batch_size=int(self.opt.img_batch_size/self.opt.num_instances),
                                num_workers=self.opt.num_workers,
                                shuffle=True,
                                drop_last=True,
                                pin_memory=False)
torch.utils.data.DataLoader(self.real_gallery_dataset,
                                batch_size=128,
                                num_workers=self.opt.num_workers,
                                shuffle=False,
                                drop_last=False)
torch.utils.data.DataLoader(self.real_query_dataset,
                                batch_size=128,
                                num_workers=self.opt.num_workers,
                                shuffle=False,
                                drop_last=False)
torch.utils.data.DataLoader(self.dataset_train,
                                batch_size=self.opt.batch_size,
                                num_workers=self.opt.num_workers, 
                                persistent_workers=self.opt.num_workers>0,
                                shuffle=True,
                                drop_last=True,
                                pin_memory=False)
torch.utils.data.DataLoader(self.dataset_val,
                                batch_size=1,
                                num_workers=self.opt.num_workers, 
                                persistent_workers=self.opt.num_workers>0,
                                shuffle=True,
                                drop_last=False,
                                pin_memory=False)
https://github.com/liufeng2915/3DInvarReID/blob/8c4242a5d355aaee675dce8aae76565f18f203f1/matching/lib/dataset/MatchingDataset.py#L623
https://github.com/liufeng2915/3DInvarReID/blob/8c4242a5d355aaee675dce8aae76565f18f203f1/matching/lib/dataset/MatchingDataset.py#L630
https://github.com/liufeng2915/3DInvarReID/blob/8c4242a5d355aaee675dce8aae76565f18f203f1/matching/lib/dataset/MatchingDataset.py#L639
https://github.com/liufeng2915/3DInvarReID/blob/8c4242a5d355aaee675dce8aae76565f18f203f1/matching/lib/dataset/MatchingDataset.py#L644
https://github.com/liufeng2915/3DInvarReID/blob/8c4242a5d355aaee675dce8aae76565f18f203f1/pretrain/lib/dataset/datamodule.py#L110
https://github.com/liufeng2915/3DInvarReID/blob/8c4242a5d355aaee675dce8aae76565f18f203f1/pretrain/lib/dataset/datamodule.py#L120

=======================================
https://github.com/gudaochangsheng/HSTL
=======================================

Found 1 times
tordata.DataLoader(
            dataset=dataset,
            batch_sampler=sampler,
            collate_fn=CollateFn(dataset.label_set, sampler_cfg),
            num_workers=data_cfg['num_workers'])
https://github.com/gudaochangsheng/HSTL/blob/2325e0e4e08f50067fb1a7d8561f95ceb80a0eb5/lib/modeling/base_model.py#L179

====================================
https://github.com/fdbtrs/idiff-face
====================================

Found 6 times
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=bs, shuffle=False, drop_last=False)
DataLoader(dataset,
                                batch_size=cfg.training.batch_size, shuffle=True,
                                num_workers=cfg.training.num_workers, pin_memory=cfg.training.pin_memory)
DataLoader(dataset, batch_size=128, shuffle=True, num_workers=0)
DataLoader(
        dataset, batch_size=batch_size, shuffle=False, drop_last=False, num_workers=2
    )
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/create_nn_visualisation.py#L73
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/create_sample_identity_contexts.py#L58
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/extract_face_embeddings_from_dir.py#L120
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/main.py#L205
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/utils/compute_mean_and_std.py#L22
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/utils/alignment/mtcnn_align.py#L92

======================================
https://github.com/koushiksrivats/FLIP
======================================

Found 36 times
DataLoader(
      FASDataset(src1_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src1_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src2_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src2_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src3_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src3_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(tgt_test_data, train=False),
      batch_size=batch_size,
      shuffle=False)
DataLoader(
      FASDatasetSSLCLIP(src1_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src1_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src2_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src2_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src3_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src3_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src4_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src4_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src5_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src5_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(tgt_test_data, train=False),
      batch_size=batch_size,
      shuffle=False)
DataLoader(
      FASDatasetSSLCLIP(src1_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src1_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src2_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src2_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src3_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(src3_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDatasetSSLCLIP(tgt_test_data, train=False),
      batch_size=batch_size,
      shuffle=False)
DataLoader(
      FASDataset(src1_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src1_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src2_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src2_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src3_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src3_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src4_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src4_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src5_train_data_fake, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(src5_train_data_real, train=True),
      batch_size=batch_size,
      shuffle=True,
      drop_last=True)
DataLoader(
      FASDataset(tgt_test_data, train=False),
      batch_size=batch_size,
      shuffle=False)
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L209
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L214
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L219
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L224
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L229
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L234
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L241
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L292
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L297
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L302
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L307
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L312
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L317
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L322
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L327
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L332
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L337
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L344
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L386
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L391
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L396
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L401
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L406
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L411
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L418
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L469
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L474
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L479
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L484
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L489
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L494
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L499
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L504
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L509
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L514
https://github.com/koushiksrivats/FLIP/blob/946324aebbbbde0e88d40cb97b85afeca18ee209/utils/dataset.py#L521

====================================
https://github.com/sczhou/ProPainter
====================================

Found 3 times
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
DataLoader(test_dataset,
                             batch_size=1,
                             shuffle=False,
                             num_workers=args.num_workers)
DataLoader(test_dataset,
                             batch_size=1,
                             shuffle=False,
                             num_workers=args.num_workers)
https://github.com/sczhou/ProPainter/blob/a39d634423fa0158a3119515a231a4df6390c972/RAFT/datasets.py#L230
https://github.com/sczhou/ProPainter/blob/a39d634423fa0158a3119515a231a4df6390c972/scripts/evaluate_flow_completion.py#L60
https://github.com/sczhou/ProPainter/blob/a39d634423fa0158a3119515a231a4df6390c972/scripts/evaluate_propainter.py#L45

================================
https://github.com/Hedlen/MEFLUT
================================

Found 1 times
DataLoader(self.test_data,
                                      batch_size=self.test_batch_size,
                                      shuffle=False,
                                      pin_memory=True,
                                      num_workers=4)
https://github.com/Hedlen/MEFLUT/blob/64f065ab2ecd3ffa468045e45bf30daac2af13d2/test.py#L42

================================
https://github.com/Krito-ex/CSST
================================

Found 2 times
tud.DataLoader(Dataset, num_workers=8, batch_size=opt.batch_size, shuffle=True, pin_memory=False)
tud.DataLoader(Dataset, num_workers=4, batch_size=opt.batch_size, shuffle=True, pin_memory=True)
https://github.com/Krito-ex/CSST/blob/82603621bc4f17bb568169d0acb318f7c9b63687/Real/train_code/train_CSST_final.py#L68
https://github.com/Krito-ex/CSST/blob/82603621bc4f17bb568169d0acb318f7c9b63687/simulation/train_code/train_D_CSST.py#L55

========================================
https://github.com/pwangcs/DeepOpticsSCI
========================================

Found 3 times
DataLoader(test_data, shuffle=False, batch_size=1)
DataLoader(dataset=dataset, batch_size=args.batch_size,
                            sampler=dist_sampler, num_workers=args.num_workers)
DataLoader(dataset=dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers)
https://github.com/pwangcs/DeepOpticsSCI/blob/ce65c4566ac3e5ba533b8fd5db833647d5630935/test.py#L18
https://github.com/pwangcs/DeepOpticsSCI/blob/ce65c4566ac3e5ba533b8fd5db833647d5630935/train.py#L33
https://github.com/pwangcs/DeepOpticsSCI/blob/ce65c4566ac3e5ba533b8fd5db833647d5630935/train.py#L36

===============================
https://github.com/mdyao/CSNorm
===============================

Found 2 times
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=shuffle,
                                           num_workers=num_workers, sampler=sampler, drop_last=True,
                                           pin_memory=False)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=False, num_workers=6,
                                           pin_memory=False)
https://github.com/mdyao/CSNorm/blob/49bf5a07ac1c58c8d2c221ac86022698c7f1c897/data/__init__.py#L20
https://github.com/mdyao/CSNorm/blob/49bf5a07ac1c58c8d2c221ac86022698c7f1c897/data/__init__.py#L24

===============================
https://github.com/DelinQu/qrsc
===============================

Found 10 times
DataLoader(
        ACC(
            gs_dir,
            rsc_dir,
            seq_len=seq_len,
            data_aug=data_aug,
            training=training,
        ),
        **loader_args
    )
DataLoader(train_dataset, shuffle=(train_sampler is None and shuffle), sampler=train_sampler, **loader_args)
DataLoader(
            valid_dataset, shuffle=(valid_sampler is None and shuffle), sampler=valid_sampler, **loader_args
        )
DataLoader(
            BSRSC(
                test_dir,
                seq_len=seq_len,
                data_aug=data_aug,
                training=training,
            ),
            **loader_args
        )
DataLoader(
            train_dataset, shuffle=(train_sampler is None and shuffle), sampler=train_sampler, **loader_args
        )
DataLoader(valid_dataset, shuffle=(valid_sampler is None and shuffle), sampler=valid_sampler, **loader_args)
DataLoader(
            Carla(
                test_dir,
                seq_len=seq_len,
                load_mask=load_mask,
                data_aug=data_aug,
                training=training,
                load_middle_gs=load_middle_gs,
            ),
            **loader_args
        )
DataLoader(train_dataset, shuffle=(train_sampler is None and shuffle), sampler=train_sampler, **loader_args)
DataLoader(
            valid_dataset, shuffle=(valid_sampler is None and shuffle), sampler=valid_sampler, **loader_args
        )
DataLoader(Fastec(test_dir, seq_len=seq_len, data_aug=data_aug, training=training, load_middle_gs=load_middle_gs), **loader_args)
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/ACC_RSC.py#L70
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/BSRSC.py#L90
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/BSRSC.py#L90
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/BSRSC.py#L94
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/Carla.py#L176
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/Carla.py#L178
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/Carla.py#L180
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/Fastec.py#L125
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/Fastec.py#L125
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/Fastec.py#L129

==================================
https://github.com/saurabhya/FCCNs
==================================

Found 8 times
torch.utils.data.DataLoader(
            dataset= dataset, batch_size= batch_size, shuffle= True, pin_memory= True, num_workers= 4
            )
torch.utils.data.DataLoader(
        trainset, batch_size= batch_size, shuffle= True, num_workers= 8, pin_memory= False
        )
torch.utils.data.DataLoader(
        testset, batch_size= 64, shuffle= True, num_workers= 8, pin_memory= False
        )
torch.utils.data.DataLoader(dataset, batch_size= 1, shuffle= True, num_workers= 4)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=(train_sampler is None),
        num_workers=args.workers,
        pin_memory=True,
        sampler=train_sampler,
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers,
        pin_memory=True,
        sampler=val_sampler,
    )
torch.utils.data.DataLoader(
            aux_val_dataset,
            batch_size=args.batch_size,
            shuffle=False,
            num_workers=args.workers,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
        dataset, batch_size=1, shuffle=True, num_workers=4
    )
https://github.com/saurabhya/FCCNs/blob/23522deaf3ed2b021a63edcc2e633af2ab30d09e/main.py#L184
https://github.com/saurabhya/FCCNs/blob/23522deaf3ed2b021a63edcc2e633af2ab30d09e/train.py#L64
https://github.com/saurabhya/FCCNs/blob/23522deaf3ed2b021a63edcc2e633af2ab30d09e/train.py#L73
https://github.com/saurabhya/FCCNs/blob/23522deaf3ed2b021a63edcc2e633af2ab30d09e/utils.py#L285
https://github.com/saurabhya/FCCNs/blob/23522deaf3ed2b021a63edcc2e633af2ab30d09e/Imagenet/main.py#L340
https://github.com/saurabhya/FCCNs/blob/23522deaf3ed2b021a63edcc2e633af2ab30d09e/Imagenet/main.py#L349
https://github.com/saurabhya/FCCNs/blob/23522deaf3ed2b021a63edcc2e633af2ab30d09e/Imagenet/main.py#L508
https://github.com/saurabhya/FCCNs/blob/23522deaf3ed2b021a63edcc2e633af2ab30d09e/Imagenet/utils.py#L235

=======================================================
https://github.com/Yan98/Event-Camera-Data-Pre-training
=======================================================

Found 2 times
DataLoader(dataset, 
            batch_size=dataset_opt["batch_size"], num_workers=dataset_opt["num_workers"], drop_last=True, pin_memory=dataset_opt["pin_memory"], persistent_workers = dataset_opt["persistent_workers"], collate_fn = collate_fn, sampler = sampler)
DataLoader(dataset,
                batch_size=dataset_opt["batch_size"], num_workers=dataset_opt["num_workers"], drop_last=False, pin_memory= dataset_opt["pin_memory"],persistent_workers = dataset_opt["persistent_workers"], collate_fn = collate_fn, sampler = sampler)
https://github.com/Yan98/Event-Camera-Data-Pre-training/blob/0b71793bcd99de4c252cd944b22d77e3d945fd02/data/__init__.py#L66
https://github.com/Yan98/Event-Camera-Data-Pre-training/blob/0b71793bcd99de4c252cd944b22d77e3d945fd02/data/__init__.py#L81

===============================
https://github.com/XiangZ-0/GEM
===============================

Found 3 times
DataLoader(self.trainset, batch_size=self.batch_size, num_workers=self.num_workers, shuffle=True)
DataLoader(self.valset, batch_size=self.batch_size, num_workers=self.num_workers, shuffle=False)
DataLoader(self.testset, batch_size=self.batch_size, num_workers=self.num_workers, shuffle=False)
https://github.com/XiangZ-0/GEM/blob/53f88d2c1d74ad0bb530c7fb2ebeeb6cfc930342/codes/data/data_interface.py#L30
https://github.com/XiangZ-0/GEM/blob/53f88d2c1d74ad0bb530c7fb2ebeeb6cfc930342/codes/data/data_interface.py#L33
https://github.com/XiangZ-0/GEM/blob/53f88d2c1d74ad0bb530c7fb2ebeeb6cfc930342/codes/data/data_interface.py#L36

========================================
https://github.com/KangLiao929/RecRecNet
========================================

Found 2 times
DataLoader(dataset=test_data, batch_size=args.batch_size, num_workers=1, shuffle=False, drop_last=False)
DataLoader(dataset=TrainDataset(data_path=dataset[i]), batch_size=args.batch_size, 
                                                                num_workers=4, shuffle=True, drop_last=True)
https://github.com/KangLiao929/RecRecNet/blob/1d9424b1f77c0915c5b9ae24012c0d9f722a4671/test.py#L73
https://github.com/KangLiao929/RecRecNet/blob/1d9424b1f77c0915c5b9ae24012c0d9f722a4671/train.py#L40

===================================
https://github.com/fengzhang427/LRD
===================================

Found 5 times
torch.utils.data.DataLoader(eval_datasets[0], batch_size=1, shuffle=False, num_workers=8, pin_memory=True)
torch.utils.data.DataLoader(train_set, batch_size=opts.batch_size, shuffle=True, drop_last=True,
                                               num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(val_set, batch_size=1, shuffle=False, num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(train_set, batch_size=opts.batch_size, shuffle=True, drop_last=True,
                                               num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(val_set, batch_size=1, shuffle=False, num_workers=0, pin_memory=True)
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/test_denoise_ELD.py#L32
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/train_denoise_LRD.py#L118
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/train_denoise_LRD.py#L121
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/train_denoise_SID.py#L121
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/train_denoise_SID.py#L124

======================================================================
https://github.com/booker-max/Unsupervised-Deraining-with-Event-Camera
======================================================================

Found 2 times
DataLoader(dataset=train_dataset, batch_size=8, shuffle=(train_sampler is None), sampler=train_sampler, num_workers = 4, pin_memory = True)
DataLoader(dataset=val_dataset, batch_size=64, shuffle=False, num_workers = 4, pin_memory = True)
https://github.com/booker-max/Unsupervised-Deraining-with-Event-Camera/blob/5d19642e318f2ebe11130017ac4a5145235a3b09/trainer/trainer.py#L220
https://github.com/booker-max/Unsupervised-Deraining-with-Event-Camera/blob/5d19642e318f2ebe11130017ac4a5145235a3b09/trainer/trainer.py#L336

=====================================
https://github.com/yh-pengtu/FemtoDet
=====================================

Found 21 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/mmdet/datasets/builder.py#L181
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_data/test_datasets/test_common.py#L224
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L76
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L88
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L99
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L111
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L115
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L133
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L135
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L155
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L157
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L177
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L197
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L216
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_runtime/test_eval_hook.py#L236
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_utils/test_hook.py#L92
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_utils/test_hook.py#L190
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_utils/test_hook.py#L246
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_utils/test_hook.py#L268
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_utils/test_hook.py#L310
https://github.com/yh-pengtu/FemtoDet/blob/cfb67d3da6493491afd581bbaa926daeda284d49/tests/test_utils/test_hook.py#L347

===============================================================================
https://github.com/chenlicodebank/Dynamic-Confidence-in-Spiking-Neural-Networks
===============================================================================

Found 3 times
torch.utils.data.DataLoader(dataset=train_dataset,
                                           batch_size=batch_size_train,
                                           shuffle=True)
torch.utils.data.DataLoader(dataset=test_dataset,
                                          batch_size=batch_size_test,
                                          shuffle=False)
torch.utils.data.DataLoader(test_dataset,
                                               batch_size=batch_size,
                                               sampler=valid_sampler,
                                               num_workers=0)
https://github.com/chenlicodebank/Dynamic-Confidence-in-Spiking-Neural-Networks/blob/563974b9abc53d93f2eda969a4e1dddac7684ad1/main.py#L60
https://github.com/chenlicodebank/Dynamic-Confidence-in-Spiking-Neural-Networks/blob/563974b9abc53d93f2eda969a4e1dddac7684ad1/main.py#L63
https://github.com/chenlicodebank/Dynamic-Confidence-in-Spiking-Neural-Networks/blob/563974b9abc53d93f2eda969a4e1dddac7684ad1/main.py#L98

============================================
https://github.com/SilviaLauraPintea/reg-cls
============================================

Found 13 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=args.workers,
        pin_memory=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers,
        pin_memory=True,
    )
DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=args.workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        val_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
            test_dataset,
            batch_size=args.batch_size,
            shuffle=False,
            num_workers=args.workers,
            pin_memory=True,
            drop_last=False,
        )
DataLoader(
            val_dataset,
            batch_size=args.batch_size,
            shuffle=False,
            num_workers=args.workers,
            pin_memory=True,
            drop_last=False,
        )
DataLoader(
        transformed_training,
        batch_size,
        shuffle=is_train,
        num_workers=args.num_workers,
        pin_memory=False,
    )
DataLoader(
        transformed_training,
        batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=False,
    )
DataLoader(
        transformed_testing, batch_size, shuffle=False, num_workers=0, pin_memory=False
    )
DataLoader(
        train_dataset, 256, shuffle=False, num_workers=4, pin_memory=False
    )
DataLoader(
        test_dataset, 256, shuffle=False, num_workers=4, pin_memory=False
    )
torch.utils.data.DataLoader(
        dataset, batch_size=opt.batch_size, shuffle=shuffle, num_workers=opt.num_workers
    )
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/1d/train_eval.py#L75
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/1d/train_eval.py#L83
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/1d/train_eval.py#L90
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/images/imdb-wiki-dir/train_cls.py#L301
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/images/imdb-wiki-dir/train_cls.py#L309
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/images/imdb-wiki-dir/train_cls.py#L320
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/images/imdb-wiki-dir/train_cls.py#L329
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/images/nyud2-dir/loaddata.py#L622
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/images/nyud2-dir/loaddata.py#L654
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/images/nyud2-dir/loaddata.py#L686
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/images/nyud2-dir/preprocess_nyud2.py#L32
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/images/nyud2-dir/preprocess_nyud2.py#L51
https://github.com/SilviaLauraPintea/reg-cls/blob/696e2c5a9db8326e9528dc721d6407de4e7d3d4e/video/ute/models/dataset_loader.py#L365

====================================
https://github.com/vsd-benchmark/vsd
====================================

Found 2 times
DataLoader(query_dataset, batch_size=batch_size, num_workers=num_workers, shuffle=shuffle_test)
DataLoader(gallery_dataset, batch_size=batch_size, num_workers=num_workers, shuffle=shuffle_test)
https://github.com/vsd-benchmark/vsd/blob/c08e8d95b4c5b40005dcb15d7428d375a12a8b3a/dataset_utils/image_dataset.py#L261
https://github.com/vsd-benchmark/vsd/blob/c08e8d95b4c5b40005dcb15d7428d375a12a8b3a/dataset_utils/image_dataset.py#L262

===============================================
https://github.com/silicx/ObjectConceptLearning
===============================================

Found 2 times
DataLoader(dataset, batch_size=batchsize,
                          num_workers=num_workers, collate_fn=collation_function,
                          sampler=sampler)
DataLoader(dataset, batch_size=batchsize, shuffle=shuffle,
                          num_workers=num_workers, collate_fn=collation_function)
https://github.com/silicx/ObjectConceptLearning/blob/9d5b64d42443ae1100a861f6a292655acb872fa9/utils/dataset/__init__.py#L70
https://github.com/silicx/ObjectConceptLearning/blob/9d5b64d42443ae1100a861f6a292655acb872fa9/utils/dataset/__init__.py#L75

==========================================
https://github.com/eslambakr/HRS_benchmark
==========================================

Found 47 times
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        batch_sampler=None,
        collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
        worker_init_fn=worker_init_reset_seed,
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
torch.utils.data.DataLoader(
        CLIPCapDataset(captions),
        batch_size=batch_size, num_workers=num_workers, shuffle=False)
torch.utils.data.DataLoader(
        CLIPImageDataset(images),
        batch_size=batch_size, num_workers=num_workers, shuffle=False)
DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True,
                          num_workers=self.num_workers, persistent_workers=self.num_workers > 0,
                          pin_memory=True, collate_fn=self.collate_fn)
DataLoader(self.val_dataset, batch_size=self.batch_size,
                          num_workers=self.num_workers, persistent_workers=self.num_workers > 0,
                          pin_memory=True, collate_fn=self.collate_fn)
DataLoader(v, batch_size=self.batch_size, num_workers=self.num_workers,
                              pin_memory=True, collate_fn=self.collate_fn)
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size//world_size,
            num_workers=args.num_workers,
            pin_memory=True
            )
torch.utils.data.DataLoader(dataset,
                                              batch_sampler=batch_sampler,
                                              num_workers=args.num_workers,
                                              pin_memory=True)
DataLoader(ds, batch_size=BATCH_SIZE, shuffle=is_shuffle, drop_last=True, sampler=data_sampler)
DataLoader(ds, BATCH_SIZE, shuffle = not data_sampler, sampler=data_sampler)
DataLoader(TensorDataset(cool_captions_embeddings.repeat_interleave(n, dim=0)), batch_size=11)
DataLoader(dataset, batch_size=args.batch_size, num_workers=args.num_workers, collate_fn=collate)
DataLoader(dataset, batch_size=args.batch_size, num_workers=args.num_workers, collate_fn=collate)
DataLoader(dataset, batch_size=1, collate_fn=collate)
DataLoader(VideoDataset(video_transform=transforms, clip_len=num_frames, skip_frames=skip_frames), batch_size=1)
DataLoader(TensorDataset(cool_captions_embeddings.repeat_interleave(n, dim=0)), batch_size=1)
DataLoader(dataset, batch_size=args.batch_size, num_workers=args.num_workers, collate_fn=collate_first_stage)
DataLoader(dataset, batch_size=args.batch_size, collate_fn=collate_second_stage, num_workers=args.num_workers)
DataLoader(dataset, batch_size=args.batch_size, num_workers=args.num_workers)
DataLoader(dataset, batch_size=args.batch_size, collate_fn=collate_second_stage)
DataLoader(self.trainset,
                          batch_size=self.train_batch_size,
                          num_workers=self.num_workers,
                          pin_memory=True)
DataLoader(self.validset,
                          batch_size=self.valid_batch_size,
                          num_workers=self.num_workers,
                          pin_memory=True)
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/UniDet-master/unidet/data/multi_dataset_dataloader.py#L109
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/mmdet/datasets/builder.py#L195
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_data/test_datasets/test_common.py#L224
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L76
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L88
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L99
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L111
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L115
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L133
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L135
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L155
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L157
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L177
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L197
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L216
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_runtime/test_eval_hook.py#L236
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_utils/test_hook.py#L92
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_utils/test_hook.py#L190
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_utils/test_hook.py#L246
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_utils/test_hook.py#L268
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_utils/test_hook.py#L310
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/detection/mmdetection-master/tests/test_utils/test_hook.py#L347
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/emotion/clipscore_group.py#L108
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/emotion/clipscore_group.py#L121
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/writing/parseq-main/strhub/data/module.py#L90
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/writing/parseq-main/strhub/data/module.py#L95
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/eval_metrics/writing/parseq-main/strhub/data/module.py#L105
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/SwissArmyTransformer-main/SwissArmyTransformer/data_utils/configure_data.py#L37
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/SwissArmyTransformer-main/SwissArmyTransformer/data_utils/configure_data.py#L80
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/DALLE-small/train_dalle.py#L423
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/DALLE-small/train_vae.py#L130
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/paella.py#L166
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/utils.py#L101
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/scaling/utils.py#L161
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/scaling/utils.py#L174
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/text-to-video/test_reconstructions.py#L43
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/text-to-video/train_maskgit.py#L197
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/text-to-video/utils.py#L159
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/text-to-video/utils.py#L163
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/text-to-video/utils.py#L167
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/text-to-video/utils.py#L276
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/minDALL-E/examples/transfer_learning_ex.py#L102
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/minDALL-E/examples/transfer_learning_ex.py#L108
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/main.py#L203
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/main.py#L212
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/main.py#L228
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/main.py#L236

====================================
https://github.com/dahlian00/SegRCDB
====================================

Found 15 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
        test_dataset,
        batch_size=1,
        sampler=None,
        num_workers=0,
        shuffle=False,
    )
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/mmseg/datasets/builder.py#L148
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/mmseg/datasets/builder.py#L161
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_eval_hook.py#L46
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_eval_hook.py#L58
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_eval_hook.py#L60
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_eval_hook.py#L84
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_eval_hook.py#L96
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_eval_hook.py#L98
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_eval_hook.py#L133
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_eval_hook.py#L145
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_eval_hook.py#L147
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_eval_hook.py#L173
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_eval_hook.py#L185
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_eval_hook.py#L187
https://github.com/dahlian00/SegRCDB/blob/7c2cb68ed6ef0a2eaa78e7704b542058d483407d/mmsegmentation-0.28.0/tests/test_apis/test_single_gpu.py#L37

========================================
https://github.com/dondongwon/LPMDataset
========================================

Found 8 times
torch.utils.data.DataLoader(dataset=dataset,
                                          batch_size=16,
                                          shuffle=True,
                                          pin_memory=True,
                                          num_workers=1,
                                          collate_fn = CLIP_collate_fn
                                          )
torch.utils.data.DataLoader(dataset=dataset,
                                            batch_size=bs,
                                            shuffle=True,
                                            pin_memory=True,
                                            num_workers=num_w,
                                            collate_fn = collate_fn
                                            )
torch.utils.data.DataLoader(dataset=dataset,
                                            batch_size=bs,
                                            shuffle=True,
                                            pin_memory=True,
                                            num_workers=num_w,
                                            collate_fn = collate_fn
                                            )
torch.utils.data.DataLoader(dataset=dataset,
                                            batch_size=bs,
                                            shuffle=True,
                                            pin_memory=True,
                                            num_workers=num_w,
                                            collate_fn = collate_fn
                                            )
torch.utils.data.DataLoader(dataset=dataset,
                                            batch_size=bs,
                                            shuffle=False,
                                            pin_memory=True,
                                            num_workers=num_w,
                                            collate_fn = collate_fn
                                            )
torch.utils.data.DataLoader(dataset=dataset,
                                            batch_size=16,
                                            shuffle=True,
                                            pin_memory=True,
                                            num_workers=1,
                                            collate_fn = collate_fn_fix,
                                            drop_last = True 
                                            )
torch.utils.data.DataLoader(dataset=trn_datasets,
                                        batch_size=8,
                                        shuffle=False,
                                        pin_memory=True,
                                        num_workers=4,
                                        collate_fn = trn_collate_fn
                                        )
torch.utils.data.DataLoader(dataset=val_datasets[index],
                                            batch_size=8,
                                            shuffle=False,
                                            pin_memory=True,
                                            num_workers=4,
                                            collate_fn = val_collate_fn
                                            )
https://github.com/dondongwon/LPMDataset/blob/e1addf4f4e2ddb3457dc18f94117cafa8d063e90/src/clip.py#L364
https://github.com/dondongwon/LPMDataset/blob/e1addf4f4e2ddb3457dc18f94117cafa8d063e90/src/data_lp.py#L428
https://github.com/dondongwon/LPMDataset/blob/e1addf4f4e2ddb3457dc18f94117cafa8d063e90/src/data_lp.py#L437
https://github.com/dondongwon/LPMDataset/blob/e1addf4f4e2ddb3457dc18f94117cafa8d063e90/src/data_lp.py#L447
https://github.com/dondongwon/LPMDataset/blob/e1addf4f4e2ddb3457dc18f94117cafa8d063e90/src/data_lp.py#L460
https://github.com/dondongwon/LPMDataset/blob/e1addf4f4e2ddb3457dc18f94117cafa8d063e90/src/data_lp.py#L503
https://github.com/dondongwon/LPMDataset/blob/e1addf4f4e2ddb3457dc18f94117cafa8d063e90/src/train.py#L431
https://github.com/dondongwon/LPMDataset/blob/e1addf4f4e2ddb3457dc18f94117cafa8d063e90/src/train.py#L454

=============================================
https://github.com/pengr/Contrastive_AutoEval
=============================================

Found 7 times
torch.utils.data.DataLoader(
                    test_dataset, batch_size=args.test_batch_size, shuffle=True,
                    num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
                test_dataset, batch_size=args.test_batch_size, shuffle=True,
                num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
                test_dataset, batch_size=args.test_batch_size, shuffle=True,
                num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            test_dataset, batch_size=args.test_batch_size, shuffle=True,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
                dataset=meta_dataset, batch_size=args.batch_size, shuffle=True,
                num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True,
                                               num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size, shuffle=True,
                                             num_workers=args.workers, pin_memory=True)
https://github.com/pengr/Contrastive_AutoEval/blob/49273e2077c5910602861240dd071eb5002fb41b/eval.py#L122
https://github.com/pengr/Contrastive_AutoEval/blob/49273e2077c5910602861240dd071eb5002fb41b/eval.py#L149
https://github.com/pengr/Contrastive_AutoEval/blob/49273e2077c5910602861240dd071eb5002fb41b/eval.py#L172
https://github.com/pengr/Contrastive_AutoEval/blob/49273e2077c5910602861240dd071eb5002fb41b/eval.py#L192
https://github.com/pengr/Contrastive_AutoEval/blob/49273e2077c5910602861240dd071eb5002fb41b/regression.py#L125
https://github.com/pengr/Contrastive_AutoEval/blob/49273e2077c5910602861240dd071eb5002fb41b/run.py#L118
https://github.com/pengr/Contrastive_AutoEval/blob/49273e2077c5910602861240dd071eb5002fb41b/run.py#L121

=====================================
https://github.com/VQAssessment/DOVER
=====================================

Found 6 times
torch.utils.data.DataLoader(
            val_dataset, batch_size=1, num_workers=opt["num_workers"], pin_memory=True,
        )
torch.utils.data.DataLoader(
        dataset, batch_size=1, num_workers=opt["num_workers"], pin_memory=True,
    )
torch.utils.data.DataLoader(
                train_dataset,
                batch_size=opt["batch_size"],
                num_workers=opt["num_workers"],
                shuffle=True,
            )
torch.utils.data.DataLoader(
                val_dataset,
                batch_size=1,
                num_workers=opt["num_workers"],
                pin_memory=True,
            )
torch.utils.data.DataLoader(
                train_dataset,
                batch_size=opt["batch_size"],
                num_workers=opt["num_workers"],
                shuffle=True,
            )
torch.utils.data.DataLoader(
                val_dataset,
                batch_size=1,
                num_workers=opt["num_workers"],
                pin_memory=True,
            )
https://github.com/VQAssessment/DOVER/blob/411c62b0fb9dba1cd72bec7c62324f45031bad89/default_infer.py#L207
https://github.com/VQAssessment/DOVER/blob/411c62b0fb9dba1cd72bec7c62324f45031bad89/evaluate_a_set_of_videos.py#L90
https://github.com/VQAssessment/DOVER/blob/411c62b0fb9dba1cd72bec7c62324f45031bad89/training_with_divide.py#L364
https://github.com/VQAssessment/DOVER/blob/411c62b0fb9dba1cd72bec7c62324f45031bad89/training_with_divide.py#L382
https://github.com/VQAssessment/DOVER/blob/411c62b0fb9dba1cd72bec7c62324f45031bad89/transfer_learning.py#L371
https://github.com/VQAssessment/DOVER/blob/411c62b0fb9dba1cd72bec7c62324f45031bad89/transfer_learning.py#L389

==================================
https://github.com/uvavision/SyViC
==================================

Found 3 times
torch.utils.data.DataLoader(
            checklist_dataset, batch_size=400, shuffle=False, num_workers=8
        )
torch.utils.data.DataLoader(
            self.tdw_dataset,
            batch_size=self.args.batch_size,
            sampler=data_utils.IndexRandomSampler(
                self.tdw_dataset, use_real=self.args.mixstyle
            ),
            num_workers=self.args.workers,
            drop_last=True,
        )
DataLoader(dataset, drop_last=True)
https://github.com/uvavision/SyViC/blob/d2356f70d4d62236cfc81d260339c964a1276feb/finetuning/evaluation/vl_checklist.py#L75
https://github.com/uvavision/SyViC/blob/d2356f70d4d62236cfc81d260339c964a1276feb/finetuning/src/core.py#L170
https://github.com/uvavision/SyViC/blob/d2356f70d4d62236cfc81d260339c964a1276feb/finetuning/src/datasets/__init__.py#L25

===========================================
https://github.com/YanNeu/spurious_imagenet
===========================================

Found 7 times
DataLoader(dataset, batch_size=bs,  shuffle=False, num_workers=num_workers)
DataLoader(dataset, batch_size=bs,  shuffle=False, num_workers=num_workers)
DataLoader(in_subset, batch_size=bs,  shuffle=False, num_workers=num_workers)
DataLoader(in_subset, batch_size=bs, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(dataset, batch_size=batch_size,
                                         shuffle=shuffle, num_workers=num_workers)
torch.utils.data.DataLoader(dataset, batch_size=batch_size,
                                         shuffle=shuffle, num_workers=num_workers)
torch.utils.data.DataLoader(dataset, batch_size=batch_size,
                                         shuffle=shuffle, num_workers=num_workers)
https://github.com/YanNeu/spurious_imagenet/blob/0e0b9719f30652b120a9bdb6bb0a857ca808eb5d/dataset/spurious_dataset.py#L61
https://github.com/YanNeu/spurious_imagenet/blob/0e0b9719f30652b120a9bdb6bb0a857ca808eb5d/dataset/spurious_dataset.py#L71
https://github.com/YanNeu/spurious_imagenet/blob/0e0b9719f30652b120a9bdb6bb0a857ca808eb5d/dataset/spurious_dataset.py#L88
https://github.com/YanNeu/spurious_imagenet/blob/0e0b9719f30652b120a9bdb6bb0a857ca808eb5d/neural_pca/data.py#L30
https://github.com/YanNeu/spurious_imagenet/blob/0e0b9719f30652b120a9bdb6bb0a857ca808eb5d/utils/datasets/imagenet.py#L52
https://github.com/YanNeu/spurious_imagenet/blob/0e0b9719f30652b120a9bdb6bb0a857ca808eb5d/utils/datasets/imagenet.py#L100
https://github.com/YanNeu/spurious_imagenet/blob/0e0b9719f30652b120a9bdb6bb0a857ca808eb5d/utils/datasets/openimages.py#L72

=========================================
https://github.com/runjiali-rl/Oxford_HIC
=========================================

Found 11 times
DataLoader(dataset, batch_size=batch_size, shuffle=False, drop_last=True,
                                    sampler=train_sampler)
DataLoader(
                train_dataset,
                batch_size=self.args.per_device_train_batch_size,
                collate_fn=data_collator,
                num_workers=self.args.dataloader_num_workers,
                pin_memory=self.args.dataloader_pin_memory,
            )
DataLoader(
            train_dataset,
            batch_size=self._train_batch_size,
            sampler=train_sampler,
            collate_fn=data_collator,
            drop_last=self.args.dataloader_drop_last,
            num_workers=self.args.dataloader_num_workers,
            pin_memory=self.args.dataloader_pin_memory,
            worker_init_fn=seed_worker,
        )
DataLoader(
                eval_dataset,
                batch_size=self.args.eval_batch_size,
                collate_fn=data_collator,
                num_workers=self.args.dataloader_num_workers,
                pin_memory=self.args.dataloader_pin_memory,
            )
DataLoader(
            eval_dataset,
            sampler=eval_sampler,
            batch_size=self.args.eval_batch_size,
            collate_fn=data_collator,
            drop_last=self.args.dataloader_drop_last,
            num_workers=self.args.dataloader_num_workers,
            pin_memory=self.args.dataloader_pin_memory,
        )
DataLoader(
                test_dataset,
                batch_size=self.args.eval_batch_size,
                collate_fn=data_collator,
                num_workers=self.args.dataloader_num_workers,
                pin_memory=self.args.dataloader_pin_memory,
            )
DataLoader(
            test_dataset,
            sampler=test_sampler,
            batch_size=self.args.eval_batch_size,
            collate_fn=data_collator,
            drop_last=self.args.dataloader_drop_last,
            num_workers=self.args.dataloader_num_workers,
            pin_memory=self.args.dataloader_pin_memory,
        )
DataLoader(dataset, num_workers=num_workers, batch_size=batch_size, collate_fn=collate_fn)
DataLoader(dataset, num_workers=num_workers, batch_size=batch_size, collate_fn=collate_fn)
DataLoader(
                        dataset,
                        batch_size=bsz,
                        num_workers=num_workers,
                        pin_memory=True,
                    )
DataLoader(
                    dataset,
                    batch_size=bsz,
                    num_workers=num_workers,
                    pin_memory=True,
                    sampler=sampler,
                    shuffle=sampler is None and is_train,
                    collate_fn=collate_fn,
                    drop_last=True if is_train else False,
                )
https://github.com/runjiali-rl/Oxford_HIC/blob/9253ecc0947e772b886e5816b896aebe2f6b30dc/clipcap/train.py#L39
https://github.com/runjiali-rl/Oxford_HIC/blob/9253ecc0947e772b886e5816b896aebe2f6b30dc/clipcap/transformers/trainer.py#L838
https://github.com/runjiali-rl/Oxford_HIC/blob/9253ecc0947e772b886e5816b896aebe2f6b30dc/clipcap/transformers/trainer.py#L848
https://github.com/runjiali-rl/Oxford_HIC/blob/9253ecc0947e772b886e5816b896aebe2f6b30dc/clipcap/transformers/trainer.py#L918
https://github.com/runjiali-rl/Oxford_HIC/blob/9253ecc0947e772b886e5816b896aebe2f6b30dc/clipcap/transformers/trainer.py#L928
https://github.com/runjiali-rl/Oxford_HIC/blob/9253ecc0947e772b886e5816b896aebe2f6b30dc/clipcap/transformers/trainer.py#L965
https://github.com/runjiali-rl/Oxford_HIC/blob/9253ecc0947e772b886e5816b896aebe2f6b30dc/clipcap/transformers/trainer.py#L976
https://github.com/runjiali-rl/Oxford_HIC/blob/9253ecc0947e772b886e5816b896aebe2f6b30dc/clipcap/transformers/pipelines/base.py#L1014
https://github.com/runjiali-rl/Oxford_HIC/blob/9253ecc0947e772b886e5816b896aebe2f6b30dc/clipcap/transformers/pipelines/base.py#L1115
https://github.com/runjiali-rl/Oxford_HIC/blob/9253ecc0947e772b886e5816b896aebe2f6b30dc/minigpt4/minigpt4/runners/runner_base.py#L512
https://github.com/runjiali-rl/Oxford_HIC/blob/9253ecc0947e772b886e5816b896aebe2f6b30dc/minigpt4/minigpt4/runners/runner_base.py#L535

====================================
https://github.com/JingyuanYY/EmoSet
====================================

Found 1 times
DataLoader(dataset, batch_size = 16, shuffle = True)
https://github.com/JingyuanYY/EmoSet/blob/d60d8b92c329c701f45f6d7713beeafe348ac5c2/EmoSet.py#L159

=====================================
https://github.com/adwardlee/RenderIH
=====================================

Found 19 times
DataLoader(dataset, batch_size=opt.bs, shuffle=False,
                            num_workers=4, drop_last=False, pin_memory=True)
DataLoader(dataset, batch_size=opt.bs, shuffle=False,
                            num_workers=4, drop_last=False, pin_memory=True)
DataLoader(dataset, batch_size=opt.bs, shuffle=False,
                            num_workers=4, drop_last=False, pin_memory=True)
DataLoader(dataset, batch_size=opt.bs, shuffle=False,
                            num_workers=4, drop_last=False, pin_memory=True)
DataLoader(dataset, batch_size=args.train_batch_size, shuffle=True,
                         num_workers=args.num_workers, pin_memory=True)
DataLoader(dataset=train_dataset, batch_size=cfg.num_gpus * cfg.train_batch_size,
                                              shuffle=True, num_workers=cfg.num_workers, pin_memory=True)
DataLoader(dataset=train_dataset, batch_size=cfg.num_gpus * cfg.train_batch_size,
                                              shuffle=True, num_workers=cfg.num_workers, pin_memory=True)
DataLoader(dataset, batch_size=args.test_batch_size, shuffle=False,
                                              num_workers=args.num_workers, pin_memory=True)
DataLoader(dataset=self.test_dataset, batch_size=cfg.num_gpus * cfg.test_batch_size,
                                              shuffle=False, num_workers=cfg.num_workers, pin_memory=True)
DataLoader(dataset=self.test_dataset, batch_size=cfg.num_gpus * cfg.test_batch_size,
                                              shuffle=False, num_workers=cfg.num_workers, pin_memory=True)
DataLoader(dataset, batch_size=cfg.train_batch_size, shuffle=False,
                                      num_workers=24, pin_memory=True)
DataLoader(dataset, batch_size=2)
DataLoader(dataset, batch_size=256, shuffle=False,
                                 num_workers=8, pin_memory=False)
DataLoader(dataset, batch_size=512, shuffle=False,
                                         num_workers=4, pin_memory=False)
DataLoader(self.dataset, batch_size=self.batch_size, sampler=sampler,
                                    num_workers=self.num_workers, drop_last=True, pin_memory=True)
DataLoader(self.dataset, batch_size=self.batch_size, shuffle=True,
                                    num_workers=self.num_workers, drop_last=True, pin_memory=True)
DataLoader(dataset, batch_size=512, shuffle=False,
                                     num_workers=4, pin_memory=False)
DataLoader(dataset=dataset, batch_size=512, shuffle=False,
                                 num_workers=6, pin_memory=False, drop_last=False)
DataLoader(dataset, batch_size=512, shuffle=False,
                                         num_workers=4, pin_memory=False)
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/apps/eval_interhand.py#L266
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/apps/eval_interhand_newmpjpe.py#L266
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/apps/eval_singlehand.py#L289
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/apps/eval_tzionas.py#L272
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/common/base.py#L145
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/common/base.py#L151
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/common/base.py#L157
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/common/base.py#L243
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/common/base.py#L248
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/common/base.py#L254
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/common/generate_mask.py#L289
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/core/loader_mano.py#L327
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/miscellaneous/interhand_ori_gen.py#L366
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/rendering_code/step7_gen_annotations.py#L384
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/utils/DataProvider.py#L19
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/utils/DataProvider.py#L22
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/utils/get_maskiou.py#L122
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/utils/dataset_gen/h2o3d_dataloader.py#L707
https://github.com/adwardlee/RenderIH/blob/d55a175f21bc8194730d187dfaafb000c7a17d46/utils/dataset_gen/interhand.py#L313

===================================
https://github.com/venom12138/VSCOS
===================================

Found 2 times
DataLoader(dataset, config['batch_size'], sampler=train_sampler, num_workers=config['num_workers'],
                            worker_init_fn=worker_init_fn, drop_last=True)
DataLoader(dataset, 1,  shuffle=False, num_workers=4)
https://github.com/venom12138/VSCOS/blob/ca08a94246db39e4b87befe33849e8153dfc1dfb/XMem-SC/train_EPIC.py#L231
https://github.com/venom12138/VSCOS/blob/ca08a94246db39e4b87befe33849e8153dfc1dfb/XMem-SC/dataset/EPIC_testdataset.py#L537

=================================
https://github.com/ydk122024/AIDE
=================================

Found 3 times
DataLoader(train_dataset, batch_size=1, shuffle=True, num_workers=16, drop_last=False)
DataLoader(val_dataset, batch_size=1, shuffle=False, num_workers=16, drop_last=False)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=16, drop_last=False)
https://github.com/ydk122024/AIDE/blob/fc5b3889ff91da071062679526975294eb38aab9/dataset.py#L172
https://github.com/ydk122024/AIDE/blob/fc5b3889ff91da071062679526975294eb38aab9/dataset.py#L173
https://github.com/ydk122024/AIDE/blob/fc5b3889ff91da071062679526975294eb38aab9/dataset.py#L174

======================================
https://github.com/faixan-khan/FishNet
======================================

Found 2 times
torch.utils.data.DataLoader(dataset_train, batch_size=args.batch_size, shuffle=True,
                    drop_last=False, num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(dataset_val, batch_size=args.batch_size,
                    drop_last=False, num_workers=args.num_workers, pin_memory=True)
https://github.com/faixan-khan/FishNet/blob/cf98768b6c5390a05422798b5ccfaec51d937292/main.py#L189
https://github.com/faixan-khan/FishNet/blob/cf98768b6c5390a05422798b5ccfaec51d937292/main.py#L191

==================================
https://github.com/AndongDeng/BEAR
==================================

Found 4 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=videos_per_gpu),
        pin_memory=pin_memory,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        drop_last=drop_last,
        **kwargs)
torch.utils.data.DataLoader(
        loader,
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
        loader,
        batch_size=args.batch_size, shuffle=True,
        num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
        loader,
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.num_workers, pin_memory=True)
https://github.com/AndongDeng/BEAR/blob/121048d8fa3fcaa863148fd038514e81f3d110fa/benchmark/BEAR-Standard/mmaction/datasets/builder.py#L111
https://github.com/AndongDeng/BEAR/blob/121048d8fa3fcaa863148fd038514e81f3d110fa/benchmark/BEAR-Zeroshot/action_clip.py#L87
https://github.com/AndongDeng/BEAR/blob/121048d8fa3fcaa863148fd038514e81f3d110fa/benchmark/BEAR-Zeroshot/multiple_frame_clip.py#L52
https://github.com/AndongDeng/BEAR/blob/121048d8fa3fcaa863148fd038514e81f3d110fa/benchmark/BEAR-Zeroshot/single_frame_clip.py#L54

==============================
https://github.com/aiff22/SQAD
==============================

Found 6 times
DataLoader(
        dataset=test_dataset,
        batch_size=config.batch_size,
        num_workers=config.num_workers,
        shuffle=False
    )
DataLoader(
        dataset=train_dataset,
        batch_size=config.batch_size,
        num_workers=config.num_workers,
        drop_last=True,
        shuffle=True
    )
DataLoader(
        dataset=val_dataset,
        batch_size=config.batch_size,
        num_workers=config.num_workers,
        drop_last=True,
        shuffle=False
    )
DataLoader(dataset=eval_dataset, batch_size=args.batch_size)
DataLoader(dataset=train_dataset, batch_size=args.batch_size, shuffle=True)
DataLoader(dataset=eval_dataset, batch_size=args.batch_size, shuffle=True)
https://github.com/aiff22/SQAD/blob/48a6ae20298631f745af3a427f8c8db14d302c4a/maniqa_plugin/inference.py#L110
https://github.com/aiff22/SQAD/blob/48a6ae20298631f745af3a427f8c8db14d302c4a/maniqa_plugin/train_maniqa.py#L219
https://github.com/aiff22/SQAD/blob/48a6ae20298631f745af3a427f8c8db14d302c4a/maniqa_plugin/train_maniqa.py#L226
https://github.com/aiff22/SQAD/blob/48a6ae20298631f745af3a427f8c8db14d302c4a/resnet_/test.py#L80
https://github.com/aiff22/SQAD/blob/48a6ae20298631f745af3a427f8c8db14d302c4a/resnet_/train_regress.py#L90
https://github.com/aiff22/SQAD/blob/48a6ae20298631f745af3a427f8c8db14d302c4a/resnet_/train_regress.py#L91

========================================
https://github.com/Mountchicken/Union14M
========================================

Found 1 times
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
https://github.com/Mountchicken/Union14M/blob/7fbb89a8e33b80e184d3aea8c3270f6d697827bf/mae/main_pretrain.py#L218

====================================
https://github.com/fudong03/MMST-ViT
====================================

Found 14 times
torch.utils.data.DataLoader(
        dataset_sentinel_train, sampler=sampler_sentinel_train,
        batch_size=1,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_hrrr_train, sampler=sampler_hrrr_train,
        batch_size=1,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_usda_train, sampler=sampler_usda_train,
        batch_size=1,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_sentinel_val, sampler=sampler_sentinel_train,
        batch_size=1,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_hrrr_val, sampler=sampler_hrrr_train,
        batch_size=1,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_usda_val, sampler=sampler_usda_train,
        batch_size=1,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_sentinel, sampler=sampler_sentinel,
        batch_size=1,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        shuffle=False,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_hrrr, sampler=sampler_hrrr,
        batch_size=1,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        shuffle=False,
        drop_last=True,
    )
torch.utils.data.DataLoader(dataset, batch_size=1)
torch.utils.data.DataLoader(dataset, batch_size=1)
torch.utils.data.DataLoader(dataset, batch_size=1)
DataLoader(dataset, batch_size=batch_size, num_workers=num_workers, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=1)
torch.utils.data.DataLoader(dataset, batch_size=1)
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/main_finetune_mmst_vit.py#L180
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/main_finetune_mmst_vit.py#L188
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/main_finetune_mmst_vit.py#L196
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/main_finetune_mmst_vit.py#L205
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/main_finetune_mmst_vit.py#L213
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/main_finetune_mmst_vit.py#L221
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/main_pretrain_mmst_vit.py#L137
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/main_pretrain_mmst_vit.py#L146
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/dataset/data_wrapper.py#L66
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/dataset/hrrr_loader.py#L161
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/dataset/sentinel_loader.py#L61
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/dataset/sentinel_wrapper.py#L64
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/dataset/sentinel_wrapper.py#L74
https://github.com/fudong03/MMST-ViT/blob/f943dd9e488dba4e6709fdd15b8940464d21eca5/dataset/usda_loader.py#L72

====================================
https://github.com/microsoft/Moonlit
====================================

Found 12 times
torch.utils.data.DataLoader(
        train_set, batch_size=cfg.batch_size, shuffle=(train_sampler is None),
        num_workers=cfg.workers, pin_memory=False, sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(
                256, interpolation=transforms.InterpolationMode.BICUBIC),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=cfg.batch_size*2, shuffle=False,
        num_workers=cfg.workers, pin_memory=False, drop_last=False)
torch.utils.data.DataLoader(
            datasets.ImageFolder(os.path.join(cfg.path, 'search'), transforms.Compose([
                transforms.Resize(
                    256, interpolation=transforms.InterpolationMode.BICUBIC),
                transforms.CenterCrop(224),
                transforms.ToTensor(),
                normalize,
            ])),
            batch_size=cfg.batch_size*2, shuffle=False,
            num_workers=cfg.workers, pin_memory=False, drop_last=False)
Data.DataLoader(
            dataset=dataset,
            batch_size=self.batch_size,
            shuffle=True,
        )
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers, pin_memory=True)
DataLoader(valid_set, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(
        dataset, sampler=sampler,
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
        drop_last=False
    )
DataLoader(
            train_dataset,
            batch_size=train_batch_size,
            shuffle=(train_sampler is None),
            sampler=train_sampler,
            num_workers=num_workers,
            pin_memory=True,
        )
DataLoader(
            train_dataset,
            batch_size=train_batch_size,
            sampler=train_sampler,
            num_workers=num_workers,
            pin_memory=True,
        )
DataLoader(
            valid_dataset,
            batch_size=eval_batch_size,
            sampler=valid_sampler,
            num_workers=num_workers,
            pin_memory=True,
        )
DataLoader(
        test_dataset,
        batch_size=eval_batch_size,
        shuffle=False,
        num_workers=num_workers,
        drop_last=False,
        pin_memory=True,
        sampler=test_sampler,
    )
data.DataLoader(dataset)
https://github.com/microsoft/Moonlit/blob/bc398779883316b12f1c7edeb4890e36bc2578c2/ElasticViT/util/data_loader.py#L56
https://github.com/microsoft/Moonlit/blob/bc398779883316b12f1c7edeb4890e36bc2578c2/ElasticViT/util/data_loader.py#L60
https://github.com/microsoft/Moonlit/blob/bc398779883316b12f1c7edeb4890e36bc2578c2/ElasticViT/util/data_loader.py#L72
https://github.com/microsoft/Moonlit/blob/bc398779883316b12f1c7edeb4890e36bc2578c2/LitePred/predictor_builder/trainer.py#L142
https://github.com/microsoft/Moonlit/blob/bc398779883316b12f1c7edeb4890e36bc2578c2/SpaceEvo/downstream_cls.py#L110
https://github.com/microsoft/Moonlit/blob/bc398779883316b12f1c7edeb4890e36bc2578c2/SpaceEvo/downstream_cls.py#L111
https://github.com/microsoft/Moonlit/blob/bc398779883316b12f1c7edeb4890e36bc2578c2/SpaceEvo/modules/latency_benchmark/onnx/eval.py#L20
https://github.com/microsoft/Moonlit/blob/bc398779883316b12f1c7edeb4890e36bc2578c2/SpaceEvo/modules/training/dataset/imagenet_dataloader.py#L62
https://github.com/microsoft/Moonlit/blob/bc398779883316b12f1c7edeb4890e36bc2578c2/SpaceEvo/modules/training/dataset/imagenet_dataloader.py#L88
https://github.com/microsoft/Moonlit/blob/bc398779883316b12f1c7edeb4890e36bc2578c2/SpaceEvo/modules/training/dataset/imagenet_dataloader.py#L95
https://github.com/microsoft/Moonlit/blob/bc398779883316b12f1c7edeb4890e36bc2578c2/SpaceEvo/modules/training/dataset/imagenet_dataloader.py#L111
https://github.com/microsoft/Moonlit/blob/bc398779883316b12f1c7edeb4890e36bc2578c2/SpaceEvo/modules/training/dataset/imagenet_tar_dataset.py#L90

============================================
https://github.com/LeapLabTHU/EfficientTrain
============================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        persistent_workers=True,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False,
            persistent_workers=True,
        )
https://github.com/LeapLabTHU/EfficientTrain/blob/552b73ccb535e042e7a6b5f01f0f2968e8cf60e7/main.py#L260
https://github.com/LeapLabTHU/EfficientTrain/blob/552b73ccb535e042e7a6b5f01f0f2968e8cf60e7/main.py#L270

=======================================
https://github.com/wjh892521292/Ord2Seq
=======================================

Found 2 times
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size, shuffle=True, num_workers=4,
                                             drop_last=True)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size, shuffle=True, num_workers=4)
https://github.com/wjh892521292/Ord2Seq/blob/66cb41df491d0d1ede3fb4561bac1e25f1d7467f/main.py#L47
https://github.com/wjh892521292/Ord2Seq/blob/66cb41df491d0d1ede3fb4561bac1e25f1d7467f/main.py#L64

=================================
https://github.com/Ingrid725/LaPE
=================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/Ingrid725/LaPE/blob/5000960056cf7ea283f15bfd44603d1bca70dc35/main.py#L241
https://github.com/Ingrid725/LaPE/blob/5000960056cf7ea283f15bfd44603d1bca70dc35/main.py#L251

=================================
https://github.com/CVIR/contracon
=================================

Found 20 times
torch.utils.data.DataLoader(self.train_dataset, batch_size=self._batch_size,shuffle=False,num_workers=self._workers, sampler=SubsetRandomSampler(train_indices, True))
torch.utils.data.DataLoader(self.test_dataset, batch_size=self.args.test_batch,shuffle=False,num_workers=self._workers, sampler=SubsetRandomSampler(test_indices, False))
torch.utils.data.DataLoader(self.train_dataset, batch_size=batch_size, shuffle=False, num_workers=self._workers, sampler=SubsetRandomSampler(indexes, False))
torch.utils.data.DataLoader(self.train_dataset, batch_size=batch_size, shuffle=False, num_workers=self._workers, sampler=SubsetRandomSampler(indexes, True))
torch.utils.data.DataLoader(self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=self._workers, sampler=SubsetRandomSampler(indexes, False))
torch.utils.data.DataLoader(self.train_dataset, batch_size=batch_size, shuffle=False, num_workers=self._workers, sampler=SubsetRandomSampler(train_indices, True))
torch.utils.data.DataLoader(self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=self._workers, sampler=SubsetRandomSampler(test_indices, False))
DataLoader(dataset_train, batch_size=batch_size_train)
DataLoader(dataset_test, batch_size=batch_size_test)
torch.utils.data.DataLoader(dat[s],batch_size=1,shuffle=False)
torch.utils.data.DataLoader(dat[s],batch_size=1,shuffle=False)
torch.utils.data.DataLoader(dat[s], batch_size=1, shuffle=False)
torch.utils.data.DataLoader(dat[s], batch_size=1, shuffle=False)
torch.utils.data.DataLoader(dat[s], batch_size=1, shuffle=False)
torch.utils.data.DataLoader(self.train_dataset, batch_size=self._batch_size,shuffle=False,num_workers=16, sampler=SubsetRandomSampler(train_indices, True))
torch.utils.data.DataLoader(self.test_dataset, batch_size=10,shuffle=False,num_workers=16, sampler=SubsetRandomSampler(test_indices, False))
torch.utils.data.DataLoader(self.train_dataset, batch_size=batch_size, shuffle=False, num_workers=4, sampler=SubsetRandomSampler(indexes, True))
torch.utils.data.DataLoader(self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=4, sampler=SubsetRandomSampler(indexes, False))
torch.utils.data.DataLoader(self.train_dataset, batch_size=batch_size, shuffle=False, num_workers=4, sampler=SubsetRandomSampler(train_indices, True))
torch.utils.data.DataLoader(self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=4, sampler=SubsetRandomSampler(test_indices, False))
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/incremental_dataloader.py#L163
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/incremental_dataloader.py#L164
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/incremental_dataloader.py#L196
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/incremental_dataloader.py#L204
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/incremental_dataloader.py#L206
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/incremental_dataloader.py#L215
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/incremental_dataloader.py#L218
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/five_datasets/dataloader/five_datasets.py#L42
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/five_datasets/dataloader/five_datasets.py#L43
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/five_datasets/dataloader/five_datasets.py#L81
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/five_datasets/dataloader/five_datasets.py#L104
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/five_datasets/dataloader/five_datasets.py#L134
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/five_datasets/dataloader/five_datasets.py#L154
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/five_datasets/dataloader/five_datasets.py#L176
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/idatasets/data_celeb.py#L149
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/idatasets/data_celeb.py#L150
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/idatasets/data_celeb.py#L172
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/idatasets/data_celeb.py#L174
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/idatasets/data_celeb.py#L185
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/idatasets/data_celeb.py#L190

======================================
https://github.com/thalesgroup/darswin
======================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
https://github.com/thalesgroup/darswin/blob/211aa1e0f4436cc852466ae857b7b15647e67c22/data/build.py#L74
https://github.com/thalesgroup/darswin/blob/211aa1e0f4436cc852466ae857b7b15647e67c22/data/build.py#L82

=================================================
https://github.com/LeapLabTHU/FLatten-Transformer
=================================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
https://github.com/LeapLabTHU/FLatten-Transformer/blob/20298dd598cec77170b2394b1b2194356280000c/data/build.py#L40
https://github.com/LeapLabTHU/FLatten-Transformer/blob/20298dd598cec77170b2394b1b2194356280000c/data/build.py#L48

===============================================
https://github.com/LeapLabTHU/Dynamic_Perceiver
===============================================

Found 4 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
https://github.com/LeapLabTHU/Dynamic_Perceiver/blob/0d2a6299ded1515f31efdddb453b5d429202e806/main_baseline.py#L259
https://github.com/LeapLabTHU/Dynamic_Perceiver/blob/0d2a6299ded1515f31efdddb453b5d429202e806/main_baseline.py#L268
https://github.com/LeapLabTHU/Dynamic_Perceiver/blob/0d2a6299ded1515f31efdddb453b5d429202e806/main_earlyExit.py#L281
https://github.com/LeapLabTHU/Dynamic_Perceiver/blob/0d2a6299ded1515f31efdddb453b5d429202e806/main_earlyExit.py#L290

==============================
https://github.com/AFeng-x/SMT
==============================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
https://github.com/AFeng-x/SMT/blob/11e954d9b4d0f513397ba011669c7864fd94e5fb/data/build.py#L69
https://github.com/AFeng-x/SMT/blob/11e954d9b4d0f513397ba011669c7864fd94e5fb/data/build.py#L77

========================================================
https://github.com/Peterande/GET-Group-Event-Transformer
========================================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, 
        sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
        collate_fn=custom_collate_fn,
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_val, 
        sampler=sampler_val,
        batch_size=2 * config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False,
        collate_fn=custom_collate_fn,
        persistent_workers=True
    )
https://github.com/Peterande/GET-Group-Event-Transformer/blob/d979d7a243201d4c86cd1765636b167d7701d881/data/build.py#L74
https://github.com/Peterande/GET-Group-Event-Transformer/blob/d979d7a243201d4c86cd1765636b167d7701d881/data/build.py#L85

========================================
https://github.com/microsoft/TokenMixers
========================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val,
        sampler=sampler_val,
        batch_size=int(2 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/microsoft/TokenMixers/blob/99dbe38c2a5c3ea3c655b8c42c763a6d595e18f9/Active Token Mixer/dataloader.py#L42
https://github.com/microsoft/TokenMixers/blob/99dbe38c2a5c3ea3c655b8c42c763a6d595e18f9/Active Token Mixer/dataloader.py#L50

========================================
https://github.com/hkzhang-git/FcaFormer
========================================

Found 3 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/hkzhang-git/FcaFormer/blob/7dcd8e0ed207a6c74708ab10553dcd6a6d4ea2bd/image_classification/main.py#L251
https://github.com/hkzhang-git/FcaFormer/blob/7dcd8e0ed207a6c74708ab10553dcd6a6d4ea2bd/image_classification/main.py#L260
https://github.com/hkzhang-git/FcaFormer/blob/7dcd8e0ed207a6c74708ab10553dcd6a6d4ea2bd/object_detection/mmdet/datasets/builder.py#L125

==================================
https://github.com/YaoleiQi/DSCNet
==================================

Found 2 times
DataLoader(train_dataset,
                                  batch_size=args.batch_size,
                                  shuffle=True)
DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=True
    )
https://github.com/YaoleiQi/DSCNet/blob/0181adf8484b1cc1c953a40f2ebc0e5d74bdad7c/DSCNet_2D_opensource/Code/DRIVE/DSCNet/S3_Train_Process.py#L101
https://github.com/YaoleiQi/DSCNet/blob/0181adf8484b1cc1c953a40f2ebc0e5d74bdad7c/DSCNet_3D_opensource/Code/Kipa/DSCNet/S3_Train_Process.py#L102

====================================
https://github.com/zju-vipa/modelgif
====================================

Found 14 times
torch.utils.data.DataLoader(testset,
                                                       batch_size=BATCH_SIZE,
                                                       shuffle=False)
DataLoader(testset,
                                      shuffle=False,
                                      batch_size=BATCH_SIZE)
DataLoader(testset,
                                      shuffle=False,
                                      batch_size=BATCH_SIZE)
DataLoader(testset,
                                  shuffle=False,
                                  batch_size=BATCH_SIZE)
torch.utils.data.DataLoader(testset,
                                               num_workers=8,
                                               batch_size=BATCH_SIZE,
                                               shuffle=False)
DataLoader(probe_data,
                            batch_size=4,
                            shuffle=False,
                            num_workers=8,
                            pin_memory=True)
torch.utils.data.DataLoader(
            self.trainset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=8,
            pin_memory=True)
torch.utils.data.DataLoader(
            testset,
            batch_size=self.batch_size,
            shuffle=False,
            num_workers=8,
            pin_memory=True)
torch.utils.data.DataLoader(testset,
                                                 batch_size=batch_size,
                                                 shuffle=False,
                                                 num_workers=8,
                                                 pin_memory=True)
torch.utils.data.DataLoader(testset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             num_workers=8,
                                             pin_memory=True)
torch.utils.data.DataLoader(testset,
                                             num_workers=8,
                                             batch_size=BATCH_SIZE,
                                             shuffle=False)
torch.utils.data.DataLoader(testset,
                                             batch_size=BATCH_SIZE,
                                             shuffle=False)
torch.utils.data.DataLoader(trainset, batch_size=batch_size,
                                               shuffle=True, num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(testset, batch_size=batch_size,
                                              shuffle=False, num_workers=0, pin_memory=True)
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/intellectual_property_protection/ipp_task.py#L204
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/intellectual_property_protection/ipp_task.py#L210
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/intellectual_property_protection/ipp_task.py#L215
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/intellectual_property_protection/ipp_task.py#L225
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/intellectual_property_protection/reference_sample.py#L45
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/model_unlearning/compare_field.py#L96
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/model_unlearning/train.py#L68
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/model_unlearning/train.py#L74
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/model_unlearning/train.py#L220
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/model_unlearning/train.py#L243
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/task_relatedness/adv.py#L105
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/task_relatedness/cut_mix.py#L44
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/task_relatedness/tools/dataset.py#L64
https://github.com/zju-vipa/modelgif/blob/595f3524563739ab663731652394978fe282a198/task_relatedness/tools/dataset.py#L66

====================================
https://github.com/dosowiechi/ClusT3
====================================

Found 8 times
torch.utils.data.DataLoader(teset, batch_size=args.batch_size,
            shuffle=(te_sampler is None), num_workers=args.workers, pin_memory=True, sampler=te_sampler)
torch.utils.data.DataLoader(teset, batch_size=args.batch_size,
                                               shuffle=True, num_workers=args.workers)
torch.utils.data.DataLoader(trset, batch_size=args.batch_size,
        shuffle=(tr_sampler is None), num_workers=args.workers, pin_memory=True, sampler=tr_sampler)
torch.utils.data.DataLoader(teset, batch_size=args.batch_size,
            shuffle=(te_sampler is None), num_workers=args.workers, pin_memory=True, sampler=te_sampler)
torch.utils.data.DataLoader(teset, batch_size=args.batch_size,
                                               shuffle=True, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(vset, batch_size=args.batch_size,
        shuffle=(v_sampler is None), num_workers=args.workers, pin_memory=True, sampler=v_sampler)
torch.utils.data.DataLoader(trset, batch_size=args.batch_size,
        shuffle=(tr_sampler is None), num_workers=args.workers, pin_memory=True, sampler=tr_sampler)
torch.utils.data.DataLoader(vset, batch_size=args.batch_size,
            shuffle=(v_sampler is None), num_workers=args.workers, pin_memory=True, sampler=v_sampler)
https://github.com/dosowiechi/ClusT3/blob/e89926c9a353e08afd56c854201597b487f2f43f/CIFAR/utils/prepare_dataset.py#L80
https://github.com/dosowiechi/ClusT3/blob/e89926c9a353e08afd56c854201597b487f2f43f/CIFAR/utils/prepare_dataset.py#L83
https://github.com/dosowiechi/ClusT3/blob/e89926c9a353e08afd56c854201597b487f2f43f/CIFAR/utils/prepare_dataset.py#L107
https://github.com/dosowiechi/ClusT3/blob/e89926c9a353e08afd56c854201597b487f2f43f/visdaC/utils/prepare_dataset.py#L103
https://github.com/dosowiechi/ClusT3/blob/e89926c9a353e08afd56c854201597b487f2f43f/visdaC/utils/prepare_dataset.py#L106
https://github.com/dosowiechi/ClusT3/blob/e89926c9a353e08afd56c854201597b487f2f43f/visdaC/utils/prepare_dataset.py#L124
https://github.com/dosowiechi/ClusT3/blob/e89926c9a353e08afd56c854201597b487f2f43f/visdaC/utils/prepare_dataset.py#L159
https://github.com/dosowiechi/ClusT3/blob/e89926c9a353e08afd56c854201597b487f2f43f/visdaC/utils/prepare_dataset.py#L162

==============================
https://github.com/Zzzzz1/CSKD
==============================

Found 2 times
data.DataLoader(
        train_dataset,
        batch_size=cfg.train_batch_size // cfg.world_size,
        sampler=train_sampler,
        num_workers=cfg.train_loader_workers,
        pin_memory=cfg.pin_memory,
        drop_last=True,
    )
data.DataLoader(
        val_dataset,
        batch_size=cfg.val_batch_size // cfg.world_size
        if cfg.dist_eval
        else cfg.val_batch_size,
        sampler=val_sampler,
        num_workers=cfg.val_loader_workers,
        pin_memory=cfg.pin_memory,
        drop_last=False,
    )
https://github.com/Zzzzz1/CSKD/blob/fa0d8b8d922f4914d7d82feaded69845d21e47b4/main.py#L245
https://github.com/Zzzzz1/CSKD/blob/fa0d8b8d922f4914d7d82feaded69845d21e47b4/main.py#L253

================================
https://github.com/qymeng94/SLTT
================================

Found 25 times
data.DataLoader(trainset, batch_size=args.b, shuffle=True, num_workers=args.j)
data.DataLoader(testset, batch_size=args.b, shuffle=False, num_workers=args.j)
data.DataLoader(trainset, batch_size=args.b, shuffle=True, num_workers=args.j)
data.DataLoader(testset, batch_size=args.b, shuffle=False, num_workers=args.j)
data.DataLoader(trainset, batch_size=args.b, shuffle=True, num_workers=args.j, drop_last=True, pin_memory=True)
data.DataLoader(testset, batch_size=args.b, shuffle=False, num_workers=args.j, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(
            datasets.ImageFolder(traindir, transforms.Compose([
                transforms.RandomResizedCrop(224),
                transforms.RandomHorizontalFlip(),
                transforms.ToTensor(),
                normalize,
            ])),
            batch_size=args.b, shuffle=True,
            num_workers=args.j, pin_memory=True)
torch.utils.data.DataLoader(
            datasets.ImageFolder(valdir, transforms.Compose([
                transforms.Resize(256),
                transforms.CenterCrop(224),
                transforms.ToTensor(),
                normalize,
            ])),
            batch_size=args.b, shuffle=False,
            num_workers=args.j, pin_memory=True)
data.DataLoader(trainset, batch_size=args.b, shuffle=True, num_workers=args.j)
data.DataLoader(testset, batch_size=args.b, shuffle=False, num_workers=args.j)
data.DataLoader(trainset, batch_size=args.b, shuffle=True, num_workers=args.j)
data.DataLoader(testset, batch_size=args.b, shuffle=False, num_workers=args.j)
data.DataLoader(trainset, batch_size=args.b, shuffle=True, num_workers=args.j, drop_last=True, pin_memory=True)
data.DataLoader(testset, batch_size=args.b, shuffle=False, num_workers=args.j, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(
            datasets.ImageFolder(traindir, transforms.Compose([
                transforms.RandomResizedCrop(224),
                transforms.RandomHorizontalFlip(),
                transforms.ToTensor(),
                normalize,
            ])),
            batch_size=args.b, shuffle=True,
            num_workers=args.j, pin_memory=True)
torch.utils.data.DataLoader(
            datasets.ImageFolder(valdir, transforms.Compose([
                transforms.Resize(256),
                transforms.CenterCrop(224),
                transforms.ToTensor(),
                normalize,
            ])),
            batch_size=args.b, shuffle=False,
            num_workers=args.j, pin_memory=True)
data.DataLoader(trainset, batch_size=args.b, shuffle=True, num_workers=args.j)
data.DataLoader(testset, batch_size=args.b, shuffle=False, num_workers=args.j)
data.DataLoader(trainset, batch_size=args.b, shuffle=True, num_workers=args.j)
data.DataLoader(testset, batch_size=args.b, shuffle=False, num_workers=args.j)
data.DataLoader(trainset, batch_size=args.b, shuffle=True, num_workers=args.j, drop_last=True, pin_memory=True)
data.DataLoader(testset, batch_size=args.b, shuffle=False, num_workers=args.j, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(
            datasets.ImageFolder(traindir, transforms.Compose([
                transforms.RandomResizedCrop(224),
                transforms.RandomHorizontalFlip(),
                transforms.ToTensor(),
                normalize,
            ])),
            batch_size=args.b, shuffle=True,
            num_workers=args.j, pin_memory=True)
torch.utils.data.DataLoader(
            datasets.ImageFolder(valdir, transforms.Compose([
                transforms.Resize(256),
                transforms.CenterCrop(224),
                transforms.ToTensor(),
                normalize,
            ])),
            batch_size=args.b, shuffle=False,
            num_workers=args.j, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_BPTT.py#L102
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_BPTT.py#L105
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_BPTT.py#L124
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_BPTT.py#L127
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_BPTT.py#L134
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_BPTT.py#L137
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_BPTT.py#L146
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_BPTT.py#L156
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTT.py#L103
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTT.py#L106
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTT.py#L125
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTT.py#L128
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTT.py#L136
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTT.py#L139
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTT.py#L148
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTT.py#L158
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTTK.py#L104
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTTK.py#L107
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTTK.py#L126
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTTK.py#L129
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTTK.py#L137
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTTK.py#L140
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTTK.py#L149
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/train_SLTTK.py#L159
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/utils/misc.py#L21

=============================================
https://github.com/megvii-research/mdistiller
=============================================

Found 11 times
DataLoader(
        train_set, batch_size=batch_size, shuffle=True, num_workers=num_workers
    )
DataLoader(
        test_set,
        batch_size=val_batch_size,
        shuffle=False,
        num_workers=1,
    )
DataLoader(
        train_set, batch_size=batch_size, shuffle=True, num_workers=num_workers
    )
DataLoader(
        test_set,
        batch_size=val_batch_size,
        shuffle=False,
        num_workers=num_workers,
    )
torch.utils.data.DataLoader(train_set, batch_size=batch_size, 
        shuffle=True, num_workers=num_workers, pin_memory=True)
torch.utils.data.DataLoader(train_set, batch_size=batch_size, 
        shuffle=True, num_workers=num_workers, pin_memory=True)
torch.utils.data.DataLoader(test_set,
        batch_size=val_batch_size, shuffle=False, num_workers=16, pin_memory=True)
DataLoader(
        train_set, batch_size=batch_size, shuffle=True, num_workers=num_workers
    )
DataLoader(
        test_set, batch_size=val_batch_size, shuffle=False, num_workers=1
    )
DataLoader(
        train_set, batch_size=batch_size, shuffle=True, num_workers=num_workers
    )
DataLoader(
        test_set, batch_size=val_batch_size, shuffle=False, num_workers=1
    )
https://github.com/megvii-research/mdistiller/blob/a08d46f10d6102bd6e3f258ca5ac880b020ea259/mdistiller/dataset/cifar100.py#L151
https://github.com/megvii-research/mdistiller/blob/a08d46f10d6102bd6e3f258ca5ac880b020ea259/mdistiller/dataset/cifar100.py#L154
https://github.com/megvii-research/mdistiller/blob/a08d46f10d6102bd6e3f258ca5ac880b020ea259/mdistiller/dataset/cifar100.py#L186
https://github.com/megvii-research/mdistiller/blob/a08d46f10d6102bd6e3f258ca5ac880b020ea259/mdistiller/dataset/cifar100.py#L189
https://github.com/megvii-research/mdistiller/blob/a08d46f10d6102bd6e3f258ca5ac880b020ea259/mdistiller/dataset/imagenet.py#L98
https://github.com/megvii-research/mdistiller/blob/a08d46f10d6102bd6e3f258ca5ac880b020ea259/mdistiller/dataset/imagenet.py#L109
https://github.com/megvii-research/mdistiller/blob/a08d46f10d6102bd6e3f258ca5ac880b020ea259/mdistiller/dataset/imagenet.py#L118
https://github.com/megvii-research/mdistiller/blob/a08d46f10d6102bd6e3f258ca5ac880b020ea259/mdistiller/dataset/tiny_imagenet.py#L90
https://github.com/megvii-research/mdistiller/blob/a08d46f10d6102bd6e3f258ca5ac880b020ea259/mdistiller/dataset/tiny_imagenet.py#L93
https://github.com/megvii-research/mdistiller/blob/a08d46f10d6102bd6e3f258ca5ac880b020ea259/mdistiller/dataset/tiny_imagenet.py#L116
https://github.com/megvii-research/mdistiller/blob/a08d46f10d6102bd6e3f258ca5ac880b020ea259/mdistiller/dataset/tiny_imagenet.py#L119

====================================
https://github.com/sutkarsh/flow_inv
====================================

Found 6 times
DataLoader(traindata, batch_size=batch_size)
DataLoader(testdata, batch_size=batch_size)
torch.utils.data.DataLoader(trainset, batch_size=args.optimizer.bs)
torch.utils.data.DataLoader(testset, batch_size=args.optimizer.bs)
torch.utils.data.DataLoader(trainset, batch_size=args.optimizer.bs)
torch.utils.data.DataLoader(testset, batch_size=args.optimizer.bs)
https://github.com/sutkarsh/flow_inv/blob/d7d2792164884469cf782abf66e0681c68c8d270/data/generate_data.py#L149
https://github.com/sutkarsh/flow_inv/blob/d7d2792164884469cf782abf66e0681c68c8d270/data/generate_data.py#L151
https://github.com/sutkarsh/flow_inv/blob/d7d2792164884469cf782abf66e0681c68c8d270/experiments/rotgen.py#L473
https://github.com/sutkarsh/flow_inv/blob/d7d2792164884469cf782abf66e0681c68c8d270/experiments/rotgen.py#L474
https://github.com/sutkarsh/flow_inv/blob/d7d2792164884469cf782abf66e0681c68c8d270/experiments/train_mario.py#L431
https://github.com/sutkarsh/flow_inv/blob/d7d2792164884469cf782abf66e0681c68c8d270/experiments/train_mario.py#L432

==========================================
https://github.com/princeton-vl/Oriented1D
==========================================

Found 4 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            #batch_size=int(1.5 * args.batch_size),
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(dataset, sampler=sampler_val,
        batch_size=batch_size, num_workers=4, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler_val,
        batch_size=1,
        num_workers=1,
        pin_memory=True,
        drop_last=False,
    )
https://github.com/princeton-vl/Oriented1D/blob/8aa81682eb16bb497408929755fe704f226f77e1/main.py#L249
https://github.com/princeton-vl/Oriented1D/blob/8aa81682eb16bb497408929755fe704f226f77e1/main.py#L258
https://github.com/princeton-vl/Oriented1D/blob/8aa81682eb16bb497408929755fe704f226f77e1/utils.py#L63
https://github.com/princeton-vl/Oriented1D/blob/8aa81682eb16bb497408929755fe704f226f77e1/analysis/visualize_erf.py#L79

=========================================
https://github.com/mjq11302010044/Real-CE
=========================================

Found 2 times
torch.utils.data.DataLoader(**dataloader_args)
torch.utils.data.DataLoader(dataset=dataset, batch_size=1, shuffle=False, num_workers=0)
https://github.com/mjq11302010044/Real-CE/blob/14b83bed78c64819653c63d76ccd0b46cc3ee5ca/basicsr/data/__init__.py#L94
https://github.com/mjq11302010044/Real-CE/blob/14b83bed78c64819653c63d76ccd0b46cc3ee5ca/tests/test_models/test_sr_model.py#L137

============================================================
https://github.com/AlibabaResearch/AdvancedLiterateMachinery
============================================================

Found 28 times
torch.utils.data.DataLoader(
      Dataset(opt, 'val'), 
      batch_size=1, 
      shuffle=False,
      num_workers=1,
      pin_memory=True
  )
torch.utils.data.DataLoader(
      Dataset(opt, 'train'), 
      batch_size=opt.batch_size, 
      shuffle=True,
      num_workers=opt.num_workers,
      pin_memory=True,
      drop_last=True
  )
torch.utils.data.DataLoader(
    PrefetchDataset(opt, dataset, detector.pre_process), 
    batch_size=1, shuffle=False, num_workers=1, pin_memory=True)
torch.utils.data.DataLoader(
                _dataset, batch_size=_batch_size,
                shuffle=True,
                num_workers=int(opt.workers),
                collate_fn=_AlignCollate, pin_memory=True)
torch.utils.data.DataLoader(
        demo_data, batch_size=opt.batch_size,
        shuffle=False,
        num_workers=int(opt.workers),
        collate_fn=AlignCollate_demo, pin_memory=True)
torch.utils.data.DataLoader(
            eval_data, batch_size=evaluation_batch_size,
            shuffle=False,
            num_workers=int(opt.workers),
            collate_fn=AlignCollate_evaluation, pin_memory=True)
torch.utils.data.DataLoader(
        valid_dataset, batch_size=opt.batch_size,
        shuffle=True,  # 'True' to check training progress with validation function.
        num_workers=int(opt.workers),
        collate_fn=AlignCollate_valid, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=opt.batch_size,
        shuffle=True, 
        num_workers=int(opt.workers), pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
                _dataset, batch_size=_batch_size,
                sampler=train_sampler,
                num_workers=int(opt.workers),
                collate_fn=_AlignCollate, pin_memory=True)
torch.utils.data.DataLoader(
            eval_data, batch_size=evaluation_batch_size,
            shuffle=False,
            num_workers=int(opt.workers),
            collate_fn=AlignCollate_evaluation, pin_memory=True)
torch.utils.data.DataLoader(
                eval_data, batch_size=opt.batch_size,
                shuffle=False,
                num_workers=int(opt.workers),
                collate_fn=AlignCollate_evaluation, pin_memory=True)
torch.utils.data.DataLoader(
        valid_dataset, batch_size=opt.batch_size,
        shuffle=True,  # 'True' to check training progress with validation function.
        num_workers=int(opt.workers),
        collate_fn=AlignCollate_valid, pin_memory=True)
torch.utils.data.DataLoader(train_dataset, batch_size=cfg["batch_size"], \
                                                    num_workers=cfg["num_workers"], pin_memory=True, sampler=train_sampler, collate_fn=train_dataset.collate)
torch.utils.data.DataLoader(val_dataset, batch_size=cfg["batch_size"], \
                                                    num_workers=cfg["num_workers"], pin_memory=True, sampler=val_sampler, collate_fn=val_dataset.collate)
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/DocumentUnderstanding/LORE-TSR/src/main.py#L58
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/DocumentUnderstanding/LORE-TSR/src/main.py#L71
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/DocumentUnderstanding/LORE-TSR/src/test.py#L146
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LevOCR/dataset.py#L66
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LevOCR/demo_imgs.py#L152
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LevOCR/eval.py#L47
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LevOCR/train_final_dist.py#L60
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LevOCR/train_language_dist.py#L52
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/MGP-STR/dataset.py#L77
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/MGP-STR/test_final.py#L70
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/MGP-STR/test_final.py#L378
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/MGP-STR/train_final_dist.py#L52
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/VLPT-STD/main.py#L119
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/VLPT-STD/main.py#L124

==================================
https://github.com/TongkunGuan/CCD
==================================

Found 6 times
torch.utils.data.DataLoader(
            test_ds,
            batch_size=config.dataset_test_batch_size,
            shuffle=False,
            num_workers=config.dataset_num_workers,
            collate_fn=collate_fn_filter_none,
            pin_memory=config.dataset_pin_memory,
            drop_last=False,
        )
torch.utils.data.DataLoader(
        train_ds,
        sampler=sampler,
        batch_size=config.batch_size_per_gpu,
        num_workers=config.dataset_num_workers,
        collate_fn=collate_fn_filter_none,
        pin_memory=config.dataset_pin_memory,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        train_ds,
        batch_size=config.dataset_train_batch_size,
        shuffle=True,
        num_workers=config.dataset_num_workers,
        collate_fn=collate_fn_filter_none,
        pin_memory=config.dataset_pin_memory,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        valid_ds,
        batch_size=config.dataset_valid_batch_size,
        shuffle=True,
        num_workers=config.dataset_num_workers,
        collate_fn=collate_fn_filter_none,
        pin_memory=config.dataset_pin_memory,
        drop_last=True,
    )
torch.utils.data.DataLoader(
            test_ds,
            batch_size=config.dataset_test_batch_size,
            shuffle=False,
            num_workers=config.dataset_num_workers,
            collate_fn=collate_fn_filter_none,
            pin_memory=config.dataset_pin_memory,
            drop_last=False,
        )
torch.utils.data.DataLoader(
            _dataset,
            batch_size=self.opt.batch_size,
            shuffle=True,
            num_workers=int(self.opt.workers),
            collate_fn=_AlignCollate,
            pin_memory=False,
            drop_last=False,
        )
https://github.com/TongkunGuan/CCD/blob/b6a2742f5b1161a3609db809d6bc8971022c2afe/test.py#L137
https://github.com/TongkunGuan/CCD/blob/b6a2742f5b1161a3609db809d6bc8971022c2afe/train.py#L436
https://github.com/TongkunGuan/CCD/blob/b6a2742f5b1161a3609db809d6bc8971022c2afe/train_finetune.py#L135
https://github.com/TongkunGuan/CCD/blob/b6a2742f5b1161a3609db809d6bc8971022c2afe/train_finetune.py#L144
https://github.com/TongkunGuan/CCD/blob/b6a2742f5b1161a3609db809d6bc8971022c2afe/train_finetune.py#L156
https://github.com/TongkunGuan/CCD/blob/b6a2742f5b1161a3609db809d6bc8971022c2afe/Dino/dataset/dataset1.py#L60

========================================
https://github.com/mxin262/ESTextSpotter
========================================

Found 7 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, 1, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
torch.utils.data.DataLoader(
            dataset,
            sampler=sampler,
            num_workers=num_workers,
            batch_sampler=None,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=trivial_batch_collator,
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
        dataset,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
        dataset,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=dataset_cfg.IMAGE_LOADER.BATCH_SIZE,
        sampler=training_sampler,
        num_workers=dataset_cfg.IMAGE_LOADER.NUM_WORKERS,
        collate_fn=trivial_batch_collator,
    )
https://github.com/mxin262/ESTextSpotter/blob/21717310bfb9b32108e5124206dcaf66d90a5e34/main.py#L209
https://github.com/mxin262/ESTextSpotter/blob/21717310bfb9b32108e5124206dcaf66d90a5e34/main.py#L211
https://github.com/mxin262/ESTextSpotter/blob/21717310bfb9b32108e5124206dcaf66d90a5e34/detectron2-0.2.1/detectron2/data/build.py#L277
https://github.com/mxin262/ESTextSpotter/blob/21717310bfb9b32108e5124206dcaf66d90a5e34/detectron2-0.2.1/detectron2/data/build.py#L290
https://github.com/mxin262/ESTextSpotter/blob/21717310bfb9b32108e5124206dcaf66d90a5e34/detectron2-0.2.1/detectron2/data/build.py#L393
https://github.com/mxin262/ESTextSpotter/blob/21717310bfb9b32108e5124206dcaf66d90a5e34/detectron2-0.2.1/projects/DensePose/densepose/data/build.py#L405
https://github.com/mxin262/ESTextSpotter/blob/21717310bfb9b32108e5124206dcaf66d90a5e34/detectron2-0.2.1/projects/DensePose/densepose/data/build.py#L539

==================================
https://github.com/awei669/VQ-Font
==================================

Found 3 times
DataLoader(dset, batch_size=cfg.batch_size, batch_sampler=None,
                        collate_fn=dset.collate_fn, **kwargs)
DataLoader(dset, batch_size=cfg.batch_size,
                        collate_fn=dset.collate_fn, **kwargs)
DataLoader(dset, batch_size=cfg.batch_size,
                        collate_fn=dset.collate_fn, **kwargs)
https://github.com/awei669/VQ-Font/blob/17303fe60b38a6b0ea3ba6935612ad6c1c5839d3/datasets/__init__.py#L23
https://github.com/awei669/VQ-Font/blob/17303fe60b38a6b0ea3ba6935612ad6c1c5839d3/datasets/__init__.py#L49
https://github.com/awei669/VQ-Font/blob/17303fe60b38a6b0ea3ba6935612ad6c1c5839d3/datasets/__init__.py#L95

===================================
https://github.com/DS4SD/MolGrapher
===================================

Found 1 times
DataLoader(
                dataset, 
                batch_size = self.config["batch_size"], 
                num_workers = self.config["nb_workers"], 
                shuffle = False, 
                prefetch_factor = 2,
                pin_memory = True,  
                persistent_workers = True,
                drop_last = False,
                collate_fn = dataset.collate_fn
            )
https://github.com/DS4SD/MolGrapher/blob/282615be8b0343c9d63f35be456d4469ce6f6a10/molgrapher/data_modules/data_module.py#L752

================================================
https://github.com/snap-research/EfficientFormer
================================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/snap-research/EfficientFormer/blob/d01da426243a38303d0a35d01fc928b0e37d38d3/main.py#L221
https://github.com/snap-research/EfficientFormer/blob/d01da426243a38303d0a35d01fc928b0e37d38d3/main.py#L229

==================================================
https://github.com/WISION-Lab/eventful-transformer
==================================================

Found 7 times
DataLoader(vid_item, batch_size=1)
DataLoader(vid_item, batch_size=1)
DataLoader(data, batch_size=1)
DataLoader(data, batch_size=1)
DataLoader(data, batch_size=1, drop_last=False)
DataLoader(
        train_data, batch_size=config["train_batch_size"], shuffle=True
    )
DataLoader(val_data, batch_size=config["val_batch_size"])
https://github.com/WISION-Lab/eventful-transformer/blob/fc53c2cf7112c7dc7ec12461bf9e4674f8727732/scripts/evaluate/vitdet_vid.py#L25
https://github.com/WISION-Lab/eventful-transformer/blob/fc53c2cf7112c7dc7ec12461bf9e4674f8727732/scripts/time/vitdet_vid.py#L25
https://github.com/WISION-Lab/eventful-transformer/blob/fc53c2cf7112c7dc7ec12461bf9e4674f8727732/scripts/time/vivit_epic_kitchens.py#L21
https://github.com/WISION-Lab/eventful-transformer/blob/fc53c2cf7112c7dc7ec12461bf9e4674f8727732/utils/evaluate.py#L27
https://github.com/WISION-Lab/eventful-transformer/blob/fc53c2cf7112c7dc7ec12461bf9e4674f8727732/utils/spatial.py#L24
https://github.com/WISION-Lab/eventful-transformer/blob/fc53c2cf7112c7dc7ec12461bf9e4674f8727732/utils/train.py#L18
https://github.com/WISION-Lab/eventful-transformer/blob/fc53c2cf7112c7dc7ec12461bf9e4674f8727732/utils/train.py#L21

=================================
https://github.com/BICLab/ASA-SNN
=================================

Found 2 times
torch.utils.data.DataLoader(
        args.train_dataset,
        batch_size=args.batch_size_train,
        shuffle=True,
        drop_last=args.drop_last,
        num_workers=args.num_work,
        pin_memory=args.pip_memory,
    )
torch.utils.data.DataLoader(
        args.test_dataset,
        batch_size=args.batch_size_test,
        shuffle=False,
        drop_last=args.drop_last,
        num_workers=args.num_work,
        pin_memory=args.pip_memory,
    )
https://github.com/BICLab/ASA-SNN/blob/c68b2d0211eb481c47af9c43fc2107f057a6066d/dataset.py#L48
https://github.com/BICLab/ASA-SNN/blob/c68b2d0211eb481c47af9c43fc2107f057a6066d/dataset.py#L56

================================================
https://github.com/samsung/Achievement-based-MTL
================================================

Found 2 times
DataLoader(train_set, args.batch_size, shuffle=(train_sampler is None), num_workers=args.num_workers,
                              drop_last=True, sampler=train_sampler, pin_memory=True, collate_fn=collate_fn)
DataLoader(test_set, args.batch_size, shuffle=False, num_workers=args.num_workers,
                                       sampler=test_sampler, collate_fn=collate_fn, pin_memory=True)
https://github.com/samsung/Achievement-based-MTL/blob/4e6f39b7342260f320b8f9dcc4cb69b32c4d78d5/core/data/utils.py#L85
https://github.com/samsung/Achievement-based-MTL/blob/4e6f39b7342260f320b8f9dcc4cb69b32c4d78d5/core/data/utils.py#L92

=====================================
https://github.com/enyac-group/evol-q
=====================================

Found 2 times
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.val_batchsize,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
            calib_dataset,
            batch_size=args.calib_batchsize,
            shuffle=False,
            num_workers=args.num_workers,
            pin_memory=True,
            drop_last=True,
        )
https://github.com/enyac-group/evol-q/blob/9a39a35c978f4749ae72ac844e1d9b65527d935c/main.py#L103
https://github.com/enyac-group/evol-q/blob/9a39a35c978f4749ae72ac844e1d9b65527d935c/main.py#L119

============================================
https://github.com/huawei-noah/noah-research
============================================

Found 85 times
DataLoader(detection_dataset, batch_size=det_batch_size, num_workers=0)
DataLoader(mocap_db, batch_size=min(args.batch_size, len(detection_all)), num_workers=0)
torch.utils.data.DataLoader(inference_dataset, batch_size=1, shuffle=False,
                                                            num_workers=10)
torch.utils.data.DataLoader(training_dataset, batch_size=1, shuffle=True,
                                                       num_workers=6)
torch.utils.data.DataLoader(testing_dataset, batch_size=1, shuffle=False,
                                                      num_workers=6)
torch.utils.data.DataLoader(validation_dataset, batch_size=1,
                                                         shuffle=False,
                                                         num_workers=6)
torch.utils.data.DataLoader(inference_dataset, batch_size=1, shuffle=False,
                                                            num_workers=6)
torch.utils.data.DataLoader(training_dataset, batch_size=1, shuffle=True,
                                                       num_workers=6)
torch.utils.data.DataLoader(testing_dataset, batch_size=1, shuffle=False,
                                                      num_workers=6)
torch.utils.data.DataLoader(validation_dataset, batch_size=1,
                                                         shuffle=False,
                                                         num_workers=6)
DataLoader(self._train_dataset,
                                     batch_size=self.config.training.train_batch_size,
                                     collate_fn=self.collate_fn, shuffle=False,
                                     num_workers=0)
DataLoader(
            self._train_dataset, **data_loader_params
        )
DataLoader(
            self._val_dataset, batch_size=self.config.training.val_batch_size,
            collate_fn=self.collate_fn, shuffle=False,
            num_workers=self.config.training.num_workers
        )
DataLoader(
            self._test_dataset, batch_size=self.config.training.val_batch_size,
            collate_fn=self.collate_fn, shuffle=False,
            num_workers=self.config.training.num_workers
        )
DataLoader(
            self._train_dataset, **data_loader_params
        )
DataLoader(
            self._val_dataset, batch_size=self.config.training.val_batch_size,
            collate_fn=self.collate_fn, shuffle=False,
            num_workers=self.config.training.num_workers
        )
DataLoader(
            self._test_dataset, batch_size=self.config.training.val_batch_size,
            collate_fn=self.collate_fn, shuffle=False,
            num_workers=self.config.training.num_workers
        )
DataLoader(self._train_dataset, batch_size=self.config.batch_size,
                                     collate_fn=self.collate_fn, shuffle=False, num_workers=0)
DataLoader(
            self._train_dataset, **data_loader_params
        )
DataLoader(self._val_dataset, collate_fn=self.collate_fn,
                          batch_size=self.config.batch_size,
                          shuffle=False, num_workers=self.config.n_workers)
DataLoader(self._test_dataset, collate_fn=self.collate_fn,
                          batch_size=self.config.batch_size,
                          shuffle=False, num_workers=self.config.n_workers)
DataLoader(
        raw_datasets["train"],
        batch_sampler=sampler,
        collate_fn=data_collator,
    )
DataLoader(
        raw_datasets["validation"],
        collate_fn=data_collator,
        batch_size=args.per_device_eval_batch_size,
    )
DataLoader(
        train_dataset,
        shuffle=True,
        collate_fn=data_collator,
        batch_size=args.per_device_train_batch_size,
    )
DataLoader(
        eval_dataset,
        collate_fn=data_collator,
        batch_size=args.per_device_eval_batch_size,
    )
DataLoader(
                predict_dataset[lang],
                collate_fn=data_collator,
                batch_size=args.per_device_eval_batch_size,
            )
DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(train_dataset, sampler=lr_train_sampler, batch_size=lr_train_batch_size)
DataLoader(lr_eval_dataset, sampler=lr_eval_sampler, batch_size=lr_eval_batch_size)
DataLoader(eval_dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)
DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(train_dataset, sampler=lr_train_sampler, batch_size=lr_train_batch_size)
DataLoader(lr_eval_dataset, sampler=lr_eval_sampler, batch_size=lr_eval_batch_size)
DataLoader(eval_dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)
torch.utils.data.DataLoader(train_dataset, batch_size=args.per_gpu_train_batch_size,
                                                   sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(raw_train_dataset, batch_size=16,
                                                   sampler=raw_train_sampler, drop_last=False)
torch.utils.data.DataLoader(train_dataset, batch_size=args.per_gpu_train_batch_size,
                                                   sampler=train_sampler, drop_last=False)
torch.utils.data.DataLoader(train_dataset, batch_size=args.per_gpu_train_batch_size,
                                                           sampler=train_sampler, drop_last=False)
DataLoader(
                dataset=self.datasets[k],
                batch_size=self.config['batch_size'] if 'train' in k else self.config['eval_batch_size'],
                sampler=data_sampler,
                collate_fn=self.processor.collate_fn
            )
DataLoader(dataset=self.datasets['train'],
                                batch_sampler=sampler,
                                collate_fn=self.processor.collate_fn)
DataLoader(dataset=self.datasets['train'],
                                batch_sampler=sampler,
                                collate_fn=self.processor.collate_fn)
DataLoader(
            dataset=MSMODataset(
                data=data,
                dataset_path=self.args["data_path"],
                image_preprocess=self.image_preprocess,
                max_sent_num=self.args["max_sent_num"],
                max_image_num=self.args["max_image_num"],
                image_references=image_references,
            ),
            batch_size=batch_size,
            shuffle=shuffle,
            drop_last=drop_last,
            pin_memory=pin_memory,
            num_workers=self.args["num_workers"],
            collate_fn=self._collate_fn,
        )
DataLoader(self.train_dataset, sampler=train_sampler, batch_size=self.args.train_batch_size)
DataLoader(dataset, sampler=eval_sampler, batch_size=self.args.eval_batch_size)
DataLoader(
        train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(eval_dataset, sampler=eval_sampler, batch_size=eval_bs_per_gpu)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(valdataset, **dataloader_kwargs)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=True,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset=train_data, batch_size=params.batch_size,
                                                shuffle=True, drop_last=False)
torch.utils.data.DataLoader(dataset=test_data, batch_size=params.batch_size,
                                               shuffle=False, drop_last=False)
torch.utils.data.DataLoader(dataset=train_data, batch_size=params.batch_size,
                                                shuffle=True, drop_last=False)
torch.utils.data.DataLoader(dataset=test_data, batch_size=params.batch_size,
                                               shuffle=False, drop_last=False)
DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=num_workers,
                              pin_memory=True, drop_last=True)
DataLoader(validset, batch_size=1, shuffle=False, num_workers=num_workers, pin_memory=True)
torch.utils.data.DataLoader(
            data.IQAsinglewRef(args.data_dir, val_transforms,
                               df_path=df_path, loader=img_loader),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            data.IQAsinglewRef(args.data_dir, val_transforms,
                               df_path=df_path, loader=img_loader),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            data.PIPALsinglewRef(args.data_dir, val_transforms,
                               df_path=df_path, split='all', loader=img_loader),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            data.IQAsinglewRef(args.data_dir, val_transforms,
                               df_path=df_path, loader=img_loader),
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
DataLoader(training_set, **params)
DataLoader(validation_set, **params)
DataLoader(no_dupl_test_set, **params)
DataLoader(full_test_set, **params)
DataLoader(training_set, **params)
DataLoader(validation_set, **params)
DataLoader(no_dupl_test_set, **params)
DataLoader(full_test_set, **params)
data.DataLoader(
        train_dataset,
        shuffle=True,
        batch_size=args.batch_size,
        collate_fn=train_dataset.collate_fn,
    )
data.DataLoader(
        train_dataset,
        shuffle=False,
        batch_size=args.batch_size,
        collate_fn=train_dataset.collate_fn,
    )
data.DataLoader(
        val_dataset,
        shuffle=False,
        batch_size=args.batch_size,
        collate_fn=val_dataset.collate_fn,
    )
data.DataLoader(
        test_dataset,
        shuffle=False,
        batch_size=args.batch_size,
        collate_fn=val_dataset.collate_fn,
    )
DataLoader(
        dataset=theDataset, 
        batch_size = 32,
        num_workers = 2,
        shuffle = False,
        drop_last = True)
DataLoader(
        dataset = theDataset,
        batch_size = args.train_batch_size,
        shuffle = False,
        sampler = theSampler,
        num_workers = args.num_loading_workers,
        drop_last = True
        )
DataLoader(
            dataset, batch_size=32, collate_fn=dataset.collate, num_workers=8
        )
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=self.max_sentences,
            collate_fn=self.collate_fn,
            num_workers=self.num_workers,
            timeout=self.timeout,
            worker_init_fn=worker_init_fn,
        )
torch.utils.data.DataLoader(
            self.dataset,
            collate_fn=self.collate_fn,
            batch_sampler=batches[offset:],
            num_workers=self.num_workers,
            timeout=self.timeout,
        )
torch.utils.data.DataLoader(
            backtranslation_dataset,
            batch_size=2,
            collate_fn=backtranslation_dataset.collater,
        )
torch.utils.data.DataLoader(
            dataset=language_pair_dataset,
            batch_size=2,
            collate_fn=language_pair_dataset.collater,
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        collate_fn=(lambda samples: collate(samples, padding_idx, eos_idx)),
    )
DataLoader(self.train_dataset, sampler=train_sampler, batch_size=self.args.train_batch_size)
DataLoader(dataset, sampler=eval_sampler, batch_size=self.args.eval_batch_size)
DataLoader(dataset, sampler=eval_sampler, batch_size=self.args.eval_batch_size)
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/CLIFF/demo.py#L81
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/CLIFF/demo.py#L115
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/CURL/main.py#L105
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/CURL/main.py#L144
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/CURL/main.py#L146
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/CURL/main.py#L148
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/DeepLPF/main.py#L133
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/DeepLPF/main.py#L171
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/DeepLPF/main.py#L173
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/DeepLPF/main.py#L175
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/Maha_OOD/lib/modules/classification.py#L57
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/Maha_OOD/lib/modules/classification.py#L123
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/Maha_OOD/lib/modules/classification.py#L129
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/Maha_OOD/lib/modules/classification.py#L137
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/Maha_OOD/lib/modules/likelihood_ratio.py#L219
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/Maha_OOD/lib/modules/likelihood_ratio.py#L225
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/Maha_OOD/lib/modules/likelihood_ratio.py#L233
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/Maha_OOD/lib/modules/transformer_classifier.py#L122
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/Maha_OOD/lib/modules/transformer_classifier.py#L217
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/Maha_OOD/lib/modules/transformer_classifier.py#L222
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/Maha_OOD/lib/modules/transformer_classifier.py#L227
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/EntityCS/cs_pretrain/main_lm_no_trainer.py#L561
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/EntityCS/cs_pretrain/main_lm_no_trainer.py#L566
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/EntityCS/slot_filling/main_joint_intent_sf.py#L601
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/EntityCS/slot_filling/main_joint_intent_sf.py#L607
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/EntityCS/slot_filling/main_joint_intent_sf.py#L938
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/FreeTransfer-X/third_party/run_distill.py#L212
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/FreeTransfer-X/third_party/run_distill.py#L250
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/FreeTransfer-X/third_party/run_distill.py#L255
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/FreeTransfer-X/third_party/run_distill.py#L811
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/FreeTransfer-X/third_party/run_task.py#L169
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/FreeTransfer-X/third_party/run_task.py#L197
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/FreeTransfer-X/third_party/run_task.py#L202
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/FreeTransfer-X/third_party/run_task.py#L451
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/GenerateRank/train_gen.py#L114
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/GenerateRank/train_gen_rank.py#L176
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/GenerateRank/train_gen_rank.py#L225
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/GenerateRank/train_gen_rank.py#L399
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/TD4CL/source/trainers/base_trainer.py#L149
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/TD4CL/source/trainers/curric_trainer.py#L47
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/TD4CL/source/trainers/curric_trainer.py#L114
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/UniMS/unims/datamodule.py#L290
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/cross_aligner/train.py#L55
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/cross_aligner/train.py#L274
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/dylex/main.py#L39
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/NLP/dylex/main.py#L135
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/RAOD/cfg_small.py#L164
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/RAOD/yolox/exp/yolox_base.py#L215
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/S3-Training/main.py#L123
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/S3-Training/main.py#L127
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/S3-Training/pre-trained-ckpt-evaluation/main_eval.py#L221
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/S3-Training/pre-trained-ckpt-evaluation/main_eval.py#L225
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/TokenFusion/image2image_translation/eval.py#L98
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/TokenFusion/image2image_translation/eval.py#L103
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/TokenFusion/image2image_translation/main.py#L98
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/TokenFusion/image2image_translation/main.py#L103
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/TokenFusion/semantic_segmentation/main.py#L195
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/TokenFusion/semantic_segmentation/main.py#L197
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/aipq/mindspore/eval.py#L154
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/aipq/torch/eval.py#L170
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/aipq/torch/eval.py#L182
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/aipq/torch/eval.py#L195
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/conv_graph/multiwoz/evaluation.py#L104
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/conv_graph/multiwoz/evaluation.py#L106
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/conv_graph/multiwoz/evaluation.py#L108
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/conv_graph/multiwoz/evaluation.py#L110
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/conv_graph/self_play/evaluation.py#L107
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/conv_graph/self_play/evaluation.py#L109
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/conv_graph/self_play/evaluation.py#L111
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/conv_graph/self_play/evaluation.py#L113
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/freegbdt/train_base_model.py#L145
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/freegbdt/train_base_model.py#L151
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/freegbdt/train_base_model.py#L157
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/freegbdt/train_base_model.py#L163
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/noahime/PERT/PinyinCharDataProcesser.py#L112
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/noahime/PERT/Trainer.py#L128
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/noahnmt/multiuat/fairseq/examples/wav2vec/vq-wav2vec_featurize.py#L207
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/noahnmt/multiuat/fairseq/fairseq/data/iterators.py#L232
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/noahnmt/multiuat/fairseq/fairseq/data/iterators.py#L488
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/noahnmt/multiuat/fairseq/tests/test_backtranslation_dataset.py#L78
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/noahnmt/multiuat/fairseq/tests/test_noising.py#L444
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/noahnmt/multiuat/fairseq/tests/utils.py#L52
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/xero_align/train.py#L55
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/xero_align/train.py#L144
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/xero_align/train.py#L255

==================================
https://github.com/UCDvision/PRANC
==================================

Found 12 times
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=False, sampler = train_sampler, pin_memory=True)
torch.utils.data.DataLoader(testset, batch_size=args.batch_size,  shuffle=False, sampler=test_sampler, pin_memory=True)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_worker, sampler=train_sampler, pin_memory=True)
torch.utils.data.DataLoader(testset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_worker, sampler=test_sampler, pin_memory=True)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_worker, sampler=train_sampler, pin_memory=True)
torch.utils.data.DataLoader(testset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_worker, sampler=test_sampler, pin_memory=True)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_worker, sampler=train_sampler, pin_memory=True)
torch.utils.data.DataLoader(testset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_worker, sampler=test_sampler, pin_memory=True)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_worker, sampler=train_sampler, pin_memory=True)
torch.utils.data.DataLoader(testset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_worker, sampler=test_sampler, pin_memory=True)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=64, pin_memory=True)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=True, num_workers=64, pin_memory=True)
https://github.com/UCDvision/PRANC/blob/272dc4dc97d693ee7b53d061cf7831c3c9120de5/dataloader.py#L13
https://github.com/UCDvision/PRANC/blob/272dc4dc97d693ee7b53d061cf7831c3c9120de5/dataloader.py#L17
https://github.com/UCDvision/PRANC/blob/272dc4dc97d693ee7b53d061cf7831c3c9120de5/dataloader.py#L36
https://github.com/UCDvision/PRANC/blob/272dc4dc97d693ee7b53d061cf7831c3c9120de5/dataloader.py#L40
https://github.com/UCDvision/PRANC/blob/272dc4dc97d693ee7b53d061cf7831c3c9120de5/dataloader.py#L58
https://github.com/UCDvision/PRANC/blob/272dc4dc97d693ee7b53d061cf7831c3c9120de5/dataloader.py#L62
https://github.com/UCDvision/PRANC/blob/272dc4dc97d693ee7b53d061cf7831c3c9120de5/dataloader.py#L80
https://github.com/UCDvision/PRANC/blob/272dc4dc97d693ee7b53d061cf7831c3c9120de5/dataloader.py#L84
https://github.com/UCDvision/PRANC/blob/272dc4dc97d693ee7b53d061cf7831c3c9120de5/dataloader.py#L104
https://github.com/UCDvision/PRANC/blob/272dc4dc97d693ee7b53d061cf7831c3c9120de5/dataloader.py#L108
https://github.com/UCDvision/PRANC/blob/272dc4dc97d693ee7b53d061cf7831c3c9120de5/main_ngpu.py#L57
https://github.com/UCDvision/PRANC/blob/272dc4dc97d693ee7b53d061cf7831c3c9120de5/main_ngpu.py#L95

==============================
https://github.com/apple/ml-dr
==============================

Found 4 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=config["batch_size"],
        shuffle=(train_sampler is None),
        drop_last=False,
        num_workers=config["workers"],
        pin_memory=config["pin_memory"],
        sampler=train_sampler,
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=config["batch_size"],
        shuffle=(train_sampler is None),
        num_workers=config["workers"],
        pin_memory=config["pin_memory"],
        persistent_workers=config['persistent_workers'],
        sampler=train_sampler,
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=config["batch_size"],
        shuffle=False,
        num_workers=config["workers"],
        pin_memory=config["pin_memory"],
        persistent_workers=config['persistent_workers'],
        sampler=val_sampler,
    )
torch.utils.data.DataLoader(
            aux_val_dataset,
            batch_size=config["batch_size"],
            shuffle=False,
            num_workers=config["workers"],
            pin_memory=True,
        )
https://github.com/apple/ml-dr/blob/a21113c779714b68bcc8b6518f2a4ad149b29f00/reinforce.py#L212
https://github.com/apple/ml-dr/blob/a21113c779714b68bcc8b6518f2a4ad149b29f00/train.py#L300
https://github.com/apple/ml-dr/blob/a21113c779714b68bcc8b6518f2a4ad149b29f00/train.py#L310
https://github.com/apple/ml-dr/blob/a21113c779714b68bcc8b6518f2a4ad149b29f00/trainers.py#L428

==============================
https://github.com/zkkli/I-ViT
==============================

Found 2 times
torch.utils.data.DataLoader(
            dataset_train, sampler=sampler_train,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=True,
        )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
https://github.com/zkkli/I-ViT/blob/c67ec91125294d917d67e1dc09c84f7e3746d5fd/utils/data_utils.py#L24
https://github.com/zkkli/I-ViT/blob/c67ec91125294d917d67e1dc09c84f7e3746d5fd/utils/data_utils.py#L32

=======================================
https://github.com/lilujunai/EMQ-series
=======================================

Found 48 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=workers,
        pin_memory=True)
torch.utils.data.DataLoader(
        datasets.ImageFolder(
            valdir,
            transforms.Compose([
                transforms.Resize(256),
                transforms.CenterCrop(input_size),
                transforms.ToTensor(),
                normalize,
            ])),
        batch_size=batch_size,
        shuffle=False,
        num_workers=workers,
        pin_memory=True)
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=args.batch_size,
            shuffle=(train_sampler is None),
            num_workers=args.workers,
            pin_memory=True,
            sampler=train_sampler)
torch.utils.data.DataLoader(
            partial_train_dataset,
            batch_size=args.batch_size,
            shuffle=(train_sampler is None),
            num_workers=args.workers,
            pin_memory=True,
            sampler=train_sampler)
torch.utils.data.DataLoader(
        datasets.ImageFolder(
            valdir,
            transforms.Compose([
                transforms.Resize(test_resolution[0]),
                transforms.CenterCrop(test_resolution[1]),
                transforms.ToTensor(),
                normalize,
            ])),
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers,
        pin_memory=True)
DataLoader(
        dataset, batch_size=batch_size, shuffle=False, num_workers=32)
DataLoader(
            test_dataset, batch_size=batch_size, shuffle=False, num_workers=32)
DataLoader(
            test_dataset, batch_size=batch_size, shuffle=False, num_workers=32)
torch.utils.data.DataLoader(
            partial_train_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=32,
            pin_memory=True)
DataLoader(
        train_set,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers)
DataLoader(
        test_set,
        batch_size=int(batch_size / 2),
        shuffle=False,
        num_workers=int(num_workers / 2))
DataLoader(
        splited_train_dataset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers)
DataLoader(
        test_set,
        batch_size=int(batch_size / 2),
        shuffle=False,
        num_workers=int(num_workers / 2))
DataLoader(
        train_set,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers)
DataLoader(
        test_set,
        batch_size=int(batch_size / 2),
        shuffle=False,
        num_workers=int(num_workers / 2))
DataLoader(
        train_set,
        batch_size=batch_size,
        shuffle=False,  # need to be False when use sampler
        num_workers=num_workers,
        pin_memory=True,
        sampler=SubsetRandomSampler(indices[:split]))
DataLoader(
        train_set,
        batch_size=int(batch_size / 2),
        shuffle=False,
        num_workers=int(num_workers / 2),
        pin_memory=True,
        sampler=SubsetRandomSampler(indices[split:num_train]))
DataLoader(
        train_set,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers)
DataLoader(
        test_set,
        batch_size=int(batch_size / 2),
        shuffle=False,
        num_workers=int(num_workers / 2))
DataLoader(
        splited_train_dataset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers)
DataLoader(
        test_set,
        batch_size=int(batch_size / 2),
        shuffle=False,
        num_workers=int(num_workers / 2))
DataLoader(
        train_set,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers)
DataLoader(
        test_set,
        batch_size=int(batch_size / 2),
        shuffle=False,
        num_workers=int(num_workers / 2))
DataLoader(
        train_set,
        batch_size=batch_size,
        shuffle=False,  # need to be False when use sampler
        num_workers=num_workers,
        pin_memory=True,
        sampler=SubsetRandomSampler(indices[:split]))
DataLoader(
        train_set,
        batch_size=int(batch_size / 2),
        shuffle=False,
        num_workers=int(num_workers / 2),
        pin_memory=True,
        sampler=SubsetRandomSampler(indices[split:num_train]))
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=workers,
        pin_memory=True)
torch.utils.data.DataLoader(
        datasets.ImageFolder(
            valdir,
            transforms.Compose([
                transforms.Resize(first_resize),
                transforms.CenterCrop(input_size),
                transforms.ToTensor(),
                normalize,
            ])),
        batch_size=batch_size,
        shuffle=False,
        num_workers=workers,
        pin_memory=True)
DataLoader(
        train_set,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers,
        pin_memory=True)
DataLoader(
        val_set,
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers,
        pin_memory=True)
DataLoader(
            train_data, batch_size=batch_size, shuffle=True, drop_last=False)
DataLoader(
            test_data, batch_size=eval_batch_size, drop_last=False)
DataLoader(
            train_data, batch_size=batch_size, shuffle=True, drop_last=True)
DataLoader(test_data, batch_size=eval_batch_size)
DataLoader(
            train_data,
            batch_size=batch_size,
            shuffle=True,
            drop_last=False,
            pin_memory=False,
        )
DataLoader(
            test_data, batch_size=eval_batch_size, pin_memory=False)
torch.utils.data.DataLoader(
            search_data,
            batch_size=batch,
            shuffle=True,
            num_workers=workers,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            train_data,
            batch_size=batch,
            sampler=torch.utils.data.sampler.SubsetRandomSampler(train_split),
            num_workers=workers,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            xvalid_data,
            batch_size=test_batch,
            sampler=torch.utils.data.sampler.SubsetRandomSampler(valid_split),
            num_workers=workers,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            search_data,
            batch_size=batch,
            shuffle=True,
            num_workers=workers,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            train_data,
            batch_size=batch,
            shuffle=True,
            num_workers=workers,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            valid_data,
            batch_size=test_batch,
            sampler=torch.utils.data.sampler.SubsetRandomSampler(
                cifar100_test_split.xvalid),
            num_workers=workers,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            search_data,
            batch_size=batch,
            shuffle=True,
            num_workers=workers,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            train_data,
            batch_size=batch,
            shuffle=True,
            num_workers=workers,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
            valid_data,
            batch_size=test_batch,
            sampler=torch.utils.data.sampler.SubsetRandomSampler(
                imagenet_test_split.xvalid),
            num_workers=workers,
            pin_memory=True,
        )
DataLoader(
            train_data, batch_size=batch_size, shuffle=True, drop_last=True)
DataLoader(xtest, batch_size=eval_batch_size)
DataLoader(
            train_data, batch_size=batch_size, shuffle=True)
DataLoader(
            test_data, batch_size=eval_batch_size, shuffle=False)
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/PTQ/data/imagenet.py#L30
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/PTQ/data/imagenet.py#L36
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/QAT/quant_train.py#L529
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/QAT/quant_train.py#L541
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/QAT/quant_train.py#L554
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/QAT/utils/data_utils.py#L45
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/QAT/utils/data_utils.py#L75
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/QAT/utils/data_utils.py#L87
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/QAT/utils/data_utils.py#L125
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar10.py#L102
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar10.py#L110
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar10.py#L155
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar10.py#L160
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar10.py#L299
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar10.py#L307
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar10.py#L371
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar10.py#L379
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar100.py#L97
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar100.py#L105
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar100.py#L150
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar100.py#L155
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar100.py#L294
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar100.py#L302
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar100.py#L366
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/cifar100.py#L374
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/imagenet.py#L37
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/imagenet.py#L44
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/imagenet16.py#L148
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/dataset/imagenet16.py#L154
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/bonas.py#L218
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/bonas.py#L260
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/gcn.py#L171
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/gcn.py#L208
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/mlp.py#L122
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/mlp.py#L192
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/utils/build_nets/get_dataset_with_transform.py#L254
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/utils/build_nets/get_dataset_with_transform.py#L261
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/utils/build_nets/get_dataset_with_transform.py#L268
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/utils/build_nets/get_dataset_with_transform.py#L287
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/utils/build_nets/get_dataset_with_transform.py#L294
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/utils/build_nets/get_dataset_with_transform.py#L301
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/utils/build_nets/get_dataset_with_transform.py#L322
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/utils/build_nets/get_dataset_with_transform.py#L329
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas/utils/build_nets/get_dataset_with_transform.py#L336
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas_s/gcn.py#L223
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas_s/gcn.py#L274
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas_s/mlp.py#L161
https://github.com/lilujunai/EMQ-series/blob/443147be14ec01a01427e668f992c4e00442ab43/emq/predictor/nas_s/mlp.py#L231

===========================================
https://github.com/DataDistillation/DataDAM
===========================================

Found 2 times
torch.utils.data.DataLoader(dst_test, batch_size=256, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(dst_train, batch_size=args.batch_train, shuffle=True, num_workers=0)
https://github.com/DataDistillation/DataDAM/blob/5f5c1c5cf9c7b44171504a00e4a90939a936bee4/utils.py#L241
https://github.com/DataDistillation/DataDAM/blob/5f5c1c5cf9c7b44171504a00e4a90939a936bee4/utils.py#L434

====================================
https://github.com/TinyTigerPan/BCKD
====================================

Found 21 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/mmdet/datasets/builder.py#L195
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_data/test_datasets/test_common.py#L224
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L76
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L88
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L99
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L111
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L115
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L133
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L135
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L155
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L157
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L177
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L197
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L216
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_runtime/test_eval_hook.py#L236
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_utils/test_hook.py#L92
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_utils/test_hook.py#L190
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_utils/test_hook.py#L246
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_utils/test_hook.py#L268
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_utils/test_hook.py#L310
https://github.com/TinyTigerPan/BCKD/blob/121c9aa272c9195c0f05cd12727bfe57636a5005/tests/test_utils/test_hook.py#L347

===============================
https://github.com/yzd-v/cls_KD
===============================

Found 5 times
DataLoader(ExampleDataset(), batch_size=2)
DataLoader(test_dataset, batch_size=2)
DataLoader(test_dataset, batch_size=2)
DataLoader(ExampleDataset())
DataLoader(ExampleDataset(), collate_fn=default_collate)
https://github.com/yzd-v/cls_KD/blob/1e5d48f36957ee460d39d7ebc592c6cc7f8f3d66/tests/test_engine/test_hooks/test_arcface_hooks.py#L52
https://github.com/yzd-v/cls_KD/blob/1e5d48f36957ee460d39d7ebc592c6cc7f8f3d66/tests/test_engine/test_hooks/test_precise_bn_hook.py#L121
https://github.com/yzd-v/cls_KD/blob/1e5d48f36957ee460d39d7ebc592c6cc7f8f3d66/tests/test_engine/test_hooks/test_precise_bn_hook.py#L212
https://github.com/yzd-v/cls_KD/blob/1e5d48f36957ee460d39d7ebc592c6cc7f8f3d66/tests/test_models/test_retrievers.py#L69
https://github.com/yzd-v/cls_KD/blob/1e5d48f36957ee460d39d7ebc592c6cc7f8f3d66/tests/test_models/test_retrievers.py#L163

======================================================
https://github.com/magic-research/Dataset_Quantization
======================================================

Found 6 times
DataLoader(
        dataset_train,
        batch_size = args.batch_size
    )
torch.utils.data.DataLoader(
        trainset, batch_size=args.batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(
        testset, batch_size=128, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(self.dst_pretrain_dict['dst_train'] if self.if_dst_pretrain
                                                   else self.dst_train, shuffle=False, batch_sampler=batch_sampler,
                                                   num_workers=self.args.workers, pin_memory=True)
torch.utils.data.DataLoader(self.dst_test if self.args.selection_test_fraction == 1. else
                                                  torch.utils.data.Subset(self.dst_test, np.random.choice(
                                                      np.arange(len(self.dst_test)),
                                                      round(len(self.dst_test) * self.args.selection_test_fraction),
                                                      replace=False)),
                                                  batch_size=self.args.selection_batch, shuffle=False,
                                                  num_workers=self.args.workers, pin_memory=True)
torch.utils.data.DataLoader(
                self.dst_train if index is None else torch.utils.data.Subset(self.dst_train, index),
                batch_size=self.args.selection_batch,
                num_workers=self.args.workers)
https://github.com/magic-research/Dataset_Quantization/blob/24a2a77dd80c2cc86b53e2b2e204f1e02804d70e/quantize_pixel.py#L110
https://github.com/magic-research/Dataset_Quantization/blob/24a2a77dd80c2cc86b53e2b2e204f1e02804d70e/validate_cifar.py#L124
https://github.com/magic-research/Dataset_Quantization/blob/24a2a77dd80c2cc86b53e2b2e204f1e02804d70e/validate_cifar.py#L129
https://github.com/magic-research/Dataset_Quantization/blob/24a2a77dd80c2cc86b53e2b2e204f1e02804d70e/dq/methods/earlytrain.py#L74
https://github.com/magic-research/Dataset_Quantization/blob/24a2a77dd80c2cc86b53e2b2e204f1e02804d70e/dq/methods/earlytrain.py#L153
https://github.com/magic-research/Dataset_Quantization/blob/24a2a77dd80c2cc86b53e2b2e204f1e02804d70e/dq/methods/submodular.py#L50

====================================
https://github.com/JieShibo/PETL-ViT
====================================

Found 12 times
torch.utils.data.DataLoader(
            ImageFilelist(root=root, flist=root + "/train800val200.txt",
                          transform=transform),
            batch_size=batch_size, shuffle=True, drop_last=True,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            ImageFilelist(root=root, flist=root + "/test.txt",
                          transform=transform),
            batch_size=256, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            ImageFilelist(root=root, flist=root + "/train800.txt",
                          transform=transform),
            batch_size=batch_size, shuffle=True, drop_last=True,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            ImageFilelist(root=root, flist=root + "/val200.txt",
                          transform=transform),
            batch_size=256, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            ImageFilelist(root=root, flist=root + "/train800val200.txt",
                          transform=transform),
            batch_size=batch_size, shuffle=True, drop_last=True,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            ImageFilelist(root=root, flist=root + "/test.txt",
                          transform=transform),
            batch_size=256, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            ImageFilelist(root=root, flist=root + "/train800.txt",
                          transform=transform),
            batch_size=batch_size, shuffle=True, drop_last=True,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            ImageFilelist(root=root, flist=root + "/val200.txt",
                          transform=transform),
            batch_size=256, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            ImageFilelist(root=root, flist=root + "/train800val200.txt",
                transform=transform),
            batch_size=batch_size, shuffle=True, drop_last=True,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            ImageFilelist(root=root, flist=root + "/test.txt",
                transform=transform),
            batch_size=256, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            ImageFilelist(root=root, flist=root + "/train800.txt",
                transform=transform),
            batch_size=batch_size, shuffle=True, drop_last=True,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            ImageFilelist(root=root, flist=root + "/val200.txt",
                transform=transform),
            batch_size=256, shuffle=False,
            num_workers=4, pin_memory=True)
https://github.com/JieShibo/PETL-ViT/blob/026e4f12cfbe1e46bfb4d3ed5ba09f2d9f83e91e/FacT/vtab.py#L83
https://github.com/JieShibo/PETL-ViT/blob/026e4f12cfbe1e46bfb4d3ed5ba09f2d9f83e91e/FacT/vtab.py#L89
https://github.com/JieShibo/PETL-ViT/blob/026e4f12cfbe1e46bfb4d3ed5ba09f2d9f83e91e/FacT/vtab.py#L95
https://github.com/JieShibo/PETL-ViT/blob/026e4f12cfbe1e46bfb4d3ed5ba09f2d9f83e91e/FacT/vtab.py#L101
https://github.com/JieShibo/PETL-ViT/blob/026e4f12cfbe1e46bfb4d3ed5ba09f2d9f83e91e/binary_adapter/vtab.py#L94
https://github.com/JieShibo/PETL-ViT/blob/026e4f12cfbe1e46bfb4d3ed5ba09f2d9f83e91e/binary_adapter/vtab.py#L100
https://github.com/JieShibo/PETL-ViT/blob/026e4f12cfbe1e46bfb4d3ed5ba09f2d9f83e91e/binary_adapter/vtab.py#L106
https://github.com/JieShibo/PETL-ViT/blob/026e4f12cfbe1e46bfb4d3ed5ba09f2d9f83e91e/binary_adapter/vtab.py#L112
https://github.com/JieShibo/PETL-ViT/blob/026e4f12cfbe1e46bfb4d3ed5ba09f2d9f83e91e/convpass/vtab/vtab.py#L57
https://github.com/JieShibo/PETL-ViT/blob/026e4f12cfbe1e46bfb4d3ed5ba09f2d9f83e91e/convpass/vtab/vtab.py#L63
https://github.com/JieShibo/PETL-ViT/blob/026e4f12cfbe1e46bfb4d3ed5ba09f2d9f83e91e/convpass/vtab/vtab.py#L69
https://github.com/JieShibo/PETL-ViT/blob/026e4f12cfbe1e46bfb4d3ed5ba09f2d9f83e91e/convpass/vtab/vtab.py#L75

=================================
https://github.com/zkkli/RepQ-ViT
=================================

Found 17 times
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.val_batchsize,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.calib_batchsize,
        shuffle=True,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/classification/utils/build_dataset.py#L34
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/classification/utils/build_dataset.py#L43
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/mmdet/datasets/builder.py#L125
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_data/test_datasets/test_common.py#L225
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L75
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L87
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L98
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L110
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L114
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L132
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L134
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L156
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L158
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L180
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L202
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L223
https://github.com/zkkli/RepQ-ViT/blob/a160561b9233945e6680132f129d13041b787318/detection/tests/test_runtime/test_eval_hook.py#L245

================================
https://github.com/naver-ai/seit
================================

Found 3 times
torch.utils.data.DataLoader(
        dataset, sampler=sampler,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/naver-ai/seit/blob/e4232fdadf77291194fe39f74e8146e663a94fd4/evaluate_on_images.py#L115
https://github.com/naver-ai/seit/blob/e4232fdadf77291194fe39f74e8146e663a94fd4/main.py#L219
https://github.com/naver-ai/seit/blob/e4232fdadf77291194fe39f74e8146e663a94fd4/main.py#L230

================================
https://github.com/ChenMnZ/SMMix
================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/ChenMnZ/SMMix/blob/14b1edcd5d2257d17e010f48d9c61ee30ecd8632/main.py#L229
https://github.com/ChenMnZ/SMMix/blob/14b1edcd5d2257d17e010f48d9c61ee30ecd8632/main.py#L237

===================================
https://github.com/penghui-yang/L2D
===================================

Found 6 times
DataLoader(train_dataset, batch_size=cfg.batch_size, shuffle=True,
                              num_workers=8, drop_last=True, pin_memory=True)
DataLoader(test_dataset, batch_size=cfg.batch_size, shuffle=True, num_workers=8)
DataLoader(train_dataset, batch_size=cfg.batch_size, shuffle=True,
                              num_workers=8, drop_last=True)
DataLoader(test_dataset, batch_size=cfg.batch_size, shuffle=True, num_workers=8)
DataLoader(train_dataset, batch_size=cfg.batch_size, shuffle=True,
                              num_workers=8, drop_last=True)
DataLoader(test_dataset, batch_size=cfg.batch_size, shuffle=True, num_workers=8)
https://github.com/penghui-yang/L2D/blob/4d87eaae763763498714966bc159c7c1f23ae6cb/dataloader.py#L19
https://github.com/penghui-yang/L2D/blob/4d87eaae763763498714966bc159c7c1f23ae6cb/dataloader.py#L25
https://github.com/penghui-yang/L2D/blob/4d87eaae763763498714966bc159c7c1f23ae6cb/dataloader.py#L55
https://github.com/penghui-yang/L2D/blob/4d87eaae763763498714966bc159c7c1f23ae6cb/dataloader.py#L61
https://github.com/penghui-yang/L2D/blob/4d87eaae763763498714966bc159c7c1f23ae6cb/dataloader.py#L74
https://github.com/penghui-yang/L2D/blob/4d87eaae763763498714966bc159c7c1f23ae6cb/dataloader.py#L80

===========================================
https://github.com/mit-han-lab/efficientvit
===========================================

Found 5 times
torch.utils.data.DataLoader(
        datasets.ImageFolder(
            args.path,
            transforms.Compose(
                [
                    transforms.Resize(
                        int(math.ceil(args.image_size / args.crop_ratio)), interpolation=InterpolationMode.BICUBIC
                    ),
                    transforms.CenterCrop(args.image_size),
                    transforms.ToTensor(),
                    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
                ]
            ),
        ),
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=args.workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset, batch_size=1, sampler=sampler, drop_last=False, num_workers=args.num_workers, collate_fn=collate_fn
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers,
        pin_memory=True,
        drop_last=False,
    )
dataloader_class(
                dataset=dataset,
                batch_size=batch_size,
                shuffle=True,
                num_workers=n_worker,
                pin_memory=True,
                drop_last=drop_last,
            )
dataloader_class(
                dataset=dataset,
                batch_size=batch_size,
                sampler=sampler,
                num_workers=n_worker,
                pin_memory=True,
                drop_last=drop_last,
            )
https://github.com/mit-han-lab/efficientvit/blob/5a9ea1fa52d6e59c1428ebcc1233dfc90a687994/eval_cls_model.py#L54
https://github.com/mit-han-lab/efficientvit/blob/5a9ea1fa52d6e59c1428ebcc1233dfc90a687994/eval_sam_model.py#L267
https://github.com/mit-han-lab/efficientvit/blob/5a9ea1fa52d6e59c1428ebcc1233dfc90a687994/eval_seg_model.py#L649
https://github.com/mit-han-lab/efficientvit/blob/5a9ea1fa52d6e59c1428ebcc1233dfc90a687994/efficientvit/apps/data_provider/base.py#L126
https://github.com/mit-han-lab/efficientvit/blob/5a9ea1fa52d6e59c1428ebcc1233dfc90a687994/efficientvit/apps/data_provider/base.py#L136

=============================================
https://github.com/LeapLabTHU/Deep-Incubation
=============================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/LeapLabTHU/Deep-Incubation/blob/9a7061ba398e5bf22f5b0cfdc4a86a6108828b35/main.py#L220
https://github.com/LeapLabTHU/Deep-Incubation/blob/9a7061ba398e5bf22f5b0cfdc4a86a6108828b35/main.py#L228

==================================================
https://github.com/google-research/google-research
==================================================

Found 216 times
DataLoader(
      dataset_collection.val_f,
      batch_size=args.dataset.val_batch_size,
      shuffle=False,
  )
DataLoader(
        dataset_collection.val_f,
        batch_size=10 * args.dataset.val_batch_size,
        shuffle=False,
    )
DataLoader(
          dataset, shuffle=False, batch_size=args.dataset.val_batch_size
      )
DataLoader(
      dataset_collection.val_f,
      batch_size=args.dataset.val_batch_size,
      shuffle=False,
  )
DataLoader(
      dataset_collection.val_f,
      batch_size=args.dataset.val_batch_size,
      shuffle=False,
  )
DataLoader(
        dataset_collection.val_f,
        batch_size=10 * args.dataset.val_batch_size,
        shuffle=False,
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
              d,
              batch_size=self.hparams.dataset.val_batch_size,
              shuffle=False,
              num_workers=2,
          )
DataLoader(
          dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
      )
DataLoader(
          datasets[m],
          batch_size=self.hparams.dataset.val_batch_size,
          shuffle=False,
      )
DataLoader(
            datasets[m],
            batch_size=self.hparams.dataset.val_batch_size,
            shuffle=False,
        )
DataLoader(
          dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
      )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        train_f,
        shuffle=True,
        batch_size=new_params.model[model_cls.model_type]['batch_size'],
        drop_last=True,
        collate_fn=partial(
            model_cls.collate_fn_augment_with_masked_vitals,
            has_vitals=model.has_vitals,
            autoregressive=model.autoregressive,
        ),
    )
DataLoader(
        train_f,
        shuffle=True,
        batch_size=new_params.model[model_cls.model_type]['batch_size'],
        drop_last=True,
    )
DataLoader(
      val_f,
      shuffle=False,
      batch_size=new_params.model[model_cls.model_type]['batch_size'],
      drop_last=True,
  )
DataLoader(
        self.dataset_collection.train_f,
        shuffle=True,
        batch_size=sub_args['batch_size'],
        drop_last=drop_last,
    )
DataLoader(
        self.dataset_collection.val_f,
        batch_size=self.hparams.dataset.val_batch_size,
        shuffle=False,
        generator=torch.Generator(),
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
          dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
      )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=True
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
DataLoader(
        dataset, batch_size=self.hparams.dataset.val_batch_size, shuffle=False
    )
torch.utils.data.DataLoader(
      train_dataset,
      shuffle=not args.streaming,
      collate_fn=collate_fn,
      batch_size=total_train_batch_size,
      num_workers=args.dataloader_num_workers,
      drop_last=True,
  )
data.DataLoader(
      train_set, batch_size=batch_size, shuffle=True, num_workers=1
  )
data.DataLoader(
      valid_set, batch_size=batch_size, shuffle=True, num_workers=1
  )
data.DataLoader(
      test_set, batch_size=batch_size, shuffle=False, num_workers=1
  )
DataLoader(
      train_dataset,
      batch_size=args.per_device_train_batch_size,
      shuffle=True,
      collate_fn=data_collator,
  )
DataLoader(
        eval_dataset,
        batch_size=args.per_device_eval_batch_size,
        collate_fn=data_collator)
DataLoader(
        test_dataset,
        batch_size=args.per_device_eval_batch_size,
        collate_fn=data_collator)
DataLoader(
        infer_dataset,
        batch_size=args.per_device_eval_batch_size,
        collate_fn=data_collator)
DataLoader(db, batch_size=cmd_args.batch_size, shuffle=True,
                            collate_fn=db.collate_fn, num_workers=cmd_args.num_proc, drop_last=True)
DataLoader(db, batch_size=cmd_args.batch_size, shuffle=True,
                            collate_fn=db.collate_fn, num_workers=cmd_args.num_proc, drop_last=True)
DataLoader(test_db, batch_size=1, shuffle=False,
                            collate_fn=test_db.collate_fn, num_workers=cmd_args.num_proc, drop_last=False)
DataLoader(train_db, batch_size=cmd_args.batch_size, shuffle=False,
                            collate_fn=train_db.collate_fn, num_workers=cmd_args.num_proc, drop_last=False)
DataLoader(test_db, batch_size=cmd_args.batch_size, shuffle=False,
                          collate_fn=test_db.collate_fn, num_workers=cmd_args.num_proc, drop_last=False)
DataLoader(train_db, batch_size=cmd_args.batch_size, shuffle=False,
                            collate_fn=train_db.collate_fn, num_workers=cmd_args.num_proc, drop_last=False)
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers
    )
torch.utils.data.DataLoader(
            dataset=test_dataset,
            batch_size=200,
            shuffle=False,
            num_workers=num_workers,
        )
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers
    )
torch.utils.data.DataLoader(
            dataset=test_dataset,
            batch_size=100,
            shuffle=False,
            num_workers=num_workers,
        )
torch.utils.data.DataLoader(
      dataset=test_dataset,
      batch_size=100,
      shuffle=False,
      num_workers=num_workers,
  )
torch.utils.data.DataLoader(
        dataset=test_dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers,
    )
torch.utils.data.DataLoader(
      dataset=test_dataset,
      batch_size=batch_size,
      shuffle=False,
      num_workers=num_workers,
  )
torch.utils.data.DataLoader(
      train_dataset, batch_size=batch_size, shuffle=True
  )
torch.utils.data.DataLoader(
      val_dataset, batch_size=batch_size, shuffle=True
  )
torch.utils.data.DataLoader(
      test_dataset, batch_size=batch_size, shuffle=False
  )
torch.utils.data.DataLoader(
        dataset=dataset_src,
        batch_size=flags.batch_size,
        shuffle=shuffle,
        num_workers=flags.num_workers,
        drop_last=flags.drop_last,
        pin_memory=True)
torch.utils.data.DataLoader(
      train_dataset, batch_size=args.batch_size, shuffle=False,
      num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=sampler)
torch.utils.data.DataLoader(
      train_dataset_with_indices, batch_size=args.batch_size, shuffle=False,
      num_workers=args.workers, pin_memory=True, sampler=sampler)
torch.utils.data.DataLoader(
      train_dataset,
      batch_size=args.train_batch_size,
      shuffle=True,
      num_workers=args.dataloader_num_workers,
  )
DataLoader(
        dataset,
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=True)
DataLoader(
        dataset,
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=False)
DataLoader(
        dataset,
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=False)
torch.utils.data.DataLoader(
      datasets.CIFAR10(
          args.data_dir,
          train=False,
          download=True,
          transform=transforms.Compose([
              transforms.ToTensor(),
              transforms.Normalize(normalize_mean, normalize_std)])
          ),
      batch_size=1000, shuffle=False, drop_last=False, **kwargs)
DataLoader(
        Subset(self.train_dataset, inds),
        batch_size=self.args.batch_size,
        shuffle=False,
        num_workers=8,
    )
DataLoader(
      train_dataset, batch_size=setting.args.batch_size, shuffle=True
  )
DataLoader(
      test_dataset, batch_size=setting.args.batch_size, shuffle=False
  )
DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
data.DataLoader(
            trn_data_sub, batch_size=self.trainloader.batch_size, shuffle=False
        )
data.DataLoader(
              val_data_sub,
              batch_size=self.trainloader.batch_size,
              shuffle=False,
          )
data.DataLoader(trainset, batch_size=32, shuffle=False)
data.DataLoader(valset, batch_size=32, shuffle=False)
DataLoader(
        TSDataset(self.x_train, self.args, transform=Normalize()),
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=True,
        drop_last=True)
DataLoader(
        TSDataset(self.x_val, self.args, transform=Normalize()),
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=False,
        drop_last=True)
DataLoader(
        TSDataset(self.x_test, self.args, transform=Normalize()),
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=False,
        drop_last=True)
DataLoader(
        TSDataset(self.x_test, self.args, transform=Normalize()),
        batch_size=self.batch_size,
        num_workers=self.num_workers,
        shuffle=False,
        drop_last=True)
torch.utils.data.DataLoader(
      dataset,
      batch_size=opts.batch_size,
      shuffle=shuffle_d,
      num_workers=opts.num_workers,
      collate_fn=collate_fn,
      worker_init_fn=worker_init_fn,
      drop_last=True,
  )
DataLoader(
        data_set,
        batch_size=batch_size,
        shuffle=shuffle_flag,
        num_workers=self.args.num_workers,
        drop_last=drop_last)
DataLoader(
          data_set,
          batch_size=batch_size,
          shuffle=True,
          num_workers=self.args.num_workers,
          drop_last=drop_last)
DataLoader(
        data_set,
        batch_size=batch_size,
        shuffle=shuffle_flag,
        num_workers=self.args.num_workers,
        drop_last=drop_last)
DataLoader(
          data_set,
          batch_size=batch_size,
          shuffle=True,
          num_workers=self.args.num_workers,
          drop_last=drop_last)
DataLoader(
        data_set,
        batch_size=batch_size,
        shuffle=shuffle_flag,
        num_workers=args.num_workers,
        drop_last=drop_last)
DataLoader(
        data_set,
        batch_size=batch_size,
        shuffle=shuffle_flag,
        num_workers=args.num_workers,
        drop_last=drop_last)
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=int(num_threads),
        pin_memory=True,
        drop_last=True,
        sampler=self.train_sampler)
DataLoader(test_dataset, batch_size=batch_size)
DataLoader(train_dataset, batch_size=batch_size)
DataLoader(test_dataset, batch_size=64)
DataLoader(train_dataset, batch_size=64)
DataLoader(
        EvalRelationDataset(
            eval_relation_data,
            args.nentity,
            args.nrelation,
        ),
        batch_size=args.test_batch_size,
        num_workers=args.cpu_num,
        collate_fn=EvalRelationDataset.collate_fn
    )
DataLoader(
        EvalBranchDataset(
            eval_branch_data,
            args.nentity,
            args.nrelation,
        ),
        batch_size=args.test_batch_size,
        num_workers=args.cpu_num,
        collate_fn=EvalBranchDataset.collate_fn
    )
DataLoader(
                        UnfoldedProgramDataloader(train_datasets, args.nentity, args.nrelation, 1, latent_space_executor,
                                reduce=args.reduce,
                                supervised_candidate_batch_size=args.supervised_candidate_batch_size,
                                shuffle=True if not args.debug else False),
                        batch_size=args.batch_size,
                        shuffle=True if not args.debug else False,
                        num_workers=args.cpu_num,
                        collate_fn=UnfoldedProgramDataloader.collate_fn
                    )
DataLoader(
        self.train_dataset,
        shuffle=True,
        num_workers=4,
        batch_size=self.hparams.batch_size,
        pin_memory=True)
DataLoader(
        self.val_dataset,
        shuffle=False,
        num_workers=4,
        batch_size=1,  # validate one image (H*W rays) at a time
        pin_memory=True)
DataLoader(
      train_dataset,
      shuffle=True,
      num_workers=4,
      batch_size=1024,
      pin_memory=True)
DataLoader(
      val_dataset, shuffle=False, num_workers=4, batch_size=1, pin_memory=True)
torch.utils.data.DataLoader(
              self.data_paths,
              collate_fn=lambda x: torch.load(x[0]),
              num_workers=min(16, mp.cpu_count()),
              shuffle=False)
torch.utils.data.DataLoader(
        val_data,
        batch_size=args.test_batch_size,
        shuffle=False,
        num_workers=args.test_workers,
        pin_memory=True,
        drop_last=False,
        collate_fn=collation_fn_eval_all,
        sampler=val_sampler)
torch.utils.data.DataLoader(
        train_data,
        batch_size=args.batch_size,
        shuffle=(train_sampler is None),
        num_workers=args.workers,
        pin_memory=True,
        sampler=train_sampler,
        drop_last=True,
        collate_fn=collation_fn,
        worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(
          val_data,
          batch_size=args.batch_size_val,
          shuffle=False,
          num_workers=args.workers,
          pin_memory=True,
          drop_last=False,
          collate_fn=collation_fn_eval_all,
          sampler=val_sampler)
DataLoader(
      scdata,
      batch_size=batch_size,
      drop_last=True,
      shuffle=True,
      num_workers=4)
DataLoader(
      scdata, batch_size=batch_size, drop_last=False, shuffle=False)
DataLoader(
      dataset, batch_size=1, shuffle=False, collate_fn=collate_topics)
DataLoader(
        train_dataset,
        batch_size=_BATCH_SIZE.value,
        shuffle=True,
        collate_fn=collate_topics)
DataLoader(
        valid_dataset,
        batch_size=_BATCH_SIZE.value,
        shuffle=False,
        collate_fn=collate_topics)
DataLoader(
        test_dataset,
        batch_size=_BATCH_SIZE.value,
        shuffle=False,
        collate_fn=collate_topics)
DataLoader(
      dataset, batch_size=4, shuffle=False, collate_fn=collate_topics)
torch.utils.data.DataLoader(
        dataset,
        collate_fn=dataset.collate_fn,
        batch_sampler=batch_sampler,
        num_workers=4 if torch.cuda.is_available() and not debug else 0,
        pin_memory=torch.cuda.is_available() and not debug,
    )
torch.utils.data.DataLoader(
          dataset,
          collate_fn=dataset.collate_fn,
          batch_sampler=batch_sampler,
          num_workers=4 if torch.cuda.is_available() and not debug else 0,
          pin_memory=torch.cuda.is_available() and not debug,
      )
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/runnables/train_enc_dec.py#L241
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/runnables/train_enc_dec.py#L372
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/runnables/train_msm.py#L90
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/runnables/train_multi.py#L236
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/runnables/train_rmsn.py#L463
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/runnables/train_rmsn.py#L571
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/ct.py#L461
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/gnet.py#L356
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/gnet.py#L365
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/gnet.py#L471
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/gnet.py#L514
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rmsn.py#L120
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rmsn.py#L521
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rmsn.py#L533
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rmsn.py#L678
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L95
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L107
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L113
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L282
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L290
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L1163
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L1179
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L1191
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L1209
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/time_varying_model.py#L1423
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rep_est/cotrans.py#L210
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rep_est/rep_est.py#L121
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rep_est/rep_est.py#L335
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rep_est/rep_est.py#L343
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rep_est/rep_est.py#L774
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/COSTAR/src/models/rep_est/rep_est.py#L795
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/CoDi/training_scripts/train_codi_flax.py#L427
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/KNF/run_koopman.py#L137
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/KNF/run_koopman.py#L140
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/KNF/run_koopman.py#L143
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/STraTA/finetuning.py#L775
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/STraTA/finetuning.py#L784
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/STraTA/finetuning.py#L790
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/STraTA/finetuning.py#L796
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/aloe/aloe/fuzz/do_fuzz.py#L85
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/aloe/aloe/fuzz/main_varlen.py#L97
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/aloe/aloe/rfill/main_editor.py#L159
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/aloe/aloe/rfill/main_editor.py#L193
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/aloe/aloe/rfill/main_supervised.py#L60
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/aloe/aloe/rfill/main_supervised.py#L132
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/main.py#L658
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/main.py#L817
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/main.py#L994
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/main.py#L1086
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/main.py#L1202
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/test_later.py#L272
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/test_later.py#L325
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/utils/preprocessing_utils.py#L56
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/utils/preprocessing_utils.py#L60
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/business_metric_aware_forecasting/utils/preprocessing_utils.py#L64
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/cascaded_networks/datasets/dataset_handler.py#L139
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/coherent_gradients/weak_and_strong/imagenet_main.py#L354
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/coherent_gradients/weak_and_strong/imagenet_main.py#L365
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/coherent_gradients/weak_and_strong/imagenet_main.py#L525
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/conceptor/one_step_reconstruction.py#L777
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/editable_graph_temporal/data.py#L174
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/editable_graph_temporal/data.py#L184
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/editable_graph_temporal/data.py#L194
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gaternet/main.py#L135
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/datasets/utils/continual_dataset.py#L88
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/datasets/utils/continual_dataset.py#L170
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/datasets/utils/continual_dataset.py#L173
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/datasets/utils/continual_dataset.py#L205
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/utils/gradmatchstrategy.py#L95
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/utils/gradmatchstrategy.py#L101
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/utils/select_subset.py#L100
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/gradient_coresets_replay/utils/select_subset.py#L103
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/graph_temporal_ai/src/data.py#L107
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/graph_temporal_ai/src/data.py#L116
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/graph_temporal_ai/src/data.py#L125
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/graph_temporal_ai/src/data.py#L134
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/human_object_interaction/oci/oci/datasets/behave_data.py#L577
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/ime/exp/exp_IME.py#L174
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/ime/exp/exp_IME.py#L182
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/ime/exp/exp_IME_tabular.py#L176
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/ime/exp/exp_IME_tabular.py#L184
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/ime/exp/exp_baseline.py#L124
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/ime/exp/exp_baseline_tabular.py#L127
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/infinite_nature_zero/data/nature_data_loader.py#L28
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/isl/isl_synthetic_exp.py#L600
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/isl/isl_synthetic_exp.py#L601
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/isl/mlp.py#L200
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/isl/mlp.py#L201
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/lego/lego/experiment/pretrain_pruners.py#L366
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/lego/lego/experiment/pretrain_pruners.py#L376
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/lego/lego/experiment/train_synthesizer.py#L326
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/nerflets/train.py#L184
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/nerflets/train.py#L192
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/nerflets/datasets/scannet.py#L246
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/nerflets/datasets/scannet.py#L253
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/openscene/dataset/scannet3d.py#L146
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/openscene/tool/test_disnet.py#L204
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/openscene/tool/train_disnet.py#L245
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/openscene/tool/train_disnet.py#L266
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/schptm_benchmark/scale_process.py#L112
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/schptm_benchmark/scale_process.py#L118
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/video_timeline_modeling/vtm/main.py#L394
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/video_timeline_modeling/vtm/main.py#L519
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/video_timeline_modeling/vtm/main.py#L524
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/video_timeline_modeling/vtm/main.py#L529
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/video_timeline_modeling/vtm/test.py#L92
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/xirl/xirl/common.py#L49
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/xirl/xirl/common.py#L85

=======================================
https://github.com/tinganchen/LifeQuant
=======================================

Found 18 times
DataLoader(
                trainset, batch_size=args.train_batch_size, shuffle=True, 
                num_workers=1, pin_memory=pin_memory
                )
DataLoader(
                replayset, batch_size=args.train_batch_size, shuffle=True, 
                num_workers=1, pin_memory=pin_memory
                )
DataLoader(
                testset, batch_size=args.eval_batch_size, shuffle=False, 
                num_workers=1, pin_memory=pin_memory)
DataLoader(
                trainset, batch_size=args.train_batch_size, shuffle=True, 
                num_workers=2, pin_memory=pin_memory
                )
DataLoader(
                replayset, batch_size=args.train_batch_size, shuffle=True, 
                num_workers=2, pin_memory=pin_memory
                )
DataLoader(
                testset, batch_size=args.eval_batch_size, shuffle=False, 
                num_workers=2, pin_memory=pin_memory)
DataLoader(
                trainset, batch_size=args.train_batch_size, shuffle=True, 
                num_workers=2, pin_memory=pin_memory
                )
DataLoader(
                replayset, batch_size=args.train_batch_size, shuffle=True, 
                num_workers=2, pin_memory=pin_memory
                )
DataLoader(
                testset, batch_size=args.eval_batch_size, shuffle=False, 
                num_workers=2, pin_memory=pin_memory)
DataLoader(
                trainset, batch_size=args.train_batch_size, shuffle=True, 
                num_workers=1, pin_memory=pin_memory
                )
DataLoader(
                replayset, batch_size=args.train_batch_size, shuffle=True, 
                num_workers=1, pin_memory=pin_memory
                )
DataLoader(
                testset, batch_size=args.eval_batch_size, shuffle=False, 
                num_workers=1, pin_memory=pin_memory)
DataLoader(
                trainset, batch_size=args.train_batch_size, shuffle=True, 
                num_workers=2, pin_memory=pin_memory
                )
DataLoader(
                replayset, batch_size=args.train_batch_size, shuffle=True, 
                num_workers=2, pin_memory=pin_memory
                )
DataLoader(
                testset, batch_size=args.eval_batch_size, shuffle=False, 
                num_workers=2, pin_memory=pin_memory)
DataLoader(
                trainset, batch_size=args.train_batch_size, shuffle=True, 
                num_workers=2, pin_memory=pin_memory
                )
DataLoader(
                replayset, batch_size=args.train_batch_size, shuffle=True, 
                num_workers=2, pin_memory=pin_memory
                )
DataLoader(
                testset, batch_size=args.eval_batch_size, shuffle=False, 
                num_workers=2, pin_memory=pin_memory)
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/mobilenet-v2-cifar-100/data/cifar100_ll.py#L62
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/mobilenet-v2-cifar-100/data/cifar100_ll.py#L72
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/mobilenet-v2-cifar-100/data/cifar100_ll.py#L82
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/mobilenet-v2-image_CLEF/data/image_CLEF_ll.py#L63
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/mobilenet-v2-image_CLEF/data/image_CLEF_ll.py#L73
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/mobilenet-v2-image_CLEF/data/image_CLEF_ll.py#L83
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/mobilenet-v2-office/data/office_ll.py#L63
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/mobilenet-v2-office/data/office_ll.py#L73
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/mobilenet-v2-office/data/office_ll.py#L83
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/resnet-20-cifar-100/data/cifar100_ll.py#L62
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/resnet-20-cifar-100/data/cifar100_ll.py#L72
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/resnet-20-cifar-100/data/cifar100_ll.py#L82
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/resnet-50-image_CLEF/data/image_CLEF_ll.py#L63
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/resnet-50-image_CLEF/data/image_CLEF_ll.py#L73
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/resnet-50-image_CLEF/data/image_CLEF_ll.py#L83
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/resnet-50-office/data/office_ll.py#L63
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/resnet-50-office/data/office_ll.py#L73
https://github.com/tinganchen/LifeQuant/blob/8edff2b3bb3ab3c261a85d5182c91b534989b75d/src/resnet-50-office/data/office_ll.py#L83

============================================
https://github.com/Guoxoug/window-early-exit
============================================

Found 7 times
torch.utils.data.DataLoader(
    test_data.test_set, 
    batch_size=args.batchsize, shuffle=True, num_workers=16
)
torch.utils.data.DataLoader(
    test_data.test_set, 
    batch_size=1, shuffle=True, num_workers=16
)
DataLoader(
                self.test_set,
                batch_size=self.test_batch_size,
                shuffle=self.test_shuffle,
                num_workers=self.num_workers,
                drop_last=self.drop_last, pin_memory=self.pin_memory,
            )
DataLoader(
                        self.val_set,
                        batch_size=self.test_batch_size,
                        num_workers=self.num_workers,
                        drop_last=self.drop_last, pin_memory=self.pin_memory,
                        shuffle=False,
                    )
DataLoader(
                    self.train_set,
                    batch_size=self.batch_size,
                    num_workers=self.num_workers,
                    drop_last=self.drop_last, pin_memory=self.pin_memory,
                    shuffle=True,
                )
DataLoader(
                self.test_set,
                batch_size=self.test_batch_size,
                shuffle=self.test_shuffle,
                num_workers=self.num_workers,
                drop_last=self.drop_last, pin_memory=self.pin_memory,
            )
DataLoader(
                self.test_set,
                batch_size=self.test_batch_size,
                shuffle=self.test_shuffle,
                num_workers=self.num_workers,
                drop_last=self.drop_last, pin_memory=self.pin_memory,
            )
https://github.com/Guoxoug/window-early-exit/blob/35956d7a9fb630d0b31c91179d940d3915ffae0d/eval_latency_throughput.py#L195
https://github.com/Guoxoug/window-early-exit/blob/35956d7a9fb630d0b31c91179d940d3915ffae0d/eval_latency_throughput.py#L200
https://github.com/Guoxoug/window-early-exit/blob/35956d7a9fb630d0b31c91179d940d3915ffae0d/utils/data_utils.py#L231
https://github.com/Guoxoug/window-early-exit/blob/35956d7a9fb630d0b31c91179d940d3915ffae0d/utils/data_utils.py#L304
https://github.com/Guoxoug/window-early-exit/blob/35956d7a9fb630d0b31c91179d940d3915ffae0d/utils/data_utils.py#L316
https://github.com/Guoxoug/window-early-exit/blob/35956d7a9fb630d0b31c91179d940d3915ffae0d/utils/data_utils.py#L342
https://github.com/Guoxoug/window-early-exit/blob/35956d7a9fb630d0b31c91179d940d3915ffae0d/utils/data_utils.py#L363

=======================================
https://github.com/Amshaker/SwiftFormer
=======================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/Amshaker/SwiftFormer/blob/898d23ca891aa404784359b931b520f1b8eab32f/main.py#L217
https://github.com/Amshaker/SwiftFormer/blob/898d23ca891aa404784359b931b520f1b8eab32f/main.py#L225

========================================
https://github.com/Akimoto-Cris/RD_PRUNE
========================================

Found 6 times
torch.utils.data.DataLoader(images, batch_size=batch_size, num_workers=num_workers)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True, num_workers=num_threads)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=False, num_workers=num_threads)
DataLoader(train_set,batch_size=batch_size,shuffle=True,drop_last=True,num_workers=num_workers)
DataLoader(test_set,batch_size=batch_size,shuffle=False,drop_last=False,num_workers=num_workers)
DataLoader(calib_set,batch_size=batch_size,shuffle=False,drop_last=False,num_workers=num_workers)
https://github.com/Akimoto-Cris/RD_PRUNE/blob/5bf7b7e7c3b86278484e53e4cc5218a470212fea/tools/common.py#L151
https://github.com/Akimoto-Cris/RD_PRUNE/blob/5bf7b7e7c3b86278484e53e4cc5218a470212fea/tools/dataloaders.py#L50
https://github.com/Akimoto-Cris/RD_PRUNE/blob/5bf7b7e7c3b86278484e53e4cc5218a470212fea/tools/dataloaders.py#L59
https://github.com/Akimoto-Cris/RD_PRUNE/blob/5bf7b7e7c3b86278484e53e4cc5218a470212fea/tools/datasets/cifar10.py#L20
https://github.com/Akimoto-Cris/RD_PRUNE/blob/5bf7b7e7c3b86278484e53e4cc5218a470212fea/tools/datasets/cifar10.py#L21
https://github.com/Akimoto-Cris/RD_PRUNE/blob/5bf7b7e7c3b86278484e53e4cc5218a470212fea/tools/datasets/cifar10.py#L22

==============================
https://github.com/sunggo/APIB
==============================

Found 8 times
DataLoader(trainset,batch_size=64,shuffle=True,num_workers=8,pin_memory=True)
DataLoader(
                testset,
                batch_size=64,
                shuffle=False,
                num_workers=8,
                pin_memory=True)
DataLoader(trainset,batch_size=64,shuffle=True,num_workers=8,pin_memory=True)
DataLoader(
                    testset,
                    batch_size=64,
                    shuffle=False,
                    num_workers=8,
                    pin_memory=True)
DataLoader(
            trainset, batch_size=args.batch_size, shuffle=True,
            num_workers=2, pin_memory=pin_memory
        )
DataLoader(
            testset, batch_size=args.batch_size, shuffle=False,
            num_workers=2, pin_memory=pin_memory)
DataLoader(
            trainset, batch_size=args.batch_size, shuffle=True,
            num_workers=2, pin_memory=pin_memory
        )
DataLoader(
            testset, batch_size=args.batch_size, shuffle=False,
            num_workers=2, pin_memory=pin_memory)
https://github.com/sunggo/APIB/blob/6ed8d9d3090c34ec43f35c1cf7c780402d8e4fa8/main.py#L116
https://github.com/sunggo/APIB/blob/6ed8d9d3090c34ec43f35c1cf7c780402d8e4fa8/main.py#L127
https://github.com/sunggo/APIB/blob/6ed8d9d3090c34ec43f35c1cf7c780402d8e4fa8/train.py#L303
https://github.com/sunggo/APIB/blob/6ed8d9d3090c34ec43f35c1cf7c780402d8e4fa8/train.py#L314
https://github.com/sunggo/APIB/blob/6ed8d9d3090c34ec43f35c1cf7c780402d8e4fa8/dataset/cifar10.py#L26
https://github.com/sunggo/APIB/blob/6ed8d9d3090c34ec43f35c1cf7c780402d8e4fa8/dataset/cifar10.py#L32
https://github.com/sunggo/APIB/blob/6ed8d9d3090c34ec43f35c1cf7c780402d8e4fa8/dataset/cifar100.py#L26
https://github.com/sunggo/APIB/blob/6ed8d9d3090c34ec43f35c1cf7c780402d8e4fa8/dataset/cifar100.py#L32

======================================
https://github.com/FzJun26th/FastRecon
======================================

Found 2 times
DataLoader(image_datasets, batch_size=args.batch_size, shuffle=True,
                                  num_workers=4)
DataLoader(test_datasets, batch_size=1, shuffle=False,
                                 num_workers=4)
https://github.com/FzJun26th/FastRecon/blob/fcffadb6b824f08c30358521612de67858fd0f51/main.py#L314
https://github.com/FzJun26th/FastRecon/blob/fcffadb6b824f08c30358521612de67858fd0f51/main.py#L321

====================================
https://github.com/ChengHan111/E2VPT
====================================

Found 8 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=(False if sampler else shuffle),
        sampler=sampler,
        num_workers=cfg.DATA.NUM_WORKERS,
        pin_memory=cfg.DATA.PIN_MEMORY,
        drop_last=drop_last,
    )
torch.utils.data.DataLoader(samples_dataset,
                                                batch_size=batch_size,
                                                shuffle=(False if sampler else shuffle),
                                                sampler=sampler,
                                                num_workers=cfg.DATA.NUM_WORKERS,
                                                pin_memory=cfg.DATA.PIN_MEMORY,
                                                drop_last=drop_last,)
torch.utils.data.DataLoader(imagenet_data_train,
                                                batch_size=batch_size,
                                                shuffle=(False if sampler else shuffle),
                                                sampler=sampler,
                                                num_workers=cfg.DATA.NUM_WORKERS,
                                                pin_memory=cfg.DATA.PIN_MEMORY,
                                                drop_last=drop_last,)
torch.utils.data.DataLoader(samples_dataset,
                                                batch_size=batch_size,
                                                shuffle=(False if sampler else shuffle),
                                                sampler=sampler,
                                                num_workers=cfg.DATA.NUM_WORKERS,
                                                pin_memory=cfg.DATA.PIN_MEMORY,
                                                drop_last=drop_last,)
torch.utils.data.DataLoader(imagenet_data_val,
                                                batch_size=batch_size,
                                                shuffle=(False if sampler else shuffle),
                                                sampler=sampler,
                                                num_workers=cfg.DATA.NUM_WORKERS,
                                                pin_memory=cfg.DATA.PIN_MEMORY,
                                                drop_last=drop_last,)
torch.utils.data.DataLoader(samples_dataset,
                                                batch_size=batch_size,
                                                shuffle=(False if sampler else shuffle),
                                                sampler=sampler,
                                                num_workers=cfg.DATA.NUM_WORKERS,
                                                pin_memory=cfg.DATA.PIN_MEMORY,
                                                drop_last=drop_last,)
torch.utils.data.DataLoader(imagenet_data_test,
                                                batch_size=batch_size,
                                                shuffle=(False if sampler else shuffle),
                                                sampler=sampler,
                                                num_workers=cfg.DATA.NUM_WORKERS,
                                                pin_memory=cfg.DATA.PIN_MEMORY,
                                                drop_last=drop_last,)
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=(False if sampler else shuffle),
        sampler=sampler,
        num_workers=cfg.DATA.NUM_WORKERS,
        pin_memory=cfg.DATA.PIN_MEMORY,
        drop_last=drop_last,
    )
https://github.com/ChengHan111/E2VPT/blob/7a66e75eef6b7e15df83463d31b60eba5938d208/src/data/loader.py#L42
https://github.com/ChengHan111/E2VPT/blob/7a66e75eef6b7e15df83463d31b60eba5938d208/src/data/loader_imagenet.py#L82
https://github.com/ChengHan111/E2VPT/blob/7a66e75eef6b7e15df83463d31b60eba5938d208/src/data/loader_imagenet.py#L93
https://github.com/ChengHan111/E2VPT/blob/7a66e75eef6b7e15df83463d31b60eba5938d208/src/data/loader_imagenet.py#L134
https://github.com/ChengHan111/E2VPT/blob/7a66e75eef6b7e15df83463d31b60eba5938d208/src/data/loader_imagenet.py#L147
https://github.com/ChengHan111/E2VPT/blob/7a66e75eef6b7e15df83463d31b60eba5938d208/src/data/loader_imagenet.py#L188
https://github.com/ChengHan111/E2VPT/blob/7a66e75eef6b7e15df83463d31b60eba5938d208/src/data/loader_imagenet.py#L199
https://github.com/ChengHan111/E2VPT/blob/7a66e75eef6b7e15df83463d31b60eba5938d208/src/data/loader_imagenet.py#L217

=================================
https://github.com/kkakkkka/ETRIS
=================================

Found 3 times
torch.utils.data.DataLoader(test_data,
                                              batch_size=1,
                                              shuffle=False,
                                              num_workers=1,
                                              pin_memory=True)
data.DataLoader(train_data,
                                   batch_size=args.batch_size,
                                   shuffle=False,
                                   num_workers=args.workers,
                                   pin_memory=True,
                                   worker_init_fn=init_fn,
                                   sampler=train_sampler,
                                   drop_last=True)
data.DataLoader(val_data,
                                 batch_size=args.batch_size_val,
                                 shuffle=False,
                                 num_workers=args.workers_val,
                                 pin_memory=True,
                                 sampler=val_sampler,
                                 drop_last=False)
https://github.com/kkakkkka/ETRIS/blob/11cd4dbfacc9840b48e98482d2870ea3f165116a/test.py#L65
https://github.com/kkakkkka/ETRIS/blob/11cd4dbfacc9840b48e98482d2870ea3f165116a/train.py#L145
https://github.com/kkakkkka/ETRIS/blob/11cd4dbfacc9840b48e98482d2870ea3f165116a/train.py#L153

=========================================
https://github.com/Sharath-girish/Shacira
=========================================

Found 3 times
DataLoader(self.train_dataset,
                                            batch_size=self.batch_size,
                                            collate_fn=default_collate,
                                            shuffle=True, pin_memory=True,
                                            num_workers=self.extra_args['dataloader_num_workers'])
torch.utils.data.DataLoader(self.train_dataset,
                                            batch_size=self.batch_size,
                                            shuffle=False, pin_memory=False,
                                            num_workers=self.extra_args['dataloader_num_workers'])
torch.utils.data.DataLoader(val_dataset,
                                            batch_size=self.batch_size,
                                            shuffle=False, pin_memory=False,
                                            num_workers=self.extra_args['dataloader_num_workers'])
https://github.com/Sharath-girish/Shacira/blob/4a6a449bd1b6bdecb22d682b76bee83809936104/wisp/trainers/base_trainer.py#L199
https://github.com/Sharath-girish/Shacira/blob/4a6a449bd1b6bdecb22d682b76bee83809936104/wisp/trainers/image_trainer.py#L71
https://github.com/Sharath-girish/Shacira/blob/4a6a449bd1b6bdecb22d682b76bee83809936104/wisp/trainers/image_trainer.py#L387

=========================================
https://github.com/ModelTC/L2_Compression
=========================================

Found 8 times
DataLoader(
            dataset,
            batch_size=64,
            num_workers=4,
            shuffle=True,
            drop_last=True,
            pin_memory=True,
        )
DataLoader(
            dataset,
            batch_size=32,
            num_workers=2,
            drop_last=True,
            pin_memory=True,
        )
DataLoader(
            dataset,
            batch_size=64,
            num_workers=2,
            shuffle=True,
            drop_last=True,
            pin_memory=True,
        )
DataLoader(
            dataset,
            batch_size=1,
            num_workers=4,
            drop_last=False,
            pin_memory=False,
        )
DataLoader(
        train_dataset,
        batch_size=32,
        num_workers=4,
        shuffle=True,
        drop_last=False,
        pin_memory=True,
    )
DataLoader(
        test_dataset,
        batch_size=32,
        num_workers=4,
        shuffle=False,
        drop_last=False,
        pin_memory=True,
    )
DataLoader(
        train_dataset,
        batch_size=16,
        num_workers=4,
        shuffle=True,
        drop_last=False,
        pin_memory=False,
    )
DataLoader(
        test_dataset,
        batch_size=16,
        num_workers=4,
        shuffle=False,
        drop_last=False,
        pin_memory=False,
    )
https://github.com/ModelTC/L2_Compression/blob/4d28b141930399cfb4990a63a3fae85c23a1b1e5/cifar10_models/data.py#L23
https://github.com/ModelTC/L2_Compression/blob/4d28b141930399cfb4990a63a3fae85c23a1b1e5/cifar10_models/data.py#L41
https://github.com/ModelTC/L2_Compression/blob/4d28b141930399cfb4990a63a3fae85c23a1b1e5/data_new/data.py#L24
https://github.com/ModelTC/L2_Compression/blob/4d28b141930399cfb4990a63a3fae85c23a1b1e5/data_new/data.py#L44
https://github.com/ModelTC/L2_Compression/blob/4d28b141930399cfb4990a63a3fae85c23a1b1e5/train/test_baseline.py#L459
https://github.com/ModelTC/L2_Compression/blob/4d28b141930399cfb4990a63a3fae85c23a1b1e5/train/test_baseline.py#L468
https://github.com/ModelTC/L2_Compression/blob/4d28b141930399cfb4990a63a3fae85c23a1b1e5/train/train_final.py#L497
https://github.com/ModelTC/L2_Compression/blob/4d28b141930399cfb4990a63a3fae85c23a1b1e5/train/train_final.py#L507

===================================
https://github.com/guoyongcs/TAPADL
===================================

Found 7 times
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(
                inc_dataset, sampler=sampler_val, batch_size=int(args.batch_size),
                num_workers=args.num_workers,
                pin_memory=args.pin_mem,
                drop_last=False
            )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
                ina_dataset, batch_size=int(args.batch_size),
                num_workers=args.num_workers,
                pin_memory=args.pin_mem,
                drop_last=False
            )
torch.utils.data.DataLoader(
                inr_dataset, batch_size=int(args.batch_size),
                num_workers=args.num_workers,
                pin_memory=args.pin_mem,
                drop_last=False
            )
torch.utils.data.DataLoader(
                insk_dataset, batch_size=int(1.5 * args.batch_size),
                num_workers=args.num_workers,
                pin_memory=args.pin_mem,
                drop_last=False
            )
https://github.com/guoyongcs/TAPADL/blob/6e4dbff1de818fd28197251e9e0d4b8bc9b93d28/TAPADL_FAN/utils/utils.py#L121
https://github.com/guoyongcs/TAPADL/blob/6e4dbff1de818fd28197251e9e0d4b8bc9b93d28/TAPADL_RVT/engine.py#L193
https://github.com/guoyongcs/TAPADL/blob/6e4dbff1de818fd28197251e9e0d4b8bc9b93d28/TAPADL_RVT/main.py#L300
https://github.com/guoyongcs/TAPADL/blob/6e4dbff1de818fd28197251e9e0d4b8bc9b93d28/TAPADL_RVT/main.py#L308
https://github.com/guoyongcs/TAPADL/blob/6e4dbff1de818fd28197251e9e0d4b8bc9b93d28/TAPADL_RVT/main.py#L479
https://github.com/guoyongcs/TAPADL/blob/6e4dbff1de818fd28197251e9e0d4b8bc9b93d28/TAPADL_RVT/main.py#L498
https://github.com/guoyongcs/TAPADL/blob/6e4dbff1de818fd28197251e9e0d4b8bc9b93d28/TAPADL_RVT/main.py#L509

=================================
https://github.com/yyvhang/IAGNet
=================================

Found 5 times
DataLoader(val_dataset, dict['batch_size'], num_workers=8, shuffle=True)
DataLoader(train_dataset, batch_size=batch_size, num_workers=8 ,shuffle=True, drop_last=True)
DataLoader(val_dataset, batch_size=batch_size, num_workers=8, shuffle=True)
DataLoader(train_dataset, batch_size=16, num_workers=8, shuffle=True)
DataLoader(val_dataset, batch_size=1,
                            shuffle=False, num_workers=4, drop_last=False)
https://github.com/yyvhang/IAGNet/blob/5b9a898a24b4f3e803d5dcc94e1712da0688d56a/evalization.py#L200
https://github.com/yyvhang/IAGNet/blob/5b9a898a24b4f3e803d5dcc94e1712da0688d56a/train.py#L53
https://github.com/yyvhang/IAGNet/blob/5b9a898a24b4f3e803d5dcc94e1712da0688d56a/train.py#L59
https://github.com/yyvhang/IAGNet/blob/5b9a898a24b4f3e803d5dcc94e1712da0688d56a/data_utils/dataset_point.py#L103
https://github.com/yyvhang/IAGNet/blob/5b9a898a24b4f3e803d5dcc94e1712da0688d56a/data_utils/read_data.py#L122

================================
https://github.com/ajzhai/PEANUT
================================

Found 15 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
        test_dataset,
        batch_size=1,
        sampler=None,
        num_workers=0,
        shuffle=False,
    )
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/mmseg/datasets/builder.py#L148
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/mmseg/datasets/builder.py#L161
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_eval_hook.py#L46
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_eval_hook.py#L58
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_eval_hook.py#L60
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_eval_hook.py#L84
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_eval_hook.py#L96
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_eval_hook.py#L98
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_eval_hook.py#L133
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_eval_hook.py#L145
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_eval_hook.py#L147
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_eval_hook.py#L173
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_eval_hook.py#L185
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_eval_hook.py#L187
https://github.com/ajzhai/PEANUT/blob/5fe8358bece89645f7651e524234f967215fa4ac/prediction/tests/test_apis/test_single_gpu.py#L37

====================================================
https://github.com/EnricoCancelli/ProximitySocialNav
====================================================

Found 8 times
DataLoader(
            eqa_cnn_pretrain_dataset,
            batch_size=config.IL.EQACNNPretrain.batch_size,
            shuffle=True,
        )
DataLoader(
            eqa_cnn_pretrain_dataset,
            batch_size=config.IL.EQACNNPretrain.batch_size,
            shuffle=False,
        )
DataLoader(
                nav_dataset, batch_size=config.IL.NAV.batch_size
            )
DataLoader(nav_dataset)
DataLoader(
            vqa_dataset, batch_size=config.IL.VQA.batch_size
        )
DataLoader(
            vqa_dataset, batch_size=config.IL.VQA.batch_size
        )
DataLoader(train_data, batch_size=c_opt["b_size"])
DataLoader(val_data, batch_size=c_opt["b_size"])
https://github.com/EnricoCancelli/ProximitySocialNav/blob/0043ffe83050821a68835bda190d729ba50a77cb/habitat-lab/habitat_baselines/il/trainers/eqa_cnn_pretrain_trainer.py#L91
https://github.com/EnricoCancelli/ProximitySocialNav/blob/0043ffe83050821a68835bda190d729ba50a77cb/habitat-lab/habitat_baselines/il/trainers/eqa_cnn_pretrain_trainer.py#L204
https://github.com/EnricoCancelli/ProximitySocialNav/blob/0043ffe83050821a68835bda190d729ba50a77cb/habitat-lab/habitat_baselines/il/trainers/pacman_trainer.py#L149
https://github.com/EnricoCancelli/ProximitySocialNav/blob/0043ffe83050821a68835bda190d729ba50a77cb/habitat-lab/habitat_baselines/il/trainers/pacman_trainer.py#L366
https://github.com/EnricoCancelli/ProximitySocialNav/blob/0043ffe83050821a68835bda190d729ba50a77cb/habitat-lab/habitat_baselines/il/trainers/vqa_trainer.py#L131
https://github.com/EnricoCancelli/ProximitySocialNav/blob/0043ffe83050821a68835bda190d729ba50a77cb/habitat-lab/habitat_baselines/il/trainers/vqa_trainer.py#L305
https://github.com/EnricoCancelli/ProximitySocialNav/blob/0043ffe83050821a68835bda190d729ba50a77cb/habitat-lab/habitat_baselines/rl/ppo/VOtrainer.py#L1150
https://github.com/EnricoCancelli/ProximitySocialNav/blob/0043ffe83050821a68835bda190d729ba50a77cb/habitat-lab/habitat_baselines/rl/ppo/VOtrainer.py#L1151

============================================
https://github.com/robertdvdk/part_detection
============================================

Found 7 times
torch.utils.data.DataLoader(eval_data, batch_size=1, shuffle=False, num_workers=1, pin_memory=False,
                                              drop_last=False)
torch.utils.data.DataLoader(fit_data, batch_size=1, shuffle=False, num_workers=1, pin_memory=False,
                                             drop_last=False)
torch.utils.data.DataLoader(eval_data, batch_size=1, shuffle=False, num_workers=4, pin_memory=False,
                                              drop_last=False)
torch.utils.data.DataLoader(fit_data, batch_size=1, shuffle=True, num_workers=4, pin_memory=False,
                                             drop_last=False)
torch.utils.data.DataLoader(
        eval_data, batch_size=1, shuffle=False,
        num_workers=1, pin_memory=False, drop_last=False)
torch.utils.data.DataLoader(dataset=dataset_train, batch_size=args.batch_size, shuffle=True,
                                               num_workers=4)
torch.utils.data.DataLoader(dataset=dataset_val, batch_size=test_batch, shuffle=True, num_workers=4)
https://github.com/robertdvdk/part_detection/blob/eec53f2f40602113f74c6c1f60a2034823b0fcaf/evaluate_celeba.py#L269
https://github.com/robertdvdk/part_detection/blob/eec53f2f40602113f74c6c1f60a2034823b0fcaf/evaluate_celeba.py#L280
https://github.com/robertdvdk/part_detection/blob/eec53f2f40602113f74c6c1f60a2034823b0fcaf/evaluate_cub.py#L312
https://github.com/robertdvdk/part_detection/blob/eec53f2f40602113f74c6c1f60a2034823b0fcaf/evaluate_cub.py#L324
https://github.com/robertdvdk/part_detection/blob/eec53f2f40602113f74c6c1f60a2034823b0fcaf/evaluate_partimagenet.py#L79
https://github.com/robertdvdk/part_detection/blob/eec53f2f40602113f74c6c1f60a2034823b0fcaf/main.py#L64
https://github.com/robertdvdk/part_detection/blob/eec53f2f40602113f74c6c1f60a2034823b0fcaf/main.py#L68

==============================
https://github.com/gmum/ICICLE
==============================

Found 12 times
torch.utils.data.DataLoader(trn_loader.dataset + self.exemplars_dataset,
                                                     batch_size=trn_loader.batch_size,
                                                     shuffle=True,
                                                     num_workers=trn_loader.num_workers,
                                                     pin_memory=trn_loader.pin_memory)
torch.utils.data.DataLoader(trn_loader.dataset + self.exemplars_dataset,
                                                     batch_size=trn_loader.batch_size,
                                                     shuffle=True,
                                                     num_workers=trn_loader.num_workers,
                                                     pin_memory=trn_loader.pin_memory)
torch.utils.data.DataLoader(trn_loader.dataset + self.exemplars_dataset,
                                                     batch_size=trn_loader.batch_size,
                                                     shuffle=True,
                                                     num_workers=trn_loader.num_workers,
                                                     pin_memory=trn_loader.pin_memory)
torch.utils.data.DataLoader(trn_loader.dataset + self.exemplars_dataset,
                                                     batch_size=trn_loader.batch_size,
                                                     shuffle=True,
                                                     num_workers=trn_loader.num_workers,
                                                     pin_memory=trn_loader.pin_memory)
torch.utils.data.DataLoader(trn_loader.dataset + self.exemplars_dataset,
                                                     batch_size=trn_loader.batch_size,
                                                     shuffle=True,
                                                     num_workers=trn_loader.num_workers,
                                                     pin_memory=trn_loader.pin_memory)
torch.utils.data.DataLoader(trn_loader.dataset + self.exemplars_dataset,
                                                     batch_size=trn_loader.batch_size,
                                                     shuffle=True,
                                                     num_workers=trn_loader.num_workers,
                                                     pin_memory=trn_loader.pin_memory)
torch.utils.data.DataLoader(trn_loader.dataset + self.exemplars_dataset,
                                                     batch_size=trn_loader.batch_size,
                                                     shuffle=True,
                                                     num_workers=trn_loader.num_workers,
                                                     pin_memory=trn_loader.pin_memory)
data.DataLoader(trn_dset[tt], batch_size=batch_size, shuffle=True, num_workers=num_workers,
                                            pin_memory=pin_memory)
data.DataLoader(val_dset[tt], batch_size=batch_size, shuffle=False, num_workers=num_workers,
                                            pin_memory=pin_memory)
data.DataLoader(tst_dset[tt], batch_size=batch_size, shuffle=False, num_workers=num_workers,
                                            pin_memory=pin_memory)
data.DataLoader(psh_dset[tt], batch_size=batch_size, shuffle=False, num_workers=num_workers,
                                            pin_memory=pin_memory)
DataLoader(ds_for_selection, batch_size=trn_loader.batch_size, shuffle=False,
                                    num_workers=trn_loader.num_workers, pin_memory=trn_loader.pin_memory)
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/approach/ewc_protopnet.py#L97
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/approach/finetuning_protopnet.py#L99
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/approach/freezing_protopnet.py#L138
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/approach/icicle.py#L133
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/approach/lwf_protopnet.py#L83
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/approach/lwm_naive_protopnet.py#L104
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/approach/lwm_protopnet.py#L109
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/datasets/data_loader.py#L67
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/datasets/data_loader.py#L69
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/datasets/data_loader.py#L71
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/datasets/data_loader.py#L73
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/datasets/exemplars_selection.py#L28

========================================
https://github.com/ExplainableML/ProbVLM
========================================

Found 18 times
DataLoader(cub_dataset, batch_sampler=sampler,
                                num_workers=num_workers,
#                                collate_fn=image_to_caption_collate_fn,
                                pin_memory=True)
DataLoader(cub_dataset,
                                batch_size=batch_size,
                                shuffle=False,
                                num_workers=num_workers,
#                                collate_fn=image_to_caption_collate_fn,
                                pin_memory=True)
DataLoader(coco_dataset,
                            batch_size=batch_size,
                            shuffle=train,
                            num_workers=num_workers,
                            pin_memory=True)
DataLoader(flickr_dataset,
                            batch_size=batch_size,
                            shuffle=train,
                            num_workers=num_workers,
                            pin_memory=True)
DataLoader(fashion_dataset,batch_size=batch_size,shuffle=True,num_workers=num_workers,pin_memory=True)
DataLoader(fashion_dataset,batch_size=batch_size,shuffle=False,num_workers=num_workers,pin_memory=True)
DataLoader(flo_dataset, batch_sampler=sampler,
                                num_workers=num_workers,
                                pin_memory=True)
DataLoader(flo_dataset,
                                batch_size=batch_size,
                                shuffle=False,
                                num_workers=num_workers,
                                pin_memory=True)
torch.utils.data.DataLoader(
        self,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=num_workers,
        drop_last=drop_last,
        collate_fn=lambda i: i)
DataLoader(cub_dataset, batch_sampler=sampler,
                                num_workers=num_workers,
#                                collate_fn=image_to_caption_collate_fn,
                                pin_memory=True)
DataLoader(cub_dataset,
                                batch_size=batch_size,
                                shuffle=False,
                                num_workers=num_workers,
#                                collate_fn=image_to_caption_collate_fn,
                                pin_memory=True)
DataLoader(coco_dataset,
                            batch_size=batch_size,
                            shuffle=train,
                            num_workers=num_workers,
                            pin_memory=True)
DataLoader(flickr_dataset,
                            batch_size=batch_size,
                            shuffle=train,
                            num_workers=num_workers,
                            pin_memory=True)
DataLoader(fashion_dataset,batch_size=batch_size,shuffle=True,num_workers=num_workers,pin_memory=True)
DataLoader(fashion_dataset,batch_size=batch_size,shuffle=False,num_workers=num_workers,pin_memory=True)
DataLoader(flo_dataset, batch_sampler=sampler,
                                num_workers=num_workers,
                                pin_memory=True)
DataLoader(flo_dataset,
                                batch_size=batch_size,
                                shuffle=False,
                                num_workers=num_workers,
                                pin_memory=True)
torch.utils.data.DataLoader(
        self,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=num_workers,
        drop_last=drop_last,
        collate_fn=lambda i: i)
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds/_dataloader.py#L251
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds/_dataloader.py#L256
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds/_dataloader.py#L351
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds/_dataloader.py#L445
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds/_dataloader.py#L507
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds/_dataloader.py#L509
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds/_dataloader.py#L571
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds/_dataloader.py#L575
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds/fashion200k.py#L21
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds_lavis/_dataloader.py#L252
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds_lavis/_dataloader.py#L257
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds_lavis/_dataloader.py#L352
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds_lavis/_dataloader.py#L446
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds_lavis/_dataloader.py#L508
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds_lavis/_dataloader.py#L510
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds_lavis/_dataloader.py#L572
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds_lavis/_dataloader.py#L576
https://github.com/ExplainableML/ProbVLM/blob/cb69f28b1ab23142a1c671e004b09b5cb5d8a204/src/ds_lavis/fashion200k.py#L21

====================================
https://github.com/jhornauer/mde_ood
====================================

Found 6 times
DataLoader(id_dataset, opt.batch_size, shuffle=False, pin_memory=True, drop_last=False)
DataLoader(ood_dataset, opt.batch_size, shuffle=False, pin_memory=True, drop_last=False)
DataLoader(id_dataset, opt.batch_size, shuffle=False, pin_memory=True, drop_last=False)
DataLoader(ood_dataset, opt.batch_size, shuffle=False, pin_memory=True, drop_last=False)
DataLoader(id_dataset, opt.batch_size, shuffle=False, pin_memory=True, drop_last=False)
DataLoader(ood_dataset, opt.batch_size, shuffle=False, pin_memory=True, drop_last=False)
https://github.com/jhornauer/mde_ood/blob/e9d72eb120583d6cb8a9c8d3ea187af1bd3ea62b/monodepth2_ood/evaluate_ood_kitti.py#L231
https://github.com/jhornauer/mde_ood/blob/e9d72eb120583d6cb8a9c8d3ea187af1bd3ea62b/monodepth2_ood/evaluate_ood_kitti.py#L245
https://github.com/jhornauer/mde_ood/blob/e9d72eb120583d6cb8a9c8d3ea187af1bd3ea62b/monodepth2_ood/evaluate_ood_nyu.py#L220
https://github.com/jhornauer/mde_ood/blob/e9d72eb120583d6cb8a9c8d3ea187af1bd3ea62b/monodepth2_ood/evaluate_ood_nyu.py#L227
https://github.com/jhornauer/mde_ood/blob/e9d72eb120583d6cb8a9c8d3ea187af1bd3ea62b/monovit_ood/evaluate_ood_kitti.py#L230
https://github.com/jhornauer/mde_ood/blob/e9d72eb120583d6cb8a9c8d3ea187af1bd3ea62b/monovit_ood/evaluate_ood_kitti.py#L244

===========================================
https://github.com/sukrutrao/Model-Guidance
===========================================

Found 6 times
torch.utils.data.DataLoader(
        train_data, batch_size=args.train_batch_size, shuffle=True, num_workers=4, collate_fn=datasets.VOCDetectParsed.collate_fn)
torch.utils.data.DataLoader(
        val_data, batch_size=args.eval_batch_size, shuffle=False, num_workers=4, collate_fn=datasets.VOCDetectParsed.collate_fn)
torch.utils.data.DataLoader(
        test_data, batch_size=args.eval_batch_size, shuffle=False, num_workers=4, collate_fn=datasets.VOCDetectParsed.collate_fn)
DataLoader(
            self.train_dataset,
            self.batch_size,
            shuffle=shuffle,
            sampler=train_sampler,
            num_workers=self.num_workers,
            collate_fn=self.train_collate_fn,
            pin_memory=True,
        )
DataLoader(
            self.eval_dataset,
            self.batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
        )
DataLoader(
            self.eval_dataset,
            self.batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
        )
https://github.com/sukrutrao/Model-Guidance/blob/3a6e034a350284634afaa66e7d680cf19624deb9/train.py#L165
https://github.com/sukrutrao/Model-Guidance/blob/3a6e034a350284634afaa66e7d680cf19624deb9/train.py#L167
https://github.com/sukrutrao/Model-Guidance/blob/3a6e034a350284634afaa66e7d680cf19624deb9/train.py#L169
https://github.com/sukrutrao/Model-Guidance/blob/3a6e034a350284634afaa66e7d680cf19624deb9/bcos/data/datamodules.py#L39
https://github.com/sukrutrao/Model-Guidance/blob/3a6e034a350284634afaa66e7d680cf19624deb9/bcos/data/datamodules.py#L50
https://github.com/sukrutrao/Model-Guidance/blob/3a6e034a350284634afaa66e7d680cf19624deb9/bcos/data/datamodules.py#L59

==================================================
https://github.com/yossigandelsman/rosetta_neurons
==================================================

Found 1 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
https://github.com/yossigandelsman/rosetta_neurons/blob/3eb215f616dbf8b9e7c8af218618b77222552b4b/styleganxl/metric_utils.py#L266

=================================
https://github.com/Nanne/ProtoSim
=================================

Found 4 times
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_gallery,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
https://github.com/Nanne/ProtoSim/blob/fa23ffd037ec437fb4e53d3c5fe024dc93f50383/eval_protosim_linear.py#L62
https://github.com/Nanne/ProtoSim/blob/fa23ffd037ec437fb4e53d3c5fe024dc93f50383/eval_protosim_linear.py#L87
https://github.com/Nanne/ProtoSim/blob/fa23ffd037ec437fb4e53d3c5fe024dc93f50383/main.py#L58
https://github.com/Nanne/ProtoSim/blob/fa23ffd037ec437fb4e53d3c5fe024dc93f50383/prepare_analysis.py#L52

================================================
https://github.com/AI-Initiative-KAUST/VideoRLCS
================================================

Found 6 times
DataLoader(
            gridworld_positive_negative(path = args.train_dir,frame_unit_length = -1),
            batch_size = args.batch_size,
            shuffle = True,
            num_workers = 4,
            pin_memory = True,
            drop_last = False,
            collate_fn=collate_fn,
    )
DataLoader(
                    gridworld_positive_negative(path = args.test_dir,frame_unit_length = -1),
                    batch_size = args.batch_size,
                    shuffle = False,
                    num_workers = 2,
                    pin_memory = True,
                    drop_last = False,
                    collate_fn = collate_fn,
    )
DataLoader(
            Pong_dataset(path = args.data_dir,sample_num=args.training_num,split='train'),
            batch_size = args.batch_size,
            shuffle = True,
            num_workers = 4,
            pin_memory = True,
            drop_last = False,
            collate_fn=collate_fn
    )
DataLoader(
                    Pong_dataset(path = args.data_dir,sample_num=2000,split='test'),
                    batch_size = args.batch_size,
                    shuffle = False,
                    num_workers = 2,
                    pin_memory = True,
                    drop_last = False,
                    collate_fn=collate_fn
    )
DataLoader(
            Atari_dataset(  path = args.data_dir,
                            sample_num=args.training_num,
                            split='train',
                            sample_length=args.sample_length,
                            norm_scale=args.norm_scale,
                            random_length=args.random_length),
            batch_size = args.batch_size,
            shuffle = True,
            num_workers = args.num_workers,
            pin_memory = False,
            drop_last = False,
            collate_fn=collate_fn
    )
DataLoader(
                    Atari_dataset(path = args.data_dir,
                                  sample_num=2000,
                                  split='test',
                                  sample_length=args.sample_length,
                                  norm_scale=args.norm_scale,
                                  random_length=0),
                    batch_size = args.batch_size,
                    shuffle = False,
                    num_workers = args.num_workers,
                    pin_memory = False,
                    drop_last = False,
                    collate_fn=collate_fn
    )
https://github.com/AI-Initiative-KAUST/VideoRLCS/blob/6afb4a7609f117c1518d263b6b1d36babcc079cd/main.py#L52
https://github.com/AI-Initiative-KAUST/VideoRLCS/blob/6afb4a7609f117c1518d263b6b1d36babcc079cd/main.py#L61
https://github.com/AI-Initiative-KAUST/VideoRLCS/blob/6afb4a7609f117c1518d263b6b1d36babcc079cd/Attack/main.py#L56
https://github.com/AI-Initiative-KAUST/VideoRLCS/blob/6afb4a7609f117c1518d263b6b1d36babcc079cd/Attack/main.py#L65
https://github.com/AI-Initiative-KAUST/VideoRLCS/blob/6afb4a7609f117c1518d263b6b1d36babcc079cd/Policy_Improvement/main.py#L63
https://github.com/AI-Initiative-KAUST/VideoRLCS/blob/6afb4a7609f117c1518d263b6b1d36babcc079cd/Policy_Improvement/main.py#L77

=================================================
https://github.com/havelhuang/Eval_XAI_Robustness
=================================================

Found 1 times
DataLoader(
        dataset, batch_size=batch_size, shuffle = False,
        **({'num_workers': 1, 'pin_memory': True} if cuda else {})
    )
https://github.com/havelhuang/Eval_XAI_Robustness/blob/57be48fe5fb2b540576a594dc177f2f832c11e63/utils.py#L24

=======================================
https://github.com/hqhQAQ/EvalProtoPNet
=======================================

Found 4 times
torch.utils.data.DataLoader(test_dataset, batch_size=args.test_batch_size, num_workers=10, pin_memory=True, drop_last=False, shuffle=False)
torch.utils.data.DataLoader(
    train_dataset, sampler=sampler_train,
    batch_size=args.train_batch_size,
    num_workers=4, 
    pin_memory=False)
torch.utils.data.DataLoader(
    test_dataset, sampler=sampler_val,
    batch_size=args.test_batch_size,
    num_workers=4, 
    pin_memory=False)
torch.utils.data.DataLoader(test_dataset, batch_size=args.test_batch_size, num_workers=10, pin_memory=True, drop_last=False, shuffle=False)
https://github.com/hqhQAQ/EvalProtoPNet/blob/ab33e5da0bf124ba2ba4f86bf30cf239f42dc6be/local_analysis_vis.py#L50
https://github.com/hqhQAQ/EvalProtoPNet/blob/ab33e5da0bf124ba2ba4f86bf30cf239f42dc6be/main.py#L197
https://github.com/hqhQAQ/EvalProtoPNet/blob/ab33e5da0bf124ba2ba4f86bf30cf239f42dc6be/main.py#L202
https://github.com/hqhQAQ/EvalProtoPNet/blob/ab33e5da0bf124ba2ba4f86bf30cf239f42dc6be/util/eval_interpretability.py#L35

========================================
https://github.com/buyeah1109/MoreauGrad
========================================

Found 4 times
data.DataLoader(test_dataset, batch_size=1, shuffle=True, num_workers=2)
data.DataLoader(test_dataset, batch_size=1, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(train_dataset, batch_size=128, num_workers=2, shuffle=True)
torch.utils.data.DataLoader(val_dataset, batch_size=128, num_workers=2)
https://github.com/buyeah1109/MoreauGrad/blob/ede28376196570cbd3cd50582f06357c5681e6ed/attack.py#L114
https://github.com/buyeah1109/MoreauGrad/blob/ede28376196570cbd3cd50582f06357c5681e6ed/interpret.py#L32
https://github.com/buyeah1109/MoreauGrad/blob/ede28376196570cbd3cd50582f06357c5681e6ed/train.py#L39
https://github.com/buyeah1109/MoreauGrad/blob/ede28376196570cbd3cd50582f06357c5681e6ed/train.py#L40

========================================
https://github.com/cwangrun/ST-ProtoPNet
========================================

Found 10 times
torch.utils.data.DataLoader(
    test_dataset, batch_size=test_batch_size, shuffle=False,
    num_workers=20, pin_memory=False)
torch.utils.data.DataLoader(
        test_dataset, batch_size=test_batch_size, shuffle=True,
        num_workers=4, pin_memory=False)
torch.utils.data.DataLoader(
    train_dataset, batch_size=train_batch_size, shuffle=True,
    num_workers=num_workers, pin_memory=False)
torch.utils.data.DataLoader(
    train_push_dataset, batch_size=train_push_batch_size, shuffle=False,
    num_workers=num_workers, pin_memory=False)
torch.utils.data.DataLoader(
    test_dataset, batch_size=test_batch_size, shuffle=False,
    num_workers=num_workers, pin_memory=False)
torch.utils.data.DataLoader(
    test_dataset, batch_size=test_batch_size, shuffle=False,
    num_workers=num_workers, pin_memory=False)
torch.utils.data.DataLoader(
        test_dataset, batch_size=test_batch_size, shuffle=True,
        num_workers=4, pin_memory=False)
torch.utils.data.DataLoader(
    train_dataset, batch_size=train_batch_size, shuffle=True,
    num_workers=num_workers, pin_memory=False)
torch.utils.data.DataLoader(
    train_push_dataset, batch_size=train_push_batch_size, shuffle=False,
    num_workers=num_workers, pin_memory=False)
torch.utils.data.DataLoader(
    test_dataset, batch_size=test_batch_size, shuffle=False,
    num_workers=num_workers, pin_memory=False)
https://github.com/cwangrun/ST-ProtoPNet/blob/b77eb0f2cbadc41fe346b80fa361437137e4545f/cropped/combine_models.py#L141
https://github.com/cwangrun/ST-ProtoPNet/blob/b77eb0f2cbadc41fe346b80fa361437137e4545f/cropped/local_analysis.py#L100
https://github.com/cwangrun/ST-ProtoPNet/blob/b77eb0f2cbadc41fe346b80fa361437137e4545f/cropped/main.py#L114
https://github.com/cwangrun/ST-ProtoPNet/blob/b77eb0f2cbadc41fe346b80fa361437137e4545f/cropped/main.py#L124
https://github.com/cwangrun/ST-ProtoPNet/blob/b77eb0f2cbadc41fe346b80fa361437137e4545f/cropped/main.py#L135
https://github.com/cwangrun/ST-ProtoPNet/blob/b77eb0f2cbadc41fe346b80fa361437137e4545f/full/interpretability.py#L66
https://github.com/cwangrun/ST-ProtoPNet/blob/b77eb0f2cbadc41fe346b80fa361437137e4545f/full/local_analysis.py#L100
https://github.com/cwangrun/ST-ProtoPNet/blob/b77eb0f2cbadc41fe346b80fa361437137e4545f/full/main.py#L119
https://github.com/cwangrun/ST-ProtoPNet/blob/b77eb0f2cbadc41fe346b80fa361437137e4545f/full/main.py#L129
https://github.com/cwangrun/ST-ProtoPNet/blob/b77eb0f2cbadc41fe346b80fa361437137e4545f/full/main.py#L140

==============================================
https://github.com/kyotovision-public/deepoint
==============================================

Found 4 times
DataLoader(
        ds,
        batch_size=cfg.hardware.bs,
        num_workers=cfg.hardware.nworkers,
    )
DataLoader(
        train_ds,
        batch_size=cfg.hardware.bs,
        sampler=train_sampler,
        num_workers=cfg.hardware.nworkers,
        persistent_workers=True if cfg.hardware.nworkers != 0 else False,
    )
DataLoader(
        val_ds,
        batch_size=cfg.hardware.bs,
        num_workers=cfg.hardware.nworkers,
        persistent_workers=True if cfg.hardware.nworkers != 0 else False,
    )
DataLoader(
        test_ds,
        batch_size=cfg.hardware.bs,
        num_workers=cfg.hardware.nworkers,
        persistent_workers=True if cfg.hardware.nworkers != 0 else False,
    )
https://github.com/kyotovision-public/deepoint/blob/f8afc7594e55d7e1a682b9d5f35f3c7ae6370383/src/demo.py#L42
https://github.com/kyotovision-public/deepoint/blob/f8afc7594e55d7e1a682b9d5f35f3c7ae6370383/src/main.py#L109
https://github.com/kyotovision-public/deepoint/blob/f8afc7594e55d7e1a682b9d5f35f3c7ae6370383/src/main.py#L116
https://github.com/kyotovision-public/deepoint/blob/f8afc7594e55d7e1a682b9d5f35f3c7ae6370383/src/main.py#L122

=======================================
https://github.com/stevenlsw/contactgen
=======================================

Found 2 times
DataLoader(ds_train, batch_size=cfg.batch_size, **kwargs)
DataLoader(ds_val, batch_size=min(len(ds_val), cfg.batch_size), **kwargs)
https://github.com/stevenlsw/contactgen/blob/1aea2b6ce498ec90c4af0dd4c5fbdd4a23db761a/contactgen/trainer.py#L82
https://github.com/stevenlsw/contactgen/blob/1aea2b6ce498ec90c4af0dd4c5fbdd4a23db761a/contactgen/trainer.py#L84

====================================
https://github.com/yihuacheng/DVGaze
====================================

Found 3 times
DataLoader(dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers)
DataLoader(dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers)
DataLoader(dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers)
https://github.com/yihuacheng/DVGaze/blob/154a1786e3903287894052b38b2825c7444e775c/Code/eth/reader/reader.py#L206
https://github.com/yihuacheng/DVGaze/blob/154a1786e3903287894052b38b2825c7444e775c/Code/eve/reader/reader.py#L197
https://github.com/yihuacheng/DVGaze/blob/154a1786e3903287894052b38b2825c7444e775c/Code/eve/reader/result/last-camera.py#L164

=======================================
https://github.com/DanJun6737/TransFace
=======================================

Found 1 times
DataLoader(
        dataset, batch_size=128, drop_last=False, num_workers=4, collate_fn=collate_fn, )
https://github.com/DanJun6737/TransFace/blob/f930c52019c4c8481c91b454a2bbc3793de66766/onnx_ijbc.py#L64

===========================================
https://github.com/LiuLinyun/ASM-unofficial
===========================================

Found 2 times
DataLoader(dataset, batch_size=1)
DataLoader(dataset, batch_size=1)
https://github.com/LiuLinyun/ASM-unofficial/blob/734ca75f5d489490d8b739ac047a3dd6acdd1cd5/src/train.py#L24
https://github.com/LiuLinyun/ASM-unofficial/blob/734ca75f5d489490d8b739ac047a3dd6acdd1cd5/src/tools/init_gmm_params.py#L53

================================
https://github.com/oufuzhao/EQBM
================================

Found 6 times
DataLoader(dataset, 
                        batch_size=conf.batch_size, 
                        shuffle=True, 
                        pin_memory=conf.pin_memory, 
                        num_workers=conf.num_workers)
DataLoader(train_dataset, 
                        batch_size=conf.batch_size, 
                        shuffle=True, 
                        pin_memory=conf.pin_memory, 
                        num_workers=conf.num_workers)
DataLoader(val_dataset, 
                        batch_size=conf.batch_size, 
                        shuffle=True, 
                        pin_memory=conf.pin_memory, 
                        num_workers=conf.num_workers)
DataLoader(dataset, 
                        batch_size=conf.batch_size, 
                        shuffle=False, 
                        pin_memory=conf.pin_memory, 
                        num_workers=conf.num_workers)
DataLoader(train_dataset, 
                    batch_size=conf.batch_size, 
                    shuffle=True, 
                    pin_memory=conf.pin_memory, 
                    num_workers=conf.num_workers)
DataLoader(val_dataset, 
                    batch_size=conf.batch_size, 
                    shuffle=True, 
                    pin_memory=conf.pin_memory, 
                    num_workers=conf.num_workers)
https://github.com/oufuzhao/EQBM/blob/9cc8d7bd0a43bdd9255c28dc9e6114aee82e8cd7/dataset/dataset_txt.py#L75
https://github.com/oufuzhao/EQBM/blob/9cc8d7bd0a43bdd9255c28dc9e6114aee82e8cd7/dataset/dataset_txt.py#L88
https://github.com/oufuzhao/EQBM/blob/9cc8d7bd0a43bdd9255c28dc9e6114aee82e8cd7/dataset/dataset_txt.py#L93
https://github.com/oufuzhao/EQBM/blob/9cc8d7bd0a43bdd9255c28dc9e6114aee82e8cd7/dataset/dataset_txt.py#L101
https://github.com/oufuzhao/EQBM/blob/9cc8d7bd0a43bdd9255c28dc9e6114aee82e8cd7/dataset/dataset_txt_curriculum.py#L130
https://github.com/oufuzhao/EQBM/blob/9cc8d7bd0a43bdd9255c28dc9e6114aee82e8cd7/dataset/dataset_txt_curriculum.py#L135

==================================
https://github.com/CVI-SZU/UniFace
==================================

Found 1 times
torch.utils.data.DataLoader(dataset=train_set,
        batch_size=params.train_batch_size*params.bs_mult, shuffle=True,
        num_workers=params.workers, pin_memory=True, drop_last=params.drop_last,
        worker_init_fn=seed_worker, prefetch_factor=2, persistent_workers=True)
https://github.com/CVI-SZU/UniFace/blob/00ade47075e26f24a96a1db718046b9af5f068ea/train.py#L113

================================
https://github.com/zxz267/HaMuCo
================================

Found 1 times
DataLoader(get_dataset(cfg.dataset, split),
                                       batch_size=cfg.batch_size,
                                       num_workers=cfg.num_worker,
                                       shuffle=shuffle,
                                       pin_memory=True,
                                       drop_last=drop_last)
https://github.com/zxz267/HaMuCo/blob/03a0346546e6d3bef16a5e528adefc1f6225519a/base.py#L78

========================================
https://github.com/zyhbili/LivelySpeaker
========================================

Found 4 times
DataLoader(dataset, shuffle=shuffle,batch_size=args.batch_size, num_workers=args.num_workers, collate_fn=word_seq_collate_fn)
torch.utils.data.DataLoader(
        test_data, 
        batch_size=256,  
        shuffle=True,  
        num_workers=11,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        test_data, 
        batch_size=256,  
        shuffle=True,  
        num_workers=16,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        train_data, 
        batch_size=args.batch_size,  
        shuffle=False,  
        num_workers=16,
        drop_last=False,
    )
https://github.com/zyhbili/LivelySpeaker/blob/b7b51e023419fa258f46c95c74dc263d1d98f291/scripts/train_utils/ted_loader.py#L53
https://github.com/zyhbili/LivelySpeaker/blob/b7b51e023419fa258f46c95c74dc263d1d98f291/scripts_beat/test_LivelySpeaker_beat.py#L201
https://github.com/zyhbili/LivelySpeaker/blob/b7b51e023419fa258f46c95c74dc263d1d98f291/scripts_beat/test_RAG_beat.py#L184
https://github.com/zyhbili/LivelySpeaker/blob/b7b51e023419fa258f46c95c74dc263d1d98f291/scripts_beat/train_RAG.py#L45

=========================================================================
https://github.com/NaughtyZZ/3D_facial_shape_attribute_translation_ssgmap
=========================================================================

Found 1 times
data.DataLoader(dataset=facescape, batch_size=config.batch_size,
                                       shuffle=(config.mode == 'train'), num_workers=config.num_workers)
https://github.com/NaughtyZZ/3D_facial_shape_attribute_translation_ssgmap/blob/896cd71dde3e9fe8de61eec3b58f04045aaab7cd/main.py#L102

==========================================
https://github.com/PanasonicConnect/InvReg
==========================================

Found 1 times
torch.utils.data.DataLoader(
            dataset, batch_size=2048, pin_memory=False,
            num_workers=4, drop_last=True, sampler=train_sampler)
https://github.com/PanasonicConnect/InvReg/blob/12934f1f4c6f48a9a28835895b6e635fc2c923b7/utils/utils_partition.py#L276

=======================================
https://github.com/zhoubenjia/GFSLT-VLP
=======================================

Found 9 times
DataLoader(train_data,
                                 batch_size=args.batch_size, 
                                 num_workers=args.num_workers, 
                                 collate_fn=train_data.collate_fn,
                                 sampler=train_sampler, 
                                 pin_memory=args.pin_mem)
DataLoader(dev_data,
                                 batch_size=args.batch_size,
                                 num_workers=args.num_workers, 
                                 collate_fn=dev_data.collate_fn,
                                 sampler=dev_sampler, 
                                 pin_memory=args.pin_mem)
DataLoader(test_data,
                                 batch_size=args.batch_size,
                                 num_workers=args.num_workers, 
                                 collate_fn=test_data.collate_fn,
                                 sampler=test_sampler, 
                                 pin_memory=args.pin_mem)
DataLoader(train_data,
                                 batch_size=args.batch_size, 
                                 num_workers=args.num_workers, 
                                 collate_fn=train_data.collate_fn,
                                 sampler=train_sampler, 
                                 pin_memory=args.pin_mem,
                                 drop_last=True)
DataLoader(dev_data,
                                 batch_size=args.batch_size,
                                 num_workers=args.num_workers, 
                                 collate_fn=dev_data.collate_fn,
                                 sampler=dev_sampler, 
                                 pin_memory=args.pin_mem)
DataLoader(test_data,
                                 batch_size=args.batch_size,
                                 num_workers=args.num_workers, 
                                 collate_fn=test_data.collate_fn,
                                 sampler=test_sampler, 
                                 pin_memory=args.pin_mem)
DataLoader(train_data,
                                 batch_size=args.batch_size, 
                                 num_workers=args.num_workers, 
                                 collate_fn=train_data.collate_fn,
                                 sampler=train_sampler, 
                                 pin_memory=args.pin_mem,
                                 drop_last=True)
DataLoader(dev_data,
                                 batch_size=args.batch_size,
                                 num_workers=args.num_workers, 
                                 collate_fn=dev_data.collate_fn,
                                 sampler=dev_sampler, 
                                 pin_memory=args.pin_mem)
DataLoader(test_data,
                                 batch_size=args.batch_size,
                                 num_workers=args.num_workers, 
                                 collate_fn=test_data.collate_fn,
                                 sampler=test_sampler, 
                                 pin_memory=args.pin_mem)
https://github.com/zhoubenjia/GFSLT-VLP/blob/e67f0f494560dcee23f759d868609ed796fa4347/train_slt.py#L183
https://github.com/zhoubenjia/GFSLT-VLP/blob/e67f0f494560dcee23f759d868609ed796fa4347/train_slt.py#L194
https://github.com/zhoubenjia/GFSLT-VLP/blob/e67f0f494560dcee23f759d868609ed796fa4347/train_slt.py#L204
https://github.com/zhoubenjia/GFSLT-VLP/blob/e67f0f494560dcee23f759d868609ed796fa4347/train_vlp.py#L174
https://github.com/zhoubenjia/GFSLT-VLP/blob/e67f0f494560dcee23f759d868609ed796fa4347/train_vlp.py#L186
https://github.com/zhoubenjia/GFSLT-VLP/blob/e67f0f494560dcee23f759d868609ed796fa4347/train_vlp.py#L196
https://github.com/zhoubenjia/GFSLT-VLP/blob/e67f0f494560dcee23f759d868609ed796fa4347/train_vlp_v2.py#L183
https://github.com/zhoubenjia/GFSLT-VLP/blob/e67f0f494560dcee23f759d868609ed796fa4347/train_vlp_v2.py#L195
https://github.com/zhoubenjia/GFSLT-VLP/blob/e67f0f494560dcee23f759d868609ed796fa4347/train_vlp_v2.py#L205

=====================================================================
https://github.com/TencentYoutuResearch/OpenWorld-DeepFakeAttribution
=====================================================================

Found 1 times
data.DataLoader(dataset,
                                 batch_size=batch_size,
                                 shuffle=shuffle,
                                 sampler=sampler,
                                 num_workers=num_workers,
                                 pin_memory=True,
                                 )
https://github.com/TencentYoutuResearch/OpenWorld-DeepFakeAttribution/blob/7ad34a16f2366ca1f4b697b67a9ce779d74bc854/owdfa/datasets/dataset_factory.py#L41

===================================
https://github.com/cwc1260/HandR2N2
===================================

Found 3 times
torch.utils.data.DataLoader(test_data, batch_size=opt.batchSize,
                                          shuffle=False, num_workers=int(opt.workers), pin_memory=False)
torch.utils.data.DataLoader(train_data, batch_size=opt.batchSize,
										shuffle=True, num_workers=int(opt.workers), pin_memory=False)
torch.utils.data.DataLoader(test_data, batch_size=opt.batchSize,
										  shuffle=False, num_workers=int(opt.workers), pin_memory=False)
https://github.com/cwc1260/HandR2N2/blob/e37c604c1f6416addd2703977f41cbf8923371ad/eval_rrnn.py#L82
https://github.com/cwc1260/HandR2N2/blob/e37c604c1f6416addd2703977f41cbf8923371ad/train_rrnn.py#L111
https://github.com/cwc1260/HandR2N2/blob/e37c604c1f6416addd2703977f41cbf8923371ad/train_rrnn.py#L115

===============================================
https://github.com/seva100/stylegan-for-facerec
===============================================

Found 9 times
torch.utils.data.DataLoader(
        dataset_train, batch_size = BATCH_SIZE, sampler = None, pin_memory = PIN_MEMORY,
        num_workers = NUM_WORKERS, drop_last = DROP_LAST, shuffle = True, collate_fn = collate_fn_ignore_none
    )
torch.utils.data.DataLoader(
        dataset_train, batch_size=batch_size, pin_memory=True,
        num_workers=8, drop_last=False, shuffle=False, 
        collate_fn=None
    )
DataLoader(dataset,
							batch_size=args.batch_size,
							shuffle=False,
							num_workers=int(args.workers),
							drop_last=True)
DataLoader(dataset,
                            batch_size=opts.test_batch_size,
                            shuffle=False,
                            num_workers=int(opts.test_workers),
                            drop_last=False)
DataLoader(self.train_dataset,
										   batch_size=self.opts.batch_size,
										   shuffle=True,
										   num_workers=int(self.opts.workers),
										   drop_last=True)
DataLoader(self.test_dataset,
										  batch_size=self.opts.test_batch_size,
										  shuffle=False,
										  num_workers=int(self.opts.test_workers),
										  drop_last=True)
DataLoader(self.train_dataset,
										   batch_size=self.opts.batch_size,
										   shuffle=True,
										   num_workers=int(self.opts.workers),
										   drop_last=True)
DataLoader(self.test_dataset,
										  batch_size=self.opts.test_batch_size,
										  shuffle=False,
										  num_workers=int(self.opts.test_workers),
										  drop_last=True)
torch.utils.data.DataLoader(dataset, batch_size = batch_size, shuffle = False, pin_memory = True, num_workers = 0)
https://github.com/seva100/stylegan-for-facerec/blob/d8d8c1c9a9bb62440a3e05dd62f5b515d88093e0/train.py#L129
https://github.com/seva100/stylegan-for-facerec/blob/d8d8c1c9a9bb62440a3e05dd62f5b515d88093e0/rb-webface/scripts/test_RB_Webface.py#L134
https://github.com/seva100/stylegan-for-facerec/blob/d8d8c1c9a9bb62440a3e05dd62f5b515d88093e0/restyle-encoder/scripts/calc_losses_on_images.py#L54
https://github.com/seva100/stylegan-for-facerec/blob/d8d8c1c9a9bb62440a3e05dd62f5b515d88093e0/restyle-encoder/scripts/encoder_bootstrapping_inference.py#L62
https://github.com/seva100/stylegan-for-facerec/blob/d8d8c1c9a9bb62440a3e05dd62f5b515d88093e0/restyle-encoder/training/coach_restyle_e4e.py#L88
https://github.com/seva100/stylegan-for-facerec/blob/d8d8c1c9a9bb62440a3e05dd62f5b515d88093e0/restyle-encoder/training/coach_restyle_e4e.py#L93
https://github.com/seva100/stylegan-for-facerec/blob/d8d8c1c9a9bb62440a3e05dd62f5b515d88093e0/restyle-encoder/training/coach_restyle_psp.py#L111
https://github.com/seva100/stylegan-for-facerec/blob/d8d8c1c9a9bb62440a3e05dd62f5b515d88093e0/restyle-encoder/training/coach_restyle_psp.py#L116
https://github.com/seva100/stylegan-for-facerec/blob/d8d8c1c9a9bb62440a3e05dd62f5b515d88093e0/util/extract_feature_v1.py#L54

============================================
https://github.com/humansensinglab/dfcil-hgr
============================================

Found 18 times
TorchDataLoader(dataset, batch_size=4, shuffle=True)
TorchDataLoader(dataset, batch_size=4, shuffle=True)
TorchDataLoader(dataset, batch_size=4, shuffle=True)
TorchDataLoader(dataset, batch_size=4, shuffle=True)
TorchDataLoader(dataset, batch_size=4, shuffle=True)
TorchDataLoader(dataset, batch_size=4, shuffle=True)
TorchDataLoader(dataset, batch_size=4, shuffle=True)
TorchDataLoader(dataset, batch_size=4, shuffle=True)
torch.utils.data.DataLoader(
        train_dataset, 
        batch_size=cfg.batch_size, 
        shuffle=(train_sampler is None),
        num_workers=cfg.workers, 
        pin_memory=True, 
        sampler=train_sampler, 
        drop_last=True if n_gpus>1 else False,
    )
torch.utils.data.DataLoader(
        val_dataset, 
        batch_size=cfg.batch_size, 
        shuffle=(val_sampler is None),
        num_workers=cfg.workers, 
        pin_memory=True, 
        sampler=val_sampler, 
        drop_last=True if n_gpus>1 else False,
    )
torch.utils.data.DataLoader(
        old_train_dataset, 
        batch_size=cfg.batch_size.mi, 
        shuffle=(old_train_sampler is None),
        num_workers=cfg.workers, 
        pin_memory=True, 
        sampler=old_train_sampler, 
        drop_last=True if n_gpus>1 else False,
    )
torch.utils.data.DataLoader(
        new_train_dataset, 
        batch_size=cfg.batch_size.new, 
        shuffle=(new_train_sampler is None),
        num_workers=cfg.workers, 
        pin_memory=True, 
        sampler=new_train_sampler, 
        drop_last=True if n_gpus>1 else False,
    )
torch.utils.data.DataLoader(
        test_dataset, 
        batch_size=cfg.batch_size, 
        shuffle=False,
        num_workers=cfg.workers, 
        pin_memory=True, 
        sampler=None, 
        drop_last=False,            
    )
torch.utils.data.DataLoader(
        new_dataset, 
        batch_size=cfg.batch_size.new, 
        shuffle=False,
        num_workers=cfg.workers, 
        pin_memory=True, 
        sampler=None, 
        drop_last=False,            
    )
torch.utils.data.DataLoader(
        old_dataset, 
        batch_size=cfg.batch_size.mi, 
        shuffle=False,
        num_workers=cfg.workers, 
        pin_memory=True, 
        sampler=None, 
        drop_last=False,            
    )
torch.utils.data.DataLoader(
        test_dataset, 
        batch_size=cfg.batch_size, 
        shuffle=False,
        num_workers=cfg.workers, 
        pin_memory=True, 
        sampler=None, 
        drop_last=False,            
    )
torch.utils.data.DataLoader(
        test_dataset, 
        batch_size=cfg.batch_size, 
        shuffle=False,
        num_workers=cfg.workers, 
        pin_memory=True, 
        sampler=None, 
        drop_last=False,            
    )
torch.utils.data.DataLoader(
        test_dataset, 
        batch_size=cfg.batch_size, 
        shuffle=False,
        num_workers=cfg.workers, 
        pin_memory=True, 
        sampler=None, 
        drop_last=False,            
    )
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/datasets/ego_gesture.py#L197
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/datasets/ego_gesture_mi.py#L217
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/datasets/ego_gesture_multiview.py#L179
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/datasets/ego_gesture_multiview_mi.py#L198
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/datasets/hgr_shrec_2017.py#L148
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/datasets/hgr_shrec_2017_mi.py#L169
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/datasets/hgr_shrec_2017_multiview.py#L134
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/datasets/hgr_shrec_2017_multiview_mi.py#L155
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/drivers/mi_drop/supcon/main_supcon_pretrain.py#L157
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/drivers/mi_drop/supcon/main_supcon_pretrain.py#L167
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/drivers/mi_drop/supcon/main_supcon_pretrain_mi.py#L220
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/drivers/mi_drop/supcon/main_supcon_pretrain_mi.py#L230
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/drivers/mi_drop/supcon/save_classifier.py#L119
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/drivers/mi_drop/supcon/save_classifier_mi.py#L181
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/drivers/mi_drop/supcon/save_classifier_mi.py#L191
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/drivers/mi_drop/supcon/save_proto.py#L122
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/drivers/mi_drop/supcon/test_classifier.py#L127
https://github.com/humansensinglab/dfcil-hgr/blob/fa96db8fefac0878df7a7bdfa377098e309a6c99/drivers/mi_drop/supcon/test_classifier_mi.py#L147

=============================================
https://github.com/williamyang1991/StyleGANEX
=============================================

Found 5 times
DataLoader(dataset,
	                        batch_size=args.batch_size,
	                        shuffle=False,
	                        num_workers=int(args.workers),
	                        drop_last=True)
DataLoader(dataset,
                            batch_size=opts.test_batch_size,
                            shuffle=False,
                            num_workers=int(opts.test_workers),
                            drop_last=True)
DataLoader(dataset,
	                        batch_size=opts.test_batch_size,
	                        shuffle=False,
	                        num_workers=int(opts.test_workers),
	                        drop_last=True)
DataLoader(self.train_dataset,
                                           batch_size=self.opts.batch_size,
                                           shuffle=True,
                                           num_workers=int(self.opts.workers),
                                           drop_last=True)
DataLoader(self.test_dataset,
                                          batch_size=self.opts.test_batch_size,
                                          shuffle=False,
                                          num_workers=int(self.opts.test_workers),
                                          drop_last=True)
https://github.com/williamyang1991/StyleGANEX/blob/e593d16006f64b1e105c04eeb4a7cc149c1aca98/scripts/calc_losses_on_images.py#L40
https://github.com/williamyang1991/StyleGANEX/blob/e593d16006f64b1e105c04eeb4a7cc149c1aca98/scripts/inference.py#L59
https://github.com/williamyang1991/StyleGANEX/blob/e593d16006f64b1e105c04eeb4a7cc149c1aca98/scripts/style_mixing.py#L53
https://github.com/williamyang1991/StyleGANEX/blob/e593d16006f64b1e105c04eeb4a7cc149c1aca98/training/coach.py#L74
https://github.com/williamyang1991/StyleGANEX/blob/e593d16006f64b1e105c04eeb4a7cc149c1aca98/training/coach.py#L79

===============================================
https://github.com/anonymous-author-sub/seeable
===============================================

Found 4 times
data.DataLoader(
        train_set, sampler=data_sampler["train"], batch_size=batch_size, **params
    )
data.DataLoader(valid_set, batch_size=batch_size, **params)
data.DataLoader(
        train_set, sampler=data_sampler["train"], batch_size=batch_size, **params
    )
data.DataLoader(valid_set, batch_size=batch_size, **params)
https://github.com/anonymous-author-sub/seeable/blob/729fc22af7322a3adfe3d042ff8b31dca1996e71/src/runner/old/train_xception_baseline.py#L310
https://github.com/anonymous-author-sub/seeable/blob/729fc22af7322a3adfe3d042ff8b31dca1996e71/src/runner/old/train_xception_baseline.py#L315
https://github.com/anonymous-author-sub/seeable/blob/729fc22af7322a3adfe3d042ff8b31dca1996e71/src/runner/old/train_xception_baseline2.py#L348
https://github.com/anonymous-author-sub/seeable/blob/729fc22af7322a3adfe3d042ff8b31dca1996e71/src/runner/old/train_xception_baseline2.py#L353

==================================
https://github.com/Hzzone/AdaTrans
==================================

Found 4 times
torch.utils.data.DataLoader(
    dataset_with_indices(mem_ffhq_dataset),
    batch_size=bs,
    shuffle=False,
    drop_last=False,
    num_workers=8)
torch.utils.data.DataLoader(
    dataset_with_indices(mem_ffhq_dataset),
    batch_size=bs,
    shuffle=True,
    drop_last=True,
    num_workers=8)
torch.utils.data.DataLoader(
    dataset_with_indices(mem_ffhq_dataset),
    batch_size=bs,
    shuffle=False,
    drop_last=False,
    num_workers=8)
torch.utils.data.DataLoader(
    dataset_with_indices(mem_ffhq_dataset),
    batch_size=bs,
    shuffle=True,
    drop_last=True,
    num_workers=8)
https://github.com/Hzzone/AdaTrans/blob/717c15f7a8ef8c5728f37a5f6f01bd6b0790771d/training/train.py#L90
https://github.com/Hzzone/AdaTrans/blob/717c15f7a8ef8c5728f37a5f6f01bd6b0790771d/training/train.py#L96
https://github.com/Hzzone/AdaTrans/blob/717c15f7a8ef8c5728f37a5f6f01bd6b0790771d/training/train_onehot.py#L90
https://github.com/Hzzone/AdaTrans/blob/717c15f7a8ef8c5728f37a5f6f01bd6b0790771d/training/train_onehot.py#L96

=================================================================
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning
=================================================================

Found 18 times
DataLoader(
                idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4
            )
DataLoader(
                idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4
            )
DataLoader(
                idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4
            )
DataLoader(
                class_dset, batch_size=batch_size, shuffle=False, num_workers=4
            )
DataLoader(
                class_dset, batch_size=batch_size, shuffle=False, num_workers=4
            )
DataLoader(
                exemplar_dset, batch_size=batch_size, shuffle=False, num_workers=4
            )
DataLoader(
            test_dataset, batch_size=256, shuffle=False, num_workers=4
        )
DataLoader(DatasetSplit(train_dataset, user_groups[idx]), 
                    batch_size=self.args["local_bs"], shuffle=True, num_workers=4)
DataLoader(
            test_dataset, batch_size=256, shuffle=False, num_workers=4
        )
DataLoader(DatasetSplit(train_dataset, user_groups[idx]), 
                    batch_size=self.args["local_bs"], shuffle=True, num_workers=4)
DataLoader(
            test_dataset, batch_size=256, shuffle=False, num_workers=4
        )
DataLoader(local_dataset, batch_size=self.args["local_bs"], shuffle=True, num_workers=4)
DataLoader(
            test_dataset, batch_size=256, shuffle=False, num_workers=4
        )
DataLoader(DatasetSplit(train_dataset, user_groups[idx]), 
                    batch_size=self.args["local_bs"], shuffle=True, num_workers=4)
torch.utils.data.DataLoader(
            syn_dataset, batch_size=syn_bs, shuffle=True,
            num_workers=4, pin_memory=True, )
torch.utils.data.DataLoader(
            syn_dataset, batch_size=sample_batch_size, shuffle=True,
            num_workers=4, pin_memory=True, sampler=None)
DataLoader(
            test_dataset, batch_size=256, shuffle=False, num_workers=4
        )
DataLoader(DatasetSplit(train_dataset, user_groups[idx]), 
                    batch_size=self.args["local_bs"], shuffle=True, num_workers=4)
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/base.py#L244
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/base.py#L264
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/base.py#L316
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/base.py#L343
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/base.py#L361
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/base.py#L413
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/ewc.py#L54
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/ewc.py#L141
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/finetune.py#L104
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/finetune.py#L219
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/icarl.py#L91
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/icarl.py#L163
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/lwf.py#L73
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/lwf.py#L133
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/target.py#L629
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/target.py#L637
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/target.py#L660
https://github.com/zj-jayzhang/Federated-Class-Continual-Learning/blob/e8ac327539672fe0d6379f866cd76c4ac5db8eba/methods/target.py#L735

=================================
https://github.com/yvsriram/FACTS
=================================

Found 5 times
DataLoader(dataset, shuffle=shuffle, sampler=sampler, **kwargs, num_workers=6, pin_memory=False)
DataLoader(
            dataset=datasets['source-train'],
            shuffle=True,
            batch_size=args.batch_size,
            drop_last=False,
            num_workers=N_WORKERS)
DataLoader(
            dataset=datasets['source-train'],
            sampler = sampler,
            batch_size=args.batch_size,
            shuffle=False,
            num_workers=N_WORKERS)
DataLoader(
                dataset=dataset,
                batch_size=args.batch_size,
                shuffle=False,
                sampler=None,
                num_workers=N_WORKERS)
DataLoader(
                dataset=datasets['source-train'],
                batch_size=args.batch_size,
                shuffle=False,
                sampler=None,
                num_workers=N_WORKERS)
https://github.com/yvsriram/FACTS/blob/51fc0b602cf6387d29ee91858888659fe7628962/data/jtt/dro_dataset.py#L83
https://github.com/yvsriram/FACTS/blob/51fc0b602cf6387d29ee91858888659fe7628962/utils/datasets.py#L95
https://github.com/yvsriram/FACTS/blob/51fc0b602cf6387d29ee91858888659fe7628962/utils/datasets.py#L114
https://github.com/yvsriram/FACTS/blob/51fc0b602cf6387d29ee91858888659fe7628962/utils/datasets.py#L123
https://github.com/yvsriram/FACTS/blob/51fc0b602cf6387d29ee91858888659fe7628962/utils/datasets.py#L130

==============================================================
https://github.com/WU-YU-TONG/computational_efficient_backdoor
==============================================================

Found 14 times
DataLoader(score_dset, 1, shuffle=False)
DataLoader(score_dset, 1, shuffle=False)
DataLoader(score_dset, 64, shuffle=False)
DataLoader(valid_set, batch_size=32, shuffle=False)
DataLoader(troj_set, batch_size=32, shuffle=False)
DataLoader(dataset, 64, shuffle=False)
DataLoader(dataset, 64, shuffle=False)
DataLoader(train_set, args.score_batch_size, shuffle=True, num_workers=4)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=10, drop_last=False)
DataLoader(train_set, args.batch_size, shuffle=True, num_workers=4)
DataLoader(train_set, args.batch_size, shuffle=True)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=10, drop_last=False)
torch.utils.data.DataLoader(data, batch_size=12, shuffle=True)
torch.utils.data.DataLoader(point_data, batch_size=16, shuffle=True, num_workers=16, pin_memory=True, worker_init_fn=worker_init_fn)
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/backdoor_score.py#L124
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/backdoor_score.py#L147
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/backdoor_score.py#L167
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/eval.py#L25
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/eval.py#L44
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/eval.py#L66
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/eval.py#L94
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/training.py#L58
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/training.py#L76
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/training.py#L116
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/training.py#L145
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/training.py#L201
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/data_utils/ModelNetDataLoader.py#L280
https://github.com/WU-YU-TONG/computational_efficient_backdoor/blob/f574ccd8e25aa358245e7c03b77ea8d30bc98d71/data_utils/S3DISDataLoader.py#L189

===========================================================
https://github.com/Spinozaaa/Federated-Long-tailed-Learning
===========================================================

Found 17 times
torch.utils.data.DataLoader(dataset=train_data_local_dict[idx].dataset,
                                                                             batch_size=batch_size, shuffle=True,
                                                                             drop_last=True)
DataLoader(sampler=self.valid_sampler, **self.init_kwargs)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False, drop_last=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False, drop_last=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False, drop_last=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=False, sampler=ClassAwareSampler(train_ds, 4, 1000, train_bs), drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False, drop_last=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False, drop_last=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, shuffle=True, drop_last=False)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False, drop_last=False)
data.DataLoader(dataset=ds, batch_size=bs, shuffle=shuffle, drop_last=drop_last)
data.DataLoader(dataset=ds, batch_size=bs, shuffle=shuffle, drop_last=drop_last)
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/clsimb_fedavg/fedavg_api.py#L587
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/clsimb_fedavg/multi_experts/base/base_data_loader.py#L61
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet/data_loader.py#L101
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet/data_loader.py#L102
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet/data_loader.py#L115
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet/data_loader.py#L116
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet/data_loader.py#L129
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet/data_loader.py#L130
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet_raw/data_loader.py#L76
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet_raw/data_loader.py#L78
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet_raw/data_loader.py#L80
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet_raw/data_loader.py#L93
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet_raw/data_loader.py#L94
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet_raw/data_loader.py#L107
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/ImageNet_raw/data_loader.py#L108
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/cifar10/data_loader.py#L212
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/data_preprocessing/cifar100/data_loader.py#L156

=======================================
https://github.com/davidpengucf/SFDAHPE
=======================================

Found 4 times
DataLoader(train_source_dataset, batch_size=args.batch_size,
                                     shuffle=True, num_workers=args.workers, pin_memory=True, drop_last=True)
DataLoader(val_source_dataset, batch_size=args.test_batch, shuffle=False, pin_memory=True)
DataLoader(train_target_dataset, batch_size=args.batch_size,
                                     shuffle=True, num_workers=args.workers, pin_memory=True, drop_last=True)
DataLoader(val_target_dataset, batch_size=args.test_batch, shuffle=False, pin_memory=True)
https://github.com/davidpengucf/SFDAHPE/blob/26f7df36fcd97a356fa52b48ab607829c5e9ec77/train_sfda.py#L90
https://github.com/davidpengucf/SFDAHPE/blob/26f7df36fcd97a356fa52b48ab607829c5e9ec77/train_sfda.py#L94
https://github.com/davidpengucf/SFDAHPE/blob/26f7df36fcd97a356fa52b48ab607829c5e9ec77/train_sfda.py#L100
https://github.com/davidpengucf/SFDAHPE/blob/26f7df36fcd97a356fa52b48ab607829c5e9ec77/train_sfda.py#L105

=====================================================
https://github.com/princetonvisualai/gender-artifacts
=====================================================

Found 1 times
DataLoader(dset, batch_size=B, shuffle=shuffle, num_workers=1)
https://github.com/princetonvisualai/gender-artifacts/blob/2accb396d143fd55cbd160d17f5a4c92fed42636/src/load_data.py#L69

===========================================
https://github.com/ruoxi-jia-group/CLIP-MIA
===========================================

Found 7 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=args.workers,
        sampler=sampler,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
DataLoader(evaluate_dataset, batch_size=1, shuffle=False)
DataLoader(train_dataset, batch_size=batch_size_attack, shuffle=True)
DataLoader(test_dataset, batch_size=batch_size_attack, shuffle=False)
https://github.com/ruoxi-jia-group/CLIP-MIA/blob/1d8317ad627d0cacc8544fd27b51474f271d616d/data.py#L140
https://github.com/ruoxi-jia-group/CLIP-MIA/blob/1d8317ad627d0cacc8544fd27b51474f271d616d/data.py#L400
https://github.com/ruoxi-jia-group/CLIP-MIA/blob/1d8317ad627d0cacc8544fd27b51474f271d616d/data.py#L443
https://github.com/ruoxi-jia-group/CLIP-MIA/blob/1d8317ad627d0cacc8544fd27b51474f271d616d/data.py#L546
https://github.com/ruoxi-jia-group/CLIP-MIA/blob/1d8317ad627d0cacc8544fd27b51474f271d616d/main.py#L396
https://github.com/ruoxi-jia-group/CLIP-MIA/blob/1d8317ad627d0cacc8544fd27b51474f271d616d/train_attackmodel.py#L139
https://github.com/ruoxi-jia-group/CLIP-MIA/blob/1d8317ad627d0cacc8544fd27b51474f271d616d/train_attackmodel.py#L140

========================================
https://github.com/CityU-AIM-Group/FedPD
========================================

Found 15 times
torch.utils.data.DataLoader(mnist_trainset, batch_size=options['batch_size'], shuffle=True)
torch.utils.data.DataLoader(mnist_testset_close, batch_size=options['batch_size'], shuffle=False)
torch.utils.data.DataLoader(mnist_testset_open, batch_size=options['batch_size'], shuffle=False)
torch.utils.data.DataLoader(svhn_trainset, batch_size=options['batch_size'], shuffle=True)
torch.utils.data.DataLoader(svhn_testset_close, batch_size=options['batch_size'], shuffle=False)
torch.utils.data.DataLoader(svhn_testset_open, batch_size=options['batch_size'], shuffle=False)
torch.utils.data.DataLoader(usps_trainset, batch_size=options['batch_size'], shuffle=True)
torch.utils.data.DataLoader(usps_testset_close, batch_size=options['batch_size'], shuffle=False)
torch.utils.data.DataLoader(usps_testset_open, batch_size=options['batch_size'], shuffle=False)
torch.utils.data.DataLoader(synth_trainset, batch_size=options['batch_size'], shuffle=True)
torch.utils.data.DataLoader(synth_testset_close, batch_size=options['batch_size'], shuffle=False)
torch.utils.data.DataLoader(synth_testset_open, batch_size=options['batch_size'], shuffle=False)
torch.utils.data.DataLoader(mnistm_trainset, batch_size=options['batch_size'], shuffle=True)
torch.utils.data.DataLoader(mnistm_testset_close, batch_size=options['batch_size'], shuffle=False)
torch.utils.data.DataLoader(mnistm_testset_open, batch_size=options['batch_size'], shuffle=False)
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L101
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L102
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L103
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L105
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L106
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L107
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L109
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L110
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L111
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L113
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L114
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L115
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L117
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L118
https://github.com/CityU-AIM-Group/FedPD/blob/151a3c1d082a86475cc5ece78a2d689b828069d2/proser_federated.py#L119

=================================
https://github.com/Jiaxuan-Li/PnD
=================================

Found 3 times
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=args.num_workers,
            pin_memory=True,
            drop_last=True
        )
DataLoader(
            self.valid_dataset,
            batch_size=self.batch_size,
            shuffle=False,
            num_workers=args.num_workers,
            pin_memory=True,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            shuffle=False,
            num_workers=args.num_workers,
            pin_memory=True,
        )
https://github.com/Jiaxuan-Li/PnD/blob/e53042a80273c089ac8f5455da753b4ca29375a3/learner.py#L85
https://github.com/Jiaxuan-Li/PnD/blob/e53042a80273c089ac8f5455da753b4ca29375a3/learner.py#L94
https://github.com/Jiaxuan-Li/PnD/blob/e53042a80273c089ac8f5455da753b4ca29375a3/learner.py#L102

==========================================================================
https://github.com/renahon/mining_bias_target_alignment_from_voronoi_cells
==========================================================================

Found 3 times
data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers,
        pin_memory=True,
    )
DataLoader(
        dataset=train_dataset,
        batch_size=dataset_params["batch_size"],
        shuffle=True,
        num_workers=8,
        pin_memory=True,
    )
DataLoader(
        dataset=test_dataset,
        batch_size=dataset_params["test_batch_size"],
        shuffle=True,
        num_workers=4,
        pin_memory=True,
    )
https://github.com/renahon/mining_bias_target_alignment_from_voronoi_cells/blob/c4690ceef623da6fae333d08138c8ed230acb168/utils/biased_mnist.py#L321
https://github.com/renahon/mining_bias_target_alignment_from_voronoi_cells/blob/c4690ceef623da6fae333d08138c8ed230acb168/utils/tools.py#L168
https://github.com/renahon/mining_bias_target_alignment_from_voronoi_cells/blob/c4690ceef623da6fae333d08138c8ed230acb168/utils/tools.py#L175

=================================
https://github.com/ffhibnese/GIFD
=================================

Found 3 times
torch.utils.data.DataLoader(trainset, batch_size=min(defs.batch_size, len(trainset)),     
                                              shuffle=shuffle, drop_last=True, num_workers=num_workers, pin_memory=PIN_MEMORY)
torch.utils.data.DataLoader(validset, batch_size=min(defs.batch_size, len(trainset)),
                                              shuffle=False, drop_last=False, num_workers=num_workers, pin_memory=PIN_MEMORY)
torch.utils.data.DataLoader(dataset, batch_size=opt.batchSize,
                                             shuffle=True, num_workers=int(opt.workers))
https://github.com/ffhibnese/GIFD/blob/064f519dc41a7ad359068a02fee67ec469ce1aeb/inversefed/data/data_processing.py#L90
https://github.com/ffhibnese/GIFD/blob/064f519dc41a7ad359068a02fee67ec469ce1aeb/inversefed/data/data_processing.py#L92
https://github.com/ffhibnese/GIFD/blob/064f519dc41a7ad359068a02fee67ec469ce1aeb/inversefed/genmodels/cifar10_dcgan/dcgan.py#L135

======================================
https://github.com/imguangyu/FedPerfix
======================================

Found 9 times
torch.utils.data.DataLoader(
        trainset, batch_size=len(trainset.data), shuffle=False)
torch.utils.data.DataLoader(
        testset, batch_size=len(testset.data), shuffle=False)
torch.utils.data.DataLoader(
        trainset, batch_size=len(trainset), shuffle=True)
torch.utils.data.DataLoader(
        valset, batch_size=len(valset), shuffle=True)
torch.utils.data.DataLoader(
        testset, batch_size=len(testset), shuffle=True)
torch.utils.data.DataLoader(
            trainset, batch_size=len(trainset), shuffle=False)
torch.utils.data.DataLoader(
            testset, batch_size=len(testset), shuffle=False)
DataLoader(train_data, batch_size, drop_last=False, shuffle=True, num_workers=4, persistent_workers=True)
DataLoader(test_data, batch_size, drop_last=False, shuffle=True)
https://github.com/imguangyu/FedPerfix/blob/5acbd0c58c43b4b4a06bff51d1f61670917b8a0e/dataset/generate_cifar100.py#L41
https://github.com/imguangyu/FedPerfix/blob/5acbd0c58c43b4b4a06bff51d1f61670917b8a0e/dataset/generate_cifar100.py#L43
https://github.com/imguangyu/FedPerfix/blob/5acbd0c58c43b4b4a06bff51d1f61670917b8a0e/dataset/generate_medmnist.py#L52
https://github.com/imguangyu/FedPerfix/blob/5acbd0c58c43b4b4a06bff51d1f61670917b8a0e/dataset/generate_medmnist.py#L54
https://github.com/imguangyu/FedPerfix/blob/5acbd0c58c43b4b4a06bff51d1f61670917b8a0e/dataset/generate_medmnist.py#L56
https://github.com/imguangyu/FedPerfix/blob/5acbd0c58c43b4b4a06bff51d1f61670917b8a0e/dataset/generate_office_home.py#L147
https://github.com/imguangyu/FedPerfix/blob/5acbd0c58c43b4b4a06bff51d1f61670917b8a0e/dataset/generate_office_home.py#L149
https://github.com/imguangyu/FedPerfix/blob/5acbd0c58c43b4b4a06bff51d1f61670917b8a0e/system/flcore/clients/clientbase.py#L87
https://github.com/imguangyu/FedPerfix/blob/5acbd0c58c43b4b4a06bff51d1f61670917b8a0e/system/flcore/clients/clientbase.py#L93

=====================================
https://github.com/Sungwon-Han/FEDCPA
=====================================

Found 7 times
data.DataLoader(dataset=train_ds, batch_size=train_bs, drop_last=True, shuffle=True)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False)
data.DataLoader(dataset=val_ds, batch_size=test_bs, shuffle=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, drop_last=True, shuffle=True)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False)
data.DataLoader(dataset=train_ds,  batch_size=train_bs, drop_last=True, shuffle=True)
data.DataLoader(dataset=test_ds,  batch_size=test_bs, shuffle=False)
https://github.com/Sungwon-Han/FEDCPA/blob/ec438038307753c09037ec0612f629f352fde4b4/utils.py#L338
https://github.com/Sungwon-Han/FEDCPA/blob/ec438038307753c09037ec0612f629f352fde4b4/utils.py#L339
https://github.com/Sungwon-Han/FEDCPA/blob/ec438038307753c09037ec0612f629f352fde4b4/utils.py#L340
https://github.com/Sungwon-Han/FEDCPA/blob/ec438038307753c09037ec0612f629f352fde4b4/utils.py#L358
https://github.com/Sungwon-Han/FEDCPA/blob/ec438038307753c09037ec0612f629f352fde4b4/utils.py#L359
https://github.com/Sungwon-Han/FEDCPA/blob/ec438038307753c09037ec0612f629f352fde4b4/utils.py#L432
https://github.com/Sungwon-Han/FEDCPA/blob/ec438038307753c09037ec0612f629f352fde4b4/utils.py#L433

==========================================================
https://github.com/AbstractTeen/gan_ownership_verification
==========================================================

Found 4 times
data.DataLoader(dataset=dataset,
                                  batch_size=batch_size,
                                  shuffle=(mode=='train'),
                                  num_workers=num_workers)
torch.utils.data.DataLoader(
            test_dataset, batch_size=args.batch_size, shuffle=True, num_workers=0
        )
torch.utils.data.DataLoader(
        train_dataset, batch_size=config.batch_size, shuffle=True, num_workers=0
    )
torch.utils.data.DataLoader(
        test_dataset, batch_size=config.batch_size, shuffle=True, num_workers=0
    )
https://github.com/AbstractTeen/gan_ownership_verification/blob/2b713ff7c8f737c6aa4fe892888cc492ddbbc6ce/data_loader.py#L98
https://github.com/AbstractTeen/gan_ownership_verification/blob/2b713ff7c8f737c6aa4fe892888cc492ddbbc6ce/test.py#L79
https://github.com/AbstractTeen/gan_ownership_verification/blob/2b713ff7c8f737c6aa4fe892888cc492ddbbc6ce/train_d.py#L53
https://github.com/AbstractTeen/gan_ownership_verification/blob/2b713ff7c8f737c6aa4fe892888cc492ddbbc6ce/train_d.py#L64

====================================
https://github.com/FangXiuwen/AugHFL
====================================

Found 5 times
data.DataLoader(dataset=train_ds, batch_size=train_bs, drop_last=True, shuffle=True)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, drop_last=True, shuffle=True)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, drop_last=True, shuffle=True)
https://github.com/FangXiuwen/AugHFL/blob/5daca87d1893e9b2bdcdb4bb732d816a65c6b8b4/Dataset/utils.py#L132
https://github.com/FangXiuwen/AugHFL/blob/5daca87d1893e9b2bdcdb4bb732d816a65c6b8b4/Dataset/utils.py#L133
https://github.com/FangXiuwen/AugHFL/blob/5daca87d1893e9b2bdcdb4bb732d816a65c6b8b4/Dataset/utils.py#L179
https://github.com/FangXiuwen/AugHFL/blob/5daca87d1893e9b2bdcdb4bb732d816a65c6b8b4/Dataset/utils.py#L180
https://github.com/FangXiuwen/AugHFL/blob/5daca87d1893e9b2bdcdb4bb732d816a65c6b8b4/Dataset/utils.py#L203

====================================
https://github.com/Soptq/iccv23-3sfc
====================================

Found 3 times
DataLoader(data_train, batch_size=batch_size, shuffle=True)
DataLoader(data_eval, batch_size=batch_size, shuffle=False)
DataLoader(data, batch_size=128, shuffle=False)
https://github.com/Soptq/iccv23-3sfc/blob/2a76b913c0936d56c4db59113f768a076c6e4a28/fl_devices.py#L108
https://github.com/Soptq/iccv23-3sfc/blob/2a76b913c0936d56c4db59113f768a076c6e4a28/fl_devices.py#L109
https://github.com/Soptq/iccv23-3sfc/blob/2a76b913c0936d56c4db59113f768a076c6e4a28/fl_devices.py#L268

===============================
https://github.com/TsingZ0/GPFL
===============================

Found 2 times
DataLoader(train_data, batch_size, drop_last=True, shuffle=False)
DataLoader(test_data, batch_size, drop_last=True, shuffle=False)
https://github.com/TsingZ0/GPFL/blob/131a19c37db513a1725cc920f671bd54af6c93b1/system/flcore/clients/clientgp.py#L60
https://github.com/TsingZ0/GPFL/blob/131a19c37db513a1725cc920f671bd54af6c93b1/system/flcore/clients/clientgp.py#L66

=====================================
https://github.com/PKU-SEC-Lab/mpcvit
=====================================

Found 4 times
DataLoader(dataset=dataset_train, batch_size=args.batch_size, \
            pin_memory=args.pin_mem, num_workers=args.workers, sampler=train_sampler, shuffle=(train_sampler is None))
DataLoader(dataset=dataset_eval, batch_size=args.batch_size, \
            pin_memory=args.pin_mem, num_workers=args.workers, sampler=eval_sampler, shuffle=False)
DataLoader(dataset=dataset_train, batch_size=args.batch_size, \
            pin_memory=args.pin_mem, num_workers=args.workers, sampler=train_sampler, shuffle=(train_sampler is None))
DataLoader(dataset=dataset_eval, batch_size=args.batch_size, \
            pin_memory=args.pin_mem, num_workers=args.workers, sampler=eval_sampler, shuffle=False)
https://github.com/PKU-SEC-Lab/mpcvit/blob/17642e96c5f1fd4bd9a135192f329c8af7ea8c02/inference.py#L634
https://github.com/PKU-SEC-Lab/mpcvit/blob/17642e96c5f1fd4bd9a135192f329c8af7ea8c02/inference.py#L636
https://github.com/PKU-SEC-Lab/mpcvit/blob/17642e96c5f1fd4bd9a135192f329c8af7ea8c02/train.py#L628
https://github.com/PKU-SEC-Lab/mpcvit/blob/17642e96c5f1fd4bd9a135192f329c8af7ea8c02/train.py#L630

===================================
https://github.com/EzzzLi/Prom-PATE
===================================

Found 40 times
DataLoader(eval_dset, batch_size=args.batch_size, drop_last=False, shuffle=False, num_workers=4)
DataLoader(dset, batch_size=batch_size, shuffle=shuffle, collate_fn=collact_fn,
                          num_workers=num_workers, drop_last=drop_last, pin_memory=pin_memory)
DataLoader(dset, batch_size=batch_size, shuffle=False, num_workers=num_workers, collate_fn=collact_fn,
                          pin_memory=pin_memory, sampler=data_sampler(dset, num_replicas=num_replicas, rank=rank, num_samples=num_samples),
                          generator=generator, drop_last=drop_last)
DataLoader(dset, batch_size=batch_size, shuffle=False, num_workers=num_workers,
                          collate_fn=collact_fn, pin_memory=pin_memory, sampler=data_sampler,
                          generator=generator, drop_last=drop_last)
DataLoader(dset, batch_size=batch_size, shuffle=shuffle, collate_fn=collact_fn,
                          num_workers=num_workers, drop_last=drop_last, pin_memory=pin_memory)
DataLoader(dset, batch_size=batch_size, shuffle=False, num_workers=num_workers, collate_fn=collact_fn,
                          pin_memory=pin_memory, sampler=data_sampler(dset, num_replicas=num_replicas, rank=rank, num_samples=num_samples),
                          generator=generator, drop_last=drop_last)
DataLoader(dset, batch_size=batch_size, shuffle=False, num_workers=num_workers,
                          collate_fn=collact_fn, pin_memory=pin_memory, sampler=data_sampler,
                          generator=generator, drop_last=drop_last)
data.DataLoader(tfe_unlabeled_set, batch_size=self.tfe_u_ratio * self.args.batch_size,
                                               shuffle=True, num_workers=0, drop_last=True)
data.DataLoader(tfe_labeled_set, batch_size=self.args.batch_size,
                                             sampler=sampler_x, drop_last=True, num_workers=0)
data.DataLoader(train_labeled_set, batch_size=batch_size,
                                          shuffle=False, num_workers=0, drop_last=False)
data.DataLoader(train_unlabeled_set, batch_size=batch_size,
                                            shuffle=False, num_workers=0, drop_last=False)
data.DataLoader(balanced_feature_set, batch_size=batch_size,
                                              shuffle=True, num_workers=0, drop_last=True)
data.DataLoader(labeled_set, batch_size=100, shuffle=False, num_workers=0, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(quire_dataset, batch_size)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(private_label_data, batch_size)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(private_label_data, batch_size)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(private_label_data, batch_size)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(private_label_data, batch_size)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(private_label_data, batch_size)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(private_label_data, batch_size)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(semi_label_data, batch_size)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(private_label_data, batch_size)
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/eval.py#L69
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/semilearn/core/utils/build.py#L152
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/semilearn/core/utils/build.py#L170
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/semilearn/core/utils/build.py#L175
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/semilearn/core/utils/.ipynb_checkpoints/build-checkpoint.py#L152
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/semilearn/core/utils/.ipynb_checkpoints/build-checkpoint.py#L170
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/semilearn/core/utils/.ipynb_checkpoints/build-checkpoint.py#L175
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/semilearn/imb_algorithms/cossl/cossl.py#L155
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/semilearn/imb_algorithms/cossl/cossl.py#L165
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/semilearn/imb_algorithms/cossl/utils.py#L76
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/semilearn/imb_algorithms/cossl/utils.py#L78
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/semilearn/imb_algorithms/cossl/utils.py#L112
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/SSL/semilearn/imb_algorithms/cossl/utils.py#L243
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_FFHQ.py#L99
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_FFHQ.py#L100
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_FFHQ.py#L209
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_SVHN.py#L119
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_SVHN.py#L120
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_SVHN.py#L224
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_blood.py#L100
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_blood.py#L101
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_blood.py#L222
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_celeba.py#L101
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_celeba.py#L102
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_celeba.py#L207
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_cifar10.py#L99
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_cifar10.py#L100
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_cifar10.py#L212
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_cifar100.py#L104
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_cifar100.py#L105
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_cifar100.py#L242
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_derma.py#L112
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_derma.py#L113
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_derma.py#L235
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_eurosat.py#L96
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_eurosat.py#L97
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_eurosat.py#L216
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_tissue.py#L98
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_tissue.py#L99
https://github.com/EzzzLi/Prom-PATE/blob/95f3e4cbc8705b47116b162c1d3b89e4592e6ecc/pate/pate_tissue.py#L208

=====================================
https://github.com/HarveyP123/AutoReP
=====================================

Found 4 times
torch.utils.data.DataLoader(train_dataset, shuffle=True, batch_size=config.batch_size,
                              num_workers=config.workers, pin_memory=pin_memory)
torch.utils.data.DataLoader(val_dataset, shuffle=False, batch_size=config.batch_size,
                             num_workers=config.workers, pin_memory=pin_memory)
torch.utils.data.DataLoader(train_dataset, shuffle=True, batch_size=config.batch_size,
                              num_workers=config.workers, pin_memory=pin_memory)
torch.utils.data.DataLoader(val_dataset, shuffle=False, batch_size=config.batch_size,
                             num_workers=config.workers, pin_memory=pin_memory)
https://github.com/HarveyP123/AutoReP/blob/ac8f662b75abf8806d8705261798f93037dc2d7d/train_cifar.py#L83
https://github.com/HarveyP123/AutoReP/blob/ac8f662b75abf8806d8705261798f93037dc2d7d/train_cifar.py#L85
https://github.com/HarveyP123/AutoReP/blob/ac8f662b75abf8806d8705261798f93037dc2d7d/train_tiny_imagenet.py#L83
https://github.com/HarveyP123/AutoReP/blob/ac8f662b75abf8806d8705261798f93037dc2d7d/train_tiny_imagenet.py#L85

=================================
https://github.com/NVIDIA/NVFlare
=================================

Found 130 times
torch.utils.data.DataLoader(
                self.train_dataset, batch_size=self.batch_size, shuffle=True, num_workers=self.num_workers
            )
torch.utils.data.DataLoader(
                self.valid_dataset, batch_size=self.batch_size, shuffle=False, num_workers=self.num_workers
            )
torch.utils.data.DataLoader(
                self.train_dataset, batch_size=self.batch_size, shuffle=True, num_workers=self.num_workers
            )
torch.utils.data.DataLoader(
                self.valid_dataset, batch_size=self.batch_size, shuffle=False, num_workers=self.num_workers
            )
DataLoader(train_dataset, num_workers=2, batch_size=self.bs, shuffle=True)
DataLoader(valid_dataset, num_workers=2, batch_size=self.bs, shuffle=False)
DataLoader(test_dataset, num_workers=4, batch_size=64, shuffle=False)
DataLoader(test_data, batch_size=4, shuffle=False)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=2)
DataLoader(self.cifar_train, batch_size=self.batch_size)
DataLoader(self.cifar_val, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_train, batch_size=self.batch_size)
DataLoader(self.cifar_val, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_train, batch_size=self.batch_size)
DataLoader(self.cifar_val, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_train, batch_size=self.batch_size)
DataLoader(self.cifar_val, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
DataLoader(self.cifar_test, batch_size=self.batch_size)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(
            self.trainset, batch_size=self.batch_size, shuffle=True, num_workers=self.num_workers
        )
torch.utils.data.DataLoader(
            self.testset, batch_size=self.batch_size, shuffle=False, num_workers=self.num_workers
        )
torch.utils.data.DataLoader(
            self.trainset, batch_size=self.batch_size, shuffle=True, num_workers=self.num_workers
        )
torch.utils.data.DataLoader(
            self.testset, batch_size=self.batch_size, shuffle=False, num_workers=self.num_workers
        )
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(trainset, batch_size=self.batch_size, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=self.batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(
                self.train_dataset, batch_size=self.batch_size, shuffle=True
            )
torch.utils.data.DataLoader(
                self.val_dataset_for_search, batch_size=self.batch_size, shuffle=False
            )
torch.utils.data.DataLoader(
                self.valid_dataset, batch_size=self.batch_size, shuffle=False
            )
torch.utils.data.DataLoader(feature_dataset, batch_size=self.batch_size, shuffle=False)
torch.utils.data.DataLoader(
            local_train_dataset, batch_size=self.batch_size, shuffle=True
        )
torch.utils.data.DataLoader(feature_dataset, batch_size=self.batch_size, shuffle=False)
torch.utils.data.DataLoader(feature_dataset, batch_size=self.batch_size, shuffle=False)
torch.utils.data.DataLoader(
            self.train_dataset, batch_size=self.batch_size, shuffle=True
        )
torch.utils.data.DataLoader(
            self.train_dataset, batch_size=self.batch_size, shuffle=False
        )
torch.utils.data.DataLoader(
            self.valid_dataset, batch_size=self.batch_size, shuffle=False
        )
torch.utils.data.DataLoader(
                self.train_dataset,
                batch_size=1,
                shuffle=False,
            )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
        )
torch.utils.data.DataLoader(
            self.valid_dataset,
            batch_size=self.batch_size,
            shuffle=False,
        )
torch.utils.data.DataLoader(
                self.test_dataset,
                batch_size=self.batch_size,
                shuffle=False,
            )
DataLoader(test_data, batch_size=4, shuffle=False)
DataLoader(self.test_data, batch_size=4, shuffle=False)
DataLoader(self.test_data, batch_size=4, shuffle=False)
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/cifar10/pt/learners/cifar10_learner.py#L189
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/cifar10/pt/learners/cifar10_learner.py#L200
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/cifar10/pt/learners/cifar10_model_learner.py#L178
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/cifar10/pt/learners/cifar10_model_learner.py#L189
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/nlp-ner/custom/learners/nlp_learner.py#L156
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/nlp-ner/custom/learners/nlp_learner.py#L157
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/advanced/nlp-ner/utils/ner_model_test.py#L70
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/hello-pt/jobs/hello-pt/app/custom/cifar10validator.py#L49
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_ddp_fl.py#L68
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_ddp_fl.py#L71
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_ddp_original.py#L65
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_ddp_original.py#L68
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_fl.py#L42
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_fl.py#L45
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_fl.py#L59
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_fl.py#L62
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_fl.py#L65
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_fl.py#L68
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_original.py#L56
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_original.py#L59
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_original.py#L62
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_ddp_original.py#L65
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_fl.py#L59
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_fl.py#L62
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_fl.py#L65
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_fl.py#L68
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_original.py#L56
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_original.py#L59
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_original.py#L62
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_lightning_original.py#L65
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_original.py#L36
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_original.py#L39
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_structured_fl.py#L39
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_structured_fl.py#L42
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_structured_original.py#L36
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/ml-to-fl/pt/code/cifar10_structured_original.py#L39
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/dl/train.py#L48
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/dl/train.py#L51
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/executor.py#L108
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/executor.py#L116
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/model_learner.py#L83
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/model_learner.py#L90
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/train.py#L57
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/train.py#L59
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/train_with_mlflow.py#L58
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/code/fl/train_with_mlflow.py#L60
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/stats/image_statistics.py#L74
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/examples/hello-world/step-by-step/cifar10/stats/image_statistics.py#L75
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/auto-fed-rl/src/autofedrl/autofedrl_cifar10_learner.py#L130
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/auto-fed-rl/src/autofedrl/autofedrl_cifar10_learner.py#L141
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/auto-fed-rl/src/autofedrl/autofedrl_cifar10_learner.py#L156
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L246
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L291
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L351
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L407
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L484
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L488
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/one-shot-vfl/src/oneshotVFL/cifar10_learner_oneshotVFL.py#L492
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/quantifying-data-leakage/src/nvflare_gradinv/filters/rdlv_filter.py#L157
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/quantifying-data-leakage/src/nvflare_gradinv/learners/cxr_learner.py#L263
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/quantifying-data-leakage/src/nvflare_gradinv/learners/cxr_learner.py#L269
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/research/quantifying-data-leakage/src/nvflare_gradinv/learners/cxr_learner.py#L282
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/tests/integration_test/data/apps/pt_init_client/app/custom/cifar10validator.py#L49
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/tests/integration_test/data/apps/pt_use_name/app/custom/cifar10validator.py#L49
https://github.com/NVIDIA/NVFlare/blob/5341fc117a288d077c69b255df73799e009c75e4/tests/integration_test/data/apps/pt_use_path/app/custom/cifar10validator.py#L49

=========================================================
https://github.com/gorjanradevski/multimodal-distillation
=========================================================

Found 6 times
DataLoader(
        val_dataset,
        batch_size=cfg.BATCH_SIZE,
        num_workers=cfg.NUM_WORKERS,
        pin_memory=True if cfg.NUM_WORKERS else False,
    )
DataLoader(
        train_dataset,
        batch_size=cfg.BATCH_SIZE,
        shuffle=True,
        num_workers=cfg.NUM_WORKERS,
        pin_memory=True if cfg.NUM_WORKERS else False,
    )
DataLoader(
        val_dataset,
        batch_size=cfg.BATCH_SIZE,
        shuffle=False,
        num_workers=cfg.NUM_WORKERS,
        pin_memory=True if cfg.NUM_WORKERS else False,
    )
DataLoader(
            weighting_dataset,
            shuffle=False,
            batch_size=cfg.BATCH_SIZE,
            num_workers=cfg.NUM_WORKERS,
            pin_memory=True if cfg.NUM_WORKERS else False,
        )
DataLoader(
        train_dataset,
        batch_size=cfg.BATCH_SIZE,
        shuffle=True,
        num_workers=cfg.NUM_WORKERS,
        pin_memory=True if cfg.NUM_WORKERS else False,
    )
DataLoader(
        val_dataset,
        batch_size=cfg.BATCH_SIZE,
        num_workers=cfg.NUM_WORKERS,
        pin_memory=True if cfg.NUM_WORKERS else False,
    )
https://github.com/gorjanradevski/multimodal-distillation/blob/5444c66505ba98e6e2ffb5c2b2de073e56a92c72/src/inference.py#L46
https://github.com/gorjanradevski/multimodal-distillation/blob/5444c66505ba98e6e2ffb5c2b2de073e56a92c72/src/patient_distill.py#L87
https://github.com/gorjanradevski/multimodal-distillation/blob/5444c66505ba98e6e2ffb5c2b2de073e56a92c72/src/patient_distill.py#L94
https://github.com/gorjanradevski/multimodal-distillation/blob/5444c66505ba98e6e2ffb5c2b2de073e56a92c72/src/patient_distill.py#L118
https://github.com/gorjanradevski/multimodal-distillation/blob/5444c66505ba98e6e2ffb5c2b2de073e56a92c72/src/train.py#L51
https://github.com/gorjanradevski/multimodal-distillation/blob/5444c66505ba98e6e2ffb5c2b2de073e56a92c72/src/train.py#L58

============================================
https://github.com/facebookresearch/EgoVLPv2
============================================

Found 16 times
torch.utils.data.DataLoader(VideoDataSet(opt, subset=opt['infer_datasplit'], mode="inference"),
                                              batch_size=opt["batch_size"], shuffle=False,
                                              num_workers=0, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(VideoDataSet(opt, subset="train"),
                                               batch_size=opt["batch_size"], shuffle=True,
                                               **kwargs)
torch.utils.data.DataLoader(VideoDataSet(opt, subset="validation"),
                                              batch_size=opt["batch_size"], shuffle=False,
                                              **kwargs)
DataLoader(data, batch_size=5, drop_last=True, shuffle=False, num_workers=4)
torch.utils.data.DataLoader(
        dataset=train_set,
        batch_size=1,
        shuffle=False,
    )
torch.utils.data.DataLoader(
        dataset=train_set,
        batch_size=args.batch_size,
        shuffle=True,
        collate_fn=train_collate_fn,
    )
torch.utils.data.DataLoader(
        dataset=test_set,
        batch_size=args.batch_size,
        shuffle=False,
        collate_fn=test_collate_fn,
    )
DataLoader(dataset_train, batch_size=args.per_gpu_batch_size, drop_last=True, sampler=sampler_train, pin_memory=True, collate_fn=collate_func)
DataLoader(dataset_val, batch_size=args.per_gpu_batch_size, drop_last=False, sampler=sampler_val, collate_fn=collate_func)
DataLoader(dataset_test, batch_size=args.per_gpu_batch_size, drop_last=False, sampler=sampler_test, collate_fn=collate_func)
DataLoader(sampler=self.valid_sampler, **self.init_kwargs)
DataLoader(data, batch_size=5, drop_last=True, shuffle=False, num_workers=4)
DataLoader(dataset, batch_size=1, shuffle=False, num_workers=0)
DataLoader(dataset, batch_size=self.config["batch_size"], shuffle=True, num_workers=self.config["num_workers"])
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=0)
DataLoader(sampler=self.valid_sampler, **self.init_kwargs)
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/EgoMQ/Infer.py#L43
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/EgoMQ/Train.py#L38
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/EgoMQ/Train.py#L42
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/EgoNLQ/extract_features.py#L100
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/EgoNLQ/main.py#L61
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/EgoNLQ/utils/data_loader.py#L98
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/EgoNLQ/utils/data_loader.py#L109
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/EgoTaskQA/main_end2end.py#L103
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/EgoTaskQA/main_end2end.py#L114
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/EgoTaskQA/main_end2end.py#L125
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/EgoVLPv2/base/base_data_loader.py#L69
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/QFVS/extract_features.py#L84
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/QFVS/extract_multimodal_features.py#L63
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/QFVS/runner_train.py#L78
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/QFVS/runner_train.py#L191
https://github.com/facebookresearch/EgoVLPv2/blob/a87569e1fe7065ad77245314cecf4b8ad13ebd86/QFVS/base/base_data_loader.py#L69

==========================================
https://github.com/yael-vinker/SceneSketch
==========================================

Found 5 times
DataLoader(test_salobj_dataset,
                                            batch_size=1,
                                            shuffle=False,
                                            num_workers=1)
DataLoader(test_salobj_dataset,
                                        batch_size=1,
                                        shuffle=False,
                                        num_workers=1)
DataLoader(self.dataset, shuffle=False, batch_size=batch_size)
DataLoader(dataset, **dataloader_kwargs)
DataLoader(dataset, **dataloader_kwargs)
https://github.com/yael-vinker/SceneSketch/blob/2377feb466cd14fa56695b25628222e446a37b36/preprocess_images.py#L64
https://github.com/yael-vinker/SceneSketch/blob/2377feb466cd14fa56695b25628222e446a37b36/sketch_utils.py#L333
https://github.com/yael-vinker/SceneSketch/blob/2377feb466cd14fa56695b25628222e446a37b36/lama/saicinpainting/evaluation/evaluator.py#L36
https://github.com/yael-vinker/SceneSketch/blob/2377feb466cd14fa56695b25628222e446a37b36/lama/saicinpainting/training/data/datasets.py#L246
https://github.com/yael-vinker/SceneSketch/blob/2377feb466cd14fa56695b25628222e446a37b36/lama/saicinpainting/training/data/datasets.py#L289

=======================================
https://github.com/facebookresearch/DiT
=======================================

Found 1 times
DataLoader(
        dataset,
        batch_size=int(args.global_batch_size // dist.get_world_size()),
        shuffle=False,
        sampler=sampler,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True
    )
https://github.com/facebookresearch/DiT/blob/ed81ce2229091fd4ecc9a223645f95cf379d582b/train.py#L172

==============================================
https://github.com/CVMI-Lab/Point-UV-Diffusion
==============================================

Found 3 times
DataLoader(
            dataset=self.dataset_train,
            sampler=self.sampler_train,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            pin_memory=self.pin_memory,
            drop_last=True,
        )
DataLoader(
            dataset=self.dataset_val,
            sampler=self.sampler_val,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            pin_memory=self.pin_memory,
            drop_last=False,
        )
DataLoader(
            dataset=self.dataset_test,
            sampler=self.sampler_test,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            pin_memory=self.pin_memory,
            drop_last=False,
        )
https://github.com/CVMI-Lab/Point-UV-Diffusion/blob/d8c0e60eb8589cd755e81b391205ecded9be16e1/src/datamodules/shapenet_datamodule.py#L42
https://github.com/CVMI-Lab/Point-UV-Diffusion/blob/d8c0e60eb8589cd755e81b391205ecded9be16e1/src/datamodules/shapenet_datamodule.py#L52
https://github.com/CVMI-Lab/Point-UV-Diffusion/blob/d8c0e60eb8589cd755e81b391205ecded9be16e1/src/datamodules/shapenet_datamodule.py#L62

==========================================
https://github.com/mkshing/DiffFit-pytorch
==========================================

Found 2 times
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=True,
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
        num_workers=args.dataloader_num_workers,
    )
https://github.com/mkshing/DiffFit-pytorch/blob/78dc2d1a710590644637ac8c269ce8b2aa430020/train_difffit.py#L703
https://github.com/mkshing/DiffFit-pytorch/blob/78dc2d1a710590644637ac8c269ce8b2aa430020/train_difffit.py#L843

=================================
https://github.com/mandt-lab/PSLD
=================================

Found 5 times
DataLoader(
        dataset,
        batch_size,
        num_workers=config.clf.training.workers,
        pin_memory=True,
        shuffle=True,
        drop_last=True,
        **loader_kws,
    )
DataLoader(
        dataset,
        batch_size,
        num_workers=config.training.workers,
        pin_memory=True,
        shuffle=True,
        drop_last=True,
        **loader_kws,
    )
DataLoader(
        dataset,
        batch_size=config_sde.evaluation.batch_size,
        drop_last=False,
        pin_memory=True,
        shuffle=False,
        num_workers=config_sde.evaluation.workers,
        **loader_kws,
    )
DataLoader(
        dataset,
        batch_size=config.evaluation.batch_size,
        drop_last=False,
        pin_memory=True,
        shuffle=False,
        num_workers=config.evaluation.workers,
        **loader_kws,
    )
DataLoader(
        dataset,
        batch_size=config.evaluation.batch_size,
        drop_last=False,
        pin_memory=True,
        shuffle=False,
        num_workers=config.evaluation.workers,
        **loader_kws,
    )
https://github.com/mandt-lab/PSLD/blob/c8cf383f74b0a3d4ae14690c5138c16d7a39d33d/main/train_clf.py#L91
https://github.com/mandt-lab/PSLD/blob/c8cf383f74b0a3d4ae14690c5138c16d7a39d33d/main/train_sde.py#L102
https://github.com/mandt-lab/PSLD/blob/c8cf383f74b0a3d4ae14690c5138c16d7a39d33d/main/eval/class_cond_sample.py#L112
https://github.com/mandt-lab/PSLD/blob/c8cf383f74b0a3d4ae14690c5138c16d7a39d33d/main/eval/inpaint.py#L85
https://github.com/mandt-lab/PSLD/blob/c8cf383f74b0a3d4ae14690c5138c16d7a39d33d/main/eval/sample.py#L84

====================================================================
https://github.com/Kay1794/MMVP-motion-matrix-based-video-prediction
====================================================================

Found 3 times
torch.utils.data.DataLoader(trainset, batch_size=args.batch, shuffle=True,num_workers=num_workers)
torch.utils.data.DataLoader(valset, batch_size=args.batch, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(valset, batch_size=args.batch, shuffle=False, num_workers=num_workers)
https://github.com/Kay1794/MMVP-motion-matrix-based-video-prediction/blob/ebf84bb849dba80bdca5c40b76a6774fe4ec5c31/main.py#L98
https://github.com/Kay1794/MMVP-motion-matrix-based-video-prediction/blob/ebf84bb849dba80bdca5c40b76a6774fe4ec5c31/main.py#L102
https://github.com/Kay1794/MMVP-motion-matrix-based-video-prediction/blob/ebf84bb849dba80bdca5c40b76a6774fe4ec5c31/main.py#L112

=============================================
https://github.com/YifYang993/CR-NeRF-PyTorch
=============================================

Found 3 times
DataLoader(self.train_dataset,
                          shuffle=False,
                          num_workers=4,
                          batch_size=1, # self.hparams_.batch_size a time
                          pin_memory=True)
DataLoader(self.val_dataset,
                          shuffle=False,
                          num_workers=4,
                          batch_size=1, # validate one image (H*W rays) at a time
                          pin_memory=True)
DataLoader(dataset,
                          shuffle=False,
                          num_workers=4,
                          batch_size=1, # self.hparams.batch_size a time
                          pin_memory=True)
https://github.com/YifYang993/CR-NeRF-PyTorch/blob/bb0828915543dd1230544d933762230808198403/train_mask_grid_sample.py#L255
https://github.com/YifYang993/CR-NeRF-PyTorch/blob/bb0828915543dd1230544d933762230808198403/train_mask_grid_sample.py#L262
https://github.com/YifYang993/CR-NeRF-PyTorch/blob/bb0828915543dd1230544d933762230808198403/datasets/phototourism_mask_grid_sample.py#L349

===================================
https://github.com/simon3dv/SLR-SFS
===================================

Found 7 times
DataLoader(
        dataset=train_set,
        num_workers=opts.num_workers,
        batch_size=opts.batch_size,
        shuffle=True if "kitti" in opts.dataset else False,
        drop_last=True,
        pin_memory=True,
    )
DataLoader(
        dataset=train_set,
        num_workers=opts.num_workers,
        batch_size=opts.batch_size,
        shuffle=False,
        drop_last=True,
        pin_memory=True,
    )
DataLoader(
        dataset=train_set,
        num_workers=opts.num_workers,
        batch_size=opts.batch_size,
        shuffle=True if "kitti" in opts.dataset else False,
        drop_last=True,
        pin_memory=True,
    )
DataLoader(
        dataset=train_set,
        num_workers=opts.num_workers,
        batch_size=opts.batch_size,
        shuffle=False,
        drop_last=True,
        pin_memory=True,
    )
DataLoader(
        dataset=train_set,
        num_workers=opts.num_workers,
        batch_size=opts.batch_size,
        shuffle=True if "kitti" in opts.dataset else False,
        drop_last=True,
        pin_memory=True,
    )
DataLoader(
        dataset=train_set,
        num_workers=opts.num_workers,
        batch_size=opts.batch_size,
        shuffle=True if "kitti" in opts.dataset else False,
        drop_last=True,
        pin_memory=True,
    )
DataLoader(
		dataset=train_set,
		num_workers=opts.num_workers,
		batch_size=opts.batch_size,
		shuffle=True if "kitti" in opts.dataset else False,
		drop_last=True,
		pin_memory=True,
	)
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating.py#L293
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_2layers_joint_finetuneBGFluid_MSE.py#L302
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_BG.py#L309
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_alpha_2layers_joint_finetuneBGFluid_L1.py#L302
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_fixmotion.py#L298
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_motion_IGANonly.py#L298
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_motion_unet.py#L293

========================================
https://github.com/ChenyangQiQi/FateZero
========================================

Found 2 times
torch.utils.data.DataLoader(
        video_dataset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=4,
        collate_fn=collate_fn,
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=train_batch_size,
        shuffle=True,
        num_workers=16,
        collate_fn=collate_fn,
    )
https://github.com/ChenyangQiQi/FateZero/blob/9b6cb7b4dea2b2154df71ad7be0f61a66ca46d88/test_fatezero.py#L143
https://github.com/ChenyangQiQi/FateZero/blob/9b6cb7b4dea2b2154df71ad7be0f61a66ca46d88/train_tune_a_video.py#L231

================================
https://github.com/csyxwei/ELITE
================================

Found 4 times
torch.utils.data.DataLoader(train_dataset, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(train_dataset, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(train_dataset, batch_size=args.train_batch_size, shuffle=True)
torch.utils.data.DataLoader(train_dataset, batch_size=args.train_batch_size, shuffle=True)
https://github.com/csyxwei/ELITE/blob/84b6f2f43957e883ab7a40cf2c3e4519d854a25a/inference_global.py#L204
https://github.com/csyxwei/ELITE/blob/84b6f2f43957e883ab7a40cf2c3e4519d854a25a/inference_local.py#L235
https://github.com/csyxwei/ELITE/blob/84b6f2f43957e883ab7a40cf2c3e4519d854a25a/train_global.py#L573
https://github.com/csyxwei/ELITE/blob/84b6f2f43957e883ab7a40cf2c3e4519d854a25a/train_local.py#L536

=================================
https://github.com/snuvclab/chupa
=================================

Found 4 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=shuffle,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=shuffle, 
                          worker_init_fn=init_fn)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, 
                          worker_init_fn=init_fn)
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/utils/plmodules/data.py#L62
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/utils/plmodules/data.py#L68
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/utils/plmodules/data.py#L74
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/utils/plmodules/data.py#L80

========================================
https://github.com/bastianwandt/DiffPose
========================================

Found 11 times
torch.utils.data.DataLoader(test_dataset, batch_size=1, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(test_dataset, batch_size=1, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(train_dataset, batch_size=64, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(train_dataset, batch_size=64, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(test_dataset, batch_size=1, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(test_dataset, batch_size=64, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(test_dataset, batch_size=1, shuffle=False, drop_last=False)
data.DataLoader(dataset, batch_size=32, shuffle=True, generator=g)
data.DataLoader(dataset, batch_size=32, shuffle=True)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, shuffle=False, drop_last=False)
https://github.com/bastianwandt/DiffPose/blob/7750c9f463a0f75ddae28c182184ed95bb8833be/eval_qualitative.py#L34
https://github.com/bastianwandt/DiffPose/blob/7750c9f463a0f75ddae28c182184ed95bb8833be/generate_posefile.py#L26
https://github.com/bastianwandt/DiffPose/blob/7750c9f463a0f75ddae28c182184ed95bb8833be/generate_posefile.py#L57
https://github.com/bastianwandt/DiffPose/blob/7750c9f463a0f75ddae28c182184ed95bb8833be/generate_posefile.py#L81
https://github.com/bastianwandt/DiffPose/blob/7750c9f463a0f75ddae28c182184ed95bb8833be/generate_posefile.py#L117
https://github.com/bastianwandt/DiffPose/blob/7750c9f463a0f75ddae28c182184ed95bb8833be/generate_posefile.py#L140
https://github.com/bastianwandt/DiffPose/blob/7750c9f463a0f75ddae28c182184ed95bb8833be/generate_posefile.py#L167
https://github.com/bastianwandt/DiffPose/blob/7750c9f463a0f75ddae28c182184ed95bb8833be/models/trainer.py#L96
https://github.com/bastianwandt/DiffPose/blob/7750c9f463a0f75ddae28c182184ed95bb8833be/models/trainer.py#L98
https://github.com/bastianwandt/DiffPose/blob/7750c9f463a0f75ddae28c182184ed95bb8833be/models/trainer.py#L339
https://github.com/bastianwandt/DiffPose/blob/7750c9f463a0f75ddae28c182184ed95bb8833be/models/trainer.py#L741

========================================
https://github.com/IDEA-Research/HumanSD
========================================

Found 13 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
DataLoader(dataset, num_workers=0, batch_size=batch_size, shuffle=True)
DataLoader(dataset, num_workers=0, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=opt.bsize,
        shuffle=(train_sampler is None),
        num_workers=opt.num_workers,
        pin_memory=True,
        sampler=train_sampler)
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=opt.bsize,
            shuffle=(train_sampler is None),
            num_workers=opt.num_workers,
            pin_memory=True,
            sampler=train_sampler)
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=1,
            shuffle=False,
            num_workers=1,
            pin_memory=False)
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=opt.bsize,
            shuffle=(train_sampler is None),
            num_workers=opt.num_workers,
            pin_memory=True,
            sampler=train_sampler)
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=1,
            shuffle=False,
            num_workers=1,
            pin_memory=False)
DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True, num_workers=self.num_workers,
                          pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=False)
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/main.py#L206
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/main.py#L215
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/main.py#L231
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/main.py#L239
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/ControlNet/tutorial_train.py#L29
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/ControlNet/tutorial_train_sd21.py#L29
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/T2IAdapter/train_depth.py#L180
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/T2IAdapter/train_seg.py#L229
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/T2IAdapter/train_seg.py#L236
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/T2IAdapter/train_sketch.py#L240
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/T2IAdapter/train_sketch.py#L247
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/T2IAdapter/ldm/data/dataset_wikiart.py#L66
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/scripts/pose2img_metrics.py#L173

====================================================
https://github.com/line/Human-Interaction-Generation
====================================================

Found 12 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        pin_memory=False,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        persistent_workers=persistent_workers,
        **kwargs)
DataLoader(dataset, batch_size=1, num_workers=1, shuffle=True)
DataLoader(dataset, batch_size=batch_size, num_workers=4, shuffle=False)
DataLoader(dataset, batch_size=batch_size, drop_last=True, num_workers=4)
DataLoader(mm_dataset, batch_size=1, num_workers=1)
DataLoader(gt_mm_dataset, batch_size=1, num_workers=1)
DataLoader(
        test_dataset,
        batch_size=opt.batch_size,
        num_workers=4,
        pin_memory=False,
        shuffle=False)
DataLoader(
        test_dataset,
        batch_size=opt.batch_size,
        num_workers=4,
        pin_memory=False,
        shuffle=False)
DataLoader(
        train_dataset,
        batch_size=opt.batch_size,
        num_workers=4,
        pin_memory=False,
        shuffle=True)
DataLoader(
        val_dataset,
        batch_size=opt.batch_size,
        num_workers=4,
        pin_memory=False,
        shuffle=False)
DataLoader(
        train_dataset,
        batch_size=opt.batch_size,
        num_workers=4,
        pin_memory=False,
        shuffle=True)
DataLoader(
        val_dataset,
        batch_size=opt.batch_size,
        num_workers=4,
        pin_memory=False,
        shuffle=False)
https://github.com/line/Human-Interaction-Generation/blob/5b494e94275131805005a9b301d73c5c2844e6ab/codes/datasets/dataloader.py#L110
https://github.com/line/Human-Interaction-Generation/blob/5b494e94275131805005a9b301d73c5c2844e6ab/codes/datasets/evaluator.py#L30
https://github.com/line/Human-Interaction-Generation/blob/5b494e94275131805005a9b301d73c5c2844e6ab/codes/datasets/evaluator.py#L328
https://github.com/line/Human-Interaction-Generation/blob/5b494e94275131805005a9b301d73c5c2844e6ab/codes/datasets/evaluator.py#L403
https://github.com/line/Human-Interaction-Generation/blob/5b494e94275131805005a9b301d73c5c2844e6ab/codes/datasets/evaluator.py#L404
https://github.com/line/Human-Interaction-Generation/blob/5b494e94275131805005a9b301d73c5c2844e6ab/codes/datasets/evaluator.py#L405
https://github.com/line/Human-Interaction-Generation/blob/5b494e94275131805005a9b301d73c5c2844e6ab/codes/tools/test_consistency_evaluation_model.py#L95
https://github.com/line/Human-Interaction-Generation/blob/5b494e94275131805005a9b301d73c5c2844e6ab/codes/tools/test_evaluation_model.py#L95
https://github.com/line/Human-Interaction-Generation/blob/5b494e94275131805005a9b301d73c5c2844e6ab/codes/tools/train_consistency_evaluation_model.py#L92
https://github.com/line/Human-Interaction-Generation/blob/5b494e94275131805005a9b301d73c5c2844e6ab/codes/tools/train_consistency_evaluation_model.py#L99
https://github.com/line/Human-Interaction-Generation/blob/5b494e94275131805005a9b301d73c5c2844e6ab/codes/tools/train_evaluation_model.py#L93
https://github.com/line/Human-Interaction-Generation/blob/5b494e94275131805005a9b301d73c5c2844e6ab/codes/tools/train_evaluation_model.py#L100

======================================
https://github.com/minghanz/EQ-4D-StOP
======================================

Found 3 times
DataLoader(test_dataset,
                             batch_size=1,
                             sampler=test_sampler,
                             collate_fn=collate_fn,
                             num_workers=0,#config.input_threads,
                             pin_memory=True)
DataLoader(training_dataset,
                                 batch_size=1,
                                 sampler=training_sampler,
                                 collate_fn=SemanticKittiCollate,
                                 num_workers=config.input_threads,
                                 #num_workers=0,
                                 pin_memory=True)
DataLoader(test_dataset,
                             batch_size=1,
                             sampler=test_sampler,
                             collate_fn=SemanticKittiCollate,
                             num_workers=config.input_threads,
                             #num_workers=0,
                             pin_memory=True)
https://github.com/minghanz/EQ-4D-StOP/blob/274d5ca8a95ae6a05ffe3bfc37e0cb6214c8c548/test_models.py#L208
https://github.com/minghanz/EQ-4D-StOP/blob/274d5ca8a95ae6a05ffe3bfc37e0cb6214c8c548/train_SemanticKitti.py#L502
https://github.com/minghanz/EQ-4D-StOP/blob/274d5ca8a95ae6a05ffe3bfc37e0cb6214c8c548/train_SemanticKitti.py#L509

=================================
https://github.com/IIT-PAVIS/SC3K
=================================

Found 5 times
torch.utils.data.DataLoader(train_dataset, batch_size=cfg.batch_size, shuffle=False,
                                                   num_workers=cfg.num_workers, drop_last=False)
torch.utils.data.DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=cfg.num_workers, drop_last=True)
torch.utils.data.DataLoader(test_dataset, batch_size=1, shuffle=False,
                                                  num_workers=cfg.num_workers, drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=cfg.batch_size, shuffle=True,
                                                   num_workers=cfg.num_workers, drop_last=False)
torch.utils.data.DataLoader(val_dataset, batch_size=cfg.batch_size, shuffle=True,
                                                 num_workers=cfg.num_workers, drop_last=False)
https://github.com/IIT-PAVIS/SC3K/blob/3aa6e177631f1f0278113fc5b15e07932b0327b6/data_loader.py#L332
https://github.com/IIT-PAVIS/SC3K/blob/3aa6e177631f1f0278113fc5b15e07932b0327b6/test.py#L23
https://github.com/IIT-PAVIS/SC3K/blob/3aa6e177631f1f0278113fc5b15e07932b0327b6/test.py#L60
https://github.com/IIT-PAVIS/SC3K/blob/3aa6e177631f1f0278113fc5b15e07932b0327b6/train.py#L20
https://github.com/IIT-PAVIS/SC3K/blob/3aa6e177631f1f0278113fc5b15e07932b0327b6/train.py#L24

=================================
https://github.com/ycao5602/KAFAL
=================================

Found 6 times
DataLoader(cifar10_train, batch_size=BATCH,
                           sampler=SubsetRandomSampler(labeled_set_list[c]),
                           num_workers= 4,
                           pin_memory=True)
DataLoader(cifar10_train, batch_size=BATCH,
                                                    sampler=SubsetRandomSampler(unlabeled_set_list[c]),
                                                    num_workers=4,
                                                    pin_memory=True)
DataLoader(cifar10_test, batch_size=BATCH)
DataLoader(cifar10_select, batch_size=BATCH,
                                              sampler=SubsetSequentialSampler(unlabeled_set_list[c]),
                                              pin_memory=True)
DataLoader(cifar10_train, batch_size=BATCH,
                                                        sampler=SubsetRandomSampler(labeled_set_list[c]),
                                                        num_workers=4,
                                                        pin_memory=True)
DataLoader(cifar10_train, batch_size=BATCH,
                                                        sampler=SubsetRandomSampler(unlabeled_set_list[c]),
                                                        num_workers=4,
                                                        pin_memory=True)
https://github.com/ycao5602/KAFAL/blob/f4f1875f96bad756d9c710dafab31202462e0359/main.py#L297
https://github.com/ycao5602/KAFAL/blob/f4f1875f96bad756d9c710dafab31202462e0359/main.py#L301
https://github.com/ycao5602/KAFAL/blob/f4f1875f96bad756d9c710dafab31202462e0359/main.py#L311
https://github.com/ycao5602/KAFAL/blob/f4f1875f96bad756d9c710dafab31202462e0359/main.py#L361
https://github.com/ycao5602/KAFAL/blob/f4f1875f96bad756d9c710dafab31202462e0359/main.py#L383
https://github.com/ycao5602/KAFAL/blob/f4f1875f96bad756d9c710dafab31202462e0359/main.py#L387

======================================
https://github.com/uncbiag/SimpleClick
======================================

Found 2 times
DataLoader(
            trainset, cfg.batch_size,
            sampler=get_sampler(trainset, shuffle=True, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
DataLoader(
            valset, cfg.val_batch_size,
            sampler=get_sampler(valset, shuffle=False, distributed=cfg.distributed),
            drop_last=True, pin_memory=True,
            num_workers=cfg.workers
        )
https://github.com/uncbiag/SimpleClick/blob/f33112e5a37ac97b9adfb9cda0106830e77b5b7d/isegm/engine/trainer.py#L73
https://github.com/uncbiag/SimpleClick/blob/f33112e5a37ac97b9adfb9cda0106830e77b5b7d/isegm/engine/trainer.py#L80

=========================================
https://github.com/YouHuang67/InterFormer
=========================================

Found 15 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
        test_dataset,
        batch_size=1,
        sampler=None,
        num_workers=0,
        shuffle=False,
    )
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/mmseg/datasets/builder.py#L148
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/mmseg/datasets/builder.py#L161
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_eval_hook.py#L46
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_eval_hook.py#L58
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_eval_hook.py#L60
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_eval_hook.py#L84
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_eval_hook.py#L96
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_eval_hook.py#L98
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_eval_hook.py#L133
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_eval_hook.py#L145
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_eval_hook.py#L147
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_eval_hook.py#L173
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_eval_hook.py#L185
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_eval_hook.py#L187
https://github.com/YouHuang67/InterFormer/blob/959ce39007854c0ae6f46a5d3f364d30cf50614c/mmsegmentation/tests/test_apis/test_single_gpu.py#L37

=======================================
https://github.com/Yifehuang97/ICACount
=======================================

Found 9 times
DataLoader(val_dataset, batch_size=1, shuffle=False, collate_fn=batch_collate_fn)
DataLoader(test_data_set, batch_size=1, shuffle=False, collate_fn=batch_collate_fn)
DataLoader(val_dataset, batch_size=1, shuffle=False, collate_fn=batch_collate_fn)
DataLoader(test_dataset, batch_size=1, shuffle=False, collate_fn=batch_collate_fn)
DataLoader(
        dataset,
        batch_size=cfg["batch_size"],
        num_workers=cfg["workers"],
        pin_memory=True,
        sampler=sampler,
    )
DataLoader(
        dataset,
        batch_size=cfg["batch_size"],
        num_workers=cfg["workers"],
        pin_memory=True,
        sampler=sampler,
    )
DataLoader(
        dataset,
        batch_size=cfg["batch_size"],
        num_workers=cfg["workers"],
        pin_memory=True,
        sampler=sampler,
    )
DataLoader(train_dataset, batch_size=1, shuffle=True, collate_fn=batch_collate_fn)
DataLoader(val_dataset, batch_size=1, shuffle=False, collate_fn=batch_collate_fn)
https://github.com/Yifehuang97/ICACount/blob/f9d3f2c6c490ffa4ce0165cefbee04bd9ac2ac58/BMNet_Run.py#L96
https://github.com/Yifehuang97/ICACount/blob/f9d3f2c6c490ffa4ce0165cefbee04bd9ac2ac58/BMNet_Run.py#L97
https://github.com/Yifehuang97/ICACount/blob/f9d3f2c6c490ffa4ce0165cefbee04bd9ac2ac58/BMNet_Run.py#L100
https://github.com/Yifehuang97/ICACount/blob/f9d3f2c6c490ffa4ce0165cefbee04bd9ac2ac58/BMNet_Run.py#L101
https://github.com/Yifehuang97/ICACount/blob/f9d3f2c6c490ffa4ce0165cefbee04bd9ac2ac58/SAFECount/datasets/custom_dataset.py#L52
https://github.com/Yifehuang97/ICACount/blob/f9d3f2c6c490ffa4ce0165cefbee04bd9ac2ac58/SAFECount/datasets/custom_dataset.py#L93
https://github.com/Yifehuang97/ICACount/blob/f9d3f2c6c490ffa4ce0165cefbee04bd9ac2ac58/SAFECount/datasets/custom_exemplar_dataset.py#L55
https://github.com/Yifehuang97/ICACount/blob/f9d3f2c6c490ffa4ce0165cefbee04bd9ac2ac58/Scripts/unclean_train_fscd_lvis/[BMNet][FSCD_LVIS][Train].py#L41
https://github.com/Yifehuang97/ICACount/blob/f9d3f2c6c490ffa4ce0165cefbee04bd9ac2ac58/Scripts/unclean_train_fscd_lvis/[BMNet][FSCD_LVIS][Train].py#L42

==================================
https://github.com/yufu-wang/ReFit
==================================

Found 5 times
torch.utils.data.DataLoader(db, batch_size=8, shuffle=False, num_workers=0)
DataLoader(test, batch_size=32, shuffle=False, num_workers=4)
DataLoader(db, batch_size=32, shuffle=False, num_workers=12)
DataLoader(db, batch_size=4, sampler=mv_sampler, shuffle=False, num_workers=10)
torch.utils.data.DataLoader(db, batch_size=8, shuffle=False, num_workers=0)
https://github.com/yufu-wang/ReFit/blob/bf65ba1ae6a0413f13be3e25b4d33dfd66e95d3c/demo.py#L48
https://github.com/yufu-wang/ReFit/blob/bf65ba1ae6a0413f13be3e25b4d33dfd66e95d3c/lib/get_dataloader.py#L28
https://github.com/yufu-wang/ReFit/blob/bf65ba1ae6a0413f13be3e25b4d33dfd66e95d3c/scripts/eval.py#L24
https://github.com/yufu-wang/ReFit/blob/bf65ba1ae6a0413f13be3e25b4d33dfd66e95d3c/scripts/eval_mv.py#L44
https://github.com/yufu-wang/ReFit/blob/bf65ba1ae6a0413f13be3e25b4d33dfd66e95d3c/scripts/process_folder.py#L69

===================================
https://github.com/zxz267/AvatarJLM
===================================

Found 3 times
DataLoader(test_set, batch_size=dataset_opt['dataloader_batch_size'],
                                     shuffle=False, num_workers=1,
                                     drop_last=False, pin_memory=True)
DataLoader(train_set,
                                      batch_size=dataset_opt['dataloader_batch_size'],
                                      shuffle=dataset_opt['dataloader_shuffle'],
                                      num_workers=dataset_opt['dataloader_num_workers'],
                                      drop_last=True,
                                      pin_memory=True)
DataLoader(test_set, batch_size=dataset_opt['dataloader_batch_size'],
                                     shuffle=False, num_workers=1,
                                     drop_last=False, pin_memory=True)
https://github.com/zxz267/AvatarJLM/blob/9d27b35d612fbb37ef8a18ad052505c84077099a/test.py#L129
https://github.com/zxz267/AvatarJLM/blob/9d27b35d612fbb37ef8a18ad052505c84077099a/train.py#L52
https://github.com/zxz267/AvatarJLM/blob/9d27b35d612fbb37ef8a18ad052505c84077099a/train.py#L60

===================================
https://github.com/amathislab/BUCTD
===================================

Found 3 times
torch.utils.data.DataLoader(
        valid_dataset,
        batch_size=cfg.TEST.BATCH_SIZE_PER_GPU*len(cfg.GPUS),
        shuffle=False,
        num_workers=cfg.WORKERS,
        pin_memory=True
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=cfg.TRAIN.BATCH_SIZE_PER_GPU*len(cfg.GPUS),
        shuffle=cfg.TRAIN.SHUFFLE,
        num_workers=cfg.WORKERS,
        pin_memory=cfg.PIN_MEMORY
    )
torch.utils.data.DataLoader(
        valid_dataset,
        batch_size=cfg.TEST.BATCH_SIZE_PER_GPU*len(cfg.GPUS),
        shuffle=False,
        num_workers=cfg.WORKERS,
        pin_memory=cfg.PIN_MEMORY
    )
https://github.com/amathislab/BUCTD/blob/2df7bf3b5e4fc7541598b4c4ce287d617e05b8c4/tools/test.py#L156
https://github.com/amathislab/BUCTD/blob/2df7bf3b5e4fc7541598b4c4ce287d617e05b8c4/tools/train.py#L185
https://github.com/amathislab/BUCTD/blob/2df7bf3b5e4fc7541598b4c4ce287d617e05b8c4/tools/train.py#L193

==================================
https://github.com/SBU-YCX/HDG-ODE
==================================

Found 3 times
DataLoader(dataset=train_set, 
					   shuffle=True, 
					   batch_size=args.batch_size, 
					   pin_memory=True)
DataLoader(dataset=valid_set, 
					   shuffle=True, 
					   batch_size=args.batch_size, 
					   pin_memory=True)
DataLoader(dataset=test_set, 
					   shuffle=False, 
					   batch_size=args.batch_size, 
					   pin_memory=True)
https://github.com/SBU-YCX/HDG-ODE/blob/cd329f27fd140b7a70ff24ed2d6fac81203efcd1/Code/Train.py#L166
https://github.com/SBU-YCX/HDG-ODE/blob/cd329f27fd140b7a70ff24ed2d6fac81203efcd1/Code/Train.py#L170
https://github.com/SBU-YCX/HDG-ODE/blob/cd329f27fd140b7a70ff24ed2d6fac81203efcd1/Code/Train.py#L174

================================
https://github.com/zkf1997/DIMOS
================================

Found 8 times
DataLoader(train_dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=True,
                              drop_last=True, pin_memory=False)
DataLoader(test_dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=False,
                            drop_last=True, pin_memory=False)
DataLoader(train_dataset, batch_size=32, num_workers=4, shuffle=True,
                              drop_last=True, pin_memory=False)
DataLoader(train_dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=True,
                              drop_last=True, pin_memory=False)
DataLoader(test_dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=True,
                            drop_last=True, pin_memory=False)
DataLoader(test_dataset, batch_size=args.sample_num, num_workers=4, shuffle=False,
                             drop_last=True, pin_memory=False)
DataLoader(train_dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=True,
                              drop_last=True, pin_memory=False)
DataLoader(valid_dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=True,
                            drop_last=True, pin_memory=False)
https://github.com/zkf1997/DIMOS/blob/6c4ba22ef78c9bf2fcc9006dac318a968b811b35/coins/interaction/body_trainer.py#L421
https://github.com/zkf1997/DIMOS/blob/6c4ba22ef78c9bf2fcc9006dac318a968b811b35/coins/interaction/body_trainer.py#L423
https://github.com/zkf1997/DIMOS/blob/6c4ba22ef78c9bf2fcc9006dac318a968b811b35/coins/interaction/dataset.py#L1184
https://github.com/zkf1997/DIMOS/blob/6c4ba22ef78c9bf2fcc9006dac318a968b811b35/coins/interaction/interaction_trainer.py#L569
https://github.com/zkf1997/DIMOS/blob/6c4ba22ef78c9bf2fcc9006dac318a968b811b35/coins/interaction/interaction_trainer.py#L571
https://github.com/zkf1997/DIMOS/blob/6c4ba22ef78c9bf2fcc9006dac318a968b811b35/coins/interaction/sample_interaction.py#L55
https://github.com/zkf1997/DIMOS/blob/6c4ba22ef78c9bf2fcc9006dac318a968b811b35/coins/interaction/transform_trainer.py#L364
https://github.com/zkf1997/DIMOS/blob/6c4ba22ef78c9bf2fcc9006dac318a968b811b35/coins/interaction/transform_trainer.py#L366

=========================================
https://github.com/shubham-goel/4D-Humans
=========================================

Found 6 times
torch.utils.data.DataLoader(dataset, batch_size=8, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(dataset, args.batch_size, shuffle=args.shuffle, num_workers=args.num_workers)
torch.utils.data.DataLoader(dataset, batch_size=8, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(self.train_dataset, self.cfg.TRAIN.BATCH_SIZE, drop_last=True, num_workers=self.cfg.GENERAL.NUM_WORKERS, prefetch_factor=self.cfg.GENERAL.PREFETCH_FACTOR)
torch.utils.data.DataLoader(self.mocap_dataset, self.cfg.TRAIN.NUM_TRAIN_SAMPLES * self.cfg.TRAIN.BATCH_SIZE, shuffle=True, drop_last=True, num_workers=1)
torch.utils.data.DataLoader(self.val_dataset, self.cfg.TRAIN.BATCH_SIZE, drop_last=True, num_workers=self.cfg.GENERAL.NUM_WORKERS)
https://github.com/shubham-goel/4D-Humans/blob/124e8b2dc041fdd7e02f879ce851952cb810636b/demo.py#L79
https://github.com/shubham-goel/4D-Humans/blob/124e8b2dc041fdd7e02f879ce851952cb810636b/eval.py#L51
https://github.com/shubham-goel/4D-Humans/blob/124e8b2dc041fdd7e02f879ce851952cb810636b/gradio_app.py#L72
https://github.com/shubham-goel/4D-Humans/blob/124e8b2dc041fdd7e02f879ce851952cb810636b/hmr2/datasets/__init__.py#L77
https://github.com/shubham-goel/4D-Humans/blob/124e8b2dc041fdd7e02f879ce851952cb810636b/hmr2/datasets/__init__.py#L78
https://github.com/shubham-goel/4D-Humans/blob/124e8b2dc041fdd7e02f879ce851952cb810636b/hmr2/datasets/__init__.py#L87

========================================
https://github.com/LemonATsu/NPC-pytorch
========================================

Found 2 times
DataLoader(
        dataset, 
        batch_size=1,
        num_workers=config.get('num_workers', 2), 
        shuffle=False
    )
DataLoader(
        dataset, 
        batch_sampler=sampler, 
        num_workers=num_workers,
        collate_fn=ray_collate_fn,
        pin_memory=True,
    )
https://github.com/LemonATsu/NPC-pytorch/blob/0e88cd5d513049013c2a30022a8ac8c9cdcb8ea6/run_render.py#L648
https://github.com/LemonATsu/NPC-pytorch/blob/0e88cd5d513049013c2a30022a8ac8c9cdcb8ea6/core/load_data.py#L57

===============================
https://github.com/taeksuu/ncho
===============================

Found 2 times
torch.utils.data.DataLoader(self.dataset_train,
                                batch_size=self.opt.batch_size,
                                num_workers=self.opt.num_workers, 
                                persistent_workers=self.opt.num_workers>0,
                                shuffle=True,
                                drop_last=True,
                                pin_memory=False)
torch.utils.data.DataLoader(self.dataset_val,
                                batch_size=self.opt.batch_size,
                                num_workers=self.opt.num_workers, 
                                persistent_workers=self.opt.num_workers>0,
                                shuffle=True,
                                drop_last=False,
                                pin_memory=False)
https://github.com/taeksuu/ncho/blob/1cb6dd1b2cbcd2c59b6a7b1fc482597874984f90/lib/dataset/datamodule.py#L248
https://github.com/taeksuu/ncho/blob/1cb6dd1b2cbcd2c59b6a7b1fc482597874984f90/lib/dataset/datamodule.py#L266

=================================================
https://github.com/hygenie1228/CycleAdapt_RELEASE
=================================================

Found 2 times
DataLoader(hmr_dataset, batch_size=batch_per_dataset, shuffle=cfg[dataset_split].shuffle, 
                                num_workers=cfg.DATASET.workers, pin_memory=True, drop_last=False, worker_init_fn=worker_init_fn)
DataLoader(md_datatset, batch_size=batch_per_dataset, shuffle=cfg[dataset_split].shuffle, 
                                num_workers=cfg.DATASET.workers, pin_memory=True, drop_last=False, worker_init_fn=worker_init_fn)
https://github.com/hygenie1228/CycleAdapt_RELEASE/blob/61213c0a9b317dd9794c002ac5a3c562ca3e8f1f/lib/core/base.py#L329
https://github.com/hygenie1228/CycleAdapt_RELEASE/blob/61213c0a9b317dd9794c002ac5a3c562ca3e8f1f/lib/core/base.py#L335

======================================================
https://github.com/bymaths/probabilistic_triangulation
======================================================

Found 7 times
DataLoader(
    test_db,
    batch_size=cfg['batch_size_test'], 
    shuffle=False,
    num_workers = cfg['num_workers'],
    pin_memory = True,
    drop_last=True,
)
DataLoader(
    train_db,
    batch_size=cfg['batch_size_train'], 
    shuffle=True,
    num_workers = cfg['num_workers'],
    pin_memory = True,
    drop_last=True,
)
DataLoader(
    test_db,
    batch_size=cfg['batch_size_test'], 
    shuffle=False,
    num_workers = cfg['num_workers'],
    pin_memory = True,
    drop_last=True,
)
DataLoader(
    train_db,
    batch_size=cfg['batch_size_train'], 
    shuffle=True,
    num_workers = cfg['num_workers'],
    pin_memory = True,
    drop_last=True,
)
DataLoader(
    test_db,
    batch_size=cfg['batch_size_test'], 
    shuffle=False,
    num_workers = cfg['num_workers'],
    pin_memory = True,
    drop_last=True,
)
DataLoader(
    train_db,
    batch_size=cfg['batch_size_train'], 
    shuffle=True,
    num_workers = cfg['num_workers'],
    pin_memory = True,
    drop_last=True,
)
DataLoader(
    test_db,
    batch_size=cfg['batch_size_test'], 
    shuffle=False,
    num_workers = cfg['num_workers'],
    pin_memory = True,
    drop_last=True,
)
https://github.com/bymaths/probabilistic_triangulation/blob/a9456c5ff849af4bc73a253b0534c20b18e45963/infer3d.py#L39
https://github.com/bymaths/probabilistic_triangulation/blob/a9456c5ff849af4bc73a253b0534c20b18e45963/train2d.py#L39
https://github.com/bymaths/probabilistic_triangulation/blob/a9456c5ff849af4bc73a253b0534c20b18e45963/train2d.py#L47
https://github.com/bymaths/probabilistic_triangulation/blob/a9456c5ff849af4bc73a253b0534c20b18e45963/train3d.py#L41
https://github.com/bymaths/probabilistic_triangulation/blob/a9456c5ff849af4bc73a253b0534c20b18e45963/train3d.py#L49
https://github.com/bymaths/probabilistic_triangulation/blob/a9456c5ff849af4bc73a253b0534c20b18e45963/trainPose.py#L33
https://github.com/bymaths/probabilistic_triangulation/blob/a9456c5ff849af4bc73a253b0534c20b18e45963/trainPose.py#L41

===========================================
https://github.com/ireneesun/MixSynthFormer
===========================================

Found 3 times
DataLoader(dataset=test_dataset,
                            batch_size=1,
                            shuffle=False,
                            num_workers=cfg.TRAIN.WORKERS_NUM,
                            pin_memory=True,
                            worker_init_fn=worker_init_fn)
DataLoader(dataset=train_dataset,
                              batch_size=cfg.TRAIN.BATCH_SIZE,
                              shuffle=True,
                              num_workers=cfg.TRAIN.WORKERS_NUM,
                              pin_memory=True,
                              worker_init_fn=worker_init_fn)
DataLoader(dataset=test_dataset,
                             batch_size=1,
                             shuffle=False,
                             num_workers=cfg.TRAIN.WORKERS_NUM,
                             pin_memory=True,
                             worker_init_fn=worker_init_fn)
https://github.com/ireneesun/MixSynthFormer/blob/e81756f2000729cff6e8debd836a9861c09c074a/eval.py#L20
https://github.com/ireneesun/MixSynthFormer/blob/e81756f2000729cff6e8debd836a9861c09c074a/train.py#L57
https://github.com/ireneesun/MixSynthFormer/blob/e81756f2000729cff6e8debd836a9861c09c074a/train.py#L64

===============================
https://github.com/zj-dong/AG3D
===============================

Found 2 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/zj-dong/AG3D/blob/274b539cebd79af738785fa941a4d3796f4d674b/metrics/metric_utils.py#L266
https://github.com/zj-dong/AG3D/blob/274b539cebd79af738785fa941a4d3796f4d674b/training/training_loop.py#L173

=====================================
https://github.com/Sirui-Xu/InterDiff
=====================================

Found 17 times
DataLoader(unseen_test_set, batch_size=args_diffusion.batch_size, num_workers=1, shuffle=False,
                    drop_last=False, pin_memory=False)
DataLoader(test_set, batch_size=args_diffusion.batch_size, num_workers=1, shuffle=False,
                    drop_last=False, pin_memory=False)
DataLoader(unseen_test_set, batch_size=args_diffusion.batch_size, num_workers=1, shuffle=False,
                    drop_last=False, pin_memory=False)
DataLoader(test_set, batch_size=args_diffusion.batch_size, num_workers=1, shuffle=False,
                    drop_last=False, pin_memory=False)
DataLoader(test_dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=False,
                            drop_last=True, pin_memory=False)
DataLoader(train_set, batch_size=args.batch_size, num_workers=1, shuffle=True,
                            drop_last=True, pin_memory=False)
DataLoader(val_set, batch_size=args.batch_size, num_workers=1, shuffle=True,
                    drop_last=True, pin_memory=False)
DataLoader(unseen_test_set, batch_size=args.batch_size, num_workers=1, shuffle=False,
                    drop_last=False, pin_memory=False)
DataLoader(test_set, batch_size=args.batch_size, num_workers=1, shuffle=False,
                    drop_last=False, pin_memory=False)
DataLoader(train_dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=True,
                              drop_last=True, pin_memory=False)
DataLoader(test_dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=True,
                            drop_last=True, pin_memory=False)
DataLoader(train_set, batch_size=args.batch_size, num_workers=1, shuffle=True,
                            drop_last=True, pin_memory=False)
DataLoader(val_set, batch_size=args.batch_size, num_workers=1, shuffle=True,
                    drop_last=True, pin_memory=False)
DataLoader(unseen_test_set, batch_size=args.batch_size, num_workers=1, shuffle=False,
                    drop_last=True, pin_memory=False)
DataLoader(test_set, batch_size=args.batch_size, num_workers=1, shuffle=False,
                    drop_last=True, pin_memory=False)
DataLoader(train_dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=True,
                              drop_last=True, pin_memory=False)
DataLoader(test_dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=True,
                            drop_last=True, pin_memory=False)
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/eval_skeleton.py#L261
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/eval_skeleton.py#L263
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/eval_skeleton_no_correction.py#L228
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/eval_skeleton_no_correction.py#L230
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/eval_smpl_short.py#L421
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/train_correction_skeleton.py#L261
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/train_correction_skeleton.py#L263
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/train_correction_skeleton.py#L265
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/train_correction_skeleton.py#L267
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/train_correction_smpl.py#L353
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/train_correction_smpl.py#L355
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/train_diffusion_skeleton.py#L421
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/train_diffusion_skeleton.py#L423
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/train_diffusion_skeleton.py#L425
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/train_diffusion_skeleton.py#L427
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/train_diffusion_smpl.py#L617
https://github.com/Sirui-Xu/InterDiff/blob/b3eb33ebb913a9dc9112064c539b304d7ade8a72/interdiff/train_diffusion_smpl.py#L619

=====================================================
https://github.com/YangChangHee/ICCV2023_SEFD_RELEASE
=====================================================

Found 2 times
DataLoader(dataset=trainset_loader, batch_size=cfg.num_gpus*cfg.train_batch_size, shuffle=True, num_workers=cfg.num_thread, pin_memory=True)
DataLoader(dataset=testset_loader, batch_size=cfg.num_gpus*cfg.test_batch_size, shuffle=False, num_workers=cfg.num_thread, pin_memory=True)
https://github.com/YangChangHee/ICCV2023_SEFD_RELEASE/blob/f469dd46ea8c9a38f06e2ea3f185cb29bdb5bc3f/common/base.py#L143
https://github.com/YangChangHee/ICCV2023_SEFD_RELEASE/blob/f469dd46ea8c9a38f06e2ea3f185cb29bdb5bc3f/common/base.py#L179

==================================
https://github.com/kennethwdk/SGRE
==================================

Found 2 times
DataLoader(dataset=trainset_loader, batch_size=cfg.num_gpus*cfg.train_batch_size, shuffle=True, num_workers=cfg.num_thread, pin_memory=True)
DataLoader(dataset=testset_loader, batch_size=cfg.num_gpus*cfg.test_batch_size, shuffle=False, num_workers=cfg.num_thread, pin_memory=True)
https://github.com/kennethwdk/SGRE/blob/72b22ff13b75059dcc1dc515b2b3ed648906ca55/common/base.py#L121
https://github.com/kennethwdk/SGRE/blob/72b22ff13b75059dcc1dc515b2b3ed648906ca55/common/base.py#L149

==============================
https://github.com/kasvii/PMCE
==============================

Found 4 times
DataLoader(dataset,
                                batch_size=batch_per_dataset,
                                shuffle=cfg[dataset_split].shuffle,
                                num_workers=cfg.DATASET.workers,
                                pin_memory=False)
DataLoader(dataset=trainset_loader, \
                          batch_size=batch_per_dataset * len(dataset_names), \
                          shuffle=cfg[dataset_split].shuffle, \
                          num_workers=cfg.DATASET.workers, pin_memory=False)
DataLoader(dataset, batch_size=256, num_workers=0)
DataLoader(dataset, batch_size=1, num_workers=0)
https://github.com/kasvii/PMCE/blob/581d074c3142a22ddaf02f16ce1dc88fe94ea4e1/lib/core/base.py#L25
https://github.com/kasvii/PMCE/blob/581d074c3142a22ddaf02f16ce1dc88fe94ea4e1/lib/core/base.py#L37
https://github.com/kasvii/PMCE/blob/581d074c3142a22ddaf02f16ce1dc88fe94ea4e1/main/run_demo.py#L302
https://github.com/kasvii/PMCE/blob/581d074c3142a22ddaf02f16ce1dc88fe94ea4e1/main/run_demo.py#L332

=======================================
https://github.com/Michel-liu/GroupPose
=======================================

Found 2 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
https://github.com/Michel-liu/GroupPose/blob/127fe0e2e7b54d7a43420015a2e90e456a8ea1fb/main.py#L177
https://github.com/Michel-liu/GroupPose/blob/127fe0e2e7b54d7a43420015a2e90e456a8ea1fb/main.py#L179

================================================
https://github.com/YuxuanSnow/NeuralSurfaceField
================================================

Found 1 times
torch.utils.data.DataLoader(
			self, batch_size=self.batch_size, num_workers=self.num_workers, shuffle=shuffle,
			worker_init_fn=self.worker_init_fn)
https://github.com/YuxuanSnow/NeuralSurfaceField/blob/7c1f787ec92b242b46a7d71d98ce3410327a7ca8/dataloaders/dataloader_base.py#L44

========================================
https://github.com/Walter0807/MotionBERT
========================================

Found 17 times
DataLoader(wild_dataset, **testloader_params)
DataLoader(wild_dataset, **testloader_params)
DataLoader(train_dataset, **trainloader_params)
DataLoader(test_dataset, **testloader_params)
DataLoader(posetrack, **trainloader_params)
DataLoader(instav, **trainloader_params)
DataLoader(ntu60_xsub_train, **trainloader_params)
DataLoader(ntu60_xsub_val, **testloader_params)
DataLoader(ntu60_1shot_anchor, **anchorloader_params)
DataLoader(ntu60_1shot_test, **testloader_params)
DataLoader(ntu120_1shot_train, **trainloader_params)
DataLoader(mesh_train, **trainloader_params)
DataLoader(mesh_val, **testloader_params)
DataLoader(mesh_train_pw3d, **trainloader_params)
DataLoader(mesh_val_pw3d, **testloader_params)
DataLoader(mesh_train_coco, **trainloader_img_params)
DataLoader(mesh_val_coco, **testloader_img_params)
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/infer_wild.py#L63
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/infer_wild_mesh.py#L106
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train.py#L239
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train.py#L240
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train.py#L244
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train.py#L246
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train_action.py#L129
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train_action.py#L130
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train_action_1shot.py#L138
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train_action_1shot.py#L139
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train_action_1shot.py#L155
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train_mesh.py#L266
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train_mesh.py#L267
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train_mesh.py#L273
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train_mesh.py#L276
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train_mesh.py#L299
https://github.com/Walter0807/MotionBERT/blob/1839f099ce9f128342c8f5499478ace328c0df4a/train_mesh.py#L300

===================================
https://github.com/iscas3dv/HO-NeRF
===================================

Found 6 times
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=1,
            shuffle=True,
            num_workers=0,
            generator=torch.Generator(device='cuda')
            )
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=1,
            shuffle=False,
            num_workers=0,
            generator=torch.Generator(device='cuda')
            )
torch.utils.data.DataLoader(
            fit_dataset,
            batch_size=1,
            shuffle=False,
            num_workers=0,
            generator=torch.Generator(device='cuda')
            )
torch.utils.data.DataLoader(
                self.fit_dataset, batch_sampler=sampler)
torch.utils.data.DataLoader(
                self.fit_dataset,
                batch_size=1,
                shuffle=False,
                num_workers=0,
                generator=torch.Generator(device='cuda'))
torch.utils.data.DataLoader(
            fit_dataset,
            batch_size=1,
            shuffle=False,
            num_workers=0,
            generator=torch.Generator(device='cuda')
            )
https://github.com/iscas3dv/HO-NeRF/blob/cc09a9f5ec1b625056f7460f49b28139be6ae8e5/exp_runner.py#L63
https://github.com/iscas3dv/HO-NeRF/blob/cc09a9f5ec1b625056f7460f49b28139be6ae8e5/exp_runner.py#L70
https://github.com/iscas3dv/HO-NeRF/blob/cc09a9f5ec1b625056f7460f49b28139be6ae8e5/fitting_single.py#L45
https://github.com/iscas3dv/HO-NeRF/blob/cc09a9f5ec1b625056f7460f49b28139be6ae8e5/fitting_video.py#L148
https://github.com/iscas3dv/HO-NeRF/blob/cc09a9f5ec1b625056f7460f49b28139be6ae8e5/fitting_video.py#L150
https://github.com/iscas3dv/HO-NeRF/blob/cc09a9f5ec1b625056f7460f49b28139be6ae8e5/get_res.py#L52

=======================================
https://github.com/DeepWiSe888/OCHID-Fi
=======================================

Found 4 times
DataLoader(train_normal_dataset, batch_size=8, shuffle=True)
DataLoader(val_normal_dataset, batch_size=8, shuffle=True)
DataLoader(train_occlusion_dataset, batch_size=8, shuffle=True)
DataLoader(val_occlusion_dataset, batch_size=8, shuffle=True)
https://github.com/DeepWiSe888/OCHID-Fi/blob/724a188dd56d57e526925de4507ec94c9d25d48f/main.py#L157
https://github.com/DeepWiSe888/OCHID-Fi/blob/724a188dd56d57e526925de4507ec94c9d25d48f/main.py#L160
https://github.com/DeepWiSe888/OCHID-Fi/blob/724a188dd56d57e526925de4507ec94c9d25d48f/main.py#L163
https://github.com/DeepWiSe888/OCHID-Fi/blob/724a188dd56d57e526925de4507ec94c9d25d48f/main.py#L166

===========================================
https://github.com/IDEA-Research/Click-Pose
===========================================

Found 2 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
https://github.com/IDEA-Research/Click-Pose/blob/31d72bb4a1d89b7e816dd1bac4fec25ca4966702/main.py#L183
https://github.com/IDEA-Research/Click-Pose/blob/31d72bb4a1d89b7e816dd1bac4fec25ca4966702/main.py#L185

===================================================
https://github.com/biggzlar/plausible-uncertainties
===================================================

Found 4 times
torch.utils.data.DataLoader(train_data, batch_size=128, shuffle=True)
torch.utils.data.DataLoader(test_data, batch_size=32)
torch.utils.data.DataLoader(train_data, batch_size=128, shuffle=True)
torch.utils.data.DataLoader(test_data, batch_size=32)
https://github.com/biggzlar/plausible-uncertainties/blob/92ad7e56bf575f39af36c0bae4e6f3da7560ef83/train.py#L38
https://github.com/biggzlar/plausible-uncertainties/blob/92ad7e56bf575f39af36c0bae4e6f3da7560ef83/train.py#L39
https://github.com/biggzlar/plausible-uncertainties/blob/92ad7e56bf575f39af36c0bae4e6f3da7560ef83/train_multivariate.py#L56
https://github.com/biggzlar/plausible-uncertainties/blob/92ad7e56bf575f39af36c0bae4e6f3da7560ef83/train_multivariate.py#L57

====================================
https://github.com/Frank-ZY-Dou/TORE
====================================

Found 17 times
torch.utils.data.DataLoader(
        dataset, num_workers=args.num_workers, batch_sampler=batch_sampler,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset, num_workers=args.num_workers, batch_sampler=batch_sampler,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset, num_workers=args.num_workers, batch_sampler=batch_sampler,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset, num_workers=args.num_workers, batch_sampler=batch_sampler,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset, num_workers=args.num_workers, batch_sampler=batch_sampler,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset, num_workers=args.num_workers, batch_sampler=batch_sampler,
        pin_memory=True,
    )
DataLoader(eval_data, sampler=eval_sampler, batch_size=args.batch_size)
DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(eval_dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)
DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)
DataLoader(epoch_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(train_data, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(eval_data, sampler=eval_sampler, batch_size=args.eval_batch_size)
DataLoader(train_data, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(eval_data, sampler=eval_sampler, batch_size=args.eval_batch_size)
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/build/lib/metro/datasets/build.py#L100
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/build/lib/metro/datasets/build.py#L142
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/build/lib/tore/datasets/build.py#L100
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/build/lib/tore/datasets/build.py#L142
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/tore/datasets/build.py#L100
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/tore/datasets/build.py#L142
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/transformers/examples/run_bertology.py#L331
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/transformers/examples/run_glue.py#L72
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/transformers/examples/run_glue.py#L196
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/transformers/examples/run_squad.py#L81
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/transformers/examples/run_squad.py#L203
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/transformers/examples/lm_finetuning/finetune_on_pregenerated.py#L293
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/transformers/examples/lm_finetuning/simple_lm_finetuning.py#L582
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/transformers/examples/single_model_scripts/run_openai_gpt.py#L189
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/transformers/examples/single_model_scripts/run_openai_gpt.py#L193
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/transformers/examples/single_model_scripts/run_swag.py#L394
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/transformers/examples/single_model_scripts/run_swag.py#L513

==============================
https://github.com/JMoonr/LATR
==============================

Found 6 times
DataLoader(transformed_dataset,
                                        batch_size=args.batch_size, 
                                        sampler=data_sampler,
                                        num_workers=args.nworkers, 
                                        pin_memory=True,
                                        persistent_workers=args.nworkers > 0,
                                        worker_init_fn=seed_worker,
                                        generator=g,
                                        drop_last=True)
DataLoader(transformed_dataset,
                                        batch_size=args.batch_size, 
                                        sampler=data_sampler,
                                        num_workers=args.nworkers, 
                                        pin_memory=True,
                                        persistent_workers=args.nworkers > 0,
                                        worker_init_fn=seed_worker,
                                        generator=g)
DataLoader(transformed_dataset,
                                batch_size=args.batch_size, sampler=data_sampler,
                                num_workers=args.nworkers, pin_memory=True,
                                persistent_workers=args.nworkers > 0,
                                worker_init_fn=seed_worker,
                                generator=g)
DataLoader(transformed_dataset,
                                        batch_size=args.batch_size, 
                                        sampler=data_sampler,
                                        num_workers=args.nworkers, 
                                        pin_memory=True,
                                        persistent_workers=True,
                                        worker_init_fn=seed_worker,
                                        generator=g,
                                        drop_last=True)
DataLoader(transformed_dataset,
                                        batch_size=args.batch_size, 
                                        sampler=data_sampler,
                                        num_workers=args.nworkers, 
                                        pin_memory=True,
                                        persistent_workers=True,
                                        worker_init_fn=seed_worker,
                                        generator=g)
DataLoader(transformed_dataset,
                                batch_size=args.batch_size, sampler=data_sampler,
                                num_workers=args.nworkers, pin_memory=True,
                                persistent_workers=True,
                                worker_init_fn=seed_worker,
                                generator=g)
https://github.com/JMoonr/LATR/blob/d5ef13e3da8a37b6f8f2d7350add464c538c38ad/data/Load_Data.py#L553
https://github.com/JMoonr/LATR/blob/d5ef13e3da8a37b6f8f2d7350add464c538c38ad/data/Load_Data.py#L564
https://github.com/JMoonr/LATR/blob/d5ef13e3da8a37b6f8f2d7350add464c538c38ad/data/Load_Data.py#L576
https://github.com/JMoonr/LATR/blob/d5ef13e3da8a37b6f8f2d7350add464c538c38ad/data/apollo_dataset.py#L482
https://github.com/JMoonr/LATR/blob/d5ef13e3da8a37b6f8f2d7350add464c538c38ad/data/apollo_dataset.py#L493
https://github.com/JMoonr/LATR/blob/d5ef13e3da8a37b6f8f2d7350add464c538c38ad/data/apollo_dataset.py#L505

============================================
https://github.com/OpenDriveLab/DriveAdapter
============================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        drop_last = True,
        **kwargs)
https://github.com/OpenDriveLab/DriveAdapter/blob/4d480bef06073786c1844757e7734b1bff1ff443/open_loop_training/code/datasets/builder.py#L83

====================================
https://github.com/sanweiliti/EgoHMR
====================================

Found 7 times
torch.utils.data.DataLoader(test_dataset, args.batch_size, shuffle=args.shuffle, num_workers=args.num_workers)
torch.utils.data.DataLoader(test_dataset, args.batch_size, shuffle=args.shuffle, num_workers=args.num_workers)
torch.utils.data.DataLoader(train_dataset, args.batch_size, shuffle=args.shuffle, num_workers=args.num_workers, collate_fn=collate_fn)
torch.utils.data.DataLoader(val_dataset, args.batch_size, shuffle=False, num_workers=args.num_workers)
torch.utils.data.DataLoader(train_dataset, args.batch_size, shuffle=args.shuffle, num_workers=args.num_workers, collate_fn=collate_fn)
torch.utils.data.DataLoader(val_dataset, args.batch_size, shuffle=False, num_workers=args.num_workers)
torch.utils.data.DataLoader(mocap_dataset, args.batch_size, shuffle=True, num_workers=args.num_workers)
https://github.com/sanweiliti/EgoHMR/blob/5a2727fb604de802090d7032f71929be3ada5a94/test_egohmr.py#L140
https://github.com/sanweiliti/EgoHMR/blob/5a2727fb604de802090d7032f71929be3ada5a94/test_prohmr_scene.py#L94
https://github.com/sanweiliti/EgoHMR/blob/5a2727fb604de802090d7032f71929be3ada5a94/train_egohmr.py#L95
https://github.com/sanweiliti/EgoHMR/blob/5a2727fb604de802090d7032f71929be3ada5a94/train_egohmr.py#L103
https://github.com/sanweiliti/EgoHMR/blob/5a2727fb604de802090d7032f71929be3ada5a94/train_prohmr_scene.py#L74
https://github.com/sanweiliti/EgoHMR/blob/5a2727fb604de802090d7032f71929be3ada5a94/train_prohmr_scene.py#L82
https://github.com/sanweiliti/EgoHMR/blob/5a2727fb604de802090d7032f71929be3ada5a94/train_prohmr_scene.py#L85

===================================
https://github.com/PengfeiRen96/DIR
===================================

Found 4 times
DataLoader(self.train_dataset,
                                       batch_size=cfg.batch_size,
                                       num_workers=cfg.num_worker,
                                       shuffle=True,
                                       pin_memory=True,
                                       drop_last=True)
DataLoader(self.test_dataset,
                                      batch_size=cfg.batch_size,
                                      num_workers=cfg.num_worker,
                                      shuffle=False,
                                      pin_memory=True,
                                      drop_last=True)
DataLoader(self.dataset,
                                 batch_size=cfg.batch_size,
                                 num_workers=cfg.num_worker,
                                 shuffle=False,
                                 pin_memory=True,
                                 drop_last=True)
DataLoader(dataset, batch_size=opt.bs, shuffle=False,
                            num_workers=8, drop_last=False, pin_memory=True)
https://github.com/PengfeiRen96/DIR/blob/329e3812b99d05fc7882694e714f7d6e808ef6e4/train.py#L208
https://github.com/PengfeiRen96/DIR/blob/329e3812b99d05fc7882694e714f7d6e808ef6e4/train.py#L215
https://github.com/PengfeiRen96/DIR/blob/329e3812b99d05fc7882694e714f7d6e808ef6e4/train.py#L262
https://github.com/PengfeiRen96/DIR/blob/329e3812b99d05fc7882694e714f7d6e808ef6e4/apps/eval.py#L124

==============================
https://github.com/yhZhai/WSCL
==============================

Found 2 times
DataLoader(
                dataset,
                batch_size=opt.batch_size,
                shuffle=True,
                pin_memory=True,
                num_workers=0 if opt.debug else opt.num_workers,
                collate_fn=partial(
                    crop_to_smallest_collate_fn,
                    max_size=opt.input_size,
                    uncorrect_label=opt.uncorrect_label,
                ),
            )
DataLoader(
            dataset,
            batch_size=1,
            shuffle=opt.val_shuffle,
            pin_memory=True,
            num_workers=0 if opt.debug else opt.num_workers,
        )
https://github.com/yhZhai/WSCL/blob/2800337df1c462e0f171933e6f40a0fbfa0509db/main.py#L48
https://github.com/yhZhai/WSCL/blob/2800337df1c462e0f171933e6f40a0fbfa0509db/main.py#L68

=====================================
https://github.com/ZhendongWang6/DIRE
=====================================

Found 5 times
DataLoader(dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=False)
DataLoader(dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True)
DataLoader(dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True)
DataLoader(dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True)
torch.utils.data.DataLoader(
        dataset,
        batch_size=cfg.batch_size,
        shuffle=shuffle,
        sampler=sampler,
        num_workers=int(cfg.num_workers),
    )
https://github.com/ZhendongWang6/DIRE/blob/864006958b31dae4f7333f7fd2d683002b378367/guided-diffusion/guided_diffusion/image_datasets.py#L70
https://github.com/ZhendongWang6/DIRE/blob/864006958b31dae4f7333f7fd2d683002b378367/guided-diffusion/guided_diffusion/image_datasets.py#L72
https://github.com/ZhendongWang6/DIRE/blob/864006958b31dae4f7333f7fd2d683002b378367/guided-diffusion/guided_diffusion/image_datasets.py#L125
https://github.com/ZhendongWang6/DIRE/blob/864006958b31dae4f7333f7fd2d683002b378367/guided-diffusion/guided_diffusion/image_datasets.py#L127
https://github.com/ZhendongWang6/DIRE/blob/864006958b31dae4f7333f7fd2d683002b378367/utils/datasets.py#L173

====================================================
https://github.com/facebookresearch/stable_signature
====================================================

Found 3 times
DataLoader(dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers, pin_memory=True, drop_last=False, collate_fn=collate_fn)
DataLoader(dataset, batch_size=batch_size, sampler=sampler, num_workers=num_workers, pin_memory=True, drop_last=True)
DataLoader(dataset, batch_size=batch_size, shuffle=shuffle, num_workers=num_workers, pin_memory=True, drop_last=True)
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/utils.py#L97
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/hidden/utils.py#L140
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/hidden/utils.py#L142

=====================================================
https://github.com/RuihanGao/visual-tactile-synthesis
=====================================================

Found 3 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.num_threads),
            drop_last=True if opt.isTrain else False,
            pin_memory=True,
        )
data.DataLoader(
    content_dataset, batch_size=args.batch_size,
    sampler=InfiniteSamplerWrapper(content_dataset),
    num_workers=args.n_threads)
data.DataLoader(
    style_dataset, batch_size=args.batch_size,
    sampler=InfiniteSamplerWrapper(style_dataset),
    num_workers=args.n_threads)
https://github.com/RuihanGao/visual-tactile-synthesis/blob/dbe6c921d1b3d0733fc6b119d174671de70f4397/data/__init__.py#L77
https://github.com/RuihanGao/visual-tactile-synthesis/blob/dbe6c921d1b3d0733fc6b119d174671de70f4397/thirdparty/AdaIN/train.py#L103
https://github.com/RuihanGao/visual-tactile-synthesis/blob/dbe6c921d1b3d0733fc6b119d174671de70f4397/thirdparty/AdaIN/train.py#L107

====================================
https://github.com/SamsungLabs/DINAR
====================================

Found 3 times
DataLoader(
                val_dataset,
                batch_size=config.val_dataloaders.batch_size,
                num_workers=config.val_dataloaders.num_workers,
                shuffle=False,
                pin_memory=False,
                drop_last=True,
            )
DataLoader(
            test_dataset,
            batch_size=config.test_dataloader.batch_size,
            num_workers=config.test_dataloader.num_workers,
            shuffle=False,
            pin_memory=False,
            drop_last=True
        )
DataLoader(
                dataset,
                batch_size=batch_size,
                num_workers=num_workers,
                shuffle=True,
                pin_memory=False,
                drop_last=True,
                worker_init_fn=worker_init_fn,
            )
https://github.com/SamsungLabs/DINAR/blob/736895897b13e670cd3800e2eede15b50a1c0c66/main.py#L76
https://github.com/SamsungLabs/DINAR/blob/736895897b13e670cd3800e2eede15b50a1c0c66/main.py#L92
https://github.com/SamsungLabs/DINAR/blob/736895897b13e670cd3800e2eede15b50a1c0c66/dataloaders/dataloader_alternating.py#L100

================================================
https://github.com/YorkUCVIL/Photoconsistent-NVS
================================================

Found 1 times
torch.utils.data.DataLoader(self.dataset,batch_size=batch_size,sampler=self.sampler,drop_last=True,num_workers=8,persistent_workers=True)
https://github.com/YorkUCVIL/Photoconsistent-NVS/blob/81e07c189b84a5ebdfcf7ade5bf23148562a71df/src/utils/trainers/Score_sde_trainer.py#L63

======================================
https://github.com/sherwinbahmani/cc3d
======================================

Found 2 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/sherwinbahmani/cc3d/blob/62120dd131395362f0b5d955552ab80c245f0fee/metrics/metric_utils.py#L237
https://github.com/sherwinbahmani/cc3d/blob/62120dd131395362f0b5d955552ab80c245f0fee/training/training_loop.py#L168

==================================================
https://github.com/PeterWang512/GenDataAttribution
==================================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=20
    )
https://github.com/PeterWang512/GenDataAttribution/blob/ed044d04293350eba91623f6ce6860f53f815440/extract_feat.py#L37

========================================
https://github.com/Zhangjialu126/ccf_gan
========================================

Found 4 times
DataLoader(sample_set, batch_size=G_batch_size,
                                   shuffle=True, num_workers=16)
DataLoader(train_set, batch_size=batch_size,
                                  sampler=sampler, drop_last=True, **loader_kwargs)
DataLoader(train_set, batch_size=batch_size,
                                  shuffle=shuffle, **loader_kwargs)
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=num_workers)
https://github.com/Zhangjialu126/ccf_gan/blob/ca114513fbf97ebc77573bc4879db8927657c8f2/ccfgan_biggan/sample.py#L150
https://github.com/Zhangjialu126/ccf_gan/blob/ca114513fbf97ebc77573bc4879db8927657c8f2/ccfgan_biggan/utils.py#L616
https://github.com/Zhangjialu126/ccf_gan/blob/ca114513fbf97ebc77573bc4879db8927657c8f2/ccfgan_biggan/utils.py#L621
https://github.com/Zhangjialu126/ccf_gan/blob/ca114513fbf97ebc77573bc4879db8927657c8f2/ccfgan_biggan/pytorch_fid/fid_score.py#L147

=============================================
https://github.com/microsoft/LayoutGeneration
=============================================

Found 106 times
DataLoader(dataset=self.test_dataset,
                                          batch_size=self.args.eval_batch_size,
                                          collate_fn=self.collate_fn)
DataLoader(dataset=self.train_dataset,
                                           batch_size=self.args.batch_size,
                                           collate_fn=self.collate_fn,
                                           sampler=self.train_sampler,
                                           drop_last=True)
DataLoader(dataset=self.val_dataset,
                                         batch_size=self.args.eval_batch_size,
                                         collate_fn=self.collate_fn,
                                         sampler=self.val_sampler,
                                         drop_last=True)
DataLoader(
            dataset,
            batch_size=batch_size,  # 20,
            drop_last=True,
            shuffle=False,
            num_workers=1,
        )
DataLoader(
            dataset,
            batch_size=batch_size,  # 20,
            drop_last=True,
            shuffle=True,
            num_workers=1,
        )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=train_batch_size,
        shuffle=True,
        num_workers=data_args.preprocessing_num_workers,
        persistent_workers=True,
        drop_last=True,
        collate_fn=collate_fn,
    )
torch.utils.data.DataLoader(
        eval_dataset,
        batch_size=eval_batch_size,
        shuffle=False,
        num_workers=data_args.preprocessing_num_workers,
        persistent_workers=True,
        drop_last=True,
        collate_fn=collate_fn,
    )
DataLoader(train_data, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(eval_data, sampler=eval_sampler, batch_size=args.eval_batch_size)
DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)
DataLoader(
            TensorDataset(all_input_ids, all_attention_mask, all_token_type_ids, all_labels),
            batch_size=batch_size,
            shuffle=shuffle,
        )
DataLoader(
            TensorDataset(all_input_ids, all_attention_mask, all_token_type_ids, all_label_ids), batch_size=batch_size
        )
DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)
DataLoader(train_dataset, batch_size=2, collate_fn=train_dataset.collate_fn)
DataLoader(train_dataset, batch_size=2, collate_fn=train_dataset.collate_fn)
DataLoader(ds, batch_sampler=batch_sampler, collate_fn=ds.collate_fn, num_workers=2)
DataLoader(ds, batch_size=bs, collate_fn=ds.collate_fn, num_workers=2)
DataLoader(ds, batch_size=bs, collate_fn=ds.collate_fn, num_workers=2, sampler=sortish_sampler)
DataLoader(ds, sampler=sampler, batch_size=bs, collate_fn=ds.collate_fn)
DataLoader(ds, batch_size=512, num_workers=8, shuffle=False, collate_fn=ds.collate_fn)
DataLoader(
        train_dataset, shuffle=True, collate_fn=default_data_collator, batch_size=args.per_device_train_batch_size
    )
DataLoader(
        eval_dataset, collate_fn=default_data_collator, batch_size=args.per_device_eval_batch_size
    )
DataLoader(
        train_dataset, shuffle=True, collate_fn=data_collator, batch_size=args.per_device_train_batch_size
    )
DataLoader(eval_dataset, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size)
DataLoader(
        train_dataset, shuffle=True, collate_fn=data_collator, batch_size=args.per_device_train_batch_size
    )
DataLoader(eval_dataset, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size)
DataLoader(
        train_dataset, shuffle=True, collate_fn=data_collator, batch_size=args.per_device_train_batch_size
    )
DataLoader(
        eval_dataset_for_model, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size
    )
DataLoader(
            predict_dataset_for_model, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size
        )
DataLoader(
        train_dataset, shuffle=True, collate_fn=data_collator, batch_size=args.per_device_train_batch_size
    )
DataLoader(
        eval_dataset_for_model, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size
    )
DataLoader(
            predict_dataset_for_model, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size
        )
DataLoader(
        train_dataset, shuffle=True, collate_fn=data_collator, batch_size=args.per_device_train_batch_size
    )
DataLoader(eval_dataset, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size)
DataLoader(
        train_dataset, shuffle=True, collate_fn=data_collator, batch_size=args.per_device_train_batch_size
    )
DataLoader(eval_dataset, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size)
DataLoader(
            eval_dataset, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size
        )
DataLoader(
        train_dataset, shuffle=True, collate_fn=data_collator, batch_size=args.per_device_train_batch_size
    )
DataLoader(eval_dataset, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size)
DataLoader(
        train_dataset, shuffle=True, collate_fn=data_collator, batch_size=args.per_device_train_batch_size
    )
DataLoader(eval_dataset, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size)
DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(eval_dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)
DataLoader(
        dataset,
        sampler=sampler,
        batch_size=args.batch_size,
        collate_fn=collate_fn,
    )
DataLoader(
        eval_dataset, sampler=eval_sampler, batch_size=args.batch_size, collate_fn=default_data_collator
    )
DataLoader(train_data, sampler=train_sampler, batch_size=args.batch_size)
DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(eval_dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)
DataLoader(dataset=dataset, batch_sampler=sampler, collate_fn=dataset.batch_sequences)
DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=train_batch_size,
        shuffle=True,
        num_workers=data_args.preprocessing_num_workers,
        persistent_workers=True,
        drop_last=True,
        collate_fn=collate_fn,
    )
torch.utils.data.DataLoader(
        eval_dataset,
        batch_size=eval_batch_size,
        shuffle=False,
        num_workers=data_args.preprocessing_num_workers,
        persistent_workers=True,
        drop_last=True,
        collate_fn=collate_fn,
    )
DataLoader(dataset, batch_size=args.batch_size, sampler=train_sampler, collate_fn=model_collate_fn)
DataLoader(dataset, batch_size=args.batch_size, sampler=train_sampler, collate_fn=model_collate_fn)
DataLoader(dataset, batch_size=args.batch_size, sampler=eval_sampler, collate_fn=model_collate_fn)
DataLoader(dataset, batch_size=args.batch_size, sampler=train_sampler, collate_fn=model_collate_fn)
DataLoader(dataset, batch_size=args.batch_size, sampler=train_sampler, collate_fn=model_collate_fn)
DataLoader(
        train_dataset, shuffle=True, collate_fn=data_collator, batch_size=args.per_device_train_batch_size
    )
DataLoader(eval_dataset, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size)
DataLoader(
        train_dataset,
        sampler=train_sampler,
        batch_size=args.train_batch_size,
        collate_fn=collate_fn,
        num_workers=args.num_workers,
    )
DataLoader(
        eval_dataset, sampler=eval_sampler, batch_size=args.eval_batch_size, collate_fn=collate_fn
    )
DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(eval_dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)
DataLoader(train_dataset, sampler=train_sampler, batch_size=args.train_batch_size)
DataLoader(dataset, sampler=eval_sampler, batch_size=args.eval_batch_size)
torch.utils.data.DataLoader(dataset=dataset, batch_size=batch_size, collate_fn=collate_fn)
torch.utils.data.DataLoader(
        dataset=Dataset(xs, ys), batch_size=batch_size, shuffle=shuffle, collate_fn=cached_collate_fn
    )
torch.utils.data.DataLoader(
            dataset=train_dataset, batch_size=batch_size, shuffle=True, collate_fn=collate_fn
        )
torch.utils.data.DataLoader(dataset=test_dataset, batch_size=batch_size, collate_fn=collate_fn)
DataLoader(
    eval_dataset_for_model, collate_fn=data_collator, batch_size=args.per_device_eval_batch_size
)
DataLoader(
            calib_dataset,
            batch_size=self.args.eval_batch_size,
            collate_fn=self.data_collator,
            drop_last=self.args.dataloader_drop_last,
            num_workers=self.args.dataloader_num_workers,
            pin_memory=self.args.dataloader_pin_memory,
            shuffle=True,
        )
DataLoader(
            dataset,
            batch_size=batch_size,
            collate_fn=dataset.collate_fn,
            shuffle=shuffle,
            num_workers=self.num_workers,
        )
DataLoader(
            dataset,
            batch_size=batch_size,
            collate_fn=dataset.collate_fn,
            shuffle=shuffle,
            num_workers=self.num_workers,
        )
DataLoader(
                dataset,
                batch_size=batch_size,
                collate_fn=dataset.collate_fn,
                shuffle=False,
                num_workers=self.num_workers,
                sampler=sampler,
            )
DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                collate_fn=dataset.collate_fn,
                # shuffle=False,
                num_workers=self.num_workers,
                # batch_size=None,
            )
DataLoader(
                dataset,
                batch_size=batch_size,
                collate_fn=dataset.collate_fn,
                shuffle=shuffle,
                num_workers=self.num_workers,
                sampler=None,
            )
DataLoader(
                train_dataset,
                batch_size=self.args.per_device_train_batch_size,
                collate_fn=self.data_collator,
                num_workers=self.args.dataloader_num_workers,
                pin_memory=self.args.dataloader_pin_memory,
            )
DataLoader(
            train_dataset,
            batch_size=self.args.train_batch_size,
            sampler=train_sampler,
            collate_fn=self.data_collator,
            drop_last=self.args.dataloader_drop_last,
            num_workers=self.args.dataloader_num_workers,
            pin_memory=self.args.dataloader_pin_memory,
        )
DataLoader(
                eval_dataset,
                batch_size=self.args.eval_batch_size,
                collate_fn=self.data_collator,
                num_workers=self.args.dataloader_num_workers,
                pin_memory=self.args.dataloader_pin_memory,
            )
DataLoader(
            eval_dataset,
            sampler=eval_sampler,
            batch_size=self.args.eval_batch_size,
            collate_fn=self.data_collator,
            drop_last=self.args.dataloader_drop_last,
            num_workers=self.args.dataloader_num_workers,
            pin_memory=self.args.dataloader_pin_memory,
        )
DataLoader(
                test_dataset,
                batch_size=self.args.eval_batch_size,
                collate_fn=self.data_collator,
                num_workers=self.args.dataloader_num_workers,
                pin_memory=self.args.dataloader_pin_memory,
            )
DataLoader(
            test_dataset,
            sampler=test_sampler,
            batch_size=self.args.eval_batch_size,
            collate_fn=self.data_collator,
            drop_last=self.args.dataloader_drop_last,
            pin_memory=self.args.dataloader_pin_memory,
        )
DataLoader(dataset, num_workers=num_workers, batch_size=batch_size, collate_fn=collate_fn)
DataLoader(dataset, num_workers=num_workers, batch_size=batch_size, collate_fn=collate_fn)
DataLoader(dataset=train_dataset,
                              batch_size=args.batch_size,
                              collate_fn=utils.collate_fn,
                              drop_last=True,
                              shuffle=True)
DataLoader(dataset=val_dataset,
                            batch_size=args.batch_size,
                            collate_fn=utils.collate_fn,
                            drop_last=True,
                            shuffle=True)
DataLoader(dataset=self.train_dataset,
                                           batch_size=train_bsz,
                                           collate_fn=self.collate_fn,
                                           drop_last=True, shuffle=True)
DataLoader(dataset=self.val_dataset,
                                         batch_size=val_bsz,
                                         collate_fn=self.collate_fn,
                                         drop_last=True)
DataLoader(dataset=self.train_dataset,
                                           batch_size=self.args.batch_size,
                                           collate_fn=self.collate_fn,
                                           sampler=self.train_sampler)
DataLoader(dataset=self.val_dataset,
                                         batch_size=self.args.eval_batch_size,
                                         collate_fn=self.collate_fn)
DataLoader(dataset=self.test_dataset,
                                          batch_size=self.args.eval_batch_size,
                                          collate_fn=self.collate_fn)
DataLoader(dataset=self.test_dataset,
                                          batch_size=self.args.eval_batch_size,
                                          collate_fn=self.collate_fn)
DataLoader(dataset=self.train_dataset, collate_fn=self.collate_fn,
                                               batch_sampler=train_batch_sampler)
DataLoader(dataset=self.train_dataset,
                                               batch_size=train_bsz,
                                               collate_fn=self.collate_fn,
                                               drop_last=True, shuffle=True)
DataLoader(dataset=self.val_dataset,
                                         batch_size=val_bsz,
                                         collate_fn=self.collate_fn,
                                         drop_last=True)
DataLoader(dataset=self.val_dataset,
                                                batch_size=self.args.eval_batch_size,
                                                collate_fn=self.collate_fn)
DataLoader(dataset=self.val_dataset,
                                                batch_size=self.args.eval_batch_size,
                                                collate_fn=self.collate_fn)
DataLoader(
        test_set,
        batch_size=config.args.batch_size,
        shuffle=False,
        num_workers=config.args.num_workers
    )
DataLoader(
        train_set,
        batch_size=config.args.batch_size,
        shuffle=(train_sampler is None),
        num_workers=config.args.num_workers,
        pin_memory=True,
        sampler=train_sampler
    )
DataLoader(
        valid_set,
        batch_size=config.args.batch_size,
        shuffle=False,
        num_workers=config.args.num_workers
    )
DataLoader(dataset=self.dataset,
                                     batch_size=eval_micro_batch_size,
                                     collate_fn=self.collate_fn)
DataLoader(dataset=self.train_dataset,
                                           batch_size=micro_batch_size,
                                           collate_fn=self.collate_fn,
                                           sampler=self.train_sampler)
DataLoader(dataset=self.val_dataset,
                                         batch_size=eval_micro_batch_size,
                                         collate_fn=self.collate_fn)
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/Coarse-to-Fine/coarse2fine/c2f_generator.py#L62
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/Coarse-to-Fine/coarse2fine/c2f_trainer.py#L143
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/Coarse-to-Fine/coarse2fine/c2f_trainer.py#L148
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/improved-diffusion/improved_diffusion/text_datasets.py#L64
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/improved-diffusion/improved_diffusion/text_datasets.py#L73
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/flax/vision/run_image_classification.py#L356
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/flax/vision/run_image_classification.py#L366
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/run_openai_gpt.py#L215
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/run_openai_gpt.py#L219
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/run_swag.py#L285
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/run_swag.py#L425
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/pytorch-lightning/run_glue.py#L95
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/pytorch-lightning/run_ner.py#L102
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/question-answering/run_squad.py#L83
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/question-answering/run_squad.py#L280
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/seq2seq/old_test_datasets.py#L83
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/seq2seq/old_test_datasets.py#L116
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/seq2seq/old_test_datasets.py#L154
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/seq2seq/old_test_datasets.py#L174
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/seq2seq/old_test_datasets.py#L175
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/seq2seq/run_distributed_eval.py#L99
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/legacy/seq2seq/save_len_file.py#L34
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/language-modeling/run_clm_no_trainer.py#L408
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/language-modeling/run_clm_no_trainer.py#L411
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/language-modeling/run_mlm_no_trainer.py#L451
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/language-modeling/run_mlm_no_trainer.py#L454
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/multiple-choice/run_swag_no_trainer.py#L410
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/multiple-choice/run_swag_no_trainer.py#L413
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/question-answering/run_qa_beam_search_no_trainer.py#L584
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/question-answering/run_qa_beam_search_no_trainer.py#L589
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/question-answering/run_qa_beam_search_no_trainer.py#L595
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/question-answering/run_qa_no_trainer.py#L590
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/question-answering/run_qa_no_trainer.py#L595
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/question-answering/run_qa_no_trainer.py#L601
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/summarization/run_summarization_no_trainer.py#L477
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/summarization/run_summarization_no_trainer.py#L480
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/text-classification/run_glue_no_trainer.py#L359
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/text-classification/run_glue_no_trainer.py#L362
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/text-classification/run_glue_no_trainer.py#L472
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/token-classification/run_ner_no_trainer.py#L470
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/token-classification/run_ner_no_trainer.py#L473
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/translation/run_translation_no_trainer.py#L455
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/pytorch/translation/run_translation_no_trainer.py#L458
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/bert-loses-patience/run_glue_with_pabee.py#L81
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/bert-loses-patience/run_glue_with_pabee.py#L292
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/bertabs/run_summarization.py#L193
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/bertology/run_bertology.py#L435
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/bertology/run_prune_gpt.py#L376
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/deebert/run_glue_deebert.py#L80
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/deebert/run_glue_deebert.py#L255
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/distillation/distiller.py#L69
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/distillation/run_squad_w_distillation.py#L100
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/distillation/run_squad_w_distillation.py#L325
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/jax-projects/hybrid_clip/run_hybrid_clip.py#L390
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/jax-projects/hybrid_clip/run_hybrid_clip.py#L400
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/longform-qa/eli5_utils.py#L225
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/longform-qa/eli5_utils.py#L265
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/longform-qa/eli5_utils.py#L307
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/longform-qa/eli5_utils.py#L427
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/longform-qa/eli5_utils.py#L466
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/luke/run_luke_ner_no_trainer.py#L546
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/luke/run_luke_ner_no_trainer.py#L549
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/mm-imdb/run_mmimdb.py#L73
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/mm-imdb/run_mmimdb.py#L246
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/movement-pruning/masked_run_glue.py#L113
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/movement-pruning/masked_run_glue.py#L435
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/movement-pruning/masked_run_squad.py#L121
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/movement-pruning/masked_run_squad.py#L453
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/pplm/run_pplm_discrim_train.py#L293
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/pplm/run_pplm_discrim_train.py#L305
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/pplm/run_pplm_discrim_train.py#L617
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/pplm/run_pplm_discrim_train.py#L620
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/quantization-qdqbert/evaluate-hf-trt-qa.py#L358
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/quantization-qdqbert/trainer_quant_qa.py#L59
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/rag-end2end-retriever/finetune_rag.py#L472
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/rag/finetune_rag.py#L352
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/seq2seq-distillation/finetune.py#L257
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/seq2seq-distillation/finetune.py#L270
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/examples/research_projects/seq2seq-distillation/finetune.py#L279
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/src/transformers/trainer.py#L677
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/src/transformers/trainer.py#L687
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/src/transformers/trainer.py#L753
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/src/transformers/trainer.py#L763
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/src/transformers/trainer.py#L796
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/src/transformers/trainer.py#L807
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/src/transformers/pipelines/base.py#L947
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/transformers/src/transformers/pipelines/base.py#L1046
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/fid/train.py#L136
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/fid/train.py#L141
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/src/trainer/basic_trainer.py#L101
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/src/trainer/basic_trainer.py#L105
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/src/trainer/ds_trainer.py#L58
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/src/trainer/ds_trainer.py#L63
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/src/trainer/generator.py#L77
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/src/trainer/generator.py#L228
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/src/trainer/multitask_trainer.py#L86
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/src/trainer/multitask_trainer.py#L89
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/src/trainer/multitask_trainer.py#L94
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/src/trainer/multitask_trainer.py#L150
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/src/trainer/multitask_trainer.py#L290
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/Parse-Then-Place/src/layout_placement/test.py#L19
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/Parse-Then-Place/src/layout_placement/train.py#L53
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/Parse-Then-Place/src/layout_placement/train.py#L61
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/Parse-Then-Place/src/semantic_parser/generator.py#L47
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/Parse-Then-Place/src/semantic_parser/trainer/ds_trainer.py#L130
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/Parse-Then-Place/src/semantic_parser/trainer/ds_trainer.py#L134

=================================
https://github.com/AiArt-HDU/HIDA
=================================

Found 4 times
DataLoader(dataset=dataset, batch_size=1, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(
        instance,
        batch_size=opt.batchSize,
        shuffle=not opt.serial_batches,
        num_workers=int(opt.nThreads),
        drop_last=opt.isTrain
    )
DataLoader(dataset=dataset, shuffle=True, batch_size=self.opt.bsize, pin_memory=True, drop_last=True,
                            num_workers=4)
DataLoader(dataset=dataset, batch_size=self.opt.bsize, pin_memory=True, drop_last=True, num_workers=4)
https://github.com/AiArt-HDU/HIDA/blob/db45d6353bf5dd4f0ae88e1e6bedecba08490a76/test.py#L68
https://github.com/AiArt-HDU/HIDA/blob/db45d6353bf5dd4f0ae88e1e6bedecba08490a76/data/__init__.py#L42
https://github.com/AiArt-HDU/HIDA/blob/db45d6353bf5dd4f0ae88e1e6bedecba08490a76/model/total_model/model_gpu.py#L51
https://github.com/AiArt-HDU/HIDA/blob/db45d6353bf5dd4f0ae88e1e6bedecba08490a76/model/total_model/model_gpu.py#L58

====================================
https://github.com/minjung-s/BallGAN
====================================

Found 2 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/minjung-s/BallGAN/blob/5a322f33b4553b96d107b8ec2e91afa2f398ffe5/ballgan/metrics/metric_utils.py#L233
https://github.com/minjung-s/BallGAN/blob/5a322f33b4553b96d107b8ec2e91afa2f398ffe5/ballgan/training/training_loop.py#L194

===================================
https://github.com/salesforce/DOODL
===================================

Found 3 times
DataLoader(train_set,
                              batch_size=batch_size, shuffle=False,
                              sampler=sampler, num_workers=workers,
                              pin_memory=True)
DataLoader(valid_set,
                            batch_size=batch_size, shuffle=False,
                            num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(
        trainset, batch_size=4, shuffle=True, num_workers=2
    )
https://github.com/salesforce/DOODL/blob/52a52da5e8392e97fe58868be22ca85c83d612da/memcnn/data/cifar.py#L43
https://github.com/salesforce/DOODL/blob/52a52da5e8392e97fe58868be22ca85c83d612da/memcnn/data/cifar.py#L48
https://github.com/salesforce/DOODL/blob/52a52da5e8392e97fe58868be22ca85c83d612da/memcnn/models/tests/test_amp.py#L65

=======================================
https://github.com/lisiyao21/AnimeInbet
=======================================

Found 5 times
data.DataLoader(lineart, batch_size=args.batch_size, 
        pin_memory=True, shuffle=True, num_workers=8, drop_last=True, worker_init_fn=worker_init_fn)
data.DataLoader(lineart, batch_size=args.batch_size, 
            pin_memory=True, shuffle=False, num_workers=8)
data.DataLoader(lineart, batch_size=args.batch_size, 
            pin_memory=True, shuffle=True, num_workers=16, drop_last=True, worker_init_fn=worker_init_fn)
data.DataLoader(lineart, batch_size=args.batch_size, 
            pin_memory=True, shuffle=False, num_workers=8)
data.DataLoader(lineart, batch_size=args.batch_size, 
            pin_memory=True, shuffle=False, num_workers=8)
https://github.com/lisiyao21/AnimeInbet/blob/55c7dc809cda584494915c39249e814e63450802/corr/datasets/ml_dataset.py#L287
https://github.com/lisiyao21/AnimeInbet/blob/55c7dc809cda584494915c39249e814e63450802/corr/datasets/ml_dataset.py#L291
https://github.com/lisiyao21/AnimeInbet/blob/55c7dc809cda584494915c39249e814e63450802/datasets/ml_seq.py#L524
https://github.com/lisiyao21/AnimeInbet/blob/55c7dc809cda584494915c39249e814e63450802/datasets/ml_seq.py#L527
https://github.com/lisiyao21/AnimeInbet/blob/55c7dc809cda584494915c39249e814e63450802/datasets/vd_seq.py#L186

==========================================
https://github.com/UnitedHuman/UnitedHuman
==========================================

Found 4 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(
        dataset=dataset, sampler=sampler, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(
        dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(
        dataset=dataset, sampler=sampler, batch_size=batch_size, **data_loader_kwargs)
https://github.com/UnitedHuman/UnitedHuman/blob/7c7e87aa49e817e401b711abcbd77d013c1aa246/metrics/metric_utils.py#L279
https://github.com/UnitedHuman/UnitedHuman/blob/7c7e87aa49e817e401b711abcbd77d013c1aa246/metrics/metric_utils.py#L395
https://github.com/UnitedHuman/UnitedHuman/blob/7c7e87aa49e817e401b711abcbd77d013c1aa246/metrics/metric_utils.py#L490
https://github.com/UnitedHuman/UnitedHuman/blob/7c7e87aa49e817e401b711abcbd77d013c1aa246/metrics/metric_utils.py#L576

=========================================
https://github.com/mkshing/svdiff-pytorch
=========================================

Found 6 times
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=True,
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=True,
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
        num_workers=args.dataloader_num_workers,
    )
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=True,
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
        num_workers=args.dataloader_num_workers,
    )
https://github.com/mkshing/svdiff-pytorch/blob/a78f69e14410c1963318806050a566d262eca9f8/train_svdiff.py#L657
https://github.com/mkshing/svdiff-pytorch/blob/a78f69e14410c1963318806050a566d262eca9f8/train_svdiff.py#L815
https://github.com/mkshing/svdiff-pytorch/blob/a78f69e14410c1963318806050a566d262eca9f8/scripts/train_dreambooth.py#L569
https://github.com/mkshing/svdiff-pytorch/blob/a78f69e14410c1963318806050a566d262eca9f8/scripts/train_dreambooth.py#L746
https://github.com/mkshing/svdiff-pytorch/blob/a78f69e14410c1963318806050a566d262eca9f8/scripts/train_dreambooth_lora.py#L608
https://github.com/mkshing/svdiff-pytorch/blob/a78f69e14410c1963318806050a566d262eca9f8/scripts/train_dreambooth_lora.py#L787

=============================================
https://github.com/Picsart-AI-Research/MI-GAN
=============================================

Found 1 times
DataLoader(
        dataset=inference_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers
    )
https://github.com/Picsart-AI-Research/MI-GAN/blob/ca4df2ebd1d2c657896a0fac33c7daff6f5d94e6/scripts/evaluate_fid_lpips.py#L223

=====================================
https://github.com/Yuxinn-J/Scenimefy
=====================================

Found 2 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.num_threads),
            drop_last=True if opt.isTrain else False,
        )
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.num_threads),
            drop_last=True if opt.isTrain else False,
        )
https://github.com/Yuxinn-J/Scenimefy/blob/821c9210f4a1facae8fa13fea4ca297c3bf8ba48/Semi_translation/data/__init__.py#L75
https://github.com/Yuxinn-J/Scenimefy/blob/821c9210f4a1facae8fa13fea4ca297c3bf8ba48/Semi_translation/data/__init__.py#L130

==================================================
https://github.com/humansensinglab/cycle-diffusion
==================================================

Found 8 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/latentdiff/main.py#L203
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/latentdiff/main.py#L212
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/latentdiff/main.py#L228
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/latentdiff/main.py#L236
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/stable_diffusion/main.py#L203
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/stable_diffusion/main.py#L212
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/stable_diffusion/main.py#L228
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/stable_diffusion/main.py#L236

=================================
https://github.com/VIROBO-15/GMNR
=================================

Found 3 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        pin_memory=False,
        num_workers=8,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=batch_size,
        shuffle=False,
        drop_last=True,
        pin_memory=True,
        num_workers=num_workres,
        worker_init_fn=seed_worker,
        generator=torch_g,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=False,
        drop_last=False,
        num_workers=num_workers,
    )
https://github.com/VIROBO-15/GMNR/blob/596f5da0709960484d5e9d6dd3b96a35c260abe2/gmnr/datasets.py#L362
https://github.com/VIROBO-15/GMNR/blob/596f5da0709960484d5e9d6dd3b96a35c260abe2/gmnr/datasets.py#L388
https://github.com/VIROBO-15/GMNR/blob/596f5da0709960484d5e9d6dd3b96a35c260abe2/gmnr/utils/pytorch_fid/fid_score.py#L123

=================================
https://github.com/nie-lang/UDIS2
=================================

Found 5 times
DataLoader(dataset=test_data, batch_size=args.batch_size, num_workers=1, shuffle=False, drop_last=False)
DataLoader(dataset=train_data, batch_size=args.batch_size, num_workers=4, shuffle=True, drop_last=True)
DataLoader(dataset=test_data, batch_size=args.batch_size, num_workers=1, shuffle=False, drop_last=False)
DataLoader(dataset=test_data, batch_size=args.batch_size, num_workers=1, shuffle=False, drop_last=False)
DataLoader(dataset=train_data, batch_size=args.batch_size, num_workers=4, shuffle=True, drop_last=True)
https://github.com/nie-lang/UDIS2/blob/91da26456967c82431357fce7f307ad18d8cfe3f/Composition/Codes/test.py#L24
https://github.com/nie-lang/UDIS2/blob/91da26456967c82431357fce7f307ad18d8cfe3f/Composition/Codes/train.py#L39
https://github.com/nie-lang/UDIS2/blob/91da26456967c82431357fce7f307ad18d8cfe3f/Warp/Codes/test.py#L33
https://github.com/nie-lang/UDIS2/blob/91da26456967c82431357fce7f307ad18d8cfe3f/Warp/Codes/test_output.py#L62
https://github.com/nie-lang/UDIS2/blob/91da26456967c82431357fce7f307ad18d8cfe3f/Warp/Codes/train.py#L35

================================
https://github.com/desaixie/gait
================================

Found 1 times
torch.utils.data.DataLoader(iterable,
                                         batch_size=batch_size,
                                         num_workers=num_workers,
                                         pin_memory=True,
                                         worker_init_fn=_worker_init_fn)
https://github.com/desaixie/gait/blob/2fee70405374229c7d77fdba5d0bf3ce8d0cfd6b/drqv2/replay_buffer.py#L331

===================================================
https://github.com/KU-CVLAB/Self-Attention-Guidance
===================================================

Found 2 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
https://github.com/KU-CVLAB/Self-Attention-Guidance/blob/b4f16d8e09cf0b93a325b5ad94970d30deef3994/guided_diffusion/image_datasets.py#L59
https://github.com/KU-CVLAB/Self-Attention-Guidance/blob/b4f16d8e09cf0b93a325b5ad94970d30deef3994/guided_diffusion/image_datasets.py#L63

=========================================================
https://github.com/TiankaiHang/Min-SNR-Diffusion-Training
=========================================================

Found 2 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
https://github.com/TiankaiHang/Min-SNR-Diffusion-Training/blob/8df27c9ff74a35e01dc783efacaafaf4bf406e23/guided_diffusion/image_datasets.py#L74
https://github.com/TiankaiHang/Min-SNR-Diffusion-Training/blob/8df27c9ff74a35e01dc783efacaafaf4bf406e23/guided_diffusion/image_datasets.py#L78

============================================================
https://github.com/bcmi/SycoNet-Adaptive-Image-Harmonization
============================================================

Found 1 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            drop_last=True,
            num_workers=int(opt.num_threads))
https://github.com/bcmi/SycoNet-Adaptive-Image-Harmonization/blob/da78cce4fa362806305f96113e7c722e3db39310/data/__init__.py#L75

================================================
https://github.com/AbnerVictor/OOD-GAN-inversion
================================================

Found 4 times
torch.utils.data.DataLoader(**dataloader_args)
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        sampler=None,
        drop_last=False)
DataLoader(
        dataset=dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, sampler=None, drop_last=False)
torch.utils.data.DataLoader(dataset=dataset, batch_size=1, shuffle=False, num_workers=0)
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/basicsr/data/__init__.py#L94
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/scripts/metrics/calculate_fid_folder.py#L37
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/scripts/metrics/calculate_fid_stats_from_datasets.py#L36
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/tests/test_models/test_sr_model.py#L137

=====================================
https://github.com/rocketappslab/bdmm
=====================================

Found 2 times
DataLoader(
            dataset=dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            shuffle=False,
            pin_memory=True
        )
torch.utils.data.DataLoader(
        instance,
        batch_size=opt.batchSize,
        shuffle=not opt.serial_batches,
        num_workers=int(opt.nThreads),
        drop_last=opt.isTrain
    )
https://github.com/rocketappslab/bdmm/blob/96181b04c3235f7327b546032cc3d7bdc4bf0f42/SMPLDataset/human_pose3d_estimators/spin/runner.py#L137
https://github.com/rocketappslab/bdmm/blob/96181b04c3235f7327b546032cc3d7bdc4bf0f42/data/__init__.py#L43

==================================================
https://github.com/cotton6/COTTON-size-does-matter
==================================================

Found 30 times
DataLoader(dataset, batch_size=config['TRAINING_CONFIG']['BATCH_SIZE'], \
                            shuffle=True, num_workers=config['TRAINING_CONFIG']['NUM_WORKER'])
DataLoader(dataset, batch_size=config['VAL_CONFIG']['BATCH_SIZE'], \
                            shuffle=True, num_workers=config['TRAINING_CONFIG']['NUM_WORKER'])
DataLoader(dataset=train_dataset, batch_size=1, num_workers=0, drop_last=True, shuffle=True)
DataLoader(dataset=train_dataset, batch_size=config['TRAINING_CONFIG']['BATCH_SIZE'], num_workers=16, drop_last=True, shuffle=True)
DataLoader(dataset=test_dataset, batch_size=1, num_workers=1, drop_last=True, shuffle=True)
DataLoader(dataset=test_dataset, batch_size=1, num_workers=1, drop_last=True, shuffle=False)
DataLoader(dataset_train, batch_size=opt.batch_size, num_workers=12, drop_last=True, shuffle=True)
DataLoader(dataset=dataset_valid, batch_size=1, num_workers=11, drop_last=True, shuffle=True)
DataLoader(dataset=dataset_test, batch_size=1, num_workers=11, drop_last=True, shuffle=True)
DataLoader(dataset=dataset_test, batch_size=1, num_workers=11, drop_last=True, shuffle=True)
data.DataLoader(lip_test_dataset, batch_size=args.batch_size, shuffle=False, pin_memory=True)
DataLoader(dataset)
torch.utils.data.DataLoader(
            dataset,
            sampler=sampler,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=None,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=batch_sampler,
            collate_fn=trivial_batch_collator,
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
        dataset,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
            dataset,
            sampler=sampler,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=None,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=batch_sampler,
            collate_fn=trivial_batch_collator,
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
        dataset,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
data.DataLoader(lip_test_dataset, batch_size=args.batch_size, shuffle=False, pin_memory=True)
data.DataLoader(train_dataset, batch_size=args.batch_size * len(gpus),
                                   num_workers=16, shuffle=True, pin_memory=True, drop_last=True)
DataLoader(dataset=Sleeve_Dataset(), batch_size=opt.batch_size, num_workers=11, drop_last=True, shuffle=True)
DataLoader(dataset=Sleeve_Dataset(mode=opt.mode), batch_size=1, num_workers=11, drop_last=True, shuffle=True)
DataLoader(dataset=Sleeve_Dataset(mode=opt.mode, path=opt.input_dir), batch_size=1, num_workers=11, drop_last=True, shuffle=True)
DataLoader(test_salobj_dataset,
                                        batch_size=1,
                                        shuffle=False,
                                        num_workers=1)
DataLoader(test_salobj_dataset,
                                        batch_size=1,
                                        shuffle=False,
                                        num_workers=1)
DataLoader(test_salobj_dataset,
                                            batch_size=1,
                                            shuffle=False,
                                            num_workers=1)
DataLoader(test_salobj_dataset,
                                            batch_size=1,
                                            shuffle=False,
                                            num_workers=1)
DataLoader(dataset=Cloth_Dataset(), batch_size=opt.batch_size, num_workers=11, drop_last=True, shuffle=True)
DataLoader(dataset=Cloth_Dataset(mode=opt.mode), batch_size=1, num_workers=11, drop_last=True, shuffle=True)
DataLoader(dataset=Cloth_Dataset(mode=opt.mode, path=opt.input_dir), batch_size=1, num_workers=11, drop_last=True, shuffle=True)
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/main.py#L70
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/main.py#L248
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Cloth2Skeleton/heatmap2skeleton.py#L77
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Cloth2Skeleton/main.py#L78
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Cloth2Skeleton/main.py#L202
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Cloth2Skeleton/main.py#L246
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/ClothSegmentation/main.py#L66
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/ClothSegmentation/main.py#L203
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/ClothSegmentation/main.py#L258
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/ClothSegmentation/remove_neckline.py#L31
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Self-Correction-Human-Parsing/evaluate.py#L159
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Self-Correction-Human-Parsing/simple_extractor_for_preprocessing.py#L137
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Self-Correction-Human-Parsing/mhp_extension/detectron2/detectron2/data/build.py#L318
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Self-Correction-Human-Parsing/mhp_extension/detectron2/detectron2/data/build.py#L332
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Self-Correction-Human-Parsing/mhp_extension/detectron2/detectron2/data/build.py#L380
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Self-Correction-Human-Parsing/mhp_extension/detectron2/projects/DensePose/densepose/data/build.py#L335
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Self-Correction-Human-Parsing/mhp_extension/detectron2/projects/DensePose/densepose/data/build.py#L349
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Self-Correction-Human-Parsing/mhp_extension/detectron2/projects/DensePose/densepose/data/build.py#L399
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Self-Correction-Human-Parsing/mhp_extension/global_local_parsing/global_local_evaluate.py#L161
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Self-Correction-Human-Parsing/mhp_extension/global_local_parsing/global_local_train.py#L149
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Sleeve_Classifier/main.py#L60
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Sleeve_Classifier/main.py#L158
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/Sleeve_Classifier/main.py#L195
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/U2Net/u2net_human_seg_test.py#L73
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/U2Net/u2net_inference.py#L74
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/U2Net/u2net_temp_data.py#L78
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/U2Net/u2net_test.py#L78
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/lower_clf/main.py#L58
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/lower_clf/main.py#L146
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/preprocessing/lower_clf/main.py#L178

=====================================================
https://github.com/MoayedHajiAli/VidStyleODE-official
=====================================================

Found 3 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False, drop_last=True, sampler=train_sampler)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False,  drop_last=True, sampler=DistributedSampler(self.datasets["validation"], shuffle=False, drop_last=True))
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False,  drop_last=True, sampler=DistributedSampler(self.datasets["test"], shuffle=False, drop_last=True))
https://github.com/MoayedHajiAli/VidStyleODE-official/blob/078f7e1bd4249dde7d9fd9a7c64eaf91e3281153/main.py#L214
https://github.com/MoayedHajiAli/VidStyleODE-official/blob/078f7e1bd4249dde7d9fd9a7c64eaf91e3281153/main.py#L219
https://github.com/MoayedHajiAli/VidStyleODE-official/blob/078f7e1bd4249dde7d9fd9a7c64eaf91e3281153/main.py#L224

======================================
https://github.com/Fictionarry/ER-NeRF
======================================

Found 2 times
DataLoader(list(range(size)), batch_size=1, collate_fn=self.collate, shuffle=False, num_workers=0)
DataLoader(list(range(size)), batch_size=1, collate_fn=self.collate, shuffle=self.training, num_workers=0)
https://github.com/Fictionarry/ER-NeRF/blob/c8ce2ec1689bb6050f5567c5dd66320d43cbe2c1/nerf_triplane/provider.py#L303
https://github.com/Fictionarry/ER-NeRF/blob/c8ce2ec1689bb6050f5567c5dd66320d43cbe2c1/nerf_triplane/provider.py#L762

==================================
https://github.com/owenzlz/PAL4VST
==================================

Found 1 times
DataLoader(dataset, batch_size=1, collate_fn=collate)
https://github.com/owenzlz/PAL4VST/blob/5c26feab93fa439a07c68efa0b20297ac3dd1b79/mmdeploy/tools/onnx2ncnn_quant_table.py#L39

===============================
https://github.com/pmh9960/GCDP
===============================

Found 5 times
DataLoader(ds, batch_size = batch_size, shuffle = shuffle, pin_memory = pin_memory)
DataLoader(ds, batch_size=batch_size, **dl_kwargs)
DataLoader(ds, batch_size=batch_size, **dl_kwargs)
DataLoader(ds, batch_size=batch_size, **dl_kwargs)
DataLoader(ds, batch_size=batch_size, **dl_kwargs)
https://github.com/pmh9960/GCDP/blob/f5f80490a642dbdeeb21ff69ca972d0beebde8ce/imagen_pytorch/data.py#L69
https://github.com/pmh9960/GCDP/blob/f5f80490a642dbdeeb21ff69ca972d0beebde8ce/imagen_pytorch/trainer.py#L600
https://github.com/pmh9960/GCDP/blob/f5f80490a642dbdeeb21ff69ca972d0beebde8ce/imagen_pytorch/trainer.py#L614
https://github.com/pmh9960/GCDP/blob/f5f80490a642dbdeeb21ff69ca972d0beebde8ce/imagen_pytorch/trainer.py#L1360
https://github.com/pmh9960/GCDP/blob/f5f80490a642dbdeeb21ff69ca972d0beebde8ce/imagen_pytorch/trainer.py#L1374

========================================
https://github.com/zipengxuc/StylerDALLE
========================================

Found 11 times
DataLoader(val_dataset, batch_size=args.bs, shuffle=False, drop_last=True)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=args.workers, drop_last=True)
DataLoader(val_dataset, batch_size=batch_size, shuffle=False, num_workers=args.workers, drop_last=True)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=args.workers, drop_last=True)
DataLoader(val_dataset, batch_size=batch_size, shuffle=False, num_workers=args.workers, drop_last=True)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=args.workers, drop_last=True)
DataLoader(val_dataset, batch_size=batch_size, shuffle=False, num_workers=args.workers, drop_last=True)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=args.workers, drop_last=True)
DataLoader(val_dataset, batch_size=batch_size, shuffle=False, num_workers=args.workers, drop_last=True)
DataLoader(ds, batch_size=bs, shuffle=False, num_workers=4, drop_last=False)
DataLoader(ds, batch_size=bs, shuffle=False, num_workers=4, drop_last=False)
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/eval_rl.py#L35
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/train.py#L24
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/train.py#L25
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/train_rl.py#L40
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/train_rl.py#L41
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/train_ru.py#L27
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/train_ru.py#L28
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/train_ru_rl.py#L54
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/train_ru_rl.py#L55
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/prep/prep_coco.py#L86
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/prep/prep_coco_ru.py#L91

=========================================
https://github.com/indigopyj/Shortcut-V2V
=========================================

Found 1 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batchSize,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.nThreads))
https://github.com/indigopyj/Shortcut-V2V/blob/ef6192ac8f64da402304c42801e72a0344283386/data/custom_dataset_data_loader.py#L37

=======================================
https://github.com/showlab/Tune-A-Video
=======================================

Found 1 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=train_batch_size
    )
https://github.com/showlab/Tune-A-Video/blob/7d4a89a2b90067e8d805ef1287beb4e4adf37e18/train_tuneavideo.py#L165

==============================================
https://github.com/Lipurple/Grounded-Diffusion
==============================================

Found 25 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=True, collate_fn=custom_collate)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers, collate_fn=custom_collate)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, collate_fn=custom_collate)
DataLoader(dataset, batch_size=batchsize)
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/mmdet/datasets/builder.py#L195
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_data/test_datasets/test_common.py#L224
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L76
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L88
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L99
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L111
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L115
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L133
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L135
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L155
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L157
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L177
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L197
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L216
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_runtime/test_eval_hook.py#L236
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_utils/test_hook.py#L92
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_utils/test_hook.py#L190
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_utils/test_hook.py#L246
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_utils/test_hook.py#L268
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_utils/test_hook.py#L310
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/mmdetection/tests/test_utils/test_hook.py#L347
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/src/taming-transformers/main.py#L165
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/src/taming-transformers/main.py#L169
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/src/taming-transformers/main.py#L174
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/src/taming-transformers/scripts/extract_segmentation.py#L128

===============================================
https://github.com/KingJamesSong/HouseholderGAN
===============================================

Found 20 times
DataLoader(dset, batch_size=args.batch, num_workers=4)
data.DataLoader(
        dataset,
        batch_size=args.batch,
        sampler=data_sampler(dataset, shuffle=True, distributed=args.distributed),
        drop_last=True,
    )
data.DataLoader(
        dataset,
        batch_size=args.batch,
        sampler=data_sampler(dataset, shuffle=True, distributed=args.distributed),
        drop_last=True,
    )
data.DataLoader(
        dataset,
        batch_size=args.batch,
        sampler=data_sampler(dataset, shuffle=True, distributed=args.distributed),
        drop_last=True,
    )
data.DataLoader(
        dataset,
        batch_size=args.batch,
        sampler=data_sampler(dataset, shuffle=True, distributed=args.distributed),
        drop_last=True,
    )
torch.utils.data.DataLoader(dataset_obj, batch_size=1, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
DataLoader(dataset, batch_size=1, shuffle=False)
DataLoader(dataset, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(dataset_obj, batch_size=1, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/calc_inception.py#L116
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/train.py#L540
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/train_1024.py#L1133
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/train_256.py#L1144
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/train_256_baselines.py#L599
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN3/avg_spectra.py#L54
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN3/metrics/metric_utils.py#L231
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN3/training/training_loop.py#L140
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN3/training/visualize.py#L141
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN3/training/visualize_FID.py#L141
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN3/training/visualize_PPL.py#L145
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN3/training/visualize_PPL_sefa.py#L145
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGANHuman/alignment.py#L104
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGANHuman/run_pti.py#L38
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGANHuman/training_scripts/sg3/avg_spectra.py#L54
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGANHuman/training_scripts/sg3/metrics/metric_utils.py#L231
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGANHuman/training_scripts/sg3/training/training_loop.py#L140
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGANHuman/training_scripts/sg3/training/visualize.py#L141
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGANHuman/training_scripts/sg3/training/visualize_FID.py#L141
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGANHuman/training_scripts/sg3/training/visualize_PPL.py#L145

===============================================
https://github.com/SHI-Labs/Versatile-Diffusion
===============================================

Found 3 times
torch.utils.data.DataLoader(
            trainset, 
            batch_size = cfg.train.batch_size_per_gpu, 
            sampler = sampler, 
            num_workers = cfg.train.dataset_num_workers_per_gpu, 
            drop_last = False, 
            pin_memory = cfg.train.dataset.get('pin_memory', False),
            collate_fn = collate(),)
torch.utils.data.DataLoader(
                    evalset, 
                    batch_size = cfg.eval.batch_size_per_gpu,
                    sampler = sampler,
                    num_workers = cfg.eval.dataset_num_workers_per_gpu,
                    drop_last = False, 
                    pin_memory = cfg.eval.dataset.get('pin_memory', False),
                    collate_fn = collate(),)
torch.utils.data.DataLoader(
                evalset, 
                batch_size = cfg.eval.batch_size_per_gpu,
                sampler = sampler,
                num_workers = cfg.eval.dataset_num_workers_per_gpu,
                drop_last = False, 
                pin_memory = False,
                collate_fn = collate(), )
https://github.com/SHI-Labs/Versatile-Diffusion/blob/cf0f4a2bc426a0567c672e4ab3dfbf61af0e265c/lib/utils.py#L509
https://github.com/SHI-Labs/Versatile-Diffusion/blob/cf0f4a2bc426a0567c672e4ab3dfbf61af0e265c/lib/utils.py#L524
https://github.com/SHI-Labs/Versatile-Diffusion/blob/cf0f4a2bc426a0567c672e4ab3dfbf61af0e265c/lib/utils.py#L577

==========================================================
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn
==========================================================

Found 7 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
DataLoader(sampler=self.valid_sampler, **self.init_kwargs)
DataLoader(dataset, batch_size, shuffle, validation_split, num_workers, collate_fn=mycollator)
DataLoader(dataset_r, batch_size, shuffle, validation_split, num_workers, collate_fn=mycollator)
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/main.py#L203
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/main.py#L212
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/main.py#L228
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/main.py#L236
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/layout_predictor/LayoutTransformer/loader/base_data_loader.py#L57
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/layout_predictor/LayoutTransformer/loader/build_loader.py#L83
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/layout_predictor/LayoutTransformer/loader/build_loader.py#L83

======================================
https://github.com/vvictoryuki/FreeDoM
======================================

Found 2 times
data.DataLoader(
            test_dataset,
            batch_size=config.sampling.batch_size,
            shuffle=True,
            num_workers=config.data.num_workers,
            worker_init_fn=seed_worker,
            generator=g,
        )
data.DataLoader(
            test_dataset,
            batch_size=config.sampling.batch_size,
            shuffle=True,
            num_workers=config.data.num_workers,
            worker_init_fn=seed_worker,
            generator=g,
        )
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/Face-GD/runners/.ipynb_checkpoints/diffusion-checkpoint.py#L243
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/Face-GD/runners/.ipynb_checkpoints/diffusion-checkpoint.py#L539

====================================================
https://github.com/MagicFusion/MagicFusion.github.io
====================================================

Found 4 times
DataLoader(concat_dataset, batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/main.py#L274
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/main.py#L283
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/main.py#L299
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/main.py#L307

===================================
https://github.com/cognaclee/DPM-OT
===================================

Found 6 times
DataLoader(dataset, batch_size=128, drop_last=False)
DataLoader(mode_mix_data,batch_size=batch_size,shuffle=False,pin_memory=True,num_workers=1)
torch.utils.data.DataLoader(trainset, batch_size=batch_size, shuffle=True, pin_memory=True)
torch.utils.data.DataLoader(testset, batch_size=batch_size, shuffle=False, pin_memory=True)
DataLoader(trainset,
                              sampler=train_sampler,
                              batch_size=args.train_batch_size,
                              num_workers=4,
                              pin_memory=True)
DataLoader(testset,
                             sampler=test_sampler,
                             batch_size=args.eval_batch_size,
                             num_workers=4,
                             pin_memory=True)
https://github.com/cognaclee/DPM-OT/blob/e2c0a667027593a31057e3e207c1a905dda3c664/evaluation/nearest_neighbor.py#L148
https://github.com/cognaclee/DPM-OT/blob/e2c0a667027593a31057e3e207c1a905dda3c664/metrics/ViT-pytorch-main/test.py#L310
https://github.com/cognaclee/DPM-OT/blob/e2c0a667027593a31057e3e207c1a905dda3c664/metrics/ViT-pytorch-main/train.py#L181
https://github.com/cognaclee/DPM-OT/blob/e2c0a667027593a31057e3e207c1a905dda3c664/metrics/ViT-pytorch-main/train.py#L182
https://github.com/cognaclee/DPM-OT/blob/e2c0a667027593a31057e3e207c1a905dda3c664/metrics/ViT-pytorch-main/utils/data_utils.py#L59
https://github.com/cognaclee/DPM-OT/blob/e2c0a667027593a31057e3e207c1a905dda3c664/metrics/ViT-pytorch-main/utils/data_utils.py#L64

===================================
https://github.com/yuangan/EAT_code
===================================

Found 6 times
DataLoader(dataset, batch_size=32, shuffle=True, num_workers=16, drop_last=True, collate_fn=collate_fn)
DataLoader(dataset, batch_size=train_params['batch_size'], shuffle=True, num_workers=16, drop_last=True)
DataLoader(dataset, batch_size=train_params['batch_size'], shuffle=True, num_workers=16, drop_last=True)
DataLoader(dataset, batch_size=train_params['batch_size'], shuffle=True, num_workers=16, drop_last=True)
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batchSize,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.nThreads))
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batchSize,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.nThreads))
https://github.com/yuangan/EAT_code/blob/c99811f0740809588e3ddbab5b555453a26b7750/frames_dataset_transformer25.py#L1711
https://github.com/yuangan/EAT_code/blob/c99811f0740809588e3ddbab5b555453a26b7750/train_transformer.py#L71
https://github.com/yuangan/EAT_code/blob/c99811f0740809588e3ddbab5b555453a26b7750/train_transformer.py#L161
https://github.com/yuangan/EAT_code/blob/c99811f0740809588e3ddbab5b555453a26b7750/train_transformer.py#L260
https://github.com/yuangan/EAT_code/blob/c99811f0740809588e3ddbab5b555453a26b7750/preprocess/vid2vid/data/custom_dataset_data_loader.py#L48
https://github.com/yuangan/EAT_code/blob/c99811f0740809588e3ddbab5b555453a26b7750/preprocess/vid2vid/data/.ipynb_checkpoints/custom_dataset_data_loader-checkpoint.py#L43

==========================================================
https://github.com/diffusion-face-relighting/difareli_code
==========================================================

Found 14 times
DataLoader(
            img_dataset, batch_size=batch_size, shuffle=False, num_workers=16, drop_last=True, 
            pin_memory=True, persistent_workers=True
        )
DataLoader(
            img_dataset, batch_size=batch_size, shuffle=True, num_workers=16, drop_last=True, pin_memory=True,
            persistent_workers=True
        )
DataLoader(
        dataset,
        num_workers=24,
        batch_size=1000,
        shuffle=False,
        drop_last=False
    )
DataLoader(dataset, batch_size=8, shuffle=False,
                            num_workers=8,
                            pin_memory=True,
                            drop_last=False)
DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True,
                            num_workers=self.cfg.dataset.num_workers,
                            pin_memory=True,
                            drop_last=True)
DataLoader(self.val_dataset, batch_size=8, shuffle=True,
                            num_workers=8,
                            pin_memory=True,
                            drop_last=False)
DataLoader(train_dataset, batch_size=config.batch_size, shuffle=shuffle,
                            num_workers=config.num_workers,
                            pin_memory=True,
                            drop_last = drop_last)
DataLoader(dataset, batch_size=8, shuffle=False,
                            num_workers=8,
                            pin_memory=True,
                            drop_last=False)
DataLoader(self.train_dataset, batch_size=self.batch_size, shuffle=True,
                            num_workers=self.cfg.dataset.num_workers,
                            pin_memory=True,
                            drop_last=True)
DataLoader(self.val_dataset, batch_size=8, shuffle=True,
                            num_workers=8,
                            pin_memory=True,
                            drop_last=False)
DataLoader(ds,
                    batch_size = n_img_per_gpu,
                    shuffle = False,
                    sampler = sampler,
                    num_workers = n_workers,
                    pin_memory = True,
                    drop_last = True)
DataLoader(
        dataset,
        num_workers=24,
        batch_size=1000,
        shuffle=False,
        drop_last=False
    )
th.utils.data.DataLoader(dat, batch_size=2,
                                            shuffle=False, num_workers=24)
th.utils.data.DataLoader(dat, batch_size=2,
                                            shuffle=False, num_workers=24)
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/guided_diffusion/dataloader/img_deca_datasets.py#L177
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/guided_diffusion/dataloader/img_deca_datasets.py#L182
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/preprocess_scripts/Relighting_preprocessing_tools/Arcface/get_arcface_emb.py#L80
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/preprocess_scripts/Relighting_preprocessing_tools/DECA/decalib/trainer.py#L322
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/preprocess_scripts/Relighting_preprocessing_tools/DECA/decalib/trainer.py#L366
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/preprocess_scripts/Relighting_preprocessing_tools/DECA/decalib/trainer.py#L371
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/preprocess_scripts/Relighting_preprocessing_tools/DECA/decalib/datasets/train_datasets.py#L41
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/preprocess_scripts/Relighting_preprocessing_tools/DECA/decalib/utils/trainer.py#L218
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/preprocess_scripts/Relighting_preprocessing_tools/DECA/decalib/utils/trainer.py#L252
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/preprocess_scripts/Relighting_preprocessing_tools/DECA/decalib/utils/trainer.py#L256
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/preprocess_scripts/Relighting_preprocessing_tools/face-parsing.PyTorch/train.py#L64
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/sample_scripts/cond_utils/arcface/get_arcface_emb.py#L76
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/sample_scripts/inference/relight.py#L329
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/sample_scripts/inference/reshadow.py#L323

=========================================
https://github.com/rainy-xu/TALL4Deepfake
=========================================

Found 1 times
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=shuffle,
                                              num_workers=workers, drop_last = True,pin_memory=True, sampler=sampler)
https://github.com/rainy-xu/TALL4Deepfake/blob/3fcec51f154697da0e672ae1890c138b2f5eec9b/video_dataset_aug.py#L69

==========================================
https://github.com/johannakarras/DreamPose
==========================================

Found 3 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, collate_fn=collate_fn, num_workers=1
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, collate_fn=collate_fn, num_workers=1
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, collate_fn=collate_fn, num_workers=1
    )
https://github.com/johannakarras/DreamPose/blob/5bf30b7df70cf6f2e0bb25556c6ff2cbf0f2b1bf/finetune-unet.py#L227
https://github.com/johannakarras/DreamPose/blob/5bf30b7df70cf6f2e0bb25556c6ff2cbf0f2b1bf/finetune-vae.py#L221
https://github.com/johannakarras/DreamPose/blob/5bf30b7df70cf6f2e0bb25556c6ff2cbf0f2b1bf/train.py#L236

=============================================
https://github.com/nupurkmr9/concept-ablation
=============================================

Found 12 times
torch.utils.data.DataLoader(
        CLIPCapDataset(captions, append=append),
        batch_size=batch_size, num_workers=num_workers, shuffle=False)
torch.utils.data.DataLoader(
        CLIPImageDataset(images),
        batch_size=batch_size, num_workers=num_workers, shuffle=False)
DataLoader(concat_dataset, batch_size=self.batch_size // 2,
                              num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                              worker_init_fn=init_fn)
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                              num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                              worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
torch.utils.data.DataLoader(
        CLIPCapDataset(captions, append=append),
        batch_size=batch_size, num_workers=num_workers, shuffle=False)
torch.utils.data.DataLoader(
        CLIPImageDataset(images),
        batch_size=batch_size, num_workers=num_workers, shuffle=False)
torch.utils.data.DataLoader(
        sample_dataset, batch_size=n_samples)
torch.utils.data.DataLoader(
                sample_dataset, batch_size=args.sample_batch_size
            )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=True,
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
        num_workers=args.dataloader_num_workers,
    )
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/evaluate.py#L74
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/evaluate.py#L87
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/train.py#L494
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/train.py#L498
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/train.py#L507
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/train.py#L523
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/train.py#L531
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/diffusers/evaluate.py#L77
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/diffusers/evaluate.py#L90
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/diffusers/evaluate.py#L296
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/diffusers/train.py#L720
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/diffusers/train.py#L956

==================================
https://github.com/lingxiao-li/HAE
==================================

Found 12 times
DataLoader(dataset,
	                        batch_size=args.batch_size,
	                        shuffle=False,
	                        num_workers=int(args.workers),
	                        drop_last=True)
DataLoader(dataset,
                            batch_size=opts.test_batch_size,
                            shuffle=False,
                            num_workers=int(opts.test_workers),
                            drop_last=True)
DataLoader(dataset,
                            batch_size=opts.test_batch_size,
                            shuffle=False,
                            num_workers=int(opts.test_workers),
                            drop_last=True)
DataLoader(dataset,
	                        batch_size=opts.test_batch_size,
	                        shuffle=False,
	                        num_workers=int(opts.test_workers),
	                        drop_last=True)
DataLoader(self.train_dataset,
										   batch_size=self.opts.batch_size,
										   shuffle=True,
										   num_workers=int(self.opts.workers),
										   drop_last=True)
DataLoader(self.test_dataset,
										  batch_size=self.opts.test_batch_size,
										  shuffle=False,
										  num_workers=int(self.opts.test_workers),
										  drop_last=True)
DataLoader(dataset,
	                        batch_size=args.batch_size,
	                        shuffle=False,
	                        num_workers=int(args.workers),
	                        drop_last=True)
DataLoader(dataset,
                            batch_size=opts.test_batch_size,
                            shuffle=False,
                            num_workers=int(opts.test_workers),
                            drop_last=True)
DataLoader(dataset,
                            batch_size=opts.test_batch_size,
                            shuffle=False,
                            num_workers=int(opts.test_workers),
                            drop_last=True)
DataLoader(dataset,
	                        batch_size=opts.test_batch_size,
	                        shuffle=False,
	                        num_workers=int(opts.test_workers),
	                        drop_last=True)
DataLoader(self.train_dataset,
										   batch_size=self.opts.batch_size,
										   shuffle=True,
										   num_workers=int(self.opts.workers),
										   drop_last=True)
DataLoader(self.test_dataset,
										  batch_size=self.opts.test_batch_size,
										  shuffle=False,
										  num_workers=int(self.opts.test_workers),
										  drop_last=True)
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/scripts/calc_losses_on_images.py#L40
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/scripts/inference.py#L65
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/scripts/inference_umap.py#L65
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/scripts/style_mixing.py#L53
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/training/coach.py#L61
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/training/coach.py#L66
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/utils/scripts/calc_losses_on_images.py#L40
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/utils/scripts/inference.py#L65
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/utils/scripts/inference_umap.py#L65
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/utils/scripts/style_mixing.py#L53
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/utils/training/coach.py#L61
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/utils/training/coach.py#L66

=====================================================
https://github.com/idansc/discriminative_class_tokens
=====================================================

Found 1 times
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=train_batch_size,
            shuffle=True,
            collate_fn=collate_fn,
            pin_memory=True,
        )
https://github.com/idansc/discriminative_class_tokens/blob/f74e03a1c23a4c393ad4cb29c6af0c2b383ebd56/run.py#L112

=========================================================
https://github.com/CrystalNeuro/visual-concept-translator
=========================================================

Found 1 times
torch.utils.data.DataLoader(train_dataset, batch_size=args.train_batch_size, shuffle=True)
https://github.com/CrystalNeuro/visual-concept-translator/blob/8a65252593054e316b8ea6451b2ccd600d4047f6/main.py#L633

=========================================
https://github.com/yumingj/Text2Performer
=========================================

Found 4 times
torch.utils.data.DataLoader(
        dataset=train_dataset,
        batch_size=opt['batch_size'],
        shuffle=True,
        num_workers=opt['num_workers'],
        persistent_workers=True,
        drop_last=True)
torch.utils.data.DataLoader(
        dataset=val_dataset, batch_size=opt['batch_size'], shuffle=False)
torch.utils.data.DataLoader(
        dataset=test_dataset, batch_size=opt['batch_size'], shuffle=False)
torch.utils.data.DataLoader(**dataloader_args)
https://github.com/yumingj/Text2Performer/blob/433489aae7bdd6fd868a2e272d98bed7c7b642a5/train_sampler.py#L47
https://github.com/yumingj/Text2Performer/blob/433489aae7bdd6fd868a2e272d98bed7c7b642a5/train_sampler.py#L59
https://github.com/yumingj/Text2Performer/blob/433489aae7bdd6fd868a2e272d98bed7c7b642a5/train_sampler.py#L64
https://github.com/yumingj/Text2Performer/blob/433489aae7bdd6fd868a2e272d98bed7c7b642a5/data/__init__.py#L122

========================================
https://github.com/kibeom-hong/aespa-net
========================================

Found 12 times
torch.utils.data.DataLoader(content_set, batch_size=self.batch_size, shuffle=True, drop_last=True, num_workers=self.num_workers)
torch.utils.data.DataLoader(art_reference_set, batch_size=self.batch_size, shuffle=True, drop_last=True, num_workers=self.num_workers)
torch.utils.data.DataLoader(content_set, batch_size=self.batch_size, shuffle=False, drop_last=True, num_workers=self.num_workers)
torch.utils.data.DataLoader(art_reference_set, batch_size=self.batch_size, shuffle=False, drop_last=True, num_workers=self.num_workers)
torch.utils.data.DataLoader(content_set, batch_size=self.batch_size, shuffle=False, drop_last=True, num_workers=self.num_workers)
torch.utils.data.DataLoader(art_reference_set, batch_size=self.batch_size, shuffle=False, drop_last=True, num_workers=self.num_workers)
torch.utils.data.DataLoader(content_set, batch_size=self.batch_size, shuffle=False, drop_last=True, num_workers=self.num_workers)
torch.utils.data.DataLoader(art_reference_set, batch_size=self.batch_size, shuffle=False, drop_last=True, num_workers=self.num_workers)
data.DataLoader(dataset=dataset,
								  batch_size=batch_size,
								  shuffle=True,
								  num_workers=num_workers)
data.DataLoader(dataset=train_dataset,
								  batch_size=batch_size,
								  shuffle=True,
								  pin_memory=True,
								  num_workers=num_workers, drop_last=True)
data.DataLoader(dataset=valid_dataset,
								  batch_size=batch_size,
								  shuffle=True,
								  pin_memory=True,
								  num_workers=num_workers, drop_last=True)
data.DataLoader(dataset=dataset,
								  batch_size=batch_size,
								  shuffle=True,
								  pin_memory=True,
								  num_workers=num_workers, drop_last=True)
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/baseline.py#L396
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/baseline.py#L397
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/baseline.py#L607
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/baseline.py#L608
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/baseline.py#L683
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/baseline.py#L684
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/baseline.py#L757
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/baseline.py#L758
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/data/data_loader.py#L28
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/data/data_loader.py#L96
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/data/data_loader.py#L102
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/data/data_loader.py#L109

=====================================
https://github.com/BrandonHanx/PoCoLD
=====================================

Found 3 times
torch.utils.data.DataLoader(
    val_dataset, shuffle=False, collate_fn=collate_fn, batch_size=32
)
torch.utils.data.DataLoader(
        train_dataset,
        shuffle=True,
        collate_fn=collate_fn,
        batch_size=args.train_batch_size,
        num_workers=8,
    )
torch.utils.data.DataLoader(
        val_dataset, shuffle=True, collate_fn=collate_fn, batch_size=4
    )
https://github.com/BrandonHanx/PoCoLD/blob/c5c7bb71ffef48802db0643173205fc6cd316c90/inference.py#L97
https://github.com/BrandonHanx/PoCoLD/blob/c5c7bb71ffef48802db0643173205fc6cd316c90/train.py#L654
https://github.com/BrandonHanx/PoCoLD/blob/c5c7bb71ffef48802db0643173205fc6cd316c90/train.py#L661

=========================================
https://github.com/humansensinglab/PATMAT
=========================================

Found 2 times
DataLoader(dataset, batch_size=1, shuffle=False)
DataLoader(image_dataset, batch_size=1, shuffle=False)
https://github.com/humansensinglab/PATMAT/blob/f8876b29fff5f627e582310fda631cf900faf5c4/PAT/scripts/run_pat.py#L36
https://github.com/humansensinglab/PATMAT/blob/f8876b29fff5f627e582310fda631cf900faf5c4/PAT/scripts/latent_creators/base_latent_creator.py#L40

================================
https://github.com/lizhi-ntu/KGI
================================

Found 8 times
torch.utils.data.DataLoader(
                dataset, batch_size=opt.batch_size, shuffle=False,
                num_workers=opt.workers, pin_memory=True, drop_last=True, sampler=train_sampler)
DataLoader(dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=False)
torch.utils.data.DataLoader(
                dataset, batch_size=opt.batch_size, shuffle=(train_sampler is None),
                num_workers=opt.workers, pin_memory=True, drop_last=True, sampler=train_sampler)
torch.utils.data.DataLoader(
                dataset, batch_size=opt.batch_size, shuffle=False,
                num_workers=opt.workers, pin_memory=True, drop_last=True, sampler=train_sampler)
DataLoader(dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=False)
data.DataLoader(dataset=dataset,
                           batch_size=batch_size,
                           shuffle=shuffle,
                           num_workers=num_workers,
                           pin_memory=True,
                           drop_last=drop_last)
DataLoader(dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True)
torch.utils.data.DataLoader(
                dataset, batch_size=opt.batch_size, shuffle=(train_sampler is None),
                num_workers=opt.workers, pin_memory=True, drop_last=True, sampler=train_sampler)
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/dataset_demo.py#L163
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_demo/guided_diffusion/image_datasets.py#L13
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_kg/dataset_kg.py#L139
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_pg/dataset_pg.py#L176
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_sci/guided_diffusion/image_datasets.py#L14
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_sdm/evaluations/default_dataset.py#L56
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_sdm/guided_diffusion/image_datasets.py#L14
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_tps/dataset_tps.py#L153

======================================
https://github.com/lyndonzheng/CVQ-VAE
======================================

Found 4 times
torch.utils.data.DataLoader(train_dataset,
        batch_size=args.batch_size, shuffle=True,
        num_workers=args.num_workers, pin_memory=True, 
        worker_init_fn=seed_worker, generator=g)
torch.utils.data.DataLoader(valid_dataset,
        batch_size=args.batch_size, shuffle=False, drop_last=True,
        num_workers=args.num_workers, pin_memory=True,
        worker_init_fn=seed_worker, generator=g)
torch.utils.data.DataLoader(test_dataset,
        batch_size=32, shuffle=False,
        worker_init_fn=seed_worker, generator=g)
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False)
https://github.com/lyndonzheng/CVQ-VAE/blob/d8614f0a1eafc800853515860d23d45ca65644ac/main.py#L138
https://github.com/lyndonzheng/CVQ-VAE/blob/d8614f0a1eafc800853515860d23d45ca65644ac/main.py#L142
https://github.com/lyndonzheng/CVQ-VAE/blob/d8614f0a1eafc800853515860d23d45ca65644ac/main.py#L146
https://github.com/lyndonzheng/CVQ-VAE/blob/d8614f0a1eafc800853515860d23d45ca65644ac/test.py#L68

========================================
https://github.com/junshutang/Make-It-3D
========================================

Found 1 times
DataLoader(list(range(self.size)), batch_size=1, collate_fn=self.collate, shuffle=self.training, num_workers=0)
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/nerf/provider.py#L316

=====================================
https://github.com/johannwyh/StyleInV
=====================================

Found 2 times
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, **train_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/johannwyh/StyleInV/blob/561b300277b7ad6b14d39eea04903b812d5c5075/training/training_loop_psp.py#L132
https://github.com/johannwyh/StyleInV/blob/561b300277b7ad6b14d39eea04903b812d5c5075/training/training_loop_styleinv.py#L169

===============================
https://github.com/YSerin/ZeCon
===============================

Found 2 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
https://github.com/YSerin/ZeCon/blob/51e679ef49d3875893eb956411abc802d9d8fc4c/guided_diffusion/guided_diffusion/image_datasets.py#L59
https://github.com/YSerin/ZeCon/blob/51e679ef49d3875893eb956411abc802d9d8fc4c/guided_diffusion/guided_diffusion/image_datasets.py#L63

=====================================
https://github.com/naver-ai/BlendNeRF
=====================================

Found 1 times
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/naver-ai/BlendNeRF/blob/404622d77f667a11c075406fba5cbff548927830/training/training_loop.py#L146

=================================
https://github.com/GuoQiushan/EGC
=================================

Found 6 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=8, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=8, drop_last=True
        )
DataLoader(
        dataset, batch_size=batch_size, shuffle=False, num_workers=8, drop_last=False
    )
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=8, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=8, drop_last=True
        )
DataLoader(
        dataset, batch_size=batch_size, shuffle=False, num_workers=8, drop_last=False
    )
https://github.com/GuoQiushan/EGC/blob/ec939ae503edece6f41af3379a694323a175d623/guided_diffusion/image_datasets.py#L86
https://github.com/GuoQiushan/EGC/blob/ec939ae503edece6f41af3379a694323a175d623/guided_diffusion/image_datasets.py#L90
https://github.com/GuoQiushan/EGC/blob/ec939ae503edece6f41af3379a694323a175d623/guided_diffusion/image_datasets.py#L138
https://github.com/GuoQiushan/EGC/blob/ec939ae503edece6f41af3379a694323a175d623/guided_diffusion/image_datasets.py#L206
https://github.com/GuoQiushan/EGC/blob/ec939ae503edece6f41af3379a694323a175d623/guided_diffusion/image_datasets.py#L210
https://github.com/GuoQiushan/EGC/blob/ec939ae503edece6f41af3379a694323a175d623/guided_diffusion/image_datasets.py#L265

=============================================================
https://github.com/bcmi/Foreground-Object-Search-Dataset-FOSD
=============================================================

Found 3 times
DataLoader(fg_dataset, batch_size=cfg.eval_bs, shuffle=False,
                                   num_workers=cfg.num_workers, drop_last=False)
DataLoader(fg_dataset, batch_size=cfg.eval_bs, shuffle=False,
                                   num_workers=cfg.num_workers, drop_last=False)
DataLoader(dataset, batch_size=cfg.batch_size,
                            num_workers=cfg.num_workers,
                            drop_last=False, sampler=sampler)
https://github.com/bcmi/Foreground-Object-Search-Dataset-FOSD/blob/63129173191e7cdea4ae74b788efdb3d64db9616/evaluate/base.py#L32
https://github.com/bcmi/Foreground-Object-Search-Dataset-FOSD/blob/63129173191e7cdea4ae74b788efdb3d64db9616/evaluate/base.py#L94
https://github.com/bcmi/Foreground-Object-Search-Dataset-FOSD/blob/63129173191e7cdea4ae74b788efdb3d64db9616/train/train.py#L29

===================================
https://github.com/OrthoPlanes/op3d
===================================

Found 4 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/OrthoPlanes/op3d/blob/39d386228458ad27972b8e8aee1d12f431b6f3e9/op3d/metrics/metric_utils.py#L243
https://github.com/OrthoPlanes/op3d/blob/39d386228458ad27972b8e8aee1d12f431b6f3e9/op3d/training/training_loop.py#L193
https://github.com/OrthoPlanes/op3d/blob/39d386228458ad27972b8e8aee1d12f431b6f3e9/op3d/training/training_loop.py#L564
https://github.com/OrthoPlanes/op3d/blob/39d386228458ad27972b8e8aee1d12f431b6f3e9/op3d/training/training_loop.py#L974

========================================
https://github.com/3dhumangan/3DHumanGAN
========================================

Found 2 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=proc_batch_size,
        shuffle=kwargs.get("shuffle", True),
        drop_last=True,
        pin_memory=False,
        num_workers=num_workers,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=proc_batch_size,
        shuffle=False,
        drop_last=True,
        pin_memory=True,
        num_workers=num_workers,
    )
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/data/__init__.py#L8
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/data/__init__.py#L28

==================================
https://github.com/liuzhen03/NNDVS
==================================

Found 1 times
DataLoader(dataset=eval_dataset, batch_size=args.bs, shuffle=False, num_workers=args.num_workers)
https://github.com/liuzhen03/NNDVS/blob/3e6ed7c8d1c1edb6e1c0e8ba9d376b6951def994/eval_nus.py#L50

==================================================
https://github.com/orpatashnik/local-prompt-mixing
==================================================

Found 1 times
DataLoader(another_prompts[1:], batch_size=args.batch_size, shuffle=False)
https://github.com/orpatashnik/local-prompt-mixing/blob/4bc225db751ae755604677cb2cdbb7bd8e732fe8/main.py#L67

============================================
https://github.com/harlanhong/ICCV2023-MCNET
============================================

Found 5 times
DataLoader(dataset, batch_size=1, shuffle=False, num_workers=1)
DataLoader(dataset, batch_size=1, shuffle=False, sampler = sampler, num_workers=1)
DataLoader(dataset, batch_size=train_params['batch_size'], shuffle=False, num_workers=8, sampler=sampler, drop_last=True)
torch.utils.data.DataLoader(
            test_dataset,
            batch_size = 2,
            shuffle=False,
            num_workers=4)
torch.utils.data.DataLoader(dataset,
                                             batch_size=batch_size,
                                             shuffle=False,
                                             drop_last=False,
                                             num_workers=num_workers)
https://github.com/harlanhong/ICCV2023-MCNET/blob/9a08e22b4232ca6a92134045e7268e83e6b43cf6/animate.py#L44
https://github.com/harlanhong/ICCV2023-MCNET/blob/9a08e22b4232ca6a92134045e7268e83e6b43cf6/reconstruction.py#L25
https://github.com/harlanhong/ICCV2023-MCNET/blob/9a08e22b4232ca6a92134045e7268e83e6b43cf6/train.py#L81
https://github.com/harlanhong/ICCV2023-MCNET/blob/9a08e22b4232ca6a92134045e7268e83e6b43cf6/train.py#L91
https://github.com/harlanhong/ICCV2023-MCNET/blob/9a08e22b4232ca6a92134045e7268e83e6b43cf6/evaluation/pytorch_fid/fid_score.py#L103

=====================================
https://github.com/salesforce/GlueGen
=====================================

Found 14 times
DataLoader(TD_tr, **train_params)
DataLoader(TD_tr_s, **train_params)
DataLoader(TD_tr_t, **train_params)
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
torch.utils.data.DataLoader(dataset, batch_size=bs,
                                                num_workers=config.data.params.num_workers, shuffle=True,
                                                drop_last=True)
torch.utils.data.DataLoader(dataset.inner_dataset, batch_size=bs,
                                                num_workers=config.data.params.num_workers, shuffle=False,
                                                drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=bs,
                                                num_workers=config.data.params.num_workers, shuffle=True,
                                                drop_last=False, pin_memory=False)
torch.utils.data.DataLoader(
        ds_train,
        batch_size=batch_train,
        shuffle=dl_shuffle,
        num_workers=workers_train,
        pin_memory=True,
        collate_fn=collate_fn,
        drop_last=True
    )
torch.utils.data.DataLoader(
        ds_eval,
        batch_size=batch_test,
        num_workers=workers_test,
        pin_memory=True,
        collate_fn=collate_fn
    )
torch.utils.data.DataLoader(
        ds_train,
        batch_size=batch_train,
        shuffle=dl_shuffle,
        num_workers=workers_train,
        pin_memory=True,
        collate_fn=collate_fn,
        drop_last=True
    )
torch.utils.data.DataLoader(
        ds_eval,
        batch_size=batch_test,
        shuffle=False, # only for mix
        num_workers=workers_test,
        pin_memory=True,
        collate_fn=collate_fn
    )
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/multilingual-gluenet/train_gluenet_multi.py#L113
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/multilingual-gluenet/train_gluenet_multi.py#L163
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/multilingual-gluenet/train_gluenet_multi.py#L167
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/main.py#L213
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/main.py#L222
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/main.py#L238
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/main.py#L246
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/utils.py#L39
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/utils.py#L114
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/utils.py#L155
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/audioclip/build/lib/ignite_trainer/_utils.py#L138
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/audioclip/build/lib/ignite_trainer/_utils.py#L157
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/audioclip/ignite_trainer/_utils.py#L138
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/audioclip/ignite_trainer/_utils.py#L157

====================================
https://github.com/LearningHx/StyA2K
====================================

Found 2 times
torch.utils.data.DataLoader(
                self.dataset,
                batch_size=opt.batch_size,
                shuffle= not opt.serial_batches,
                num_workers=int(opt.num_threads))
torch.utils.data.DataLoader(
                self.dataset,
                batch_size=opt.batch_size,
                num_workers=int(opt.num_threads),
                sampler=sampler(self.dataset))
https://github.com/LearningHx/StyA2K/blob/70b58dfdf6c249a0c621d8b849945272671dce74/data/__init__.py#L56
https://github.com/LearningHx/StyA2K/blob/70b58dfdf6c249a0c621d8b849945272671dce74/data/__init__.py#L62

=====================================
https://github.com/sichun233746/MoTIF
=====================================

Found 7 times
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=shuffle,
                                           num_workers=num_workers, sampler=sampler, drop_last=True,
                                           pin_memory=False, collate_fn=collate_function)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=shuffle,
                                           num_workers=num_workers, sampler=sampler, drop_last=True,
                                           pin_memory=False, collate_fn=collate_function_vimeo)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=False,
                                           num_workers=num_workers, sampler=sampler, drop_last=True,
                                           pin_memory=False, collate_fn=collate_function_test)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=False,
                                           num_workers=num_workers, sampler=sampler, drop_last=True,
                                           pin_memory=False)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=shuffle,
                                           num_workers=num_workers, sampler=sampler, drop_last=True,
                                           pin_memory=False)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=False, num_workers=1,
                                           pin_memory=True)
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
https://github.com/sichun233746/MoTIF/blob/3b6b417b90e17db0dbbb58d77989bbd5ad2f744f/data/__init__.py#L33
https://github.com/sichun233746/MoTIF/blob/3b6b417b90e17db0dbbb58d77989bbd5ad2f744f/data/__init__.py#L37
https://github.com/sichun233746/MoTIF/blob/3b6b417b90e17db0dbbb58d77989bbd5ad2f744f/data/__init__.py#L41
https://github.com/sichun233746/MoTIF/blob/3b6b417b90e17db0dbbb58d77989bbd5ad2f744f/data/__init__.py#L45
https://github.com/sichun233746/MoTIF/blob/3b6b417b90e17db0dbbb58d77989bbd5ad2f744f/data/__init__.py#L49
https://github.com/sichun233746/MoTIF/blob/3b6b417b90e17db0dbbb58d77989bbd5ad2f744f/data/__init__.py#L53
https://github.com/sichun233746/MoTIF/blob/3b6b417b90e17db0dbbb58d77989bbd5ad2f744f/models/core/datasets.py#L230

==============================
https://github.com/sail-sg/MDT
==============================

Found 2 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
https://github.com/sail-sg/MDT/blob/b1fe0b855d47456860785397927a483c7f15b57f/masked_diffusion/image_datasets.py#L59
https://github.com/sail-sg/MDT/blob/b1fe0b855d47456860785397927a483c7f15b57f/masked_diffusion/image_datasets.py#L63

===================================
https://github.com/IntelLabs/CLNeRF
===================================

Found 23 times
DataLoader(self.train_dataset,
                          num_workers=16,
                          persistent_workers=True,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.rep_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.train_dataset,
                          num_workers=16,
                          persistent_workers=True,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.train_dataset,
                          num_workers=16,
                          persistent_workers=True,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.rep_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.train_dataset,
                          num_workers=16,
                          persistent_workers=True,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.rep_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.train_dataset,
                          num_workers=16,
                          persistent_workers=True,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.train_dataset,
                          num_workers=16,
                          persistent_workers=True,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.train_dataset,
                          num_workers=16,
                          persistent_workers=True,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.rep_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.train_dataset,
                          num_workers=16,
                          persistent_workers=True,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.rep_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.train_dataset,
                          num_workers=16,
                          persistent_workers=True,
                          batch_size=None,
                          pin_memory=True)
DataLoader(self.test_dataset,
                          num_workers=8,
                          batch_size=None,
                          pin_memory=True)
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/render_NGP_WAT.py#L147
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/render_NGP_WAT.py#L154
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/render_NGP_WAT.py#L160
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train.py#L142
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train.py#L149
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_CLNerf.py#L151
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_CLNerf.py#L158
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_CLNerf.py#L164
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_MEIL.py#L151
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_MEIL.py#L158
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_MEIL.py#L164
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_lb.py#L147
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_lb.py#L154
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_ngpgv2.py#L146
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_ngpgv2.py#L153
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_ngpgv2_CLNerf.py#L155
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_ngpgv2_CLNerf.py#L162
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_ngpgv2_CLNerf.py#L168
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_ngpgv2_MEIL.py#L155
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_ngpgv2_MEIL.py#L162
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_ngpgv2_MEIL.py#L168
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_ngpgv2_lb.py#L151
https://github.com/IntelLabs/CLNeRF/blob/fd07dbb44d724ebdfc95bb31152ea47bceeb4cc2/train_ngpgv2_lb.py#L158

==================================
https://github.com/16lemoing/waldo
==================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=is_train,
        num_workers=num_workers,
        drop_last=is_train,
        worker_init_fn=lambda _: np.random.seed(),
        collate_fn=custom_collate_fn
    )
https://github.com/16lemoing/waldo/blob/fc0a67df3561521e56d86e6d23128583778000d9/data/__init__.py#L46

===========================================
https://github.com/echen01/ray-conditioning
===========================================

Found 2 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(
            dataset=training_set,
            sampler=training_set_sampler,
            batch_size=batch_size // num_gpus,
            **data_loader_kwargs,
        )
https://github.com/echen01/ray-conditioning/blob/8e1d5ae76d4747c771d770d1f042af77af4b9b5d/metrics/metric_utils.py#L231
https://github.com/echen01/ray-conditioning/blob/8e1d5ae76d4747c771d770d1f042af77af4b9b5d/training/training_loop.py#L153

=================================
https://github.com/araachie/river
=================================

Found 6 times
DataLoader(
            dataset=dataset,
            batch_size=self.config["batching"]["batch_size"],
            shuffle=True,
            num_workers=self.config["batching"]["num_workers"],
            pin_memory=True)
DataLoader(BAIRDataset(data_path=args.data_path), batch_size=args.batch_size, shuffle=True,
                             num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(BAIRDataset(data_path=args.data_path, mode='val'), batch_size=args.batch_size,
                                 shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers,
                             pin_memory=True, sampler=DistributedSampler(dataset), drop_last=True)
DataLoader(BAIRDataset(data_path=args.data_path, mode='val'), batch_size=args.batch_size,
                                 shuffle=False, num_workers=args.num_workers, pin_memory=True)
DataLoader(
            dataset=dataset,
            batch_size=self.config["batching"]["batch_size"],
            shuffle=False,
            num_workers=self.config["batching"]["num_workers"],
            sampler=sampler,
            pin_memory=True)
https://github.com/araachie/river/blob/1320bb6f25313b2474fdadd7435aa4bce21021f8/evaluation/evaluator.py#L45
https://github.com/araachie/river/blob/1320bb6f25313b2474fdadd7435aa4bce21021f8/refinement/eval.py#L34
https://github.com/araachie/river/blob/1320bb6f25313b2474fdadd7435aa4bce21021f8/refinement/eval.py#L36
https://github.com/araachie/river/blob/1320bb6f25313b2474fdadd7435aa4bce21021f8/refinement/train.py#L59
https://github.com/araachie/river/blob/1320bb6f25313b2474fdadd7435aa4bce21021f8/refinement/train.py#L61
https://github.com/araachie/river/blob/1320bb6f25313b2474fdadd7435aa4bce21021f8/training/trainer.py#L57

===============================
https://github.com/xyfJASON/HCL
===============================

Found 1 times
DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=shuffle,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=collate_fn,
        pin_memory=pin_memory,
        drop_last=drop_last,
        prefetch_factor=prefetch_factor,
    )
https://github.com/xyfJASON/HCL/blob/a9dbf883ca38205ba7c16c2c90effffad9ca6a3f/utils/data.py#L111

=====================================
https://github.com/yunguo224/LHP-Rain
=====================================

Found 6 times
DataLoader(dataset=test_dataset, batch_size=1, shuffle=False, num_workers=0, drop_last=False)
DataLoader(dataset=test_dataset, batch_size=1, shuffle=False, num_workers=8, drop_last=False)
DataLoader(dataset=test_dataset, batch_size=1, shuffle=False, num_workers=8, drop_last=False)
DataLoader(dataset=test_dataset, batch_size=1, shuffle=False, num_workers=4, drop_last=False, pin_memory=False)
DataLoader(dataset=train_dataset, batch_size=opt.batch_size, shuffle=True,
            num_workers=opt.train_workers, pin_memory=False, drop_last=False)
DataLoader(dataset=val_dataset, batch_size=opt.batch_size, shuffle=False,
            num_workers=opt.eval_workers, pin_memory=False, drop_last=False)
https://github.com/yunguo224/LHP-Rain/blob/c971e61495a2fe0f17cd29f1ea18bcdc7f8875d4/SCD-Former/test_derain.py#L93
https://github.com/yunguo224/LHP-Rain/blob/c971e61495a2fe0f17cd29f1ea18bcdc7f8875d4/SCD-Former/test/test_dnd.py#L68
https://github.com/yunguo224/LHP-Rain/blob/c971e61495a2fe0f17cd29f1ea18bcdc7f8875d4/SCD-Former/test/test_gopro_hide.py#L66
https://github.com/yunguo224/LHP-Rain/blob/c971e61495a2fe0f17cd29f1ea18bcdc7f8875d4/SCD-Former/test/test_realblur.py#L169
https://github.com/yunguo224/LHP-Rain/blob/c971e61495a2fe0f17cd29f1ea18bcdc7f8875d4/SCD-Former/train/train_derain.py#L149
https://github.com/yunguo224/LHP-Rain/blob/c971e61495a2fe0f17cd29f1ea18bcdc7f8875d4/SCD-Former/train/train_derain.py#L155

================================
https://github.com/mulns/AccFlow
================================

Found 3 times
DataLoader(
        dataset,
        batch_size=batch,
        pin_memory=True,
        shuffle=True,
        num_workers=workers,
        drop_last=True,
    )
DataLoader(
        dataset,
        batch_size=batch,
        pin_memory=True,
        shuffle=False,
        num_workers=0,
        drop_last=False,
    )
DataLoader(
        dataset,
        batch_size=batch,
        pin_memory=True,
        shuffle=False,
        num_workers=0,
        drop_last=False,
    )
https://github.com/mulns/AccFlow/blob/d05ee55c08b925e3a6308e3e6b5c5b1acd16af3c/data/dataset.py#L135
https://github.com/mulns/AccFlow/blob/d05ee55c08b925e3a6308e3e6b5c5b1acd16af3c/data/dataset.py#L153
https://github.com/mulns/AccFlow/blob/d05ee55c08b925e3a6308e3e6b5c5b1acd16af3c/data/dataset.py#L227

=================================
https://github.com/ewrfcas/CasMTR
=================================

Found 4 times
DataLoader(self.train_dataset, sampler=sampler, **self.train_loader_params)
DataLoader(self.val_dataset, sampler=sampler, **self.val_loader_params)
DataLoader(dataset, sampler=sampler, **self.val_loader_params)
DataLoader(self.test_dataset, sampler=sampler, **self.test_loader_params)
https://github.com/ewrfcas/CasMTR/blob/911b1f4dcdf02460f6b2e575ae74e41aaa8ca8f5/src/lightning/data.py#L298
https://github.com/ewrfcas/CasMTR/blob/911b1f4dcdf02460f6b2e575ae74e41aaa8ca8f5/src/lightning/data.py#L306
https://github.com/ewrfcas/CasMTR/blob/911b1f4dcdf02460f6b2e575ae74e41aaa8ca8f5/src/lightning/data.py#L311
https://github.com/ewrfcas/CasMTR/blob/911b1f4dcdf02460f6b2e575ae74e41aaa8ca8f5/src/lightning/data.py#L317

==============================
https://github.com/p1y2z3/SDAP
==============================

Found 3 times
torch.utils.data.DataLoader(dataset=dataset_val, batch_size=1, shuffle=False, num_workers=0,
                                                 drop_last=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.bs, shuffle=True, num_workers=8, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(dataset=dataset_val, batch_size=1, shuffle=False, num_workers=0,
                                                 drop_last=True)
https://github.com/p1y2z3/SDAP/blob/1f415a00afcd52518d90365d7349358c88d45d2b/test.py#L112
https://github.com/p1y2z3/SDAP/blob/1f415a00afcd52518d90365d7349358c88d45d2b/train.py#L249
https://github.com/p1y2z3/SDAP/blob/1f415a00afcd52518d90365d7349358c88d45d2b/train.py#L252

===================================
https://github.com/Vicky0522/RSFNet
===================================

Found 1 times
torch.utils.data.DataLoader(**dataloader_args)
https://github.com/Vicky0522/RSFNet/blob/206d06ff58b1cf3a347ebd457f024b55b74ad3e5/basicsr/data/__init__.py#L94

==================================
https://github.com/VITA-Group/PiRN
==================================

Found 2 times
torch.utils.data.DataLoader(dataset, **params)
torch.utils.data.DataLoader(dataset, **params)
https://github.com/VITA-Group/PiRN/blob/12b9ef6a32c75143c23402a7ab8f843624ca99e8/assets/dataloder.py#L85
https://github.com/VITA-Group/PiRN/blob/12b9ef6a32c75143c23402a7ab8f843624ca99e8/assets/train.py#L51

==============================================
https://github.com/sanechips-multimedia/syenet
==============================================

Found 4 times
data.DataLoader(
            train_data,
            batch_size=opt.config['train']['batch_size'],
            shuffle=True,
            num_workers=opt.config['train']['num_workers'],
            drop_last=True,
        )
data.DataLoader(
            valid_data,
            batch_size=1,
            shuffle=False,
            num_workers=opt.config['train']['num_workers'],
            drop_last=False,
        )
data.DataLoader(
            test_data,
            batch_size=1,
            shuffle=False,
            num_workers=opt.config['test']['num_workers'],
            drop_last=False,
        )
data.DataLoader(
            demo_data,
            batch_size=1,
            shuffle=False,
            num_workers=opt.config['demo']['num_workers'],
            drop_last=False,
        )
https://github.com/sanechips-multimedia/syenet/blob/920091ca7b7bc7bf83fe93a2ca679e4b13fc4a60/data/__init__.py#L31
https://github.com/sanechips-multimedia/syenet/blob/920091ca7b7bc7bf83fe93a2ca679e4b13fc4a60/data/__init__.py#L38
https://github.com/sanechips-multimedia/syenet/blob/920091ca7b7bc7bf83fe93a2ca679e4b13fc4a60/data/__init__.py#L52
https://github.com/sanechips-multimedia/syenet/blob/920091ca7b7bc7bf83fe93a2ca679e4b13fc4a60/data/__init__.py#L64

===================================
https://github.com/liuguandu/RC-LUT
===================================

Found 1 times
DataLoader(dataset=self.data, batch_size=self.batch_size, num_workers=self.num_workers,
                                         shuffle=False, drop_last=False, pin_memory=False)
https://github.com/liuguandu/RC-LUT/blob/812a767dc7c47ed1fefd703282da8ac6345f0f17/sr/data.py#L31

===============================================================================
https://github.com/chqwer2/Multi-view-Self-supervised-Disentanglement-Denoising
===============================================================================

Found 3 times
DataLoader(dataset=train_dataset,
                              batch_size=opt["dataloader_batch_size"], shuffle=True, pin_memory=True, drop_last=False)
DataLoader(dataset=val_syn_dataset, batch_size=1, pin_memory=False, drop_last=False)
DataLoader(dataset=dataset, batch_size=1, pin_memory=False, drop_last=False)
https://github.com/chqwer2/Multi-view-Self-supervised-Disentanglement-Denoising/blob/5c48c3c1b19885ca3d038478489c3fa7665c33d4/data/select_dataset.py#L21
https://github.com/chqwer2/Multi-view-Self-supervised-Disentanglement-Denoising/blob/5c48c3c1b19885ca3d038478489c3fa7665c33d4/data/select_dataset.py#L23
https://github.com/chqwer2/Multi-view-Self-supervised-Disentanglement-Denoising/blob/5c48c3c1b19885ca3d038478489c3fa7665c33d4/data/select_dataset.py#L36

=======================================================
https://github.com/KAIST-VCLAB/singshot-hdr-demosaicing
=======================================================

Found 3 times
torch.utils.data.DataLoader(test_dataset, batch_size=1, shuffle=False, drop_last=False,
                                                    num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size, shuffle=False, drop_last=True,
                                                     num_workers=num_worker, pin_memory=True, sampler=TrainSampler)
torch.utils.data.DataLoader(test_dataset, batch_size=1, shuffle=False, drop_last=False,
                                                     num_workers=num_worker, pin_memory=True, sampler=TestSampler)
https://github.com/KAIST-VCLAB/singshot-hdr-demosaicing/blob/1d7ca22eef97d8e8cc4dd965bb0c435e5ec379f3/code/test.py#L35
https://github.com/KAIST-VCLAB/singshot-hdr-demosaicing/blob/1d7ca22eef97d8e8cc4dd965bb0c435e5ec379f3/code/train.py#L78
https://github.com/KAIST-VCLAB/singshot-hdr-demosaicing/blob/1d7ca22eef97d8e8cc4dd965bb0c435e5ec379f3/code/train.py#L80

====================================
https://github.com/zhengchen1999/DAT
====================================

Found 1 times
torch.utils.data.DataLoader(**dataloader_args)
https://github.com/zhengchen1999/DAT/blob/57637a33edef21225b47885859b9fc1ff04231e3/basicsr/data/__init__.py#L94

======================================
https://github.com/junsang7777/VOS-VFI
======================================

Found 1 times
DataLoader(dataset=dataset, batch_size=args.batch_size, shuffle=True, num_workers=0)
https://github.com/junsang7777/VOS-VFI/blob/862b273278fc5ba6c5e05b3db0dff2a37a061f1d/train.py#L58

==============================
https://github.com/edbca/DARSR
==============================

Found 1 times
DataLoader(dataset, batch_size=conf.batch_size, shuffle=False)
https://github.com/edbca/DARSR/blob/16b5b00857629ed7f0f69dea1c8c773246f94073/data.py#L14

======================================
https://github.com/ZhengyuLiang24/EPIT
======================================

Found 2 times
torch.utils.data.DataLoader(dataset=train_Dataset, num_workers=args.num_workers,
                                               batch_size=args.batch_size, shuffle=True,)
DataLoader(dataset=test_Dataset, num_workers=args.num_workers, batch_size=1, shuffle=False)
https://github.com/ZhengyuLiang24/EPIT/blob/0706d9d362448ed04ad1cc1b9898af08b76f063a/common.py#L28
https://github.com/ZhengyuLiang24/EPIT/blob/0706d9d362448ed04ad1cc1b9898af08b76f063a/utils/utils_datasets.py#L73

===========================================================
https://github.com/YilinLiu97/FasterDIP-devil-in-upsampling
===========================================================

Found 5 times
DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=14, pin_memory=True)
DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=14, pin_memory=True)
DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=14, pin_memory=True)
DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=14, pin_memory=True)
DataLoader(dataset, batch_size=1, shuffle=False, num_workers=14, pin_memory=True)
https://github.com/YilinLiu97/FasterDIP-devil-in-upsampling/blob/402747e956087bd83e56176036fa202645ab91d3/DIP-Recon/core/denoising.py#L63
https://github.com/YilinLiu97/FasterDIP-devil-in-upsampling/blob/402747e956087bd83e56176036fa202645ab91d3/DIP-Recon/core/inpainting.py#L63
https://github.com/YilinLiu97/FasterDIP-devil-in-upsampling/blob/402747e956087bd83e56176036fa202645ab91d3/DIP-Recon/core/mri.py#L63
https://github.com/YilinLiu97/FasterDIP-devil-in-upsampling/blob/402747e956087bd83e56176036fa202645ab91d3/DIP-Recon/core/super_resolution.py#L63
https://github.com/YilinLiu97/FasterDIP-devil-in-upsampling/blob/402747e956087bd83e56176036fa202645ab91d3/DIP-Recon/core/train_unsup_morph.py#L51

============================================
https://github.com/wyf0912/ExposureDiffusion
============================================

Found 7 times
torch.utils.data.DataLoader(
        eval_dataset, batch_size=1, shuffle=False,
        num_workers=opt.nThreads, pin_memory=True)
torch.utils.data.DataLoader(
    eval_dataset, batch_size=1, shuffle=False,
    num_workers=opt.nThreads, pin_memory=True)
torch.utils.data.DataLoader(
    train_dataset, batch_size=opt.batchSize, shuffle=True,
    num_workers=opt.nThreads, pin_memory=True, worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(
    eval_dataset, batch_size=1, shuffle=False,
    num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(
    train_dataset, batch_size=opt.batchSize, shuffle=True,
    num_workers=opt.nThreads, pin_memory=True, worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(
    eval_dataset, batch_size=1, shuffle=False,
    num_workers=0, pin_memory=True)
torch.utils.data.DataLoader(
    train_dataset, batch_size=opt.batchSize, shuffle=True,
    num_workers=0, pin_memory=True, worker_init_fn=datasets.worker_init_fn)
https://github.com/wyf0912/ExposureDiffusion/blob/29b125a0ae2cc0ca5f52395c65f4f4e340a20f97/test_ELD.py#L42
https://github.com/wyf0912/ExposureDiffusion/blob/29b125a0ae2cc0ca5f52395c65f4f4e340a20f97/test_SID.py#L36
https://github.com/wyf0912/ExposureDiffusion/blob/29b125a0ae2cc0ca5f52395c65f4f4e340a20f97/train_real.py#L68
https://github.com/wyf0912/ExposureDiffusion/blob/29b125a0ae2cc0ca5f52395c65f4f4e340a20f97/train_real.py#L73
https://github.com/wyf0912/ExposureDiffusion/blob/29b125a0ae2cc0ca5f52395c65f4f4e340a20f97/train_syn.py#L77
https://github.com/wyf0912/ExposureDiffusion/blob/29b125a0ae2cc0ca5f52395c65f4f4e340a20f97/train_syn.py#L82
https://github.com/wyf0912/ExposureDiffusion/blob/29b125a0ae2cc0ca5f52395c65f4f4e340a20f97/vis_data.py#L65

==============================================
https://github.com/CXH-Research/DocShadow-SD7K
==============================================

Found 3 times
DataLoader(dataset=val_dataset, batch_size=1, shuffle=False, num_workers=8, drop_last=False, pin_memory=True)
DataLoader(dataset=train_dataset, batch_size=opt.OPTIM.BATCH_SIZE, shuffle=True, num_workers=16, drop_last=False, pin_memory=True)
DataLoader(dataset=val_dataset, batch_size=1, shuffle=False, num_workers=8, drop_last=False, pin_memory=True)
https://github.com/CXH-Research/DocShadow-SD7K/blob/c354eb6b8820820944c2deb87cbc354333efa734/infer.py#L28
https://github.com/CXH-Research/DocShadow-SD7K/blob/c354eb6b8820820944c2deb87cbc354333efa734/train.py#L40
https://github.com/CXH-Research/DocShadow-SD7K/blob/c354eb6b8820820944c2deb87cbc354333efa734/train.py#L42

=================================================
https://github.com/tuffr5/Saner-deep-registration
=================================================

Found 13 times
DataLoader(train_set, batch_size=1, shuffle=True, num_workers=4, pin_memory=True)
DataLoader(val_set, batch_size=1, shuffle=False, num_workers=4, pin_memory=True, drop_last=True)
DataLoader(test_set, batch_size=1, shuffle=False, num_workers=1, pin_memory=True, drop_last=True)
DataLoader(test_set, batch_size=1, shuffle=False, num_workers=1, pin_memory=True, drop_last=True)
DataLoader(train_set, batch_size=1, shuffle=True, num_workers=4, pin_memory=True)
DataLoader(val_set, batch_size=1, shuffle=False, num_workers=4, pin_memory=True, drop_last=True)
DataLoader(test_set, batch_size=1, shuffle=False, num_workers=1, pin_memory=True, drop_last=True)
DataLoader(test_set, batch_size=1, shuffle=False, num_workers=1, pin_memory=True, drop_last=True)
DataLoader(train_set, batch_size=1, shuffle=True, num_workers=4, pin_memory=True)
DataLoader(val_set, batch_size=1, shuffle=False, num_workers=4, pin_memory=True, drop_last=True)
DataLoader(test_set, batch_size=1, shuffle=False, num_workers=1, pin_memory=True, drop_last=True)
DataLoader(IXI_test_set, batch_size=1, shuffle=False, num_workers=1, pin_memory=True, drop_last=True)
DataLoader(OASIS_test_set, batch_size=1, shuffle=False, num_workers=1, pin_memory=True, drop_last=True)
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/sanity_checks_IXI.py#L350
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/sanity_checks_IXI.py#L356
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/sanity_checks_IXI.py#L383
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/sanity_checks_IXI.py#L404
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/sanity_checks_IXI_Transmorph.py#L367
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/sanity_checks_IXI_Transmorph.py#L373
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/sanity_checks_IXI_Transmorph.py#L400
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/sanity_checks_IXI_Transmorph.py#L421
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/sanity_checks_OASIS.py#L406
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/sanity_checks_OASIS.py#L411
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/sanity_checks_OASIS.py#L435
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/test_model_generalization.py#L338
https://github.com/tuffr5/Saner-deep-registration/blob/3f851cd5ea0148dc6f991c795759a70ab21dc052/test_model_generalization.py#L345

========================================
https://github.com/XiaoyuShi97/VideoFlow
========================================

Found 2 times
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=args.batch_size*2, drop_last=True)
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=args.batch_size*2, drop_last=True)
https://github.com/XiaoyuShi97/VideoFlow/blob/51489304db6e75fbdd9ff64d4656c1d120b5a673/core/datasets_3frames.py#L263
https://github.com/XiaoyuShi97/VideoFlow/blob/51489304db6e75fbdd9ff64d4656c1d120b5a673/core/datasets_multiframes.py#L556

===============================================
https://github.com/caiyuanhao1998/Retinexformer
===============================================

Found 2 times
DataLoader(dataset=dataset, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(**dataloader_args)
https://github.com/caiyuanhao1998/Retinexformer/blob/f8d07ae6be84aaa93cf2f1cc1b804101fa7c9aa3/Enhancement/test_from_dataset.py#L123
https://github.com/caiyuanhao1998/Retinexformer/blob/f8d07ae6be84aaa93cf2f1cc1b804101fa7c9aa3/basicsr/data/__init__.py#L122

======================================
https://github.com/AVC2-UESTC/CRAFT-SR
======================================

Found 3 times
torch.utils.data.DataLoader(**dataloader_args)
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        sampler=None,
        drop_last=False)
DataLoader(
        dataset=dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, sampler=None, drop_last=False)
https://github.com/AVC2-UESTC/CRAFT-SR/blob/f4f706816fdd186529fd8b7ffebfb3446be43e8d/basicsr/data/__init__.py#L94
https://github.com/AVC2-UESTC/CRAFT-SR/blob/f4f706816fdd186529fd8b7ffebfb3446be43e8d/scripts/metrics/calculate_fid_folder.py#L37
https://github.com/AVC2-UESTC/CRAFT-SR/blob/f4f706816fdd186529fd8b7ffebfb3446be43e8d/scripts/metrics/calculate_fid_stats_from_datasets.py#L36

==================================
https://github.com/zheng980629/CUE
==================================

Found 3 times
torch.utils.data.DataLoader(**dataloader_args)
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        sampler=None,
        drop_last=False)
DataLoader(
        dataset=dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, sampler=None, drop_last=False)
https://github.com/zheng980629/CUE/blob/23c426296f47b6d109017da4652eee5dd944c8a7/basicsr/data/__init__.py#L95
https://github.com/zheng980629/CUE/blob/23c426296f47b6d109017da4652eee5dd944c8a7/scripts/metrics/calculate_fid_folder.py#L37
https://github.com/zheng980629/CUE/blob/23c426296f47b6d109017da4652eee5dd944c8a7/scripts/metrics/calculate_fid_stats_from_datasets.py#L36

=======================================
https://github.com/NamecantbeNULL/SRUDC
=======================================

Found 6 times
DataLoader(test_dataset,
							 batch_size=1,
							 num_workers=args.num_workers,
							 pin_memory=True)
DataLoader(test_dataset,
							 batch_size=1,
							 num_workers=args.num_workers,
							 pin_memory=True)
DataLoader(train_dataset,
							  batch_size=m_setup['batch_size'] // world_size,
							  sampler=RandomSampler(train_dataset, num_samples=b_setup['num_iter'] // world_size, replacement=True),
							  num_workers=args.num_workers // world_size,
							  pin_memory=True,
							  drop_last=True,
							  persistent_workers=True)
DataLoader(val_dataset,
							# batch_size=max(int(m_setup['batch_size'] * b_setup['v_batch_ratio'] // world_size), 1),
							batch_size=4,
							# sampler=DistributedSampler(val_dataset, shuffle=False),		# comment this line for more accurate validation
							num_workers=args.num_workers // world_size,
							pin_memory=True)
DataLoader(train_dataset,
							  batch_size=32,
							  sampler=RandomSampler(train_dataset, num_samples=b_setup['num_iter']),
							  num_workers=args.num_workers,
							  pin_memory=True,
							  drop_last=True,
							  persistent_workers=True)
DataLoader(val_dataset,
							batch_size=1,
							num_workers=args.num_workers,
							pin_memory=True)
https://github.com/NamecantbeNULL/SRUDC/blob/5460f0955fefa4e6725d5b3bbd76c64b259dfac0/test.py#L144
https://github.com/NamecantbeNULL/SRUDC/blob/5460f0955fefa4e6725d5b3bbd76c64b259dfac0/test_real.py#L101
https://github.com/NamecantbeNULL/SRUDC/blob/5460f0955fefa4e6725d5b3bbd76c64b259dfac0/train.py#L209
https://github.com/NamecantbeNULL/SRUDC/blob/5460f0955fefa4e6725d5b3bbd76c64b259dfac0/train.py#L219
https://github.com/NamecantbeNULL/SRUDC/blob/5460f0955fefa4e6725d5b3bbd76c64b259dfac0/tools/qat.py#L109
https://github.com/NamecantbeNULL/SRUDC/blob/5460f0955fefa4e6725d5b3bbd76c64b259dfac0/tools/qat.py#L119

===========================================================
https://github.com/Jiamian-Wang/Iterative-Soft-Shrinkage-SR
===========================================================

Found 2 times
torch.utils.data.DataLoader(**dataloader_args)
torch.utils.data.DataLoader(**dataloader_args)
https://github.com/Jiamian-Wang/Iterative-Soft-Shrinkage-SR/blob/6e11c433afe0a9907f164d172cc4d3a556557e5f/basicsr/data/__init__.py#L94
https://github.com/Jiamian-Wang/Iterative-Soft-Shrinkage-SR/blob/6e11c433afe0a9907f164d172cc4d3a556557e5f/restormer/basicsr/data/__init__.py#L119

===========================================
https://github.com/SamsungLabs/graphics2raw
===========================================

Found 6 times
torch.utils.data.DataLoader(image_datasets[x], batch_size=args.batch_size,
                                                  shuffle=True, num_workers=0)
torch.utils.data.DataLoader(image_datasets[x], batch_size=args.batch_size,
                                                  shuffle=True, num_workers=0)
torch.utils.data.DataLoader(image_datasets[x], batch_size=args.batch_size,
                                                  shuffle=True, num_workers=0)
torch.utils.data.DataLoader(image_datasets[x], batch_size=batch_size,
                                                  shuffle=True, num_workers=0)
torch.utils.data.DataLoader(image_datasets[x], batch_size=32,
                                                  shuffle=True, num_workers=0)
torch.utils.data.DataLoader(image_datasets[x], batch_size=batch_size,
                                                  shuffle=True, num_workers=0)
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/train_denoise.py#L123
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/train_illum_est.py#L124
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/train_neural_isp.py#L103
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/data_preparation/dataset_denoise.py#L82
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/data_preparation/dataset_illum_est.py#L74
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/data_preparation/dataset_neural_isp.py#L81

====================================
https://github.com/linxin0/SCPGabNet
====================================

Found 2 times
uData.DataLoader(datasets[phase], batch_size=batch_size[phase],
                                           shuffle=True, num_workers=0, pin_memory=True)
uData.DataLoader(data_set_gt, batch_size=batch_size['train'],
                                      shuffle=True, num_workers=0, pin_memory=True)
https://github.com/linxin0/SCPGabNet/blob/ffc5d5685b2c6ec2ddf4e2d776aae265a8161d60/train_v6.py#L105
https://github.com/linxin0/SCPGabNet/blob/ffc5d5685b2c6ec2ddf4e2d776aae265a8161d60/train_v6.py#L113

================================
https://github.com/Cralence/SILT
================================

Found 3 times
DataLoader(train_set, batch_size=args_train['train']['batch_size'], num_workers=1, shuffle=True)
DataLoader(test_set, batch_size=1, num_workers=1)
DataLoader(refine_set, batch_size=1, num_workers=1, shuffle=False)
https://github.com/Cralence/SILT/blob/5aeccb542320a28ad9db0017930e35108f493b91/utils.py#L94
https://github.com/Cralence/SILT/blob/5aeccb542320a28ad9db0017930e35108f493b91/utils.py#L95
https://github.com/Cralence/SILT/blob/5aeccb542320a28ad9db0017930e35108f493b91/utils.py#L96

===================================
https://github.com/qcraftai/gedepth
===================================

Found 2 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
https://github.com/qcraftai/gedepth/blob/e782d65aa9615a5bdf2d844bc7d0770c11710ae5/depth/datasets/builder.py#L138
https://github.com/qcraftai/gedepth/blob/e782d65aa9615a5bdf2d844bc7d0770c11710ae5/depth/datasets/builder.py#L151

=====================================
https://github.com/ArcticHare105/SPIN
=====================================

Found 6 times
DataLoader(dataset=div2k, num_workers=args.threads, batch_size=args.batch_size, shuffle=True, pin_memory=True, drop_last=True)
DataLoader(dataset=set5, batch_size=1, shuffle=False)
DataLoader(dataset=set14, batch_size=1, shuffle=False)
DataLoader(dataset=b100, batch_size=1, shuffle=False)
DataLoader(dataset=u100, batch_size=1, shuffle=False)
DataLoader(dataset=manga, batch_size=1, shuffle=False)
https://github.com/ArcticHare105/SPIN/blob/dce4b338fd13ff36380f4eb156064f6cb2c31aca/datas/utils.py#L19
https://github.com/ArcticHare105/SPIN/blob/dce4b338fd13ff36380f4eb156064f6cb2c31aca/datas/utils.py#L26
https://github.com/ArcticHare105/SPIN/blob/dce4b338fd13ff36380f4eb156064f6cb2c31aca/datas/utils.py#L31
https://github.com/ArcticHare105/SPIN/blob/dce4b338fd13ff36380f4eb156064f6cb2c31aca/datas/utils.py#L36
https://github.com/ArcticHare105/SPIN/blob/dce4b338fd13ff36380f4eb156064f6cb2c31aca/datas/utils.py#L41
https://github.com/ArcticHare105/SPIN/blob/dce4b338fd13ff36380f4eb156064f6cb2c31aca/datas/utils.py#L46

======================================
https://github.com/haesoochung/LAN-HDR
======================================

Found 3 times
torch.utils.data.DataLoader(train_set, 
        batch_sampler=batch_sampler_train, num_workers=args.num_workers)
torch.utils.data.DataLoader(val_set, 
        sampler=sampler_val, batch_size=args.batch_size//2,
        num_workers=args.num_workers, shuffle=False)
torch.utils.data.DataLoader(test_set, batch_size=1,
        num_workers=args.num_workers, pin_memory=use_gpu, shuffle=False)
https://github.com/haesoochung/LAN-HDR/blob/b63131ff7c15776e7ce95201c9851bb796f4ce67/datasets/__init__.py#L30
https://github.com/haesoochung/LAN-HDR/blob/b63131ff7c15776e7ce95201c9851bb796f4ce67/datasets/__init__.py#L32
https://github.com/haesoochung/LAN-HDR/blob/b63131ff7c15776e7ce95201c9851bb796f4ce67/datasets/__init__.py#L47

=======================================
https://github.com/HVision-NKU/SRFormer
=======================================

Found 4 times
torch.utils.data.DataLoader(**dataloader_args)
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        sampler=None,
        drop_last=False)
DataLoader(
        dataset=dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, sampler=None, drop_last=False)
torch.utils.data.DataLoader(dataset=dataset, batch_size=1, shuffle=False, num_workers=0)
https://github.com/HVision-NKU/SRFormer/blob/0562f7b74b454fe830cfea9551f9ecbf5264f96e/basicsr/data/__init__.py#L94
https://github.com/HVision-NKU/SRFormer/blob/0562f7b74b454fe830cfea9551f9ecbf5264f96e/scripts/metrics/calculate_fid_folder.py#L37
https://github.com/HVision-NKU/SRFormer/blob/0562f7b74b454fe830cfea9551f9ecbf5264f96e/scripts/metrics/calculate_fid_stats_from_datasets.py#L36
https://github.com/HVision-NKU/SRFormer/blob/0562f7b74b454fe830cfea9551f9ecbf5264f96e/tests/test_models/test_sr_model.py#L137

========================================
https://github.com/NeonLeexiang/DLGSANet
========================================

Found 4 times
torch.utils.data.DataLoader(**dataloader_args)
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        sampler=None,
        drop_last=False)
DataLoader(
        dataset=dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, sampler=None, drop_last=False)
torch.utils.data.DataLoader(dataset=dataset, batch_size=1, shuffle=False, num_workers=0)
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/basicsr/data/__init__.py#L94
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/scripts/metrics/calculate_fid_folder.py#L37
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/scripts/metrics/calculate_fid_stats_from_datasets.py#L36
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/tests/test_models/test_sr_model.py#L137

====================================================
https://github.com/FVL2020/ICCV-2023-MB-TaylorFormer
====================================================

Found 1 times
torch.utils.data.DataLoader(**dataloader_args)
https://github.com/FVL2020/ICCV-2023-MB-TaylorFormer/blob/e14e5dca14c17570c5e967d18163a24d6e19bb47/basicsr/data/__init__.py#L119

========================================
https://github.com/ImJongminPark/COMPASS
========================================

Found 2 times
DataLoader(
        train_dataset,
        batch_size=cfg['batchSize'],
        num_workers=cfg['nWorkers'],
        sampler=multi_gpu_sampler_train,
        shuffle=(multi_gpu_sampler_train is None),
        drop_last=True
    )
DataLoader(
        test_dataset,
        batch_size=1,
        num_workers=cfg['nWorkers'],
        shuffle=False,
        pin_memory=(device == "cuda"),
    )
https://github.com/ImJongminPark/COMPASS/blob/d7e0f7d2764026b55824e21147d0471467045b88/train.py#L319
https://github.com/ImJongminPark/COMPASS/blob/d7e0f7d2764026b55824e21147d0471467045b88/train.py#L328

===================================
https://github.com/Zongwei97/SCTNet
===================================

Found 3 times
DataLoader(dataset=img_dataset, batch_size=1, num_workers=1, shuffle=False)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers,
                              pin_memory=True)
DataLoader(val_dataset, batch_size=args.test_batch_size, shuffle=False, num_workers=args.num_workers,
                            pin_memory=True)
https://github.com/Zongwei97/SCTNet/blob/56576682f01cafef468312bc46cff16286111dda/train_sct.py#L130
https://github.com/Zongwei97/SCTNet/blob/56576682f01cafef468312bc46cff16286111dda/train_sct.py#L247
https://github.com/Zongwei97/SCTNet/blob/56576682f01cafef468312bc46cff16286111dda/train_sct.py#L250

=====================================================
https://github.com/uzh-rpg/event_representation_study
=====================================================

Found 5 times
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                sampler=sampler,
                num_workers=num_workers,
                pin_memory=pin_memory,
                drop_last=drop_last,
                collate_fn=collate_events,
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                num_workers=num_workers,
                pin_memory=pin_memory,
                drop_last=drop_last,
                collate_fn=collate_events_test,
            )
DataLoader(
                self.dataset["train"],
                collate_fn=dict_collate_fn,
                batch_size=self.cfg.batch_size,
                shuffle=True,
                num_workers=self.cfg.num_workers,
                drop_last=False,
                pin_memory=self.cfg.pin_memory,
            )
DataLoader(
                self.dataset["val"],
                collate_fn=dict_collate_fn,
                batch_size=self.cfg.batch_size,
                shuffle=True,
                num_workers=self.cfg.num_workers,
                drop_last=False,
                pin_memory=self.cfg.pin_memory,
            )
DataLoader(
                self.dataset["test"],
                collate_fn=dict_collate_fn,
                batch_size=self.cfg.batch_size,
                shuffle=False,
                num_workers=self.cfg.num_workers,
                drop_last=False,
                pin_memory=self.cfg.pin_memory,
            )
https://github.com/uzh-rpg/event_representation_study/blob/c0422e335a7a5b5a64ac47233547d940f0e16e47/ev-YOLOv6/yolov6/data/gen4/data_loader.py#L20
https://github.com/uzh-rpg/event_representation_study/blob/c0422e335a7a5b5a64ac47233547d940f0e16e47/ev-YOLOv6/yolov6/data/gen4/data_loader.py#L30
https://github.com/uzh-rpg/event_representation_study/blob/c0422e335a7a5b5a64ac47233547d940f0e16e47/n_imagenet/real_cnn_model/data/data_container.py#L52
https://github.com/uzh-rpg/event_representation_study/blob/c0422e335a7a5b5a64ac47233547d940f0e16e47/n_imagenet/real_cnn_model/data/data_container.py#L62
https://github.com/uzh-rpg/event_representation_study/blob/c0422e335a7a5b5a64ac47233547d940f0e16e47/n_imagenet/real_cnn_model/data/data_container.py#L76

================================
https://github.com/Ysz2022/NeRCo
================================

Found 1 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.num_threads))
https://github.com/Ysz2022/NeRCo/blob/63190c82af2b07d7e9e9b6a2452a1885736dc250/data/__init__.py#L75

==============================
https://github.com/MyuLi/PADUT
==============================

Found 1 times
tud.DataLoader(Dataset, num_workers=8, batch_size=opt.batch_size, shuffle=True)
https://github.com/MyuLi/PADUT/blob/6610dbde551af3cb2c5f05fb92fd7493842eb45d/real/train_code/train.py#L56

================================
https://github.com/c-yn/FocalNet
================================

Found 9 times
DataLoader(
        DeblurDataset(image_dir, transform=transform),
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers,
        pin_memory=True
    )
DataLoader(
        DeblurDataset(image_dir, is_test=True),
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers,
        pin_memory=True
    )
DataLoader(
        DeblurDataset(os.path.join(path, 'test')),
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers
    )
DataLoader(
        DeblurDataset(image_dir, ps=256),
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers,
        pin_memory=True
    )
DataLoader(
        DeblurDataset(image_dir, is_test=True),
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers,
        pin_memory=True
    )
DataLoader(
        DeblurDataset(os.path.join(path, 'test'), is_valid=True),
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers
    )
DataLoader(
        DeblurDataset(image_dir, transform=transform),
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers,
        pin_memory=True
    )
DataLoader(
        DeblurDataset(image_dir, is_test=True),
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers,
        pin_memory=True
    )
DataLoader(
        DeblurDataset(os.path.join(path, 'test2000')),
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers
    )
https://github.com/c-yn/FocalNet/blob/b0460a87e743458278adfcb3f94956fc8cf05c6a/Dehazing/ITS/data/data_load.py#L22
https://github.com/c-yn/FocalNet/blob/b0460a87e743458278adfcb3f94956fc8cf05c6a/Dehazing/ITS/data/data_load.py#L34
https://github.com/c-yn/FocalNet/blob/b0460a87e743458278adfcb3f94956fc8cf05c6a/Dehazing/ITS/data/data_load.py#L46
https://github.com/c-yn/FocalNet/blob/b0460a87e743458278adfcb3f94956fc8cf05c6a/Dehazing/OTS/data/data_load.py#L13
https://github.com/c-yn/FocalNet/blob/b0460a87e743458278adfcb3f94956fc8cf05c6a/Dehazing/OTS/data/data_load.py#L25
https://github.com/c-yn/FocalNet/blob/b0460a87e743458278adfcb3f94956fc8cf05c6a/Dehazing/OTS/data/data_load.py#L37
https://github.com/c-yn/FocalNet/blob/b0460a87e743458278adfcb3f94956fc8cf05c6a/Desnowing/data/data_load.py#L22
https://github.com/c-yn/FocalNet/blob/b0460a87e743458278adfcb3f94956fc8cf05c6a/Desnowing/data/data_load.py#L34
https://github.com/c-yn/FocalNet/blob/b0460a87e743458278adfcb3f94956fc8cf05c6a/Desnowing/data/data_load.py#L46

=====================================
https://github.com/liuxiaoyu1104/UNIC
=====================================

Found 2 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
https://github.com/liuxiaoyu1104/UNIC/blob/d7ffa6147322d28d2e7acff18bea03bca5c9131b/main.py#L203
https://github.com/liuxiaoyu1104/UNIC/blob/d7ffa6147322d28d2e7acff18bea03bca5c9131b/main.py#L205

===========================================
https://github.com/tsingqguo/inpaint4shadow
===========================================

Found 8 times
DataLoader(
            dataset=self.train_dataset,
            batch_size=self.config.BATCH_SIZE,
            num_workers=0,
            drop_last=True,
            shuffle=True
        )
DataLoader(
            dataset=self.val_dataset,
            batch_size=1,
            drop_last=True,
            shuffle=False
        )
DataLoader(
            dataset=self.test_dataset,
            batch_size=1,
        )
DataLoader(
                dataset=self,
                batch_size=batch_size,
                drop_last=True
            )
DataLoader(
                dataset=self,
                batch_size=batch_size,
                drop_last=True
            )
DataLoader(
            dataset=self.train_dataset,
            batch_size=self.config.BATCH_SIZE,
            num_workers=16,
            drop_last=True,
            shuffle=True
        )
DataLoader(
            dataset=self.val_dataset,
            batch_size=1,
            num_workers=8,
            drop_last=True,
            shuffle=False
        )
DataLoader(
            dataset=self.test_dataset,
            batch_size=1,
        )
https://github.com/tsingqguo/inpaint4shadow/blob/c9ab2758f2b9d8b492af84dbea8883a031fa8a4c/Inpainting_pretraining/src/Inpainting.py#L60
https://github.com/tsingqguo/inpaint4shadow/blob/c9ab2758f2b9d8b492af84dbea8883a031fa8a4c/Inpainting_pretraining/src/Inpainting.py#L145
https://github.com/tsingqguo/inpaint4shadow/blob/c9ab2758f2b9d8b492af84dbea8883a031fa8a4c/Inpainting_pretraining/src/Inpainting.py#L200
https://github.com/tsingqguo/inpaint4shadow/blob/c9ab2758f2b9d8b492af84dbea8883a031fa8a4c/Inpainting_pretraining/src/dataset.py#L129
https://github.com/tsingqguo/inpaint4shadow/blob/c9ab2758f2b9d8b492af84dbea8883a031fa8a4c/shadow_removal/src/dataset.py#L127
https://github.com/tsingqguo/inpaint4shadow/blob/c9ab2758f2b9d8b492af84dbea8883a031fa8a4c/shadow_removal/src/lifsr.py#L43
https://github.com/tsingqguo/inpaint4shadow/blob/c9ab2758f2b9d8b492af84dbea8883a031fa8a4c/shadow_removal/src/lifsr.py#L130
https://github.com/tsingqguo/inpaint4shadow/blob/c9ab2758f2b9d8b492af84dbea8883a031fa8a4c/shadow_removal/src/lifsr.py#L184

=====================================
https://github.com/shangwei5/SelfDRSC
=====================================

Found 15 times
DataLoader(train_set,
                                          batch_size=dataset_opt['dataloader_batch_size']//opt['num_gpu'],
                                          shuffle=False,
                                          num_workers=dataset_opt['dataloader_num_workers']//opt['num_gpu'],
                                          drop_last=True,
                                          pin_memory=True,
                                          sampler=train_sampler)
DataLoader(train_set,
                                          batch_size=dataset_opt['dataloader_batch_size'],
                                          shuffle=dataset_opt['dataloader_shuffle'],
                                          num_workers=dataset_opt['dataloader_num_workers'],
                                          drop_last=True,
                                          pin_memory=True)
DataLoader(test_set, batch_size=1,
                                     shuffle=False, num_workers=1,
                                     drop_last=False, pin_memory=True)
DataLoader(train_set,
                                          batch_size=dataset_opt['dataloader_batch_size']//opt['num_gpu'],
                                          shuffle=False,
                                          num_workers=dataset_opt['dataloader_num_workers']//opt['num_gpu'],
                                          drop_last=True,
                                          pin_memory=True,
                                          sampler=train_sampler)
DataLoader(train_set,
                                          batch_size=dataset_opt['dataloader_batch_size'],
                                          shuffle=dataset_opt['dataloader_shuffle'],
                                          num_workers=dataset_opt['dataloader_num_workers'],
                                          drop_last=True,
                                          pin_memory=True)
DataLoader(test_set, batch_size=1,
                                     shuffle=False, num_workers=1,
                                     drop_last=False, pin_memory=True)
DataLoader(train_set,
                                          batch_size=dataset_opt['dataloader_batch_size']//opt['num_gpu'],
                                          shuffle=False,
                                          num_workers=dataset_opt['dataloader_num_workers']//opt['num_gpu'],
                                          drop_last=True,
                                          pin_memory=True,
                                          sampler=train_sampler)
DataLoader(train_set,
                                          batch_size=dataset_opt['dataloader_batch_size'],
                                          shuffle=dataset_opt['dataloader_shuffle'],
                                          num_workers=dataset_opt['dataloader_num_workers'],
                                          drop_last=True,
                                          pin_memory=True)
DataLoader(test_set, batch_size=1,
                                     shuffle=False, num_workers=1,
                                     drop_last=False, pin_memory=True)
DataLoader(train_set,
                                          batch_size=dataset_opt['dataloader_batch_size']//opt['num_gpu'],
                                          shuffle=False,
                                          num_workers=dataset_opt['dataloader_num_workers']//opt['num_gpu'],
                                          drop_last=True,
                                          pin_memory=True,
                                          sampler=train_sampler)
DataLoader(train_set,
                                          batch_size=dataset_opt['dataloader_batch_size'],
                                          shuffle=dataset_opt['dataloader_shuffle'],
                                          num_workers=dataset_opt['dataloader_num_workers'],
                                          drop_last=True,
                                          pin_memory=True)
DataLoader(test_set, batch_size=1,
                                     shuffle=False, num_workers=1,
                                     drop_last=False, pin_memory=True)
DataLoader(train_set,
                                          batch_size=dataset_opt['dataloader_batch_size']//opt['num_gpu'],
                                          shuffle=False,
                                          num_workers=dataset_opt['dataloader_num_workers']//opt['num_gpu'],
                                          drop_last=True,
                                          pin_memory=True,
                                          sampler=train_sampler)
DataLoader(train_set,
                                          batch_size=dataset_opt['dataloader_batch_size'],
                                          shuffle=dataset_opt['dataloader_shuffle'],
                                          num_workers=dataset_opt['dataloader_num_workers'],
                                          drop_last=True,
                                          pin_memory=True)
DataLoader(test_set, batch_size=1,
                                     shuffle=False, num_workers=1,
                                     drop_last=False, pin_memory=True)
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_test_srsc_rsflow_multi.py#L121
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_test_srsc_rsflow_multi.py#L129
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_test_srsc_rsflow_multi.py#L144
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_test_srsc_rsflow_multi_distillv2.py#L122
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_test_srsc_rsflow_multi_distillv2.py#L130
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_test_srsc_rsflow_multi_distillv2.py#L145
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_test_srsc_rsflow_multi_distillv2_real.py#L132
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_test_srsc_rsflow_multi_distillv2_real.py#L140
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_test_srsc_rsflow_multi_distillv2_real.py#L155
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_train_srsc_rsflow_multi.py#L122
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_train_srsc_rsflow_multi.py#L130
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_train_srsc_rsflow_multi.py#L145
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_train_srsc_rsflow_multi_distillv2.py#L122
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_train_srsc_rsflow_multi_distillv2.py#L130
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/main_train_srsc_rsflow_multi_distillv2.py#L145

===================================
https://github.com/Zj-BinXia/DiffIR
===================================

Found 7 times
torch.utils.data.DataLoader(dataset=dataset, batch_size=1, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(dataset=dataset, batch_size=1, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(dataset=dataset, batch_size=1, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(dataset=dataset, batch_size=1, shuffle=False, num_workers=0)
DataLoader(self.dataset, shuffle=False, batch_size=batch_size)
DataLoader(dataset, **dataloader_kwargs)
DataLoader(dataset, **dataloader_kwargs)
https://github.com/Zj-BinXia/DiffIR/blob/6af96e0b8cd3907feb0dd812de24847ef1728149/DiffIR-RealSR/tests/test_model.py#L58
https://github.com/Zj-BinXia/DiffIR/blob/6af96e0b8cd3907feb0dd812de24847ef1728149/DiffIR-RealSR/tests/test_model.py#L114
https://github.com/Zj-BinXia/DiffIR/blob/6af96e0b8cd3907feb0dd812de24847ef1728149/DiffIR-demotionblur/tests/test_model.py#L58
https://github.com/Zj-BinXia/DiffIR/blob/6af96e0b8cd3907feb0dd812de24847ef1728149/DiffIR-demotionblur/tests/test_model.py#L114
https://github.com/Zj-BinXia/DiffIR/blob/6af96e0b8cd3907feb0dd812de24847ef1728149/DiffIR-inpainting/saicinpainting/evaluation/evaluator.py#L36
https://github.com/Zj-BinXia/DiffIR/blob/6af96e0b8cd3907feb0dd812de24847ef1728149/DiffIR-inpainting/saicinpainting/training/data/datasets.py#L245
https://github.com/Zj-BinXia/DiffIR/blob/6af96e0b8cd3907feb0dd812de24847ef1728149/DiffIR-inpainting/saicinpainting/training/data/datasets.py#L288

======================================================
https://github.com/Ephemeral182/UDR-S2Former_deraining
======================================================

Found 8 times
DataLoader(dataset, batch_size=batch_size, shuffle=False)
DataLoader(dataset=RainDS_Dataset(opt.dataset_raindrop_syn,train=False,dataset_type='rsrd'),batch_size=1,shuffle=False,num_workers=4)
DataLoader(dataset=RainDS_Dataset(opt.dataset_raindrop_real,train=False,dataset_type='rsrd'),batch_size=1,shuffle=False,num_workers=4)
DataLoader(dataset=Rain200_Dataset(opt.dataset_rain200h,train=False),batch_size=1,shuffle=False,num_workers=4)
DataLoader(dataset=Rain200_Dataset(opt.dataset_rain200l,train=False),batch_size=1,shuffle=False,num_workers=4)
DataLoader(dataset=AGAN_Dataset(opt.dataset_agan,train=False),batch_size=1,shuffle=False,num_workers=4)
torch.utils.data.DataLoader(train_set, batch_size=self.train_batchsize, shuffle=True, num_workers=self.num_workers)
torch.utils.data.DataLoader(val_set, batch_size=self.val_batchsize, shuffle=False, num_workers=self.num_workers)
https://github.com/Ephemeral182/UDR-S2Former_deraining/blob/82101949f7549994eaf8aac2689b5c8fc5e8e080/demo.py#L69
https://github.com/Ephemeral182/UDR-S2Former_deraining/blob/82101949f7549994eaf8aac2689b5c8fc5e8e080/test.py#L38
https://github.com/Ephemeral182/UDR-S2Former_deraining/blob/82101949f7549994eaf8aac2689b5c8fc5e8e080/test.py#L40
https://github.com/Ephemeral182/UDR-S2Former_deraining/blob/82101949f7549994eaf8aac2689b5c8fc5e8e080/test.py#L42
https://github.com/Ephemeral182/UDR-S2Former_deraining/blob/82101949f7549994eaf8aac2689b5c8fc5e8e080/test.py#L44
https://github.com/Ephemeral182/UDR-S2Former_deraining/blob/82101949f7549994eaf8aac2689b5c8fc5e8e080/test.py#L46
https://github.com/Ephemeral182/UDR-S2Former_deraining/blob/82101949f7549994eaf8aac2689b5c8fc5e8e080/train.py#L199
https://github.com/Ephemeral182/UDR-S2Former_deraining/blob/82101949f7549994eaf8aac2689b5c8fc5e8e080/train.py#L212

================================
https://github.com/wdmwhh/MRefSR
================================

Found 2 times
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=shuffle,
            num_workers=num_workers,
            sampler=sampler,
            drop_last=True,
            pin_memory=False)
torch.utils.data.DataLoader(
            dataset,
            batch_size=1,
            shuffle=False,
            num_workers=1,
            pin_memory=False)
https://github.com/wdmwhh/MRefSR/blob/e28a47baa0553dc51db94b2b28c7bc0e25e10204/mmsr/data/__init__.py#L79
https://github.com/wdmwhh/MRefSR/blob/e28a47baa0553dc51db94b2b28c7bc0e25e10204/mmsr/data/__init__.py#L88

===============================
https://github.com/zkawfanx/RLP
===============================

Found 2 times
DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, drop_last=False, pin_memory=False)
DataLoader(dataset=train_dataset, batch_size=opt.batch_size, shuffle=True, 
                          num_workers=opt.train_workers, pin_memory=False, drop_last=False)
https://github.com/zkawfanx/RLP/blob/d9de654eb415ff0ff94365e3004208d2f33a9bf8/test.py#L56
https://github.com/zkawfanx/RLP/blob/d9de654eb415ff0ff94365e3004208d2f33a9bf8/train.py#L122

====================================
https://github.com/researchmm/VQD-SR
====================================

Found 6 times
DataLoader(
                dataset=val_dataset, batch_size=batch_size, num_workers=num_workers, drop_last=True, shuffle=False)
DataLoader(
                dataset=val_dataset, batch_size=batch_size, num_workers=num_workers, drop_last=True, shuffle=False)
DataLoader(
                dataset=val_dataset, batch_size=batch_size, num_workers=num_workers, drop_last=True, shuffle=False)
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=True, collate_fn=custom_collate)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers, collate_fn=custom_collate)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, collate_fn=custom_collate)
https://github.com/researchmm/VQD-SR/blob/f02a6ce9c510600aa90fc8ee6569fae9fd45f347/scripts/metrics/MANIQA/inference_MANIQA.py#L57
https://github.com/researchmm/VQD-SR/blob/f02a6ce9c510600aa90fc8ee6569fae9fd45f347/scripts/metrics/MANIQA/inference_fix_crop.py#L60
https://github.com/researchmm/VQD-SR/blob/f02a6ce9c510600aa90fc8ee6569fae9fd45f347/scripts/metrics/MANIQA/inference_fix_multi_crop.py#L59
https://github.com/researchmm/VQD-SR/blob/f02a6ce9c510600aa90fc8ee6569fae9fd45f347/taming-transformers/main.py#L165
https://github.com/researchmm/VQD-SR/blob/f02a6ce9c510600aa90fc8ee6569fae9fd45f347/taming-transformers/main.py#L169
https://github.com/researchmm/VQD-SR/blob/f02a6ce9c510600aa90fc8ee6569fae9fd45f347/taming-transformers/main.py#L174

==================================
https://github.com/sunny2109/SAFMN
==================================

Found 3 times
torch.utils.data.DataLoader(**dataloader_args)
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        sampler=None,
        drop_last=False)
DataLoader(
        dataset=dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, sampler=None, drop_last=False)
https://github.com/sunny2109/SAFMN/blob/daddab7b0a8327b39ebaf7a1761daf9ffe2f0362/basicsr/data/__init__.py#L94
https://github.com/sunny2109/SAFMN/blob/daddab7b0a8327b39ebaf7a1761daf9ffe2f0362/scripts/metrics/calculate_fid_folder.py#L37
https://github.com/sunny2109/SAFMN/blob/daddab7b0a8327b39ebaf7a1761daf9ffe2f0362/scripts/metrics/calculate_fid_stats_from_datasets.py#L36

========================================
https://github.com/scott-yjyang/ViWS-Net
========================================

Found 2 times
DataLoader(dataset=test_set, num_workers=opt.threads, batch_size=opt.testBatchSize, shuffle=False)
DataLoader(dataset=train_set, num_workers=opt.threads, batch_size=opt.batchSize, shuffle=True)
https://github.com/scott-yjyang/ViWS-Net/blob/ac715ea5b4fd4b2c115ae2c027c0b2c695f589f1/eval_derain.py#L60
https://github.com/scott-yjyang/ViWS-Net/blob/ac715ea5b4fd4b2c115ae2c027c0b2c695f589f1/main_multi.py#L239

=================================
https://github.com/yjsunnn/FBANet
=================================

Found 4 times
DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False, drop_last=False)
DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False, drop_last=False)
DataLoader(train_dataset, batch_size=opt.batch_size, shuffle=True, num_workers=opt.train_workers,
                          drop_last=True)
DataLoader(val_dataset, batch_size=opt.batch_size, shuffle=False, num_workers=opt.eval_workers,
                        drop_last=False)
https://github.com/yjsunnn/FBANet/blob/5248888b88f84464195afcddd34f0e558d9fe396/test.py#L60
https://github.com/yjsunnn/FBANet/blob/5248888b88f84464195afcddd34f0e558d9fe396/test_in_any_resolution.py#L63
https://github.com/yjsunnn/FBANet/blob/5248888b88f84464195afcddd34f0e558d9fe396/train.py#L133
https://github.com/yjsunnn/FBANet/blob/5248888b88f84464195afcddd34f0e558d9fe396/train.py#L135

==========================================
https://github.com/Luciennnnnnn/DualFormer
==========================================

Found 3 times
torch.utils.data.DataLoader(**dataloader_args)
DataLoader(
        test_set,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=num_workers,
        drop_last=False
    )
DataLoader(dataset, batch_size=args.batch_size, shuffle=False)
https://github.com/Luciennnnnnn/DualFormer/blob/54d911a31a92f0d8c5afec9e0b0a6db08f1d8370/basicsr/data/__init__.py#L96
https://github.com/Luciennnnnnn/DualFormer/blob/54d911a31a92f0d8c5afec9e0b0a6db08f1d8370/basicsr/data/test_set.py#L239
https://github.com/Luciennnnnnn/DualFormer/blob/54d911a31a92f0d8c5afec9e0b0a6db08f1d8370/scripts/robustness_analysis_under_frequency_perturbation.py#L58

=============================
https://github.com/Srameo/LED
=============================

Found 1 times
torch.utils.data.DataLoader(**dataloader_args)
https://github.com/Srameo/LED/blob/75f1081c77d8addeff11d0360da1746216d45499/led/data/__init__.py#L96

=====================================================
https://github.com/painfulloop/Fingerprinting_IR_DNNs
=====================================================

Found 2 times
torch.utils.data.DataLoader(train_set, batch_size=bs, shuffle=True, pin_memory=True, sampler=None)
torch.utils.data.DataLoader(**dataloader_args)
https://github.com/painfulloop/Fingerprinting_IR_DNNs/blob/79d5b1b1642573aed5b3bfee39b2ee8c0a0f1354/finetune.py#L73
https://github.com/painfulloop/Fingerprinting_IR_DNNs/blob/79d5b1b1642573aed5b3bfee39b2ee8c0a0f1354/ModelZoo/basicsr/data/__init__.py#L119

======================================
https://github.com/lvsn/beyondthepixel
======================================

Found 5 times
torch.utils.data.DataLoader(train_dataset, batch_size=opt.batch_size, num_workers=1, shuffle=True)
torch.utils.data.DataLoader(val_dataset, batch_size=opt.batch_size, num_workers=1, shuffle=False)
torch.utils.data.DataLoader(test_dataset, batch_size=1, num_workers=1, shuffle=False)
torch.utils.data.DataLoader(train_dataset, batch_size=opt.batch_size, num_workers=10, shuffle=True)
torch.utils.data.DataLoader(val_dataset, batch_size=opt.batch_size, num_workers=10, shuffle=False)
https://github.com/lvsn/beyondthepixel/blob/0527b2c59c2efc89af84601b6081907c8c7777d1/Learning Tasks/fine_tune.py#L28
https://github.com/lvsn/beyondthepixel/blob/0527b2c59c2efc89af84601b6081907c8c7777d1/Learning Tasks/fine_tune.py#L30
https://github.com/lvsn/beyondthepixel/blob/0527b2c59c2efc89af84601b6081907c8c7777d1/Learning Tasks/test.py#L30
https://github.com/lvsn/beyondthepixel/blob/0527b2c59c2efc89af84601b6081907c8c7777d1/Learning Tasks/train.py#L25
https://github.com/lvsn/beyondthepixel/blob/0527b2c59c2efc89af84601b6081907c8c7777d1/Learning Tasks/train.py#L27

=======================================
https://github.com/ZhexinLiang/CLIP-LIT
=======================================

Found 5 times
torch.utils.data.DataLoader(train_dataset, batch_size=config.train_batch_size, shuffle=True, num_workers=config.num_workers, pin_memory=True)
torch.utils.data.DataLoader(prompt_train_dataset, batch_size=config.prompt_batch_size, shuffle=True, num_workers=config.num_workers, pin_memory=True)
torch.utils.data.DataLoader(prompt_train_dataset_1, batch_size=config.prompt_batch_size, shuffle=True, num_workers=config.num_workers, pin_memory=True)
torch.utils.data.DataLoader(prompt_train_dataset, batch_size=config.prompt_batch_size, shuffle=True, num_workers=config.num_workers, pin_memory=True)
torch.utils.data.DataLoader(prompt_train_dataset, batch_size=config.prompt_batch_size, shuffle=True, num_workers=config.num_workers, pin_memory=True)
https://github.com/ZhexinLiang/CLIP-LIT/blob/25ed5be6086cd34d2bc1020c6088ac3f9d3a9522/train.py#L165
https://github.com/ZhexinLiang/CLIP-LIT/blob/25ed5be6086cd34d2bc1020c6088ac3f9d3a9522/train.py#L168
https://github.com/ZhexinLiang/CLIP-LIT/blob/25ed5be6086cd34d2bc1020c6088ac3f9d3a9522/train.py#L170
https://github.com/ZhexinLiang/CLIP-LIT/blob/25ed5be6086cd34d2bc1020c6088ac3f9d3a9522/train.py#L363
https://github.com/ZhexinLiang/CLIP-LIT/blob/25ed5be6086cd34d2bc1020c6088ac3f9d3a9522/train.py#L368

===============================================
https://github.com/Red-Fairy/ZeroShotDayNightDA
===============================================

Found 37 times
torch.utils.data.DataLoader(val_loader,
					  batch_size=args.batch_size,
					  shuffle=True,
					  num_workers=args.workers,
					  pin_memory=True)
torch.utils.data.DataLoader(train,
		batch_size=batch_size, shuffle=True,
		num_workers=num_workers, pin_memory=False)
torch.utils.data.DataLoader(val,
		batch_size=2*torch.cuda.device_count(), shuffle=False,
		num_workers=num_workers, pin_memory=False)
torch.utils.data.DataLoader(val_loader,
					  batch_size=args.batch_size,
					  shuffle=False,
					  num_workers=args.workers,
					  pin_memory=True)
torch.utils.data.DataLoader(val_loader,
					  batch_size=args.batch_size,
					  shuffle=False,
					  num_workers=args.workers,
					  pin_memory=True)
torch.utils.data.DataLoader(val_loader,
					  batch_size=args.batch_size,
					  shuffle=True,
					  num_workers=args.workers,
					  pin_memory=True)
torch.utils.data.DataLoader(val_loader,
					  batch_size=args.batch_size,
					  shuffle=True,
					  num_workers=args.workers,
					  pin_memory=True)
torch.utils.data.DataLoader(val_loader, batch_size=args.batch_size, shuffle=True, 
											num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(val_loader,
					  batch_size=args.batch_size,
					  shuffle=True,
					  num_workers=args.workers,
					  pin_memory=True)
torch.utils.data.DataLoader(test_night_dataset,
			num_workers=16,
			batch_size=args.batch_size,
			shuffle=False)
torch.utils.data.DataLoader(test_day_dataset,
			num_workers=16,
			batch_size=args.batch_size,
			shuffle=False)
torch.utils.data.DataLoader(AlignedDataset(
		rootA, rootA, maxImgNum = 1e5, transform=transforms_train), batch_size=args.batch_size, shuffle=True, pin_memory=True, drop_last=True,num_workers=8)
torch.utils.data.DataLoader(test_night_dataset,
			num_workers=16,
			batch_size=args.batch_size,
			shuffle=False)
torch.utils.data.DataLoader(test_day_dataset,
			num_workers=16,
			batch_size=args.batch_size,
			shuffle=False)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(
			train_dataset, batch_size=1, shuffle=False, num_workers=16, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.train_batch_size, shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(valset, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=args.workers)
torch.utils.data.DataLoader(testset_day, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=args.workers)
torch.utils.data.DataLoader(testset_nd, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=args.workers)
torch.utils.data.DataLoader(valset_dz, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=args.workers)
torch.utils.data.DataLoader(testset_dz, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=args.workers)
torch.utils.data.DataLoader(testset_nc, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=args.workers)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=True, pin_memory=True, num_workers=args.workers, drop_last=True)
torch.utils.data.DataLoader(valset, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=args.workers)
torch.utils.data.DataLoader(testset_nd, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=args.workers)
torch.utils.data.DataLoader(testset_dz, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=args.workers)
torch.utils.data.DataLoader(
                ImagesFromList(root='', images=[self.images[i] for i in self.qidxs], imsize=self.imsize, transform=self.transform),
                batch_size=1, shuffle=False, num_workers=8, pin_memory=True
            )
torch.utils.data.DataLoader(
                ImagesFromList(root='', images=[self.images[i] for i in idxs2images], imsize=self.imsize, transform=self.transform),
                batch_size=1, shuffle=False, num_workers=8, pin_memory=True
            )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=True,
        num_workers=args.workers, pin_memory=True, sampler=None,
        drop_last=True, collate_fn=collate_tuples
    )
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True,
            drop_last=True, collate_fn=collate_tuples
        )
torch.utils.data.DataLoader(
		train_dataset, batch_size=args.batch_size, shuffle=True,
		num_workers=args.workers, pin_memory=True, sampler=None,
		drop_last=True, collate_fn=collate_tuples
	)
torch.utils.data.DataLoader(
			val_dataset, batch_size=args.batch_size, shuffle=False,
			num_workers=args.workers, pin_memory=True,
			drop_last=True, collate_fn=collate_tuples
		)
torch.utils.data.DataLoader(
        ImagesFromList(root='', images=images, imsize=image_size, bbxs=bbxs, transform=transform),
        batch_size=1, shuffle=False, num_workers=8, pin_memory=True
    )
torch.utils.data.DataLoader(
        ImagesFromList(root='', images=images, imsize=image_size, bbxs=bbxs, transform=transform),
        batch_size=1, shuffle=False, num_workers=8, pin_memory=True
    )
torch.utils.data.DataLoader(
        ImagesFromList(root='', images=images, imsize=image_size, bbxs=bbxs, transform=transform),
        batch_size=1, shuffle=False, num_workers=8, pin_memory=True
    )
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/action-recognition/evaluate_video.py#L161
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/action-recognition/data/iterator_factory.py#L170
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/action-recognition/data/iterator_factory.py#L174
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/action-recognition/test/comp.py#L152
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/action-recognition/test/comp.py#L177
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/action-recognition/test/evaluate_custom-video.py#L147
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/action-recognition/test/evaluate_enh_video.py#L157
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/action-recognition/test/evaluate_flow.py#L156
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/action-recognition/test/evaluate_video.py#L172
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/classification/test.py#L59
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/classification/test.py#L63
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/classification/train.py#L183
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/classification/train.py#L189
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/classification/train.py#L193
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/darkening/darken_classification.py#L35
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/darkening/darken_segmentation.py#L34
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/darkening/darken_test.py#L83
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/darkening/darken_vpr.py#L89
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/segmentation/eval_test.py#L42
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/segmentation/eval_test.py#L43
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/segmentation/eval_test.py#L44
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/segmentation/eval_test.py#L45
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/segmentation/eval_test.py#L46
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/segmentation/eval_test.py#L47
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/segmentation/train.py#L105
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/segmentation/train.py#L106
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/segmentation/train.py#L107
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/segmentation/train.py#L108
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/visual-place-recognition/cirtorch/datasets/traindataset.py#L197
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/visual-place-recognition/cirtorch/datasets/traindataset.py#L211
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/visual-place-recognition/cirtorch/examples/train.py#L295
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/visual-place-recognition/cirtorch/examples/train.py#L310
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/visual-place-recognition/cirtorch/examples/train_night.py#L292
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/visual-place-recognition/cirtorch/examples/train_night.py#L307
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/visual-place-recognition/cirtorch/networks/imageretrievalnet.py#L292
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/visual-place-recognition/cirtorch/networks/imageretrievalnet.py#L341
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/visual-place-recognition/cirtorch/networks/imageretrievalnet.py#L375

=======================================
https://github.com/JinyuanLiu-CV/SegMiF
=======================================

Found 14 times
DataLoader(
        dataset=test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(train_dataset,
                              batch_size=cfg.train.samples_per_gpu//2,
                              # shuffle=True,
                              num_workers=num_workers,
                              pin_memory=True,
                              drop_last=True)
DataLoader(train_dataset,
                              batch_size=cfg.train.samples_per_gpu//2,
                              #shuffle=True,
                              num_workers=num_workers,
                              pin_memory=True,
                              drop_last=True)
DataLoader(
        dataset=test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/test_fusion.py#L73
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/test_segmentation.py#L72
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/test_segmentation.py#L152
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/train.py#L137
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/train.py#L289
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/val_performance.py#L70
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/val_performance.py#L152
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/val_performance.py#L233
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/val_performance.py#L321
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/val_performance.py#L412
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/val_performance.py#L492
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/val_performance.py#L582
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/val_performance.py#L663
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/val_performance.py#L744

================================
https://github.com/aharley/pips2
================================

Found 9 times
DataLoader(
        dataset_t,
        batch_size=1,
        shuffle=shuffle,
        num_workers=4,
        worker_init_fn=worker_init_fn,
        drop_last=True)
DataLoader(
        dataset_t,
        batch_size=B,
        shuffle=shuffle,
        num_workers=6,
        worker_init_fn=worker_init_fn,
        drop_last=True)
DataLoader(
        dataset_t,
        batch_size=B,
        shuffle=shuffle,
        num_workers=0,
        worker_init_fn=worker_init_fn,
        drop_last=True)
DataLoader(
        dataset_t,
        batch_size=B,
        shuffle=shuffle,
        num_workers=0,
        worker_init_fn=worker_init_fn,
        drop_last=True)
DataLoader(
        dataset_x,
        batch_size=B,
        shuffle=shuffle,
        num_workers=0,
        drop_last=True)
DataLoader(
        dataset_x,
        batch_size=B,
        shuffle=shuffle,
        num_workers=0,
        drop_last=True)
DataLoader(
        dataset_x,
        batch_size=1,
        shuffle=shuffle,
        num_workers=1)
DataLoader(
        dataset_t,
        batch_size=B,
        shuffle=shuffle,
        num_workers=6,
        worker_init_fn=worker_init_fn,
        drop_last=True)
DataLoader(
        dataset,
        batch_size=B,
        shuffle=shuffle,
        num_workers=0)
https://github.com/aharley/pips2/blob/56de5931296d55d0d02d73674c11b575a61ccf15/export_mp4_dataset.py#L150
https://github.com/aharley/pips2/blob/56de5931296d55d0d02d73674c11b575a61ccf15/finetune_highres.py#L370
https://github.com/aharley/pips2/blob/56de5931296d55d0d02d73674c11b575a61ccf15/just_vis_2d.py#L141
https://github.com/aharley/pips2/blob/56de5931296d55d0d02d73674c11b575a61ccf15/just_vis_3d.py#L248
https://github.com/aharley/pips2/blob/56de5931296d55d0d02d73674c11b575a61ccf15/test_on_cro.py#L208
https://github.com/aharley/pips2/blob/56de5931296d55d0d02d73674c11b575a61ccf15/test_on_pod.py#L206
https://github.com/aharley/pips2/blob/56de5931296d55d0d02d73674c11b575a61ccf15/test_on_tap.py#L183
https://github.com/aharley/pips2/blob/56de5931296d55d0d02d73674c11b575a61ccf15/train.py#L365
https://github.com/aharley/pips2/blob/56de5931296d55d0d02d73674c11b575a61ccf15/datasets/crohddataset.py#L205

======================================
https://github.com/Chohoonhee/Ev-LaFOR
======================================

Found 2 times
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, sampler=sampler,
                                             num_workers=4,
                                             collate_fn=collate_events_proto)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, sampler=sampler,
                                             num_workers=4,
                                             collate_fn=collate_events)
https://github.com/Chohoonhee/Ev-LaFOR/blob/8747a7566679ac5085769361da40721bcdea711a/datasets/loader.py#L67
https://github.com/Chohoonhee/Ev-LaFOR/blob/8747a7566679ac5085769361da40721bcdea711a/datasets/loader.py#L72

======================================
https://github.com/SwinTransformer/AiT
======================================

Found 5 times
DataLoader(
        dataset,
        batch_size=samples_per_gpu,
        sampler=sampler,
        num_workers=workers_per_gpu,
        drop_last=True if is_train else False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(datasets, batch_sampler=batch_sampler, num_workers=8, collate_fn=partial(
            collate_fn_wrapper, collate_fn=collate))
torch.utils.data.DataLoader(
        train_dataset, sampler=train_data_sampler,
        batch_size=opt_params.batch_size // num_tasks,
        num_workers=1,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        val_dataset, sampler=None,
        batch_size=1,
        num_workers=1,
    )
DataLoader(
        train_dataset, opt_params.batch_size // num_tasks, sampler=data_sampler)
https://github.com/SwinTransformer/AiT/blob/3527d503e24d560e52fa2fa0528f678a1f9d0533/ait/code/model/utils.py#L171
https://github.com/SwinTransformer/AiT/blob/3527d503e24d560e52fa2fa0528f678a1f9d0533/ait/code/model/utils.py#L401
https://github.com/SwinTransformer/AiT/blob/3527d503e24d560e52fa2fa0528f678a1f9d0533/vae/train_depth_vqvae_dist.py#L164
https://github.com/SwinTransformer/AiT/blob/3527d503e24d560e52fa2fa0528f678a1f9d0533/vae/train_depth_vqvae_dist.py#L174
https://github.com/SwinTransformer/AiT/blob/3527d503e24d560e52fa2fa0528f678a1f9d0533/vae/train_insseg_vqvae_dist.py#L100

======================================
https://github.com/lihaoxin05/StillMix
======================================

Found 54 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=videos_per_gpu),
        pin_memory=pin_memory,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        drop_last=drop_last,
        **kwargs)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(dataset, batch_size=4, sampler=sampler)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(test_dataset)
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(EvalDataset())
DataLoader(ExampleDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((10, 2)))
DataLoader(
            test_dataset,
            batch_size=2,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=2)
DataLoader(test_dataset, batch_size=2)
DataLoader(test_bigger_dataset, batch_size=2)
DataLoader(test_bigger_dataset, batch_size=2)
DataLoader(test_bigger_dataset, batch_size=2)
DataLoader(test_bigger_dataset, batch_size=2)
DataLoader(test_bigger_dataset, batch_size=2)
DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=num_workers,
                pin_memory=pin_memory,
                worker_init_fn=init_fn,
                **kwargs)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=videos_per_gpu),
        pin_memory=pin_memory,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        drop_last=drop_last,
        **kwargs)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, num_workers=4, shuffle=True)
torch.utils.data.DataLoader(test_data, batch_size=batch_size, num_workers=4, shuffle=False)
torch.utils.data.DataLoader(test_data, batch_size=args.batch_size, num_workers=4, shuffle=False)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, num_workers=8, shuffle=True)
torch.utils.data.DataLoader(test_data, batch_size=batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(test_data, batch_size=args.batch_size, num_workers=4, shuffle=False)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, num_workers=4, shuffle=True)
torch.utils.data.DataLoader(test_data, batch_size=batch_size, num_workers=4, shuffle=False)
torch.utils.data.DataLoader(test_data, batch_size=args.batch_size, num_workers=4, shuffle=False)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, num_workers=8, shuffle=True)
torch.utils.data.DataLoader(test_data, batch_size=batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(test_data, batch_size=args.batch_size, num_workers=4, shuffle=False)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, num_workers=4, shuffle=True)
torch.utils.data.DataLoader(test_data, batch_size=batch_size, num_workers=4, shuffle=False)
torch.utils.data.DataLoader(test_data, batch_size=args.batch_size, num_workers=4, shuffle=False)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, num_workers=8, shuffle=True)
torch.utils.data.DataLoader(test_data, batch_size=batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(test_data, batch_size=args.batch_size, num_workers=4, shuffle=False)
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/mmaction/datasets/builder.py#L111
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_data/test_sampler.py#L26
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_data/test_sampler.py#L35
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_data/test_sampler.py#L44
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_data/test_sampler.py#L59
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_data/test_sampler.py#L69
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_data/test_sampler.py#L79
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_data/test_sampler.py#L89
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_apis_test.py#L63
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_apis_test.py#L82
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L99
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L105
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L111
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L117
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L121
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L123
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L141
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L143
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L160
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L162
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L179
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L197
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L213
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L229
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_eval_hook.py#L252
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_lr.py#L15
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_precise_bn.py#L102
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_precise_bn.py#L114
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_precise_bn.py#L118
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_precise_bn.py#L133
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_precise_bn.py#L143
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_precise_bn.py#L154
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_precise_bn.py#L165
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/Video-Swin-Transformer/tests/test_runtime/test_precise_bn.py#L188
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/mmaction2/mmaction/datasets/builder.py#L121
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/main_network/mmaction2/mmaction/datasets/builder.py#L146
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/resnet50/main_frame.py#L132
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/resnet50/main_frame.py#L133
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/resnet50/main_frame.py#L205
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/resnet50/main_video.py#L126
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/resnet50/main_video.py#L127
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/resnet50/main_video.py#L199
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/slowfast-2d/main_frame.py#L194
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/slowfast-2d/main_frame.py#L195
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/slowfast-2d/main_frame.py#L267
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/slowfast-2d/main_video.py#L186
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/slowfast-2d/main_video.py#L187
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/slowfast-2d/main_video.py#L259
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/swin-t/main_frame.py#L125
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/swin-t/main_frame.py#L126
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/swin-t/main_frame.py#L198
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/swin-t/main_video.py#L118
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/swin-t/main_video.py#L119
https://github.com/lihaoxin05/StillMix/blob/335c8706e291f4b567066cf7f561636c85bf7a73/reference_network/swin-t/main_video.py#L191

====================================
https://github.com/Francis-Rings/ILA
====================================

Found 2 times
DataLoader(
        train_data, sampler=sampler_train,
        batch_size=config.TRAIN.BATCH_SIZE,
        num_workers=16,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=config.TRAIN.BATCH_SIZE),
    )
DataLoader(
        val_data, sampler=sampler_val,
        batch_size=2,
        num_workers=16,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=2),
    )
https://github.com/Francis-Rings/ILA/blob/1a912d933f96ca70ed39e34253df0054991e4134/datasets/build.py#L317
https://github.com/Francis-Rings/ILA/blob/1a912d933f96ca70ed39e34253df0054991e4134/datasets/build.py#L350

=============================================
https://github.com/OpenGVLab/unmasked_teacher
=============================================

Found 9 times
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=False,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
            persistent_workers=True if n_worker > 0 else False,
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
        persistent_workers=True
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False,
            persistent_workers=True
        )
torch.utils.data.DataLoader(
            dataset_test, sampler=sampler_test,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False,
            persistent_workers=True
        )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
        worker_init_fn=utils.seed_worker,
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
        worker_init_fn=utils.seed_worker,
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,  # 8
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False,
            collate_fn=collate_func,
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=collator,
        )
https://github.com/OpenGVLab/unmasked_teacher/blob/61274be443b7f1d74b3a7508aab2238015445cb6/multi_modality/dataset/__init__.py#L249
https://github.com/OpenGVLab/unmasked_teacher/blob/61274be443b7f1d74b3a7508aab2238015445cb6/single_modality/run_class_finetuning.py#L277
https://github.com/OpenGVLab/unmasked_teacher/blob/61274be443b7f1d74b3a7508aab2238015445cb6/single_modality/run_class_finetuning.py#L288
https://github.com/OpenGVLab/unmasked_teacher/blob/61274be443b7f1d74b3a7508aab2238015445cb6/single_modality/run_class_finetuning.py#L300
https://github.com/OpenGVLab/unmasked_teacher/blob/61274be443b7f1d74b3a7508aab2238015445cb6/single_modality/run_mae_pretraining.py#L193
https://github.com/OpenGVLab/unmasked_teacher/blob/61274be443b7f1d74b3a7508aab2238015445cb6/single_modality/run_umt_pretraining.py#L236
https://github.com/OpenGVLab/unmasked_teacher/blob/61274be443b7f1d74b3a7508aab2238015445cb6/single_modality/action_detection/run_class_finetuning.py#L212
https://github.com/OpenGVLab/unmasked_teacher/blob/61274be443b7f1d74b3a7508aab2238015445cb6/single_modality/action_detection/run_class_finetuning.py#L223
https://github.com/OpenGVLab/unmasked_teacher/blob/61274be443b7f1d74b3a7508aab2238015445cb6/single_modality/action_detection/alphaction/dataset/build.py#L168

=================================
https://github.com/BUPT-PRIV/LOAF
=================================

Found 4 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn_rotate, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
https://github.com/BUPT-PRIV/LOAF/blob/a5c435eb013f0729c64824477b62649f8325a5a7/fisheye-eval/main.py#L267
https://github.com/BUPT-PRIV/LOAF/blob/a5c435eb013f0729c64824477b62649f8325a5a7/fisheye-eval/main.py#L269
https://github.com/BUPT-PRIV/LOAF/blob/a5c435eb013f0729c64824477b62649f8325a5a7/fisheye-train/main.py#L268
https://github.com/BUPT-PRIV/LOAF/blob/a5c435eb013f0729c64824477b62649f8325a5a7/fisheye-train/main.py#L270

==========================================================
https://github.com/insysgroup/Adaptive-Calibrator-Ensemble
==========================================================

Found 4 times
torch.utils.data.DataLoader(dataset_test, pin_memory=True, batch_size=32, num_workers=18)
torch.utils.data.DataLoader(dataset_val, pin_memory=True, batch_size=32, num_workers=32)
torch.utils.data.DataLoader(dataset_test, pin_memory=True, batch_size=32, num_workers=32)
torch.utils.data.DataLoader(dataset_test, pin_memory=True, batch_size=32, num_workers=18)
https://github.com/insysgroup/Adaptive-Calibrator-Ensemble/blob/c739d83e175f1bf3eb2963f4330f26d710cfc2ef/test_resnet152_imagenet-v2.py#L33
https://github.com/insysgroup/Adaptive-Calibrator-Ensemble/blob/c739d83e175f1bf3eb2963f4330f26d710cfc2ef/test_resnet152_imagenet-val.py#L78
https://github.com/insysgroup/Adaptive-Calibrator-Ensemble/blob/c739d83e175f1bf3eb2963f4330f26d710cfc2ef/test_resnet152_imagenet-val.py#L79
https://github.com/insysgroup/Adaptive-Calibrator-Ensemble/blob/c739d83e175f1bf3eb2963f4330f26d710cfc2ef/test_timm_model_imagenet-v2.py#L27

================================
https://github.com/kxzxvbk/Fling
================================

Found 6 times
DataLoader(dataset, num_workers=num_workers, collate_fn=lambda x: x)
DataLoader(train_dataset, batch_size=args.learn.batch_size, shuffle=True)
DataLoader(real_train, batch_size=args.learn.batch_size, shuffle=True)
DataLoader(real_test, batch_size=args.learn.batch_size, shuffle=True)
DataLoader(test_dataset, batch_size=args.learn.batch_size, shuffle=True)
DataLoader(test_dataset, batch_size=args.learn.batch_size, shuffle=True)
https://github.com/kxzxvbk/Fling/blob/9fb424130408326827d5d415a4a0002f29c9c474/data/prepare_imagenet.py#L43
https://github.com/kxzxvbk/Fling/blob/9fb424130408326827d5d415a4a0002f29c9c474/fling/component/client/base_client.py#L43
https://github.com/kxzxvbk/Fling/blob/9fb424130408326827d5d415a4a0002f29c9c474/fling/component/client/base_client.py#L59
https://github.com/kxzxvbk/Fling/blob/9fb424130408326827d5d415a4a0002f29c9c474/fling/component/client/base_client.py#L60
https://github.com/kxzxvbk/Fling/blob/9fb424130408326827d5d415a4a0002f29c9c474/fling/component/client/base_client.py#L63
https://github.com/kxzxvbk/Fling/blob/9fb424130408326827d5d415a4a0002f29c9c474/fling/component/server/base_server.py#L16

=======================================
https://github.com/aioz-ai/MultigraphFL
=======================================

Found 8 times
DataLoader(dataset, shuffle=False, batch_size=batch_size, num_workers=num_workers)
DataLoader(dataset, shuffle=True, batch_size=batch_size, num_workers=num_workers)
DataLoader(dataset, shuffle=False, batch_size=batch_size)
DataLoader(dataset, shuffle=True, batch_size=batch_size)
DataLoader(dataset, shuffle=False, batch_size=batch_size)
DataLoader(dataset, shuffle=True, batch_size=batch_size)
DataLoader(dataset, shuffle=False, batch_size=batch_size)
DataLoader(dataset, shuffle=True, batch_size=batch_size)
https://github.com/aioz-ai/MultigraphFL/blob/b667553aa9e6f513468a68ca2f87e1b6886a7a04/loaders/femnist.py#L60
https://github.com/aioz-ai/MultigraphFL/blob/b667553aa9e6f513468a68ca2f87e1b6886a7a04/loaders/femnist.py#L62
https://github.com/aioz-ai/MultigraphFL/blob/b667553aa9e6f513468a68ca2f87e1b6886a7a04/loaders/inaturalist.py#L60
https://github.com/aioz-ai/MultigraphFL/blob/b667553aa9e6f513468a68ca2f87e1b6886a7a04/loaders/inaturalist.py#L62
https://github.com/aioz-ai/MultigraphFL/blob/b667553aa9e6f513468a68ca2f87e1b6886a7a04/loaders/shakespeare.py#L48
https://github.com/aioz-ai/MultigraphFL/blob/b667553aa9e6f513468a68ca2f87e1b6886a7a04/loaders/shakespeare.py#L50
https://github.com/aioz-ai/MultigraphFL/blob/b667553aa9e6f513468a68ca2f87e1b6886a7a04/loaders/synthetic.py#L38
https://github.com/aioz-ai/MultigraphFL/blob/b667553aa9e6f513468a68ca2f87e1b6886a7a04/loaders/synthetic.py#L40

===============================
https://github.com/yfguo91/MPBN
===============================

Found 10 times
DataLoader(train_dataset, batch_size=batch_size, shuffle=False,
                              num_workers=workers, pin_memory=True)
DataLoader(val_dataset, batch_size=batch_size,
                            shuffle=False, num_workers=workers, pin_memory=True)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True,
                              num_workers=workers, pin_memory=True)
DataLoader(val_dataset, batch_size=batch_size,
                            shuffle=False, num_workers=workers, pin_memory=True)
DataLoader(
            dataset, batch_size=config.batch_size, shuffle=False,
            num_workers=config.workers, pin_memory=config.pin_memory, sampler=sampler,
            collate_fn=dali_default_collate)
DataLoader(
            dataset, batch_size=config.batch_size, shuffle=False,
            num_workers=config.workers, pin_memory=True, sampler=sampler)
DataLoader(
            dataset, batch_size=config.batch_size, shuffle=False,
            num_workers=config.workers, pin_memory=config.pin_memory, sampler=sampler,
            collate_fn=dali_default_collate)
DataLoader(
            dataset, batch_size=config.batch_size, shuffle=False,
            num_workers=config.workers, pin_memory=config.pin_memory, sampler=sampler)
DataLoader(self.dataset,
                                         batch_size=self.batch_size,
                                         shuffle=shuffle,
                                         num_workers=num_workers,
                                         sampler=sampler,
                                         batch_sampler=batch_sampler,
                                         timeout=timeout,
                                         collate_fn=self.collate_fn,
                                         drop_last=drop_last,
                                         pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/eval.py#L58
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/eval.py#L61
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/main_train.py#L69
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/main_train.py#L72
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/data/imagenet.py#L90
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/data/imagenet.py#L154
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/data/imagenet.py#L177
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/data/imagenet.py#L219
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/data/nvidia_dali_dataloader.py#L129
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/myutils/misc.py#L21

=========================================================================
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection
=========================================================================

Found 15 times
torch.utils.data.DataLoader(trainset, batch_size=config.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(valset, batch_size=config.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(trainset, batch_size=config.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(valset, batch_size=config.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(
                torchvision.datasets.ImageFolder(os.path.join(root, 'train'), config.transform_train_largescale),
                batch_size=config.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(
                torchvision.datasets.ImageFolder(os.path.join(root, 'val'), config.transform_test_largescale),
                batch_size=config.batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(
                torchvision.datasets.ImageFolder(os.path.join(root, 'train'), config.transform_train_largescale),
                batch_size=config.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(
                torchvision.datasets.ImageFolder(os.path.join(root, 'val'), config.transform_test_largescale),
                batch_size=config.batch_size, shuffle=False, **kwargs)
torch.utils.data.DataLoader(torchvision.datasets.ImageFolder(root="datasets/ood_data/dtd/images", transform=transform),
                                                       batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(torchvision.datasets.CIFAR100(root='./data/cifar100', train=False, download=True, transform=transform_test),
                                                       batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(torchvision.datasets.ImageFolder("./datasets/ood_data/Places".format(val_dataset),
                                                          transform=config.transform_test_largescale), batch_size=batch_size, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(
                torchvision.datasets.ImageFolder("./datasets/ood_data/SUN".format(val_dataset),
                                                 transform=config.transform_test_largescale), batch_size=batch_size, shuffle=False,
                num_workers=2)
torch.utils.data.DataLoader(
                torchvision.datasets.ImageFolder("./datasets/ood_data/iNaturalist".format(val_dataset),
                                                 transform=config.transform_test_largescale), batch_size=batch_size, shuffle=False,
                num_workers=2)
torch.utils.data.DataLoader(
                torchvision.datasets.ImageFolder(os.path.join('./datasets/id_data/imagenet', 'val'), config.transform_test_largescale),
                batch_size=config.batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(torchvision.datasets.ImageFolder("./datasets/ood_data/{}".format(val_dataset),
                                                          transform=transform_test), batch_size=batch_size, shuffle=False, num_workers=2)
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L59
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L62
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L68
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L71
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L77
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L81
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L88
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L92
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L122
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L125
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L128
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L131
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L137
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L142
https://github.com/SYSU-MIA-GROUP/pca-based-out-of-distribution-detection/blob/5d42d1a4d0e8c9bac71ade928c365fa8d010dcc6/dataloader.py#L146

====================================
https://github.com/Yanfeng-Zhou/XNet
====================================

Found 73 times
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=16, sampler=val_sampler)
DataLoader(grid_sampler, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=16)
DataLoader(grid_sampler, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=16)
DataLoader(grid_sampler, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=16)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=16, sampler=val_sampler)
DataLoader(grid_sampler, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=16)
DataLoader(dataset_train_sup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_unsup)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
DataLoader(dataset_train_sup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_unsup)
DataLoader(dataset_val.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=val_sampler)
DataLoader(dataset_train_sup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_unsup)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
DataLoader(dataset_train_sup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_unsup)
DataLoader(dataset_val.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=val_sampler)
DataLoader(dataset_train_sup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_unsup)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
DataLoader(dataset_train_sup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_unsup)
DataLoader(dataset_val.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=val_sampler)
DataLoader(dataset_train_sup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_unsup)
DataLoader(dataset_val.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=val_sampler)
DataLoader(dataset_train_sup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_unsup)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
DataLoader(dataset_train_sup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_unsup)
DataLoader(dataset_val.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=val_sampler)
DataLoader(dataset_train_sup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_unsup)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
DataLoader(dataset_train_sup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_unsup)
DataLoader(dataset_val.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=val_sampler)
DataLoader(dataset_train_sup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_unsup)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
DataLoader(dataset_train_sup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_unsup)
DataLoader(dataset_val.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=val_sampler)
DataLoader(dataset_train_sup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_unsup)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
DataLoader(dataset_train_sup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_unsup)
DataLoader(dataset_val.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=val_sampler)
DataLoader(dataset_train_sup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler_unsup)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
DataLoader(dataset_train_sup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_sup)
DataLoader(dataset_train_unsup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler_unsup)
DataLoader(dataset_val.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=val_sampler)
DataLoader(dataset_train, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
DataLoader(dataset_train_sup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler)
DataLoader(dataset_val.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=val_sampler)
DataLoader(dataset_train_sup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler)
DataLoader(dataset_val.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=val_sampler)
DataLoader(dataset_train, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
DataLoader(dataset_train_sup.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=train_sampler)
DataLoader(dataset_val.queue_train_set_1, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=0, sampler=val_sampler)
DataLoader(dataset_train, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
DataLoader(dataset_train, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
DataLoader(dataset_train, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=train_sampler)
DataLoader(dataset_val, batch_size=args.batch_size, shuffle=False, pin_memory=True, num_workers=8, sampler=val_sampler)
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/test.py#L97
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/test_3d.py#L110
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/test_ConResNet.py#L111
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/test_DTC.py#L110
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/test_xnet.py#L109
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/test_xnet3d.py#L112
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CCT.py#L149
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CCT.py#L150
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CCT.py#L151
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CCT_3d.py#L162
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CCT_3d.py#L163
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CCT_3d.py#L164
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CPS.py#L149
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CPS.py#L150
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CPS.py#L151
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CPS_3d.py#L161
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CPS_3d.py#L162
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CPS_3d.py#L163
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CT.py#L151
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CT.py#L152
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CT.py#L153
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CT_3d.py#L162
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CT_3d.py#L163
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_CT_3d.py#L164
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_DTC.py#L166
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_DTC.py#L167
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_DTC.py#L168
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_EM.py#L150
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_EM.py#L151
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_EM.py#L152
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_EM_3d.py#L162
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_EM_3d.py#L163
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_EM_3d.py#L164
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_MT.py#L156
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_MT.py#L157
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_MT.py#L158
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_MT_3d.py#L168
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_MT_3d.py#L169
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_MT_3d.py#L170
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_UAMT.py#L159
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_UAMT.py#L160
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_UAMT.py#L161
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_UAMT_3d.py#L169
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_UAMT_3d.py#L170
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_UAMT_3d.py#L171
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_URPC.py#L150
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_URPC.py#L151
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_URPC.py#L152
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_URPC_3d.py#L162
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_URPC_3d.py#L163
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_URPC_3d.py#L164
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_XNet.py#L163
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_XNet.py#L164
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_XNet.py#L165
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_XNet3d.py#L166
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_XNet3d.py#L167
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_semi_XNet3d.py#L168
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup.py#L130
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup.py#L131
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_3d.py#L143
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_3d.py#L144
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_ConResNet.py#L146
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_ConResNet.py#L147
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_XNet.py#L145
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_XNet.py#L146
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_XNet3d.py#L147
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_XNet3d.py#L148
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_XNet_sb.py#L145
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_XNet_sb.py#L146
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_alnet.py#L128
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_alnet.py#L129
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_wds.py#L124
https://github.com/Yanfeng-Zhou/XNet/blob/9be1018e1d3109c168e0fffcb71116e9dc2f8486/train_sup_wds.py#L125

=================================
https://github.com/liuxy1103/CRAC
=================================

Found 10 times
DataLoader(dataset=self.data, batch_size=self.batch_size, num_workers=self.num_workers,
                                             shuffle=False, drop_last=False, pin_memory=True)
DataLoader(dataset=self.data, batch_size=1, num_workers=0,
                                             shuffle=False, drop_last=False, pin_memory=True)
DataLoader(dataset=self.data, batch_size=self.batch_size, num_workers=self.num_workers,
                                             shuffle=False, drop_last=False, pin_memory=True)
DataLoader(dataset=self.data, batch_size=1, num_workers=0,
                                             shuffle=False, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(valid_provider, batch_size=1)
torch.utils.data.DataLoader(valid_provider, batch_size=1, num_workers=0,
                                                shuffle=False, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(valid_provider, batch_size=1, num_workers=0,
                                                shuffle=False, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(data, batch_size=1, num_workers=0,
                                             shuffle=False, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(data, batch_size=1, num_workers=0,
                                             shuffle=False, drop_last=False, pin_memory=True)
torch.utils.data.DataLoader(data, batch_size=1, num_workers=0,
                                             shuffle=False, drop_last=False, pin_memory=True)
https://github.com/liuxy1103/CRAC/blob/8fd4392efe7d18710fa4c324f2e9292739aa1545/data_provider_disc.py#L338
https://github.com/liuxy1103/CRAC/blob/8fd4392efe7d18710fa4c324f2e9292739aa1545/data_provider_disc.py#L341
https://github.com/liuxy1103/CRAC/blob/8fd4392efe7d18710fa4c324f2e9292739aa1545/data_provider_labeled.py#L372
https://github.com/liuxy1103/CRAC/blob/8fd4392efe7d18710fa4c324f2e9292739aa1545/data_provider_labeled.py#L375
https://github.com/liuxy1103/CRAC/blob/8fd4392efe7d18710fa4c324f2e9292739aa1545/inference_embs.py#L120
https://github.com/liuxy1103/CRAC/blob/8fd4392efe7d18710fa4c324f2e9292739aa1545/main_CPSN.py#L324
https://github.com/liuxy1103/CRAC/blob/8fd4392efe7d18710fa4c324f2e9292739aa1545/main_CRAC.py#L511
https://github.com/liuxy1103/CRAC/blob/8fd4392efe7d18710fa4c324f2e9292739aa1545/provider_valid.py#L391
https://github.com/liuxy1103/CRAC/blob/8fd4392efe7d18710fa4c324f2e9292739aa1545/provider_valid_inference.py#L432
https://github.com/liuxy1103/CRAC/blob/8fd4392efe7d18710fa4c324f2e9292739aa1545/provider_valid_mask.py#L394

=======================================
https://github.com/Hwihuni/BlindHarmony
=======================================

Found 22 times
DataLoader(dataset=train_dataset,
                              batch_size=batch_size,
                              num_workers=num_workers)
DataLoader(dataset=val_dataset,
                                batch_size=batch_size,
                                num_workers=num_workers)
DataLoader(
        dataset=train_dataset,
        batch_size=batch_size,
        num_workers=0 # Faster than starting all workers just to get a single batch.
    )
DataLoader(dataset=test_dataset,
                           batch_size=batch_size,
                           num_workers=num_workers)
DataLoader(
        dataset=train_dataset,
        batch_size=batch_size,
        shuffle=True
    )
DataLoader(dataset=train_dataset,
                              batch_size=batch_size,
                              num_workers=num_workers)
data.DataLoader(
    dataset=grid_dataset,
    batch_size=1000,
    drop_last=False
)
data.DataLoader(
    dataset=grid_dataset,
    batch_size=1000,
    drop_last=False
)
DataLoader(dataset=train_dataset,
                              batch_size=batch_size,
                              num_workers=num_workers)
DataLoader(dataset=val_dataset,
                                batch_size=batch_size,
                                num_workers=num_workers)
DataLoader(
        dataset=train_dataset,
        batch_size=batch_size,
        num_workers=0 # Faster than starting all workers just to get a single batch.
    )
DataLoader(dataset=test_dataset,
                           batch_size=batch_size,
                           num_workers=num_workers)
DataLoader(
        dataset=train_dataset,
        batch_size=batch_size,
        shuffle=True
    )
DataLoader(dataset=train_dataset,
                              batch_size=batch_size,
                              num_workers=num_workers)
data.DataLoader(
    dataset=grid_dataset,
    batch_size=1000,
    drop_last=False
)
data.DataLoader(
    dataset=grid_dataset,
    batch_size=1000,
    drop_last=False
)
data.DataLoader(
    train_dataset,
    batch_size=args.train_batch_size,
    shuffle=True,
    drop_last=True
)
data.DataLoader(
    dataset=val_dataset,
    batch_size=args.val_batch_size,
    shuffle=True,
    drop_last=True
)
data.DataLoader(
    dataset=test_dataset,
    batch_size=args.val_batch_size,
    shuffle=False,
    drop_last=False
)
data.DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        sampler=train_sampler,
        num_workers=4 if args.dataset_name == 'emnist' else 0
    )
data.DataLoader(
        dataset=dataset,
        batch_size=1024,
        sampler=val_sampler,
        shuffle=False,
        drop_last=False
    )
data.DataLoader(
        test_dataset,
        batch_size=16,
        shuffle=False,
        drop_last=False,
    )
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/train_flow.py#L310
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/train_flow.py#L315
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/train_flow.py#L322
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/train_flow.py#L539
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/train_flow.py#L595
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/train_flow.py#L637
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/face.py#L111
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/faceeval.py#L59
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/images.py#L308
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/images.py#L313
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/images.py#L320
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/images.py#L537
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/images.py#L593
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/images.py#L635
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/plane.py#L92
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/planeeval.py#L56
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/uci.py#L94
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/uci.py#L105
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/uci.py#L114
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/vae_.py#L196
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/vae_.py#L203
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/vae_.py#L211

================================
https://github.com/gefend/LIMITR
================================

Found 3 times
DataLoader(
            dataset,
            pin_memory=True,
            drop_last=True,
            shuffle=True,
            batch_size=self.cfg.train.batch_size,
            num_workers=self.cfg.train.num_workers,
            collate_fn=self.collate_fn,
        )
DataLoader(
            dataset,
            pin_memory=True,
            drop_last=True,
            shuffle=False,
            collate_fn=self.collate_fn,
            batch_size=1000,
            num_workers=self.cfg.train.num_workers,
        )
DataLoader(
            dataset,
            pin_memory=True,
            shuffle=False,
            collate_fn=self.collate_fn,
            batch_size=1000,
            num_workers=self.cfg.train.num_workers,
        )
https://github.com/gefend/LIMITR/blob/bd53a77dacc00095e082db71dcbd88dc1d707cee/LIMITR/datasets/data_module.py#L19
https://github.com/gefend/LIMITR/blob/bd53a77dacc00095e082db71dcbd88dc1d707cee/LIMITR/datasets/data_module.py#L32
https://github.com/gefend/LIMITR/blob/bd53a77dacc00095e082db71dcbd88dc1d707cee/LIMITR/datasets/data_module.py#L45

=================================
https://github.com/camwew/TADA-MI
=================================

Found 3 times
DataLoader(
                        input_dataset,
                        num_workers=nr_procs,
                        batch_size=batch_size,
                        shuffle=run_mode == 'train',
                        drop_last=run_mode == 'train',
                        worker_init_fn=worker_init_fn,
                    )
DataLoader(
                        input_dataset,
                        num_workers=nr_procs,
                        batch_size=batch_size,
                        shuffle=run_mode == 'train',
                        drop_last=run_mode == 'train',
                        worker_init_fn=worker_init_fn,
                    )
DataLoader(
                        input_dataset,
                        num_workers=nr_procs,
                        batch_size=batch_size,
                        shuffle=run_mode == 'train',
                        drop_last=run_mode == 'train',
                        worker_init_fn=worker_init_fn,
                    )
https://github.com/camwew/TADA-MI/blob/2174957ccab10772ec5203273326acd207b739a0/run_train.py#L151
https://github.com/camwew/TADA-MI/blob/2174957ccab10772ec5203273326acd207b739a0/run_train.py#L171
https://github.com/camwew/TADA-MI/blob/2174957ccab10772ec5203273326acd207b739a0/run_train.py#L191

=======================================
https://github.com/longzilicart/GloReDi
=======================================

Found 6 times
DataLoader(self.train_dataset, batch_size=opt.batch_size,
                                  num_workers=opt.num_workers,
                                  sampler = train_sampler,
                                  pin_memory = True,)
DataLoader(self.val_dataset, batch_size=1,
                                  num_workers=0,
                                  sampler = val_sampler,)
DataLoader(self.train_dataset, batch_size=opt.batch_size,
                                  num_workers=opt.num_workers,
                                  sampler = train_sampler,
                                  pin_memory = True,)
DataLoader(self.val_dataset, batch_size=1,
                                  num_workers=0,
                                  sampler = val_sampler,)
DataLoader(aapm_dataset, batch_size=1, num_workers=2)
DataLoader(deep_lesion_dataset, batch_size=1,
                                  num_workers=2)
https://github.com/longzilicart/GloReDi/blob/b412caeed27075bb8b79110bdd9da17b905f6e4d/src/FreqCDL_trainer.py#L191
https://github.com/longzilicart/GloReDi/blob/b412caeed27075bb8b79110bdd9da17b905f6e4d/src/FreqCDL_trainer.py#L196
https://github.com/longzilicart/GloReDi/blob/b412caeed27075bb8b79110bdd9da17b905f6e4d/src/FreqCDL_trainer.py#L329
https://github.com/longzilicart/GloReDi/blob/b412caeed27075bb8b79110bdd9da17b905f6e4d/src/FreqCDL_trainer.py#L334
https://github.com/longzilicart/GloReDi/blob/b412caeed27075bb8b79110bdd9da17b905f6e4d/src/Data_Provider/aapm_dataset.py#L93
https://github.com/longzilicart/GloReDi/blob/b412caeed27075bb8b79110bdd9da17b905f6e4d/src/Data_Provider/deeplesion_dataset.py#L114

==============================================================
https://github.com/dddraxxx/Medical-Reg-with-Volume-Preserving
==============================================================

Found 7 times
DataLoader(train_dataset, batch_size=args.batch_size, num_workers=num_worker, sampler=train_sampler)
DataLoader(train_dataset, batch_size=args.batch_size, num_workers=num_worker, shuffle=True)
DataLoader(val_dataset, batch_size=args.batch_size, num_workers=num_worker, shuffle=False)
DataLoader(val_dataset, batch_size=args.batch_size, num_workers=min(8, args.batch_size), shuffle=False)
DataLoader(test_set, batch_size=1, shuffle=False, num_workers=4, pin_memory=True)
DataLoader(train_set, batch_size=batch_size, shuffle=True, num_workers=4, pin_memory=True)
DataLoader(val_set, batch_size=1, shuffle=False, num_workers=4, pin_memory=True, drop_last=True)
https://github.com/dddraxxx/Medical-Reg-with-Volume-Preserving/blob/6067a7f9e901c71a05b02e56df3b33aa52177e6a/train_simple.py#L252
https://github.com/dddraxxx/Medical-Reg-with-Volume-Preserving/blob/6067a7f9e901c71a05b02e56df3b33aa52177e6a/train_simple.py#L254
https://github.com/dddraxxx/Medical-Reg-with-Volume-Preserving/blob/6067a7f9e901c71a05b02e56df3b33aa52177e6a/train_simple.py#L256
https://github.com/dddraxxx/Medical-Reg-with-Volume-Preserving/blob/6067a7f9e901c71a05b02e56df3b33aa52177e6a/eval/eval.py#L75
https://github.com/dddraxxx/Medical-Reg-with-Volume-Preserving/blob/6067a7f9e901c71a05b02e56df3b33aa52177e6a/networks/TSM_A/infer_affine.py#L41
https://github.com/dddraxxx/Medical-Reg-with-Volume-Preserving/blob/6067a7f9e901c71a05b02e56df3b33aa52177e6a/networks/TSM_A/train_affine.py#L84
https://github.com/dddraxxx/Medical-Reg-with-Volume-Preserving/blob/6067a7f9e901c71a05b02e56df3b33aa52177e6a/networks/TSM_A/train_affine.py#L85

================================
https://github.com/juglab/uSplit
================================

Found 5 times
DataLoader(dset, pin_memory=False, num_workers=num_workers, shuffle=False, batch_size=batch_size)
DataLoader(train_data,
                                       pin_memory=False,
                                       num_workers=config.training.num_workers,
                                       shuffle=shuffle,
                                       batch_size=batch_size)
DataLoader(val_data,
                                     pin_memory=False,
                                     num_workers=config.training.num_workers,
                                     shuffle=False,
                                     batch_size=batch_size)
DataLoader(train_data,
                                       pin_memory=False,
                                       batch_sampler=train_sampler,
                                       num_workers=config.training.num_workers)
DataLoader(val_data,
                                     pin_memory=False,
                                     batch_sampler=val_sampler,
                                     num_workers=config.training.num_workers)
https://github.com/juglab/uSplit/blob/25224ec5339ffe162e247fb7ea12702b5722d9e7/usplit/analysis/mmse_prediction.py#L74
https://github.com/juglab/uSplit/blob/25224ec5339ffe162e247fb7ea12702b5722d9e7/usplit/scripts/run.py#L176
https://github.com/juglab/uSplit/blob/25224ec5339ffe162e247fb7ea12702b5722d9e7/usplit/scripts/run.py#L181
https://github.com/juglab/uSplit/blob/25224ec5339ffe162e247fb7ea12702b5722d9e7/usplit/scripts/run.py#L213
https://github.com/juglab/uSplit/blob/25224ec5339ffe162e247fb7ea12702b5722d9e7/usplit/scripts/run.py#L217

=====================================
https://github.com/GuangYuanKK/McASSR
=====================================

Found 1 times
DataLoader(dataset, batch_size=spec['batch_size'],
        shuffle=(tag == 'train'), num_workers=8, pin_memory=True)
https://github.com/GuangYuanKK/McASSR/blob/6987980c0c3c92f79853c4be9fc717591f983567/train.py#L29

===============================
https://github.com/Innse/MOTCat
===============================

Found 5 times
DataLoader(dataset, batch_size=batch_size, sampler = sampler.SequentialSampler(dataset), collate_fn = collate_MIL, **kwargs)
DataLoader(split_dataset, batch_size=batch_size, sampler = WeightedRandomSampler(weights, len(weights)), collate_fn = collate, **kwargs)
DataLoader(split_dataset, batch_size=batch_size, sampler = RandomSampler(split_dataset), collate_fn = collate, **kwargs)
DataLoader(split_dataset, batch_size=batch_size, sampler = SequentialSampler(split_dataset), collate_fn = collate, **kwargs)
DataLoader(split_dataset, batch_size=1, sampler = SubsetSequentialSampler(ids), collate_fn = collate, **kwargs )
https://github.com/Innse/MOTCat/blob/3177d5d71700d72591af4d2376e344cf0c98a44e/utils/utils.py#L79
https://github.com/Innse/MOTCat/blob/3177d5d71700d72591af4d2376e344cf0c98a44e/utils/utils.py#L99
https://github.com/Innse/MOTCat/blob/3177d5d71700d72591af4d2376e344cf0c98a44e/utils/utils.py#L101
https://github.com/Innse/MOTCat/blob/3177d5d71700d72591af4d2376e344cf0c98a44e/utils/utils.py#L103
https://github.com/Innse/MOTCat/blob/3177d5d71700d72591af4d2376e344cf0c98a44e/utils/utils.py#L107

==================================================================================================
https://github.com/yuan-xiaohan/4D-Myocardium-Reconstruction-with-Decoupled-Motion-and-Shape-Model
==================================================================================================

Found 1 times
data_utils.DataLoader(
        sdf_dataset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=0,
        drop_last=True,
    )
https://github.com/yuan-xiaohan/4D-Myocardium-Reconstruction-with-Decoupled-Motion-and-Shape-Model/blob/53d22ce600e295025947671e39f9dffda38cd618/train.py#L147

====================================
https://github.com/funkelab/cellulus
====================================

Found 1 times
torch.utils.data.DataLoader(
        dataset=train_dataset,
        batch_size=train_config.batch_size,
        drop_last=True,
        num_workers=train_config.num_workers,
        pin_memory=True,
    )
https://github.com/funkelab/cellulus/blob/7752a94560f1f4d5d830dd4ba9ae1f74744e7041/cellulus/train.py#L35

=============================
https://github.com/cyh-0/BoMD
=============================

Found 12 times
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size if mode != "influence" else 1,
        shuffle=True if mode == "train" else False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size if mode != "influence" else 1,
        shuffle=True if mode == "train" else False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=True if mode == "train" else False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=True if mode == "train" else False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True if mode == "train" else False,
    )
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=True if mode == "train" else False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True if mode == "train" else False,
    )
DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=drop_last,
    )
DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=drop_last,
    )
DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=drop_last,
    )
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=True if mode == "train" else False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True if mode == "train" else False,
    )
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=True if mode == "train" else False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True if mode == "train" else False,
    )
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=True if mode == "train" else False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True if mode == "train" else False,
    )
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=True if mode == "train" else False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True if mode == "train" else False,
    )
https://github.com/cyh-0/BoMD/blob/69cc9ceb925badda866e02e70986b3c217704417/cxp_data/data/cx14_dataloader_cut.py#L183
https://github.com/cyh-0/BoMD/blob/69cc9ceb925badda866e02e70986b3c217704417/cxp_data/data/cxp_dataloader_cut.py#L134
https://github.com/cyh-0/BoMD/blob/69cc9ceb925badda866e02e70986b3c217704417/cxp_data/data/openi_dataloader_cut.py#L261
https://github.com/cyh-0/BoMD/blob/69cc9ceb925badda866e02e70986b3c217704417/cxp_data/data/padchest_dataloader_cut.py#L356
https://github.com/cyh-0/BoMD/blob/69cc9ceb925badda866e02e70986b3c217704417/data/cx14_dataloader.py#L155
https://github.com/cyh-0/BoMD/blob/69cc9ceb925badda866e02e70986b3c217704417/data/cx14_dataloader_cut.py#L233
https://github.com/cyh-0/BoMD/blob/69cc9ceb925badda866e02e70986b3c217704417/data/cx14_pdc_dataloader_cut.py#L234
https://github.com/cyh-0/BoMD/blob/69cc9ceb925badda866e02e70986b3c217704417/data/cxp_dataloader_cut.py#L194
https://github.com/cyh-0/BoMD/blob/69cc9ceb925badda866e02e70986b3c217704417/data/mimic_dataloader.py#L256
https://github.com/cyh-0/BoMD/blob/69cc9ceb925badda866e02e70986b3c217704417/data/openi_dataloader.py#L199
https://github.com/cyh-0/BoMD/blob/69cc9ceb925badda866e02e70986b3c217704417/data/openi_dataloader_cut.py#L235
https://github.com/cyh-0/BoMD/blob/69cc9ceb925badda866e02e70986b3c217704417/data/padchest_dataloader_cut.py#L358

======================================
https://github.com/lpcccc-cv/MC-VarNet
======================================

Found 3 times
torch.utils.data.DataLoader(val_set, batch_size=1, shuffle=False, num_workers=1,pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=shuffle,
                                           num_workers=num_workers, sampler=sampler, drop_last=True,
                                           pin_memory=False)
torch.utils.data.DataLoader(dataset, batch_size=8, shuffle=False, num_workers=2,
                                           pin_memory=True)
https://github.com/lpcccc-cv/MC-VarNet/blob/079031dfbd888dc32fa451e55a803d6b0b27cf95/test_PSNR.py#L30
https://github.com/lpcccc-cv/MC-VarNet/blob/079031dfbd888dc32fa451e55a803d6b0b27cf95/data/__init__.py#L20
https://github.com/lpcccc-cv/MC-VarNet/blob/079031dfbd888dc32fa451e55a803d6b0b27cf95/data/__init__.py#L24

====================================
https://github.com/XiheQiu/Gram-AODE
====================================

Found 3 times
DataLoader(train_dataset,batch_size=16,shuffle=True)
DataLoader(train_dataset,batch_size=16,shuffle=True)
DataLoader(test_dataset,batch_size=16,shuffle=True)
https://github.com/XiheQiu/Gram-AODE/blob/4fbe97d169aec45788a29340c935ab556c5d4b39/train.py#L296
https://github.com/XiheQiu/Gram-AODE/blob/4fbe97d169aec45788a29340c935ab556c5d4b39/train.py#L297
https://github.com/XiheQiu/Gram-AODE/blob/4fbe97d169aec45788a29340c935ab556c5d4b39/train.py#L298

=====================================
https://github.com/HKU-MedAI/ConSlide
=====================================

Found 9 times
DataLoader(train_dataset,
                              batch_size=1, shuffle=True, num_workers=4, collate_fn = collate_MIL)
DataLoader(val_dataset,
                              batch_size=1, shuffle=True, num_workers=4, collate_fn = collate_MIL)
DataLoader(test_dataset,
                             batch_size=1, shuffle=False, num_workers=4, collate_fn = collate_MIL)
DataLoader(test_dataset,
                             batch_size=1, shuffle=False, num_workers=4, collate_fn = collate_MIL)
DataLoader(train_dataset,
                              batch_size=1, shuffle=True, num_workers=4, collate_fn = collate_MIL)
DataLoader(val_dataset,
                              batch_size=1, shuffle=True, num_workers=4, collate_fn = collate_MIL)
DataLoader(train_dataset,
                              batch_size=setting.args.batch_size, shuffle=True, num_workers=4)
DataLoader(test_dataset,
                             batch_size=setting.args.batch_size, shuffle=False, num_workers=4)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
https://github.com/HKU-MedAI/ConSlide/blob/42a65ce9a300c02b5ee3266044fcef22369f87d3/datasets/seq_wsi.py#L561
https://github.com/HKU-MedAI/ConSlide/blob/42a65ce9a300c02b5ee3266044fcef22369f87d3/datasets/seq_wsi.py#L563
https://github.com/HKU-MedAI/ConSlide/blob/42a65ce9a300c02b5ee3266044fcef22369f87d3/datasets/seq_wsi.py#L565
https://github.com/HKU-MedAI/ConSlide/blob/42a65ce9a300c02b5ee3266044fcef22369f87d3/datasets/seq_wsi.py#L592
https://github.com/HKU-MedAI/ConSlide/blob/42a65ce9a300c02b5ee3266044fcef22369f87d3/datasets/seq_wsi.py#L601
https://github.com/HKU-MedAI/ConSlide/blob/42a65ce9a300c02b5ee3266044fcef22369f87d3/datasets/seq_wsi.py#L603
https://github.com/HKU-MedAI/ConSlide/blob/42a65ce9a300c02b5ee3266044fcef22369f87d3/datasets/utils/continual_dataset.py#L127
https://github.com/HKU-MedAI/ConSlide/blob/42a65ce9a300c02b5ee3266044fcef22369f87d3/datasets/utils/continual_dataset.py#L129
https://github.com/HKU-MedAI/ConSlide/blob/42a65ce9a300c02b5ee3266044fcef22369f87d3/datasets/utils/continual_dataset.py#L154

=================================
https://github.com/QtacierP/PRIOR
=================================

Found 3 times
DataLoader(self.test_dataset, self.batch_size, shuffle=False, num_workers=self.num_workers)
DataLoader(self.train_dataset, self.batch_size, shuffle=True, num_workers=self.num_workers)
DataLoader(self.validation_dataset, self.batch_size, shuffle=False, num_workers=self.num_workers)
https://github.com/QtacierP/PRIOR/blob/086bf2e0d379d7dacc47a6ad738ffabc1ad6e25f/codes/prior/downstream/zero_classification_model.py#L89
https://github.com/QtacierP/PRIOR/blob/086bf2e0d379d7dacc47a6ad738ffabc1ad6e25f/codes/prior/models/prior.py#L123
https://github.com/QtacierP/PRIOR/blob/086bf2e0d379d7dacc47a6ad738ffabc1ad6e25f/codes/prior/models/prior.py#L127

==========================================
https://github.com/MediaBrain-SJTU/MedKLIP
==========================================

Found 16 times
DataLoader(
            train_datasets,
            batch_size=config['batch_size'],
            num_workers=4,
            pin_memory=True,
            sampler=None,
            shuffle=True,
            collate_fn=None,
            drop_last=True,
        )
DataLoader(
            val_datasets,
            batch_size=config['batch_size'],
            num_workers=4,
            pin_memory=True,
            sampler=None,
            shuffle=True,
            collate_fn=None,
            drop_last=True,
        )
DataLoader(dataset, batch_size=32, shuffle=False, num_workers=8, drop_last=False)
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
DataLoader(
            test_dataset,
            batch_size=config['test_batch_size'],
            num_workers=4,
            pin_memory=True,
            sampler=None,
            shuffle=False,
            collate_fn=None,
            drop_last=False,
        )
DataLoader(
            train_dataset,
            batch_size=config['batch_size'],
            num_workers=4,
            pin_memory=True,
            sampler=None,
            shuffle=True,
            collate_fn=None,
            drop_last=True,
        )
DataLoader(
            val_dataset,
            batch_size=config['batch_size'],
            num_workers=4,
            pin_memory=True,
            sampler=None,
            shuffle=False,
            collate_fn=None,
            drop_last=False,
        )
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
DataLoader(
            test_dataset,
            batch_size=config['test_batch_size'],
            num_workers=4,
            pin_memory=True,
            sampler=None,
            shuffle=True,
            collate_fn=None,
            drop_last=True,
        )
DataLoader(
            train_dataset,
            batch_size=config['batch_size'],
            num_workers=4,
            pin_memory=True,
            sampler=None,
            shuffle=True,
            collate_fn=None,
            drop_last=True,
        )
DataLoader(
            val_dataset,
            batch_size=config['batch_size'],
            num_workers=4,
            pin_memory=True,
            sampler=None,
            shuffle=True,
            collate_fn=None,
            drop_last=True,
        )
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
DataLoader(
            test_dataset,
            batch_size=config['test_batch_size'],
            num_workers=0,
            pin_memory=True,
            sampler=None,
            shuffle=False,
            collate_fn=None,
            drop_last=False,
        )
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
DataLoader(
            test_dataset,
            batch_size=config['test_batch_size'],
            num_workers=4,
            pin_memory=True,
            sampler=None,
            shuffle=True,
            collate_fn=None,
            drop_last=False,
        )
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/PreTrain_MedKLIP/train_MedKLIP.py#L114
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/PreTrain_MedKLIP/train_MedKLIP.py#L126
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/PreTrain_MedKLIP/data_file/preprocessing/adj_matrix.py#L354
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/PreTrain_MedKLIP/dataset/dataset.py#L107
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/Sample_Finetuning_SIIMACR/I1_classification/test_res_ft.py#L48
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/Sample_Finetuning_SIIMACR/I1_classification/train_res_ft.py#L95
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/Sample_Finetuning_SIIMACR/I1_classification/train_res_ft.py#L107
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/Sample_Finetuning_SIIMACR/I1_classification/dataset/dataset_siim_acr.py#L89
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/Sample_Finetuning_SIIMACR/I2_segmentation/test_res_ft.py#L22
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/Sample_Finetuning_SIIMACR/I2_segmentation/train_res_ft.py#L96
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/Sample_Finetuning_SIIMACR/I2_segmentation/train_res_ft.py#L108
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/Sample_Finetuning_SIIMACR/I2_segmentation/dataset/dataset_siim_acr.py#L68
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/Sample_Zero-Shot_Grounding_RSNA/test.py#L62
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/Sample_Zero-Shot_Grounding_RSNA/dataset/dataset_RSNA.py#L86
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/Sample_zero-shot_Classification_CXR14/test.py#L74
https://github.com/MediaBrain-SJTU/MedKLIP/blob/8e60b035ddc160f44a389f476b596f1052f02d8f/Sample_zero-shot_Classification_CXR14/dataset/dataset.py#L70

=================================
https://github.com/LL3RD/ACFormer
=================================

Found 22 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu, flatten=True),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs,
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/ssod/datasets/builder.py#L81
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/mmdet/datasets/builder.py#L195
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_data/test_datasets/test_common.py#L224
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L76
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L88
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L99
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L111
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L115
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L133
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L135
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L155
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L157
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L177
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L197
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L216
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_runtime/test_eval_hook.py#L236
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_utils/test_hook.py#L92
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_utils/test_hook.py#L190
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_utils/test_hook.py#L246
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_utils/test_hook.py#L268
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_utils/test_hook.py#L310
https://github.com/LL3RD/ACFormer/blob/57aeb5e3aa7922843d823c74df351984b081b133/thirdparty/mmdetection/tests/test_utils/test_hook.py#L347

===================================
https://github.com/wwyi1828/CluSiam
===================================

Found 2 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=args.num_worker,
        pin_memory=True,
        drop_last=True,
    )
DataLoader(dataset, batch_size=self.batch_size, num_workers=self.num_workers)
https://github.com/wwyi1828/CluSiam/blob/cc3be6f0c8d426a08403e6f759d9a6cfdc41d23c/main.py#L196
https://github.com/wwyi1828/CluSiam/blob/cc3be6f0c8d426a08403e6f759d9a6cfdc41d23c/utils.py#L48

=====================================
https://github.com/JuzhengMiao/CauSSL
=====================================

Found 2 times
DataLoader(db_train, batch_sampler=batch_sampler, num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_train, batch_sampler=batch_sampler, num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
https://github.com/JuzhengMiao/CauSSL/blob/23b190434e584952aac74049cd933b5d381d7782/train_CT_CPSCauSSL.py#L152
https://github.com/JuzhengMiao/CauSSL/blob/23b190434e584952aac74049cd933b5d381d7782/train_CT_MCCauSSL.py#L147

===================================
https://github.com/FT-ZHOU-ZZZ/CMTA
===================================

Found 4 times
DataLoader(split_dataset, batch_size=batch_size, sampler = WeightedRandomSampler(weights, len(weights)), collate_fn = collate, **kwargs)
DataLoader(split_dataset, batch_size=batch_size, sampler = RandomSampler(split_dataset), collate_fn = collate, **kwargs)
DataLoader(split_dataset, batch_size=batch_size, sampler = SequentialSampler(split_dataset), collate_fn = collate, **kwargs)
DataLoader(split_dataset, batch_size=1, sampler = SubsetSequentialSampler(ids), collate_fn = collate, **kwargs )
https://github.com/FT-ZHOU-ZZZ/CMTA/blob/fe99848ef3b0c61d0c64988b07c68f2214cf9cc1/utils/util.py#L79
https://github.com/FT-ZHOU-ZZZ/CMTA/blob/fe99848ef3b0c61d0c64988b07c68f2214cf9cc1/utils/util.py#L81
https://github.com/FT-ZHOU-ZZZ/CMTA/blob/fe99848ef3b0c61d0c64988b07c68f2214cf9cc1/utils/util.py#L83
https://github.com/FT-ZHOU-ZZZ/CMTA/blob/fe99848ef3b0c61d0c64988b07c68f2214cf9cc1/utils/util.py#L87

================================
https://github.com/Druthrie/ST2M
================================

Found 11 times
DataLoader(dataset, batch_size=1, drop_last=True, num_workers=1)
DataLoader(train_dataset, batch_size=opt.batch_size, drop_last=True, num_workers=opt.num_workers,
                              shuffle=True, collate_fn=collate_fn, pin_memory=True)
DataLoader(val_dataset, batch_size=opt.batch_size, drop_last=True, num_workers=opt.num_workers,
                            shuffle=True, collate_fn=collate_fn, pin_memory=True)
DataLoader(dataset, batch_size=batch_size, num_workers=4, drop_last=True, shuffle=True)
DataLoader(dataset, batch_size=batch_size, num_workers=4, drop_last=True, shuffle=True)
DataLoader(dataset, batch_size=batch_size, drop_last=True, num_workers=4)
DataLoader(mm_dataset, batch_size=1, num_workers=1)
DataLoader(dataset, batch_size=1, num_workers=1, shuffle=True)
DataLoader(dataset, batch_size=1, num_workers=1, shuffle=True)
DataLoader(train_dataset, batch_size=self.opt.batch_size, drop_last=True, num_workers=4,
                                          shuffle=True, pin_memory=True)
DataLoader(val_dataset, batch_size=self.opt.batch_size, drop_last=True, num_workers=4,
                                        shuffle=True, pin_memory=True)
https://github.com/Druthrie/ST2M/blob/213d498879071f32a5a1aad2334c6376324e1558/st2m_gen_mul_motions_scipy_V2.py#L170
https://github.com/Druthrie/ST2M/blob/213d498879071f32a5a1aad2334c6376324e1558/st2m_train_tex_mot_match.py#L101
https://github.com/Druthrie/ST2M/blob/213d498879071f32a5a1aad2334c6376324e1558/st2m_train_tex_mot_match.py#L104
https://github.com/Druthrie/ST2M/blob/213d498879071f32a5a1aad2334c6376324e1558/motion_loaders/st2m_dataset_motion_loader.py#L22
https://github.com/Druthrie/ST2M/blob/213d498879071f32a5a1aad2334c6376324e1558/motion_loaders/st2m_dataset_motion_loader.py#L32
https://github.com/Druthrie/ST2M/blob/213d498879071f32a5a1aad2334c6376324e1558/motion_loaders/st2m_model_motion_loaders.py#L103
https://github.com/Druthrie/ST2M/blob/213d498879071f32a5a1aad2334c6376324e1558/motion_loaders/st2m_model_motion_loaders.py#L104
https://github.com/Druthrie/ST2M/blob/213d498879071f32a5a1aad2334c6376324e1558/motion_loaders/st2m_v13_model_dataset.py#L58
https://github.com/Druthrie/ST2M/blob/213d498879071f32a5a1aad2334c6376324e1558/motion_loaders/st2m_v13_model_dataset.py#L257
https://github.com/Druthrie/ST2M/blob/213d498879071f32a5a1aad2334c6376324e1558/networks/st2m_trainers.py#L820
https://github.com/Druthrie/ST2M/blob/213d498879071f32a5a1aad2334c6376324e1558/networks/st2m_trainers.py#L822

============================================
https://github.com/MediaBrain-SJTU/AuxFormer
============================================

Found 10 times
torch.utils.data.DataLoader(dataset_train, batch_size=args.batch_size, shuffle=True, drop_last=True,
                                               num_workers=8)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, shuffle=False, drop_last=False,
                                                num_workers=8)
torch.utils.data.DataLoader(dataset_train, batch_size=args.batch_size, shuffle=True, drop_last=False,
                                               num_workers=8)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, shuffle=False, drop_last=False,
                                                num_workers=8)
torch.utils.data.DataLoader(dataset_train, batch_size=args.batch_size, shuffle=True, drop_last=True,
                                            num_workers=8)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, shuffle=False, drop_last=False,
                                                num_workers=8)
torch.utils.data.DataLoader(dataset_train, batch_size=args.batch_size, shuffle=True, drop_last=True,
                                               num_workers=8)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, shuffle=False, drop_last=False,
                                                num_workers=8)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, shuffle=False, drop_last=False,
                                                num_workers=8)
torch.utils.data.DataLoader(dataset_test, batch_size=args.batch_size, shuffle=False, drop_last=False,
                                                num_workers=8)
https://github.com/MediaBrain-SJTU/AuxFormer/blob/b8683f6f3de4386c9e526ea34dd586109d94ba91/main_3dpw.py#L45
https://github.com/MediaBrain-SJTU/AuxFormer/blob/b8683f6f3de4386c9e526ea34dd586109d94ba91/main_3dpw.py#L49
https://github.com/MediaBrain-SJTU/AuxFormer/blob/b8683f6f3de4386c9e526ea34dd586109d94ba91/main_cmu.py#L45
https://github.com/MediaBrain-SJTU/AuxFormer/blob/b8683f6f3de4386c9e526ea34dd586109d94ba91/main_cmu.py#L54
https://github.com/MediaBrain-SJTU/AuxFormer/blob/b8683f6f3de4386c9e526ea34dd586109d94ba91/main_h36m.py#L45
https://github.com/MediaBrain-SJTU/AuxFormer/blob/b8683f6f3de4386c9e526ea34dd586109d94ba91/main_h36m.py#L55
https://github.com/MediaBrain-SJTU/AuxFormer/blob/b8683f6f3de4386c9e526ea34dd586109d94ba91/test_3dpw.py#L45
https://github.com/MediaBrain-SJTU/AuxFormer/blob/b8683f6f3de4386c9e526ea34dd586109d94ba91/test_3dpw.py#L49
https://github.com/MediaBrain-SJTU/AuxFormer/blob/b8683f6f3de4386c9e526ea34dd586109d94ba91/test_cmu.py#L50
https://github.com/MediaBrain-SJTU/AuxFormer/blob/b8683f6f3de4386c9e526ea34dd586109d94ba91/test_h36m.py#L48

=========================================
https://github.com/ruc-aimc-lab/GeoFormer
=========================================

Found 6 times
DataLoader(self.train_dataset, sampler=sampler, **self.train_loader_params)
DataLoader(self.val_dataset, sampler=sampler, **self.val_loader_params)
DataLoader(dataset, sampler=sampler, **self.val_loader_params)
DataLoader(self.test_dataset, sampler=sampler, **self.test_loader_params)
DataLoader(self.train_dataset, **self.train_loader_params)
DataLoader(self.val_dataset, **self.val_loader_params)
https://github.com/ruc-aimc-lab/GeoFormer/blob/8b9506e6e9c0e61848724955fb514824039b1ff7/model/loftr_src/lightning/data.py#L305
https://github.com/ruc-aimc-lab/GeoFormer/blob/8b9506e6e9c0e61848724955fb514824039b1ff7/model/loftr_src/lightning/data.py#L313
https://github.com/ruc-aimc-lab/GeoFormer/blob/8b9506e6e9c0e61848724955fb514824039b1ff7/model/loftr_src/lightning/data.py#L318
https://github.com/ruc-aimc-lab/GeoFormer/blob/8b9506e6e9c0e61848724955fb514824039b1ff7/model/loftr_src/lightning/data.py#L324
https://github.com/ruc-aimc-lab/GeoFormer/blob/8b9506e6e9c0e61848724955fb514824039b1ff7/model/loftr_src/lightning/data.py#L383
https://github.com/ruc-aimc-lab/GeoFormer/blob/8b9506e6e9c0e61848724955fb514824039b1ff7/model/loftr_src/lightning/data.py#L388

==========================================================
https://github.com/duke-vision/semantic-unsup-flow-release
==========================================================

Found 3 times
torch.utils.data.DataLoader(ds, batch_size=1, pin_memory=True, shuffle=False)
torch.utils.data.DataLoader(
            ds, batch_size=cfg.train.batch_size,
            num_workers=cfg.train.workers, pin_memory=True, shuffle=True)
torch.utils.data.DataLoader(
            ds, batch_size=cfg.train.batch_size,
            num_workers=cfg.train.workers, pin_memory=True, shuffle=False)
https://github.com/duke-vision/semantic-unsup-flow-release/blob/aaf1bae68ad181e0ab0f93912d89007edf51bcc2/test.py#L53
https://github.com/duke-vision/semantic-unsup-flow-release/blob/aaf1bae68ad181e0ab0f93912d89007edf51bcc2/train.py#L40
https://github.com/duke-vision/semantic-unsup-flow-release/blob/aaf1bae68ad181e0ab0f93912d89007edf51bcc2/train.py#L46

=============================================
https://github.com/qianduoduolr/Spa-then-Temp
=============================================

Found 2 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=pin_memory,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        drop_last=drop_last,
        **kwargs)
https://github.com/qianduoduolr/Spa-then-Temp/blob/4c943628aae9b5afe4cc15eefc8a0eb800736515/vcl/datasets/builder.py#L148

==============================
https://github.com/LA30/GAFlow
==============================

Found 1 times
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
https://github.com/LA30/GAFlow/blob/3d8a9c05d63407bbad20850cf91e56cb7fb1170c/core/datasets.py#L230

===============================
https://github.com/lssiair/TUTR
===============================

Found 2 times
DataLoader(train_dataset, collate_fn=train_dataset.coll_fn, batch_size=hp_config.batch_size, shuffle=True, num_workers=args.num_works)
DataLoader(test_dataset, collate_fn=test_dataset.coll_fn, batch_size=hp_config.batch_size, shuffle=True, num_workers=args.num_works)
https://github.com/lssiair/TUTR/blob/655a756af8e961598a1a22a07cb48eb8534c722a/train.py#L68
https://github.com/lssiair/TUTR/blob/655a756af8e961598a1a22a07cb48eb8534c722a/train.py#L69

===============================
https://github.com/ispc-lab/TMA
===============================

Found 2 times
data.DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=num_workers,
        shuffle=True,
        drop_last=True)
data.DataLoader(
        dset,
        batch_size=batch_size,
        num_workers=num_workers,
        shuffle=True,
        drop_last=True)
https://github.com/ispc-lab/TMA/blob/270157f995e83a0e10af3a19b903239f6c83d8a9/datasets/DSEC_split_loader.py#L83
https://github.com/ispc-lab/TMA/blob/270157f995e83a0e10af3a19b903239f6c83d8a9/datasets/DSECdataloader.py#L78

===============================
https://github.com/yoxu515/MITS
===============================

Found 2 times
DataLoader(seq_dataset,
                                            batch_size=1,
                                            shuffle=False,
                                            num_workers=cfg.TEST_WORKERS,
                                            pin_memory=True)
DataLoader(train_dataset,
                                       batch_size=int(cfg.TRAIN_BATCH_SIZE /
                                                      cfg.TRAIN_GPUS),
                                       shuffle=False,
                                       num_workers=cfg.DATA_WORKERS,
                                       pin_memory=True,
                                       sampler=self.train_sampler,
                                       drop_last=True,
                                       prefetch_factor=2)
https://github.com/yoxu515/MITS/blob/accda5b87dd463a3eef2bc10e64e46f31beae3ee/networks/managers/evaluator.py#L395
https://github.com/yoxu515/MITS/blob/accda5b87dd463a3eef2bc10e64e46f31beae3ee/networks/managers/trainer.py#L376

=================================================
https://github.com/facebookresearch/PoseDiffusion
=================================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_sampler=batch_sampler,
        num_workers=cfg.train.num_workers,
        pin_memory=cfg.train.pin_memory,
        persistent_workers=cfg.train.persistent_workers,
    )
https://github.com/facebookresearch/PoseDiffusion/blob/5d5c628e4889ac3c5f73e5540b44882ded69d4c1/pose_diffusion/train.py#L265

============================================
https://github.com/meaten/FlowChain-ICCV2023
============================================

Found 4 times
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=rand,
        num_workers=cfg.DATA.NUM_WORKERS,
        collate_fn=seq_collate,
        drop_last=True if split == 'train' else False,
        pin_memory=True)
DataLoader(train_set, train_batch_size, shuffle=True, num_workers=num_workers)
DataLoader(val_set, val_test_batch_size, shuffle=False, num_workers=num_workers)
DataLoader(test_set, val_test_batch_size, shuffle=False, num_workers=num_workers)
https://github.com/meaten/FlowChain-ICCV2023/blob/735e79695699073fa09adbfc4ae83b975ec917ed/src/data/unified_loader.py#L131
https://github.com/meaten/FlowChain-ICCV2023/blob/735e79695699073fa09adbfc4ae83b975ec917ed/src/models/TP/utils/data.py#L18
https://github.com/meaten/FlowChain-ICCV2023/blob/735e79695699073fa09adbfc4ae83b975ec917ed/src/models/TP/utils/data.py#L19
https://github.com/meaten/FlowChain-ICCV2023/blob/735e79695699073fa09adbfc4ae83b975ec917ed/src/models/TP/utils/data.py#L20

=====================================
https://github.com/JianghaiSCU/RealSH
=====================================

Found 3 times
DataLoader(
        train_ds,
        batch_size=params.train_batch_size,
        shuffle=True,
        num_workers=params.num_workers,
        pin_memory=params.cuda,
        drop_last=True,
        worker_init_fn=worker_init_fn)
DataLoader(
                    val_ds,
                    batch_size=params.eval_batch_size,
                    shuffle=False,
                    num_workers=params.num_workers,
                    pin_memory=params.cuda
                )
DataLoader(
                    test_ds,
                    batch_size=params.eval_batch_size,
                    shuffle=False,
                    num_workers=params.num_workers,
                    pin_memory=params.cuda
                )
https://github.com/JianghaiSCU/RealSH/blob/9105fa2a07a414a1089817024dfb65853e77a95e/dataset/data_loader.py#L224
https://github.com/JianghaiSCU/RealSH/blob/9105fa2a07a414a1089817024dfb65853e77a95e/dataset/data_loader.py#L238
https://github.com/JianghaiSCU/RealSH/blob/9105fa2a07a414a1089817024dfb65853e77a95e/dataset/data_loader.py#L246

================================================
https://github.com/MediaBrain-SJTU/JRTransformer
================================================

Found 7 times
DataLoader(dset_train, batch_size=self.batch_size, num_workers=2, shuffle=True)
DataLoader(dset_val, batch_size=self.batch_size, num_workers=2, shuffle=False)
DataLoader(dset_test, batch_size=self.batch_size, num_workers=2, shuffle=False)
DataLoader(dset_test, sampler=sampler_test, batch_size=args.batch_size, num_workers=2, drop_last=False, pin_memory=True)
DataLoader(dset_train, sampler=sampler_train, batch_size=args.batch_size, num_workers=2, drop_last=False, pin_memory=True)
DataLoader(dset_val, sampler=sampler_val, batch_size=args.batch_size, num_workers=2, drop_last=False, pin_memory=True)
DataLoader(dset_test, sampler=sampler_test, batch_size=args.batch_size, num_workers=2, drop_last=False, pin_memory=True)
https://github.com/MediaBrain-SJTU/JRTransformer/blob/3765b17cb8b7ba1adfdec42839732fe93a0cebb3/pretrain_amass.py#L45
https://github.com/MediaBrain-SJTU/JRTransformer/blob/3765b17cb8b7ba1adfdec42839732fe93a0cebb3/pretrain_amass.py#L49
https://github.com/MediaBrain-SJTU/JRTransformer/blob/3765b17cb8b7ba1adfdec42839732fe93a0cebb3/pretrain_amass.py#L53
https://github.com/MediaBrain-SJTU/JRTransformer/blob/3765b17cb8b7ba1adfdec42839732fe93a0cebb3/test_3dpw.py#L38
https://github.com/MediaBrain-SJTU/JRTransformer/blob/3765b17cb8b7ba1adfdec42839732fe93a0cebb3/train_3dpw.py#L45
https://github.com/MediaBrain-SJTU/JRTransformer/blob/3765b17cb8b7ba1adfdec42839732fe93a0cebb3/train_3dpw.py#L50
https://github.com/MediaBrain-SJTU/JRTransformer/blob/3765b17cb8b7ba1adfdec42839732fe93a0cebb3/train_3dpw.py#L55

========================================================
https://github.com/3d-motion-magnification/3d-motion-mag
========================================================

Found 1 times
torch.utils.data.DataLoader(
        dset, num_workers=4, prefetch_factor=4, pin_memory=True,
        batch_size=None, worker_init_fn=init_dloader_random)
https://github.com/3d-motion-magnification/3d-motion-mag/blob/29f513a586c900001f8ac759dc518b16a4abccb8/magnerf/runners/static_trainer.py#L209

====================================
https://github.com/boomluo02/ADMFlow
====================================

Found 1 times
DataLoader(dataset=Test_dataset,
                                batch_size=1,
                                shuffle=False,
                                num_workers=args.workers)
https://github.com/boomluo02/ADMFlow/blob/0e4491364cb706cfb536db2c6a9ff494416d6880/loader/MVSEC_encoder.py#L220

==========================================
https://github.com/DavidYan2001/Deep_RS-HM
==========================================

Found 4 times
DataLoader(TestingData, batch_size=1,shuffle=False)
DataLoader(TrainingData, batch_size=args.batch_size, shuffle=True, num_workers=16)
DataLoader(ValidationData, batch_size=args.batch_size, num_workers=4)
DataLoader(flowdata, batch_size=1, shuffle=True)
https://github.com/DavidYan2001/Deep_RS-HM/blob/7b47025bdc3a20b1eec63845e85ef63b251a6492/test_RS_dewarp_CAdata.py#L109
https://github.com/DavidYan2001/Deep_RS-HM/blob/7b47025bdc3a20b1eec63845e85ef63b251a6492/train.py#L41
https://github.com/DavidYan2001/Deep_RS-HM/blob/7b47025bdc3a20b1eec63845e85ef63b251a6492/train.py#L43
https://github.com/DavidYan2001/Deep_RS-HM/blob/7b47025bdc3a20b1eec63845e85ef63b251a6492/RS_Homo/CA/homoflow2basis.py#L62

=================================
https://github.com/MCG-NJU/MeMOTR
=================================

Found 2 times
DataLoader(self.dataset, batch_size=1, num_workers=4, shuffle=False)
DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=collate_fn,
        pin_memory=True
    )
https://github.com/MCG-NJU/MeMOTR/blob/ac32339bf22f9e0ec51f41031013232eaa8c1d14/submit_engine.py#L46
https://github.com/MCG-NJU/MeMOTR/blob/ac32339bf22f9e0ec51f41031013232eaa8c1d14/data/__init__.py#L51

=========================================
https://github.com/slothfulxtx/MBPTrack3D
=========================================

Found 3 times
DataLoader(
            train_dataset,
            batch_size=cfg.train_cfg.batch_size,
            pin_memory=True,
            num_workers=cfg.train_cfg.num_workers,
            shuffle=True,
            drop_last=True
        )
DataLoader(
            val_dataset,
            shuffle=False,
            batch_size=cfg.eval_cfg.batch_size,
            pin_memory=False,
            num_workers=cfg.eval_cfg.num_workers,
            collate_fn=lambda x: x
        )
DataLoader(
            test_dataset,
            shuffle=False,
            batch_size=cfg.eval_cfg.batch_size,
            pin_memory=False,
            num_workers=cfg.eval_cfg.num_workers,
            collate_fn=lambda x: x
        )
https://github.com/slothfulxtx/MBPTrack3D/blob/e5670d122a8fc129189ef826ec470bbeb51eb5ef/main.py#L135
https://github.com/slothfulxtx/MBPTrack3D/blob/e5670d122a8fc129189ef826ec470bbeb51eb5ef/main.py#L143
https://github.com/slothfulxtx/MBPTrack3D/blob/e5670d122a8fc129189ef826ec470bbeb51eb5ef/main.py#L199

===================================
https://github.com/Garfield-kh/TM2D
===================================

Found 20 times
DataLoader(aud_dataset, batch_size=1, num_workers=1, shuffle=False, pin_memory=True)
DataLoader(aud_dataset, batch_size=1, num_workers=1, shuffle=False, pin_memory=True)
DataLoader(t2m_dataset, batch_size=opt.batch_size, num_workers=1, pin_memory=True)
DataLoader(all_dataset, batch_size=1, num_workers=1, pin_memory=True)
DataLoader(train_dataset_a2d, batch_size=opt.batch_size, drop_last=True, num_workers=4,
                              shuffle=True, pin_memory=True)
DataLoader(val_dataset_a2d, batch_size=16, drop_last=True, num_workers=4,
                            shuffle=True, pin_memory=True)
DataLoader(train_dataset, batch_size=opt.batch_size, drop_last=True, num_workers=4,
                              shuffle=True, pin_memory=True)
DataLoader(val_dataset, batch_size=16, drop_last=True, num_workers=4,
                            shuffle=True, pin_memory=True)
DataLoader(train_dataset, batch_size=opt.batch_size, drop_last=True, num_workers=4,
                              shuffle=True, pin_memory=True)
DataLoader(val_dataset, batch_size=opt.batch_size, drop_last=True, num_workers=4,
                            shuffle=True, pin_memory=True)
DataLoader(dataset, batch_size=batch_size, num_workers=4, drop_last=True,
                                collate_fn=collate_fn, shuffle=True)
DataLoader(dataset, batch_size=batch_size, num_workers=4, drop_last=True,
                                collate_fn=collate_fn, shuffle=True)
DataLoader(dataset, batch_size=batch_size, num_workers=4, drop_last=True,
                                collate_fn=collate_fn, shuffle=True)
DataLoader(dataset, batch_size=batch_size, collate_fn=collate_fn, drop_last=True, num_workers=4)
DataLoader(mm_dataset, batch_size=1, num_workers=1)
DataLoader(dataset, batch_size=batch_size, num_workers=4, collate_fn=collate_fn, shuffle=True)
DataLoader(dataset, batch_size=batch_size, num_workers=4, collate_fn=collate_fn, shuffle=True)
DataLoader(dataset, batch_size=batch_size, num_workers=4, drop_last=True,
                                collate_fn=collate_fn, shuffle=True)
DataLoader(dataset, batch_size=1, num_workers=1, shuffle=True)
DataLoader(dataset, batch_size=batch_size, collate_fn=collate_fn, drop_last=True, num_workers=4)
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/evaluate_atm_transformer_byatmv2_a2m_wild.py#L173
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/evaluate_atm_transformer_byatmv5_lf3_withScoreV3.py#L234
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/evaluate_atm_transformer_byatmv5_lf3_withScoreV3.py#L239
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/tokenize_script_dance.py#L113
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/train_a2d_transformer_v5.py#L139
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/train_a2d_transformer_v5.py#L141
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/train_atm_transformer_v5.py#L171
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/train_atm_transformer_v5.py#L173
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/train_vq_tokenizer_v3.py#L142
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/train_vq_tokenizer_v3.py#L144
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/motion_loaders/dataset_motion_loader.py#L21
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/motion_loaders/dataset_motion_loader.py#L34
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/motion_loaders/dataset_motion_loader.py#L89
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/motion_loaders/model_motion_loaders.py#L71
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/motion_loaders/model_motion_loaders.py#L72
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/motion_loaders/t2m_seq2seq_model_dataset.py#L52
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/motion_loaders/txm_transformer_model_dataset.py#L146
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/text_loaders/dataset_text_loader.py#L33
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/text_loaders/m2t_nmt_model_dataset.py#L51
https://github.com/Garfield-kh/TM2D/blob/eb331053a2bcb1b863cd5fa0a0c635bad44971a5/tm2d_60fps/text_loaders/model_text_loaders.py#L28

=====================================
https://github.com/Jaraxxus-Me/PVT_pp
=====================================

Found 1 times
DataLoader(train_dataset,
                              batch_size=cfg.TRAIN.BATCH_SIZE,
                              num_workers=cfg.TRAIN.NUM_WORKERS,
                              pin_memory=True,
                              sampler=train_sampler)
https://github.com/Jaraxxus-Me/PVT_pp/blob/d71cad0ed0bfede979469088704f6ba1d5a6f38c/tools/train.py#L70

===================================
https://github.com/danqu130/RPEFlow
===================================

Found 6 times
torch.utils.data.DataLoader(
            dataset=self.test_dataset,
            batch_size=self.cfgs.model.batch_size,
            num_workers=self.cfgs.testset.n_workers
        )
torch.utils.data.DataLoader(
            dataset=self.test_dataset,
            batch_size=self.cfgs.model.batch_size,
            num_workers=self.cfgs.testset.n_workers
        )
torch.utils.data.DataLoader(
            dataset=self.train_dataset,
            batch_size=self.cfgs.model.batch_size,
            shuffle=(self.train_sampler is None),
            num_workers=self.cfgs.trainset.n_workers,
            pin_memory=True,
            sampler=self.train_sampler,
            drop_last=self.cfgs.trainset.drop_last,
        )
torch.utils.data.DataLoader(
            dataset=self.val_dataset,
            batch_size=self.cfgs.model.batch_size,
            shuffle=False,
            num_workers=self.cfgs.valset.n_workers,
            pin_memory=True,
            sampler=self.val_sampler,
        )
torch.utils.data.DataLoader(dataset=preprocessor, num_workers=8)
torch.utils.data.DataLoader(dataset=preprocessor, num_workers=4)
https://github.com/danqu130/RPEFlow/blob/4c9fb5dd4cf0d738b38620ba9ee5ac62a354f67f/eval_noocc.py#L23
https://github.com/danqu130/RPEFlow/blob/4c9fb5dd4cf0d738b38620ba9ee5ac62a354f67f/eval_withocc.py#L25
https://github.com/danqu130/RPEFlow/blob/4c9fb5dd4cf0d738b38620ba9ee5ac62a354f67f/train.py#L82
https://github.com/danqu130/RPEFlow/blob/4c9fb5dd4cf0d738b38620ba9ee5ac62a354f67f/train.py#L95
https://github.com/danqu130/RPEFlow/blob/4c9fb5dd4cf0d738b38620ba9ee5ac62a354f67f/scripts/convert_flyingthings3d_subset_hdf5.py#L109
https://github.com/danqu130/RPEFlow/blob/4c9fb5dd4cf0d738b38620ba9ee5ac62a354f67f/scripts/convert_kubric_hdf5.py#L188

================================
https://github.com/cwc1260/MSBRN
================================

Found 3 times
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers,
        pin_memory=True,
        worker_init_fn=lambda x: np.random.seed((torch.initial_seed()) % (2 ** 32))
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=args.workers,
        pin_memory=True,
        # worker_init_fn=lambda x: np.random.seed((torch.initial_seed()) % (2 ** 32))
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers,
        pin_memory=True,
        worker_init_fn=lambda x: np.random.seed((torch.initial_seed()) % (2 ** 32))
    )
https://github.com/cwc1260/MSBRN/blob/0eae5854d59cc78f8997d17abc1b09a1a7b8864a/evaluate.py#L80
https://github.com/cwc1260/MSBRN/blob/0eae5854d59cc78f8997d17abc1b09a1a7b8864a/train_msbrn.py#L78
https://github.com/cwc1260/MSBRN/blob/0eae5854d59cc78f8997d17abc1b09a1a7b8864a/train_msbrn.py#L96

====================================
https://github.com/chengche6230/ReST
====================================

Found 3 times
DataLoader(train_dataset, self.cfg.SOLVER.BATCH_SIZE, shuffle=True, collate_fn=udf_collate_fn, drop_last=True)
DataLoader(eval_dataset, self.cfg.SOLVER.BATCH_SIZE, collate_fn=udf_collate_fn)
DataLoader(test_dataset, 1, collate_fn=udf_collate_fn)
https://github.com/chengche6230/ReST/blob/b166d4d3f2e73390b7c8df634ccca39a6de62417/src/tracker.py#L111
https://github.com/chengche6230/ReST/blob/b166d4d3f2e73390b7c8df634ccca39a6de62417/src/tracker.py#L112
https://github.com/chengche6230/ReST/blob/b166d4d3f2e73390b7c8df634ccca39a6de62417/src/tracker.py#L134

=========================================
https://github.com/sanjayss34/lm-listener
=========================================

Found 4 times
torch.utils.data.DataLoader(Text2MotionDataset(dataset_name, is_test, w_vectorizer, unit_length=unit_length),
                                              batch_size,
                                              shuffle = True,
                                              num_workers=num_workers,
                                              collate_fn=collate_fn,
                                              drop_last = True)
torch.utils.data.DataLoader(Text2MotionDataset(dataset_name, codebook_size = codebook_size, tokenizer_name = tokenizer_name, unit_length=unit_length, split=split, max_motion_length=max_motion_length, 
                                                                  evaluation=evaluation, gpt2_config=gpt2_config, no_text=no_text, max_tokens=max_tokens, no_before_text=no_before_text, max_time_before=max_time_before,
                                                                  fps=fps,
                                                                  fixed_text_token=fixed_text_token, fixed_text_token_not_space=fixed_text_token_not_space, fixed_text_token_not_punctuation=fixed_text_token_not_punctuation, unaligned_text=unaligned_text, remove_space_before_vq_tokens=remove_space_before_vq_tokens, random_text_token_order=random_text_token_order),
                                              batch_size,
                                              shuffle=True,
                                              num_workers=num_workers,
                                              #collate_fn=collate_fn,
                                              drop_last = False)
torch.utils.data.DataLoader(trainSet,
                                              batch_size,
                                              shuffle=True,
                                              #sampler=sampler,
                                              num_workers=num_workers,
                                              #collate_fn=collate_fn,
                                              drop_last = (split == "train"))
torch.utils.data.DataLoader(VQMotionDataset(dataset_name, unit_length=unit_length, split=split, max_motion_length=max_motion_length, delay_start_frames=delay_start_frames, fps=fps, min_length=min_length),
                                              batch_size,
                                              shuffle=True,
                                              num_workers=num_workers,
                                              #collate_fn=collate_fn,
                                              drop_last = True)
https://github.com/sanjayss34/lm-listener/blob/53ce4ecc6e1173974c3d9e49f9dabc6c100979e8/dataset/dataset_TM_eval.py#L208
https://github.com/sanjayss34/lm-listener/blob/53ce4ecc6e1173974c3d9e49f9dabc6c100979e8/dataset/dataset_TM_train.py#L355
https://github.com/sanjayss34/lm-listener/blob/53ce4ecc6e1173974c3d9e49f9dabc6c100979e8/dataset/dataset_VQ.py#L127
https://github.com/sanjayss34/lm-listener/blob/53ce4ecc6e1173974c3d9e49f9dabc6c100979e8/dataset/dataset_tokenize.py#L141

=============================
https://github.com/h2xlab/XVO
=============================

Found 1 times
DataLoader(
                    dataset, 
                    batch_size=par.batch_size, 
                    shuffle=False, 
                    num_workers=par.n_processors,
                    pin_memory=True,
                )
https://github.com/h2xlab/XVO/blob/e38781db39103b040382d7bcede7c2ad628a76f2/test.py#L95

===================================================
https://github.com/cv-stuttgart/DistractingDownpour
===================================================

Found 4 times
DataLoader(dataset, batch_size=batch_size, shuffle=shuffle)
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=128, drop_last=True)
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=args.batch_size, drop_last=True)
data.DataLoader(sintel_clean, batch_size=1, 
        pin_memory=False, shuffle=True, num_workers=1, drop_last=True)
https://github.com/cv-stuttgart/DistractingDownpour/blob/8c5e8e19baf8847382d50d089348b5a6d2ed6664/helper_functions/ownutilities.py#L275
https://github.com/cv-stuttgart/DistractingDownpour/blob/8c5e8e19baf8847382d50d089348b5a6d2ed6664/models/FlowFormer/core/datasets.py#L231
https://github.com/cv-stuttgart/DistractingDownpour/blob/8c5e8e19baf8847382d50d089348b5a6d2ed6664/models/FlowFormer/core/utils/datasets.py#L462
https://github.com/cv-stuttgart/DistractingDownpour/blob/8c5e8e19baf8847382d50d089348b5a6d2ed6664/models/FlowFormer/core/utils/datasets.py#L474

==================================
https://github.com/microsoft/Cream
==================================

Found 140 times
torch.utils.data.DataLoader(
        dataset_test, batch_size=int(2 * args.batch_size),
        sampler=sampler_test, num_workers=args.num_workers,
        pin_memory=args.pin_mem, drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_val, batch_size=int(2 * args.batch_size),
        sampler=sampler_val, num_workers=args.num_workers,
        pin_memory=args.pin_mem, drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, batch_size=int(2 * args.batch_size),
        sampler=sampler_val, num_workers=args.num_workers,
        pin_memory=args.pin_mem, drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_val, batch_size=int(2 * args.batch_size),
        sampler=sampler_val, num_workers=args.num_workers,
        pin_memory=args.pin_mem, drop_last=False
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=imgs_per_gpu),
        pin_memory=False,
        **kwargs)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler_train,
        #sampler=_sampler.SubsetRandomSampler(indices[split:]),
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=imgs_per_gpu),
        pin_memory=False,
        **kwargs)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler_val,
        #sampler=_sampler.SubsetRandomSampler(indices[:split]),
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=imgs_per_gpu),
        pin_memory=False,
        **kwargs)
DataLoader(train_set, batch_size=args.batch_size, shuffle=False, sampler=train_sampler, **kwargs)
DataLoader(val_set, batch_size=args.batch_size, shuffle=False, sampler=val_sampler, **kwargs)
DataLoader(test_set, batch_size=args.batch_size, shuffle=False, sampler=test_sampler, **kwargs)
DataLoader(train_set, batch_size=args.batch_size, shuffle=False, sampler=train_sampler, **kwargs)
DataLoader(val_set, batch_size=max(1, args.batch_size//4), shuffle=False, sampler=val_sampler, num_workers=args.workers, pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size, shuffle=False, sampler=train_sampler, **kwargs)
DataLoader(val_set, batch_size=max(1, args.batch_size//4), shuffle=False, sampler=val_sampler, num_workers=args.workers, pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size, shuffle=False, sampler=train_sampler, **kwargs)
DataLoader(val_set, batch_size=args.batch_size*4, shuffle=False, sampler=val_sampler, num_workers=args.workers, pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, **kwargs)
DataLoader(val_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(train_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(val_set, batch_size=max(1, args.batch_size//4), shuffle=False, num_workers=args.workers, pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(val_set, batch_size=max(1, args.batch_size//4), shuffle=False, num_workers=args.workers, pin_memory=True, drop_last=False)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, **kwargs)
DataLoader(val_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, **kwargs)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, **kwargs)
DataLoader(val_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(test_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(cityscapes_train, batch_size=2, shuffle=True, num_workers=2)
DataLoader(coco_val, batch_size=4, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(dataset, batch_size=2, shuffle=True, num_workers=0)
DataLoader(cityscapes_train, batch_size=2, shuffle=True, num_workers=2)
DataLoader(voc_train, batch_size=5, shuffle=True, num_workers=0)
DataLoader(sbd_train, batch_size=2, shuffle=True, num_workers=2)
torch.utils.data.DataLoader(
        dataset,
        num_workers=config.DATALOADER.NUM_WORKERS,
        batch_sampler=batch_sampler,
        worker_init_fn=worker_init_reset_seed,
    )
torch.utils.data.DataLoader(
        dataset,
        num_workers=config.DATALOADER.NUM_WORKERS,
        batch_sampler=batch_sampler,
    )
data.DataLoader(train_dataset,
                                   batch_size=batch_size,
                                   sampler = train_sampler,
                                   num_workers=config.num_workers if worker is None else worker,
                                   # drop_last=True,
                                   # shuffle=is_shuffle,
                                   pin_memory=True)
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=valid_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        test_data, batch_size=config.batch_size,
        sampler=test_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=valid_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        test_data, batch_size=config.batch_size,
        sampler=test_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=valid_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        test_data, batch_size=config.batch_size,
        sampler=test_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=valid_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        train_data, batch_size=config.batch_size,
        sampler=train_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        test_data, batch_size=config.batch_size,
        sampler=test_sampler,
        pin_memory=True, num_workers=config.workers)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=args.workers,
        sampler=sampler,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        # modified for TinyViT, we save logits of all samples
        drop_last=not config.DISTILL.SAVE_TEACHER_LOGITS,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/AutoFormer/evolution.py#L502
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/AutoFormer/evolution.py#L508
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/AutoFormer/supernet_train.py#L231
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/AutoFormer/supernet_train.py#L239
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/AutoFormerV2/evaluation.py#L219
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_detection/mmdet/datasets/loader/build_loader.py#L38
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_detection/mmdet/datasets/loader/build_loader.py#L81
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_detection/mmdet/datasets/loader/build_loader.py#L91
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L15
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L21
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L22
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L41
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L58
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L81
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L102
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L133
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L161
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L176
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L177
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L199
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L215
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L237
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L257
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L268
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L269
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L278
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L279
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L280
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/__init__.py#L281
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/datasets/cityscapes.py#L130
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/datasets/coco.py#L137
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/datasets/combine_dbs.py#L78
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/datasets/kd.py#L115
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/datasets/pascal.py#L119
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/dataloaders/datasets/sbd.py#L105
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/segmentation/data/build.py#L124
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/segmentation/data/build.py#L149
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/train/dataloader.py#L85
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/CDARTS_segmentation/train/train_ade20k_cydas.py#L233
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/cifar.py#L62
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/cifar.py#L67
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/cifar.py#L92
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/cifar.py#L97
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/imagenet.py#L40
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/imagenet.py#L45
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/imagenet.py#L91
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/benchmark201/datasets/imagenet.py#L96
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/cifar.py#L61
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/cifar.py#L66
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/cifar.py#L91
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/cifar.py#L96
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/imagenet.py#L40
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/imagenet.py#L45
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/imagenet.py#L91
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/CDARTS/lib/datasets/imagenet.py#L96
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/EfficientViT/classification/main.py#L238
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/EfficientViT/classification/main.py#L249
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/MiniViT/Mini-DeiT/main.py#L234
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/MiniViT/Mini-DeiT/main.py#L242
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/MiniViT/Mini-Swin/data/build.py#L41
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/MiniViT/Mini-Swin/data/build.py#L49
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/TinyCLIP/src/training/data.py#L170
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/TinyCLIP/src/training/data.py#L486
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/TinyCLIP/src/training/data.py#L537
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/TinyViT/data/build.py#L80
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/TinyViT/data/build.py#L89
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/iRPE/DETR-with-iRPE/main.py#L160
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/iRPE/DETR-with-iRPE/main.py#L162
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/iRPE/DeiT-with-iRPE/main.py#L235
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/iRPE/DeiT-with-iRPE/main.py#L243

==============================
https://github.com/mlvlab/DAPT
==============================

Found 3 times
torch.utils.data.DataLoader(
        dataset_wrapper(cfg, data_source, transform=tfm, is_train=is_train),
        batch_size=batch_size,
        sampler=sampler,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        drop_last=is_train and len(data_source) >= batch_size,
        pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA)
    )
torch.utils.data.DataLoader(
                DatasetWrapper(cfg, partial_train, transform=tfm, is_train=True),
                batch_size=len(partial_train)*cfg.DATASET.NUM_SHOTS,
                sampler=partial_sampler,
                num_workers=cfg.DATALOADER.NUM_WORKERS,
                drop_last=False,
                pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA)
            )
torch.utils.data.DataLoader(
            DatasetWrapper(cfg, train, transform=tfm, is_train=True),
            batch_size=len(train)*cfg.DATASET.NUM_SHOTS,
            sampler=sampler,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            drop_last=False,
            pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA)
        )
https://github.com/mlvlab/DAPT/blob/cacb311eee17acb0781e9c0aec628b57c112cd5e/Dassl.pytorch/dassl/data/data_manager.py#L38
https://github.com/mlvlab/DAPT/blob/cacb311eee17acb0781e9c0aec628b57c112cd5e/trainers/dapt.py#L96
https://github.com/mlvlab/DAPT/blob/cacb311eee17acb0781e9c0aec628b57c112cd5e/trainers/dapt.py#L127

================================
https://github.com/mdswyz/DiCMoR
================================

Found 1 times
DataLoader(datasets[ds],
                       batch_size=args['batch_size'],
                       num_workers=num_workers,
                       shuffle=True)
https://github.com/mdswyz/DiCMoR/blob/3d7e617ea173232ee8ae652a7fe7964d4b4485e1/data_loader.py#L151

========================================================
https://github.com/ZHU-Zhiyu/High-Rank_RGB-Event_Tracker
========================================================

Found 10 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False,
    )
DataLoader(dataset, config.DATA.BATCH_SIZE, sampler=sampler, num_workers=config.DATA.NUM_WORKERS, pin_memory=True, drop_last=True, collate_fn=collate_fn)
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False,
    )
DataLoader(dataset, config.DATA.BATCH_SIZE, sampler=sampler, num_workers=config.DATA.NUM_WORKERS, pin_memory=True, drop_last=True, collate_fn=collate_fn)
https://github.com/ZHU-Zhiyu/High-Rank_RGB-Event_Tracker/blob/98aef78ab45f5b0b3166b6fbb7107538ca391ae8/HRMonTrack/Base/ltr/models/backbone/data/build.py#L69
https://github.com/ZHU-Zhiyu/High-Rank_RGB-Event_Tracker/blob/98aef78ab45f5b0b3166b6fbb7107538ca391ae8/HRMonTrack/Base/ltr/models/backbone/data/build.py#L77
https://github.com/ZHU-Zhiyu/High-Rank_RGB-Event_Tracker/blob/98aef78ab45f5b0b3166b6fbb7107538ca391ae8/HRMonTrack/Base/ltr/models/backbone/data/data_simmim_ft.py#L33
https://github.com/ZHU-Zhiyu/High-Rank_RGB-Event_Tracker/blob/98aef78ab45f5b0b3166b6fbb7107538ca391ae8/HRMonTrack/Base/ltr/models/backbone/data/data_simmim_ft.py#L41
https://github.com/ZHU-Zhiyu/High-Rank_RGB-Event_Tracker/blob/98aef78ab45f5b0b3166b6fbb7107538ca391ae8/HRMonTrack/Base/ltr/models/backbone/data/data_simmim_pt.py#L97
https://github.com/ZHU-Zhiyu/High-Rank_RGB-Event_Tracker/blob/98aef78ab45f5b0b3166b6fbb7107538ca391ae8/HRMonTrack/Tiny/ltr/models/backbone/data/build.py#L69
https://github.com/ZHU-Zhiyu/High-Rank_RGB-Event_Tracker/blob/98aef78ab45f5b0b3166b6fbb7107538ca391ae8/HRMonTrack/Tiny/ltr/models/backbone/data/build.py#L77
https://github.com/ZHU-Zhiyu/High-Rank_RGB-Event_Tracker/blob/98aef78ab45f5b0b3166b6fbb7107538ca391ae8/HRMonTrack/Tiny/ltr/models/backbone/data/data_simmim_ft.py#L33
https://github.com/ZHU-Zhiyu/High-Rank_RGB-Event_Tracker/blob/98aef78ab45f5b0b3166b6fbb7107538ca391ae8/HRMonTrack/Tiny/ltr/models/backbone/data/data_simmim_ft.py#L41
https://github.com/ZHU-Zhiyu/High-Rank_RGB-Event_Tracker/blob/98aef78ab45f5b0b3166b6fbb7107538ca391ae8/HRMonTrack/Tiny/ltr/models/backbone/data/data_simmim_pt.py#L97

=================================
https://github.com/mshukor/eP-ALM
=================================

Found 17 times
torch.utils.data.DataLoader(
            dataset,
            batch_sampler=batch_sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=(False if sampler else shuffle),
            sampler=sampler,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=(train_sampler is None),
            num_workers=workers, pin_memory=True, sampler=train_sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size, shuffle=False,
            num_workers=workers, pin_memory=True,
            sampler=None,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(train_sampler is None),
            num_workers=workers, pin_memory=True, sampler=train_sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size, shuffle=False,
            num_workers=workers, pin_memory=True,
            sampler=None,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(train_sampler is None),
            num_workers=workers, pin_memory=True, sampler=train_sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size, shuffle=False,
            num_workers=workers, pin_memory=True,
            sampler=None,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=(train_sampler is None),
            num_workers=workers, pin_memory=True, sampler=train_sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size, shuffle=False,
            num_workers=workers, pin_memory=True,
            sampler=None,
            collate_fn=dataset.collate_fn,
            drop_last=False)
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/TimeSformer/timesformer/datasets/loader.py#L91
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/TimeSformer/timesformer/datasets/loader.py#L102
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/audio_caption.py#L343
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/audio_caption.py#L348
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/caption.py#L293
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/caption.py#L298
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/gqa.py#L283
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/gqa.py#L288
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/video_caption.py#L316
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/video_caption.py#L321
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/video_vqa.py#L286
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/video_vqa.py#L291
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/vqa.py#L360
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/vqa.py#L365
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/.ipynb_checkpoints/__init__-checkpoint.py#L54
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/.ipynb_checkpoints/caption-checkpoint.py#L580
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/dataset/.ipynb_checkpoints/caption-checkpoint.py#L585

============================================
https://github.com/mchiquier/musclesinaction
============================================

Found 7 times
torch.utils.data.DataLoader(
    val_aug_dataset, batch_size=args.bs, num_workers=args.num_workers,
    shuffle=True, worker_init_fn=_seed_worker, drop_last=True, pin_memory=False)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.bs, num_workers=args.num_workers,
        shuffle=True, worker_init_fn=_seed_worker, drop_last=True, pin_memory=False)
torch.utils.data.DataLoader(
    val_aug_dataset, batch_size=args.bs, num_workers=args.num_workers,
    shuffle=True, worker_init_fn=_seed_worker, drop_last=True, pin_memory=False)
torch.utils.data.DataLoader(
    val_aug_dataset, batch_size=args.bs, num_workers=args.num_workers,
    shuffle=True, worker_init_fn=_seed_worker, drop_last=True, pin_memory=False)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.bs, num_workers=args.num_workers,
        shuffle=True, worker_init_fn=_seed_worker, drop_last=True, pin_memory=False)
torch.utils.data.DataLoader(
    val_aug_dataset, batch_size=args.bs, num_workers=args.num_workers,
    shuffle=True, worker_init_fn=_seed_worker, drop_last=True, pin_memory=False)
torch.utils.data.DataLoader(
        test_dataset, batch_size=test_args.batch_size, num_workers=test_args.num_workers,
        shuffle=True, worker_init_fn=_seed_worker, drop_last=True, pin_memory=False)
https://github.com/mchiquier/musclesinaction/blob/acd31dd3302b3c64a2cb19b1dc81143dea606fba/musclesinaction/dataloader/data.py#L54
https://github.com/mchiquier/musclesinaction/blob/acd31dd3302b3c64a2cb19b1dc81143dea606fba/musclesinaction/dataloader/data.py#L62
https://github.com/mchiquier/musclesinaction/blob/acd31dd3302b3c64a2cb19b1dc81143dea606fba/musclesinaction/dataloader/data.py#L86
https://github.com/mchiquier/musclesinaction/blob/acd31dd3302b3c64a2cb19b1dc81143dea606fba/musclesinaction/dataloader/data2.py#L80
https://github.com/mchiquier/musclesinaction/blob/acd31dd3302b3c64a2cb19b1dc81143dea606fba/musclesinaction/dataloader/data2.py#L88
https://github.com/mchiquier/musclesinaction/blob/acd31dd3302b3c64a2cb19b1dc81143dea606fba/musclesinaction/dataloader/data2.py#L112
https://github.com/mchiquier/musclesinaction/blob/acd31dd3302b3c64a2cb19b1dc81143dea606fba/musclesinaction/dataloader/data2.py#L132

====================================
https://github.com/gengyuanmax/MeVTR
====================================

Found 4 times
DataLoader(
        activity_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        activity_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(sampler is None),
        sampler=sampler,
        drop_last=True,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
https://github.com/gengyuanmax/MeVTR/blob/f9a23428e54009767ac2651cd3b9adda8c67d036/dataloaders/data_dataloaders.py#L20
https://github.com/gengyuanmax/MeVTR/blob/f9a23428e54009767ac2651cd3b9adda8c67d036/dataloaders/data_dataloaders.py#L44
https://github.com/gengyuanmax/MeVTR/blob/f9a23428e54009767ac2651cd3b9adda8c67d036/dataloaders/data_dataloaders.py#L67
https://github.com/gengyuanmax/MeVTR/blob/f9a23428e54009767ac2651cd3b9adda8c67d036/dataloaders/data_dataloaders.py#L90

===============================
https://github.com/fawnliu/TRIS
===============================

Found 14 times
DataLoader(train_dataset,
                            batch_size=args.batch_size,
                            num_workers=2,
                            pin_memory=True,
                            sampler=train_sampler,
                            shuffle=(train_sampler is None))
DataLoader(val_dataset,
                            batch_size=1,
                            num_workers=2,
                            pin_memory=True, 
                            sampler=val_sampler,
                            shuffle=False)
DataLoader(last_trainset,
                            batch_size=1,
                            num_workers=2,
                            pin_memory=True, 
                            sampler=val_sampler)
DataLoader(train_dataset,
                            batch_size=args.batch_size,
                            num_workers=2,
                            pin_memory=True,
                            sampler=train_sampler,
                            shuffle=(train_sampler is None))
DataLoader(val_dataset,
                            batch_size=1,
                            num_workers=2,
                            pin_memory=True, 
                            sampler=val_sampler)
DataLoader(last_trainset,
                            batch_size=1,
                            num_workers=2,
                            pin_memory=True, 
                            sampler=val_sampler)
DataLoader(val_dataset,
                            batch_size=1,
                            num_workers=2,
                            pin_memory=True, 
                            sampler=val_sampler,
                            shuffle=False)
DataLoader(val_dataset,
                            batch_size=1,
                            num_workers=2,
                            pin_memory=True, 
                            sampler=val_sampler,
                            shuffle=False)
DataLoader(databin, shuffle=False, num_workers=0, pin_memory=False)
DataLoader(databin, shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=False)
DataLoader(train_dataset, batch_size=args.irn_batch_size,
                                   shuffle=True, num_workers=args.num_workers, pin_memory=True, drop_last=True)
DataLoader(infer_dataset, batch_size=args.irn_batch_size,
                                   shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(ds,
                                     batch_size=1,
                                     num_workers=0,
                                     shuffle=False,
                                     drop_last=False)
DataLoader(refcoco_train,
                            batch_size=12,
                            num_workers=2,
                            pin_memory=True,
                            sampler=None)
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/train_stage1.py#L118
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/train_stage1.py#L126
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/train_stage1.py#L234
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/train_stage2.py#L113
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/train_stage2.py#L121
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/train_stage2.py#L240
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/validate.py#L76
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/validate_referit.py#L81
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/IRNet/step_refer/cam_to_ir_label.py#L43
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/IRNet/step_refer/make_ins_seg_labels.py#L113
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/IRNet/step_refer/train_irn.py#L27
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/IRNet/step_refer/train_irn.py#L90
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/dataset/Dataset_referit.py#L173
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/dataset/ReferDataset.py#L262

===================================================================================================================
https://github.com/NMS05/Audio-Visual-Deception-Detection-DOLOS-Dataset-and-Parameter-Efficient-Crossmodal-Learning
===================================================================================================================

Found 2 times
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True,
                                      collate_fn=af_collate_fn,
                                      num_workers=4)
DataLoader(test_dataset, batch_size=args.batch_size, shuffle=True,
                                     collate_fn=af_collate_fn,
                                     num_workers=4)
https://github.com/NMS05/Audio-Visual-Deception-Detection-DOLOS-Dataset-and-Parameter-Efficient-Crossmodal-Learning/blob/8c0492a41006679f339ecadec75177eccd45fbda/scripts/train_test.py#L345
https://github.com/NMS05/Audio-Visual-Deception-Detection-DOLOS-Dataset-and-Parameter-Efficient-Crossmodal-Learning/blob/8c0492a41006679f339ecadec75177eccd45fbda/scripts/train_test.py#L348

=========================================
https://github.com/tyhuang0428/CLIP2Point
=========================================

Found 7 times
DataLoader(ModelNet40Align('train', 16), batch_size=args.batch_size, num_workers=4, shuffle=True)
DataLoader(ModelNet40Align('test'), batch_size=args.test_batch_size, num_workers=4, shuffle=True)
DataLoader(ModelNet40Ply('test'), batch_size=args.test_batch_size, num_workers=4, shuffle=True)
DataLoader(ShapeNetRender(partition='train', num_points=args.num_points), batch_size=args.batch_size, shuffle=True, num_workers=4, drop_last=True)
DataLoader(ShapeNetRender(partition='test', num_points=args.num_points), batch_size=args.test_batch_size, shuffle=True, num_workers=4)
DataLoader(ModelNet40Align(num_points=args.num_points), batch_size=args.test_batch_size, num_workers=4)
DataLoader(dataset, batch_size=args.test_batch_size, num_workers=4, shuffle=True)
https://github.com/tyhuang0428/CLIP2Point/blob/30673e73cc5fe17b3eb8676675f021459efc68dc/fewshot.py#L32
https://github.com/tyhuang0428/CLIP2Point/blob/30673e73cc5fe17b3eb8676675f021459efc68dc/fewshot.py#L33
https://github.com/tyhuang0428/CLIP2Point/blob/30673e73cc5fe17b3eb8676675f021459efc68dc/fewshot.py#L95
https://github.com/tyhuang0428/CLIP2Point/blob/30673e73cc5fe17b3eb8676675f021459efc68dc/pretraining.py#L40
https://github.com/tyhuang0428/CLIP2Point/blob/30673e73cc5fe17b3eb8676675f021459efc68dc/pretraining.py#L41
https://github.com/tyhuang0428/CLIP2Point/blob/30673e73cc5fe17b3eb8676675f021459efc68dc/pretraining.py#L42
https://github.com/tyhuang0428/CLIP2Point/blob/30673e73cc5fe17b3eb8676675f021459efc68dc/zeroshot.py#L29

======================================
https://github.com/CVMI-Lab/Speech2Lip
======================================

Found 8 times
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(
            train_dataset, batch_size=batch_size, num_workers=n_workers, shuffle=False,
            collate_fn=data.collate_remove_none, sampler=train_sampler)
torch.utils.data.DataLoader(
            train_dataset, batch_size=batch_size, num_workers=n_workers, shuffle=False,
            collate_fn=data.collate_remove_none, )
torch.utils.data.DataLoader(
            val_dataset, batch_size=batch_size_val, num_workers=n_workers,
            shuffle=False, collate_fn=data.collate_remove_none, sampler=val_sampler)
torch.utils.data.DataLoader(
            val_dataset, batch_size=1, num_workers=n_workers,
            shuffle=False, collate_fn=data.collate_remove_none,)
torch.utils.data.DataLoader(val_dataset, batch_size=batch_size_val, num_workers=n_workers, shuffle=False)
data.DataLoader(dataset=train_dataset,
                         batch_size=8, # FIXME
                         sampler=train_sampler)
data.DataLoader(train_dataset, batch_size=8,
                                    num_workers=0, drop_last=False, shuffle=True)
https://github.com/CVMI-Lab/Speech2Lip/blob/27c083f4f8f0d19a813d9ef6d1987cc967d37f4b/inference.py#L129
https://github.com/CVMI-Lab/Speech2Lip/blob/27c083f4f8f0d19a813d9ef6d1987cc967d37f4b/train.py#L103
https://github.com/CVMI-Lab/Speech2Lip/blob/27c083f4f8f0d19a813d9ef6d1987cc967d37f4b/train.py#L107
https://github.com/CVMI-Lab/Speech2Lip/blob/27c083f4f8f0d19a813d9ef6d1987cc967d37f4b/train.py#L114
https://github.com/CVMI-Lab/Speech2Lip/blob/27c083f4f8f0d19a813d9ef6d1987cc967d37f4b/train.py#L118
https://github.com/CVMI-Lab/Speech2Lip/blob/27c083f4f8f0d19a813d9ef6d1987cc967d37f4b/train.py#L122
https://github.com/CVMI-Lab/Speech2Lip/blob/27c083f4f8f0d19a813d9ef6d1987cc967d37f4b/src/data/someones_lip_dataset.py#L440
https://github.com/CVMI-Lab/Speech2Lip/blob/27c083f4f8f0d19a813d9ef6d1987cc967d37f4b/src/data/someones_lip_dataset.py#L445

==========================================
https://github.com/lihong2303/AGM_ICCV2023
==========================================

Found 12 times
DataLoader(dataset=self.train_dataset,
                          batch_size=self.cfgs.batch_size,
                          shuffle=True,
                          num_workers=64,
                          pin_memory=True)
DataLoader(dataset=self.valid_dataset,
                          batch_size=self.cfgs.batch_size,
                          shuffle=False,
                          num_workers=64,
                          pin_memory=True)
DataLoader(dataset=self.dep_dataset,
                          batch_size=self.cfgs.batch_size,
                          shuffle=False,
                          num_workers=64,
                          pin_memory=True)
DataLoader(dataset=self.train_dataset,
                            batch_size = self.cfgs.batch_size,
                            shuffle=True,
                            num_workers=32,
                            pin_memory=True)
DataLoader(dataset=self.test_dataset,
                          batch_size = self.cfgs.batch_size,
                          shuffle=False,
                          num_workers=32,
                          pin_memory=True)
DataLoader(dataset=self.dep_dataset,
                          batch_size=self.cfgs.batch_size,
                          shuffle=False,
                          num_workers=32,
                          pin_memory=True)
DataLoader(dataset=self.train_dataset,
                          batch_size=self.args.batch_size,
                          shuffle=True,
                          num_workers=32,
                          pin_memory=True)
DataLoader(dataset=self.valid_dataset,
                          batch_size=self.args.batch_size,
                          shuffle=False,
                          num_workers=32,
                          pin_memory=True)
DataLoader(dataset=self.test_dataset,
                          batch_size=self.args.batch_size,
                          shuffle=False,
                          num_workers=32,
                          pin_memory=True)
DataLoader(dataset=self.train_dataset,
                          batch_size=self.cfgs.batch_size,
                          shuffle=True,
                          num_workers=32,
                          pin_memory=True,
                          collate_fn=self.process)
DataLoader(dataset=self.valid_dataset,
                          batch_size=self.cfgs.batch_size,
                          shuffle=False,
                          num_workers=32,
                          pin_memory=True,
                          collate_fn=self.process)
DataLoader(dataset=self.test_dataset,
                          batch_size=self.cfgs.batch_size,
                          shuffle=False,
                          num_workers=32,
                          pin_memory=True,
                          collate_fn=self.process)
https://github.com/lihong2303/AGM_ICCV2023/blob/5a65542c70b1c7c15c5df291e77fa9cf2bbb9549/dataloader/AVMNIST_loader.py#L16
https://github.com/lihong2303/AGM_ICCV2023/blob/5a65542c70b1c7c15c5df291e77fa9cf2bbb9549/dataloader/AVMNIST_loader.py#L24
https://github.com/lihong2303/AGM_ICCV2023/blob/5a65542c70b1c7c15c5df291e77fa9cf2bbb9549/dataloader/AVMNIST_loader.py#L31
https://github.com/lihong2303/AGM_ICCV2023/blob/5a65542c70b1c7c15c5df291e77fa9cf2bbb9549/dataloader/CREMAD_loader.py#L22
https://github.com/lihong2303/AGM_ICCV2023/blob/5a65542c70b1c7c15c5df291e77fa9cf2bbb9549/dataloader/CREMAD_loader.py#L29
https://github.com/lihong2303/AGM_ICCV2023/blob/5a65542c70b1c7c15c5df291e77fa9cf2bbb9549/dataloader/CREMAD_loader.py#L37
https://github.com/lihong2303/AGM_ICCV2023/blob/5a65542c70b1c7c15c5df291e77fa9cf2bbb9549/dataloader/MOSEI_loader.py#L18
https://github.com/lihong2303/AGM_ICCV2023/blob/5a65542c70b1c7c15c5df291e77fa9cf2bbb9549/dataloader/MOSEI_loader.py#L25
https://github.com/lihong2303/AGM_ICCV2023/blob/5a65542c70b1c7c15c5df291e77fa9cf2bbb9549/dataloader/MOSEI_loader.py#L33
https://github.com/lihong2303/AGM_ICCV2023/blob/5a65542c70b1c7c15c5df291e77fa9cf2bbb9549/dataloader/URFunny_loader.py#L19
https://github.com/lihong2303/AGM_ICCV2023/blob/5a65542c70b1c7c15c5df291e77fa9cf2bbb9549/dataloader/URFunny_loader.py#L27
https://github.com/lihong2303/AGM_ICCV2023/blob/5a65542c70b1c7c15c5df291e77fa9cf2bbb9549/dataloader/URFunny_loader.py#L35

=====================================
https://github.com/StanfordMIMI/villa
=====================================

Found 6 times
DataLoader(**cfg.dataloader.train)
DataLoader(**cfg.dataloader.val)
DataLoader(**cfg.dataloader.train)
DataLoader(**cfg.dataloader.val)
DataLoader(**cfg.dataloader.train)
DataLoader(**cfg.dataloader.val)
https://github.com/StanfordMIMI/villa/blob/9b29196e11725b5b4b208ba34a1ae6f81f070055/villa/stage1.py#L38
https://github.com/StanfordMIMI/villa/blob/9b29196e11725b5b4b208ba34a1ae6f81f070055/villa/stage1.py#L39
https://github.com/StanfordMIMI/villa/blob/9b29196e11725b5b4b208ba34a1ae6f81f070055/villa/stage1.py#L68
https://github.com/StanfordMIMI/villa/blob/9b29196e11725b5b4b208ba34a1ae6f81f070055/villa/stage1.py#L69
https://github.com/StanfordMIMI/villa/blob/9b29196e11725b5b4b208ba34a1ae6f81f070055/villa/stage2.py#L39
https://github.com/StanfordMIMI/villa/blob/9b29196e11725b5b4b208ba34a1ae6f81f070055/villa/stage2.py#L40

================================
https://github.com/lxa9867/R2VOS
================================

Found 2 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                     drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers,
                                     pin_memory=True)
https://github.com/lxa9867/R2VOS/blob/6098a7aa2d0d728253f0c41ccb580faba56e235b/main.py#L125
https://github.com/lxa9867/R2VOS/blob/6098a7aa2d0d728253f0c41ccb580faba56e235b/main.py#L138

==============================================
https://github.com/Gorilla-Lab-SCUT/Fantasia3D
==============================================

Found 3 times
torch.utils.data.DataLoader(dataset_validate, batch_size=1, collate_fn=dataset_validate.collate)
torch.utils.data.DataLoader(dataset_train, batch_size=FLAGS.batch, collate_fn=dataset_train.collate, shuffle=False)
torch.utils.data.DataLoader(dataset_validate, batch_size=1, collate_fn=dataset_train.collate)
https://github.com/Gorilla-Lab-SCUT/Fantasia3D/blob/c5c2d0656bf4db450be9df1234d79c638ddabae6/train.py#L254
https://github.com/Gorilla-Lab-SCUT/Fantasia3D/blob/c5c2d0656bf4db450be9df1234d79c638ddabae6/train.py#L362
https://github.com/Gorilla-Lab-SCUT/Fantasia3D/blob/c5c2d0656bf4db450be9df1234d79c638ddabae6/train.py#L363

====================================
https://github.com/KevinLight831/CTP
====================================

Found 1 times
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
https://github.com/KevinLight831/CTP/blob/bed932aed5d148a360afb129542c4ced1cc92e4e/data/__init__.py#L81

================================
https://github.com/md4all/md4all
================================

Found 7 times
DataLoader(dataset=predict_dataset, batch_size=1, shuffle=False,
                                    num_workers=self.num_workers, pin_memory=True, drop_last=False)
DataLoader(dataset=self.train_dataset, batch_size=self.train_batch_size,
                                  shuffle=not self.deterministic, num_workers=self.num_workers,
                                  pin_memory=True, drop_last=False)
DataLoader(dataset=self.val_dataset, batch_size=self.val_batch_size, shuffle=False,
                                num_workers=self.num_workers, pin_memory=True, drop_last=False)
DataLoader(dataset=self.eval_dataset, batch_size=self.eval_batch_size, shuffle=False,
                                 num_workers=self.num_workers, pin_memory=True, drop_last=False)
DataLoader(dataset=self.train_dataset, batch_size=self.train_batch_size,
                                  shuffle=not self.deterministic, num_workers=self.num_workers,
                                  pin_memory=True, drop_last=False)
DataLoader(dataset=self.val_dataset, batch_size=self.val_batch_size, shuffle=False,
                                num_workers=self.num_workers, pin_memory=True, drop_last=False)
DataLoader(dataset=self.test_dataset, batch_size=self.test_batch_size, shuffle=False,
                                 num_workers=self.num_workers, pin_memory=True, drop_last=False)
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/custom_dataset.py#L78
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/nuscenes_dataset.py#L610
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/nuscenes_dataset.py#L617
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/nuscenes_dataset.py#L623
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/robotcar/robotcar_dataset.py#L397
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/robotcar/robotcar_dataset.py#L404
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/robotcar/robotcar_dataset.py#L410

===============================
https://github.com/ispc-lab/UMC
===============================

Found 2 times
torch.utils.data.DataLoader(vallset, shuffle=False, batch_size=batch_size, collate_fn=custom_collate_fn, num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(trainset, shuffle=True, batch_size=batch_size, collate_fn=custom_collate_fn, num_workers=num_workers, drop_last=True)
https://github.com/ispc-lab/UMC/blob/a2c43cd1e2f9e7d31675911c673a0a5526f03dd7/test_codet_MRSR.py#L98
https://github.com/ispc-lab/UMC/blob/a2c43cd1e2f9e7d31675911c673a0a5526f03dd7/train_codet_MRSR.py#L100

===================================
https://github.com/xiyuez2/MapPrior
===================================

Found 3 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=True, collate_fn=custom_collate)
DataLoader(self.datasets["validation"],
                          batch_size=1,
                          num_workers=self.num_workers, collate_fn=custom_collate)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, collate_fn=custom_collate)
https://github.com/xiyuez2/MapPrior/blob/c4285f783bd582d0c934c4314e5306eb73557af1/scripts/train_autoencoder.py#L187
https://github.com/xiyuez2/MapPrior/blob/c4285f783bd582d0c934c4314e5306eb73557af1/scripts/train_autoencoder.py#L191
https://github.com/xiyuez2/MapPrior/blob/c4285f783bd582d0c934c4314e5306eb73557af1/scripts/train_autoencoder.py#L196

================================================
https://github.com/autonomousvision/carla_garage
================================================

Found 3 times
DataLoader(relabel_dataset,
                          sampler=sampler,
                          batch_size=args.batch_size,
                          worker_init_fn=seed_worker,
                          generator=g_cuda,
                          num_workers=num_workers,
                          pin_memory=False,
                          drop_last=False)
DataLoader(train_set,
                                sampler=sampler_train,
                                batch_size=args.batch_size,
                                worker_init_fn=seed_worker,
                                generator=g_cuda,
                                num_workers=num_workers,
                                pin_memory=False,
                                drop_last=True)
DataLoader(val_set,
                              sampler=sampler_val,
                              batch_size=args.batch_size,
                              worker_init_fn=seed_worker,
                              generator=g_cuda,
                              num_workers=num_workers,
                              pin_memory=False,
                              drop_last=True)
https://github.com/autonomousvision/carla_garage/blob/fb4b180332e465c53095ad6de29429442664882c/team_code/relabel_dataset.py#L318
https://github.com/autonomousvision/carla_garage/blob/fb4b180332e465c53095ad6de29429442664882c/team_code/train.py#L554
https://github.com/autonomousvision/carla_garage/blob/fb4b180332e465c53095ad6de29429442664882c/team_code/train.py#L562

=========================================
https://github.com/FengZicai/Cluster3Dseg
=========================================

Found 4 times
torch.utils.data.DataLoader(
        dataset['test'],
        batch_size=1,
        sampler=sampler,
        num_workers=configs.workers_per_gpu,
        pin_memory=True,
        collate_fn=dataset['test'].collate_fn)
torch.utils.data.DataLoader(
        dataset['test'],
        batch_size=1,
        sampler=sampler,
        num_workers=configs.workers_per_gpu,
        pin_memory=True,
        collate_fn=dataset['test'].collate_fn)
torch.utils.data.DataLoader(
            dataset[split],
            batch_size=configs.batch_size,
            sampler=sampler,
            num_workers=configs.workers_per_gpu,
            pin_memory=True,
            collate_fn=dataset[split].collate_fn)
torch.utils.data.DataLoader(
            dataset[split],
            batch_size=configs.batch_size,
            sampler=sampler,
            num_workers=configs.workers_per_gpu,
            pin_memory=True,
            collate_fn=dataset[split].collate_fn)
https://github.com/FengZicai/Cluster3Dseg/blob/0ac72c20c918bba5b611097b42aeafe12ac7b887/spvnas/test_spvnas108m.py#L63
https://github.com/FengZicai/Cluster3Dseg/blob/0ac72c20c918bba5b611097b42aeafe12ac7b887/spvnas/test_spvnas108m_cluster.py#L63
https://github.com/FengZicai/Cluster3Dseg/blob/0ac72c20c918bba5b611097b42aeafe12ac7b887/spvnas/train_spvnas108m.py#L68
https://github.com/FengZicai/Cluster3Dseg/blob/0ac72c20c918bba5b611097b42aeafe12ac7b887/spvnas/train_spvnas108m_cluster.py#L68

==========================================
https://github.com/JeremyLinky/YouTube-VLN
==========================================

Found 7 times
DataLoader(
        dataset,
        shuffle=False,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=True,
    )
data.DataLoader(ImageStream(ims),
                                    num_workers=4,
                                    batch_size=2)
DataLoader(
            dataset,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            collate_fn=collate_fn,  # type: ignore
        )
DataLoader(
        train_dataset,
        sampler=train_sampler,
        batch_size=batch_size,
        num_workers=args.num_workers,
        pin_memory=True,
    )
DataLoader(
        test_dataset,
        sampler=test_sampler,
        shuffle=False,
        batch_size=batch_size,
        num_workers=args.num_workers,
        pin_memory=True,
    )
DataLoader(
            val_seen_dataset,
            sampler=val_seen_sampler,
            shuffle=False,
            batch_size=batch_size,
            num_workers=args.num_workers,
            pin_memory=True,
        )
DataLoader(
            val_unseen_dataset,
            sampler=val_unseen_sampler,
            shuffle=False,
            batch_size=batch_size,
            num_workers=args.num_workers,
            pin_memory=True,
        )
https://github.com/JeremyLinky/YouTube-VLN/blob/ca1e8c8fc30bc206dd2b72b69c102ab118996de8/test.py#L76
https://github.com/JeremyLinky/YouTube-VLN/blob/ca1e8c8fc30bc206dd2b72b69c102ab118996de8/scripts/inverse_action/main.py#L321
https://github.com/JeremyLinky/YouTube-VLN/blob/ca1e8c8fc30bc206dd2b72b69c102ab118996de8/scripts/video_process/filter_outdoor_resnet_place365.py#L293
https://github.com/JeremyLinky/YouTube-VLN/blob/ca1e8c8fc30bc206dd2b72b69c102ab118996de8/utils/dataset/dataset_init.py#L212
https://github.com/JeremyLinky/YouTube-VLN/blob/ca1e8c8fc30bc206dd2b72b69c102ab118996de8/utils/dataset/dataset_init.py#L219
https://github.com/JeremyLinky/YouTube-VLN/blob/ca1e8c8fc30bc206dd2b72b69c102ab118996de8/utils/dataset/dataset_init.py#L228
https://github.com/JeremyLinky/YouTube-VLN/blob/ca1e8c8fc30bc206dd2b72b69c102ab118996de8/utils/dataset/dataset_init.py#L236

=============================
https://github.com/hustvl/VAD
=============================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/hustvl/VAD/blob/1ede800a517653837faf78b5ec1c3b5fc3ec77b5/projects/mmdet3d_plugin/datasets/builder.py#L88

=====================================================================
https://github.com/YaoChengTang/Sparse-Point-Guided-3D-Lane-Detection
=====================================================================

Found 3 times
DataLoader(transformed_dataset,
                                        batch_size=args.batch_size, 
                                        sampler=data_sampler,
                                        num_workers=args.nworkers, 
                                        pin_memory=True,
                                        persistent_workers=True,
                                        worker_init_fn=seed_worker,
                                        generator=g,
                                        drop_last=True)
DataLoader(transformed_dataset,
                                        batch_size=args.batch_size, 
                                        sampler=data_sampler,
                                        num_workers=args.nworkers, 
                                        pin_memory=True,
                                        persistent_workers=True,
                                        worker_init_fn=seed_worker,
                                        generator=g)
DataLoader(transformed_dataset,
                                batch_size=args.batch_size, sampler=data_sampler,
                                num_workers=args.nworkers, pin_memory=True,
                                persistent_workers=True,
                                worker_init_fn=seed_worker,
                                generator=g)
https://github.com/YaoChengTang/Sparse-Point-Guided-3D-Lane-Detection/blob/be90159f66936d29e330e680aed834c0fec81800/data/Load_Data.py#L2816
https://github.com/YaoChengTang/Sparse-Point-Guided-3D-Lane-Detection/blob/be90159f66936d29e330e680aed834c0fec81800/data/Load_Data.py#L2831
https://github.com/YaoChengTang/Sparse-Point-Guided-3D-Lane-Detection/blob/be90159f66936d29e330e680aed834c0fec81800/data/Load_Data.py#L2843

======================================
https://github.com/OpenDriveLab/OccNet
======================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/OpenDriveLab/OccNet/blob/ce83e8a46978430be609d231165bb93f84e4a56b/projects/mmdet3d_plugin/datasets/builder.py#L83

====================================
https://github.com/IRMVLab/RegFormer
====================================

Found 3 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=args.workers,
        collate_fn=collate_pair,
        pin_memory=True,
        worker_init_fn=lambda x: np.random.seed((torch.initial_seed()) % (2 ** 32))
    )
torch.utils.data.DataLoader(val_dataset,
                                batch_size=args.eval_batch_size,
                                num_workers=args.workers,
                                shuffle=False,
                                collate_fn=collate_pair,
                                pin_memory=True,
                                worker_init_fn=lambda x: np.random.seed((torch.initial_seed()) % (2 ** 32)))
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=args.eval_batch_size,
            shuffle=False,
            num_workers=args.workers,
            collate_fn=collate_pair,
            pin_memory=True,
            worker_init_fn=lambda x: np.random.seed((torch.initial_seed()) % (2 ** 32))
        )
https://github.com/IRMVLab/RegFormer/blob/506b855a60fecc7ddccc49d077f0df9ce4614ca5/train.py#L91
https://github.com/IRMVLab/RegFormer/blob/506b855a60fecc7ddccc49d077f0df9ce4614ca5/train.py#L239
https://github.com/IRMVLab/RegFormer/blob/506b855a60fecc7ddccc49d077f0df9ce4614ca5/train.py#L275

=================================
https://github.com/Yan-Xia/CASSPR
=================================

Found 3 times
DataLoader(datasets['train'], batch_sampler=train_sampler, collate_fn=train_collate_fn,
                                     num_workers=params.num_workers, pin_memory=True)
DataLoader(datasets['val'], batch_sampler=val_sampler, collate_fn=val_collate_fn,
                                       num_workers=params.num_workers, pin_memory=True)
DataLoader(ds, batch_sampler=sampler)
https://github.com/Yan-Xia/CASSPR/blob/7bb4396329d638acb9ed0b80bf33f30569ec164a/datasets/dataset_utils.py#L191
https://github.com/Yan-Xia/CASSPR/blob/7bb4396329d638acb9ed0b80bf33f30569ec164a/datasets/dataset_utils.py#L200
https://github.com/Yan-Xia/CASSPR/blob/7bb4396329d638acb9ed0b80bf33f30569ec164a/datasets/samplers.py#L114

===================================
https://github.com/dongkwonjin/RVLD
===================================

Found 18 times
torch.utils.data.DataLoader(dataset=dataset,
                                              batch_size=cfg.batch_size['img'],
                                              shuffle=True,
                                              num_workers=cfg.num_workers,
                                              worker_init_fn=_init_fn)
torch.utils.data.DataLoader(dataset=dataset,
                                             batch_size=cfg.batch_size['img'] * 2,
                                             shuffle=False,
                                             num_workers=cfg.num_workers,
                                             pin_memory=False)
torch.utils.data.DataLoader(dataset=dataset,
                                              batch_size=cfg.batch_size['img'],
                                              shuffle=True,
                                              num_workers=cfg.num_workers,
                                              worker_init_fn=_init_fn)
torch.utils.data.DataLoader(dataset=dataset,
                                             batch_size=cfg.batch_size['img'] * 2,
                                             shuffle=False,
                                             num_workers=cfg.num_workers,
                                             pin_memory=False)
torch.utils.data.DataLoader(dataset=dataset,
                                              batch_size=cfg.batch_size['img'],
                                              shuffle=True,
                                              num_workers=cfg.num_workers,
                                              worker_init_fn=_init_fn)
torch.utils.data.DataLoader(dataset=dataset,
                                             batch_size=cfg.batch_size['img'] * 4,
                                             shuffle=False,
                                             num_workers=cfg.num_workers,
                                             pin_memory=False)
torch.utils.data.DataLoader(dataset=dataset,
                                                      batch_size=self.cfg.batch_size['img'],
                                                      shuffle=True,
                                                      num_workers=self.cfg.num_workers,
                                                      worker_init_fn=_init_fn)
torch.utils.data.DataLoader(dataset=dataset,
                                              batch_size=cfg.batch_size['img'],
                                              shuffle=True,
                                              num_workers=cfg.num_workers,
                                              worker_init_fn=_init_fn)
torch.utils.data.DataLoader(dataset=dataset,
                                             batch_size=cfg.batch_size['img'] * 2,
                                             shuffle=False,
                                             num_workers=cfg.num_workers,
                                             pin_memory=False)
torch.utils.data.DataLoader(dataset=dataset,
                                              batch_size=cfg.batch_size['img'],
                                              shuffle=True,
                                              num_workers=cfg.num_workers,
                                              worker_init_fn=_init_fn)
torch.utils.data.DataLoader(dataset=dataset,
                                             batch_size=cfg.batch_size['img'] * 2,
                                             shuffle=False,
                                             num_workers=cfg.num_workers,
                                             pin_memory=False)
torch.utils.data.DataLoader(dataset=dataset,
                                              batch_size=cfg.batch_size['img'],
                                              shuffle=True,
                                              num_workers=cfg.num_workers,
                                              worker_init_fn=_init_fn)
torch.utils.data.DataLoader(dataset=dataset,
                                             batch_size=cfg.batch_size['img'] * 4,
                                             shuffle=False,
                                             num_workers=cfg.num_workers,
                                             pin_memory=False)
torch.utils.data.DataLoader(dataset=dataset,
                                                      batch_size=self.cfg.batch_size['img'],
                                                      shuffle=True,
                                                      num_workers=self.cfg.num_workers,
                                                      worker_init_fn=_init_fn)
torch.utils.data.DataLoader(dataset=dataset,
                                             batch_size=cfg.batch_size,
                                             shuffle=False,
                                             num_workers=cfg.num_workers,
                                             pin_memory=False)
torch.utils.data.DataLoader(dataset=dataset,
                                             batch_size=cfg.batch_size,
                                             shuffle=False,
                                             num_workers=cfg.num_workers,
                                             pin_memory=False)
torch.utils.data.DataLoader(dataset=dataset,
                                             batch_size=cfg.batch_size,
                                             shuffle=False,
                                             num_workers=cfg.num_workers,
                                             pin_memory=False)
torch.utils.data.DataLoader(dataset=dataset,
                                             batch_size=cfg.batch_size,
                                             shuffle=False,
                                             num_workers=cfg.num_workers,
                                             pin_memory=False)
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/OpenLane-V/ILD_coeff/code/libs/prepare.py#L14
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/OpenLane-V/ILD_coeff/code/libs/prepare.py#L23
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/OpenLane-V/ILD_seg/code/libs/prepare.py#L11
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/OpenLane-V/ILD_seg/code/libs/prepare.py#L20
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/OpenLane-V/PLD/code/libs/prepare.py#L17
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/OpenLane-V/PLD/code/libs/prepare.py#L26
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/OpenLane-V/PLD/code/tools/train.py#L196
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/VIL-100/ILD_coeff/code/libs/prepare.py#L16
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/VIL-100/ILD_coeff/code/libs/prepare.py#L25
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/VIL-100/ILD_seg/code/libs/prepare.py#L11
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/VIL-100/ILD_seg/code/libs/prepare.py#L20
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/VIL-100/PLD/code/libs/prepare.py#L18
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/VIL-100/PLD/code/libs/prepare.py#L27
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Modeling/VIL-100/PLD/code/tools/train.py#L196
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Preprocessing/OpenLane-V/P01_lane_representation/code/libs/prepare.py#L6
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Preprocessing/OpenLane-V/P02_SVD/code/libs/prepare.py#L6
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Preprocessing/VIL-100/P01_lane_representation/code/libs/prepare.py#L7
https://github.com/dongkwonjin/RVLD/blob/4d90de138bc0122f6019cd73e452ad1955f42876/Preprocessing/VIL-100/P02_SVD/code/libs/prepare.py#L6

==============================================
https://github.com/NVlabs/viewpoint-robustness
==============================================

Found 2 times
torch.utils.data.DataLoader(traindata, batch_size=bsz,
                                              shuffle=True,
                                              num_workers=nworkers,
                                              drop_last=True,
                                              worker_init_fn=worker_rnd_init)
torch.utils.data.DataLoader(valdata, batch_size=bsz,
                                            shuffle=False,
                                            num_workers=nworkers)
https://github.com/NVlabs/viewpoint-robustness/blob/ccc77b174e2b70aa74e6ce447c9d566a148a6321/carla.py#L202
https://github.com/NVlabs/viewpoint-robustness/blob/ccc77b174e2b70aa74e6ce447c9d566a148a6321/carla.py#L207

======================================
https://github.com/ZRandomize/MatrixVT
======================================

Found 3 times
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=self.batch_size_per_device,
            num_workers=4,
            drop_last=True,
            shuffle=False,
            collate_fn=partial(collate_fn,
                               is_return_depth=self.data_return_depth
                               or self.use_fusion),
            sampler=None,
        )
torch.utils.data.DataLoader(
            val_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=partial(collate_fn, is_return_depth=self.use_fusion),
            num_workers=4,
            sampler=None,
        )
torch.utils.data.DataLoader(
            predict_dataset,
            batch_size=self.batch_size_per_device,
            shuffle=False,
            collate_fn=partial(collate_fn, is_return_depth=self.use_fusion),
            num_workers=4,
            sampler=None,
        )
https://github.com/ZRandomize/MatrixVT/blob/d78c7b58b10b9ada940462ba83ab24d99cae5833/bevdepth/exps/nuscenes/base_exp.py#L397
https://github.com/ZRandomize/MatrixVT/blob/d78c7b58b10b9ada940462ba83ab24d99cae5833/bevdepth/exps/nuscenes/base_exp.py#L423
https://github.com/ZRandomize/MatrixVT/blob/d78c7b58b10b9ada940462ba83ab24d99cae5833/bevdepth/exps/nuscenes/base_exp.py#L449

========================================
https://github.com/zaplm/DriverAttention
========================================

Found 3 times
DataLoader(dataset,
                             batch_size=1,  # must be 1
                             num_workers=8,
                             pin_memory=True)
data.DataLoader(train_dataset,
                                        batch_size=batch_size,
                                        num_workers=num_workers,
                                        shuffle=False,
                                        pin_memory=True)
data.DataLoader(val_dataset,
                                      batch_size=1,  # must be 1
                                      num_workers=num_workers,
                                      pin_memory=True)
https://github.com/zaplm/DriverAttention/blob/d6474e3454a7fb58916569c6400d3610a3cd9b7d/test.py#L28
https://github.com/zaplm/DriverAttention/blob/d6474e3454a7fb58916569c6400d3610a3cd9b7d/train.py#L59
https://github.com/zaplm/DriverAttention/blob/d6474e3454a7fb58916569c6400d3610a3cd9b7d/train.py#L65

====================================
https://github.com/ZiYang-xie/MV-Map
====================================

Found 6 times
torch.utils.data.DataLoader(train_dataset, 
                                                        batch_size=args.bsz, 
                                                        sampler=train_sampler,    
                                                        num_workers=args.nworkers,
                                                        pin_memory=True,  
                                                        drop_last=True)
torch.utils.data.DataLoader(train_dataset, 
                                                batch_size=args.bsz, 
                                                shuffle=shuffule_train,  
                                                pin_memory=True, 
                                                num_workers=args.nworkers, 
                                                drop_last=True)
torch.utils.data.DataLoader(val_dataset, 
                                             batch_size=args.bsz, 
                                             shuffle=False, 
                                             pin_memory=True,
                                             num_workers=args.nworkers,
                                             drop_last=False)
torch.utils.data.DataLoader(nerf_dataset, 
                                               batch_size=args.bsz, 
                                               shuffle=True, 
                                               pin_memory=True, 
                                               num_workers=args.nworkers)
torch.utils.data.DataLoader(fusion_train_dataset, 
                                                        batch_size=args.bsz, 
                                                        shuffle=False, 
                                                        pin_memory=True, 
                                                        num_workers=args.nworkers)
torch.utils.data.DataLoader(fusion_val_dataset, 
                                                        batch_size=args.bsz, 
                                                        shuffle=False, 
                                                        pin_memory=True, 
                                                        num_workers=args.nworkers)
https://github.com/ZiYang-xie/MV-Map/blob/9dc224c1b7405e265b12990e742f986e2069bde0/dataloader/builder.py#L19
https://github.com/ZiYang-xie/MV-Map/blob/9dc224c1b7405e265b12990e742f986e2069bde0/dataloader/builder.py#L26
https://github.com/ZiYang-xie/MV-Map/blob/9dc224c1b7405e265b12990e742f986e2069bde0/dataloader/builder.py#L45
https://github.com/ZiYang-xie/MV-Map/blob/9dc224c1b7405e265b12990e742f986e2069bde0/dataloader/builder.py#L60
https://github.com/ZiYang-xie/MV-Map/blob/9dc224c1b7405e265b12990e742f986e2069bde0/dataloader/builder.py#L77
https://github.com/ZiYang-xie/MV-Map/blob/9dc224c1b7405e265b12990e742f986e2069bde0/dataloader/builder.py#L91

========================================
https://github.com/jchengai/forecast-mae
========================================

Found 3 times
TorchDataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=self.shuffle,
            num_workers=self.num_workers,
            pin_memory=self.pin_memory,
            collate_fn=collate_fn,
        )
TorchDataLoader(
            self.val_dataset,
            batch_size=self.val_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=self.pin_memory,
            collate_fn=collate_fn,
        )
TorchDataLoader(
            self.test_dataset,
            batch_size=self.test_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=self.pin_memory,
            collate_fn=collate_fn,
        )
https://github.com/jchengai/forecast-mae/blob/cb86ea92601d23a8af7713389e9fb78d7e546a65/src/datamodule/av2_datamodule.py#L48
https://github.com/jchengai/forecast-mae/blob/cb86ea92601d23a8af7713389e9fb78d7e546a65/src/datamodule/av2_datamodule.py#L58
https://github.com/jchengai/forecast-mae/blob/cb86ea92601d23a8af7713389e9fb78d7e546a65/src/datamodule/av2_datamodule.py#L68

=====================================
https://github.com/zjuluolun/BEVPlace
=====================================

Found 1 times
DataLoader(dataset=eval_set, 
                num_workers=opt.threads, batch_size=opt.test_batch_size, shuffle=False, 
                pin_memory=cuda)
https://github.com/zjuluolun/BEVPlace/blob/0d96e399deb72eb7f5ca4c0f725562eadbba297f/main.py#L28

==============================
https://github.com/zllxot/CORE
==============================

Found 7 times
DataLoader(opencood_dataset,
                             batch_size=1,
                             num_workers=0,
                             collate_fn=opencood_dataset.collate_batch_test,
                             shuffle=False,
                             pin_memory=False,
                             drop_last=False)
DataLoader(opencood_dataset,
                             batch_size=1,
                             num_workers=4,
                             collate_fn=opencood_dataset.collate_batch_test,
                             shuffle=False,
                             pin_memory=False,
                             drop_last=False)
DataLoader(opencood_train_dataset,
                                  batch_sampler=batch_sampler_train,
                                  num_workers=8,
                                  collate_fn=opencood_train_dataset.collate_batch_train)
DataLoader(opencood_validate_dataset,
                                sampler=sampler_val,
                                num_workers=8,
                                collate_fn=opencood_validate_dataset.collate_batch_test,
                                drop_last=False)
DataLoader(opencood_train_dataset,
                                  batch_size=1,
                                  num_workers=8,
                                  collate_fn=opencood_train_dataset.collate_batch_train,
                                  shuffle=True,
                                  pin_memory=False,
                                  drop_last=True)
DataLoader(opencood_validate_dataset,
                                batch_size=1,
                                num_workers=8,
                                collate_fn=opencood_validate_dataset.collate_batch_test,
                                shuffle=False,
                                pin_memory=False,
                                drop_last=True)
DataLoader(opencda_dataset, batch_size=1, num_workers=8,
                             collate_fn=opencda_dataset.collate_batch_train,
                             shuffle=False,
                             pin_memory=False)
https://github.com/zllxot/CORE/blob/ad2ede3186c2fff68673ef4caa9cac738933cc66/opencood/tools/debug_utils.py#L35
https://github.com/zllxot/CORE/blob/ad2ede3186c2fff68673ef4caa9cac738933cc66/opencood/tools/inference.py#L56
https://github.com/zllxot/CORE/blob/ad2ede3186c2fff68673ef4caa9cac738933cc66/opencood/tools/train.py#L51
https://github.com/zllxot/CORE/blob/ad2ede3186c2fff68673ef4caa9cac738933cc66/opencood/tools/train.py#L55
https://github.com/zllxot/CORE/blob/ad2ede3186c2fff68673ef4caa9cac738933cc66/opencood/tools/train.py#L61
https://github.com/zllxot/CORE/blob/ad2ede3186c2fff68673ef4caa9cac738933cc66/opencood/tools/train.py#L68
https://github.com/zllxot/CORE/blob/ad2ede3186c2fff68673ef4caa9cac738933cc66/opencood/visualization/vis_data_sequence.py#L32

========================================================================
https://github.com/nanlliu/Unsupervised-Compositional-Concepts-Discovery
========================================================================

Found 1 times
torch.utils.data.DataLoader(train_dataset, batch_size=args.train_batch_size, shuffle=True)
https://github.com/nanlliu/Unsupervised-Compositional-Concepts-Discovery/blob/03f557e747a1608b3ffc77abe1ef691baf2ea054/main.py#L537

===================================
https://github.com/tgxs002/align_sd
===================================

Found 4 times
torch.utils.data.DataLoader(dataset, batch_size=1, num_workers=16, collate_fn=lambda x: x[0])
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers)
DataLoader(dataset_wrapper(dataset['train'], preprocess, tokenizer), batch_size=20,
                          num_workers=4, shuffle=False)
torch.utils.data.DataLoader(
        train_dataset,
        shuffle=True,
        collate_fn=collate_fn,
        batch_size=args.train_batch_size,
        num_workers=args.dataloader_num_workers,
    )
https://github.com/tgxs002/align_sd/blob/78a49a3b5e30cc738b844bb3cefd6bd5ccbb3e8b/download_regularization_images.py#L50
https://github.com/tgxs002/align_sd/blob/78a49a3b5e30cc738b844bb3cefd6bd5ccbb3e8b/evaluate_hps.py#L42
https://github.com/tgxs002/align_sd/blob/78a49a3b5e30cc738b844bb3cefd6bd5ccbb3e8b/process_diffusiondb.py#L52
https://github.com/tgxs002/align_sd/blob/78a49a3b5e30cc738b844bb3cefd6bd5ccbb3e8b/train_text_to_image_lora.py#L548

====================================
https://github.com/wix-incubator/DLT
====================================

Found 3 times
DataLoader(val_data, batch_size=config.optimizer.batch_size,
                            shuffle=False, num_workers=config.optimizer.num_workers)
DataLoader(train_data, batch_size=opt_conf.batch_size,
                                  shuffle=True, num_workers=opt_conf.num_workers)
DataLoader(val_data, batch_size=opt_conf.batch_size,
                                shuffle=False, num_workers=opt_conf.num_workers)
https://github.com/wix-incubator/DLT/blob/01201462166f2596c0ec66d4a9d7df48c21c804c/dlt/generate_samples.py#L85
https://github.com/wix-incubator/DLT/blob/01201462166f2596c0ec66d4a9d7df48c21c804c/dlt/trainers/dlt_trainer.py#L43
https://github.com/wix-incubator/DLT/blob/01201462166f2596c0ec66d4a9d7df48c21c804c/dlt/trainers/dlt_trainer.py#L45

================================================
https://github.com/VinAIResearch/Anti-DreamBooth
================================================

Found 5 times
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.train_batch_size,
        shuffle=False,
        collate_fn=lambda examples: collate_fn(examples, args.with_prior_preservation),
    )
torch.utils.data.DataLoader(train_dataset, batch_size=1, collate_fn=lambda x: x, shuffle=True)
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
torch.utils.data.DataLoader(sample_dataset, batch_size=args.sample_batch_size)
https://github.com/VinAIResearch/Anti-DreamBooth/blob/30b3537a86e5799cfa9d4922aee1a273667e9562/train_dreambooth.py#L645
https://github.com/VinAIResearch/Anti-DreamBooth/blob/30b3537a86e5799cfa9d4922aee1a273667e9562/train_dreambooth.py#L787
https://github.com/VinAIResearch/Anti-DreamBooth/blob/30b3537a86e5799cfa9d4922aee1a273667e9562/train_dreambooth.py#L816
https://github.com/VinAIResearch/Anti-DreamBooth/blob/30b3537a86e5799cfa9d4922aee1a273667e9562/attacks/aspl.py#L626
https://github.com/VinAIResearch/Anti-DreamBooth/blob/30b3537a86e5799cfa9d4922aee1a273667e9562/attacks/ensemble_aspl.py#L659

==================================================
https://github.com/korrawe/guided-motion-diffusion
==================================================

Found 17 times
DataLoader(dataset,
                        batch_size=conf.batch_size,
                        shuffle=True,
                        num_workers=8,
                        drop_last=True,
                        collate_fn=collate)
DataLoader(dataset, batch_size=1, num_workers=1, shuffle=True)
DataLoader(dataset, batch_size=batch_size, num_workers=4, drop_last=True,
                                collate_fn=collate_fn, shuffle=True)
DataLoader(dataset,
                               batch_size=batch_size,
                               collate_fn=collate_fn,
                               drop_last=True,
                               num_workers=4)
DataLoader(mm_dataset, batch_size=1, num_workers=1)
DataLoader(dataset,
                               batch_size=batch_size,
                               collate_fn=collate_fn,
                               drop_last=True,
                               num_workers=4)
DataLoader(mm_dataset, batch_size=1, num_workers=1)
DataLoader(dataset,
                               batch_size=batch_size,
                               collate_fn=collate_fn,
                               drop_last=True,
                               num_workers=4)
DataLoader(mm_dataset, batch_size=1, num_workers=1)
DataLoader(train_dataset, batch_size=self.opt.batch_size, drop_last=True, num_workers=4,
                                      shuffle=True, collate_fn=collate_fn, pin_memory=True)
DataLoader(val_dataset, batch_size=self.opt.batch_size, drop_last=True, num_workers=4,
                                      shuffle=True, collate_fn=collate_fn, pin_memory=True)
DataLoader(datasetGT1, batch_size=args.batch_size,
                                      shuffle=False, num_workers=8, collate_fn=collate)
DataLoader(datasetGT2, batch_size=args.batch_size,
                                       shuffle=False, num_workers=8, collate_fn=collate)
DataLoader(dataset_unconstrained, batch_size=args.batch_size,
                                           shuffle=False, num_workers=8, collate_fn=collate)
DataLoader(data, batch_size=bs, shuffle=False, num_workers=8, collate_fn=collate)
DataLoader(generated_motions, batch_size=64, shuffle=False, num_workers=8)
DataLoader(motion_data, batch_size=64, shuffle=False, num_workers=8)
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/data_loaders/get_data.py#L78
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/data_loaders/humanml/motion_loaders/comp_v6_model_dataset.py#L69
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/data_loaders/humanml/motion_loaders/dataset_motion_loader.py#L21
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/data_loaders/humanml/motion_loaders/model_motion_loaders.py#L83
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/data_loaders/humanml/motion_loaders/model_motion_loaders.py#L88
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/data_loaders/humanml/motion_loaders/model_motion_loaders.py#L123
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/data_loaders/humanml/motion_loaders/model_motion_loaders.py#L128
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/data_loaders/humanml/motion_loaders/model_motion_loaders.py#L161
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/data_loaders/humanml/motion_loaders/model_motion_loaders.py#L166
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/data_loaders/humanml/networks/trainers.py#L635
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/data_loaders/humanml/networks/trainers.py#L637
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/eval/a2m/gru_eval.py#L86
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/eval/a2m/gru_eval.py#L88
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/eval/a2m/gru_eval.py#L110
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/eval/a2m/stgcn_eval.py#L120
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/eval/unconstrained/evaluate.py#L67
https://github.com/korrawe/guided-motion-diffusion/blob/2f6264a9b793333556ef911981983082a1113049/eval/unconstrained/evaluate.py#L78

========================================
https://github.com/zhengyanzhao1997/COOP
========================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size  =   dataset_cfg.batch_size if not is_test else 1,
        num_workers =   num_workers.get(split, 0),
        collate_fn  =   collate_fn,
        drop_last   =   True and (is_train or not is_test),
        pin_memory  =   dataset_cfg.get('pin_memory', False),
        shuffle     =   shuffle and is_train and not is_test,
    )
https://github.com/zhengyanzhao1997/COOP/blob/1a198d8aaa041e36f5fd26fc1f19dd5cee6ca048/src/data/dataloader_union.py#L207

=============================================
https://github.com/AIRI-Institute/StyleDomain
=============================================

Found 1 times
torch.utils.data.DataLoader(
        dataset, batch_size=1, shuffle=False, num_workers=1, collate_fn=dataset.collate
    )
https://github.com/AIRI-Institute/StyleDomain/blob/44b8370c90df25754ec01e1f880ca02b502e3bce/DissimilarDomains/projector.py#L251

============================================================
https://github.com/diffusion-classifier/diffusion-classifier
============================================================

Found 3 times
DataLoader(feature_dataset, batch_size=args.batch_size, shuffle=is_train)
torch.utils.data.DataLoader(
            self.train_dataset,
            sampler=sampler,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            **kwargs,
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
https://github.com/diffusion-classifier/diffusion-classifier/blob/3cd7f0c18b34ca8685f99d76db2f0cff282db107/diffusion/dataset/common.py#L132
https://github.com/diffusion-classifier/diffusion-classifier/blob/3cd7f0c18b34ca8685f99d76db2f0cff282db107/diffusion/dataset/imagenet.py#L31
https://github.com/diffusion-classifier/diffusion-classifier/blob/3cd7f0c18b34ca8685f99d76db2f0cff282db107/diffusion/dataset/imagenet.py#L41

===========================================================
https://github.com/jcui1224/hierarchical-representation-ebm
===========================================================

Found 8 times
t.utils.data.DataLoader(ds_train, batch_size=args.batch_size, shuffle=True, num_workers=0, drop_last=True)
t.utils.data.DataLoader(ds_val, batch_size=args.batch_size, shuffle=True, num_workers=0, drop_last=True)
t.utils.data.DataLoader(ds_train, batch_size=args.batch_size, shuffle=True, num_workers=0, drop_last=True)
t.utils.data.DataLoader(ds_val, batch_size=args.batch_size, shuffle=True, num_workers=0, drop_last=True)
t.utils.data.DataLoader(ds_train, batch_size=args.batch_size, shuffle=True, num_workers=0, drop_last=True)
t.utils.data.DataLoader(ds_val, batch_size=args.batch_size, shuffle=True, num_workers=0, drop_last=True)
DataLoader(ds, batch_size=batch_size,
                        drop_last=False, num_workers=cpu_count())
torch.utils.data.DataLoader(ds_train, batch_size=args.batch_size, shuffle=True, num_workers=0, drop_last=True)
https://github.com/jcui1224/hierarchical-representation-ebm/blob/5c261824a35311ea42b093f1064ecf75de5b2f2f/sandbox-FIDScore.py#L378
https://github.com/jcui1224/hierarchical-representation-ebm/blob/5c261824a35311ea42b093f1064ecf75de5b2f2f/sandbox-FIDScore.py#L379
https://github.com/jcui1224/hierarchical-representation-ebm/blob/5c261824a35311ea42b093f1064ecf75de5b2f2f/train_fid.py#L489
https://github.com/jcui1224/hierarchical-representation-ebm/blob/5c261824a35311ea42b093f1064ecf75de5b2f2f/train_fid.py#L490
https://github.com/jcui1224/hierarchical-representation-ebm/blob/5c261824a35311ea42b093f1064ecf75de5b2f2f/train_hs.py#L437
https://github.com/jcui1224/hierarchical-representation-ebm/blob/5c261824a35311ea42b093f1064ecf75de5b2f2f/train_hs.py#L438
https://github.com/jcui1224/hierarchical-representation-ebm/blob/5c261824a35311ea42b093f1064ecf75de5b2f2f/pytorch_fid_jcui7/fid_score_imgs.py#L101
https://github.com/jcui1224/hierarchical-representation-ebm/blob/5c261824a35311ea42b093f1064ecf75de5b2f2f/pytorch_fid_jcui7/precalculated_CELEBA256.py#L216

================================================================
https://github.com/princeton-computational-imaging/Diffusion-SDF
================================================================

Found 3 times
torch.utils.data.DataLoader(test_dataset, batch_size=1, num_workers=0)
torch.utils.data.DataLoader(test_dataset, batch_size=1, num_workers=0)
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=args.batch_size, num_workers=args.workers,
            drop_last=True, shuffle=True, pin_memory=True, persistent_workers=True
        )
https://github.com/princeton-computational-imaging/Diffusion-SDF/blob/7eb2d6786b8864dc45cd180be8ad5c5b2f8c1f8f/test.py#L35
https://github.com/princeton-computational-imaging/Diffusion-SDF/blob/7eb2d6786b8864dc45cd180be8ad5c5b2f8c1f8f/test.py#L131
https://github.com/princeton-computational-imaging/Diffusion-SDF/blob/7eb2d6786b8864dc45cd180be8ad5c5b2f8c1f8f/train.py#L40

===========================================
https://github.com/magic-research/GETAvatar
===========================================

Found 4 times
torch.utils.data.DataLoader(
                dataset=dataset, sampler=item_subset,
                batch_size=batch_size // opts.num_gpus, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=dataset, sampler=training_set_sampler, batch_size=4)
torch.utils.data.DataLoader(dataset=dataset, sampler=training_set_sampler, batch_size=1)
torch.utils.data.DataLoader(
            dataset=training_set, sampler=training_set_sampler, batch_size=batch_size // num_gpus,
            **data_loader_kwargs)
https://github.com/magic-research/GETAvatar/blob/943d43c49f789b24a71a693bdc4b44e9d9c08272/metrics/metric_utils.py#L266
https://github.com/magic-research/GETAvatar/blob/943d43c49f789b24a71a693bdc4b44e9d9c08272/training/inference_3d.py#L99
https://github.com/magic-research/GETAvatar/blob/943d43c49f789b24a71a693bdc4b44e9d9c08272/training/inference_3d.py#L115
https://github.com/magic-research/GETAvatar/blob/943d43c49f789b24a71a693bdc4b44e9d9c08272/training/training_loop_3d.py#L155

===========================================
https://github.com/BarqueroGerman/BeLFusion
===========================================

Found 2 times
DataLoader(sampler=self.valid_sampler, **self.init_kwargs)
DataLoader(sampler=self.samples_to_track, **args)
https://github.com/BarqueroGerman/BeLFusion/blob/f83cb086a574d42ff2a39b175fd669161002f83c/base/base_data_loader.py#L71
https://github.com/BarqueroGerman/BeLFusion/blob/f83cb086a574d42ff2a39b175fd669161002f83c/base/base_data_loader.py#L77

=====================================
https://github.com/SeanChenxy/Mimic3D
=====================================

Found 2 times
torch.utils.data.DataLoader(dataset=dataset, sampler=item_subset, batch_size=batch_size, **data_loader_kwargs)
torch.utils.data.DataLoader(dataset=training_set, sampler=training_set_sampler, batch_size=batch_size//num_gpus, **data_loader_kwargs)
https://github.com/SeanChenxy/Mimic3D/blob/77d313656df3cd5536d2c4c5766db3a56208eea6/metrics/metric_utils.py#L233
https://github.com/SeanChenxy/Mimic3D/blob/77d313656df3cd5536d2c4c5766db3a56208eea6/training/training_loop.py#L179

====================================
https://github.com/JeffreyXiang/ivid
====================================

Found 3 times
torch.utils.data.DataLoader(
            self.dataset,
            batch_size=self.batch_size_per_gpu,
            num_workers=4,
            pin_memory=True,
            drop_last=True,
            persistent_workers=True,
            sampler=torch.utils.data.distributed.DistributedSampler(
                self.dataset,
                num_replicas=self.world_size,
                rank=self.rank,
                shuffle=True,
            )
        )
torch.utils.data.DataLoader(
            copy.deepcopy(self.dataset),
            batch_size=num_samples,
            shuffle=True,
            num_workers=0,
        )
torch.utils.data.DataLoader(
            copy.deepcopy(self.dataset),
            batch_size=num_samples,
            shuffle=True,
            num_workers=0,
        )
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/basic.py#L140
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/inpaint.py#L106
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/superres.py#L106

================================================
https://github.com/sjtuplayer/few-shot-diffusion
================================================

Found 8 times
DataLoader(dataset,
                              batch_size=64,
                              shuffle=False,
                              num_workers=8,
                              drop_last=True)
DataLoader(real_data,
                                   batch_size=batch_size,
                                   shuffle=False,
                                   num_workers=8,
                                   drop_last=False)
DataLoader(real_data,
                                   batch_size=batch_size,
                                   shuffle=True,
                                   num_workers=8,
                                   drop_last=True)
DataLoader(real_data,
                                   batch_size=batch_size,
                                   shuffle=True,
                                   num_workers=8,
                                   drop_last=True)
DataLoader(train_data,
                                   batch_size=batch_size,
                                   shuffle=True,
                                   num_workers=8,
                                   drop_last=True)
DataLoader(real_data,
                                   batch_size=batch_size,
                                   shuffle=True,
                                   num_workers=8,
                                   drop_last=True)
DataLoader(self.ds, batch_size = train_batch_size, shuffle = True, pin_memory = True, num_workers = cpu_count())
DataLoader(self.ds, batch_size = train_batch_size, shuffle = True, pin_memory = True, num_workers = cpu_count())
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/feature-extractor.py#L54
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/generate.py#L55
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/train-recon.py#L53
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/train-whole.py#L108
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/train-whole.py#L114
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/train.py#L49
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/unet.py#L1099
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/model/unet.py#L924

==================================
https://github.com/Lakonik/SSDNeRF
==================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        shuffle=shuffle,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/Lakonik/SSDNeRF/blob/5150270b37f691fd4fcb6614fcd55caa0bf3940b/lib/datasets/builder.py#L54

================================
https://github.com/jiangyzy/GOAE
================================

Found 1 times
torch.utils.data.DataLoader(dataset=dataset, batch_size=batch, pin_memory=pin_memory, prefetch_factor=prefetch_factor)
https://github.com/jiangyzy/GOAE/blob/7886952f11007a77d2e4daec3788940dea0d8cc8/goae/infer.py#L34

====================================
https://github.com/Mumuqiao/MixCycle
====================================

Found 3 times
DataLoader(train_data, batch_size=cfg.batch_size, num_workers=cfg.workers, shuffle=True,drop_last=True,
                              pin_memory=True,collate_fn=clooate_fn if cfg.cycle else None)
DataLoader(val_data, batch_size=1, num_workers=cfg.workers, collate_fn=lambda x: x, pin_memory=True)
DataLoader(test_data, batch_size=1, num_workers=cfg.workers, collate_fn=lambda x: x, pin_memory=True)
https://github.com/Mumuqiao/MixCycle/blob/8a14206bf54ea59fcc25ba568400452867bf0d89/main.py#L142
https://github.com/Mumuqiao/MixCycle/blob/8a14206bf54ea59fcc25ba568400452867bf0d89/main.py#L144
https://github.com/Mumuqiao/MixCycle/blob/8a14206bf54ea59fcc25ba568400452867bf0d89/main.py#L157

===================================
https://github.com/CVMI-Lab/IST-Net
===================================

Found 3 times
torch.utils.data.DataLoader(
                dataset,
                batch_size=1,
                num_workers=8,
                shuffle=False,
                drop_last=False
            )
torch.utils.data.DataLoader(
            syn_dataset,
            batch_size=cfg.train_dataloader.syn_bs,
            num_workers=cfg.train_dataloader.num_workers,
            shuffle=cfg.train_dataloader.shuffle,
            sampler=None,
            drop_last=cfg.train_dataloader.drop_last,
            pin_memory=cfg.train_dataloader.pin_memory
        )
torch.utils.data.DataLoader(
            real_dataset,
            batch_size=cfg.train_dataloader.real_bs,
            num_workers=cfg.train_dataloader.num_workers,
            shuffle=cfg.train_dataloader.shuffle,
            sampler=None,
            drop_last=cfg.train_dataloader.drop_last,
            pin_memory=cfg.train_dataloader.pin_memory
        )
https://github.com/CVMI-Lab/IST-Net/blob/de27237a93fb874608818f19b28b97583ea1b707/test.py#L103
https://github.com/CVMI-Lab/IST-Net/blob/de27237a93fb874608818f19b28b97583ea1b707/train.py#L146
https://github.com/CVMI-Lab/IST-Net/blob/de27237a93fb874608818f19b28b97583ea1b707/train.py#L167

====================================
https://github.com/JiehongLin/VI-Net
====================================

Found 2 times
torch.utils.data.DataLoader(
            dataset,
            batch_size=1,
            num_workers=8,
            shuffle=False,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=cfg.train_dataloader.bs,
        num_workers=int(cfg.train_dataloader.num_workers),
        shuffle=cfg.train_dataloader.shuffle,
        sampler=None,
        drop_last=cfg.train_dataloader.drop_last,
        pin_memory=cfg.train_dataloader.pin_memory
    )
https://github.com/JiehongLin/VI-Net/blob/9466e6dac7652ab97e89a76caafd7c11228b26bb/test.py#L100
https://github.com/JiehongLin/VI-Net/blob/9466e6dac7652ab97e89a76caafd7c11228b26bb/train.py#L120

=======================================
https://github.com/RuyiLian/CheckerPose
=======================================

Found 18 times
torch.utils.data.DataLoader(train_dataset_2, batch_size=batch_size_2_dataset, shuffle=True,
                                                     num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size_1_dataset, shuffle=True,
                                                   num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size, shuffle=True,
                                                   num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(test_dataset, batch_size=8, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(train_dataset_2, batch_size=batch_size_2_dataset, shuffle=True,
                                                     num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size_1_dataset, shuffle=True,
                                                   num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size, shuffle=True,
                                                   num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(test_dataset, batch_size=8, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(train_dataset_2, batch_size=batch_size_2_dataset, shuffle=True,
                                                     num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size_1_dataset, shuffle=True,
                                                   num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size, shuffle=True,
                                                   num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(test_dataset, batch_size=8, shuffle=False, num_workers=num_workers)
torch.utils.data.DataLoader(train_dataset_2, batch_size=batch_size_2_dataset, shuffle=True,
                                                     num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size_1_dataset, shuffle=True,
                                                   num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(train_dataset, batch_size=batch_size, shuffle=True,
                                                   num_workers=num_workers, drop_last=True)
torch.utils.data.DataLoader(test_dataset, batch_size=8, shuffle=False, num_workers=num_workers)
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/pretrain.py#L129
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/pretrain.py#L132
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/pretrain.py#L135
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/pretrain.py#L176
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/pretrain_lm.py#L120
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/pretrain_lm.py#L123
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/pretrain_lm.py#L126
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/pretrain_lm.py#L137
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/test.py#L198
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/test_lm.py#L150
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/train.py#L153
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/train.py#L156
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/train.py#L159
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/train.py#L200
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/train_lm.py#L149
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/train_lm.py#L152
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/train_lm.py#L155
https://github.com/RuyiLian/CheckerPose/blob/719fee1c353d0e5a650dddbe14cc69c32d73b1c5/checkerpose/train_lm.py#L166

===================================
https://github.com/hustvl/Query6DoF
===================================

Found 2 times
DataLoader(eval_set, batch_size=args.batch_size, shuffle=False, pin_memory=True,
                             num_workers=args.workers, collate_fn=eval_set.collate_batch)
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, pin_memory=True,
                                  num_workers=args.workers, collate_fn=train_set.collate_batch)
https://github.com/hustvl/Query6DoF/blob/b4576b05a60c457079c964e99843fc1b8b26bab1/Pointnet2/tools/train_and_eval.py#L187
https://github.com/hustvl/Query6DoF/blob/b4576b05a60c457079c964e99843fc1b8b26bab1/Pointnet2/tools/train_and_eval.py#L192

================================
https://github.com/wanboyan/SOCS
================================

Found 2 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
torch.utils.data.DataLoader(train_dataset, batch_size=FLAGS.batch_size,
                                                           sampler=train_sampler,
                                                           num_workers=FLAGS.num_workers, pin_memory=True)
https://github.com/wanboyan/SOCS/blob/70ad17a70129caa69a4fdc9b6c7995a96b063c54/SOCS/OpenPCDet/pcdet/datasets/__init__.py#L75
https://github.com/wanboyan/SOCS/blob/70ad17a70129caa69a4fdc9b6c7995a96b063c54/SOCS/engine/NFtrain_v5.py#L135

==========================================
https://github.com/YangHai-1218/PseudoFlow
==========================================

Found 3 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        shuffle=False,
    )
DataLoader(
            dataset,
            sampler=sampler,
            batch_size=cfg.data.samples_per_gpu * cfg.num_gpus,
            num_workers=cfg.data.workers_per_gpu * cfg.num_gpus,
            collate_fn=partial(collate, samples_per_gpu=cfg.data.samples_per_gpu),
            shuffle=False,
            persistent_workers=True
        )
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=cfg.data.samples_per_gpu),
            shuffle=False,
            persistent_workers=False
        )
https://github.com/YangHai-1218/PseudoFlow/blob/69e8e7ad11a2a58f06532cc5b89b76300d83613b/test.py#L82
https://github.com/YangHai-1218/PseudoFlow/blob/69e8e7ad11a2a58f06532cc5b89b76300d83613b/train.py#L53
https://github.com/YangHai-1218/PseudoFlow/blob/69e8e7ad11a2a58f06532cc5b89b76300d83613b/train.py#L76

============================
https://github.com/fulliu/lc
============================

Found 1 times
DataLoader(dataset, batch_size, shuffle = shuffle, 
        num_workers = num_workers, collate_fn=collate_fn, pin_memory = pin_memory,
        persistent_workers = persistent_workers and num_workers > 0)
https://github.com/fulliu/lc/blob/9e5c40921703d034468fec6258a250d007ffd32a/utils.py#L39

=======================================================
https://github.com/cvg/VP-Estimation-with-Prior-Gravity
=======================================================

Found 3 times
DataLoader(
            self, batch_size=None, shuffle=False, pin_memory=True,
            num_workers=4, collate_fn=simple_collate_fn)
DataLoader(
            self, batch_size=None, shuffle=shuffle, pin_memory=True,
            num_workers=4, collate_fn=simple_collate_fn)
DataLoader(
            self, batch_size=None, shuffle=False, pin_memory=True,
            num_workers=0, collate_fn=simple_collate_fn)
https://github.com/cvg/VP-Estimation-with-Prior-Gravity/blob/337b85142658b6ff5693c0effe7dc487c46f2daa/vp_estimation_with_prior_gravity/datasets/lamar.py#L102
https://github.com/cvg/VP-Estimation-with-Prior-Gravity/blob/337b85142658b6ff5693c0effe7dc487c46f2daa/vp_estimation_with_prior_gravity/datasets/scannet.py#L49
https://github.com/cvg/VP-Estimation-with-Prior-Gravity/blob/337b85142658b6ff5693c0effe7dc487c46f2daa/vp_estimation_with_prior_gravity/datasets/york_urban.py#L44

===============================
https://github.com/mmendiet/GFM
===============================

Found 3 times
DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False,
    )
DataLoader(dataset, config.DATA.BATCH_SIZE, sampler=sampler, num_workers=config.DATA.NUM_WORKERS, 
                                pin_memory=True, drop_last=True, collate_fn=collate_fn)
https://github.com/mmendiet/GFM/blob/4dd248e8544b3b6a49f5173b0931d97a17a7f424/data/data_finetune.py#L34
https://github.com/mmendiet/GFM/blob/4dd248e8544b3b6a49f5173b0931d97a17a7f424/data/data_finetune.py#L42
https://github.com/mmendiet/GFM/blob/4dd248e8544b3b6a49f5173b0931d97a17a7f424/data/data_simmim.py#L116

====================================
https://github.com/Skyy93/Sample4Geo
====================================

Found 32 times
DataLoader(reference_dataset_val,
                                          batch_size=config.batch_size,
                                          num_workers=config.num_workers,
                                          shuffle=False,
                                          pin_memory=True)
DataLoader(query_dataset_val,
                                      batch_size=config.batch_size,
                                      num_workers=config.num_workers,
                                      shuffle=False,
                                      pin_memory=True)
DataLoader(reference_dataset_test,
                                           batch_size=config.batch_size,
                                           num_workers=config.num_workers,
                                           shuffle=False,
                                           pin_memory=True)
DataLoader(query_dataset_test,
                                       batch_size=config.batch_size,
                                       num_workers=config.num_workers,
                                       shuffle=False,
                                       pin_memory=True)
DataLoader(reference_dataset_test,
                                           batch_size=config.batch_size,
                                           num_workers=config.num_workers,
                                           shuffle=False,
                                           pin_memory=True)
DataLoader(query_dataset_test,
                                       batch_size=config.batch_size,
                                       num_workers=config.num_workers,
                                       shuffle=False,
                                       pin_memory=True)
DataLoader(query_dataset_test,
                                       batch_size=config.batch_size,
                                       num_workers=config.num_workers,
                                       shuffle=False,
                                       pin_memory=True)
DataLoader(gallery_dataset_test,
                                       batch_size=config.batch_size,
                                       num_workers=config.num_workers,
                                       shuffle=False,
                                       pin_memory=True)
DataLoader(reference_dataset_test,
                                           batch_size=config.batch_size,
                                           num_workers=config.num_workers,
                                           shuffle=False,
                                           pin_memory=True)
DataLoader(query_dataset_test,
                                       batch_size=config.batch_size,
                                       num_workers=config.num_workers,
                                       shuffle=False,
                                       pin_memory=True)
DataLoader(reference_dataset_test,
                                           batch_size=config.batch_size,
                                           num_workers=config.num_workers,
                                           shuffle=False,
                                           pin_memory=True)
DataLoader(query_dataset_test,
                                       batch_size=config.batch_size,
                                       num_workers=config.num_workers,
                                       shuffle=False,
                                       pin_memory=True)
DataLoader(train_dataset,
                                  batch_size=config.batch_size,
                                  num_workers=config.num_workers,
                                  shuffle=not config.custom_sampling,
                                  pin_memory=True)
DataLoader(reference_dataset_val,
                                          batch_size=config.batch_size_eval,
                                          num_workers=config.num_workers,
                                          shuffle=False,
                                          pin_memory=True)
DataLoader(query_dataset_val,
                                      batch_size=config.batch_size_eval,
                                      num_workers=config.num_workers,
                                      shuffle=False,
                                      pin_memory=True)
DataLoader(query_dataset_train,
                                            batch_size=config.batch_size_eval,
                                            num_workers=config.num_workers,
                                            shuffle=False,
                                            pin_memory=True)
DataLoader(reference_dataset_train,
                                                batch_size=config.batch_size_eval,
                                                num_workers=config.num_workers,
                                                shuffle=False,
                                                pin_memory=True)
DataLoader(reference_dataset_test,
                                           batch_size=config.batch_size_eval,
                                           num_workers=config.num_workers,
                                           shuffle=False,
                                           pin_memory=True)
DataLoader(query_dataset_test,
                                       batch_size=config.batch_size_eval,
                                       num_workers=config.num_workers,
                                       shuffle=False,
                                       pin_memory=True)
DataLoader(train_dataset,
                                  batch_size=config.batch_size,
                                  num_workers=config.num_workers,
                                  shuffle=not config.custom_sampling,
                                  pin_memory=True)
DataLoader(reference_dataset_test,
                                           batch_size=config.batch_size_eval,
                                           num_workers=config.num_workers,
                                           shuffle=False,
                                           pin_memory=True)
DataLoader(query_dataset_test,
                                       batch_size=config.batch_size_eval,
                                       num_workers=config.num_workers,
                                       shuffle=False,
                                       pin_memory=True)
DataLoader(query_dataset_train,
                                            batch_size=config.batch_size_eval,
                                            num_workers=config.num_workers,
                                            shuffle=False,
                                            pin_memory=True)
DataLoader(reference_dataset_train,
                                                batch_size=config.batch_size_eval,
                                                num_workers=config.num_workers,
                                                shuffle=False,
                                                pin_memory=True)
DataLoader(train_dataset,
                                  batch_size=config.batch_size,
                                  num_workers=config.num_workers,
                                  shuffle=not config.custom_sampling,
                                  pin_memory=True)
DataLoader(query_dataset_test,
                                       batch_size=config.batch_size_eval,
                                       num_workers=config.num_workers,
                                       shuffle=False,
                                       pin_memory=True)
DataLoader(gallery_dataset_test,
                                       batch_size=config.batch_size_eval,
                                       num_workers=config.num_workers,
                                       shuffle=False,
                                       pin_memory=True)
DataLoader(train_dataset,
                                  batch_size=config.batch_size,
                                  num_workers=config.num_workers,
                                  shuffle=not config.custom_sampling,
                                  pin_memory=True)
DataLoader(reference_dataset_test,
                                           batch_size=config.batch_size_eval,
                                           num_workers=config.num_workers,
                                           shuffle=False,
                                           pin_memory=True)
DataLoader(query_dataset_test,
                                       batch_size=config.batch_size_eval,
                                       num_workers=config.num_workers,
                                       shuffle=False,
                                       pin_memory=True)
DataLoader(query_dataset_train,
                                            batch_size=config.batch_size_eval,
                                            num_workers=config.num_workers,
                                            shuffle=False,
                                            pin_memory=True)
DataLoader(reference_dataset_train,
                                                batch_size=config.batch_size_eval,
                                                num_workers=config.num_workers,
                                                shuffle=False,
                                                pin_memory=True)
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/eval_cvact.py#L114
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/eval_cvact.py#L129
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/eval_cvact.py#L160
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/eval_cvact.py#L174
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/eval_cvusa.py#L112
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/eval_cvusa.py#L127
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/eval_university.py#L113
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/eval_university.py#L127
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/eval_vigor_cross.py#L114
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/eval_vigor_cross.py#L130
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/eval_vigor_same.py#L114
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/eval_vigor_same.py#L130
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_cvact.py#L189
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_cvact.py#L211
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_cvact.py#L226
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_cvact.py#L259
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_cvact.py#L272
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_cvact.py#L460
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_cvact.py#L474
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_cvusa.py#L190
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_cvusa.py#L212
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_cvusa.py#L227
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_cvusa.py#L260
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_cvusa.py#L273
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_university.py#L179
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_university.py#L191
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_university.py#L205
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_vigor.py#L193
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_vigor.py#L216
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_vigor.py#L232
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_vigor.py#L266
https://github.com/Skyy93/Sample4Geo/blob/ae037932978ed4340bf55a69697a2b6e868b3891/train_vigor.py#L280

====================================
https://github.com/cvlab-yonsei/ACLS
====================================

Found 4 times
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size,
        num_workers=num_workers, pin_memory=pin_memory, shuffle=True
    )
DataLoader(
        train_dataset, batch_size=batch_size, sampler=train_sampler,
        num_workers=num_workers, pin_memory=pin_memory
    )
DataLoader(
        val_dataset, batch_size=batch_size, sampler=val_sampler,
        num_workers=num_workers, pin_memory=pin_memory
    )
DataLoader(
        dataset, batch_size=batch_size,
        num_workers=num_workers, pin_memory=pin_memory
    )
https://github.com/cvlab-yonsei/ACLS/blob/9b96de51e69bfd9cc19e6bf891946e145561e678/calibrate/data/tiny_imagenet.py#L170
https://github.com/cvlab-yonsei/ACLS/blob/9b96de51e69bfd9cc19e6bf891946e145561e678/calibrate/data/tiny_imagenet.py#L233
https://github.com/cvlab-yonsei/ACLS/blob/9b96de51e69bfd9cc19e6bf891946e145561e678/calibrate/data/tiny_imagenet.py#L238
https://github.com/cvlab-yonsei/ACLS/blob/9b96de51e69bfd9cc19e6bf891946e145561e678/calibrate/data/tiny_imagenet.py#L265

===================================
https://github.com/ljaiverson/pgfed
===================================

Found 13 times
torch.utils.data.DataLoader(
        trainset, batch_size=len(trainset.data), shuffle=False)
torch.utils.data.DataLoader(
        testset, batch_size=len(testset.data), shuffle=False)
torch.utils.data.DataLoader(
        trainset, batch_size=len(trainset.data), shuffle=False)
torch.utils.data.DataLoader(
        testset, batch_size=len(testset.data), shuffle=False)
torch.utils.data.DataLoader(
        trainset, batch_size=len(trainset), shuffle=True)
torch.utils.data.DataLoader(
        valset, batch_size=len(valset), shuffle=True)
torch.utils.data.DataLoader(
        testset, batch_size=len(testset), shuffle=True)
torch.utils.data.DataLoader(
            trainset, batch_size=len(trainset), shuffle=False)
torch.utils.data.DataLoader(
            testset, batch_size=len(testset), shuffle=False)
DataLoader(train_data, batch_size, drop_last=True, shuffle=True)
DataLoader(test_data, batch_size, drop_last=False, shuffle=True)
DataLoader(train_data, self.batch_size, drop_last=True, shuffle=True)
DataLoader(val_data, self.batch_size, drop_last=self.has_BatchNorm, shuffle=True)
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/dataset/generate_cifar10.py#L39
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/dataset/generate_cifar10.py#L41
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/dataset/generate_cifar100.py#L39
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/dataset/generate_cifar100.py#L41
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/dataset/generate_medmnist.py#L52
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/dataset/generate_medmnist.py#L54
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/dataset/generate_medmnist.py#L56
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/dataset/generate_office_home.py#L148
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/dataset/generate_office_home.py#L150
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/system/flcore/clients/clientbase.py#L46
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/system/flcore/clients/clientbase.py#L53
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/system/flcore/clients/clientfomo.py#L79
https://github.com/ljaiverson/pgfed/blob/b1d70f7db703c80604c7328c36fc2a581e78a289/system/flcore/clients/clientfomo.py#L80

================================================================
https://github.com/princetonvisualai/overcoming-pretraining-bias
================================================================

Found 5 times
torch.utils.data.DataLoader(dollarstreet_dataset, batch_size=args.batch_size,
                    shuffle=False, num_workers=workers)
torch.utils.data.DataLoader(fairface_dataset, batch_size=args.batch_size,
                    shuffle=False, num_workers=workers)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size,
            shuffle=True, num_workers=workers)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size,
            shuffle=False, num_workers=workers)
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size,
            shuffle=False, num_workers=workers)
https://github.com/princetonvisualai/overcoming-pretraining-bias/blob/ec887ad2c6fac2c034d4d7775a7bff26df3d619c/classifier.py#L127
https://github.com/princetonvisualai/overcoming-pretraining-bias/blob/ec887ad2c6fac2c034d4d7775a7bff26df3d619c/classifier.py#L231
https://github.com/princetonvisualai/overcoming-pretraining-bias/blob/ec887ad2c6fac2c034d4d7775a7bff26df3d619c/classifier.py#L305
https://github.com/princetonvisualai/overcoming-pretraining-bias/blob/ec887ad2c6fac2c034d4d7775a7bff26df3d619c/classifier.py#L307
https://github.com/princetonvisualai/overcoming-pretraining-bias/blob/ec887ad2c6fac2c034d4d7775a7bff26df3d619c/classifier.py#L309

==========================================
https://github.com/humansensinglab/ITI-GEN
==========================================

Found 2 times
DataLoader(
        dataset=eval_dataset,
        batch_size=16,
        num_workers=8,
        drop_last=False,
    )
DataLoader(
                dataset=dataset,
                batch_size=len(dataset)//self.args.steps_per_epoch,
                num_workers=1,
                shuffle=True,
                # drop the last one
                drop_last=True,
                pin_memory=True,
            )
https://github.com/humansensinglab/ITI-GEN/blob/e80df449d3d94c8dc32385eea4087694ad0bf03d/evaluation.py#L61
https://github.com/humansensinglab/ITI-GEN/blob/e80df449d3d94c8dc32385eea4087694ad0bf03d/iti_gen/model.py#L88

====================================
https://github.com/visinf/funnybirds
====================================

Found 3 times
DataLoader(test_dataset, batch_size=2, shuffle=True)
DataLoader(test_dataset, batch_size=1, shuffle=True)
torch.utils.data.DataLoader(train_dataset_for_target, batch_size=1, shuffle=False)
https://github.com/visinf/funnybirds/blob/542d57b11f286e8270652625ed3d98c12a5facdc/custom_evaluation/evaluate_cve.py#L119
https://github.com/visinf/funnybirds/blob/542d57b11f286e8270652625ed3d98c12a5facdc/custom_evaluation/evaluate_protopnet.py#L64
https://github.com/visinf/funnybirds/blob/542d57b11f286e8270652625ed3d98c12a5facdc/custom_evaluation/evaluate_protopnet.py#L149

==================================
https://github.com/Wakings/TABASCO
==================================

Found 19 times
DataLoader(
                dataset=all_dataset, 
                batch_size=self.batch_size*2,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=labeled_dataset, 
                batch_size=self.batch_size,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=unlabeled_dataset, 
                batch_size=self.batch_size,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=test_dataset, 
                batch_size=self.batch_size,
                shuffle=False,
                num_workers=self.num_workers)
DataLoader(
                dataset=all_dataset, 
                batch_size=self.batch_size,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=eval_dataset, 
                batch_size=self.batch_size,
                shuffle=False,
                num_workers=self.num_workers)
DataLoader(
                dataset=all_dataset, 
                batch_size=self.batch_size*2,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=labeled_dataset, 
                batch_size=self.batch_size,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=unlabeled_dataset, 
                batch_size=self.batch_size,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=test_dataset, 
                batch_size=self.batch_size,
                shuffle=False,
                num_workers=self.num_workers)
DataLoader(
                dataset=all_dataset, 
                batch_size=self.batch_size,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=eval_dataset, 
                batch_size=self.batch_size,
                shuffle=False,
                num_workers=self.num_workers)
DataLoader(
                dataset=warmup_dataset, 
                batch_size=self.batch_size*2,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=labeled_dataset, 
                batch_size=self.batch_size,
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=unlabeled_dataset, 
                batch_size=int(self.batch_size),
                shuffle=True,
                num_workers=self.num_workers)
DataLoader(
                dataset=eval_dataset, 
                batch_size=self.batch_size,
                shuffle=False,
                num_workers=self.num_workers)
DataLoader(
                dataset=val_dataset, 
                batch_size=50,
                shuffle=False,
                num_workers=self.num_workers)
DataLoader(
                dataset=eval_dataset, 
                batch_size=self.batch_size,
                shuffle=False,
                num_workers=self.num_workers)
torch.utils.data.DataLoader(
imbalanced_and_noisy_train_dataset, batch_size=args.batch_size, shuffle=True, **kwargs)
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/data_utils.py#L192
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/data_utils.py#L201
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/data_utils.py#L208
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/data_utils.py#L217
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/data_utils.py#L225
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/data_utils.py#L233
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/data_utils_N.py#L241
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/data_utils_N.py#L250
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/data_utils_N.py#L257
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/data_utils_N.py#L266
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/data_utils_N.py#L274
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/data_utils_N.py#L282
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/dataloader_red_mini_imagenet.py#L171
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/dataloader_red_mini_imagenet.py#L179
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/dataloader_red_mini_imagenet.py#L185
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/dataloader_red_mini_imagenet.py#L193
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/dataloader_red_mini_imagenet.py#L201
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/datas/dataloader_red_mini_imagenet.py#L209
https://github.com/Wakings/TABASCO/blob/712992b8d1d1e7c250ed3cd7b1f3e5e65e9de044/experiment/train_cifar_ssl.py#L45

===============================
https://github.com/zhangzjn/EMO
===============================

Found 38 times
torch.utils.data.DataLoader(dataset=train_set,
											   batch_size=cfg.trainer.data.batch_size_per_gpu,
											   shuffle=(train_sampler is None),
											   sampler=train_sampler,
											   num_workers=cfg.trainer.data.num_workers_per_gpu,
											   pin_memory=cfg.trainer.data.pin_memory,
											   drop_last=cfg.trainer.data.drop_last,
											   persistent_workers=cfg.trainer.data.persistent_workers)
torch.utils.data.DataLoader(dataset=test_set,
											  batch_size=cfg.trainer.data.batch_size_per_gpu_test,
											  shuffle=False,
											  sampler=test_sampler,
											  num_workers=cfg.trainer.data.num_workers_per_gpu,
											  pin_memory=cfg.trainer.data.pin_memory,
											  drop_last=False,
											  persistent_workers=cfg.trainer.data.persistent_workers)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
        test_dataset,
        batch_size=1,
        sampler=None,
        num_workers=0,
        shuffle=False,
    )
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/data/__init__.py#L43
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/data/__init__.py#L51
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/mmdet/datasets/builder.py#L195
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_data/test_datasets/test_common.py#L224
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L76
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L88
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L99
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L111
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L115
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L133
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L135
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L155
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L157
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L177
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L197
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L216
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_runtime/test_eval_hook.py#L236
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_utils/test_hook.py#L92
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_utils/test_hook.py#L190
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_utils/test_hook.py#L246
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_utils/test_hook.py#L268
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_utils/test_hook.py#L310
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmdetection/tests/test_utils/test_hook.py#L347
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/mmseg/datasets/builder.py#L148
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/mmseg/datasets/builder.py#L161
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_eval_hook.py#L46
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_eval_hook.py#L58
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_eval_hook.py#L60
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_eval_hook.py#L84
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_eval_hook.py#L96
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_eval_hook.py#L98
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_eval_hook.py#L133
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_eval_hook.py#L145
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_eval_hook.py#L147
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_eval_hook.py#L173
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_eval_hook.py#L185
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_eval_hook.py#L187
https://github.com/zhangzjn/EMO/blob/27d9b40fea9c2a12a2fe7acc51032184852a99d8/down-stream-tasks/mmsegmentation/tests/test_apis/test_single_gpu.py#L37

==================================
https://github.com/wannature/COMIC
==================================

Found 6 times
DataLoader(dataset=train_dataset, batch_size=dataloader_setting['batch_size'], shuffle=False, sampler=sampler_dic,
                           num_workers=dataloader_setting['num_workers'])
DataLoader(dataset=val_dataset, batch_size=dataloader_setting['batch_size'],
                          shuffle=True, num_workers=dataloader_setting['num_workers'])
DataLoader(dataset=train_dataset, batch_size=dataloader_setting['batch_size'], shuffle=False, sampler=sampler_dic,
                           num_workers=dataloader_setting['num_workers'])
DataLoader(dataset=val_dataset, batch_size=dataloader_setting['batch_size'],
                          shuffle=True, num_workers=dataloader_setting['num_workers'])
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=True,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=False)
https://github.com/wannature/COMIC/blob/1de14e5cfb20b974e01faa2554c56a3348626c37/utils/dataloader.py#L220
https://github.com/wannature/COMIC/blob/1de14e5cfb20b974e01faa2554c56a3348626c37/utils/dataloader.py#L222
https://github.com/wannature/COMIC/blob/1de14e5cfb20b974e01faa2554c56a3348626c37/utils/dataloader_PLCSL.py#L148
https://github.com/wannature/COMIC/blob/1de14e5cfb20b974e01faa2554c56a3348626c37/utils/dataloader_PLCSL.py#L150
https://github.com/wannature/COMIC/blob/1de14e5cfb20b974e01faa2554c56a3348626c37/utils/get_data.py#L52
https://github.com/wannature/COMIC/blob/1de14e5cfb20b974e01faa2554c56a3348626c37/utils/get_data.py#L56

======================================================
https://github.com/nis-research/nn-frequency-shortcuts
======================================================

Found 8 times
torch.utils.data.DataLoader(self.train_dataset, batch_size=64, shuffle=True)
torch.utils.data.DataLoader(self.test_dataset, batch_size=64, shuffle=False)
torch.utils.data.DataLoader(self.val_dataset, batch_size=64)
torch.utils.data.DataLoader(dataset=data_test, batch_size=batchsize, shuffle=False)
torch.utils.data.DataLoader(data_test, batch_size= 32, shuffle=False,num_workers=4)
torch.utils.data.DataLoader(dataset=data_test, batch_size=batchsize, shuffle=False)
torch.utils.data.DataLoader(data_test, batch_size= 16, shuffle=False,num_workers=2)
torch.utils.data.DataLoader(dataset=testset, batch_size=batchsize, shuffle=False)
https://github.com/nis-research/nn-frequency-shortcuts/blob/4ef47eff595019b97211ac8be2ba6f253b955bbb/train.py#L160
https://github.com/nis-research/nn-frequency-shortcuts/blob/4ef47eff595019b97211ac8be2ba6f253b955bbb/train.py#L163
https://github.com/nis-research/nn-frequency-shortcuts/blob/4ef47eff595019b97211ac8be2ba6f253b955bbb/train.py#L166
https://github.com/nis-research/nn-frequency-shortcuts/blob/4ef47eff595019b97211ac8be2ba6f253b955bbb/Evaluation/compute_ADCS.py#L41
https://github.com/nis-research/nn-frequency-shortcuts/blob/4ef47eff595019b97211ac8be2ba6f253b955bbb/Evaluation/test_rank.py#L41
https://github.com/nis-research/nn-frequency-shortcuts/blob/4ef47eff595019b97211ac8be2ba6f253b955bbb/Evaluation/test_rank.py#L50
https://github.com/nis-research/nn-frequency-shortcuts/blob/4ef47eff595019b97211ac8be2ba6f253b955bbb/Evaluation/verify_mask_imgn.py#L40
https://github.com/nis-research/nn-frequency-shortcuts/blob/4ef47eff595019b97211ac8be2ba6f253b955bbb/Evaluation/verify_mask_imgn.py#L64

=======================================
https://github.com/ltong1130ztr/HAFrame
=======================================

Found 4 times
torch.utils.data.DataLoader(
        target_dataset,
        batch_size=opts.batch_size,
        shuffle=False,
        num_workers=opts.workers,
        pin_memory=False,  # save shared memory
        drop_last=False
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=opts.batch_size, shuffle=True, num_workers=opts.workers, pin_memory=pin_memory,
        drop_last=True
    )
torch.utils.data.DataLoader(
        val_dataset, batch_size=opts.batch_size, shuffle=False, num_workers=opts.workers, pin_memory=pin_memory,
        drop_last=True
    )
torch.utils.data.DataLoader(
        test_dataset, batch_size=opts.batch_size, shuffle=False, num_workers=opts.workers, pin_memory=pin_memory,
        drop_last=True
    )
https://github.com/ltong1130ztr/HAFrame/blob/fd3f229e67ce80bb70025b65561bfca24b1bec46/HAFrame/neural_collapse.py#L306
https://github.com/ltong1130ztr/HAFrame/blob/fd3f229e67ce80bb70025b65561bfca24b1bec46/util/data_loader.py#L34
https://github.com/ltong1130ztr/HAFrame/blob/fd3f229e67ce80bb70025b65561bfca24b1bec46/util/data_loader.py#L38
https://github.com/ltong1130ztr/HAFrame/blob/fd3f229e67ce80bb70025b65561bfca24b1bec46/util/data_loader.py#L59

========================================
https://github.com/Med-Process/Strip_MLP
========================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
https://github.com/Med-Process/Strip_MLP/blob/430d1743955af728cd42bd3ed1cf51b261cae3b0/data/build.py#L67
https://github.com/Med-Process/Strip_MLP/blob/430d1743955af728cd42bd3ed1cf51b261cae3b0/data/build.py#L75

=================================
https://github.com/xuke225/EQ-Net
=================================

Found 10 times
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True, num_workers=num_threads,
                                                 pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=False, num_workers=num_threads,
                                                 pin_memory=True)
DataLoader(
            trainset,
            batch_size=args.DATASET.train_batch_size,
            shuffle=True,
            num_workers=args.DATASET.workers,
            pin_memory=pin_memory)
DataLoader(
            testset,
            batch_size=args.DATASET.eval_batch_size,
            shuffle=False,
            num_workers=args.DATASET.workers,
            pin_memory=True,
            sampler=val_sampler)
torch.utils.data.DataLoader(
            train_dataset, batch_size=batch_size, shuffle=True, pin_memory=False, num_workers=n_workers
        )
torch.utils.data.DataLoader(
            val_dataset, batch_size=batch_size, shuffle=False, pin_memory=False, num_workers=n_workers
        )
torch.utils.data.DataLoader(dataset=train_set, batch_size=cfg.DATASET.train_batch_size,
                                               sampler=train_sampler,
                                               shuffle=False, pin_memory=True, num_workers=2)
torch.utils.data.DataLoader(dataset=test_set, batch_size=cfg.DATASET.train_batch_size, shuffle=False,
                                              pin_memory=True, num_workers=2)
torch.utils.data.DataLoader(dataset=train_set, batch_size=cfg.DATASET.train_batch_size,
                                               sampler=train_sampler,
                                               shuffle=False, pin_memory=True, num_workers=2)
torch.utils.data.DataLoader(dataset=test_set, batch_size=cfg.DATASET.train_batch_size, shuffle=False,
                                              pin_memory=True, num_workers=2)
https://github.com/xuke225/EQ-Net/blob/86b9e417ec906fb87493fd1c00feb22574341285/data/imagenet_dali.py#L17
https://github.com/xuke225/EQ-Net/blob/86b9e417ec906fb87493fd1c00feb22574341285/data/imagenet_dali.py#L27
https://github.com/xuke225/EQ-Net/blob/86b9e417ec906fb87493fd1c00feb22574341285/data/imagenet_train_val_split.py#L42
https://github.com/xuke225/EQ-Net/blob/86b9e417ec906fb87493fd1c00feb22574341285/data/imagenet_train_val_split.py#L82
https://github.com/xuke225/EQ-Net/blob/86b9e417ec906fb87493fd1c00feb22574341285/search/accuracy_predictor/acc_dataset.py#L205
https://github.com/xuke225/EQ-Net/blob/86b9e417ec906fb87493fd1c00feb22574341285/search/accuracy_predictor/acc_dataset.py#L208
https://github.com/xuke225/EQ-Net/blob/86b9e417ec906fb87493fd1c00feb22574341285/train/train_supernet.py#L60
https://github.com/xuke225/EQ-Net/blob/86b9e417ec906fb87493fd1c00feb22574341285/train/train_supernet.py#L63
https://github.com/xuke225/EQ-Net/blob/86b9e417ec906fb87493fd1c00feb22574341285/train/train_supernet_imagenet.py#L68
https://github.com/xuke225/EQ-Net/blob/86b9e417ec906fb87493fd1c00feb22574341285/train/train_supernet_imagenet.py#L71

=====================================
https://github.com/RoryShao/DFKD-FGVC
=====================================

Found 14 times
torch.utils.data.DataLoader( 
            datasets.CIFAR10(args.data_root, train=True, download=False,
                       transform=transforms.Compose([
                            transforms.RandomCrop(32, padding=4),
                            transforms.RandomHorizontalFlip(),
                            transforms.ToTensor(),
                            transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010)),
                        ])),
            batch_size=args.batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader( 
            datasets.CIFAR10(args.data_root, train=False, download=False,
                       transform=transforms.Compose([
                            transforms.ToTensor(),
                            transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010)),
                        ])),
            batch_size=args.batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(
                datasets.CIFAR100(args.data_root, train=True, download=True,
                           transform=transforms.Compose([
                                transforms.RandomCrop(32, padding=4),
                                transforms.RandomHorizontalFlip(),
                                transforms.ToTensor(),
                                transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010)),
                            ])),
                batch_size=args.batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(
                datasets.CIFAR100(args.data_root, train=False, download=True,
                           transform=transforms.Compose([
                                transforms.ToTensor(),
                                transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010)),
                            ])),
                batch_size=args.batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(
                datasets.CIFAR100(args.data_root, train=False, download=True,
                                  transform=transforms.Compose([
                                      transforms.ToTensor(),
                                      transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010)),
                                  ])),
                batch_size=args.batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(
                dataset=train_cars196, batch_size=args.batch_size, shuffle=True, pin_memory=False, num_workers=8
            )
torch.utils.data.DataLoader(
                dataset=test_car196, batch_size=args.batch_size, shuffle=True, pin_memory=False, num_workers=8
            )
torch.utils.data.DataLoader(
                dataset=test_car196, batch_size=args.batch_size, shuffle=True, pin_memory=False, num_workers=4
            )
torch.utils.data.DataLoader(
                dataset=train_cub200, batch_size=args.batch_size, shuffle=True, pin_memory=False, num_workers=8
            )
torch.utils.data.DataLoader(
                dataset=test_cub200, batch_size=args.batch_size, shuffle=True, pin_memory=False, num_workers=8
            )
torch.utils.data.DataLoader(
                dataset=test_cub200, batch_size=args.batch_size, shuffle=True, pin_memory=False, num_workers=8
            )
torch.utils.data.DataLoader(
                dataset=train_aircraft, batch_size=args.batch_size, shuffle=True, pin_memory=False, num_workers=0
            )
torch.utils.data.DataLoader(
                dataset=test_aircraft, batch_size=args.batch_size, shuffle=True, pin_memory=False, num_workers=0
            )
torch.utils.data.DataLoader(
                dataset=test_aircraft, batch_size=args.test_batch_size, shuffle=True, pin_memory=False, num_workers=4
            )
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L9
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L18
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L27
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L36
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L45
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L71
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L74
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L79
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L102
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L105
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L110
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L132
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L135
https://github.com/RoryShao/DFKD-FGVC/blob/adef9ffc75f149b37382a51683e191c79c98a905/dataloader.py#L140

=======================================
https://github.com/leeisack/Latent-OFER
=======================================

Found 3 times
torch.utils.data.DataLoader(train_dataset,
                                               batch_size = args.batch_size,
                                               num_workers = args.workers,
                                               shuffle = True,  
                                               pin_memory = True,
    )
torch.utils.data.DataLoader(val_dataset,
                                               batch_size = args.batch_size,
                                               num_workers = args.workers,
                                               shuffle = False,  
                                               pin_memory = True)
torch.utils.data.DataLoader(val_dataset,
                                               batch_size = args.batch_size,
                                               num_workers = args.workers,
                                               shuffle = False,  
                                               pin_memory = True)
https://github.com/leeisack/Latent-OFER/blob/c602a2eb4a80c1fbcebca63f20d805ee9f8dc310/main.py#L123
https://github.com/leeisack/Latent-OFER/blob/c602a2eb4a80c1fbcebca63f20d805ee9f8dc310/main.py#L139
https://github.com/leeisack/Latent-OFER/blob/c602a2eb4a80c1fbcebca63f20d805ee9f8dc310/only_test.py#L124

==================================
https://github.com/weeknan/DR-Tune
==================================

Found 2 times
torch.utils.data.DataLoader(dataset=train_dataset, 
                                batch_size=args.batch_size, 
                                shuffle=True,
                                drop_last=True,
                                num_workers=args.workers,
                                )
torch.utils.data.DataLoader(dataset=test_dataset, 
                                    batch_size=args.batch_size, 
                                    shuffle=False,
                                    drop_last=False,
                                    num_workers=args.workers
                                    )
https://github.com/weeknan/DR-Tune/blob/ef9a7b18b5a77d690ac02c6b2044fc8bc8a101f8/loader.py#L35
https://github.com/weeknan/DR-Tune/blob/ef9a7b18b5a77d690ac02c6b2044fc8bc8a101f8/loader.py#L42

=====================================
https://github.com/cure-lab/DiffGuard
=====================================

Found 5 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
DataLoader(dataset,
                                batch_size=split_config.batch_size,
                                shuffle=split_config.shuffle,
                                num_workers=dataset_config.num_workers,
                                sampler=sampler)
DataLoader(dataset,
                                    batch_size=ood_config.batch_size,
                                    shuffle=shuffle,
                                    num_workers=ood_config.num_workers,
                                    sampler=sampler)
DataLoader(dataset,
                                        batch_size=ood_config.batch_size,
                                        shuffle=shuffle,
                                        num_workers=ood_config.num_workers,
                                        sampler=sampler)
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/guided_diffusion/image_datasets.py#L59
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/guided_diffusion/image_datasets.py#L63
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/ood_tester/dataloader.py#L54
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/ood_tester/dataloader.py#L95
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/ood_tester/dataloader.py#L123

========================================
https://github.com/OpenGVLab/UniFormerV2
========================================

Found 3 times
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
            persistent_workers=True
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
                persistent_workers=True
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
                persistent_workers=True
            )
https://github.com/OpenGVLab/UniFormerV2/blob/722a43440fc5b9662cc2a8f23b86caa205e45ebc/slowfast/datasets/loader.py#L115
https://github.com/OpenGVLab/UniFormerV2/blob/722a43440fc5b9662cc2a8f23b86caa205e45ebc/slowfast/datasets/loader.py#L137
https://github.com/OpenGVLab/UniFormerV2/blob/722a43440fc5b9662cc2a8f23b86caa205e45ebc/slowfast/datasets/loader.py#L158

=============================
https://github.com/cxliu0/PET
=============================

Found 3 times
DataLoader(dataset_val, 1, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, 1, sampler=sampler_val,
                                drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
https://github.com/cxliu0/PET/blob/0b3c89bf33c450e2040889d31ffe40787df02264/eval.py#L101
https://github.com/cxliu0/PET/blob/0b3c89bf33c450e2040889d31ffe40787df02264/main.py#L137
https://github.com/cxliu0/PET/blob/0b3c89bf33c450e2040889d31ffe40787df02264/main.py#L139

=================================
https://github.com/sooperset/boss
=================================

Found 5 times
data.DataLoader(trainset, batch_size=args.train_batch, shuffle=True, num_workers=args.workers)
data.DataLoader(testset, batch_size=args.test_batch, shuffle=False, num_workers=args.workers)
data.DataLoader(trainset, batch_size=args.train_batch, shuffle=True, num_workers=args.workers)
data.DataLoader(testset, batch_size=args.test_batch, shuffle=False, num_workers=args.workers)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
https://github.com/sooperset/boss/blob/deabe60fd19a7cf2d2f88b7287187af3bc76fd62/cifar.py#L134
https://github.com/sooperset/boss/blob/deabe60fd19a7cf2d2f88b7287187af3bc76fd62/cifar.py#L137
https://github.com/sooperset/boss/blob/deabe60fd19a7cf2d2f88b7287187af3bc76fd62/single_trial.py#L143
https://github.com/sooperset/boss/blob/deabe60fd19a7cf2d2f88b7287187af3bc76fd62/single_trial.py#L146
https://github.com/sooperset/boss/blob/deabe60fd19a7cf2d2f88b7287187af3bc76fd62/utils/misc.py#L21

==============================
https://github.com/TOM-tym/APG
==============================

Found 5 times
DataLoader(
                DummyDataset(x, y, memory_flags, trsf, open_image=self.open_image),
                batch_size=batch_size,
                shuffle=shuffle if sampler is None else False,
                num_workers=self._workers,
                batch_sampler=sampler,
            )
DataLoader(
                    DummyDataset(x, y, memory_flags, trsf, open_image=self.open_image), batch_size=batch_size,
                    num_workers=self._workers, sampler=sampler, pin_memory=pin_mem, drop_last=drop_last,
                    prefetch_factor=prefetch_factor
                )
DataLoader(
                    DummyDataset(x, y, memory_flags, trsf, open_image=self.open_image), batch_size=batch_size,
                    num_workers=self._workers, sampler=sampler, pin_memory=pin_mem, drop_last=drop_last,
                    # prefetch_factor=prefetch_factor
                )
torch.utils.data.DataLoader(temp_immediate_dataset, sampler=sampler_train,
                                                           batch_size=batchsize, num_workers=0, drop_last=False, )
torch.utils.data.DataLoader(dataset, sampler=sampler_train,
                                                      batch_size=batchsize, num_workers=0, drop_last=True,
                                                      collate_fn=my_collect_fn)
https://github.com/TOM-tym/APG/blob/e92801209e45c7d28cf8f1c537bf63be70d3663f/inclearn/lib/data/incdataset.py#L332
https://github.com/TOM-tym/APG/blob/e92801209e45c7d28cf8f1c537bf63be70d3663f/inclearn/lib/data/incdataset.py#L350
https://github.com/TOM-tym/APG/blob/e92801209e45c7d28cf8f1c537bf63be70d3663f/inclearn/lib/data/incdataset.py#L356
https://github.com/TOM-tym/APG/blob/e92801209e45c7d28cf8f1c537bf63be70d3663f/inclearn/models/continual_trans.py#L557
https://github.com/TOM-tym/APG/blob/e92801209e45c7d28cf8f1c537bf63be70d3663f/inclearn/models/continual_trans.py#L1050

=================================
https://github.com/JackHck/MADAug
=================================

Found 5 times
torch.utils.data.DataLoader(
            train_data, batch_size=batch, shuffle=True,
            drop_last=True, pin_memory=True,
            num_workers=num_workers)
torch.utils.data.DataLoader(
            train_data, batch_size=batch, shuffle=False,
            sampler=train_sampler, drop_last=False,
            pin_memory=True, num_workers=num_workers)
torch.utils.data.DataLoader(
        valid_data, batch_size=batch,
        sampler=valid_sampler, drop_last=False,
        pin_memory=True, num_workers=num_workers)
torch.utils.data.DataLoader(
            search_data, batch_size=search_divider,
            shuffle=True, drop_last=True, pin_memory=True,
            num_workers=num_workers)
torch.utils.data.DataLoader(
        test_data, batch_size=batch,
        sampler=test_sampler, drop_last=False,
        pin_memory=True, num_workers=num_workers)
https://github.com/JackHck/MADAug/blob/279b60a4d6e338aaa03ef0564a7bf94b8995f0b6/dataset.py#L208
https://github.com/JackHck/MADAug/blob/279b60a4d6e338aaa03ef0564a7bf94b8995f0b6/dataset.py#L213
https://github.com/JackHck/MADAug/blob/279b60a4d6e338aaa03ef0564a7bf94b8995f0b6/dataset.py#L218
https://github.com/JackHck/MADAug/blob/279b60a4d6e338aaa03ef0564a7bf94b8995f0b6/dataset.py#L224
https://github.com/JackHck/MADAug/blob/279b60a4d6e338aaa03ef0564a7bf94b8995f0b6/dataset.py#L231

====================================
https://github.com/liangchen527/RIDG
====================================

Found 2 times
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler)
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler)
        )
https://github.com/liangchen527/RIDG/blob/fa22b8dd011dc3d757e6730103316a41c8b98af7/domainbed/lib/fast_data_loader.py#L35
https://github.com/liangchen527/RIDG/blob/fa22b8dd011dc3d757e6730103316a41c8b98af7/domainbed/lib/fast_data_loader.py#L60

===================================================
https://github.com/bic-L/Masked-Spiking-Transformer
===================================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=config.DATA.BATCH_SIZE,
        shuffle=False,
        num_workers=config.DATA.NUM_WORKERS,
        pin_memory=config.DATA.PIN_MEMORY,
        drop_last=False
    )
https://github.com/bic-L/Masked-Spiking-Transformer/blob/5340de2a3e331827674629c708e0b86e6510a06b/data/build.py#L67
https://github.com/bic-L/Masked-Spiking-Transformer/blob/5340de2a3e331827674629c708e0b86e6510a06b/data/build.py#L75

==================================
https://github.com/ShiWuxuan/PRAKA
==================================

Found 14 times
DataLoader(dataset=self.train_dataset,
                                  shuffle=True,
                                  batch_size=self.args.batch_size)
DataLoader(dataset=self.test_dataset,
                                 shuffle=True,
                                 batch_size=self.args.batch_size)
DataLoader(dataset=self.test_dataset,
                                 shuffle=True,
                                 batch_size=self.args.batch_size)
DataLoader(dataset=test_dataset,
                                     shuffle=True,
                                     batch_size=args.batch_size)
DataLoader(dataset=test_dataset,
                                 shuffle=True,
                                 batch_size=args.batch_size)
torch.utils.data.DataLoader(trainfolder, batch_size=self.args.batch_size,
            shuffle=True, drop_last=True, num_workers=8)
torch.utils.data.DataLoader(testfolder, batch_size=self.args.batch_size,
            shuffle=False, drop_last=False, num_workers=8)
DataLoader(dataset=test_dataset, shuffle=False, batch_size=self.args.batch_size)
DataLoader(dataset=test_dataset, shuffle=False, batch_size=args.batch_size)
DataLoader(dataset=test_dataset, shuffle=False, batch_size=args.batch_size)
torch.utils.data.DataLoader(trainfolder, batch_size=self.args.batch_size,
            shuffle=True, drop_last=True, num_workers=8)
torch.utils.data.DataLoader(testfolder, batch_size=self.args.batch_size,
            shuffle=False, drop_last=False, num_workers=8)
DataLoader(dataset=test_dataset, shuffle=False, batch_size=args.batch_size)
DataLoader(dataset=test_dataset, shuffle=False, batch_size=args.batch_size)
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Cifar100/jointSSL.py#L59
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Cifar100/jointSSL.py#L63
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Cifar100/jointSSL.py#L71
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Cifar100/main.py#L105
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Cifar100/main.py#L154
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Imagenet-Subset/jointSSL_subset.py#L56
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Imagenet-Subset/jointSSL_subset.py#L58
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Imagenet-Subset/jointSSL_subset.py#L122
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Imagenet-Subset/main_subset.py#L100
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Imagenet-Subset/main_subset.py#L145
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Tiny-ImageNet/jointSSL_tiny.py#L58
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Tiny-ImageNet/jointSSL_tiny.py#L60
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Tiny-ImageNet/main_tiny.py#L94
https://github.com/ShiWuxuan/PRAKA/blob/0454b854c538fb071dd2159a07414be135aa6960/Tiny-ImageNet/main_tiny.py#L140

=================================
https://github.com/xmed-lab/CLIPN
=================================

Found 24 times
torch.utils.data.DataLoader(
            self.train_dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.train_dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.train_dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=args.workers,
        sampler=sampler,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.train_dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=args.workers,
        sampler=sampler,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L60
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L68
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L82
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L94
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L106
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L118
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L131
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L143
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L155
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L167
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L183
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L191
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L250
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/tuning_util.py#L254
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/training/data.py#L143
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/hand-crafted/src/training/data.py#L413
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/src/tuning_util.py#L57
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/src/tuning_util.py#L70
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/src/tuning_util.py#L82
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/src/tuning_util.py#L94
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/src/tuning_util.py#L130
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/src/tuning_util.py#L134
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/src/training/data.py#L143
https://github.com/xmed-lab/CLIPN/blob/e465074b5f2281b5488b66de4b51e3e8bc89d911/src/training/data.py#L413

==================================
https://github.com/xiaoboxia/CoDis
==================================

Found 4 times
torch.utils.data.DataLoader(dataset=train_dataset,
                                               batch_size=batch_size,
                                               num_workers=args.num_workers,
                                               drop_last=True,
                                               shuffle=False)
torch.utils.data.DataLoader(dataset=val_dataset,
                                              batch_size=batch_size,
                                              num_workers=args.num_workers,
                                              drop_last=True,
                                              shuffle=False)
torch.utils.data.DataLoader(dataset=test_dataset,
                                              batch_size=batch_size,
                                              num_workers=args.num_workers,
                                              drop_last=True,
                                              shuffle=False)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
https://github.com/xiaoboxia/CoDis/blob/bc552aaf9e41bb00ebc1634ede8dc202317bbad1/main.py#L330
https://github.com/xiaoboxia/CoDis/blob/bc552aaf9e41bb00ebc1634ede8dc202317bbad1/main.py#L336
https://github.com/xiaoboxia/CoDis/blob/bc552aaf9e41bb00ebc1634ede8dc202317bbad1/main.py#L343
https://github.com/xiaoboxia/CoDis/blob/bc552aaf9e41bb00ebc1634ede8dc202317bbad1/tools.py#L125

====================================
https://github.com/xmuqimingxia/CoIn
====================================

Found 1 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0, worker_init_fn=partial(common_utils.worker_init_fn, seed=seed)
    )
https://github.com/xmuqimingxia/CoIn/blob/a219f0bf7df4e41c0c388575ab745792496081cf/pcdet/datasets/__init__.py#L75

===========================================
https://github.com/bravezzzzzz/RecursiveDet
===========================================

Found 3 times
torch.utils.data.DataLoader(
            dataset,
            sampler=sampler,
            num_workers=num_workers,
            batch_sampler=None,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=trivial_batch_collator,
            worker_init_fn=worker_init_reset_seed,
        )
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/bravezzzzzz/RecursiveDet/blob/1785b453da558fa48742e21ad3d4cfefec896d47/detectron2/data/build.py#L279
https://github.com/bravezzzzzz/RecursiveDet/blob/1785b453da558fa48742e21ad3d4cfefec896d47/detectron2/data/build.py#L292
https://github.com/bravezzzzzz/RecursiveDet/blob/1785b453da558fa48742e21ad3d4cfefec896d47/detectron2/data/build.py#L442

=====================================
https://github.com/shaunyuan22/CFINet
=====================================

Found 21 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/mmdet/datasets/builder.py#L195
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_data/test_datasets/test_common.py#L224
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L76
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L88
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L99
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L111
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L115
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L133
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L135
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L155
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L157
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L177
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L197
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L216
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_runtime/test_eval_hook.py#L236
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_utils/test_hook.py#L92
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_utils/test_hook.py#L190
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_utils/test_hook.py#L246
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_utils/test_hook.py#L268
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_utils/test_hook.py#L310
https://github.com/shaunyuan22/CFINet/blob/2167eebdc420046165e78a7555e40b044355cb58/tests/test_utils/test_hook.py#L347

=======================================
https://github.com/iSEE-Laboratory/ASAG
=======================================

Found 2 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train, num_workers=args.num_workers, collate_fn=utils.collate_fn)
DataLoader(dataset_val, 1, sampler=sampler_val,
                                 drop_last=False, num_workers=args.num_workers, collate_fn=utils.collate_fn)
https://github.com/iSEE-Laboratory/ASAG/blob/0ff06d223a15040f02d62a6a4e007383f6c3085b/main.py#L215
https://github.com/iSEE-Laboratory/ASAG/blob/0ff06d223a15040f02d62a6a4e007383f6c3085b/main.py#L216

=====================================
https://github.com/alibaba/easyrobust
=====================================

Found 156 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=False, num_workers=1, drop_last=True
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=True, num_workers=1, drop_last=True
        )
data.DataLoader(datasets, batch_size=opt.batch_size, shuffle=not opt.no_shuffle,
                              num_workers=int(opt.nThreads), drop_last=True)
torch.utils.data.DataLoader(
                    dataset_in, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                    dataset_in, sampler=None,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                    dataset_ina, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                            inc_dataset, sampler=sampler,
                            batch_size=test_batchsize,
                            num_workers=4,
                            pin_memory=True,
                            drop_last=False
                        )
torch.utils.data.DataLoader(
                    dataset_inr, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                    dataset_insk, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                    dataset_inv2, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                    dataset_objnet, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
torch.utils.data.DataLoader(
                    dataset_instyle, sampler=sampler,
                    batch_size=test_batchsize,
                    num_workers=4,
                    pin_memory=True,
                    drop_last=False
                )
DataLoader(ds, batch_size=batch_size,
                        drop_last=False, num_workers=cpu_count())
torch.utils.data.DataLoader(dataset, batch_size=1)
torch.utils.data.DataLoader(
        train_data, batch_size=batch_size,
        shuffle=(train_sampler is None) and shuffle_train,
        sampler=train_sampler, pin_memory=True, num_workers=8, drop_last=drop_last_train)
torch.utils.data.DataLoader(
        valid_data, batch_size=batch_size,
        shuffle=(valid_sampler is None),
        sampler=valid_sampler, pin_memory=True, num_workers=1, drop_last=False)
DataLoader(dataset, batch_size=batch_size)
torch.utils.data.DataLoader(candidate_dataset,
                                                  batch_size=batch_size)
DataLoader(dataset, batch_size=batch_size)
DataLoader(dataset,
                                                                      batch_size=batch_size,
                                                                      shuffle=False)
DataLoader(target_subset, batch_size)
DataLoader(TensorDataset(w_masked), batch_size, shuffle=False)
DataLoader(target_subset, batch_size)
torch.utils.data.DataLoader(dataset,
                                                 batch_size=self.batch_size,
                                                 shuffle=False,
                                                 drop_last=False,
                                                 pin_memory=True,
                                                 num_workers=self.num_workers)
torch.utils.data.DataLoader(dataset,
                                                 batch_size=self.batch_size,
                                                 shuffle=False,
                                                 drop_last=False,
                                                 pin_memory=True,
                                                 num_workers=self.num_workers)
DataLoader(dataset,
                                                                      batch_size=batch_size,
                                                                      shuffle=False)
torch.utils.data.DataLoader(dataset,
                                                 batch_size=self.batch_size,
                                                 shuffle=False,
                                                 drop_last=False,
                                                 pin_memory=True,
                                                 num_workers=self.num_workers)
DataLoader(training_data,
                                 batch_size=batch_size,
                                 shuffle=True,
                                 num_workers=dataloader_num_workers,
                                 pin_memory=True)
DataLoader(evaluation_data,
                                batch_size=batch_size,
                                shuffle=False,
                                num_workers=dataloader_num_workers,
                                pin_memory=True)
DataLoader(training_data,
                                 batch_size=batch_size,
                                 shuffle=True,
                                 num_workers=dataloader_num_workers,
                                 pin_memory=True)
DataLoader(evaluation_data,
                                batch_size=batch_size,
                                shuffle=False,
                                num_workers=dataloader_num_workers,
                                pin_memory=True)
torch.utils.data.DataLoader(data_set, batch_size=args.batch_size, shuffle=False, **kwargs)
DataLoader(img_set, batch_size=batch_size, num_workers=2)
torch.utils.data.DataLoader(
        val_set,
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(imagenet_data, batch_size=1, shuffle=True)
torch.utils.data.DataLoader(imagenet_data, batch_size=1, shuffle=True)
torch.utils.data.DataLoader(imagenet_data, batch_size=1, shuffle=True)
torch.utils.data.DataLoader(imagenet_data, batch_size=1, shuffle=True)
DataLoader(
            dataset=self.dataset,
            batch_sampler=batches,
            num_workers=self.num_workers,
            pin_memory=self.pin_memory,
            **kwargs,
        )
DataLoader(
            dataset=dataset,
            pin_memory=ngpu > 0,
            num_workers=num_workers,
            **kwargs,
        )
DataLoader(
            dataset=dataset,
            pin_memory=ngpu > 0,
            num_workers=num_workers,
            **kwargs,
        )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=train_sampler,
        shuffle=train_sampler is None,
        batch_size=args.batch_size,
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=True, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        dataset_eval,
        sampler=eval_sampler,
        shuffle=False,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.workers,
        pin_memory=args.pin_mem,
        drop_last=False, 
        persistent_workers=True
    )
torch.utils.data.DataLoader(
        in_set, batch_size=args.batch, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
        out_set, batch_size=args.batch, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(in_set, batch_size=args.batch, shuffle=False, num_workers=4)
torch.utils.data.DataLoader(
        out_set, batch_size=args.batch, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
            ImageFolderWithPaths(path, transformations,
                                 info_mapping=info_mapping),
            batch_size=batch_size, shuffle=False,
            num_workers=num_workers, pin_memory=True)
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/benchmarks/imagenet-e/ImageNet-Editing/editing_diffusion/guided_diffusion/guided_diffusion/image_datasets.py#L59
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/benchmarks/imagenet-e/ImageNet-Editing/editing_diffusion/guided_diffusion/guided_diffusion/image_datasets.py#L63
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/benchmarks/imagenet-e/ImageNet-Editing/object_removal/TFill/dataloader/data_loader.py#L125
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/clean.py#L31
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/adversarial/autoattack.py#L56
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/imagenet_a.py#L36
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/imagenet_c.py#L80
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/imagenet_r.py#L36
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/imagenet_sketch.py#L33
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/imagenet_v2.py#L32
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/objectnet.py#L77
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/easyrobust/benchmarks/ood/stylized_imagenet.py#L31
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/LSGM/fid/fid_score.py#L122
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/LSGM/scripts/convert_tfrecord_to_lmdb.py#L48
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/LSGM/util/datasets.py#L191
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/LSGM/util/datasets.py#L196
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/attacks/final_selection.py#L57
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/attacks/initial_selection.py#L57
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/attacks/.ipynb_checkpoints/final_selection-checkpoint.py#L57
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/classification_acc.py#L33
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/distance_metrics.py#L72
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/distance_metrics.py#L79
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/distance_metrics.py#L128
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/fid_score.py#L54
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/prcd.py#L87
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/.ipynb_checkpoints/classification_acc-checkpoint.py#L33
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/metrics/.ipynb_checkpoints/fid_score-checkpoint.py#L54
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/models/classifier.py#L349
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/models/classifier.py#L615
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/models/.ipynb_checkpoints/classifier-checkpoint.py#L368
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/models/.ipynb_checkpoints/classifier-checkpoint.py#L634
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dra/attack.py#L211
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dra/dataset.py#L36
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dra/validate.py#L152
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/inequality_test.py#L77
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/noise_eval.py#L122
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/occlusion_eval.py#L184
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/saliency_example.py#L161
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/transaudio/espnet/espnet2/iterators/sequence_iter_factory.py#L137
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/transaudio/espnet/espnet2/tasks/abs_task.py#L1753
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/transaudio/espnet/espnet2/tasks/abs_task_o.py#L1753
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/base_training_script.py#L568
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/base_training_script.py#L579
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/resnet50.py#L536
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/resnet50.py#L547
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/SIN/main.py#L536
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/SIN/main.py#L547
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/adversarial_training/main.py#L644
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/adversarial_training/main.py#L655
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/advprop/main.py#L560
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/advprop/main.py#L571
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/apr/main.py#L538
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/apr/main.py#L549
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/augmix/main.py#L537
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/augmix/main.py#L548
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/dat/main.py#L596
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/dat/main.py#L607
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/deepaugment/main.py#L536
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/deepaugment/main.py#L547
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/drvit/main.py#L569
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/drvit/main.py#L580
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/fan/main.py#L569
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/fan/main.py#L580
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/hat/main.py#L580
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/hat/main.py#L591
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/prime/main.py#L526
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/prime/main.py#L537
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/rvt/main.py#L569
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/rvt/main.py#L580
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/shape_texture_debiased_training/main.py#L560
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/shape_texture_debiased_training/main.py#L571
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/wiseft/main.py#L497
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/wiseft/main.py#L508
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/ood_detection/BATS/test_ood.py#L55
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/ood_detection/BATS/test_ood.py#L59
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/ood_detection/BATS/test_ood.py#L85
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/ood_detection/BATS/test_ood.py#L98
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/tools/modelvshuman/modelvshuman/datasets/dataloaders.py#L70

===================================
https://github.com/callsys/GenPromp
===================================

Found 3 times
torch.utils.data.DataLoader(dataset, **data_configs)
torch.utils.data.DataLoader(subdataset, **data_configs)
torch.utils.data.DataLoader(dataset, **data_configs)
https://github.com/callsys/GenPromp/blob/c480e0a106d7158da4a4e86cc27441f181996b04/main.py#L215
https://github.com/callsys/GenPromp/blob/c480e0a106d7158da4a4e86cc27441f181996b04/main.py#L399
https://github.com/callsys/GenPromp/blob/c480e0a106d7158da4a4e86cc27441f181996b04/main.py#L535

=================================================
https://github.com/wogur110/PNI_Anomaly_Detection
=================================================

Found 7 times
DataLoader(transformed_data, batch_size, shuffle=shuffle)
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=sampler is None and is_training,
        num_workers=num_workers,
        sampler=sampler,
        collate_fn=collate_fn,
        drop_last=is_training,
    )
DataLoader(image_datasets, batch_size=1, shuffle=True, num_workers=args.num_workers, pin_memory=True)
DataLoader(test_datasets, batch_size=1, shuffle=False, num_workers=args.num_workers, pin_memory=True)
DataLoader(train_dataset, batch_size=args.dist_batchsize, shuffle=True, num_workers=args.num_workers, pin_memory=True)
DataLoader(val_dataset, batch_size=args.dist_batchsize, shuffle=False, num_workers=args.num_workers, pin_memory=True)
DataLoader(distribution_dataset_generator, batch_size=8192, shuffle=False, num_workers=args.num_workers)
https://github.com/wogur110/PNI_Anomaly_Detection/blob/958626a3408fc3b1561751abfd1ce534f66603f6/refinement/data.py#L62
https://github.com/wogur110/PNI_Anomaly_Detection/blob/958626a3408fc3b1561751abfd1ce534f66603f6/refinement/timm/data/loader.py#L179
https://github.com/wogur110/PNI_Anomaly_Detection/blob/958626a3408fc3b1561751abfd1ce534f66603f6/utils/data/load_data.py#L149
https://github.com/wogur110/PNI_Anomaly_Detection/blob/958626a3408fc3b1561751abfd1ce534f66603f6/utils/data/load_data.py#L160
https://github.com/wogur110/PNI_Anomaly_Detection/blob/958626a3408fc3b1561751abfd1ce534f66603f6/utils/data/load_data.py#L300
https://github.com/wogur110/PNI_Anomaly_Detection/blob/958626a3408fc3b1561751abfd1ce534f66603f6/utils/data/load_data.py#L301
https://github.com/wogur110/PNI_Anomaly_Detection/blob/958626a3408fc3b1561751abfd1ce534f66603f6/utils/data/load_data.py#L432

===================================
https://github.com/Sephirex-X/ADNet
===================================

Found 2 times
torch.utils.data.DataLoader(
            dataset,batch_sampler=bs,
            num_workers = cfg.workers, pin_memory = False, drop_last = False,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            worker_init_fn=init_fn)
torch.utils.data.DataLoader(
                    dataset, batch_size = samples_per_gpu, shuffle = shuffle,
                    num_workers = cfg.workers, pin_memory = True, drop_last = False,
                    collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
                    worker_init_fn=init_fn)
https://github.com/Sephirex-X/ADNet/blob/5b75de0b884f2e86e6411e46f4c4e7fb7d563bab/adnet/datasets/registry.py#L48
https://github.com/Sephirex-X/ADNet/blob/5b75de0b884f2e86e6411e46f4c4e7fb7d563bab/adnet/datasets/registry.py#L54

=================================
https://github.com/ltttpku/ADA-CM
=================================

Found 16 times
DataLoader(
        dataset=datasets[0], collate_fn=collate_fn,
        batch_size=args.batch_size,
        num_workers=args.num_workers, pin_memory=True,
        sampler=DistributedSampler(
            datasets[0], num_replicas=args.world_size,
            rank=rank, drop_last=True
        )
    )
DataLoader(
        dataset=datasets[1], collate_fn=collate_fn,
        batch_size=args.batch_size,
        num_workers=args.num_workers, pin_memory=True,
        sampler=DistributedSampler(
            datasets[1], num_replicas=args.world_size,
            rank=rank, drop_last=True, shuffle=False
        )
    )
DataLoader(
        dataset=trainset,
        collate_fn=custom_collate, batch_size=args.batch_size,
        num_workers=args.num_workers, pin_memory=True, drop_last=True,
        sampler=DistributedSampler(
            trainset, 
            num_replicas=args.world_size, 
            rank=rank)
    )
DataLoader(
        dataset=trainset,
        collate_fn=custom_collate, batch_size=1,
        num_workers=args.num_workers, pin_memory=True, drop_last=False,
        sampler=torch.utils.data.SequentialSampler(trainset)
    )
DataLoader(
        dataset=datasets[0], collate_fn=collate_fn,
        batch_size=args.batch_size,
        num_workers=args.num_workers, pin_memory=True,
        sampler=DistributedSampler(
            datasets[0], num_replicas=args.world_size,
            rank=rank, drop_last=True
        )
    )
DataLoader(
        dataset=datasets[1], collate_fn=collate_fn,
        batch_size=args.batch_size,
        num_workers=args.num_workers, pin_memory=True,
        sampler=DistributedSampler(
            datasets[1], num_replicas=args.world_size,
            rank=rank, drop_last=True, shuffle=False
        )
    )
DataLoader(
        dataset=trainset,
        collate_fn=custom_collate, batch_size=args.batch_size,
        num_workers=args.num_workers, pin_memory=True, drop_last=True,
        sampler=DistributedSampler(
            trainset, 
            num_replicas=args.world_size, 
            rank=rank)
    )
DataLoader(
        dataset=trainset,
        collate_fn=custom_collate, batch_size=1,
        num_workers=args.num_workers, pin_memory=True, drop_last=False,
        sampler=torch.utils.data.SequentialSampler(trainset)
    )
DataLoader(
        dataset=trainset,
        collate_fn=custom_collate, batch_size=args.batch_size,
        num_workers=args.num_workers, pin_memory=False, drop_last=True,
        sampler=DistributedSampler(
            trainset, 
            num_replicas=args.world_size, 
            rank=rank)
    )
DataLoader(
        dataset=testset,
        collate_fn=custom_collate, batch_size=1,
        num_workers=args.num_workers, pin_memory=False, drop_last=False,
        sampler=torch.utils.data.SequentialSampler(testset)
    )
DataLoader(
        dataset=trainset,
        collate_fn=custom_collate, batch_size=args.batch_size,
        num_workers=args.num_workers, pin_memory=False, drop_last=True,
        sampler=DistributedSampler(
            trainset, 
            num_replicas=args.world_size, 
            rank=rank)
    )
DataLoader(
        dataset=testset,
        collate_fn=custom_collate, batch_size=1,
        num_workers=args.num_workers, pin_memory=False, drop_last=False,
        sampler=torch.utils.data.SequentialSampler(testset)
    )
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(
            dataset, sampler=sampler,
            batch_size=1, collate_fn=collate_fn,
            num_workers=args.num_workers,
            drop_last=False
        )
DataLoader(
            dataset, batch_sampler=batch_sampler,
            collate_fn=collate_fn, num_workers=args.num_workers
        )
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/main_d_detr_vcoco.py#L310
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/main_d_detr_vcoco.py#L319
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/main_det_roi.py#L119
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/main_det_roi.py#L135
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/main_detr_vcoco.py#L310
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/main_detr_vcoco.py#L319
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/main_tip.py#L98
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/main_tip.py#L113
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/main_tip_finetune.py#L205
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/main_tip_finetune.py#L214
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/main_tip_ye.py#L135
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/main_tip_ye.py#L144
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/detr/main.py#L155
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/detr/main.py#L157
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/hicodet/detections/main_detr.py#L224
https://github.com/ltttpku/ADA-CM/blob/636a60696c2a2978e38bcb9bbca8b9ba9cdc57a3/hicodet/detections/main_detr.py#L236

===========================================
https://github.com/hikvision-research/opera
===========================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/hikvision-research/opera/blob/91d02651570acf6d33fca3bf2776d5a79d40d215/opera/datasets/builder.py#L182

===================================
https://github.com/mala-lab/ADShift
===================================

Found 13 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
    )
torch.utils.data.DataLoader(
        test_set,
        batch_size=1,
        shuffle=False,
    )
torch.utils.data.DataLoader(test_data_ID, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(test_data_OOD_art_painting, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(test_data_OOD_cartoon, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(test_data_OOD_sketch, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(test_data_id, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(test_data_brightness, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(test_data_constrast, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(test_data_defocus_blur, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(test_data_gaussian_noise, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, shuffle=True)
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/dataset.py#L281
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/dataset.py#L286
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/inference_PACS_ATTA.py#L45
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/inference_PACS_ATTA.py#L46
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/inference_PACS_ATTA.py#L47
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/inference_PACS_ATTA.py#L48
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/inference_mvtec_ATTA.py#L33
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/inference_mvtec_ATTA.py#L34
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/inference_mvtec_ATTA.py#L35
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/inference_mvtec_ATTA.py#L36
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/inference_mvtec_ATTA.py#L37
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/train_PACS_DINL.py#L94
https://github.com/mala-lab/ADShift/blob/56a87badd2e767dcb90b3b2ec00155d1e26c4bd1/train_mvtec_DINL.py#L85

========================================
https://github.com/yeonghwansong/UOLwRPS
========================================

Found 5 times
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size,
                                                num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size,
                                                    num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(test_dataset, batch_size=args.batch_size,
                                                      num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size,
                                                    num_workers=args.workers, pin_memory=True)
DataLoader(train_dataset, batch_size=args.batch_size,
                                shuffle=True, num_workers=args.workers, pin_memory=True)
https://github.com/yeonghwansong/UOLwRPS/blob/991b9755e8dd80b154b6bd72233fdfabc89f3332/main.py#L241
https://github.com/yeonghwansong/UOLwRPS/blob/991b9755e8dd80b154b6bd72233fdfabc89f3332/main.py#L249
https://github.com/yeonghwansong/UOLwRPS/blob/991b9755e8dd80b154b6bd72233fdfabc89f3332/main.py#L255
https://github.com/yeonghwansong/UOLwRPS/blob/991b9755e8dd80b154b6bd72233fdfabc89f3332/main.py#L262
https://github.com/yeonghwansong/UOLwRPS/blob/991b9755e8dd80b154b6bd72233fdfabc89f3332/validation.py#L70

====================================
https://github.com/impiga/Plain-DETR
====================================

Found 2 times
DataLoader(
        dataset_train,
        batch_sampler=batch_sampler_train,
        collate_fn=utils.collate_fn,
        num_workers=args.num_workers,
        pin_memory=True,
    )
DataLoader(
        dataset_val,
        args.batch_size,
        sampler=sampler_val,
        drop_last=False,
        collate_fn=utils.collate_fn,
        num_workers=args.num_workers,
        pin_memory=True,
    )
https://github.com/impiga/Plain-DETR/blob/6ad930bb85f5d10417ebe979780132a9a466a8e0/main.py#L328
https://github.com/impiga/Plain-DETR/blob/6ad930bb85f5d10417ebe979780132a9a466a8e0/main.py#L335

=================================
https://github.com/dschinagl/gace
=================================

Found 2 times
DataLoader(dataset_train, sampler=sampler_train,
                                  collate_fn=my_collate, num_workers=args.workers)
DataLoader(dataset_val, sampler=sampler_val,
                                collate_fn=my_collate, num_workers=args.workers)
https://github.com/dschinagl/gace/blob/cf8451d3de6941cd060d63eb42b90b1c3f59fb59/gace_utils/gace_utils.py#L45
https://github.com/dschinagl/gace/blob/cf8451d3de6941cd060d63eb42b90b1c3f59fb59/gace_utils/gace_utils.py#L116

=================================
https://github.com/LeapLabTHU/ARC
=================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/LeapLabTHU/ARC/blob/4825acd8d5777d668ea4fb3b4d24aa53399d79ff/mmdet/datasets/builder.py#L117

======================================
https://github.com/zhiweichen0012/CATR
======================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val,
        sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False,
    )
https://github.com/zhiweichen0012/CATR/blob/9fefc914f35a3ea32a4971423f077f27f0294703/main.py#L452
https://github.com/zhiweichen0012/CATR/blob/9fefc914f35a3ea32a4971423f077f27f0294703/main.py#L461

========================================================
https://github.com/IDEA-Research/3D-deformable-attention
========================================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/IDEA-Research/3D-deformable-attention/blob/91165eb0c11dc98e554250ecf7b40ad3decad86c/BEVFormer_DFA3D/projects/mmdet3d_plugin/datasets/builder.py#L83

=====================================
https://github.com/SysCV/cascade-detr
=====================================

Found 2 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
https://github.com/SysCV/cascade-detr/blob/709ee71eba5014aa5a76cc70563f15cc418983dc/cascade_dn_detr/main.py#L271
https://github.com/SysCV/cascade-detr/blob/709ee71eba5014aa5a76cc70563f15cc418983dc/cascade_dn_detr/main.py#L273

====================================
https://github.com/PJLab-ADG/DetZero
====================================

Found 3 times
DataLoader(
        new_dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
DataLoader(
        new_dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0
    )
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=False, collate_fn=dataset.collate_batch, drop_last=False, timeout=0
    )
https://github.com/PJLab-ADG/DetZero/blob/ef5092ac9d0457f60306bb69fb5add19d2fb6dde/detection/detzero_det/datasets/__init__.py#L70
https://github.com/PJLab-ADG/DetZero/blob/ef5092ac9d0457f60306bb69fb5add19d2fb6dde/refining/detzero_refine/datasets/__init__.py#L73
https://github.com/PJLab-ADG/DetZero/blob/ef5092ac9d0457f60306bb69fb5add19d2fb6dde/tracking/detzero_track/datasets/__init__.py#L24

==================================
https://github.com/Sense-X/Co-DETR
==================================

Found 21 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/mmdet/datasets/builder.py#L199
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_data/test_datasets/test_common.py#L224
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L76
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L88
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L99
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L111
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L115
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L133
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L135
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L155
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L157
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L177
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L197
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L216
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_runtime/test_eval_hook.py#L236
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_utils/test_hook.py#L92
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_utils/test_hook.py#L190
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_utils/test_hook.py#L246
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_utils/test_hook.py#L268
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_utils/test_hook.py#L310
https://github.com/Sense-X/Co-DETR/blob/bf3d49d7c02929788dfe2f251b6b01cbe196b736/tests/test_utils/test_hook.py#L347

===================================
https://github.com/Loco-Roco/DiffAD
===================================

Found 7 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn, pin_memory=True)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
DataLoader(dataset, batch_size=1,
                            shuffle=False, num_workers=0)
DataLoader(dataset, batch_size=1,
                            shuffle=False, num_workers=0)
DataLoader(dataset, batch_size=args.bs,
                            shuffle=True, num_workers=0)
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/rec_network/main.py#L203
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/rec_network/main.py#L212
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/rec_network/main.py#L228
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/rec_network/main.py#L236
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/scripts/mvtec.py#L34
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/seg_network/test.py#L67
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/seg_network/train.py#L65

==================================
https://github.com/Haiyang-W/UniTR
==================================

Found 1 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=False, sampler=sampler, timeout=0, worker_init_fn=partial(common_utils.worker_init_fn, seed=seed)
    )
https://github.com/Haiyang-W/UniTR/blob/60cd0093d3c94333cd9f8c7accede89a6af24c9d/pcdet/datasets/__init__.py#L77

==============================
https://github.com/xcyao00/FOD
==============================

Found 3 times
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, drop_last=False, **kwargs)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, drop_last=False, **kwargs)
torch.utils.data.DataLoader(test_dataset, batch_size=1, shuffle=False, drop_last=False, **kwargs)
https://github.com/xcyao00/FOD/blob/d97b44bb4b9041ad271a6fb7be0f4285e8aff2f2/create_ref_features.py#L79
https://github.com/xcyao00/FOD/blob/d97b44bb4b9041ad271a6fb7be0f4285e8aff2f2/trainer.py#L38
https://github.com/xcyao00/FOD/blob/d97b44bb4b9041ad271a6fb7be0f4285e8aff2f2/trainer.py#L39

===================================
https://github.com/cskkxjk/MonoNeRD
===================================

Found 1 times
DataLoader(
        dataset, batch_size=batch_size, pin_memory=True, num_workers=workers,
        shuffle=(sampler is None) and training, collate_fn=dataset.collate_batch,
        drop_last=training, sampler=sampler, timeout=0
    )
https://github.com/cskkxjk/MonoNeRD/blob/f6491a283932117718081c1d5239177bd1a9f503/mononerd/datasets/__init__.py#L67

=================================
https://github.com/LiewFeng/imTED
=================================

Found 15 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/mmdet/datasets/builder.py#L125
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_data/test_datasets/test_common.py#L225
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L75
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L87
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L98
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L110
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L114
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L132
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L134
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L156
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L158
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L180
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L202
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L223
https://github.com/LiewFeng/imTED/blob/09cc53772b13779d8563807020077293079b7a9d/tests/test_runtime/test_eval_hook.py#L245

=====================================
https://github.com/czyczyyzc/CondLSTR
=====================================

Found 3 times
DataLoader(
        dataset, batch_size=batch_size, sampler=sampler, num_workers=num_workers, prefetch_factor=prefetch_factor,
        pin_memory=True, drop_last=train,  collate_fn=collate_fn)
DataLoader(
        dataset, batch_sampler=batch_sampler, num_workers=num_workers, prefetch_factor=prefetch_factor,
        pin_memory=True, collate_fn=collate_fn)
DataLoader(
        dataset, batch_sampler=batch_sampler, num_workers=num_workers, prefetch_factor=prefetch_factor,
        pin_memory=True, collate_fn=collate_fn)
https://github.com/czyczyyzc/CondLSTR/blob/0e8b08c1150cff9ca34be6cefc986a01e1ac1512/data/dataloaders/dataloaders.py#L21
https://github.com/czyczyyzc/CondLSTR/blob/0e8b08c1150cff9ca34be6cefc986a01e1ac1512/data/dataloaders/dataloaders.py#L39
https://github.com/czyczyyzc/CondLSTR/blob/0e8b08c1150cff9ca34be6cefc986a01e1ac1512/data/dataloaders/dataloaders.py#L57

=============================================
https://github.com/ucas-vg/PointTinyBenchmark
=============================================

Found 15 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/mmdet/datasets/builder.py#L125
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_data/test_datasets/test_common.py#L225
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L75
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L87
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L98
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L110
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L114
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L132
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L134
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L154
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L156
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L176
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L196
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L215
https://github.com/ucas-vg/PointTinyBenchmark/blob/c1a27b3f1681f62084f2a506b23ce3c633356810/TOV_mmdetection/tests/test_runtime/test_eval_hook.py#L235

==========================================
https://github.com/BIVLab-USTC/DETRDistill
==========================================

Found 21 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/mmdet/datasets/builder.py#L195
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_data/test_datasets/test_common.py#L224
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L76
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L88
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L99
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L111
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L115
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L133
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L135
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L155
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L157
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L177
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L197
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L216
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_runtime/test_eval_hook.py#L236
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_utils/test_hook.py#L92
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_utils/test_hook.py#L190
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_utils/test_hook.py#L246
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_utils/test_hook.py#L268
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_utils/test_hook.py#L310
https://github.com/BIVLab-USTC/DETRDistill/blob/b5ee33d79f8ebc87d8f4dee335a163fae0642536/deformdetr_project/tests/test_utils/test_hook.py#L347

================================
https://github.com/NVlabs/FB-BEV
================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/NVlabs/FB-BEV/blob/832bd81866823a913a4c69552e1ca61ae34ac211/mmdet3d/datasets/builder.py#L162

====================================
https://github.com/tiankongzhang/NSA
====================================

Found 2 times
DataLoader(dataset, batch_sampler=batch_sampler, num_workers=num_workers, collate_fn=collate_fn)
DataLoader(dataset, batch_size=1, sampler=sampler, num_workers=num_workers, collate_fn=collate_fn)
https://github.com/tiankongzhang/NSA/blob/523efbc79e773a23273471463856ade15e0344af/detection/data/build.py#L246
https://github.com/tiankongzhang/NSA/blob/523efbc79e773a23273471463856ade15e0344af/detection/data/build.py#L248

=====================================
https://github.com/Yinyf0804/WSOD-CBL
=====================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_sampler=batchSampler,
        num_workers=cfg.DATA_LOADER.NUM_THREADS,
        collate_fn=collate_minibatch)
https://github.com/Yinyf0804/WSOD-CBL/blob/2fcadd2764b5116a70506308db24f82adad4f990/tools/train_net_step.py#L267

=======================================
https://github.com/conghui1002/DG-UCDIR
=======================================

Found 3 times
torch.utils.data.DataLoader(
            train_dataset, batch_size=int(args.batch_size / len(datas)), shuffle=(train_sampler is None),
            num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(
            train_eval_dataset, batch_size=int(args.batch_size / len(datas)), shuffle=False,
            num_workers=args.workers, pin_memory=True, sampler=train_eval_sampler, drop_last=False)
torch.utils.data.DataLoader(
                eval_dataset, batch_size=args.batch_size, shuffle=False,
                sampler=eval_sampler, num_workers=args.workers, pin_memory=True, drop_last=False)
https://github.com/conghui1002/DG-UCDIR/blob/38635d873ab38310128053a028687b2a00eb87d0/main_dgucdir.py#L197
https://github.com/conghui1002/DG-UCDIR/blob/38635d873ab38310128053a028687b2a00eb87d0/main_dgucdir.py#L220
https://github.com/conghui1002/DG-UCDIR/blob/38635d873ab38310128053a028687b2a00eb87d0/main_dgucdir.py#L239

============================================
https://github.com/ShihaoShao-GH/SuperGlobal
============================================

Found 2 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=1,
        shuffle=False,
        sampler=None,
        num_workers=4,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=shuffle,
        sampler=None,
        num_workers=4,
        pin_memory=False,
        drop_last=drop_last,
    )
https://github.com/ShihaoShao-GH/SuperGlobal/blob/86946964b907e6f28a7264add2c15640fae30009/extract_rop1m.py#L61
https://github.com/ShihaoShao-GH/SuperGlobal/blob/86946964b907e6f28a7264add2c15640fae30009/test/test_loader.py#L23

================================
https://github.com/yangbincv/GUR
================================

Found 35 times
DataLoader(Preprocessor(train_set, root=dataset.images_dir, transform=train_transformer),
                   batch_size=batch_size, num_workers=workers, sampler=sampler,
                   shuffle=not rmgs_flag, pin_memory=True, drop_last=True)
DataLoader(Preprocessor(train_set, root=dataset.images_dir, transform=train_transformer),
                       batch_size=batch_size, num_workers=workers, sampler=sampler,
                       shuffle=not rmgs_flag, pin_memory=True, drop_last=True)
DataLoader(Preprocessor_color(train_set, root=dataset.images_dir, transform=train_transformer,transform1=train_transformer1),
                       batch_size=batch_size, num_workers=workers, sampler=sampler,
                       shuffle=not rmgs_flag, pin_memory=True, drop_last=True)
DataLoader(
        Preprocessor(testset, root=dataset.images_dir, transform=test_transformer),
        batch_size=batch_size, num_workers=workers,
        shuffle=False, pin_memory=True)
data.DataLoader(gallset, batch_size=args.test_batch, shuffle=False, num_workers=args.workers)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(gallset, batch_size=args.test_batch, shuffle=False, num_workers=args.workers)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
DataLoader(Preprocessor(train_set, root=dataset.images_dir, transform=train_transformer),
                   batch_size=batch_size, num_workers=workers, sampler=sampler,
                   shuffle=not rmgs_flag, pin_memory=False, drop_last=True)
DataLoader(Preprocessor(train_set, root=dataset.images_dir, transform=train_transformer),
                       batch_size=batch_size, num_workers=workers, sampler=sampler,
                       shuffle=not rmgs_flag, pin_memory=False, drop_last=True)
DataLoader(Preprocessor_color(train_set, root=dataset.images_dir, transform=train_transformer,transform1=train_transformer1),
                       batch_size=batch_size, num_workers=workers, sampler=sampler,
                       shuffle=not rmgs_flag, pin_memory=False, drop_last=True)
DataLoader(
        Preprocessor(testset, root=dataset.images_dir, transform=test_transformer),
        batch_size=batch_size, num_workers=1,
        shuffle=False, pin_memory=False)
data.DataLoader(gallset, batch_size=args.test_batch, shuffle=False, num_workers=args.workers)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
DataLoader(Preprocessor(train_set, root=dataset.images_dir, transform=train_transformer),
                   batch_size=batch_size, num_workers=workers, sampler=sampler,
                   shuffle=not rmgs_flag, pin_memory=True, drop_last=True)
DataLoader(Preprocessor(train_set, root=dataset.images_dir, transform=train_transformer),
                       batch_size=batch_size, num_workers=workers, sampler=sampler,
                       shuffle=not rmgs_flag, pin_memory=True, drop_last=True)
DataLoader(Preprocessor_color(train_set, root=dataset.images_dir, transform=train_transformer,transform1=train_transformer1),
                       batch_size=batch_size, num_workers=workers, sampler=sampler,
                       shuffle=not rmgs_flag, pin_memory=True, drop_last=True)
DataLoader(
        Preprocessor(testset, root=dataset.images_dir, transform=test_transformer),
        batch_size=batch_size, num_workers=workers,
        shuffle=False, pin_memory=True)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(trial_gallset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(trial_gallset, batch_size=args.test_batch, shuffle=False, num_workers=4)
DataLoader(Preprocessor(train_set, root=dataset.images_dir, transform=train_transformer),
                   batch_size=batch_size, num_workers=workers, sampler=sampler,
                   shuffle=not rmgs_flag, pin_memory=False, drop_last=True)
DataLoader(Preprocessor(train_set, root=dataset.images_dir, transform=train_transformer),
                       batch_size=batch_size, num_workers=workers, sampler=sampler,
                       shuffle=not rmgs_flag, pin_memory=False, drop_last=True)
DataLoader(Preprocessor_color(train_set, root=dataset.images_dir, transform=train_transformer,transform1=train_transformer1),
                       batch_size=batch_size, num_workers=workers, sampler=sampler,
                       shuffle=not rmgs_flag, pin_memory=False, drop_last=True)
DataLoader(
        Preprocessor(testset, root=dataset.images_dir, transform=test_transformer),
        batch_size=batch_size, num_workers=2,
        shuffle=False, pin_memory=False)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(trial_gallset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(queryset, batch_size=args.test_batch, shuffle=False, num_workers=4)
data.DataLoader(trial_gallset, batch_size=args.test_batch, shuffle=False, num_workers=4)
DataLoader(Preprocessor(train_set, root=dataset.images_dir, transform=train_transformer),
                   batch_size=batch_size, num_workers=workers, sampler=sampler,
                   shuffle=not rmgs_flag, pin_memory=True, drop_last=True)
DataLoader(
        Preprocessor(testset, root=dataset.images_dir, transform=test_transformer),
        batch_size=batch_size, num_workers=workers,
        shuffle=False, pin_memory=True)
DataLoader(Preprocessor(train_set, root=dataset.images_dir, transform=train_transformer),
                   batch_size=batch_size, num_workers=workers, sampler=sampler,
                   shuffle=not rmgs_flag, pin_memory=True, drop_last=True)
DataLoader(
        Preprocessor(testset, root=dataset.images_dir, transform=test_transformer),
        batch_size=batch_size, num_workers=workers,
        shuffle=False, pin_memory=True)
DataLoader(
        Preprocessor(list(set(dataset.query) | set(dataset.gallery)),
                     root=dataset.images_dir, transform=test_transformer),
        batch_size=batch_size, num_workers=workers,
        shuffle=False, pin_memory=True)
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_test.py#L91
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_test.py#L124
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_test.py#L129
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_test.py#L149
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_test.py#L621
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_test.py#L625
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_test.py#L691
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_test.py#L695
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_train.py#L92
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_train.py#L116
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_train.py#L121
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_train.py#L141
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_train.py#L1034
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/regdb_train.py#L1038
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_test.py#L94
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_test.py#L128
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_test.py#L133
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_test.py#L153
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_test.py#L581
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_test.py#L587
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_test.py#L623
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_test.py#L629
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_train.py#L77
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_train.py#L111
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_train.py#L116
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_train.py#L136
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_train.py#L1069
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_train.py#L1075
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_train.py#L1135
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/sysu_train.py#L1141
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/examples/cluster_contrast_train_usl.py#L68
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/examples/cluster_contrast_train_usl.py#L88
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/examples/cluster_contrast_train_usl_infomap.py#L76
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/examples/cluster_contrast_train_usl_infomap.py#L96
https://github.com/yangbincv/GUR/blob/27706295b89177f759fab1b29e1c8a43894114f4/examples/test.py#L37

=======================================
https://github.com/gmberton/EigenPlaces
=======================================

Found 2 times
DataLoader(dataset=database_subset_ds, num_workers=args.num_workers,
                                         batch_size=args.infer_batch_size, pin_memory=(args.device == "cuda"))
DataLoader(dataset=queries_subset_ds, num_workers=args.num_workers,
                                        batch_size=queries_infer_batch_size, pin_memory=(args.device == "cuda"))
https://github.com/gmberton/EigenPlaces/blob/fef66475d45f9a65e7e10ba2c360c25396478f44/test.py#L24
https://github.com/gmberton/EigenPlaces/blob/fef66475d45f9a65e7e10ba2c360c25396478f44/test.py#L38

=================================================
https://github.com/kevinliang888/IVR-QA-baselines
=================================================

Found 4 times
DataLoader(
        test_dataset,
        batch_size=config['batch_size'],
        num_workers=4,
        pin_memory=True,
        drop_last=False,
        shuffle=False,
    )
DataLoader(
        test_dataset,
        batch_size=config['batch_size'],
        num_workers=4,
        pin_memory=True,
        drop_last=False,
        shuffle=False,
    )
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
DataLoader(
        didemo_testset,
        batch_size=32,
        num_workers=2,
        shuffle=False,
        drop_last=False,
    )
https://github.com/kevinliang888/IVR-QA-baselines/blob/8f9b0ade0293fc24c0ef46e3415b5e68cc00f703/eval_interactive.py#L40
https://github.com/kevinliang888/IVR-QA-baselines/blob/8f9b0ade0293fc24c0ef46e3415b5e68cc00f703/eval_retrieval_video.py#L204
https://github.com/kevinliang888/IVR-QA-baselines/blob/8f9b0ade0293fc24c0ef46e3415b5e68cc00f703/data/__init__.py#L51
https://github.com/kevinliang888/IVR-QA-baselines/blob/8f9b0ade0293fc24c0ef46e3415b5e68cc00f703/data/dataloader_didemo_retrieval.py#L27

============================================
https://github.com/IIT-PAVIS/ReId_without_Id
============================================

Found 1 times
torch.utils.data.DataLoader(image_datasets[x], batch_size=4,
                                                      shuffle=False, num_workers=8)
https://github.com/IIT-PAVIS/ReId_without_Id/blob/37b3d0f49410ef2028993fca2da3a7c067d1f4a6/test.py#L97

==============================================
https://github.com/ga1i13o/Divide-and-Classify
==============================================

Found 3 times
torch.utils.data.DataLoader(dataset=test_dataset, batch_size=1, shuffle=False, num_workers=2, pin_memory=True)
torch.utils.data.DataLoader(dataset=val_dataset, batch_size=1, shuffle=False, num_workers=2, pin_memory=True)
torch.utils.data.DataLoader(dataset=test_dataset, batch_size=1, shuffle=False, num_workers=2, pin_memory=True)
https://github.com/ga1i13o/Divide-and-Classify/blob/e7b777c7c4928d6d9d46ca307f2a789ed2032ad5/eval.py#L31
https://github.com/ga1i13o/Divide-and-Classify/blob/e7b777c7c4928d6d9d46ca307f2a789ed2032ad5/train.py#L44
https://github.com/ga1i13o/Divide-and-Classify/blob/e7b777c7c4928d6d9d46ca307f2a789ed2032ad5/train.py#L45

=================================
https://github.com/mohwald/gandtr
=================================

Found 7 times
DataLoader(dataset, **loader_params)
torch.utils.data.DataLoader(
                ImagesFromList(root='', images=images, imsize=self.imsize, transform=self.transform,
                               image_labels=image_labels),
                batch_size=1, shuffle=False, num_workers=6, pin_memory=True
            )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=True,
        num_workers=args.workers, pin_memory=True, sampler=None,
        drop_last=True, collate_fn=collate_tuples
    )
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True,
            drop_last=True, collate_fn=collate_tuples
        )
torch.utils.data.DataLoader(
        ImagesFromList(root='', images=images, imsize=image_size, bbxs=bbxs, transform=transform),
        batch_size=1, shuffle=False, num_workers=6, pin_memory=True
    )
torch.utils.data.DataLoader(
        ImagesFromList(root='', images=images, imsize=image_size, bbxs=bbxs, transform=transform),
        batch_size=1, shuffle=False, num_workers=6, pin_memory=True
    )
torch.utils.data.DataLoader(
        ImagesFromList(root='', images=images, imsize=image_size, bbxs=bbxs, transform=transform),
        batch_size=1, shuffle=False, num_workers=6, pin_memory=True
    )
https://github.com/mohwald/gandtr/blob/4b67e9e62370a845048cb28b4e583b4f2f1cef1c/mdir/components/data/dataset/__init__.py#L41
https://github.com/mohwald/gandtr/blob/4b67e9e62370a845048cb28b4e583b4f2f1cef1c/mdir/external/cirtorch/datasets/traindataset.py#L222
https://github.com/mohwald/gandtr/blob/4b67e9e62370a845048cb28b4e583b4f2f1cef1c/mdir/external/cirtorch/examples/train.py#L272
https://github.com/mohwald/gandtr/blob/4b67e9e62370a845048cb28b4e583b4f2f1cef1c/mdir/external/cirtorch/examples/train.py#L287
https://github.com/mohwald/gandtr/blob/4b67e9e62370a845048cb28b4e583b4f2f1cef1c/mdir/external/cirtorch/networks/imageretrievalnet.py#L319
https://github.com/mohwald/gandtr/blob/4b67e9e62370a845048cb28b4e583b4f2f1cef1c/mdir/external/cirtorch/networks/imageretrievalnet.py#L368
https://github.com/mohwald/gandtr/blob/4b67e9e62370a845048cb28b4e583b4f2f1cef1c/mdir/external/cirtorch/networks/imageretrievalnet.py#L402

=====================================
https://github.com/ZhiyinShao-H/UniPT
=====================================

Found 8 times
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            sampler=self.train_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=batch_size if batch_size is not None else self.batch_size,
            sampler=self.val_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            sampler=self.test_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=64,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(
            text_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
https://github.com/ZhiyinShao-H/UniPT/blob/e90159bd329fe1d5878de37c182fca4885881f4f/vilt/datamodules/datamodule_base.py#L148
https://github.com/ZhiyinShao-H/UniPT/blob/e90159bd329fe1d5878de37c182fca4885881f4f/vilt/datamodules/datamodule_base.py#L159
https://github.com/ZhiyinShao-H/UniPT/blob/e90159bd329fe1d5878de37c182fca4885881f4f/vilt/datamodules/datamodule_base.py#L170
https://github.com/ZhiyinShao-H/UniPT/blob/e90159bd329fe1d5878de37c182fca4885881f4f/vilt/datamodules/multitask_datamodule.py#L55
https://github.com/ZhiyinShao-H/UniPT/blob/e90159bd329fe1d5878de37c182fca4885881f4f/vilt/datamodules/multitask_datamodule.py#L65
https://github.com/ZhiyinShao-H/UniPT/blob/e90159bd329fe1d5878de37c182fca4885881f4f/vilt/datamodules/multitask_datamodule.py#L75
https://github.com/ZhiyinShao-H/UniPT/blob/e90159bd329fe1d5878de37c182fca4885881f4f/vilt/modules/objectives.py#L480
https://github.com/ZhiyinShao-H/UniPT/blob/e90159bd329fe1d5878de37c182fca4885881f4f/vilt/modules/objectives.py#L496

============================================
https://github.com/ChiYeungLaw/LexLIP-ICCV23
============================================

Found 16 times
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
            drop_last=False,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
            drop_last=False
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
            drop_last=False
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            sampler=self.train_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=batch_size if batch_size is not None else self.batch_size,
            sampler=self.val_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            sampler=self.test_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=64,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(
            text_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
            drop_last=False,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
            drop_last=False
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
            drop_last=False
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            sampler=self.train_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=batch_size if batch_size is not None else self.batch_size,
            sampler=self.val_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            sampler=self.test_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=64,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(
            text_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase1/src/datamodules/datamodule_base.py#L132
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase1/src/datamodules/datamodule_base.py#L144
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase1/src/datamodules/datamodule_base.py#L156
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase1/src/datamodules/multitask_datamodule.py#L55
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase1/src/datamodules/multitask_datamodule.py#L65
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase1/src/datamodules/multitask_datamodule.py#L75
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase1/src/modules/objectives.py#L84
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase1/src/modules/objectives.py#L100
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase2/src/datamodules/datamodule_base.py#L132
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase2/src/datamodules/datamodule_base.py#L144
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase2/src/datamodules/datamodule_base.py#L156
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase2/src/datamodules/multitask_datamodule.py#L55
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase2/src/datamodules/multitask_datamodule.py#L65
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase2/src/datamodules/multitask_datamodule.py#L75
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase2/src/modules/objectives.py#L117
https://github.com/ChiYeungLaw/LexLIP-ICCV23/blob/1f20f456907c7233ef0891f61651914eda120780/Phase2/src/modules/objectives.py#L133

===========================================
https://github.com/XiangboYin/DPIS_USVLReID
===========================================

Found 5 times
data.DataLoader(gallset, batch_size=args.test_batch_size, shuffle=False, num_workers=args.workers)
data.DataLoader(queryset, batch_size=args.test_batch_size, shuffle=False, num_workers=args.workers)
data.DataLoader(gallset, batch_size=args.test_batch_size, shuffle=False, num_workers=args.workers)
data.DataLoader(queryset, batch_size=args.test_batch_size, shuffle=False, num_workers=args.workers)
data.DataLoader(dataset, batch_size=args.train_batch_size * args.num_pos, sampler=sampler,
                                 num_workers=args.workers, drop_last=drop_last)
https://github.com/XiangboYin/DPIS_USVLReID/blob/65c3f1b8b4af1b3670956757e5704b963eeecfc3/main_test.py#L55
https://github.com/XiangboYin/DPIS_USVLReID/blob/65c3f1b8b4af1b3670956757e5704b963eeecfc3/main_test.py#L56
https://github.com/XiangboYin/DPIS_USVLReID/blob/65c3f1b8b4af1b3670956757e5704b963eeecfc3/main_train.py#L123
https://github.com/XiangboYin/DPIS_USVLReID/blob/65c3f1b8b4af1b3670956757e5704b963eeecfc3/main_train.py#L124
https://github.com/XiangboYin/DPIS_USVLReID/blob/65c3f1b8b4af1b3670956757e5704b963eeecfc3/main_train.py#L132

===================================
https://github.com/YifeiZhou02/BT-2
===================================

Found 2 times
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=batch_size,
            sampler=self.train_sampler,
            shuffle=self.train_sampler is None,
            **kwargs
        )
torch.utils.data.DataLoader(
            datasets.ImageFolder(
                valdir,
                wrapped_val_transforms,
                loader = loader_with_path
            ),
            batch_size=batch_size,
            shuffle=False,
            **kwargs
        )
https://github.com/YifeiZhou02/BT-2/blob/8282360423887c61c172e6056c537ffe3843aeb6/dataset/sub_image_folder.py#L77
https://github.com/YifeiZhou02/BT-2/blob/8282360423887c61c172e6056c537ffe3843aeb6/dataset/sub_image_folder.py#L86

================================
https://github.com/bassyess/CFCD
================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=(False if sampler is not None else shuffle),
        sampler=sampler,
        num_workers=cfg.DATA_LOADER.NUM_WORKERS,
        pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
        drop_last=drop_last,
    )
https://github.com/bassyess/CFCD/blob/5db85456e1bea617421624aa4207cd9bcf2c84cf/datasets/loader.py#L36

==================================
https://github.com/xiaoye-hhh/SAAI
==================================

Found 3 times
DataLoader(train_dataset, batch_size, sampler=sampler, drop_last=True, pin_memory=True,
                              collate_fn=collate_fn, num_workers=num_workers)
DataLoader(dataset=query_dataset,
                              batch_size=batch_size,
                              shuffle=False,
                              pin_memory=True,
                              drop_last=False,
                              collate_fn=collate_fn,
                              num_workers=num_workers)
DataLoader(dataset=gallery_dataset,
                                batch_size=batch_size,
                                shuffle=False,
                                pin_memory=True,
                                drop_last=False,
                                collate_fn=collate_fn,
                                num_workers=num_workers)
https://github.com/xiaoye-hhh/SAAI/blob/716bcb99c8ee6a57f18519fdc99192e37970bdda/data/__init__.py#L71
https://github.com/xiaoye-hhh/SAAI/blob/716bcb99c8ee6a57f18519fdc99192e37970bdda/data/__init__.py#L97
https://github.com/xiaoye-hhh/SAAI/blob/716bcb99c8ee6a57f18519fdc99192e37970bdda/data/__init__.py#L105

=====================================================
https://github.com/liyuke65535/Part-Aware-Transformer
=====================================================

Found 2 times
DataLoader(
        test_set,
        batch_sampler=batch_sampler,
        num_workers=num_workers,  # save some memory
        collate_fn=fast_batch_collator)
torch.utils.data.DataLoader(
        train_set,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=fast_batch_collator,
    )
https://github.com/liyuke65535/Part-Aware-Transformer/blob/63cc978c458b797ecec3be585e483ff7a3fbbaac/data/build_DG_dataloader.py#L113
https://github.com/liyuke65535/Part-Aware-Transformer/blob/63cc978c458b797ecec3be585e483ff7a3fbbaac/data/build_DG_dataloader.py#L176

=======================================
https://github.com/rayguan97/crossloc3d
=======================================

Found 11 times
DataLoader(
        dataset,
        num_workers=config.num_workers,
        shuffle=is_train,
        collate_fn=minkowski_collate_fn if is_minknet else stack_collate_fn,
        batch_size=config.batch_size,
    )
torch.utils.data.DataLoader(dset, **args)
DataLoader(
            DummyDataset("train", voxel_size=self.voxel_size),
            batch_size=self.batch_size,
            collate_fn=minkowski_collate_fn,
            shuffle=True,
        )
DataLoader(
            DummyDataset("val", voxel_size=self.voxel_size),
            batch_size=self.val_batch_size,
            collate_fn=minkowski_collate_fn,
        )
DataLoader(
        dataset, num_workers=4, collate_fn=stack_collate_fn, batch_size=16,
    )
DataLoader(
        dataset, num_workers=4, collate_fn=minkowski_collate_fn, batch_size=16,
    )
torch.utils.data.DataLoader(dset, **args)
DataLoader(
        train_dataset,
        batch_size=config.batch_size,
        # 1) collate_fn=collation_fn,
        # 2) collate_fn=ME.utils.batch_sparse_collate,
        # 3) collate_fn=ME.utils.SparseCollation(),
        collate_fn=ME.utils.batch_sparse_collate,
        num_workers=1)
torch.utils.data.DataLoader(dset, **args)
DataLoader(
                subset,
                batch_sampler=batch_sampler,
                pin_memory=True,
                collate_fn=collate_fn,
                num_workers=cfg.train_cfg.num_workers
            )
DataLoader(
                subset,
                batch_size=cfg.eval_cfg.batch_sampler_cfg.batch_size,
                shuffle=False,
                pin_memory=False,
                collate_fn=collate_fn,
                num_workers=cfg.eval_cfg.num_workers
            )
https://github.com/rayguan97/crossloc3d/blob/4519685162bfa7c376d05df071fbea4c488ee7f5/MinkowskiEngine/examples/classification_modelnet40.py#L314
https://github.com/rayguan97/crossloc3d/blob/4519685162bfa7c376d05df071fbea4c488ee7f5/MinkowskiEngine/examples/completion.py#L119
https://github.com/rayguan97/crossloc3d/blob/4519685162bfa7c376d05df071fbea4c488ee7f5/MinkowskiEngine/examples/multigpu_lightning.py#L152
https://github.com/rayguan97/crossloc3d/blob/4519685162bfa7c376d05df071fbea4c488ee7f5/MinkowskiEngine/examples/multigpu_lightning.py#L160
https://github.com/rayguan97/crossloc3d/blob/4519685162bfa7c376d05df071fbea4c488ee7f5/MinkowskiEngine/examples/pointnet.py#L253
https://github.com/rayguan97/crossloc3d/blob/4519685162bfa7c376d05df071fbea4c488ee7f5/MinkowskiEngine/examples/pointnet.py#L258
https://github.com/rayguan97/crossloc3d/blob/4519685162bfa7c376d05df071fbea4c488ee7f5/MinkowskiEngine/examples/reconstruction.py#L276
https://github.com/rayguan97/crossloc3d/blob/4519685162bfa7c376d05df071fbea4c488ee7f5/MinkowskiEngine/examples/training.py#L181
https://github.com/rayguan97/crossloc3d/blob/4519685162bfa7c376d05df071fbea4c488ee7f5/MinkowskiEngine/examples/vae.py#L181
https://github.com/rayguan97/crossloc3d/blob/4519685162bfa7c376d05df071fbea4c488ee7f5/datasets/__init__.py#L37
https://github.com/rayguan97/crossloc3d/blob/4519685162bfa7c376d05df071fbea4c488ee7f5/datasets/__init__.py#L49

==============================
https://github.com/qqlu/Entity
==============================

Found 2 times
DataLoader(val_dataset, batch_size, shuffle=False, num_workers=2)
DataLoader(train_dataset, para['batch_size'], shuffle=True, num_workers=8,
                            worker_init_fn=worker_init_fn, drop_last=True, pin_memory=True)
https://github.com/qqlu/Entity/blob/6e7e13ac91ef508088e1b848167c01f19b00b512/High-Quality-Segmention/test.py#L88
https://github.com/qqlu/Entity/blob/6e7e13ac91ef508088e1b848167c01f19b00b512/High-Quality-Segmention/train.py#L74

======================================
https://github.com/haochenheheda/LVVIS
======================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/haochenheheda/LVVIS/blob/f299dd1258625ce31a4c73a06aa940e7aea8cb44/ov2seg/data_video/build.py#L244

======================================
https://github.com/toggle1995/RIS-DMMI
======================================

Found 3 times
torch.utils.data.DataLoader(dataset_test, batch_size=1,
                                                   sampler=test_sampler, num_workers=args.workers)
torch.utils.data.DataLoader(
        dataset, batch_size=args.batch_size,
        sampler=train_sampler, num_workers=args.workers, pin_memory=args.pin_mem, drop_last=True)
torch.utils.data.DataLoader(
        dataset_test, batch_size=1, sampler=test_sampler, num_workers=args.workers)
https://github.com/toggle1995/RIS-DMMI/blob/753cd600b14db2b0d8ec60bee49666ba5bfc4d54/test.py#L136
https://github.com/toggle1995/RIS-DMMI/blob/753cd600b14db2b0d8ec60bee49666ba5bfc4d54/train.py#L224
https://github.com/toggle1995/RIS-DMMI/blob/753cd600b14db2b0d8ec60bee49666ba5bfc4d54/train.py#L228

====================================
https://github.com/DearCaat/MHIM-MIL
====================================

Found 4 times
DataLoader(train_set, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers,generator=generator)
DataLoader(train_set, batch_size=args.batch_size, sampler=RandomSampler(train_set), num_workers=args.num_workers)
DataLoader(val_set, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers)
DataLoader(test_set, batch_size=args.batch_size, shuffle=False, num_workers=args.num_workers)
https://github.com/DearCaat/MHIM-MIL/blob/be99f9368add66d96597fba9b88fe6ce4e8e572d/main.py#L129
https://github.com/DearCaat/MHIM-MIL/blob/be99f9368add66d96597fba9b88fe6ce4e8e572d/main.py#L131
https://github.com/DearCaat/MHIM-MIL/blob/be99f9368add66d96597fba9b88fe6ce4e8e572d/main.py#L133
https://github.com/DearCaat/MHIM-MIL/blob/be99f9368add66d96597fba9b88fe6ce4e8e572d/main.py#L134

====================================================
https://github.com/bair-climate-initiative/scale-mae
====================================================

Found 7 times
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val,
        sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=int(args.batch_size * batch_size_factor),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=train_collate,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size,
        sampler=sampler_val,
        num_workers=args.num_workers,
    )
torch.utils.data.DataLoader(
            dataset_train,
            sampler=sampler_train,
            batch_size=int(args.batch_size * batch_size_factor),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=True,
            collate_fn=train_collate,
        )
torch.utils.data.DataLoader(
        dataset_eval_train,
        batch_size=k_nn_batch_size,
        sampler=sampler_eval_train,
        num_workers=args.num_workers,
    )
torch.utils.data.DataLoader(
        dataset_eval_test,
        batch_size=k_nn_batch_size,
        sampler=sampler_eval_test,
        num_workers=args.num_workers,
    )
https://github.com/bair-climate-initiative/scale-mae/blob/89280d830037ff27c20459cdab03e01e633e29bb/mae/main_finetune.py#L313
https://github.com/bair-climate-initiative/scale-mae/blob/89280d830037ff27c20459cdab03e01e633e29bb/mae/main_finetune.py#L322
https://github.com/bair-climate-initiative/scale-mae/blob/89280d830037ff27c20459cdab03e01e633e29bb/mae/main_linprobe.py#L407
https://github.com/bair-climate-initiative/scale-mae/blob/89280d830037ff27c20459cdab03e01e633e29bb/mae/main_linprobe.py#L417
https://github.com/bair-climate-initiative/scale-mae/blob/89280d830037ff27c20459cdab03e01e633e29bb/mae/main_pretrain.py#L486
https://github.com/bair-climate-initiative/scale-mae/blob/89280d830037ff27c20459cdab03e01e633e29bb/mae/main_pretrain.py#L550
https://github.com/bair-climate-initiative/scale-mae/blob/89280d830037ff27c20459cdab03e01e633e29bb/mae/main_pretrain.py#L556

======================================
https://github.com/IMCCretrieval/ProST
======================================

Found 2 times
DataLoader(
        didemo_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        didemo_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
https://github.com/IMCCretrieval/ProST/blob/889c34c0164a8e1554037b29f11aa869a14ca96f/dataloaders/data_dataloaders.py#L22
https://github.com/IMCCretrieval/ProST/blob/889c34c0164a8e1554037b29f11aa869a14ca96f/dataloaders/data_dataloaders.py#L46

==================================
https://github.com/ivalab/WDiscOOD
==================================

Found 3 times
DataLoader(id_train_dset, batch_size=args.test_bs, shuffle=True, 
                                num_workers=args.prefetch, pin_memory=True)
DataLoader(id_test_dset, batch_size=args.test_bs, shuffle=True,
                                num_workers=args.prefetch, pin_memory=True)
DataLoader(ood_dset, batch_size=args.test_bs, shuffle=True,
                                num_workers=args.prefetch, pin_memory=True)
https://github.com/ivalab/WDiscOOD/blob/88c4df0ad149da5f8acc198b6d988be9f4640630/dataset/dataloaders.py#L29
https://github.com/ivalab/WDiscOOD/blob/88c4df0ad149da5f8acc198b6d988be9f4640630/dataset/dataloaders.py#L31
https://github.com/ivalab/WDiscOOD/blob/88c4df0ad149da5f8acc198b6d988be9f4640630/dataset/dataloaders.py#L37

===========================================
https://github.com/ZexiLee/ICCV-2023-FedETF
===========================================

Found 5 times
DataLoader(DatasetSplit(train_set, idxs_train),
                                  batch_size=self.args.batchsize, num_workers=0, shuffle=True)
DataLoader(DatasetSplit(train_set, idxs_test),
                                 batch_size=self.args.validate_batchsize,  num_workers=0, shuffle=True)
DataLoader(DatasetSplit(train_set, idxs_train),
                                  batch_size=self.args.batchsize, num_workers=0, shuffle=True)
DataLoader(DatasetSplit(train_set, idxs_test),
                                 batch_size=self.args.validate_batchsize,  num_workers=0, shuffle=True)
torch.utils.data.DataLoader(dataset=dst_train_syn_ft,
                                    batch_size=128,
                                    shuffle=True)
https://github.com/ZexiLee/ICCV-2023-FedETF/blob/092ace3471d0489c432fcde811ed7b7081042720/nodes.py#L112
https://github.com/ZexiLee/ICCV-2023-FedETF/blob/092ace3471d0489c432fcde811ed7b7081042720/nodes.py#L115
https://github.com/ZexiLee/ICCV-2023-FedETF/blob/092ace3471d0489c432fcde811ed7b7081042720/nodes.py#L144
https://github.com/ZexiLee/ICCV-2023-FedETF/blob/092ace3471d0489c432fcde811ed7b7081042720/nodes.py#L146
https://github.com/ZexiLee/ICCV-2023-FedETF/blob/092ace3471d0489c432fcde811ed7b7081042720/server_funct.py#L496

=====================================
https://github.com/billpsomas/simpool
=====================================

Found 7 times
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_train_knn,
        sampler=sampler_knn,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val_knn,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
https://github.com/billpsomas/simpool/blob/fac2263537c376384f3d52bca795bcca08302686/self_supervised/eval_knn.py#L36
https://github.com/billpsomas/simpool/blob/fac2263537c376384f3d52bca795bcca08302686/self_supervised/eval_knn.py#L44
https://github.com/billpsomas/simpool/blob/fac2263537c376384f3d52bca795bcca08302686/self_supervised/eval_linear.py#L107
https://github.com/billpsomas/simpool/blob/fac2263537c376384f3d52bca795bcca08302686/self_supervised/eval_linear.py#L132
https://github.com/billpsomas/simpool/blob/fac2263537c376384f3d52bca795bcca08302686/self_supervised/main_dino.py#L166
https://github.com/billpsomas/simpool/blob/fac2263537c376384f3d52bca795bcca08302686/self_supervised/main_dino.py#L191
https://github.com/billpsomas/simpool/blob/fac2263537c376384f3d52bca795bcca08302686/self_supervised/main_dino.py#L199

========================================
https://github.com/open-mmlab/mmpretrain
========================================

Found 8 times
DataLoader(
                dataset,
                batch_size=batch_size,
                collate_fn=default_collate,
                sampler=DefaultSampler(dataset, shuffle=False),
                persistent_workers=False,
            )
DataLoader(
                dataset,
                batch_size=batch_size,
                collate_fn=default_collate,
                sampler=DefaultSampler(dataset, shuffle=False),
                persistent_workers=False,
            )
DataLoader(
                [
                    self.text_pipeline({
                        'sample_idx': i,
                        'text': text
                    }) for i, text in enumerate(dataset)
                ],
                batch_size=batch_size,
                collate_fn=default_collate,
                sampler=DefaultSampler(dataset, shuffle=False),
                persistent_workers=False,
            )
DataLoader(ExampleDataset(), batch_size=2)
DataLoader(test_dataset, batch_size=2)
DataLoader(test_dataset, batch_size=2)
DataLoader(ExampleDataset())
DataLoader(ExampleDataset(), collate_fn=default_collate)
https://github.com/open-mmlab/mmpretrain/blob/17a886cb5825cd8c26df4e65f7112d404b99fe12/mmpretrain/apis/image_retrieval.py#L84
https://github.com/open-mmlab/mmpretrain/blob/17a886cb5825cd8c26df4e65f7112d404b99fe12/mmpretrain/apis/multimodal_retrieval.py#L109
https://github.com/open-mmlab/mmpretrain/blob/17a886cb5825cd8c26df4e65f7112d404b99fe12/mmpretrain/apis/multimodal_retrieval.py#L400
https://github.com/open-mmlab/mmpretrain/blob/17a886cb5825cd8c26df4e65f7112d404b99fe12/tests/test_engine/test_hooks/test_arcface_hooks.py#L52
https://github.com/open-mmlab/mmpretrain/blob/17a886cb5825cd8c26df4e65f7112d404b99fe12/tests/test_engine/test_hooks/test_precise_bn_hook.py#L121
https://github.com/open-mmlab/mmpretrain/blob/17a886cb5825cd8c26df4e65f7112d404b99fe12/tests/test_engine/test_hooks/test_precise_bn_hook.py#L212
https://github.com/open-mmlab/mmpretrain/blob/17a886cb5825cd8c26df4e65f7112d404b99fe12/tests/test_models/test_retrievers.py#L69
https://github.com/open-mmlab/mmpretrain/blob/17a886cb5825cd8c26df4e65f7112d404b99fe12/tests/test_models/test_retrievers.py#L163

==================================
https://github.com/kechunl/AdaCode
==================================

Found 3 times
torch.utils.data.DataLoader(**dataloader_args)
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        sampler=None,
        drop_last=False)
DataLoader(
        dataset=dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, sampler=None, drop_last=False)
https://github.com/kechunl/AdaCode/blob/22a6eae2745fe24e8a8aeef4d4490351e72d7047/basicsr/data/__init__.py#L94
https://github.com/kechunl/AdaCode/blob/22a6eae2745fe24e8a8aeef4d4490351e72d7047/scripts/metrics/calculate_fid_folder.py#L37
https://github.com/kechunl/AdaCode/blob/22a6eae2745fe24e8a8aeef4d4490351e72d7047/scripts/metrics/calculate_fid_stats_from_datasets.py#L36

===============================================================
https://github.com/ruchikachavhan/quality-diversity-pretraining
===============================================================

Found 14 times
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True,
                            num_workers=args.workers, drop_last=False)
DataLoader(val_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.workers)
DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.workers)
DataLoader(trainval_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.workers)
DataLoader(source_train, batch_size=args.batch_size, shuffle=True,
                            num_workers=args.workers, drop_last=False)
DataLoader(source_test, batch_size=args.batch_size, shuffle=False, num_workers=args.workers)
DataLoader(target, batch_size=args.batch_size, shuffle=False, num_workers=args.workers)
DataLoader(trainval_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.workers)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True,
                            num_workers=args.workers)
DataLoader(val_dataset, batch_size=args.batch_size, shuffle=False, 
                                num_workers=args.workers)
DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False, 
                                num_workers=args.workers)
DataLoader(trainval_dataset, batch_size=args.batch_size, shuffle=False, num_workers=args.workers)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, drop_last=True)
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/downstream/downstream_utils.py#L242
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/downstream/downstream_utils.py#L244
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/downstream/downstream_utils.py#L245
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/downstream/downstream_utils.py#L252
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/downstream/downstream_utils.py#L291
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/downstream/downstream_utils.py#L293
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/downstream/downstream_utils.py#L294
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/downstream/downstream_utils.py#L296
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/downstream/downstream_utils.py#L312
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/downstream/downstream_utils.py#L314
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/downstream/downstream_utils.py#L316
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/downstream/downstream_utils.py#L320
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/supervised/train.py#L369
https://github.com/ruchikachavhan/quality-diversity-pretraining/blob/de400784e48d215b9deb73454864b22254635666/supervised/train.py#L373

===============================
https://github.com/JackHck/SBCL
===============================

Found 10 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=100, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
DataLoader(sampler=self.valid_sampler, **self.init_kwargs)
torch.utils.data.DataLoader(
              train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
            num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(
              train_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True, sampler=balance_sampler, drop_last=True)
torch.utils.data.DataLoader(
        vail_dataset,
        batch_size=args.batch_size, shuffle=False,
        num_workers=10, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size*5, shuffle=False,
        num_workers=args.workers, pin_memory=True)
https://github.com/JackHck/SBCL/blob/3b9047a31d5c54a0ac14cde351ab557d2833611e/SimCLR/linear_classify.py#L136
https://github.com/JackHck/SBCL/blob/3b9047a31d5c54a0ac14cde351ab557d2833611e/SimCLR/linear_classify.py#L140
https://github.com/JackHck/SBCL/blob/3b9047a31d5c54a0ac14cde351ab557d2833611e/SimCLR/main.py#L145
https://github.com/JackHck/SBCL/blob/3b9047a31d5c54a0ac14cde351ab557d2833611e/SimCLR/main.py#L153
https://github.com/JackHck/SBCL/blob/3b9047a31d5c54a0ac14cde351ab557d2833611e/moco/BaseDareLoader.py#L61
https://github.com/JackHck/SBCL/blob/3b9047a31d5c54a0ac14cde351ab557d2833611e/moco/linear_classify.py#L191
https://github.com/JackHck/SBCL/blob/3b9047a31d5c54a0ac14cde351ab557d2833611e/moco/linear_classify.py#L197
https://github.com/JackHck/SBCL/blob/3b9047a31d5c54a0ac14cde351ab557d2833611e/moco/linear_classify.py#L214
https://github.com/JackHck/SBCL/blob/3b9047a31d5c54a0ac14cde351ab557d2833611e/moco/main.py#L253
https://github.com/JackHck/SBCL/blob/3b9047a31d5c54a0ac14cde351ab557d2833611e/moco/main.py#L257

=================================================
https://github.com/maxvanspengler/poincare-resnet
=================================================

Found 8 times
DataLoader(
        dataset=original_test_data, batch_size=args.batch_size, shuffle=False
    )
torch.utils.data.DataLoader(
    ood_data, batch_size=args.batch_size, shuffle=True, num_workers=4, pin_memory=True
)
torch.utils.data.DataLoader(
    ood_data, batch_size=args.batch_size, shuffle=True, num_workers=2, pin_memory=True
)
torch.utils.data.DataLoader(
    ood_data, batch_size=args.batch_size, shuffle=True, num_workers=2, pin_memory=True
)
DataLoader(
            dataset=cls.train_set,
            batch_size=batch_size,
            shuffle=True,
        )
DataLoader(
            dataset=cls.test_set,
            batch_size=batch_size,
            shuffle=False,
        )
DataLoader(
            dataset=cls.train_set,
            batch_size=batch_size,
            shuffle=True,
        )
DataLoader(
            dataset=cls.test_set,
            batch_size=batch_size,
            shuffle=False,
        )
https://github.com/maxvanspengler/poincare-resnet/blob/fbbbbf890571115444b89b114f9ed52d128d5aa3/gradcam.py#L74
https://github.com/maxvanspengler/poincare-resnet/blob/fbbbbf890571115444b89b114f9ed52d128d5aa3/ood_detection.py#L160
https://github.com/maxvanspengler/poincare-resnet/blob/fbbbbf890571115444b89b114f9ed52d128d5aa3/ood_detection.py#L173
https://github.com/maxvanspengler/poincare-resnet/blob/fbbbbf890571115444b89b114f9ed52d128d5aa3/ood_detection.py#L186
https://github.com/maxvanspengler/poincare-resnet/blob/fbbbbf890571115444b89b114f9ed52d128d5aa3/cifar10/dataloader.py#L28
https://github.com/maxvanspengler/poincare-resnet/blob/fbbbbf890571115444b89b114f9ed52d128d5aa3/cifar10/dataloader.py#L34
https://github.com/maxvanspengler/poincare-resnet/blob/fbbbbf890571115444b89b114f9ed52d128d5aa3/cifar100/dataloader.py#L28
https://github.com/maxvanspengler/poincare-resnet/blob/fbbbbf890571115444b89b114f9ed52d128d5aa3/cifar100/dataloader.py#L34

===================================
https://github.com/lixiaotong97/PED
===================================

Found 29 times
DataLoader(
            train_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            valid_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            trainval_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            dataset, batch_size=batch_size, sampler=train_sampler,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            valid_dataset, batch_size=batch_size, sampler=valid_sampler,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
        dataset, batch_size=batch_size, shuffle=shuffle,
        num_workers=num_workers, pin_memory=pin_memory,
    )
DataLoader(
            train_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            valid_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            trainval_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            train_dataset, batch_size=batch_size, sampler=train_sampler,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            valid_dataset, batch_size=batch_size, sampler=valid_sampler,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            trainval_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
        all_dataset, batch_size=batch_size, shuffle=shuffle,
        num_workers=num_workers, pin_memory=pin_memory,
    )
DataLoader(
        dataset, batch_size=batch_size, shuffle=shuffle,
        num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(sub_dataset, **sub_data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(sub_dataset, **sub_data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(sub_dataset, **sub_data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(sub_dataset, **sub_data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(sub_dataset, **sub_data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/finetune.py#L395
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/finetune.py#L399
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/finetune.py#L403
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/finetune.py#L424
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/finetune.py#L428
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/finetune.py#L432
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/finetune.py#L483
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/get_dataloader.py#L86
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/get_dataloader.py#L90
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/get_dataloader.py#L94
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/get_dataloader.py#L116
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/get_dataloader.py#L120
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/get_dataloader.py#L124
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/get_dataloader.py#L158
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/get_dataloader.py#L207
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/chestx.py#L157
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/chestx.py#L255
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/chestx.py#L275
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/cropdiseases.py#L97
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/cropdiseases.py#L191
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/cropdiseases.py#L211
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/eurosat.py#L95
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/eurosat.py#L189
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/eurosat.py#L209
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/few_shot_dataset.py#L105
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/few_shot_dataset.py#L207
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/isic.py#L137
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/isic.py#L231
https://github.com/lixiaotong97/PED/blob/e5af6e79779cbbf16c3c1b4e1961fa74c9a282d2/datasets/isic.py#L251

==========================================
https://github.com/1999kevin/INR-Partition
==========================================

Found 3 times
DataLoader(dataset, batch_size=4, num_workers=0)
DataLoader(dataset, batch_size=1, num_workers=0)
DataLoader(dataset_img, batch_size=1, pin_memory=True, num_workers=0)
https://github.com/1999kevin/INR-Partition/blob/ac25792bdfc286ea98da1836402c10b97a4d3438/MAML_fit/run_script.py#L87
https://github.com/1999kevin/INR-Partition/blob/ac25792bdfc286ea98da1836402c10b97a4d3438/MAML_fit/run_script.py#L94
https://github.com/1999kevin/INR-Partition/blob/ac25792bdfc286ea98da1836402c10b97a4d3438/single_image_fit/single_image_fit.py#L187

========================================
https://github.com/facebookresearch/maws
========================================

Found 2 times
torch.utils.data.DataLoader(
        img_ds,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        img_ds,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.workers,
        pin_memory=True,
        drop_last=False,
    )
https://github.com/facebookresearch/maws/blob/abf391e8e4626e0e2d144583b073e0fdf37aeb10/eval_finetuned.py#L86
https://github.com/facebookresearch/maws/blob/abf391e8e4626e0e2d144583b073e0fdf37aeb10/eval_zeroshot.py#L134

======================================
https://github.com/Euphoria16/TL-Align
======================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/Euphoria16/TL-Align/blob/4da062190331ffdd668655e94abfc3f222988761/main_tla.py#L222
https://github.com/Euphoria16/TL-Align/blob/4da062190331ffdd668655e94abfc3f222988761/main_tla.py#L230

==========================================
https://github.com/mooncake199809/UFVL-Net
==========================================

Found 1 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            **kwargs)
https://github.com/mooncake199809/UFVL-Net/blob/b0976db816c6bf61797603149b9fc96871dd8d9e/ufvl_net/datasets/builder.py#L156

=================================
https://github.com/BUserName/NCTI
=================================

Found 34 times
DataLoader(
            train_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            valid_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            trainval_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            dataset, batch_size=batch_size, sampler=train_sampler,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            valid_dataset, batch_size=batch_size, sampler=valid_sampler,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
        dataset, batch_size=batch_size, shuffle=shuffle,
        num_workers=num_workers, pin_memory=pin_memory,
    )
DataLoader(
            train_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            valid_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            trainval_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            dataset, batch_size=batch_size, sampler=train_sampler,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            valid_dataset, batch_size=batch_size, sampler=valid_sampler,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
        dataset, batch_size=batch_size, shuffle=shuffle,
        num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(
            dataset_train,
            batch_size=1,  # we have modified data_parallel
            shuffle=False,  # we do not use this param
            num_workers=4,
            pin_memory=True)
DataLoader(
            train_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            valid_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            trainval_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            train_dataset, batch_size=batch_size,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            valid_dataset, batch_size=batch_size, 
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
            trainval_dataset, batch_size=batch_size, shuffle=shuffle,
            num_workers=num_workers, pin_memory=pin_memory,
        )
DataLoader(
        all_dataset, batch_size=batch_size, shuffle=shuffle,
        num_workers=num_workers, pin_memory=pin_memory,
    )
DataLoader(
        dataset, batch_size=batch_size, shuffle=shuffle,
        num_workers=num_workers, pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(sub_dataset, **sub_data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(sub_dataset, **sub_data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(sub_dataset, **sub_data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(sub_dataset, **sub_data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
torch.utils.data.DataLoader(dataset, **data_loader_params)
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group1.py#L380
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group1.py#L384
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group1.py#L388
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group1.py#L409
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group1.py#L413
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group1.py#L417
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group1.py#L468
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group2.py#L395
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group2.py#L399
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group2.py#L403
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group2.py#L424
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group2.py#L428
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group2.py#L432
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/finetune_group2.py#L483
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/forward_feature_group1.py#L49
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/get_dataloader.py#L85
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/get_dataloader.py#L89
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/get_dataloader.py#L93
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/get_dataloader.py#L120
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/get_dataloader.py#L124
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/get_dataloader.py#L128
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/get_dataloader.py#L162
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/get_dataloader.py#L211
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/datasets/chestx.py#L157
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/datasets/chestx.py#L255
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/datasets/chestx.py#L275
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/datasets/cropdiseases.py#L97
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/datasets/cropdiseases.py#L191
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/datasets/cropdiseases.py#L211
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/datasets/few_shot_dataset.py#L105
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/datasets/few_shot_dataset.py#L207
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/datasets/isic.py#L137
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/datasets/isic.py#L231
https://github.com/BUserName/NCTI/blob/e6ef3f59a8c6dbe581bf11aed6c817f8989e3bfe/datasets/isic.py#L251

=================================
https://github.com/wangck20/OPERA
=================================

Found 4 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=256, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=256, shuffle=False,
        num_workers=args.workers, pin_memory=True)
https://github.com/wangck20/OPERA/blob/0658396ff0f7f6afce9ea35f7c4cfccd8fbf87de/main_lincls.py#L284
https://github.com/wangck20/OPERA/blob/0658396ff0f7f6afce9ea35f7c4cfccd8fbf87de/main_lincls.py#L288
https://github.com/wangck20/OPERA/blob/0658396ff0f7f6afce9ea35f7c4cfccd8fbf87de/main_moco.py#L300
https://github.com/wangck20/OPERA/blob/0658396ff0f7f6afce9ea35f7c4cfccd8fbf87de/main_moco.py#L304

===================================
https://github.com/kahnchana/clippy
===================================

Found 4 times
torch.utils.data.DataLoader(
            dataset,
            batch_size=opts.batch_size,
            num_workers=opts.workers
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        num_workers=args.workers,
        sampler=sampler,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=shuffle,
        num_workers=args.workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=is_train,
    )
https://github.com/kahnchana/clippy/blob/04bf78bcc5ab00a1f246e138267dcd2bc3c89259/src/evaluation/segmentation.py#L98
https://github.com/kahnchana/clippy/blob/04bf78bcc5ab00a1f246e138267dcd2bc3c89259/src/training/data.py#L133
https://github.com/kahnchana/clippy/blob/04bf78bcc5ab00a1f246e138267dcd2bc3c89259/src/training/data.py#L419
https://github.com/kahnchana/clippy/blob/04bf78bcc5ab00a1f246e138267dcd2bc3c89259/src/training/data.py#L462

==================================
https://github.com/EnnengYang/DFGP
==================================

Found 11 times
torch.utils.data.DataLoader(dat[s],batch_size=1,shuffle=False)
torch.utils.data.DataLoader(dat[s],batch_size=1,shuffle=False)
torch.utils.data.DataLoader(dat[s],batch_size=1,shuffle=False)
torch.utils.data.DataLoader(dat[s], batch_size=1, shuffle=False)
torch.utils.data.DataLoader(dat[s], batch_size=1, shuffle=False)
torch.utils.data.DataLoader(dat[s], batch_size=1, shuffle=False)
torch.utils.data.DataLoader(train_split, batch_size=2450, num_workers=self.num_workers,
                                                   pin_memory=self.pin_memory,shuffle=True)
torch.utils.data.DataLoader(valid_split, batch_size=50,
                                                   num_workers=self.num_workers, pin_memory=self.pin_memory,shuffle=True)
torch.utils.data.DataLoader(self.test_set[task_id], batch_size=500, num_workers=self.num_workers,
                                                  pin_memory=self.pin_memory, shuffle=True)
torch.utils.data.DataLoader(self.train_split[task_id], batch_size=1,
                                                        num_workers=self.num_workers,
                                                        pin_memory=self.pin_memory)
torch.utils.data.DataLoader(dat[s], batch_size=1, shuffle=False)
https://github.com/EnnengYang/DFGP/blob/abb0b3992c67c4eac6e16a97e4d9966468338b71/dataloader/cifar100.py#L34
https://github.com/EnnengYang/DFGP/blob/abb0b3992c67c4eac6e16a97e4d9966468338b71/dataloader/five_datasets.py#L43
https://github.com/EnnengYang/DFGP/blob/abb0b3992c67c4eac6e16a97e4d9966468338b71/dataloader/five_datasets.py#L62
https://github.com/EnnengYang/DFGP/blob/abb0b3992c67c4eac6e16a97e4d9966468338b71/dataloader/five_datasets.py#L80
https://github.com/EnnengYang/DFGP/blob/abb0b3992c67c4eac6e16a97e4d9966468338b71/dataloader/five_datasets.py#L99
https://github.com/EnnengYang/DFGP/blob/abb0b3992c67c4eac6e16a97e4d9966468338b71/dataloader/five_datasets.py#L117
https://github.com/EnnengYang/DFGP/blob/abb0b3992c67c4eac6e16a97e4d9966468338b71/dataloader/miniimagenet.py#L183
https://github.com/EnnengYang/DFGP/blob/abb0b3992c67c4eac6e16a97e4d9966468338b71/dataloader/miniimagenet.py#L185
https://github.com/EnnengYang/DFGP/blob/abb0b3992c67c4eac6e16a97e4d9966468338b71/dataloader/miniimagenet.py#L187
https://github.com/EnnengYang/DFGP/blob/abb0b3992c67c4eac6e16a97e4d9966468338b71/dataloader/miniimagenet.py#L221
https://github.com/EnnengYang/DFGP/blob/abb0b3992c67c4eac6e16a97e4d9966468338b71/dataloader/pmnist.py#L39

===============================
https://github.com/wangzy22/TAP
===============================

Found 3 times
torch.utils.data.DataLoader(dataset,
                                                 batch_size=batch_size,
                                                 num_workers=int(dataloader_cfg.num_workers),
                                                 worker_init_fn=worker_init_fn,
                                                 drop_last=split == 'train',
                                                 sampler=sampler,
                                                 collate_fn=collate_fn, 
                                                 pin_memory=True
                                                 )
torch.utils.data.DataLoader(dataset,
                                                 batch_size=batch_size,
                                                 num_workers=int(dataloader_cfg.num_workers),
                                                 worker_init_fn=worker_init_fn,
                                                 drop_last=split == 'train',
                                                 shuffle=shuffle,
                                                 collate_fn=collate_fn,
                                                 pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=B, num_workers=1
                                                 )
https://github.com/wangzy22/TAP/blob/32598336ae80ffbeb246f20e1e54b35326c4a135/openpoints/dataset/build.py#L80
https://github.com/wangzy22/TAP/blob/32598336ae80ffbeb246f20e1e54b35326c4a135/openpoints/dataset/build.py#L90
https://github.com/wangzy22/TAP/blob/32598336ae80ffbeb246f20e1e54b35326c4a135/openpoints/models/layers/kmeans.py#L81

=================================
https://github.com/Separius/SCALE
=================================

Found 6 times
torch.utils.data.DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=cfg.DATA_LOADER.NUM_WORKERS,
            pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
            drop_last=drop_last,
            collate_fn=detection_collate if cfg.DETECTION.ENABLE else None,
            worker_init_fn=utils.loader_worker_init_fn(dataset),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_sampler=batch_sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                shuffle=(False if sampler else shuffle),
                sampler=sampler,
                num_workers=cfg.DATA_LOADER.NUM_WORKERS,
                pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
                drop_last=drop_last,
                collate_fn=collate_func,
                worker_init_fn=utils.loader_worker_init_fn(dataset),
            )
DataLoader(TensorDataset(db, pos, label), shuffle=train, batch_size=args.batch_size, drop_last=train)
DataLoader(
        dataset, sampler=DistributedSampler(dataset, shuffle=False), batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers, pin_memory=args.pin_memory, drop_last=False)
DataLoader(dataset, shuffle=train, batch_size=args.batch_size, drop_last=train)
https://github.com/Separius/SCALE/blob/6fd17b9112e014805c34c38212fe4eb622db4f96/SlowFast/slowfast/datasets/loader.py#L139
https://github.com/Separius/SCALE/blob/6fd17b9112e014805c34c38212fe4eb622db4f96/SlowFast/slowfast/datasets/loader.py#L160
https://github.com/Separius/SCALE/blob/6fd17b9112e014805c34c38212fe4eb622db4f96/SlowFast/slowfast/datasets/loader.py#L187
https://github.com/Separius/SCALE/blob/6fd17b9112e014805c34c38212fe4eb622db4f96/src/eval.py#L195
https://github.com/Separius/SCALE/blob/6fd17b9112e014805c34c38212fe4eb622db4f96/src/extract_features.py#L186
https://github.com/Separius/SCALE/blob/6fd17b9112e014805c34c38212fe4eb622db4f96/src/train.py#L154

==================================
https://github.com/HanjaeKim98/CoT
==================================

Found 6 times
torch.utils.data.DataLoader(
    valset, batch_size=cfg.TRAIN.test_batch_size, shuffle=False,
    num_workers=cfg.TRAIN.num_workers)
torch.utils.data.DataLoader(
    testset, batch_size=cfg.TRAIN.test_batch_size, shuffle=False,
    num_workers=cfg.TRAIN.num_workers)
torch.utils.data.DataLoader(
        trainset, batch_size=cfg.TRAIN.batch_size, shuffle=True,
        num_workers=cfg.TRAIN.num_workers,
        pin_memory=True, drop_last=False, worker_init_fn=seed_worker)
torch.utils.data.DataLoader(
        valset, batch_size=cfg.TRAIN.test_batch_size, shuffle=False,
        num_workers=cfg.TRAIN.num_workers)
torch.utils.data.DataLoader(
        testset, batch_size=cfg.TRAIN.test_batch_size, shuffle=False,
        num_workers=cfg.TRAIN.num_workers)
torch.utils.data.DataLoader(
            trainset, batch_size=cfg.TRAIN.batch_size // 2, shuffle=True,
            num_workers=cfg.TRAIN.num_workers,
            pin_memory=True, drop_last=False, worker_init_fn=seed_worker)
https://github.com/HanjaeKim98/CoT/blob/258476ab926ee0b24e27101182727f99363f06aa/test.py#L83
https://github.com/HanjaeKim98/CoT/blob/258476ab926ee0b24e27101182727f99363f06aa/test.py#L88
https://github.com/HanjaeKim98/CoT/blob/258476ab926ee0b24e27101182727f99363f06aa/train.py#L231
https://github.com/HanjaeKim98/CoT/blob/258476ab926ee0b24e27101182727f99363f06aa/train.py#L237
https://github.com/HanjaeKim98/CoT/blob/258476ab926ee0b24e27101182727f99363f06aa/train.py#L242
https://github.com/HanjaeKim98/CoT/blob/258476ab926ee0b24e27101182727f99363f06aa/train.py#L309

=================================
https://github.com/sjiang95/semcl
=================================

Found 1 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(
            train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
https://github.com/sjiang95/semcl/blob/5a0fd5fab979b60e05c1f2f27039f8c98645905d/main.py#L443

=========================================
https://github.com/MKYucel/hybrid_augment
=========================================

Found 14 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size,  shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        datasets.ImageFolder(valdir, transforms.Compose([
            transforms.Resize(256),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            normalize,
        ])),
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
data.DataLoader(item, batch_size=1000, shuffle=False, num_workers=0)
torch.utils.data.DataLoader(
        dataset=train_dataset,
        batch_size=batch_size,
        shuffle=True,
        pin_memory=True,
        num_workers=num_workers,
    )
torch.utils.data.DataLoader(
        dataset=test_dataset,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=2,
    )
torch.utils.data.DataLoader(
            testset, batch_size=batch_size, shuffle=False,
            num_workers=num_workers, pin_memory=pin_memory,
        )
torch.utils.data.DataLoader(
            testset, batch_size=batch_size, shuffle=False,
            num_workers=num_workers, pin_memory=pin_memory,
        )
torch.utils.data.DataLoader(
            testset, batch_size=batch_size, shuffle=False,
            num_workers=num_workers, pin_memory=pin_memory,
        )
torch.utils.data.DataLoader(
            trainset, batch_size=batch_size, shuffle=True,
            num_workers=num_workers, pin_memory=pin_memory,
        )
torch.utils.data.DataLoader(
            testset, batch_size=batch_size, shuffle=False,
            num_workers=num_workers, pin_memory=pin_memory,
        )
torch.utils.data.DataLoader(
                    outset, batch_size=batch_size, shuffle=False,
                    num_workers=num_workers, pin_memory=pin_memory,
                )
torch.utils.data.DataLoader(
            trainset, batch_size=batch_size, shuffle=True,
            num_workers=num_workers, pin_memory=pin_memory,
        )
torch.utils.data.DataLoader(
            testset, batch_size=batch_size, shuffle=False,
            num_workers=num_workers, pin_memory=pin_memory,
        )
torch.utils.data.DataLoader(
                    outset, batch_size=batch_size, shuffle=False,
                    num_workers=num_workers, pin_memory=pin_memory,
                )
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/imagenet.py#L285
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/imagenet.py#L289
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/autoattacks/eval.py#L50
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/autoattacks/utils.py#L71
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/autoattacks/utils.py#L78
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/datasets/cifar10.py#L63
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/datasets/cifar10.py#L80
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/datasets/cifar10.py#L97
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/datasets/cifar10.py#L118
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/datasets/cifar10.py#L125
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/datasets/cifar10.py#L140
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/datasets/cifar10.py#L164
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/datasets/cifar10.py#L171
https://github.com/MKYucel/hybrid_augment/blob/4759a534d62d9b67aac2cd2d4769aab7f71254dc/datasets/cifar10.py#L186

==============================
https://github.com/wl-zhao/VPD
==============================

Found 6 times
torch.utils.data.DataLoader(val_dataset, batch_size=1, sampler=sampler_val,
                                             pin_memory=True)
torch.utils.data.DataLoader(train_dataset, batch_size=args.batch_size,
                                               sampler=sampler_train, num_workers=args.workers, 
                                               pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(val_dataset, batch_size=1, sampler=sampler_val,
                                             pin_memory=True)
torch.utils.data.DataLoader(dataset_test, batch_size=1,
                                                   sampler=test_sampler, num_workers=args.workers)
torch.utils.data.DataLoader(
        dataset, batch_size=args.batch_size,
        sampler=train_sampler, num_workers=args.workers, pin_memory=args.pin_mem, drop_last=True)
torch.utils.data.DataLoader(
        dataset_test, batch_size=1, sampler=test_sampler, num_workers=args.workers)
https://github.com/wl-zhao/VPD/blob/92095abdad4de7a83bab38248bcab01eb242b1f6/depth/test.py#L63
https://github.com/wl-zhao/VPD/blob/92095abdad4de7a83bab38248bcab01eb242b1f6/depth/train.py#L118
https://github.com/wl-zhao/VPD/blob/92095abdad4de7a83bab38248bcab01eb242b1f6/depth/train.py#L121
https://github.com/wl-zhao/VPD/blob/92095abdad4de7a83bab38248bcab01eb242b1f6/refer/test.py#L103
https://github.com/wl-zhao/VPD/blob/92095abdad4de7a83bab38248bcab01eb242b1f6/refer/train.py#L176
https://github.com/wl-zhao/VPD/blob/92095abdad4de7a83bab38248bcab01eb242b1f6/refer/train.py#L180

==========================================
https://github.com/Pixie8888/GFS-3DSeg_GWs
==========================================

Found 15 times
torch.utils.data.DataLoader(train_data, batch_size=1, num_workers=args.n_workers,
                                               shuffle=False, drop_last=False)
torch.utils.data.DataLoader(VALID_DATASET, batch_size=args.batch_size, num_workers=args.n_workers, shuffle=False,
                                             drop_last=False)
torch.utils.data.DataLoader(val_supp_data, batch_size=1, shuffle=False,
                                                      num_workers=args.n_workers, drop_last=False)
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size, num_workers=args.n_workers,
                                               shuffle=True,
                                               drop_last=True)
torch.utils.data.DataLoader(train_data_NoAug, batch_size=1, num_workers=args.n_workers,
                                                     shuffle=True, drop_last=False)
DataLoader(TEST_DATASET, batch_size=1, shuffle=False, collate_fn=batch_test_task_collate)
DataLoader(DATASET, batch_size=1, collate_fn=batch_test_task_collate)
DataLoader(TRAIN_DATASET, batch_size=1, collate_fn=batch_test_task_collate)
DataLoader(VALID_DATASET, batch_size=1, num_workers=args.n_workers, shuffle=False, drop_last=False)
torch.utils.data.DataLoader(val_supp_data, batch_size=1, shuffle=False,
                                                  num_workers=args.n_workers, drop_last=False)
DataLoader(base_dataset, batch_size=1, num_workers=args.n_workers, shuffle=False, drop_last=False)
DataLoader(TRAIN_DATASET, batch_size=args.batch_size, num_workers=args.n_workers, shuffle=True,
                              drop_last=True)
DataLoader(VALID_DATASET, batch_size=args.batch_size, num_workers=args.n_workers, shuffle=False,
                              drop_last=True)
DataLoader(TRAIN_DATASET, batch_size=1, collate_fn=batch_test_task_collate)
DataLoader(VALID_DATASET, batch_size=1, collate_fn=batch_test_task_collate)
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/get_basis.py#L142
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/train.py#L359
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/train.py#L371
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/train.py#L406
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/train.py#L414
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/pretrain/runs/eval.py#L219
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/pretrain/runs/fine_tune.py#L108
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/pretrain/runs/mpti_train.py#L51
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/pretrain/runs/mpti_train.py#L85
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/pretrain/runs/mpti_train.py#L94
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/pretrain/runs/mpti_train.py#L117
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/pretrain/runs/pre_train.py#L120
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/pretrain/runs/pre_train.py#L123
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/pretrain/runs/proto_train.py#L46
https://github.com/Pixie8888/GFS-3DSeg_GWs/blob/b14316d27bd708c6625d51c197d53466ede807c7/pretrain/runs/proto_train.py#L47

=================================================
https://github.com/shiyujiao/Boosting3DoFAccuracy
=================================================

Found 16 times
DataLoader(val_set, batch_size=batch_size, shuffle=False, pin_memory=True,
                            num_workers=num_thread_workers, drop_last=False)
DataLoader(test_set, batch_size=batch_size, shuffle=False, pin_memory=True,
                            num_workers=num_thread_workers, drop_last=False)
DataLoader(train_set, batch_size=batch_size, shuffle=True, pin_memory=True,
                              num_workers=num_thread_workers, drop_last=False)
DataLoader(test_set, batch_size=mini_batch, shuffle=False, pin_memory=True,
                            num_workers=2, drop_last=False)
DataLoader(train_set, batch_size=mini_batch, shuffle=True, pin_memory=True,
                                 num_workers=1, drop_last=False)
DataLoader(test_set, batch_size=mini_batch, shuffle=False, pin_memory=True,
                             num_workers=2, drop_last=False)
DataLoader(train_set, batch_size=mini_batch, shuffle=(args.visualize==0), pin_memory=True,
                                 num_workers=1, drop_last=False)
DataLoader(train_set, batch_size=batch_size, shuffle=True, pin_memory=True,
                              num_workers=num_thread_workers, drop_last=False)
DataLoader(test1_set, batch_size=batch_size, shuffle=False, pin_memory=True,
                            num_workers=num_thread_workers, drop_last=False)
DataLoader(test2_set, batch_size=batch_size, shuffle=False, pin_memory=True,
                              num_workers=num_thread_workers, drop_last=False)
DataLoader(val_set, batch_size=batch_size, shuffle=False, pin_memory=True,
                            num_workers=num_thread_workers, drop_last=False)
DataLoader(test_set, batch_size=batch_size, shuffle=False, pin_memory=True,
                            num_workers=num_thread_workers, drop_last=False)
DataLoader(train_set, batch_size=batch_size, shuffle=True, pin_memory=True,
                              num_workers=num_thread_workers, drop_last=False)
DataLoader(training_set, batch_size=batch_size, shuffle=True)
DataLoader(val_set, batch_size=batch_size, shuffle=False)
DataLoader(vigor, batch_size=batch_size, shuffle=False)
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/Oxford_dataset.py#L563
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/Oxford_dataset.py#L590
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/Oxford_dataset.py#L613
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/train_ford_2DoF.py#L42
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/train_ford_2DoF.py#L161
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/train_ford_3DoF.py#L44
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/train_ford_3DoF.py#L190
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/dataLoader/KITTI_dataset.py#L416
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/dataLoader/KITTI_dataset.py#L447
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/dataLoader/KITTI_dataset.py#L478
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/dataLoader/Oxford_dataset.py#L531
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/dataLoader/Oxford_dataset.py#L558
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/dataLoader/Oxford_dataset.py#L582
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/dataLoader/Vigor_dataset.py#L219
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/dataLoader/Vigor_dataset.py#L221
https://github.com/shiyujiao/Boosting3DoFAccuracy/blob/c1ae3b700c520223f1331c8a41fb2eca3bda3860/dataLoader/Vigor_dataset.py#L226

====================================
https://github.com/minnjung/EP2P-Loc
====================================

Found 1 times
DataLoader(
            dataset,
            batch_size=batch_size,
            shuffle=shuffle,
            drop_last=drop_last,
            pin_memory=pin_memory,
            num_workers=num_workers,
            persistent_workers=persistent_workers,
            collate_fn=collate_fn,
        )
https://github.com/minnjung/EP2P-Loc/blob/fce9e6eeb7bc29a0acaea8fc27fc809cf651bfcf/datasets/dataloader.py#L116

====================================
https://github.com/zsh2000/MuvieNeRF
====================================

Found 2 times
DataLoader(
            self.train_dataset,
            sampler=self.train_sampler,
            shuffle=True if self.train_sampler is None else False,
            num_workers=8,
            batch_size=1,
            pin_memory=True,
        )
DataLoader(
            self.val_dataset,
            shuffle=False,
            num_workers=1,
            batch_size=1,
            pin_memory=True,
        )
https://github.com/zsh2000/MuvieNeRF/blob/81745fee44851b08f5956340c507e0c5c25d187f/run_geo_nerf.py#L180
https://github.com/zsh2000/MuvieNeRF/blob/81745fee44851b08f5956340c507e0c5c25d187f/run_geo_nerf.py#L190

====================================
https://github.com/Yuqifan1117/CaCao
====================================

Found 7 times
DataLoader(vg_dataset, batch_size=8, shuffle=True)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=16)
DataLoader(val_dataset, batch_size=args.batch_size, shuffle=True, num_workers=16)
DataLoader(test_dataset, batch_size=1, shuffle=True, num_workers=8)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=16)
DataLoader(val_dataset, batch_size=args.batch_size, shuffle=True, num_workers=16)
DataLoader(test_dataset, batch_size=1, shuffle=True, num_workers=1)
https://github.com/Yuqifan1117/CaCao/blob/5315e174cb41c545554acf6bfd32c13d4f313651/adaptive_cluster.py#L343
https://github.com/Yuqifan1117/CaCao/blob/5315e174cb41c545554acf6bfd32c13d4f313651/cross_modal_tuning.py#L167
https://github.com/Yuqifan1117/CaCao/blob/5315e174cb41c545554acf6bfd32c13d4f313651/cross_modal_tuning.py#L168
https://github.com/Yuqifan1117/CaCao/blob/5315e174cb41c545554acf6bfd32c13d4f313651/cross_modal_tuning.py#L169
https://github.com/Yuqifan1117/CaCao/blob/5315e174cb41c545554acf6bfd32c13d4f313651/cross_modal_tuning.py#L232
https://github.com/Yuqifan1117/CaCao/blob/5315e174cb41c545554acf6bfd32c13d4f313651/cross_modal_tuning.py#L233
https://github.com/Yuqifan1117/CaCao/blob/5315e174cb41c545554acf6bfd32c13d4f313651/cross_modal_tuning.py#L234

==============================
https://github.com/XiaRho/CMDA
==============================

Found 2 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
https://github.com/XiaRho/CMDA/blob/89838d4a4611493690ed86244d736903089dabde/mmseg/datasets/builder.py#L152
https://github.com/XiaRho/CMDA/blob/89838d4a4611493690ed86244d736903089dabde/mmseg/datasets/builder.py#L165

=============================
https://github.com/w1oves/DTP
=============================

Found 2 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
https://github.com/w1oves/DTP/blob/4a4e68bba3e12f93953c3dbc7b9c1b77828a60e3/mmseg/datasets/builder.py#L153
https://github.com/w1oves/DTP/blob/4a4e68bba3e12f93953c3dbc7b9c1b77828a60e3/mmseg/datasets/builder.py#L166

====================================
https://github.com/JacobYuan7/RLIPv2
====================================

Found 7 times
DataLoader(dataset_tag, args.batch_size, sampler = sampler_tag,
                                 drop_last = False, collate_fn = utils.collate_fn, num_workers = args.num_workers)
DataLoader(dataset_tag_val, args.batch_size, sampler = sampler_tag_val,
                                 drop_last = False, collate_fn = utils.collate_fn, num_workers = args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler = sampler_val,
                                 drop_last = False, collate_fn = utils.collate_fn, num_workers = args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler = sampler_val,
                                 drop_last = False, collate_fn = utils.collate_fn, num_workers = args.num_workers)
DataLoader(Coco_train, batch_sampler=batch_sampler,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers, shuffle = False)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                        drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
https://github.com/JacobYuan7/RLIPv2/blob/7e21f6d5cbf62278e333acebc962c363dc36e1f6/generate_relations_using_verb_tagger.py#L326
https://github.com/JacobYuan7/RLIPv2/blob/7e21f6d5cbf62278e333acebc962c363dc36e1f6/generate_relations_using_verb_tagger.py#L328
https://github.com/JacobYuan7/RLIPv2/blob/7e21f6d5cbf62278e333acebc962c363dc36e1f6/generate_relations_using_verb_tagger.py#L464
https://github.com/JacobYuan7/RLIPv2/blob/7e21f6d5cbf62278e333acebc962c363dc36e1f6/generate_vcoco_official.py#L336
https://github.com/JacobYuan7/RLIPv2/blob/7e21f6d5cbf62278e333acebc962c363dc36e1f6/inference_on_custom_imgs_pseudo_coco.py#L398
https://github.com/JacobYuan7/RLIPv2/blob/7e21f6d5cbf62278e333acebc962c363dc36e1f6/main.py#L574
https://github.com/JacobYuan7/RLIPv2/blob/7e21f6d5cbf62278e333acebc962c363dc36e1f6/main.py#L583

==================================
https://github.com/PJLab-ADG/PCSeg
==================================

Found 3 times
DataLoader(
            dataset,
            batch_size=batch_size,
            pin_memory=True,
            num_workers=workers,
            shuffle = (sampler is None) and training,
            collate_fn=dataset.collate_batch_tta,
            drop_last=False,
            sampler=sampler,
            timeout=0,
            persistent_workers=(workers > 0),
        )
torch.utils.data.DataLoader(
                dataset,
                batch_size=batch_size,
                sampler=sampler_train,
                num_workers=workers,
                drop_last=True,
                pin_memory=True,
            )
DataLoader(
                dataset,
                batch_size=batch_size,
                pin_memory=True,
                num_workers=workers,
                shuffle=(sampler is None) and training,
                collate_fn=dataset.collate_batch,
                drop_last=False,
                sampler=sampler,
                timeout=0,
                persistent_workers=(workers > 0),
            )
https://github.com/PJLab-ADG/PCSeg/blob/2d4ab1eed2079bd8703bae7567f1dd2e3d5e0247/pcseg/data/__init__.py#L117
https://github.com/PJLab-ADG/PCSeg/blob/2d4ab1eed2079bd8703bae7567f1dd2e3d5e0247/pcseg/data/__init__.py#L132
https://github.com/PJLab-ADG/PCSeg/blob/2d4ab1eed2079bd8703bae7567f1dd2e3d5e0247/pcseg/data/__init__.py#L141

======================================
https://github.com/HKUST-LongGroup/CFA
======================================

Found 2 times
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=collator,
        )
torch.utils.data.DataLoader(split,
        batch_size=cfg.SOLVER.IMS_PER_BATCH,
        shuffle=not (test_on or val_on),  # only shuffle the data in training
        pin_memory=True,
        num_workers=4,
        collate_fn=SimpleCollator(),
    )
https://github.com/HKUST-LongGroup/CFA/blob/5459048cd81c16ee42c495e5aa3ec8e006c5bc08/maskrcnn_benchmark/data/build.py#L259
https://github.com/HKUST-LongGroup/CFA/blob/5459048cd81c16ee42c495e5aa3ec8e006c5bc08/maskrcnn_benchmark/image_retrieval/dataloader.py#L107

=======================================================================
https://github.com/pwp1208/Domain_Translation_Multi-weather_Restoration
=======================================================================

Found 1 times
DataLoader(dataset=test_set, batch_size=opt.test_batch_size, shuffle=False)
https://github.com/pwp1208/Domain_Translation_Multi-weather_Restoration/blob/d037be7bee53352cfe4bba7d2f1ecf1abb1d9620/test.py#L51

=======================================
https://github.com/weiyithu/SurroundOcc
=======================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/weiyithu/SurroundOcc/blob/f698d7968a60815067601776dabfca2a8b03500a/projects/mmdet3d_plugin/datasets/builder.py#L83

=================================
https://github.com/JiYuanFeng/DDP
=================================

Found 34 times
DataLoader(dataset, num_workers=0, batch_size=batch_size, shuffle=True)
DataLoader(dataset, num_workers=0, batch_size=batch_size, shuffle=True)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
        test_dataset,
        batch_size=1,
        sampler=None,
        num_workers=0,
        shuffle=False,
    )
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(
        test_dataset, batch_size=1, sampler=None, num_workers=0, shuffle=False)
DataLoader(
        test_dataset,
        batch_size=1,
        sampler=None,
        num_workers=0,
        shuffle=False,
    )
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/tutorial_train.py#L29
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/tutorial_train_sd21.py#L29
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/mmseg/datasets/builder.py#L153
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/mmseg/datasets/builder.py#L166
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_eval_hook.py#L46
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_eval_hook.py#L58
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_eval_hook.py#L60
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_eval_hook.py#L84
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_eval_hook.py#L96
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_eval_hook.py#L98
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_eval_hook.py#L133
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_eval_hook.py#L145
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_eval_hook.py#L147
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_eval_hook.py#L173
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_eval_hook.py#L185
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_eval_hook.py#L187
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/annotator/ddp/tests/test_apis/test_single_gpu.py#L37
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/depth/depth/datasets/builder.py#L138
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/depth/depth/datasets/builder.py#L151
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/mmseg/datasets/builder.py#L153
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/mmseg/datasets/builder.py#L166
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_eval_hook.py#L46
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_eval_hook.py#L58
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_eval_hook.py#L60
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_eval_hook.py#L84
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_eval_hook.py#L96
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_eval_hook.py#L98
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_eval_hook.py#L133
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_eval_hook.py#L145
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_eval_hook.py#L147
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_eval_hook.py#L173
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_eval_hook.py#L185
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_eval_hook.py#L187
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/segmentation/tests/test_apis/test_single_gpu.py#L37

================================
https://github.com/JasonQSY/3DOI
================================

Found 4 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=cfg.train.batch_size,
        shuffle=True,
        num_workers=cfg.data.num_workers,
        #collate_fn=collate_fn,
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=cfg.train.batch_size,
        shuffle=True,
        num_workers=cfg.data.num_workers,
    )
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=cfg.train.batch_size,
        shuffle=True,
        num_workers=cfg.data.num_workers,
        #collate_fn=collate_fn,
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=cfg.train.batch_size,
        shuffle=True,
        num_workers=cfg.data.num_workers,
    )
https://github.com/JasonQSY/3DOI/blob/718f102fe03c77d16f7a20392885de014cba99ec/monoarti/test.py#L680
https://github.com/JasonQSY/3DOI/blob/718f102fe03c77d16f7a20392885de014cba99ec/monoarti/test.py#L698
https://github.com/JasonQSY/3DOI/blob/718f102fe03c77d16f7a20392885de014cba99ec/monoarti/train.py#L464
https://github.com/JasonQSY/3DOI/blob/718f102fe03c77d16f7a20392885de014cba99ec/monoarti/train.py#L482

==========================================
https://github.com/QianyiWu/objectsdf_plus
==========================================

Found 2 times
torch.utils.data.DataLoader(self.train_dataset,
                                                            batch_size=self.batch_size,
                                                            shuffle=True,
                                                            collate_fn=self.all_dataset.collate_fn,
                                                            num_workers=8,
                                                            pin_memory=True)
torch.utils.data.DataLoader(self.train_dataset, 
                                                           batch_size=self.conf.get_int('plot.plot_nimgs'),
                                                           shuffle=True,
                                                           collate_fn=self.all_dataset.collate_fn
                                                           )
https://github.com/QianyiWu/objectsdf_plus/blob/4c93f016d553ed3251a527ef1a32821cf53af90c/code/training/objectsdfplus_train.py#L99
https://github.com/QianyiWu/objectsdf_plus/blob/4c93f016d553ed3251a527ef1a32821cf53af90c/code/training/objectsdfplus_train.py#L105

================================================================
https://github.com/woshidandan/Image-Color-Aesthetics-Assessment
================================================================

Found 4 times
DataLoader(train_ds, batch_size=opt['batch_size'], num_workers=opt['num_workers'], shuffle=True)
DataLoader(test_ds, batch_size=opt['batch_size'], num_workers=opt['num_workers'], shuffle=False)
DataLoader(train_ds, batch_size=opt['batch_size'], num_workers=opt['num_workers'], shuffle=True)
DataLoader(test_ds, batch_size=opt['batch_size'], num_workers=opt['num_workers'], shuffle=False)
https://github.com/woshidandan/Image-Color-Aesthetics-Assessment/blob/86851a24d7a0f4a03c94c3170be72ec93420541e/ICAA17K_code/main_nni.py#L52
https://github.com/woshidandan/Image-Color-Aesthetics-Assessment/blob/86851a24d7a0f4a03c94c3170be72ec93420541e/ICAA17K_code/main_nni.py#L53
https://github.com/woshidandan/Image-Color-Aesthetics-Assessment/blob/86851a24d7a0f4a03c94c3170be72ec93420541e/SPAQ_code/main_nni.py#L48
https://github.com/woshidandan/Image-Color-Aesthetics-Assessment/blob/86851a24d7a0f4a03c94c3170be72ec93420541e/SPAQ_code/main_nni.py#L49

======================================
https://github.com/taohan10200/STEERER
======================================

Found 7 times
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=1,
        shuffle=False,
        num_workers=0,  # config.WORKERS,
        pin_memory=True)
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=1,
        shuffle=False,
        num_workers=8,  # config.WORKERS,
        pin_memory=True)
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=1,
        shuffle=False,
        num_workers=8,  # config.WORKERS,
        pin_memory=True)
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=1,
        shuffle=False,
        num_workers=8,  # config.WORKERS,
        pin_memory=True)
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=1,
        shuffle=False,
        num_workers=8,  # config.WORKERS,
        pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=config.train.batch_size_per_gpu,
        shuffle=config.train.shuffle and train_sampler is None,
        num_workers=config.workers,
        pin_memory=True,
        drop_last=True,
        persistent_workers=True,
        collate_fn=default_collate,
        sampler=train_sampler)
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=config.test.batch_size_per_gpu,
        shuffle=False,
        num_workers=config.workers,
        pin_memory=True,
        collate_fn=default_collate,
        sampler=test_sampler)
https://github.com/taohan10200/STEERER/blob/ec08b9817fc89ba9b88774127a27901716603ce8/cam.py#L113
https://github.com/taohan10200/STEERER/blob/ec08b9817fc89ba9b88774127a27901716603ce8/scale_generalization/test_autoscale.py#L358
https://github.com/taohan10200/STEERER/blob/ec08b9817fc89ba9b88774127a27901716603ce8/scale_generalization/test_scale_level.py#L277
https://github.com/taohan10200/STEERER/blob/ec08b9817fc89ba9b88774127a27901716603ce8/tools/test_cc.py#L135
https://github.com/taohan10200/STEERER/blob/ec08b9817fc89ba9b88774127a27901716603ce8/tools/test_loc.py#L136
https://github.com/taohan10200/STEERER/blob/ec08b9817fc89ba9b88774127a27901716603ce8/tools/train_cc.py#L204
https://github.com/taohan10200/STEERER/blob/ec08b9817fc89ba9b88774127a27901716603ce8/tools/train_cc.py#L233

=====================================================================
https://github.com/francescotonini/object-aware-gaze-target-detection
=====================================================================

Found 4 times
DataLoader(
            dataset=self.data_train,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            persistent_workers=self.hparams.persistent_workers,
            shuffle=True,
            collate_fn=misc.collate_fn,
        )
DataLoader(
            dataset=self.data_val,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            persistent_workers=self.hparams.persistent_workers,
            shuffle=False,
            collate_fn=misc.collate_fn,
        )
DataLoader(
            dataset=self.data_train,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            persistent_workers=self.hparams.persistent_workers,
            shuffle=True,
            collate_fn=misc.collate_fn,
        )
DataLoader(
            dataset=self.data_val,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            pin_memory=self.hparams.pin_memory,
            persistent_workers=self.hparams.persistent_workers,
            shuffle=False,
            collate_fn=misc.collate_fn,
        )
https://github.com/francescotonini/object-aware-gaze-target-detection/blob/ca9522c92b68f14c66af712db23a06896c6d6fff/src/datamodules/gazefollow_objects_datamodule.py#L133
https://github.com/francescotonini/object-aware-gaze-target-detection/blob/ca9522c92b68f14c66af712db23a06896c6d6fff/src/datamodules/gazefollow_objects_datamodule.py#L144
https://github.com/francescotonini/object-aware-gaze-target-detection/blob/ca9522c92b68f14c66af712db23a06896c6d6fff/src/datamodules/videoattentiontarget_objects_datamodule.py#L135
https://github.com/francescotonini/object-aware-gaze-target-detection/blob/ca9522c92b68f14c66af712db23a06896c6d6fff/src/datamodules/videoattentiontarget_objects_datamodule.py#L146

==============================
https://github.com/visinf/veto
==============================

Found 3 times
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=collator,
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=collator,
        )
torch.utils.data.DataLoader(split,
        batch_size=cfg.SOLVER.IMS_PER_BATCH,
        shuffle=not (test_on or val_on),  # only shuffle the data in training
        pin_memory=True,
        num_workers=4,
        collate_fn=SimpleCollator(),
    )
https://github.com/visinf/veto/blob/832ba0e4f79595fad60564a9f2409472b84a15a9/pysgg/data/build.py#L334
https://github.com/visinf/veto/blob/832ba0e4f79595fad60564a9f2409472b84a15a9/pysgg/data/build.py#L422
https://github.com/visinf/veto/blob/832ba0e4f79595fad60564a9f2409472b84a15a9/pysgg/image_retrieval/dataloader.py#L98

====================================
https://github.com/sayands/sgaligner
====================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        num_workers=num_workers,
        shuffle=shuffle,
        sampler=sampler,
        collate_fn=collate_fn,
        worker_init_fn=reset_seed_worker_init_fn,
        pin_memory=pin_memory,
        drop_last=drop_last,
    )
https://github.com/sayands/sgaligner/blob/c4ad97d0aeaabb2ea2e415bb834c1618601d252d/utils/torch_util.py#L95

======================================================
https://github.com/thudzj/NeuralEigenfunctionSegmentor
======================================================

Found 5 times
DataLoader(
        dataset=dataset,
        batch_size=1 if dataset_name == "kitti_step" else batch_size,
        num_workers=n_workers,
        pin_memory=True
    )
DataLoader(
        dataset=dataset,
        batch_size=1 if args.dataset_name == "kitti_step" else args.batch_size,
        num_workers=args.n_workers,
        pin_memory=True
    )
DataLoader(
            self.dataset, batch_size=batch_size, num_workers=n_workers, pin_memory=True, shuffle=True
        )
DataLoader(
            self.eval_dataset,
            batch_size=1 if self.dataset_name == "kitti_step" else 16,
            num_workers=16,
            pin_memory=True
        )
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        num_workers=16,
        pin_memory=True,
        drop_last=False
    )
https://github.com/thudzj/NeuralEigenfunctionSegmentor/blob/f5cd3248bf3998ff82ae41aa4e88eeaeda41809c/engine.py#L369
https://github.com/thudzj/NeuralEigenfunctionSegmentor/blob/f5cd3248bf3998ff82ae41aa4e88eeaeda41809c/reco/eval.py#L112
https://github.com/thudzj/NeuralEigenfunctionSegmentor/blob/f5cd3248bf3998ff82ae41aa4e88eeaeda41809c/reco/networks/reco_plus.py#L114
https://github.com/thudzj/NeuralEigenfunctionSegmentor/blob/f5cd3248bf3998ff82ae41aa4e88eeaeda41809c/reco/networks/reco_plus.py#L231
https://github.com/thudzj/NeuralEigenfunctionSegmentor/blob/f5cd3248bf3998ff82ae41aa4e88eeaeda41809c/reco/utils/extract_image_embeddings.py#L153

=====================================
https://github.com/weiguangzhao/PBNet
=====================================

Found 3 times
DataLoader(train_set, batch_size=self.batch_size, collate_fn=self.trainMerge,
                                            num_workers=self.dataset_workers,
                                            shuffle=(self.train_sampler is None), sampler=self.train_sampler,
                                            drop_last=True, pin_memory=False,
                                            worker_init_fn=self._worker_init_fn_)
DataLoader(val_set, batch_size=self.batch_size_v, collate_fn=self.valMerge,
                                          num_workers=self.dataset_workers,
                                          shuffle=False, sampler=None, drop_last=False, pin_memory=True,
                                          worker_init_fn=self._worker_init_fn_)
DataLoader(test_set, batch_size=self.batch_size, collate_fn=self.testMerge,
                                           num_workers=self.dataset_workers,
                                           shuffle=False, sampler=None, drop_last=False, pin_memory=True,
                                           worker_init_fn=self._worker_init_fn_)
https://github.com/weiguangzhao/PBNet/blob/b034867ee72918e4c826d8c3e1c1e0b6c46dfb1b/datasets/scannetv2/dataset_preprocess.py#L51
https://github.com/weiguangzhao/PBNet/blob/b034867ee72918e4c826d8c3e1c1e0b6c46dfb1b/datasets/scannetv2/dataset_preprocess.py#L60
https://github.com/weiguangzhao/PBNet/blob/b034867ee72918e4c826d8c3e1c1e0b6c46dfb1b/datasets/scannetv2/dataset_preprocess.py#L68

=============================
https://github.com/mlvlab/PDC
=============================

Found 1 times
DataLoader(sdf_dataset, shuffle=True,collate_fn=sdf_dataset.collate_fn,
                    batch_size=meta_params['batch_size'], drop_last = True,num_workers = 8)
https://github.com/mlvlab/PDC/blob/875636167488bef2e5c227726d3773109a9584b6/train.py#L92

===============================
https://github.com/max810/XMem2
===============================

Found 3 times
DataLoader(vid_reader, batch_size=1, shuffle=False, num_workers=2)
DataLoader(dataset, config['batch_size'], sampler=train_sampler, num_workers=config['num_workers'],
                                worker_init_fn=worker_init_fn, drop_last=True)
DataLoader(vid_reader, batch_size=None, shuffle=False, num_workers=1, collate_fn=VideoReader.collate_fn_identity)
https://github.com/max810/XMem2/blob/adc7d4cd26b7b7592d37f0bea97dbfb8b3990281/eval.py#L150
https://github.com/max810/XMem2/blob/adc7d4cd26b7b7592d37f0bea97dbfb8b3990281/train.py#L121
https://github.com/max810/XMem2/blob/adc7d4cd26b7b7592d37f0bea97dbfb8b3990281/inference/run_on_video.py#L186

================================
https://github.com/Sam1224/SCCAN
================================

Found 3 times
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val, shuffle=False,
                                                 num_workers=args.workers, pin_memory=False, sampler=None)
torch.utils.data.DataLoader(train_data, batch_size=args.batch_size, num_workers=args.workers,
                                               pin_memory=True, sampler=train_sampler, drop_last=True,
                                               shuffle=False if args.distributed else True)
torch.utils.data.DataLoader(val_data, batch_size=args.batch_size_val, shuffle=False,
                                                 num_workers=args.workers, pin_memory=False, sampler=None)
https://github.com/Sam1224/SCCAN/blob/e8d4cb810777ea5584fb3653041dbac667d64b13/test_sccan.py#L139
https://github.com/Sam1224/SCCAN/blob/e8d4cb810777ea5584fb3653041dbac667d64b13/train_sccan.py#L166
https://github.com/Sam1224/SCCAN/blob/e8d4cb810777ea5584fb3653041dbac667d64b13/train_sccan.py#L185

===========================
https://github.com/lkhl/MIS
===========================

Found 2 times
DataLoader(
            trainset,
            cfg.batch_size,
            sampler=get_sampler(trainset, shuffle=True, distributed=cfg.distributed),
            drop_last=True,
            pin_memory=True,
            num_workers=cfg.workers)
DataLoader(
            valset,
            cfg.val_batch_size,
            sampler=get_sampler(valset, shuffle=False, distributed=cfg.distributed),
            drop_last=True,
            pin_memory=True,
            num_workers=cfg.workers)
https://github.com/lkhl/MIS/blob/25e2d86acceec7c44df9f43c9879b48fe3ab9cc2/isegm/engine/trainer.py#L81
https://github.com/lkhl/MIS/blob/25e2d86acceec7c44df9f43c9879b48fe3ab9cc2/isegm/engine/trainer.py#L89

=================================
https://github.com/ssssshwan/TLDR
=================================

Found 3 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
data.DataLoader(self.style_dataset, batch_size=self.batch_size, sampler=InfiniteSamplerWrapper(self.style_dataset), num_workers=4)
https://github.com/ssssshwan/TLDR/blob/e7b1c5508839720550758a3a186ab970764efb49/mmseg/datasets/builder.py#L151
https://github.com/ssssshwan/TLDR/blob/e7b1c5508839720550758a3a186ab970764efb49/mmseg/datasets/builder.py#L164
https://github.com/ssssshwan/TLDR/blob/e7b1c5508839720550758a3a186ab970764efb49/mmseg/models/uda/stylization.py#L52

==================================
https://github.com/NazirNayal8/RbA
==================================

Found 2 times
DataLoader(
        dataset, shuffle=False, batch_size=args.batch_size, num_workers=args.num_workers)
DataLoader(Subset(dataset, indices),
                                batch_size=batch_size, num_workers=num_workers)
https://github.com/NazirNayal8/RbA/blob/3f15444a950609f24a97c8fd2e24be1d6f745d64/evaluate_ood.py#L210
https://github.com/NazirNayal8/RbA/blob/3f15444a950609f24a97c8fd2e24be1d6f745d64/support.py#L323

======================================================
https://github.com/sadrasafa/multi-object-segmentation
======================================================

Found 4 times
torch.utils.data.DataLoader(train_dataset,
                                               num_workers=cfg.DATALOADER.NUM_WORKERS,
                                               batch_size=cfg.SOLVER.IMS_PER_BATCH,
                                               collate_fn=lambda x: x,
                                               shuffle=True,
                                               pin_memory=False,
                                               drop_last=True,
                                               persistent_workers=False and cfg.DATALOADER.NUM_WORKERS > 0,
                                               worker_init_fn=utils.random_state.worker_init_function,
                                               generator=g
                                               )
torch.utils.data.DataLoader(val_dataset,
                                             num_workers=cfg.DATALOADER.NUM_WORKERS,
                                             batch_size=val_loader_size,
                                             shuffle=False,
                                             pin_memory=False,
                                             collate_fn=lambda x: x,
                                             drop_last=False,
                                             persistent_workers=False and cfg.DATALOADER.NUM_WORKERS > 0,
                                             worker_init_fn=utils.random_state.worker_init_function,
                                             generator=g)
torch.utils.data.DataLoader(trainval_dataset,
                                                      num_workers=cfg.DATALOADER.NUM_WORKERS,
                                                      batch_size=val_loader_size,
                                                      shuffle=False,
                                                      pin_memory=False,
                                                      collate_fn=lambda x: x,
                                                      drop_last=False,
                                                      persistent_workers=False and cfg.DATALOADER.NUM_WORKERS > 0,
                                                      worker_init_fn=utils.random_state.worker_init_function,
                                                      generator=g)
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/sadrasafa/multi-object-segmentation/blob/8c3dd404a94eef4373784d89bd40411f59a553ad/src/config.py#L263
https://github.com/sadrasafa/multi-object-segmentation/blob/8c3dd404a94eef4373784d89bd40411f59a553ad/src/config.py#L275
https://github.com/sadrasafa/multi-object-segmentation/blob/8c3dd404a94eef4373784d89bd40411f59a553ad/src/config.py#L291
https://github.com/sadrasafa/multi-object-segmentation/blob/8c3dd404a94eef4373784d89bd40411f59a553ad/src/mask2former_video/data_video/build.py#L244

=========================================
https://github.com/lyclyc52/Instance_NeRF
=========================================

Found 9 times
DataLoader(self.train_set, batch_size=self.args.batch_size, 
                                           collate_fn=collate_fn,
                                           shuffle=True, num_workers=4, pin_memory=True)
DataLoader(self.train_set, batch_size=self.args.batch_size // self.world_size,
                                           collate_fn=collate_fn,
                                           sampler=self.train_sampler, num_workers=2, pin_memory=True)
DataLoader(dataset, batch_size=self.args.batch_size // self.world_size, 
                                shuffle=False, num_workers=4,
                                collate_fn=collate_fn)
DataLoader(self.train_set, batch_size=self.args.batch_size, 
                                           collate_fn=SegmentationDataset.collate_fn,
                                           shuffle=True, num_workers=4, pin_memory=True)
DataLoader(self.train_set, batch_size=self.args.batch_size // self.world_size,
                                           collate_fn=SegmentationDataset.collate_fn,
                                           sampler=self.train_sampler, num_workers=0, pin_memory=False)
DataLoader(dataset, batch_size=self.args.batch_size // self.world_size, 
                                shuffle=False, num_workers=0,
                                collate_fn=dataset.collate_fn)
DataLoader(self.train_set, batch_size=self.args.batch_size, 
                                           collate_fn=BaseDataset.collate_fn,
                                           shuffle=True, num_workers=4, pin_memory=True)
DataLoader(self.train_set, batch_size=self.args.batch_size // self.world_size,
                                           collate_fn=BaseDataset.collate_fn,
                                           sampler=self.train_sampler, num_workers=2, pin_memory=True)
DataLoader(dataset, batch_size=self.args.batch_size // self.world_size, 
                                shuffle=False, num_workers=4,
                                collate_fn=dataset.collate_fn)
https://github.com/lyclyc52/Instance_NeRF/blob/6e912bfd00b4b6d994c675343b4a90cad51f3e58/nerf_rcnn/run_fcos.py#L316
https://github.com/lyclyc52/Instance_NeRF/blob/6e912bfd00b4b6d994c675343b4a90cad51f3e58/nerf_rcnn/run_fcos.py#L321
https://github.com/lyclyc52/Instance_NeRF/blob/6e912bfd00b4b6d994c675343b4a90cad51f3e58/nerf_rcnn/run_fcos.py#L441
https://github.com/lyclyc52/Instance_NeRF/blob/6e912bfd00b4b6d994c675343b4a90cad51f3e58/nerf_rcnn/run_rcnn.py#L483
https://github.com/lyclyc52/Instance_NeRF/blob/6e912bfd00b4b6d994c675343b4a90cad51f3e58/nerf_rcnn/run_rcnn.py#L488
https://github.com/lyclyc52/Instance_NeRF/blob/6e912bfd00b4b6d994c675343b4a90cad51f3e58/nerf_rcnn/run_rcnn.py#L608
https://github.com/lyclyc52/Instance_NeRF/blob/6e912bfd00b4b6d994c675343b4a90cad51f3e58/nerf_rcnn/run_rpn.py#L332
https://github.com/lyclyc52/Instance_NeRF/blob/6e912bfd00b4b6d994c675343b4a90cad51f3e58/nerf_rcnn/run_rpn.py#L337
https://github.com/lyclyc52/Instance_NeRF/blob/6e912bfd00b4b6d994c675343b4a90cad51f3e58/nerf_rcnn/run_rpn.py#L458

====================================
https://github.com/zkzhang98/CoinSeg
====================================

Found 6 times
data.DataLoader(
        dataset_dict['train'], batch_size=opts.batch_size, shuffle=True, num_workers=4, pin_memory=True, drop_last=True)
data.DataLoader(
        dataset_dict['val'], batch_size=opts.val_batch_size, shuffle=False, num_workers=4, pin_memory=True)
data.DataLoader(
        dataset_dict['test'], batch_size=opts.val_batch_size, shuffle=False, num_workers=4, pin_memory=True)
data.DataLoader(
            dataset_dict['testval'], batch_size=opts.val_batch_size, shuffle=False, num_workers=4, pin_memory=True)
data.DataLoader(
            dataset_dict['memory'], batch_size=opts.batch_size, shuffle=True, num_workers=4, pin_memory=True,
            drop_last=True)
data.DataLoader(
        train_dst, batch_size=opts.batch_size, 
        shuffle=False, num_workers=4, drop_last=False)
https://github.com/zkzhang98/CoinSeg/blob/ae2095688ab9cac6dbca41aab06bd09d7e213118/main.py#L531
https://github.com/zkzhang98/CoinSeg/blob/ae2095688ab9cac6dbca41aab06bd09d7e213118/main.py#L533
https://github.com/zkzhang98/CoinSeg/blob/ae2095688ab9cac6dbca41aab06bd09d7e213118/main.py#L535
https://github.com/zkzhang98/CoinSeg/blob/ae2095688ab9cac6dbca41aab06bd09d7e213118/main.py#L538
https://github.com/zkzhang98/CoinSeg/blob/ae2095688ab9cac6dbca41aab06bd09d7e213118/main.py#L545
https://github.com/zkzhang98/CoinSeg/blob/ae2095688ab9cac6dbca41aab06bd09d7e213118/utils/memory.py#L41

=======================================
https://github.com/Meowuu7/few-arti-gen
=======================================

Found 8 times
torch.utils.data.DataLoader(dataset_train, collate_fn=datasets_convex.my_collate, drop_last=True, shuffle=True, batch_size=opt.batch_size, num_workers=opt.num_workers, worker_init_fn=lambda id: np.random.seed(np.random.get_state()[1][0] + id))
torch.utils.data.DataLoader(dataset_test, collate_fn=datasets_convex.my_collate, drop_last=True, shuffle=False, batch_size=opt.batch_size, num_workers=opt.num_workers, worker_init_fn=lambda id: np.random.seed(np.random.get_state()[1][0] + id))
torch.utils.data.DataLoader(cur_part_dataset_train, collate_fn=datasets_v3.my_collate, drop_last=True, shuffle=True, batch_size=opt.batch_size, num_workers=opt.num_workers, worker_init_fn=lambda id: np.random.seed(np.random.get_state()[1][0] + id))
torch.utils.data.DataLoader(dataset_train, collate_fn=dataset_obj.my_collate, shuffle=True, batch_size=opt.train_batch_size, num_workers=0, worker_init_fn=lambda id: np.random.seed(np.random.get_state()[1][0] + id))
torch.utils.data.DataLoader(dataset_train, collate_fn=datasets_v3.my_collate, drop_last=True, shuffle=True, batch_size=opt.batch_size, num_workers=opt.num_workers, worker_init_fn=lambda id: np.random.seed(np.random.get_state()[1][0] + id))
torch.utils.data.DataLoader(dataset_test, collate_fn=datasets_v3.my_collate, drop_last=True, shuffle=False, batch_size=opt.batch_size, num_workers=opt.num_workers, worker_init_fn=lambda id: np.random.seed(np.random.get_state()[1][0] + id))
torch.utils.data.DataLoader(cur_part_dataset_train, collate_fn=datasets_v3.my_collate, drop_last=True, shuffle=True, batch_size=opt.batch_size, num_workers=opt.num_workers, worker_init_fn=lambda id: np.random.seed(np.random.get_state()[1][0] + id))
torch.utils.data.DataLoader(dataset_train, collate_fn=dataset_obj.my_collate, shuffle=True, batch_size=opt.train_batch_size, num_workers=0, worker_init_fn=lambda id: np.random.seed(np.random.get_state()[1][0] + id))
https://github.com/Meowuu7/few-arti-gen/blob/b09a44a1776621471f00d0eb410b3bc3f104d35b/src/convex_deformation/train_def_cages.py#L249
https://github.com/Meowuu7/few-arti-gen/blob/b09a44a1776621471f00d0eb410b3bc3f104d35b/src/convex_deformation/train_def_cages.py#L255
https://github.com/Meowuu7/few-arti-gen/blob/b09a44a1776621471f00d0eb410b3bc3f104d35b/src/deformation_synchronization/def_sync.py#L332
https://github.com/Meowuu7/few-arti-gen/blob/b09a44a1776621471f00d0eb410b3bc3f104d35b/src/deformation_synchronization/def_sync.py#L376
https://github.com/Meowuu7/few-arti-gen/blob/b09a44a1776621471f00d0eb410b3bc3f104d35b/src/eval/eval_def_cages.py#L244
https://github.com/Meowuu7/few-arti-gen/blob/b09a44a1776621471f00d0eb410b3bc3f104d35b/src/eval/eval_def_cages.py#L250
https://github.com/Meowuu7/few-arti-gen/blob/b09a44a1776621471f00d0eb410b3bc3f104d35b/src/physicsaware_correction/train_def_obj.py#L332
https://github.com/Meowuu7/few-arti-gen/blob/b09a44a1776621471f00d0eb410b3bc3f104d35b/src/physicsaware_correction/train_def_obj.py#L376

=================================
https://github.com/TY-Shi/FreeCOS
=================================

Found 3 times
data.DataLoader(train_dataset,
                                   batch_size=batch_size,
                                   num_workers=config.num_workers,
                                   drop_last=True,
                                   shuffle=is_shuffle,
                                   pin_memory=True,
                                   sampler=train_sampler)
data.DataLoader(train_dataset,
                                   batch_size=batch_size,
                                   num_workers=config.num_workers,
                                   drop_last=True,
                                   shuffle=is_shuffle,
                                   pin_memory=True,
                                   sampler=train_sampler)
DataLoader(dataset, batch_size=bsz, shuffle=shuffle, num_workers=nworker)
https://github.com/TY-Shi/FreeCOS/blob/b501f340f82902d7e58fb414b7a55b1a638ff6c3/dataloader.py#L132
https://github.com/TY-Shi/FreeCOS/blob/b501f340f82902d7e58fb414b7a55b1a638ff6c3/dataloader.py#L163
https://github.com/TY-Shi/FreeCOS/blob/b501f340f82902d7e58fb414b7a55b1a638ff6c3/Datasetloader/dataset.py#L46

====================================
https://github.com/KainingYing/CTVIS
====================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/KainingYing/CTVIS/blob/c1ed15cb11257f7f54646c23706404f95d165a5c/ctvis/data/build.py#L256

===============================
https://github.com/bo-miao/SgMg
===============================

Found 5 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                       collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                     drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers, pin_memory=True)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                           collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers,
                                   pin_memory=True)
DataLoader(
            dataset_val,
            args.batch_size,
            sampler=sampler_val,
            drop_last=False,
            collate_fn=utils.collate_fn,
            num_workers=args.num_workers,
        )
https://github.com/bo-miao/SgMg/blob/6776894326d0b4a3af6566c726124460125e5e59/main.py#L115
https://github.com/bo-miao/SgMg/blob/6776894326d0b4a3af6566c726124460125e5e59/main.py#L128
https://github.com/bo-miao/SgMg/blob/6776894326d0b4a3af6566c726124460125e5e59/main.py#L209
https://github.com/bo-miao/SgMg/blob/6776894326d0b4a3af6566c726124460125e5e59/main_pretrain.py#L133
https://github.com/bo-miao/SgMg/blob/6776894326d0b4a3af6566c726124460125e5e59/main_pretrain.py#L150

====================================
https://github.com/WangChangqi98/CSS
====================================

Found 9 times
torch.utils.data.DataLoader(train_l_dataset, 
                                                 batch_size=config['Dataset']['batch_size'],
                                                 pin_memory=True,
                                                 sampler=train_l_sampler,
                                                 num_workers=4,
                                                 drop_last=True)
torch.utils.data.DataLoader(train_u_dataset, 
                                                 batch_size=config['Dataset']['batch_size'],
                                                 pin_memory=True,
                                                 sampler=train_u_sampler,
                                                 num_workers=4,
                                                 drop_last=True)
torch.utils.data.DataLoader(test_dataset, 
                                              batch_size=config['Dataset']['batch_size'],
                                              pin_memory=True,
                                              num_workers=4)
torch.utils.data.DataLoader(train_l_dataset, 
                                                 batch_size=config['Dataset']['batch_size'],
                                                 pin_memory=True,
                                                 sampler=train_l_sampler,
                                                 num_workers=4,
                                                 drop_last=True)
torch.utils.data.DataLoader(train_u_dataset, 
                                                 batch_size=config['Dataset']['batch_size'],
                                                 pin_memory=True,
                                                 sampler=train_u_sampler,
                                                 num_workers=4,
                                                 drop_last=True)
torch.utils.data.DataLoader(test_dataset, 
                                              batch_size=config['Dataset']['batch_size'],
                                              pin_memory=True,
                                              num_workers=4)
torch.utils.data.DataLoader(train_l_dataset, 
                                                 batch_size=config['Dataset']['batch_size'],
                                                 pin_memory=True,
                                                 sampler=train_l_sampler,
                                                 num_workers=4,
                                                 drop_last=True)
torch.utils.data.DataLoader(train_u_dataset, 
                                                 batch_size=config['Dataset']['batch_size'],
                                                 pin_memory=True,
                                                 sampler=train_u_sampler,
                                                 num_workers=4,
                                                 drop_last=True)
torch.utils.data.DataLoader(test_dataset, 
                                              batch_size=config['Dataset']['batch_size'],
                                              pin_memory=True,
                                              num_workers=4)
https://github.com/WangChangqi98/CSS/blob/8aec4a874c94dfba76c5150a89882ebe055e6552/cross_label.py#L42
https://github.com/WangChangqi98/CSS/blob/8aec4a874c94dfba76c5150a89882ebe055e6552/cross_label.py#L49
https://github.com/WangChangqi98/CSS/blob/8aec4a874c94dfba76c5150a89882ebe055e6552/cross_label.py#L55
https://github.com/WangChangqi98/CSS/blob/8aec4a874c94dfba76c5150a89882ebe055e6552/mix_label.py#L43
https://github.com/WangChangqi98/CSS/blob/8aec4a874c94dfba76c5150a89882ebe055e6552/mix_label.py#L50
https://github.com/WangChangqi98/CSS/blob/8aec4a874c94dfba76c5150a89882ebe055e6552/mix_label.py#L56
https://github.com/WangChangqi98/CSS/blob/8aec4a874c94dfba76c5150a89882ebe055e6552/ori_pseudo.py#L42
https://github.com/WangChangqi98/CSS/blob/8aec4a874c94dfba76c5150a89882ebe055e6552/ori_pseudo.py#L49
https://github.com/WangChangqi98/CSS/blob/8aec4a874c94dfba76c5150a89882ebe055e6552/ori_pseudo.py#L55

=======================================
https://github.com/OpenNLPLab/MMVAE-AVS
=======================================

Found 2 times
torch.utils.data.DataLoader(train_dataset, batch_size=cfg.PARAM.BATCH_SIZE, shuffle=True,
                                                   num_workers=cfg.PARAM.NUM_WORKERS, pin_memory=False)
torch.utils.data.DataLoader(val_dataset, batch_size=1, shuffle=False,
                                                 num_workers=cfg.PARAM.NUM_WORKERS, pin_memory=False)
https://github.com/OpenNLPLab/MMVAE-AVS/blob/b7c93f8d450f2d85bcc2440270b372d3745d6300/datasets/get_loader.py#L13
https://github.com/OpenNLPLab/MMVAE-AVS/blob/b7c93f8d450f2d85bcc2440270b372d3745d6300/datasets/get_loader.py#L15

==================================
https://github.com/DLUT-yyc/Isomer
==================================

Found 3 times
data.DataLoader(dataset=test_dataset, batch_size=opt.val_batchsize, shuffle=False, num_workers=32, pin_memory=True)
data.DataLoader(dataset=dataset,
                                  sampler=sampler,
                                  batch_size=opt.train_batchsize,
                                  shuffle=False,
                                  num_workers=opt.num_workers,
                                  pin_memory=True,
                                  drop_last=True)
data.DataLoader(dataset=val_dataset, batch_size=opt.val_batchsize, shuffle=False, num_workers=opt.num_workers, pin_memory=True)
https://github.com/DLUT-yyc/Isomer/blob/f193c90d52e4baf45df6ff2f77b669b31500e7e9/tools/inference.py#L29
https://github.com/DLUT-yyc/Isomer/blob/f193c90d52e4baf45df6ff2f77b669b31500e7e9/utils/init.py#L76
https://github.com/DLUT-yyc/Isomer/blob/f193c90d52e4baf45df6ff2f77b669b31500e7e9/utils/init.py#L89

========================================
https://github.com/MischaD/fobadiffusion
========================================

Found 15 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_val_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
torch.utils.data.DataLoader(dset, batch_size=opt.batch_size, drop_last=False, shuffle=False)
torch.utils.data.DataLoader(dataset=train_dataset,
                                               batch_size=batch_size,
                                               shuffle=False,
                                               num_workers=0,
                                               pin_memory=True,
                                               sampler=train_sampler)
torch.utils.data.DataLoader(dset, shuffle=True, batch_size=batch_size, drop_last=False)
DataLoader(dataset,
                            batch_size=batch_size,
                            shuffle=False,
                            num_workers=0,#opt.num_workers,
                            collate_fn=collate_batch,
                            )
DataLoader(train_dataset,
                            batch_size=32,
                            shuffle=True,
                            num_workers=0,#opt.num_workers,
                            collate_fn=collate_batch,
                            )
DataLoader(val_dataset,
                            batch_size=32,
                            shuffle=False,
                            num_workers=0,#opt.num_workers,
                            collate_fn=collate_batch,
                            )
DataLoader(test_dataset,
                            batch_size=32,
                            shuffle=False,
                            num_workers=0,#opt.num_workers,
                            collate_fn=collate_batch,
                            )
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/main.py#L217
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/main.py#L226
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/main.py#L242
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/main.py#L250
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/scripts/logging_template.py#L36
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/scripts/mnist-distributed.py#L74
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/scripts/vqgan_codebook_visualizer.py#L244
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/scripts/compute_attention_masks_raw.py#L100
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/scripts/train_segmentation_refined.py#L442
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/scripts/train_segmentation_refined.py#L448
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/scripts/train_segmentation_refined.py#L454
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/main.py#L203
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/main.py#L212
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/main.py#L228
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/main.py#L236

=========================================
https://github.com/IDEA-Research/OpenSeeD
=========================================

Found 1 times
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
https://github.com/IDEA-Research/OpenSeeD/blob/5dc694ed55e4b71ff57ee3d98ef6ac0dfcaad847/datasets/build.py#L238

===================================
https://github.com/Zongwei97/PopNet
===================================

Found 3 times
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
data.DataLoader(dataset=dataset,
                                  batch_size=batchsize,
                                  shuffle=shuffle,
                                  num_workers=num_workers,
                                  pin_memory=pin_memory)
https://github.com/Zongwei97/PopNet/blob/5eab8e493fb8a634748cac7056e842735202078a/Code/utils/data.py#L371
https://github.com/Zongwei97/PopNet/blob/5eab8e493fb8a634748cac7056e842735202078a/Code/utils/data.py#L384
https://github.com/Zongwei97/PopNet/blob/5eab8e493fb8a634748cac7056e842735202078a/Code/utils/data.py#L395

===================================
https://github.com/CongHan0808/DeOP
===================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/CongHan0808/DeOP/blob/614454c8734f6dd82679b909f697cb241e6538be/mask_former/data/build.py#L337

=============================
https://github.com/mt-cly/FPR
=============================

Found 11 times
DataLoader(databin, shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=True)
DataLoader(databin, shuffle=False, num_workers=0, pin_memory=False)
DataLoader(trainmsf_dataset, batch_size=1, shuffle=False, num_workers=8, pin_memory=True,
                                     drop_last=True)
DataLoader(infer_dataset, shuffle=False, num_workers=0, pin_memory=False)
DataLoader(databin, shuffle=False, num_workers=0, pin_memory=False)
DataLoader(databin,
                             shuffle=False, num_workers=args.num_workers // n_gpus, pin_memory=False)
DataLoader(databin, shuffle=False, num_workers=args.num_workers, pin_memory=False)
DataLoader(val_dataset, batch_size=args.cam_batch_size,
                                 shuffle=False, num_workers=args.num_workers, pin_memory=False, drop_last=True)
DataLoader(train_dataset, batch_size=args.cam_batch_size,
                                       shuffle=True, num_workers=args.num_workers, pin_memory=False, drop_last=True)
DataLoader(train_dataset, batch_size=args.irn_batch_size,
                                   shuffle=True, num_workers=0, pin_memory=True, drop_last=True)
DataLoader(infer_dataset, batch_size=args.irn_batch_size,
                                   shuffle=False, num_workers=args.num_workers, pin_memory=True, drop_last=True)
https://github.com/mt-cly/FPR/blob/1569fe65e58a04536c6a202adbdd9e9f3308b658/get_advcam.py#L75
https://github.com/mt-cly/FPR/blob/1569fe65e58a04536c6a202adbdd9e9f3308b658/step/cam_to_ir_label.py#L17
https://github.com/mt-cly/FPR/blob/1569fe65e58a04536c6a202adbdd9e9f3308b658/step/cluster_utils.py#L46
https://github.com/mt-cly/FPR/blob/1569fe65e58a04536c6a202adbdd9e9f3308b658/step/eval_crf.py#L37
https://github.com/mt-cly/FPR/blob/1569fe65e58a04536c6a202adbdd9e9f3308b658/step/make_cam.py#L25
https://github.com/mt-cly/FPR/blob/1569fe65e58a04536c6a202adbdd9e9f3308b658/step/make_sem_seg_labels.py#L28
https://github.com/mt-cly/FPR/blob/1569fe65e58a04536c6a202adbdd9e9f3308b658/step/train_fpr.py#L208
https://github.com/mt-cly/FPR/blob/1569fe65e58a04536c6a202adbdd9e9f3308b658/step/train_fpr.py#L262
https://github.com/mt-cly/FPR/blob/1569fe65e58a04536c6a202adbdd9e9f3308b658/step/train_fpr.py#L287
https://github.com/mt-cly/FPR/blob/1569fe65e58a04536c6a202adbdd9e9f3308b658/step/train_irn.py#L28
https://github.com/mt-cly/FPR/blob/1569fe65e58a04536c6a202adbdd9e9f3308b658/step/train_irn.py#L91

=============================================================
https://github.com/LarsDoorenbos/ccdm-stochastic-segmentation
=============================================================

Found 4 times
DataLoader(
        Subset(dataset, indices),
        batch_size=loader.batch_size,
        shuffle=False
    )
DataLoader(train_dataset,
                                batch_size=batch_size,
                                drop_last=True,
                                pin_memory=True,
                                sampler=train_sampler,
                                shuffle=train_sampler is None,
                                num_workers=params["mp_loaders"],
                                worker_init_fn=worker_init_fn)
DataLoader(validation_dataset,
                                   batch_size=max(1, batch_size // params["samples"]),
                                   num_workers=params["mp_loaders"],
                                   shuffle=False,
                                   worker_init_fn=worker_init_fn)
DataLoader(validation_dataset,
                                   batch_size=batch_size,
                                   num_workers=params["mp_loaders"],
                                   shuffle=False,
                                   worker_init_fn=worker_init_fn)
https://github.com/LarsDoorenbos/ccdm-stochastic-segmentation/blob/ceb781d14f6ecad5b18c9e4878151b771bf3eb53/ddpm/trainer.py#L68
https://github.com/LarsDoorenbos/ccdm-stochastic-segmentation/blob/ceb781d14f6ecad5b18c9e4878151b771bf3eb53/ddpm/trainer.py#L662
https://github.com/LarsDoorenbos/ccdm-stochastic-segmentation/blob/ceb781d14f6ecad5b18c9e4878151b771bf3eb53/ddpm/trainer.py#L671
https://github.com/LarsDoorenbos/ccdm-stochastic-segmentation/blob/ceb781d14f6ecad5b18c9e4878151b771bf3eb53/evaluation/eval_cdm.py#L66

=====================================
https://github.com/baaivision/Painter
=====================================

Found 14 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False,
        )
DataLoader(dataset_val, batch_size=1, sampler=sampler_val,
                                 drop_last=False, collate_fn=ddp_utils.collate_fn, num_workers=2)
DataLoader(dataset_val, batch_size=1, sampler=sampler_val,
                                 drop_last=False, collate_fn=ddp_utils.collate_fn, num_workers=2)
DataLoader(dataset_val, batch_size=1, sampler=sampler_val,
                                 drop_last=False, collate_fn=ddp_utils.collate_fn, num_workers=2)
DataLoader(dataset_val, batch_size=1, sampler=sampler_val,
                                 drop_last=False, collate_fn=ddp_utils.collate_fn, num_workers=2)
DataLoader(dataset_val, batch_size=1, sampler=sampler_val,
                                 drop_last=False, collate_fn=ddp_utils.collate_fn, num_workers=2)
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/main_train.py#L293
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/main_train.py#L301
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/data/mmpose_custom/painter_inference_pose.py#L128
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/eval/ade20k_semantic/painter_inference_segm.py#L127
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/eval/coco_panoptic/painter_inference_pano_inst.py#L124
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/eval/coco_panoptic/painter_inference_pano_semseg.py#L126
https://github.com/baaivision/Painter/blob/7ac5aefe28e711f7daef495bb07aa1605ad4addc/Painter/eval/mmpose_custom/painter_inference_pose.py#L128

====================================
https://github.com/Carlisle-Liu/ASLP
====================================

Found 1 times
data.DataLoader(dataset = dataset,
                                  batch_size = batchsize,
                                  shuffle = shuffle,
                                  num_workers = num_workers,
                                  pin_memory = pin_memory)
https://github.com/Carlisle-Liu/ASLP/blob/34dac6965bb1a6112ff8b7a5e07c08d6bffc8dd9/data.py#L107

=====================================
https://github.com/weijiawu/DiffuMask
=====================================

Found 3 times
DataLoader(infer_dataset, shuffle=False, num_workers=args.num_workers, pin_memory=True)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.num_workers,
                                   pin_memory=True, drop_last=True)
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_prepro_workers,
        pin_memory=True,
        prefetch_factor=2,
        collate_fn=collate_fn if input_format == "files" else None,
    )
https://github.com/weijiawu/DiffuMask/blob/913d2327deffb0e927ef2cc6c343700a2e2096a6/infer_aff.py#L106
https://github.com/weijiawu/DiffuMask/blob/913d2327deffb0e927ef2cc6c343700a2e2096a6/train_aff.py#L65
https://github.com/weijiawu/DiffuMask/blob/913d2327deffb0e927ef2cc6c343700a2e2096a6/clip_retrieval/clip_inference/reader.py#L176

=============================================================
https://github.com/AI-Application-and-Integration-Lab/CL4WSIS
=============================================================

Found 3 times
data.DataLoader(train_dst, batch_size=opts.batch_size,
                                   sampler=DistributedSampler(train_dst, num_replicas=world_size, rank=rank),
                                   num_workers=opts.num_workers, drop_last=True)
data.DataLoader(val_dst, batch_size=1, shuffle=False,
                                 #sampler=DistributedSampler(val_dst, num_replicas=world_size, rank=rank),
                                 num_workers=opts.num_workers)
data.DataLoader(test_dst, batch_size=1, shuffle=False,
                                    #sampler=DistributedSampler(test_dst, num_replicas=world_size, rank=rank),
                                    num_workers=opts.num_workers)
https://github.com/AI-Application-and-Integration-Lab/CL4WSIS/blob/985429c56333a7a4241fe14d58600f718a8d65fd/run.py#L72
https://github.com/AI-Application-and-Integration-Lab/CL4WSIS/blob/985429c56333a7a4241fe14d58600f718a8d65fd/run.py#L75
https://github.com/AI-Application-and-Integration-Lab/CL4WSIS/blob/985429c56333a7a4241fe14d58600f718a8d65fd/run.py#L164

=====================================
https://github.com/zhang-tao-whu/DVIS
=====================================

Found 2 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/zhang-tao-whu/DVIS/blob/72d49f6370aab43a9a98220c68033ba4b72f862f/dvis/data_video/build.py#L247
https://github.com/zhang-tao-whu/DVIS/blob/72d49f6370aab43a9a98220c68033ba4b72f862f/mask2former_video/data_video/build.py#L244

=========================================
https://github.com/LiamLian0727/WaterMask
=========================================

Found 21 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/mmdet/datasets/builder.py#L195
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_data/test_datasets/test_common.py#L224
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L76
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L88
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L99
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L111
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L115
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L133
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L135
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L155
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L157
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L177
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L197
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L216
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_runtime/test_eval_hook.py#L236
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_utils/test_hook.py#L92
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_utils/test_hook.py#L190
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_utils/test_hook.py#L246
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_utils/test_hook.py#L268
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_utils/test_hook.py#L310
https://github.com/LiamLian0727/WaterMask/blob/afa0aad4ee0adf03cc4bb3796f5320bb84dd9e2b/tests/test_utils/test_hook.py#L347

=========================================================
https://github.com/hkchengrex/Tracking-Anything-with-DEVA
=========================================================

Found 11 times
DataLoader(video_reader, batch_size=None, collate_fn=no_collate, num_workers=8)
DataLoader(video_reader, batch_size=None, collate_fn=no_collate, num_workers=8)
DataLoader(dataset,
                                  config['batch_size'],
                                  sampler=train_sampler,
                                  num_workers=config['num_workers'],
                                  worker_init_fn=worker_init_fn,
                                  drop_last=True)
DataLoader(vid_reader, batch_size=1, shuffle=False, num_workers=2)
DataLoader(vid_reader, batch_size=1, shuffle=False, num_workers=2)
DataLoader(vid_reader, batch_size=1, shuffle=False, num_workers=2)
DataLoader(vid_reader, batch_size=1, shuffle=False, num_workers=2)
DataLoader(vid_reader, batch_size=1, shuffle=False, num_workers=2)
DataLoader(vid_reader, batch_size=1, shuffle=False, num_workers=2)
DataLoader(vid_reader, batch_size=1, shuffle=False, num_workers=2)
DataLoader(vid_reader, batch_size=1, shuffle=False, num_workers=2)
https://github.com/hkchengrex/Tracking-Anything-with-DEVA/blob/9606b3bad8645439b39ec89c5c3be4138243ba27/demo/demo_automatic.py#L44
https://github.com/hkchengrex/Tracking-Anything-with-DEVA/blob/9606b3bad8645439b39ec89c5c3be4138243ba27/demo/demo_with_text.py#L44
https://github.com/hkchengrex/Tracking-Anything-with-DEVA/blob/9606b3bad8645439b39ec89c5c3be4138243ba27/deva/train.py#L122
https://github.com/hkchengrex/Tracking-Anything-with-DEVA/blob/9606b3bad8645439b39ec89c5c3be4138243ba27/evaluation/eval_ref_davis.py#L51
https://github.com/hkchengrex/Tracking-Anything-with-DEVA/blob/9606b3bad8645439b39ec89c5c3be4138243ba27/evaluation/eval_ref_davis.py#L102
https://github.com/hkchengrex/Tracking-Anything-with-DEVA/blob/9606b3bad8645439b39ec89c5c3be4138243ba27/evaluation/eval_ref_youtubevos.py#L63
https://github.com/hkchengrex/Tracking-Anything-with-DEVA/blob/9606b3bad8645439b39ec89c5c3be4138243ba27/evaluation/eval_ref_youtubevos.py#L117
https://github.com/hkchengrex/Tracking-Anything-with-DEVA/blob/9606b3bad8645439b39ec89c5c3be4138243ba27/evaluation/eval_saliency.py#L55
https://github.com/hkchengrex/Tracking-Anything-with-DEVA/blob/9606b3bad8645439b39ec89c5c3be4138243ba27/evaluation/eval_saliency.py#L98
https://github.com/hkchengrex/Tracking-Anything-with-DEVA/blob/9606b3bad8645439b39ec89c5c3be4138243ba27/evaluation/eval_vos.py#L119
https://github.com/hkchengrex/Tracking-Anything-with-DEVA/blob/9606b3bad8645439b39ec89c5c3be4138243ba27/evaluation/eval_with_detections.py#L131

============================================
https://github.com/jspenmar/slowtv_monodepth
============================================

Found 9 times
DataLoader(ds, batch_size=12, num_workers=8, collate_fn=ds.collate_fn, pin_memory=True)
DataLoader(ds, batch_size=16, num_workers=8, collate_fn=ds.collate_fn, pin_memory=True)
DataLoader(self.training_samples, args.batch_size,
                                   shuffle=(self.train_sampler is None),
                                   num_workers=args.num_threads,
                                   pin_memory=True,
                                   sampler=self.train_sampler)
DataLoader(self.testing_samples, 1,
                                   shuffle=False,
                                   num_workers=1,
                                   pin_memory=True,
                                   sampler=self.eval_sampler)
DataLoader(self.testing_samples, 1, shuffle=False, num_workers=1)
DataLoader(self.training_samples, args.batch_size,
                                   shuffle=(self.train_sampler is None),
                                   num_workers=args.num_threads,
                                   pin_memory=True,
                                   sampler=self.train_sampler)
DataLoader(self.testing_samples, 1,
                                   shuffle=False,
                                   num_workers=1,
                                   pin_memory=True,
                                   sampler=self.eval_sampler)
DataLoader(self.testing_samples, 1, shuffle=False, num_workers=1)
DataLoader(d, sampler=s, **cfg)
https://github.com/jspenmar/slowtv_monodepth/blob/70fb69dfeaed1d9d3c346abd8a76e9fb9030cd55/api/eval/export_preds.py#L69
https://github.com/jspenmar/slowtv_monodepth/blob/70fb69dfeaed1d9d3c346abd8a76e9fb9030cd55/api/mapfree/generate_preds.py#L56
https://github.com/jspenmar/slowtv_monodepth/blob/70fb69dfeaed1d9d3c346abd8a76e9fb9030cd55/src/external_libs/newcrfs/newcrfs/dataloaders/dataloader.py#L37
https://github.com/jspenmar/slowtv_monodepth/blob/70fb69dfeaed1d9d3c346abd8a76e9fb9030cd55/src/external_libs/newcrfs/newcrfs/dataloaders/dataloader.py#L50
https://github.com/jspenmar/slowtv_monodepth/blob/70fb69dfeaed1d9d3c346abd8a76e9fb9030cd55/src/external_libs/newcrfs/newcrfs/dataloaders/dataloader.py#L58
https://github.com/jspenmar/slowtv_monodepth/blob/70fb69dfeaed1d9d3c346abd8a76e9fb9030cd55/src/external_libs/newcrfs/newcrfs/dataloaders/dataloader_kittipred.py#L37
https://github.com/jspenmar/slowtv_monodepth/blob/70fb69dfeaed1d9d3c346abd8a76e9fb9030cd55/src/external_libs/newcrfs/newcrfs/dataloaders/dataloader_kittipred.py#L50
https://github.com/jspenmar/slowtv_monodepth/blob/70fb69dfeaed1d9d3c346abd8a76e9fb9030cd55/src/external_libs/newcrfs/newcrfs/dataloaders/dataloader_kittipred.py#L58
https://github.com/jspenmar/slowtv_monodepth/blob/70fb69dfeaed1d9d3c346abd8a76e9fb9030cd55/src/tools/parsers.py#L201

=======================================
https://github.com/CityU-AIM-Group/SOMA
=======================================

Found 6 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                       collate_fn=DAOD.collate_fn, num_workers=cfg.NUM_WORKERS,
                                       pin_memory=True)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                       collate_fn=utils.collate_fn, num_workers=cfg.NUM_WORKERS,
                                       pin_memory=True)
DataLoader(dataset_val, cfg.TRAIN.BATCH_SIZE, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=cfg.NUM_WORKERS,
                                 pin_memory=True)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                       collate_fn=DAOD.collate_fn, num_workers=cfg.NUM_WORKERS,
                                       pin_memory=True)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                       collate_fn=utils.collate_fn, num_workers=cfg.NUM_WORKERS,
                                       pin_memory=True)
DataLoader(dataset_val_list[i], cfg.TRAIN.BATCH_SIZE, sampler=sampler_val_list[i],
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=cfg.NUM_WORKERS,
                                 pin_memory=True)
https://github.com/CityU-AIM-Group/SOMA/blob/e74e287c0ab2078733930910c3a8753302dc015e/main.py#L103
https://github.com/CityU-AIM-Group/SOMA/blob/e74e287c0ab2078733930910c3a8753302dc015e/main.py#L109
https://github.com/CityU-AIM-Group/SOMA/blob/e74e287c0ab2078733930910c3a8753302dc015e/main.py#L112
https://github.com/CityU-AIM-Group/SOMA/blob/e74e287c0ab2078733930910c3a8753302dc015e/main_multi_eval.py#L130
https://github.com/CityU-AIM-Group/SOMA/blob/e74e287c0ab2078733930910c3a8753302dc015e/main_multi_eval.py#L136
https://github.com/CityU-AIM-Group/SOMA/blob/e74e287c0ab2078733930910c3a8753302dc015e/main_multi_eval.py#L143

===================================
https://github.com/FutureXiang/ddae
===================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=1,
    )
https://github.com/FutureXiang/ddae/blob/8eaba2b1f872eb9a2cd3b1e6f70851f32cbd9304/utils.py#L52

=========================================
https://github.com/jellyheadandrew/CHORUS
=========================================

Found 28 times
torch.utils.data.DataLoader(
        dataset,
        sampler=(TrainingSampler if training else InferenceSampler)(len(dataset)),
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
    )
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
            prefetch_factor=prefetch_factor,
            persistent_workers=persistent_workers,
            pin_memory=pin_memory,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=drop_last,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
            prefetch_factor=prefetch_factor,
            persistent_workers=persistent_workers,
            pin_memory=pin_memory,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
torch.utils.data.DataLoader(
        dataset,  # pyre-ignore[6]
        batch_size=dataset_cfg.IMAGE_LOADER.BATCH_SIZE,
        sampler=training_sampler,
        num_workers=dataset_cfg.IMAGE_LOADER.NUM_WORKERS,
        collate_fn=trivial_batch_collator,
        worker_init_fn=worker_init_reset_seed,
    )
data.DataLoader(dataset, num_workers=0, collate_fn=operator.itemgetter(0))
data.DataLoader(
            dataset,
            num_workers=2,
            collate_fn=operator.itemgetter(0),
            worker_init_fn=worker_init_reset_seed,
            # reset seed should not affect behavior of TrainingSampler
        )
DataLoader(dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
DataLoader(dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=pin_memory,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        drop_last=drop_last,
        **kwargs)
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(
        ExampleDataset(),
        batch_size=1,
        sampler=None,
        num_workers=0,
        shuffle=False)
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/detectron2_repo/configs/Misc/torchvision_imagenet_R_50.py#L41
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/detectron2_repo/detectron2/data/build.py#L339
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/detectron2_repo/detectron2/data/build.py#L353
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/detectron2_repo/detectron2/data/build.py#L646
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/detectron2_repo/projects/DensePose/densepose/data/build.py#L661
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/detectron2_repo/tests/data/test_sampler.py#L47
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/detectron2_repo/tests/data/test_sampler.py#L52
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/frankmocap/detectors/body_pose_estimator/train.py#L39
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/frankmocap/detectors/body_pose_estimator/lightweight-human-pose-estimation.pytorch/train.py#L39
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/ldm/main.py#L203
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/ldm/main.py#L212
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/ldm/main.py#L228
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/ldm/main.py#L236
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/mmpose/datasets/builder.py#L142
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L76
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L88
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L99
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L111
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L115
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L134
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L136
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L157
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L159
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L180
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L200
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L220
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_eval_hook.py#L241
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/mmpose/tests/test_backward_compatibility/test_eval_hook_compatibility.py#L31

=============================================
https://github.com/alibaba-damo-academy/alice
=============================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu,flatten=True),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/alibaba-damo-academy/alice/blob/46d5e3c064a2d0caf6de2cccfb0882b7756021db/sam/datasets/builder.py#L181

==================================
https://github.com/nukezil/IOMatch
==================================

Found 4 times
DataLoader(dataset=self.dataset_dict['train_ulb'],
                            batch_size=self.args.eval_batch_size,
                            drop_last=False,
                            shuffle=False,
                            num_workers=4)
DataLoader(dset, batch_size=batch_size, shuffle=shuffle, collate_fn=collect_fn,
                          num_workers=num_workers, drop_last=drop_last, pin_memory=pin_memory)
DataLoader(dset, batch_size=batch_size, shuffle=False, num_workers=num_workers, collate_fn=collect_fn,
                          pin_memory=pin_memory, sampler=data_sampler(dset, num_replicas=num_replicas, rank=rank, num_samples=num_samples),
                          generator=generator, drop_last=drop_last)
DataLoader(dset, batch_size=batch_size, shuffle=False, num_workers=num_workers,
                          collate_fn=collect_fn, pin_memory=pin_memory, sampler=data_sampler,
                          generator=generator, drop_last=drop_last)
https://github.com/nukezil/IOMatch/blob/e7999f18a9855510de9dafa1d4c4a4c45499a491/semilearn/algorithms/openmatch/openmatch.py#L237
https://github.com/nukezil/IOMatch/blob/e7999f18a9855510de9dafa1d4c4a4c45499a491/semilearn/core/utils/build.py#L136
https://github.com/nukezil/IOMatch/blob/e7999f18a9855510de9dafa1d4c4a4c45499a491/semilearn/core/utils/build.py#L153
https://github.com/nukezil/IOMatch/blob/e7999f18a9855510de9dafa1d4c4a4c45499a491/semilearn/core/utils/build.py#L158

==================================
https://github.com/GuanGui-nju/SAA
==================================

Found 2 times
DataLoader(dset, batch_size=batch_size, shuffle=shuffle, 
                          num_workers=num_workers, pin_memory=pin_memory)
DataLoader(dset, batch_sampler=batch_sampler, 
                          num_workers=num_workers, pin_memory=pin_memory)
https://github.com/GuanGui-nju/SAA/blob/e044aa64e42d2dc1c3e10dbb16115e92b4dfef13/datasets/data_utils.py#L104
https://github.com/GuanGui-nju/SAA/blob/e044aa64e42d2dc1c3e10dbb16115e92b4dfef13/datasets/data_utils.py#L138

=================================================
https://github.com/eyalgomel/box-based-refinement
=================================================

Found 29 times
DataLoader(
        test_dataset,
        batch_size=config['batch_size'],
        num_workers=4,
        pin_memory=True,
        drop_last=False,
        shuffle=False,
    )
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
torch.utils.data.DataLoader(
        dataset_val,
        sampler=sampler_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset_val,
        sampler=sampler_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset_val,
        sampler=sampler_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        testset,
        batch_size=cfg.batch_size,
        num_workers=cfg.num_workers,
        shuffle=False,
        drop_last=False,
        pin_memory=True,
        **loader_args,
    )
torch.utils.data.DataLoader(
        testset,
        batch_size=cfg.training.batch_size,
        num_workers=cfg.training.num_workers,
        shuffle=False,
        drop_last=False,
        pin_memory=True,
        collate_fn=testset.collate_fn_test,
    )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=cfg.training.batch_size,
            num_workers=cfg.training.num_workers,
            drop_last=True,
            pin_memory=True,
            sampler=sampler,
            collate_fn=train_dataset.collate_fn_train,
        )
torch.utils.data.DataLoader(
        testset,
        batch_size=cfg.training.batch_size,
        num_workers=cfg.training.num_workers,
        shuffle=False,
        drop_last=False,
        pin_memory=True,
        collate_fn=testset.collate_fn_test if collate_test else testset.collate_fn_train,
    )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=cfg.training.batch_size,
            num_workers=cfg.training.num_workers,
            drop_last=True,
            pin_memory=True,
            sampler=sampler,
            collate_fn=train_dataset.collate_fn_train,
        )
torch.utils.data.DataLoader(
        testset,
        batch_size=cfg.training.batch_size,
        num_workers=cfg.training.num_workers,
        shuffle=False,
        drop_last=False,
        pin_memory=True,
        collate_fn=testset.collate_fn_test,
    )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=cfg.training.batch_size,
            num_workers=cfg.training.num_workers,
            drop_last=True,
            pin_memory=True,
            sampler=sampler,
            collate_fn=train_dataset.collate_fn_train,
        )
torch.utils.data.DataLoader(
        testset,
        batch_size=1,
        num_workers=cfg.training.num_workers,
        shuffle=False,
        drop_last=False,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=cfg.training.batch_size,
            num_workers=cfg.training.num_workers,
            drop_last=True,
            pin_memory=True,
            sampler=sampler,
        )
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
torch.utils.data.DataLoader(tempdataset, batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers, drop_last=False,
        sampler=torch.utils.data.DistributedSampler(tempdataset, shuffle=False))
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=1,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_query,
        batch_size=1,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
                dataset, batch_size=n_imgs, shuffle=True, num_workers=2
            )
DataLoader(imgset, batch_size=args.bs, drop_last=False, shuffle=False)
torch.utils.data.DataLoader(
        dataset_train,
        batch_size=args.batch_size,
        shuffle=True,
        pin_memory=args.pin_mem,
        num_workers=args.num_workers,
        drop_last=True,
    )
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/BLIP/eval_retrieval_video.py#L201
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/BLIP/data/__init__.py#L89
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/TokenCut/weakly_supvervised_detection/eval.py#L69
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/TokenCut/weakly_supvervised_detection/finetune.py#L96
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/TokenCut/weakly_supvervised_detection/finetune.py#L112
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/TokenCut/weakly_supvervised_detection/main.py#L108
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/TokenCut/weakly_supvervised_detection/main.py#L115
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/bbr/inference/run_inference.py#L560
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/bbr/train/od_lost.py#L99
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/bbr/train/od_lost.py#L314
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/bbr/train/od_move.py#L119
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/bbr/train/od_move.py#L321
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/bbr/train/od_tokencut.py#L101
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/bbr/train/od_tokencut.py#L319
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/bbr/train/wsg.py#L103
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/bbr/train/wsg.py#L345
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/detr/main.py#L155
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/detr/main.py#L157
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/dino/eval_copy_detection.py#L160
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/dino/eval_image_retrieval.py#L113
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/dino/eval_image_retrieval.py#L121
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/dino/eval_knn.py#L41
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/dino/eval_knn.py#L49
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/dino/eval_linear.py#L72
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/dino/eval_linear.py#L93
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/dino/main_dino.py#L147
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/moveseg/callbacks.py#L83
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/moveseg/infer.py#L84
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/moveseg/train.py#L55

=====================================
https://github.com/OpenGVLab/PonderV2
=====================================

Found 4 times
torch.utils.data.DataLoader(
                    dataset,
                    batch_size=batch_size_per_gpu,
                    shuffle=(sampler is None),
                    num_workers=num_worker_per_gpu,
                    sampler=sampler,
                    collate_fn=partial(
                        point_collate_fn, mix_prob=mix_prob, max_point=max_point
                    ),
                    pin_memory=True,
                    worker_init_fn=init_fn,
                    drop_last=True,
                    persistent_workers=True,
                )
torch.utils.data.DataLoader(
            test_dataset,
            batch_size=self.cfg.batch_size_test_per_gpu,
            shuffle=False,
            num_workers=self.cfg.batch_size_test_per_gpu,
            pin_memory=True,
            sampler=test_sampler,
            collate_fn=self.__class__.collate_fn,
        )
torch.utils.data.DataLoader(
            train_data,
            batch_size=self.cfg.batch_size_per_gpu,
            shuffle=(train_sampler is None),
            num_workers=self.cfg.num_worker_per_gpu,
            sampler=train_sampler,
            collate_fn=partial(
                point_collate_fn,
                mix_prob=self.cfg.mix_prob,
                max_point=self.cfg.get("max_point", -1),
            ),
            pin_memory=True,
            worker_init_fn=init_fn,
            drop_last=True,
            persistent_workers=True,
        )
torch.utils.data.DataLoader(
                val_data,
                batch_size=self.cfg.batch_size_val_per_gpu,
                shuffle=False,
                num_workers=self.cfg.num_worker_per_gpu,
                pin_memory=True,
                sampler=val_sampler,
                collate_fn=collate_fn,
            )
https://github.com/OpenGVLab/PonderV2/blob/6576cc16090599177bb6c04e9f815fe41e41829b/ponder/datasets/dataloader.py#L69
https://github.com/OpenGVLab/PonderV2/blob/6576cc16090599177bb6c04e9f815fe41e41829b/ponder/engines/test.py#L96
https://github.com/OpenGVLab/PonderV2/blob/6576cc16090599177bb6c04e9f815fe41e41829b/ponder/engines/train.py#L243
https://github.com/OpenGVLab/PonderV2/blob/6576cc16090599177bb6c04e9f815fe41e41829b/ponder/engines/train.py#L269

==============================
https://github.com/skyoux/scfs
==============================

Found 5 times
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=False,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=False,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
https://github.com/skyoux/scfs/blob/7bb7c37cbc409fd3c9893a08b153181cf2536e50/eval_knn.py#L39
https://github.com/skyoux/scfs/blob/7bb7c37cbc409fd3c9893a08b153181cf2536e50/eval_knn.py#L47
https://github.com/skyoux/scfs/blob/7bb7c37cbc409fd3c9893a08b153181cf2536e50/eval_linear.py#L128
https://github.com/skyoux/scfs/blob/7bb7c37cbc409fd3c9893a08b153181cf2536e50/eval_linear.py#L155
https://github.com/skyoux/scfs/blob/7bb7c37cbc409fd3c9893a08b153181cf2536e50/main_scfs.py#L201

=======================================
https://github.com/NJUyued/PRG4SSL-MNAR
=======================================

Found 9 times
DataLoader(dset, batch_size=batch_size, shuffle=shuffle, 
                          num_workers=num_workers, pin_memory=pin_memory)
DataLoader(dset, batch_sampler=batch_sampler, 
                          num_workers=num_workers, pin_memory=False)
torch.utils.data.DataLoader(
        ds_x,
        batch_sampler=batch_sampler_x,
        num_workers=num_workers,
        pin_memory=True,
        worker_init_fn=worker_init_fn
    )
torch.utils.data.DataLoader(
        ds_u,
        batch_sampler=batch_sampler_u,
        num_workers=num_workers,
        pin_memory=True,
        worker_init_fn=worker_init_fn
    )
torch.utils.data.DataLoader(
        ds_u,
        batch_sampler=batch_sampler_u_eval,
        num_workers=num_workers,
        pin_memory=True,
        worker_init_fn=worker_init_fn
    )
torch.utils.data.DataLoader(
        ds,
        shuffle=False,
        batch_size=batch_size,
        drop_last=False,
        num_workers=num_workers,
        pin_memory=True,
        worker_init_fn=worker_init_fn
    )
torch.utils.data.DataLoader(
        ds,
        shuffle=False,
        batch_size=batch_size,
        drop_last=False,
        num_workers=num_workers,
        pin_memory=pin_memory,
        worker_init_fn = worker_init_fn,
    )
torch.utils.data.DataLoader(
        ds_x,
        batch_sampler=batch_sampler_x,
        num_workers=num_workers,
        pin_memory=True,
        worker_init_fn=worker_init_fn,
    )
torch.utils.data.DataLoader(
        ds_u,
        batch_sampler=batch_sampler_u,
        num_workers=num_workers,
        pin_memory=True,
        worker_init_fn = worker_init_fn,
    )
https://github.com/NJUyued/PRG4SSL-MNAR/blob/888a3cb25b6a77cc766295af54332c1d259808e7/datasets/data_utils.py#L256
https://github.com/NJUyued/PRG4SSL-MNAR/blob/888a3cb25b6a77cc766295af54332c1d259808e7/datasets/data_utils.py#L289
https://github.com/NJUyued/PRG4SSL-MNAR/blob/888a3cb25b6a77cc766295af54332c1d259808e7/datasets_mini/miniimage.py#L264
https://github.com/NJUyued/PRG4SSL-MNAR/blob/888a3cb25b6a77cc766295af54332c1d259808e7/datasets_mini/miniimage.py#L282
https://github.com/NJUyued/PRG4SSL-MNAR/blob/888a3cb25b6a77cc766295af54332c1d259808e7/datasets_mini/miniimage.py#L289
https://github.com/NJUyued/PRG4SSL-MNAR/blob/888a3cb25b6a77cc766295af54332c1d259808e7/datasets_mini/miniimage.py#L303
https://github.com/NJUyued/PRG4SSL-MNAR/blob/888a3cb25b6a77cc766295af54332c1d259808e7/datasets_mini/stl10.py#L104
https://github.com/NJUyued/PRG4SSL-MNAR/blob/888a3cb25b6a77cc766295af54332c1d259808e7/datasets_mini/stl10.py#L135
https://github.com/NJUyued/PRG4SSL-MNAR/blob/888a3cb25b6a77cc766295af54332c1d259808e7/datasets_mini/stl10.py#L151

========================================
https://github.com/LiheYoung/ShrinkMatch
========================================

Found 8 times
torch.utils.data.DataLoader(test_dataset, batch_size=batch_size, num_workers=4, pin_memory=True, sampler=test_sampler)
torch.utils.data.DataLoader(
        ds_x,
        sampler=sampler_x,
        batch_size=batch_size,
        num_workers=8,
        pin_memory=True,
        drop_last=True
    )
torch.utils.data.DataLoader(
        ds_u,
        sampler=sampler_u,
        batch_size=mu*batch_size,
        num_workers=8,
        pin_memory=True,
        drop_last=True
    )
DataLoader(
        train_dataset_x,
        sampler=train_sampler(train_dataset_x),
        batch_size=args.batch_size,
        num_workers=args.workers, pin_memory=True, drop_last=True)
DataLoader(
        train_dataset_u,
        sampler=train_sampler(train_dataset_u),
        batch_size=args.batch_size * args.mu,
        num_workers=args.workers, pin_memory=True, drop_last=True)
DataLoader(
        val_dataset,
        sampler=train_sampler(val_dataset),
        batch_size=64, shuffle=False,
        num_workers=args.workers, pin_memory=True)
DataLoader(dset, batch_size=batch_size, shuffle=shuffle,
                          num_workers=num_workers, pin_memory=pin_memory)
DataLoader(dset, batch_sampler=batch_sampler,
                          num_workers=num_workers, pin_memory=pin_memory)
https://github.com/LiheYoung/ShrinkMatch/blob/c4339b8109fcfe64b188edfca5180d2743c4bd0f/CIFAR/shrinkmatch.py#L266
https://github.com/LiheYoung/ShrinkMatch/blob/c4339b8109fcfe64b188edfca5180d2743c4bd0f/CIFAR/dataset/semi_data.py#L168
https://github.com/LiheYoung/ShrinkMatch/blob/c4339b8109fcfe64b188edfca5180d2743c4bd0f/CIFAR/dataset/semi_data.py#L183
https://github.com/LiheYoung/ShrinkMatch/blob/c4339b8109fcfe64b188edfca5180d2743c4bd0f/ImageNet/shrinkmatch.py#L202
https://github.com/LiheYoung/ShrinkMatch/blob/c4339b8109fcfe64b188edfca5180d2743c4bd0f/ImageNet/shrinkmatch.py#L208
https://github.com/LiheYoung/ShrinkMatch/blob/c4339b8109fcfe64b188edfca5180d2743c4bd0f/ImageNet/shrinkmatch.py#L214
https://github.com/LiheYoung/ShrinkMatch/blob/c4339b8109fcfe64b188edfca5180d2743c4bd0f/STL10-SVHN/datasets/data_utils.py#L116
https://github.com/LiheYoung/ShrinkMatch/blob/c4339b8109fcfe64b188edfca5180d2743c4bd0f/STL10-SVHN/datasets/data_utils.py#L149

=================================
https://github.com/zxcqlf/GasMono
=================================

Found 3 times
DataLoader(dataset, 64, shuffle=False, num_workers=opt.num_workers,
                                pin_memory=True, drop_last=False)
DataLoader(
            train_dataset, self.opt.batch_size, True,
            num_workers=self.opt.num_workers, pin_memory=True, drop_last=True)
DataLoader(
            val_dataset, self.opt.batch_size, True,
            num_workers=self.opt.num_workers, pin_memory=True, drop_last=True)
https://github.com/zxcqlf/GasMono/blob/8a4c1edecc8ca7a13a1e721c8f4bcd076891f150/evaluate_nyu.py#L86
https://github.com/zxcqlf/GasMono/blob/8a4c1edecc8ca7a13a1e721c8f4bcd076891f150/trainer.py#L145
https://github.com/zxcqlf/GasMono/blob/8a4c1edecc8ca7a13a1e721c8f4bcd076891f150/trainer.py#L151

=======================================
https://github.com/yunyikristy/DualMind
=======================================

Found 1 times
DataLoader(
            self.train_dataset,
            shuffle=True,
            pin_memory=True,
            batch_size=self.hparams.batch_size,
            num_workers=self.hparams.num_workers,
            # persistent_workers=True,
        )
https://github.com/yunyikristy/DualMind/blob/27879cf48c3b961d87228bf33feed447bbdc83aa/src/datamodules/multi_domains_datamodules.py#L419

============================================================
https://github.com/MitchellKT/Enhanced-Meta-Label-Correction
============================================================

Found 8 times
DataLoader(train_data_gold, batch_size=eff_batch_size, drop_last=True,
                                                num_workers=args.prefetch, pin_memory=True, sampler=gold_sampler)
DataLoader(train_data_silver, batch_size=eff_batch_size, drop_last=True,
                                    num_workers=args.prefetch, pin_memory=True, sampler=silver_sampler)
DataLoader(valid_data, batch_size=test_batch_size, shuffle=(val_sampler is None),
                            num_workers=args.prefetch, pin_memory=True, sampler=val_sampler)
DataLoader(test_data, batch_size=test_batch_size, shuffle=(test_sampler is None),
                            num_workers=args.prefetch, pin_memory=True, sampler=test_sampler)
DataLoader(train_data_gold, batch_size=eff_batch_size, drop_last=True,
                                                num_workers=args.prefetch, pin_memory=True, sampler=gold_sampler)
DataLoader(train_data_silver, batch_size=eff_batch_size, drop_last=True,
                                    num_workers=args.prefetch, pin_memory=True, sampler=silver_sampler)
DataLoader(val_data, batch_size=test_batch_size, shuffle=(val_sampler is None),
                            num_workers=args.prefetch, pin_memory=True, sampler=val_sampler)
DataLoader(test_data, batch_size=test_batch_size, shuffle=(test_sampler is None),
                            num_workers=args.prefetch, pin_memory=True, sampler=test_sampler)
https://github.com/MitchellKT/Enhanced-Meta-Label-Correction/blob/4ef6fe0b1b821125d03d63edf5ab05f4e9c5c889/CIFAR/data_helper_cifar.py#L72
https://github.com/MitchellKT/Enhanced-Meta-Label-Correction/blob/4ef6fe0b1b821125d03d63edf5ab05f4e9c5c889/CIFAR/data_helper_cifar.py#L75
https://github.com/MitchellKT/Enhanced-Meta-Label-Correction/blob/4ef6fe0b1b821125d03d63edf5ab05f4e9c5c889/CIFAR/data_helper_cifar.py#L78
https://github.com/MitchellKT/Enhanced-Meta-Label-Correction/blob/4ef6fe0b1b821125d03d63edf5ab05f4e9c5c889/CIFAR/data_helper_cifar.py#L81
https://github.com/MitchellKT/Enhanced-Meta-Label-Correction/blob/4ef6fe0b1b821125d03d63edf5ab05f4e9c5c889/CLOTHING1M/data_helper_clothing1m.py#L50
https://github.com/MitchellKT/Enhanced-Meta-Label-Correction/blob/4ef6fe0b1b821125d03d63edf5ab05f4e9c5c889/CLOTHING1M/data_helper_clothing1m.py#L53
https://github.com/MitchellKT/Enhanced-Meta-Label-Correction/blob/4ef6fe0b1b821125d03d63edf5ab05f4e9c5c889/CLOTHING1M/data_helper_clothing1m.py#L56
https://github.com/MitchellKT/Enhanced-Meta-Label-Correction/blob/4ef6fe0b1b821125d03d63edf5ab05f4e9c5c889/CLOTHING1M/data_helper_clothing1m.py#L59

===============================
https://github.com/RashLog/PUTM
===============================

Found 4 times
DataLoader(trainset, batch_size=128, shuffle=False, pin_memory=True)
DataLoader(dataset, batch_size=8, num_workers=2, pin_memory=False)
DataLoader(sets, batch_sampler=sampler,
                            num_workers=args.num_workers, pin_memory=pin_memory)
DataLoader(sets, batch_size=args.batch_size_loader, shuffle=shuffle,
                            num_workers=args.num_workers, pin_memory=pin_memory)
https://github.com/RashLog/PUTM/blob/c23bd9d82b6bb4ace05b4cf3a5b8dcd96a19774f/extract_train_mean.py#L108
https://github.com/RashLog/PUTM/blob/c23bd9d82b6bb4ace05b4cf3a5b8dcd96a19774f/iterative_graph_functions.py#L318
https://github.com/RashLog/PUTM/blob/c23bd9d82b6bb4ace05b4cf3a5b8dcd96a19774f/datasets/ingredient.py#L7
https://github.com/RashLog/PUTM/blob/c23bd9d82b6bb4ace05b4cf3a5b8dcd96a19774f/datasets/ingredient.py#L10

=======================================================
https://github.com/HaoranTang/cl_spatial_inductive_bias
=======================================================

Found 7 times
DataLoader(train_dataset, batch_size=32, shuffle=True, num_workers=2*NUM_CPU)
DataLoader(valid_dataset, batch_size=32, shuffle=False, num_workers=2*NUM_CPU)
DataLoader(
            train_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
            pin_memory=True,
            drop_last=True,
            persistent_workers=True,
        )
DataLoader(
        val_dataset,
        batch_size=batch_size,
        num_workers=num_workers,
        pin_memory=True,
        drop_last=False,
        persistent_workers=True,
    )
DataLoader(
        train_dataset,
        batch_size=batch_size,
        shuffle=True,
        num_workers=num_workers,
        pin_memory=True,
        drop_last=True,
        persistent_workers=True,
    )
DataLoader(dataset, batch_size=batch_size, num_workers=0, drop_last=False)
DataLoader(dataset, batch_size=2, num_workers=0, drop_last=False)
https://github.com/HaoranTang/cl_spatial_inductive_bias/blob/4d156df9d7d543e64a32f410e227bec5633956c0/voc_segm_downstream.py#L351
https://github.com/HaoranTang/cl_spatial_inductive_bias/blob/4d156df9d7d543e64a32f410e227bec5633956c0/voc_segm_downstream.py#L352
https://github.com/HaoranTang/cl_spatial_inductive_bias/blob/4d156df9d7d543e64a32f410e227bec5633956c0/solo/utils/classification_dataloader.py#L256
https://github.com/HaoranTang/cl_spatial_inductive_bias/blob/4d156df9d7d543e64a32f410e227bec5633956c0/solo/utils/classification_dataloader.py#L267
https://github.com/HaoranTang/cl_spatial_inductive_bias/blob/4d156df9d7d543e64a32f410e227bec5633956c0/solo/utils/pretrain_dataloader.py#L561
https://github.com/HaoranTang/cl_spatial_inductive_bias/blob/4d156df9d7d543e64a32f410e227bec5633956c0/tests/methods/utils.py#L214
https://github.com/HaoranTang/cl_spatial_inductive_bias/blob/4d156df9d7d543e64a32f410e227bec5633956c0/tests/methods/utils.py#L228

================================
https://github.com/hujiecpp/PAIS
================================

Found 2 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu, flatten=True),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs,
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu, flatten=True),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs,
    )
https://github.com/hujiecpp/PAIS/blob/3f3e24d74a992d738cccfdc88e05534f37c69198/ssod/datasets/builder.py#L81
https://github.com/hujiecpp/PAIS/blob/3f3e24d74a992d738cccfdc88e05534f37c69198/ssod/datasets/.ipynb_checkpoints/builder-checkpoint.py#L81

=======================================
https://github.com/nightkeepers/CI-SSOD
=======================================

Found 2 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu, flatten=True),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs,
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu, flatten=True),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs,
    )
https://github.com/nightkeepers/CI-SSOD/blob/63eebf24dbbb8fa46e19df04a6698c8a4866b9f3/ssod/datasets/builder.py#L134
https://github.com/nightkeepers/CI-SSOD/blob/63eebf24dbbb8fa46e19df04a6698c8a4866b9f3/ssod/datasets/builder.py#L185

=======================================
https://github.com/RUC-DWBI-ML/research
=======================================

Found 4 times
data.DataLoader(train_set, sampler=contrastive_sampler,batch_size=args.batch_size, drop_last = True)
data.DataLoader(train_set, sampler=sampler, batch_size=args.batch_size_classifier, drop_last = False)
data.DataLoader(train_set, sampler=sampler_group,batch_size=args.con_batch_size)
data.DataLoader(train_set, sampler=sampler,batch_size=args.con_batch_size)
https://github.com/RUC-DWBI-ML/research/blob/dc5674b23937506fbb08b0e7fac532145087fd0e/WAD-master/contrast_main.py#L69
https://github.com/RUC-DWBI-ML/research/blob/dc5674b23937506fbb08b0e7fac532145087fd0e/WAD-master/datasets.py#L383
https://github.com/RUC-DWBI-ML/research/blob/dc5674b23937506fbb08b0e7fac532145087fd0e/WAD-master/datasets.py#L390
https://github.com/RUC-DWBI-ML/research/blob/dc5674b23937506fbb08b0e7fac532145087fd0e/WAD-master/datasets.py#L395

===========================================
https://github.com/mingkai-zheng/SimMatchV2
===========================================

Found 3 times
DataLoader(
        train_dataset_u,
        sampler=train_sampler(train_dataset_u),
        batch_size=args.batch_size * args.mu, persistent_workers=True,
        num_workers=args.workers, pin_memory=True, drop_last=True)
DataLoader(
        train_dataset_x,
        sampler=LabeledDataSampler(train_dataset_x, num_samples=len(train_loader_u) * args.batch_size),
        batch_size=args.batch_size, persistent_workers=True,
        num_workers=args.workers, pin_memory=True, drop_last=True)
DataLoader(
        val_dataset,
        sampler=train_sampler(val_dataset),
        batch_size=64, shuffle=False, persistent_workers=True,
        num_workers=args.workers, pin_memory=True)
https://github.com/mingkai-zheng/SimMatchV2/blob/f0e054c030ded22877f38362653d0f3b0f2aa073/main.py#L163
https://github.com/mingkai-zheng/SimMatchV2/blob/f0e054c030ded22877f38362653d0f3b0f2aa073/main.py#L169
https://github.com/mingkai-zheng/SimMatchV2/blob/f0e054c030ded22877f38362653d0f3b0f2aa073/main.py#L175

=============================================
https://github.com/ninatu/learning_by_sorting
=============================================

Found 1 times
DataLoader(dataset,
                            batch_size=batch_size,
                            num_workers=num_workers,
                            pin_memory=False,
                            sampler=sampler,
                            shuffle=shuffle,
                            drop_last=train,
                            )
https://github.com/ninatu/learning_by_sorting/blob/47c074ea9c6c1afe02761bbddfdcd5e61d61ee6f/learning_by_sorting/dataloader/image_folder_dataloader.py#L40

=====================================
https://github.com/kleinzcy/Cr-KD-NCD
=====================================

Found 4 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        test_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        test_seen_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        val_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
https://github.com/kleinzcy/Cr-KD-NCD/blob/68dd86508f31052a20cb8d0190c593df8c021640/rKD.py#L431
https://github.com/kleinzcy/Cr-KD-NCD/blob/68dd86508f31052a20cb8d0190c593df8c021640/rKD.py#L439
https://github.com/kleinzcy/Cr-KD-NCD/blob/68dd86508f31052a20cb8d0190c593df8c021640/rKD.py#L447
https://github.com/kleinzcy/Cr-KD-NCD/blob/68dd86508f31052a20cb8d0190c593df8c021640/rKD.py#L455

================================
https://github.com/tileb1/AdaSim
================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
https://github.com/tileb1/AdaSim/blob/d463c28dac28d2082b6184cbe5b1edd3ed779ed9/main_adasim.py#L86

====================================
https://github.com/SMSD75/Timetuning
====================================

Found 7 times
DataLoader(train_dataset, batch_size, shuffle=False, num_workers=num_workers, sampler=train_sampler, pin_memory=True)
DataLoader(train_dataset, batch_size, shuffle=shuffle, num_workers=num_workers, pin_memory=pin_memory)
DataLoader(train_dataset, batch_size, shuffle=True, num_workers=num_workers, sampler=train_sampler, pin_memory=True)
DataLoader(train_dataset, batch_size, shuffle=shuffle, num_workers=num_workers, pin_memory=pin_memory)
DataLoader(self.voc_train, batch_size=self.batch_size,
                          shuffle=self.shuffle, num_workers=self.num_workers,
                          drop_last=self.drop_last, pin_memory=True)
DataLoader(self.voc_val, batch_size=self.batch_size, shuffle=False, num_workers=self.num_workers,
                          drop_last=self.drop_last, pin_memory=True)
DataLoader(dataset, batch_size=batch_szie, shuffle=shuffle, num_workers=3, pin_memory=True)
https://github.com/SMSD75/Timetuning/blob/0c9cc845efe5f883b07f86226c8f1d923ec1f50f/data_loader.py#L1107
https://github.com/SMSD75/Timetuning/blob/0c9cc845efe5f883b07f86226c8f1d923ec1f50f/data_loader.py#L1109
https://github.com/SMSD75/Timetuning/blob/0c9cc845efe5f883b07f86226c8f1d923ec1f50f/data_loader.py#L1123
https://github.com/SMSD75/Timetuning/blob/0c9cc845efe5f883b07f86226c8f1d923ec1f50f/data_loader.py#L1125
https://github.com/SMSD75/Timetuning/blob/0c9cc845efe5f883b07f86226c8f1d923ec1f50f/leoloader.py#L94
https://github.com/SMSD75/Timetuning/blob/0c9cc845efe5f883b07f86226c8f1d923ec1f50f/leoloader.py#L99
https://github.com/SMSD75/Timetuning/blob/0c9cc845efe5f883b07f86226c8f1d923ec1f50f/leoloader.py#L264

===================================
https://github.com/MarcBotet/hamlet
===================================

Found 2 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
https://github.com/MarcBotet/hamlet/blob/4c9b8db6712b2e4680f40ac4d8b3f653cd77d641/mmseg/datasets/builder.py#L159
https://github.com/MarcBotet/hamlet/blob/4c9b8db6712b2e4680f40ac4d8b3f653cd77d641/mmseg/datasets/builder.py#L172

=======================================
https://github.com/JohnsonSign/MaST-Pre
=======================================

Found 5 times
torch.utils.data.DataLoader(
                    train_dataset, 
                    batch_size=args.batch_size, 
                    shuffle=True,
                    num_workers=args.workers, 
                    pin_memory=True, 
                    drop_last=True
    )
torch.utils.data.DataLoader(
                    dataset, 
                    batch_size=args.batch_size, 
                    num_workers=args.workers, 
                    shuffle=True,
                    pin_memory=True, 
                    drop_last=True
    )
torch.utils.data.DataLoader(
                dataset_test, 
                batch_size=args.batch_size, 
                num_workers=args.workers, 
                pin_memory=True
    )
torch.utils.data.DataLoader(dataset, batch_size=16, shuffle=True, num_workers=8, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=16, shuffle=True, num_workers=8, pin_memory=True)
https://github.com/JohnsonSign/MaST-Pre/blob/116a5b4fd1fd9673007ad8e37e34d57e5cd50384/0-pretraining-dp.py#L99
https://github.com/JohnsonSign/MaST-Pre/blob/116a5b4fd1fd9673007ad8e37e34d57e5cd50384/1-finetune-dp.py#L174
https://github.com/JohnsonSign/MaST-Pre/blob/116a5b4fd1fd9673007ad8e37e34d57e5cd50384/1-finetune-dp.py#L191
https://github.com/JohnsonSign/MaST-Pre/blob/116a5b4fd1fd9673007ad8e37e34d57e5cd50384/data_aug/CLR_NTU.py#L82
https://github.com/JohnsonSign/MaST-Pre/blob/116a5b4fd1fd9673007ad8e37e34d57e5cd50384/datasets/ntu60.py#L92

==================================
https://github.com/CVMI-Lab/SimGCD
==================================

Found 4 times
DataLoader(train_dataset, num_workers=args.num_workers, batch_size=args.batch_size, shuffle=False,
                              sampler=sampler, drop_last=True, pin_memory=True)
DataLoader(unlabelled_train_examples_test, num_workers=args.num_workers,
                                        batch_size=256, shuffle=False, pin_memory=False)
DataLoader(train_dataset, num_workers=args.num_workers, batch_size=args.batch_size, shuffle=False,
                              sampler=train_sampler, drop_last=True, pin_memory=True)
DataLoader(unlabelled_train_examples_test, num_workers=args.num_workers, batch_size=256, 
                                        shuffle=False, sampler=unlabelled_train_sampler, pin_memory=False)
https://github.com/CVMI-Lab/SimGCD/blob/f843f27195701b7c8c5713cfd17499ad67c86247/train.py#L282
https://github.com/CVMI-Lab/SimGCD/blob/f843f27195701b7c8c5713cfd17499ad67c86247/train.py#L284
https://github.com/CVMI-Lab/SimGCD/blob/f843f27195701b7c8c5713cfd17499ad67c86247/train_mp.py#L132
https://github.com/CVMI-Lab/SimGCD/blob/f843f27195701b7c8c5713cfd17499ad67c86247/train_mp.py#L134

=========================================================================
https://github.com/amazon-science/object-centric-multiple-object-tracking
=========================================================================

Found 1 times
torch.utils.data.DataLoader(
            dataset, batch_size=batch_size, num_workers=0, collate_fn=collate_with_autopadding
        )
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/datasets.py#L305

===============================
https://github.com/DTennant/GPC
===============================

Found 4 times
DataLoader(train_dataset, num_workers=args.num_workers, batch_size=args.batch_size, shuffle=False,
                              sampler=sampler, drop_last=True)
DataLoader(unlabelled_train_examples_test, num_workers=args.num_workers,
                                        batch_size=args.batch_size, shuffle=False)
DataLoader(test_dataset, num_workers=args.num_workers,
                                      batch_size=args.batch_size, shuffle=False)
DataLoader(pcl_dataset, num_workers=args.num_workers, batch_size=args.batch_size, shuffle=False,)
https://github.com/DTennant/GPC/blob/e9af278485052ac22950c5d792a158c498e5c8e8/methods/contrastive_training/gmm_sm.py#L816
https://github.com/DTennant/GPC/blob/e9af278485052ac22950c5d792a158c498e5c8e8/methods/contrastive_training/gmm_sm.py#L818
https://github.com/DTennant/GPC/blob/e9af278485052ac22950c5d792a158c498e5c8e8/methods/contrastive_training/gmm_sm.py#L820
https://github.com/DTennant/GPC/blob/e9af278485052ac22950c5d792a158c498e5c8e8/methods/contrastive_training/gmm_sm.py#L824

===================================
https://github.com/dakloepfer/locus
===================================

Found 7 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=args.pin_memory,
    )
torch.utils.data.DataLoader(
                feature_dataset, batch_size=args.batch_size, shuffle=True
            )
torch.utils.data.DataLoader(
                feature_dataset, batch_size=args.batch_size, shuffle=False
            )
DataLoader(
            self.train_dataset, batch_sampler=batch_sampler, **self.train_loader_params
        )
DataLoader(
            self.val_dataset, batch_sampler=batch_sampler, **self.val_loader_params
        )
DataLoader(
            self.test_dataset, batch_sampler=batch_sampler, **self.test_loader_params
        )
DataLoader(dataset, batch_size=32, num_workers=8, pin_memory=True)
https://github.com/dakloepfer/locus/blob/b39500a2ccb15b5ec9879f486b1f406434b314b8/test.py#L97
https://github.com/dakloepfer/locus/blob/b39500a2ccb15b5ec9879f486b1f406434b314b8/test.py#L245
https://github.com/dakloepfer/locus/blob/b39500a2ccb15b5ec9879f486b1f406434b314b8/test.py#L268
https://github.com/dakloepfer/locus/blob/b39500a2ccb15b5ec9879f486b1f406434b314b8/src/lightning/data.py#L167
https://github.com/dakloepfer/locus/blob/b39500a2ccb15b5ec9879f486b1f406434b314b8/src/lightning/data.py#L180
https://github.com/dakloepfer/locus/blob/b39500a2ccb15b5ec9879f486b1f406434b314b8/src/lightning/data.py#L193
https://github.com/dakloepfer/locus/blob/b39500a2ccb15b5ec9879f486b1f406434b314b8/src/models/baselines.py#L79

=================================
https://github.com/jmiemirza/MATE
=================================

Found 30 times
torch.utils.data.DataLoader(dataset, batch_size=config.others.bs,
                                                 num_workers=int(args.num_workers),
                                                 drop_last=config.others.subset == 'train',
                                                 worker_init_fn=worker_init_fn,
                                                 sampler=sampler)
torch.utils.data.DataLoader(dataset, batch_size=config.others.bs,
                                                 shuffle=shuffle,
                                                 drop_last=config.others.subset == 'train',
                                                 num_workers=int(args.num_workers),
                                                 worker_init_fn=worker_init_fn)
DataLoader(inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle, num_workers=10)
DataLoader(inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle, num_workers=10)
DataLoader(dataset=inference_dataset, batch_size=32)
DataLoader(dataset=clean_dataset, batch_size=args.batch_size)
DataLoader(dataset=dataset, batch_size=32, drop_last=True)
DataLoader(dataset=inference_dataset, batch_size=32)
DataLoader(dataset=inference_dataset, batch_size=6)
DataLoader(dataset=inference_dataset, batch_size=6)
DataLoader(train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=50,
                                  drop_last=True)
DataLoader(test_dataset, batch_size=args.batch_size, shuffle=False, num_workers=10)
DataLoader(TRAIN_DATASET, batch_size=config.batch_size, shuffle=True, num_workers=10, drop_last=True)
DataLoader(TEST_DATASET, batch_size=config.batch_size, shuffle=False, num_workers=10)
DataLoader(dataset=inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle, drop_last=True)
DataLoader(dataset=inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle, drop_last=True)
DataLoader(inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle, drop_last=True)
DataLoader(inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle, drop_last=True)
DataLoader(inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle, drop_last=True)
DataLoader(TEST_DATASET, batch_size=args.batch_size, shuffle=False, num_workers=10)
DataLoader(TEST_DATASET, batch_size=args.batch_size, shuffle=False, num_workers=10)
DataLoader(dataset=inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle)
DataLoader(dataset=inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle)
DataLoader(inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle)
DataLoader(inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle)
DataLoader(inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle)
DataLoader(inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle)
DataLoader(TEST_DATASET, batch_size=args.batch_size, shuffle=False, num_workers=10)
DataLoader(TEST_DATASET, batch_size=args.batch_size, shuffle=False, num_workers=10)
DataLoader(inference_dataset, batch_size=args.batch_size, shuffle=args.shuffle, num_workers=10)
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/builder.py#L20
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/builder.py#L27
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/runner.py#L55
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/runner.py#L111
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/runner_finetune.py#L382
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/runner_finetune.py#L421
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/runner_finetune.py#L450
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/runner_finetune.py#L456
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/runner_finetune.py#L597
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/runner_finetune.py#L600
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/runner_pretrain.py#L266
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/runner_pretrain.py#L270
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/runner_pretrain_partnet.py#L140
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/runner_pretrain_partnet.py#L142
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta.py#L23
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta.py#L26
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta.py#L38
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta.py#L44
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta.py#L51
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta.py#L892
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta.py#L1031
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta_abl.py#L72
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta_abl.py#L75
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta_abl.py#L87
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta_abl.py#L94
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta_abl.py#L101
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta_abl.py#L108
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta_abl.py#L802
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/tta_abl.py#L941
https://github.com/jmiemirza/MATE/blob/674194493d0710f3926fa814c5bac7bfa22dac97/tools/ttt_new.py#L109

===================================
https://github.com/CoderHHX/PADDLES
===================================

Found 19 times
DataLoader(dataset=predict_dataset, batch_size=args.batch_size * 2, shuffle=False, num_workers=args.workers, pin_memory=True, drop_last=False)
DataLoader(dataset=confident_dataset, batch_size=con_batch, shuffle=True, num_workers=args.workers, pin_memory=True, drop_last=True)
DataLoader(dataset=unconfident_dataset, batch_size=uncon_batch, shuffle=True, num_workers=args.workers, pin_memory=True, drop_last=True)
DataLoader(dataset=train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True, drop_last=True)
DataLoader(dataset=test_set, batch_size=args.batch_size * 2, shuffle=False, num_workers=args.workers, pin_memory=True)
DataLoader(dataset=predict_dataset, batch_size=args.batch_size * 2, shuffle=False, num_workers=args.workers, pin_memory=True, drop_last=False)
DataLoader(dataset=confident_dataset, batch_size=con_batch, shuffle=True, num_workers=args.workers, pin_memory=True, drop_last=True)
DataLoader(dataset=unconfident_dataset, batch_size=uncon_batch, shuffle=True, num_workers=args.workers, pin_memory=True, drop_last=True)
DataLoader(dataset=train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True, drop_last=True)
DataLoader(dataset=test_set, batch_size=args.batch_size * 2, shuffle=False, num_workers=args.workers, pin_memory=True)
DataLoader(dataset=predict_dataset, batch_size=args.batch_size * 2, shuffle=False, num_workers=8, pin_memory=True, drop_last=False)
DataLoader(dataset=train_dataset, batch_size=args.batch_size, num_workers=8, pin_memory=True, shuffle=True, drop_last=True)
DataLoader(dataset=clean_val_dataset, batch_size=args.batch_size * 2, num_workers=args.workers, pin_memory=True, shuffle=False, drop_last=False)
DataLoader(dataset=test_dataset, batch_size=args.batch_size * 2, num_workers=args.workers, pin_memory=True, shuffle=False, drop_last=False)
DataLoader(dataset=train_dataset, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True, shuffle=True, drop_last=True)
DataLoader(dataset=train_dataset, batch_size=args.batch_size, num_workers=args.workers, pin_memory=True, shuffle=True, drop_last=True)
DataLoader(dataset=train_dataset, batch_size=batch_size, shuffle=True, num_workers=8, pin_memory=True, drop_last=True)
DataLoader(dataset=val_dataset, batch_size=batch_size * 2, shuffle=False, num_workers=8, pin_memory=True)
DataLoader(dataset=test_set, batch_size=batch_size * 2, shuffle=False, num_workers=8, pin_memory=True)
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_CifarN.py#L182
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_CifarN.py#L192
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_CifarN.py#L193
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_CifarN.py#L286
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_CifarN.py#L287
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_Cifar_Semi.py#L182
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_Cifar_Semi.py#L192
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_Cifar_Semi.py#L193
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_Cifar_Semi.py#L269
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_Cifar_Semi.py#L270
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_Clothing1M.py#L169
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_Clothing1M.py#L176
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_Clothing1M.py#L335
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_Clothing1M.py#L340
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_Clothing1M.py#L348
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/PADDLES_Clothing1M.py#L349
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/common/NoisyUtil.py#L339
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/common/NoisyUtil.py#L340
https://github.com/CoderHHX/PADDLES/blob/e1a4827db1fc3d5f69f2a8c1f64d3d94ea881909/common/NoisyUtil.py#L341

===========================================
https://github.com/subhadeeproy2000/TTA-IQA
===========================================

Found 12 times
torch.utils.data.DataLoader(self.data, batch_size=self.batch_size, shuffle=True)
DataLoader(dataset=train_dataset, batch_size=config.batch_size, num_workers=config.num_workers, drop_last=True, shuffle=True)
DataLoader(dataset=train_dataset, batch_size=config.batch_size, num_workers=config.num_workers, drop_last=True, shuffle=True)
DataLoader(dataset=train_dataset, batch_size=config.batch_size, num_workers=config.num_workers, drop_last=True, shuffle=True)
DataLoader(dataset=train_dataset, batch_size=config.batch_size, num_workers=config.num_workers, drop_last=True, shuffle=True)
DataLoader(dataset=test_dataset, batch_size=config.batch_size, num_workers=config.num_workers, drop_last=True, shuffle=True)
torch.utils.data.DataLoader(
				self.data, batch_size=self.batch_size, shuffle=False)
torch.utils.data.DataLoader(
				self.data, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(
				self.data, batch_size=self.batch_size, shuffle=False)
torch.utils.data.DataLoader(
				self.data, batch_size=1, shuffle=False)
torch.utils.data.DataLoader(
				self.data, batch_size=self.batch_size, shuffle=False)
torch.utils.data.DataLoader(
				self.data, batch_size=1, shuffle=False)
https://github.com/subhadeeproy2000/TTA-IQA/blob/7213bc16ea359175f074ca7d4197fa55e77e56e7/General TTA/tta_inference.py#L37
https://github.com/subhadeeproy2000/TTA-IQA/blob/7213bc16ea359175f074ca7d4197fa55e77e56e7/MUSIQ/test.py#L202
https://github.com/subhadeeproy2000/TTA-IQA/blob/7213bc16ea359175f074ca7d4197fa55e77e56e7/MUSIQ/test_time_training.py#L418
https://github.com/subhadeeproy2000/TTA-IQA/blob/7213bc16ea359175f074ca7d4197fa55e77e56e7/MUSIQ/test_time_training_tra.py#L495
https://github.com/subhadeeproy2000/TTA-IQA/blob/7213bc16ea359175f074ca7d4197fa55e77e56e7/MUSIQ/train.py#L103
https://github.com/subhadeeproy2000/TTA-IQA/blob/7213bc16ea359175f074ca7d4197fa55e77e56e7/MUSIQ/train.py#L104
https://github.com/subhadeeproy2000/TTA-IQA/blob/7213bc16ea359175f074ca7d4197fa55e77e56e7/MetaIQA/data_loader.py#L125
https://github.com/subhadeeproy2000/TTA-IQA/blob/7213bc16ea359175f074ca7d4197fa55e77e56e7/MetaIQA/data_loader.py#L128
https://github.com/subhadeeproy2000/TTA-IQA/blob/7213bc16ea359175f074ca7d4197fa55e77e56e7/TReS/data_loader.py#L125
https://github.com/subhadeeproy2000/TTA-IQA/blob/7213bc16ea359175f074ca7d4197fa55e77e56e7/TReS/data_loader.py#L128
https://github.com/subhadeeproy2000/TTA-IQA/blob/7213bc16ea359175f074ca7d4197fa55e77e56e7/hyperIQA/data_loader.py#L111
https://github.com/subhadeeproy2000/TTA-IQA/blob/7213bc16ea359175f074ca7d4197fa55e77e56e7/hyperIQA/data_loader.py#L114

=================================
https://github.com/chenjie20/CVCL
=================================

Found 2 times
torch.utils.data.DataLoader(
        mv_data,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        mv_data,
        batch_size=num_samples,
        shuffle=True,
        drop_last=True,
    )
https://github.com/chenjie20/CVCL/blob/e38a3e72f6553760645b3b141f58c9da55a110d1/dataprocessing.py#L114
https://github.com/chenjie20/CVCL/blob/e38a3e72f6553760645b3b141f58c9da55a110d1/dataprocessing.py#L129

=============================
https://github.com/ziplab/SPT
=============================

Found 3 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val, batch_size=int(2 * args.batch_size),
        sampler=sampler_val, num_workers=args.num_workers,
        pin_memory=args.pin_mem, drop_last=False
    )
torch.utils.data.DataLoader(
            dataset_sensitivity, sampler=sampler_init,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False,
        )
https://github.com/ziplab/SPT/blob/e385f67ef0cba524b44072d52ec0650a7022f4e2/train_spt.py#L274
https://github.com/ziplab/SPT/blob/e385f67ef0cba524b44072d52ec0650a7022f4e2/train_spt.py#L282
https://github.com/ziplab/SPT/blob/e385f67ef0cba524b44072d52ec0650a7022f4e2/train_spt.py#L305

=================================
https://github.com/Yushu-Li/OWTTT
=================================

Found 6 times
data.DataLoader(teset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, worker_init_fn=seed_worker, pin_memory=True, drop_last=False)
data.DataLoader(teset, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, worker_init_fn=seed_worker, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(teset, batch_size=args.batch_size,
                                            shuffle=shuffle, num_workers=args.workers,
                                            worker_init_fn=seed_worker, pin_memory=pin_memory, drop_last=drop_last)
torch.utils.data.DataLoader(trset, batch_size=args.batch_size,
                                            shuffle=True, num_workers=args.workers,
                                            worker_init_fn=seed_worker, pin_memory=pin_memory, drop_last=False)
DataLoader(target_dataset, batch_size=256, shuffle=False, drop_last=False, num_workers=16)
torch.utils.data.DataLoader(dataset, 
                                batch_size=args.batch_size, 
                                shuffle=shuffle, 
                                num_workers=args.workers, 
                                worker_init_fn=seed_worker, 
                                pin_memory=True, 
                                drop_last=drop_last)
https://github.com/Yushu-Li/OWTTT/blob/9555fc0813f0882a7a4b1f1e6b9463eab71a3dcb/cifar/OURS.py#L194
https://github.com/Yushu-Li/OWTTT/blob/9555fc0813f0882a7a4b1f1e6b9463eab71a3dcb/cifar/TEST.py#L88
https://github.com/Yushu-Li/OWTTT/blob/9555fc0813f0882a7a4b1f1e6b9463eab71a3dcb/cifar/utils/prepare_dataset.py#L437
https://github.com/Yushu-Li/OWTTT/blob/9555fc0813f0882a7a4b1f1e6b9463eab71a3dcb/cifar/utils/prepare_dataset.py#L499
https://github.com/Yushu-Li/OWTTT/blob/9555fc0813f0882a7a4b1f1e6b9463eab71a3dcb/imagenet/utils/create_corruption_dataset.py#L52
https://github.com/Yushu-Li/OWTTT/blob/9555fc0813f0882a7a4b1f1e6b9463eab71a3dcb/imagenet/utils/prepare_dataset.py#L34

=================================
https://github.com/kangzhiq/NNCSL
=================================

Found 12 times
torch.utils.data.DataLoader(
            dataset,
            sampler=dist_sampler,
            batch_size=batch_size,
            drop_last=drop_last,
            pin_memory=True,
            num_workers=8,
            worker_init_fn=seed_worker,
            generator=g)
torch.utils.data.DataLoader(
            dataset,
            batch_sampler=dist_sampler,
            pin_memory=True,
            num_workers=8,
            worker_init_fn=seed_worker,
            generator=g)
torch.utils.data.DataLoader(
        unsupervised_set,
        sampler=unsupervised_sampler,
        batch_size=u_batch_size,
        drop_last=True,
        pin_memory=True,
        num_workers=8,
        worker_init_fn=seed_worker,
        generator=g)
torch.utils.data.DataLoader(
            supervised_set,
            batch_sampler=supervised_sampler,
            num_workers=8,
            worker_init_fn=seed_worker,
            generator=g)
torch.utils.data.DataLoader(
            dataset,
            sampler=dist_sampler,
            batch_size=batch_size,
            drop_last=drop_last,
            pin_memory=True,
            num_workers=8,
            worker_init_fn=seed_worker,
            generator=g)
torch.utils.data.DataLoader(
            dataset,
            batch_sampler=dist_sampler,
            pin_memory=True,
            num_workers=8,
            worker_init_fn=seed_worker,
            generator=g)
torch.utils.data.DataLoader(
        unsupervised_set,
        sampler=unsupervised_sampler,
        batch_size=u_batch_size,
        drop_last=True,
        pin_memory=True,
        num_workers=8,
        worker_init_fn=seed_worker,
        generator=g)
torch.utils.data.DataLoader(
            supervised_set,
            batch_sampler=supervised_sampler,
            num_workers=8,
            worker_init_fn=seed_worker,
            generator=g)
torch.utils.data.DataLoader(
            dataset,
            sampler=dist_sampler,
            batch_size=batch_size,
            drop_last=drop_last,
            pin_memory=True,
            num_workers=8,
            worker_init_fn=seed_worker,
            generator=g)
torch.utils.data.DataLoader(
            dataset,
            batch_sampler=dist_sampler,
            pin_memory=True,
            num_workers=8,
            worker_init_fn=seed_worker,
            generator=g)
torch.utils.data.DataLoader(
        unsupervised_set,
        sampler=unsupervised_sampler,
        batch_size=u_batch_size,
        drop_last=True,
        pin_memory=True,
        num_workers=8,
        worker_init_fn=seed_worker,
        generator=g)
torch.utils.data.DataLoader(
            supervised_set,
            batch_sampler=supervised_sampler,
            pin_memory=True,
            num_workers=8,
            worker_init_fn=seed_worker,
            generator=g)
https://github.com/kangzhiq/NNCSL/blob/217b279f5ca6daf756204796dd21d2187d0c2684/src/data_manager.py#L244
https://github.com/kangzhiq/NNCSL/blob/217b279f5ca6daf756204796dd21d2187d0c2684/src/data_manager.py#L262
https://github.com/kangzhiq/NNCSL/blob/217b279f5ca6daf756204796dd21d2187d0c2684/src/data_manager.py#L323
https://github.com/kangzhiq/NNCSL/blob/217b279f5ca6daf756204796dd21d2187d0c2684/src/data_manager.py#L370
https://github.com/kangzhiq/NNCSL/blob/217b279f5ca6daf756204796dd21d2187d0c2684/src/data_manager.py#L422
https://github.com/kangzhiq/NNCSL/blob/217b279f5ca6daf756204796dd21d2187d0c2684/src/data_manager.py#L440
https://github.com/kangzhiq/NNCSL/blob/217b279f5ca6daf756204796dd21d2187d0c2684/src/data_manager.py#L492
https://github.com/kangzhiq/NNCSL/blob/217b279f5ca6daf756204796dd21d2187d0c2684/src/data_manager.py#L523
https://github.com/kangzhiq/NNCSL/blob/217b279f5ca6daf756204796dd21d2187d0c2684/src/data_manager.py#L579
https://github.com/kangzhiq/NNCSL/blob/217b279f5ca6daf756204796dd21d2187d0c2684/src/data_manager.py#L597
https://github.com/kangzhiq/NNCSL/blob/217b279f5ca6daf756204796dd21d2187d0c2684/src/data_manager.py#L658
https://github.com/kangzhiq/NNCSL/blob/217b279f5ca6daf756204796dd21d2187d0c2684/src/data_manager.py#L688

=====================================
https://github.com/xmed-lab/GraphEcho
=====================================

Found 1 times
torch.utils.data.DataLoader(
        dataset, batch_size=batch_size, num_workers=num_workers, shuffle=True)
https://github.com/xmed-lab/GraphEcho/blob/07f4aecc7bdfa87aa2da442d44667222518612f1/datasets/echo.py#L377

=======================================
https://github.com/cvlab-columbia/viper
=======================================

Found 1 times
DataLoader(dataset, batch_size=batch_size, shuffle=False, num_workers=0, pin_memory=True,
                            collate_fn=my_collate)
https://github.com/cvlab-columbia/viper/blob/09fe3465224766860d8dd4ec48db942f22b05092/main_batch.py#L146

=============================
https://github.com/idstcv/TeS
=============================

Found 4 times
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
            num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
            dataset.LabelDatasetFolder(
                root=image_dir,
                path_label_filename=args.path_label_test_file,
                transform=transforms.Compose([
                transforms.Resize(224),
                transforms.ToTensor(),
                normalize,
            ])),
            batch_size=256, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
            num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
            dataset.LabelDatasetFolder(
                root=image_dir,
                path_label_filename=args.path_label_test_file,
                transform=transforms.Compose([
                    transforms.Resize(224),
                    transforms.CenterCrop(224),
                    transforms.ToTensor(),
                    normalize,
                ])
            ),
            batch_size=256, shuffle=False,
            num_workers=args.workers, pin_memory=True)
https://github.com/idstcv/TeS/blob/43bf264887a7780d357d1d5e36c41263ccda3680/run.py#L234
https://github.com/idstcv/TeS/blob/43bf264887a7780d357d1d5e36c41263ccda3680/run.py#L238
https://github.com/idstcv/TeS/blob/43bf264887a7780d357d1d5e36c41263ccda3680/run.py#L269
https://github.com/idstcv/TeS/blob/43bf264887a7780d357d1d5e36c41263ccda3680/run.py#L273

===========================================
https://github.com/cool-xuan/Imbalanced_SAM
===========================================

Found 1 times
DataLoader(datasets[set_name],
                                        batch_size=args.batch_size,
                                        shuffle=set_name=='train', 
                                        num_workers=os.cpu_count() // 4)
https://github.com/cool-xuan/Imbalanced_SAM/blob/aed2af140b65ae46bfe338effc1210845ec4ce50/scripts/train.py#L160

================================
https://github.com/JJuOn/LFS-GAN
================================

Found 2 times
DataLoader(real_dataset, batch_size=10, shuffle=False)
data.DataLoader(dataset, batch_size=args.batch, sampler=data_sampler(dataset, shuffle=True, distributed=False), drop_last=True, num_workers=4)
https://github.com/JJuOn/LFS-GAN/blob/17c12f798c540e22a722c01c3d816d9313503247/evaluate_b_lpips.py#L27
https://github.com/JJuOn/LFS-GAN/blob/17c12f798c540e22a722c01c3d816d9313503247/train.py#L593

=========================================
https://github.com/YuyangSunshine/ABR_IOD
=========================================

Found 2 times
torch.utils.data.DataLoader(dataset, batch_sampler=batch_sampler,
                                                  collate_fn=collator, num_workers=num_workers)
torch.utils.data.DataLoader(dataset, batch_sampler=batch_sampler,
                                                  collate_fn=collator, num_workers=num_workers)
https://github.com/YuyangSunshine/ABR_IOD/blob/6d53a46e8c7d36dd9c6d88d8e219cc6d3942bb4e/maskrcnn_benchmark/data/build.py#L162
https://github.com/YuyangSunshine/ABR_IOD/blob/6d53a46e8c7d36dd9c6d88d8e219cc6d3942bb4e/maskrcnn_benchmark/data/build.py#L213

============================
https://github.com/brdav/cma
============================

Found 4 times
DataLoader(
                dataset=ds,
                batch_size=self.batch_size // len(self.train_on),
                shuffle=True,
                num_workers=self.num_workers,
                drop_last=True,
                pin_memory=self.pin_memory,
            )
DataLoader(
                dataset=ds,
                batch_size=self.val_batch_size,
                shuffle=False,
                num_workers=self.num_workers,
                pin_memory=self.pin_memory,
                drop_last=False,
            )
DataLoader(
                dataset=ds,
                batch_size=self.test_batch_size,
                shuffle=False,
                num_workers=self.num_workers,
                pin_memory=self.pin_memory,
                drop_last=False,
            )
DataLoader(
                dataset=ds,
                batch_size=self.test_batch_size,
                shuffle=shuffle,
                num_workers=self.num_workers,
                pin_memory=self.pin_memory,
                drop_last=False,
            )
https://github.com/brdav/cma/blob/41838718481ec8db9c3c11acfe53f62a00630d24/data_modules/combined_data_module.py#L185
https://github.com/brdav/cma/blob/41838718481ec8db9c3c11acfe53f62a00630d24/data_modules/combined_data_module.py#L199
https://github.com/brdav/cma/blob/41838718481ec8db9c3c11acfe53f62a00630d24/data_modules/combined_data_module.py#L213
https://github.com/brdav/cma/blob/41838718481ec8db9c3c11acfe53f62a00630d24/data_modules/combined_data_module.py#L227

=================================
https://github.com/shengcheng/ABA
=================================

Found 3 times
torch.utils.data.DataLoader(
            trainset, batch_size=args.batch_size, shuffle=True, 
            num_workers=4
            )
torch.utils.data.DataLoader(
            validsets[d], batch_size=args.batch_size, shuffle=False, 
            num_workers=2
            )
torch.utils.data.DataLoader(
            testsets[d], batch_size=args.batch_size, shuffle=False, 
            num_workers=2
            )
https://github.com/shengcheng/ABA/blob/affb67560b307577e9f54f223e2e407b506da354/train.py#L90
https://github.com/shengcheng/ABA/blob/affb67560b307577e9f54f223e2e407b506da354/train.py#L96
https://github.com/shengcheng/ABA/blob/affb67560b307577e9f54f223e2e407b506da354/train.py#L102

=================================
https://github.com/snudatalab/TMI
=================================

Found 12 times
DataLoader(dataset_train, batch_size=batch_size, shuffle=True, num_workers=num_workers,
                                  drop_last=False)
DataLoader(dataset_test, batch_size=batch_size, shuffle=False, num_workers=num_workers,
                                 drop_last=False)
DataLoader(train_set, batch_size=batch_size, shuffle=True, num_workers=num_workers)
DataLoader(test_set, batch_size=batch_size, shuffle=False, num_workers=num_workers)
DataLoader(train_set, batch_size=batch_size, shuffle=True, num_workers=num_workers)
DataLoader(test_set, batch_size=batch_size, shuffle=False, num_workers=num_workers)
DataLoader(train_set, batch_size=batch_size, shuffle=True, num_workers=num_workers)
DataLoader(test_set, batch_size=batch_size, shuffle=False, num_workers=num_workers)
DataLoader(train_set, batch_size=batch_size, shuffle=True, num_workers=num_workers)
DataLoader(test_set, batch_size=batch_size, shuffle=False, num_workers=num_workers)
DataLoader(train_set, batch_size=batch_size, shuffle=True, num_workers=num_workers)
DataLoader(test_set, batch_size=batch_size, shuffle=False, num_workers=num_workers)
https://github.com/snudatalab/TMI/blob/72e57479b82c05f8bfa75f501a015239077fb890/src/dataloader/data_from_imagefolder.py#L100
https://github.com/snudatalab/TMI/blob/72e57479b82c05f8bfa75f501a015239077fb890/src/dataloader/data_from_imagefolder.py#L102
https://github.com/snudatalab/TMI/blob/72e57479b82c05f8bfa75f501a015239077fb890/src/dataloader/data_from_torchvision.py#L24
https://github.com/snudatalab/TMI/blob/72e57479b82c05f8bfa75f501a015239077fb890/src/dataloader/data_from_torchvision.py#L25
https://github.com/snudatalab/TMI/blob/72e57479b82c05f8bfa75f501a015239077fb890/src/dataloader/data_from_torchvision.py#L46
https://github.com/snudatalab/TMI/blob/72e57479b82c05f8bfa75f501a015239077fb890/src/dataloader/data_from_torchvision.py#L47
https://github.com/snudatalab/TMI/blob/72e57479b82c05f8bfa75f501a015239077fb890/src/dataloader/data_from_torchvision.py#L83
https://github.com/snudatalab/TMI/blob/72e57479b82c05f8bfa75f501a015239077fb890/src/dataloader/data_from_torchvision.py#L84
https://github.com/snudatalab/TMI/blob/72e57479b82c05f8bfa75f501a015239077fb890/src/dataloader/data_from_torchvision.py#L119
https://github.com/snudatalab/TMI/blob/72e57479b82c05f8bfa75f501a015239077fb890/src/dataloader/data_from_torchvision.py#L120
https://github.com/snudatalab/TMI/blob/72e57479b82c05f8bfa75f501a015239077fb890/src/dataloader/data_from_torchvision.py#L153
https://github.com/snudatalab/TMI/blob/72e57479b82c05f8bfa75f501a015239077fb890/src/dataloader/data_from_torchvision.py#L154

==========================
https://github.com/gqk/LAE
==========================

Found 1 times
DataLoader(dataset, **kwargs, shuffle=train)
https://github.com/gqk/LAE/blob/1680e496b7ac7ffa408b13d3b1a53a9be9b87696/libml/data/dataloader.py#L28

=====================================
https://github.com/Vivek9Chavan/RECIL
=====================================

Found 19 times
DataLoader(train_dataset, batch_size=32, shuffle=True)
DataLoader(val_dataset, batch_size=32, shuffle=True)
torch.utils.data.DataLoader(trainset, batch_size=128,
                                           shuffle=True, num_workers=2)
torch.utils.data.DataLoader(testset, batch_size=100,
                                          shuffle=False, num_workers=2)
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_val,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler, drop_last=True)
DataLoader(
                idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4
            )
DataLoader(
                idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4
            )
DataLoader(
                idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4
            )
DataLoader(
                class_dset, batch_size=batch_size, shuffle=False, num_workers=4
            )
DataLoader(
                class_dset, batch_size=batch_size, shuffle=False, num_workers=4
            )
DataLoader(
                exemplar_dset, batch_size=batch_size, shuffle=False, num_workers=4
            )
DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
DataLoader(test_dataset, batch_size=batch_size, shuffle=False, num_workers=num_workers)
DataLoader(train_dset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
DataLoader(test_dset, batch_size=batch_size, shuffle=False, num_workers=num_workers)
DataLoader(finetune_train_dataset, batch_size=batch_size,
                                           shuffle=True, num_workers=num_workers)
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/RECLUSE/ConvIL.py#L50
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/RECLUSE/ConvIL.py#L51
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/RECLUSE/ViT_Classifier.py#L51
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/RECLUSE/ViT_Classifier.py#L56
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/RECLUSE/eval_knn.py#L43
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/RECLUSE/eval_knn.py#L51
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/RECLUSE/extract_features.py#L68
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/RECLUSE/main_moco.py#L297
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/cil_implementations/base.py#L191
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/cil_implementations/base.py#L210
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/cil_implementations/base.py#L262
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/cil_implementations/base.py#L289
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/cil_implementations/base.py#L307
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/cil_implementations/base.py#L359
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/cil_implementations/der.py#L98
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/cil_implementations/der.py#L100
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/cil_implementations/podnet.py#L91
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/cil_implementations/podnet.py#L92
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/cil_implementations/podnet.py#L152

=======================================
https://github.com/nkdinsdale/SFHarmony
=======================================

Found 3 times
DataLoader(total_train_dataset, batch_size=args.batch_size, shuffle=True, num_workers=0)
DataLoader(total_val_dataset, batch_size=args.batch_size, shuffle=False, num_workers=0)
DataLoader(datatset, batch_size=args.batch_size, shuffle=False, num_workers=0)
https://github.com/nkdinsdale/SFHarmony/blob/4fb74723ac0a1dd19823d7883b5531c07f8a36c9/mednist_bhatt_gmm_main.py#L129
https://github.com/nkdinsdale/SFHarmony/blob/4fb74723ac0a1dd19823d7883b5531c07f8a36c9/mednist_bhatt_gmm_main.py#L130
https://github.com/nkdinsdale/SFHarmony/blob/4fb74723ac0a1dd19823d7883b5531c07f8a36c9/mednist_predict_main.py#L86

===================================
https://github.com/wangkaihong/CDAC
===================================

Found 2 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
https://github.com/wangkaihong/CDAC/blob/b30e4190f22ddd828b104c7a37048ea8faf3b6c0/mmseg/datasets/builder.py#L147
https://github.com/wangkaihong/CDAC/blob/b30e4190f22ddd828b104c7a37048ea8faf3b6c0/mmseg/datasets/builder.py#L160

==============================
https://github.com/JimZAI/DETA
==============================

Found 2 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/JimZAI/DETA/blob/12310f32d21d5626ced8ad42ecbee13888bf0c17/deit/main.py#L231
https://github.com/JimZAI/DETA/blob/12310f32d21d5626ced8ad42ecbee13888bf0c17/deit/main.py#L241

==============================
https://github.com/zzwdx/MEDIC
==============================

Found 3 times
DataLoader(dataset=scd, batch_size=sub_batch_size, shuffle=True, drop_last=True, num_workers=1)
DataLoader(dataset=sdd, batch_size=sub_batch_size, shuffle=True, drop_last=True, num_workers=1)
DataLoader(dataset, batch_size=batch_size, shuffle=shuffle, drop_last=drop_last, num_workers=num_workers)
https://github.com/zzwdx/MEDIC/blob/d8356deb9e630f057055536c45ca41ac89504c6f/ml_open.py#L169
https://github.com/zzwdx/MEDIC/blob/d8356deb9e630f057055536c45ca41ac89504c6f/ml_open.py#L175
https://github.com/zzwdx/MEDIC/blob/d8356deb9e630f057055536c45ca41ac89504c6f/dataset/dataloader.py#L72

==================================
https://github.com/wx-zhang/IGCZSL
==================================

Found 3 times
Data.DataLoader(data, batch_size=batch_size)
Data.DataLoader(data, batch_size=batch_size, drop_last=False, shuffle=True)
Data.DataLoader(data, batch_size=batch_size)
https://github.com/wx-zhang/IGCZSL/blob/cbefe5997d5bfc97264271e21b52291d7c27b3e3/src/main.py#L82
https://github.com/wx-zhang/IGCZSL/blob/cbefe5997d5bfc97264271e21b52291d7c27b3e3/src/main.py#L125
https://github.com/wx-zhang/IGCZSL/blob/cbefe5997d5bfc97264271e21b52291d7c27b3e3/src/main.py#L144

===================================
https://github.com/leolyj/3DPC-GZSL
===================================

Found 28 times
torch.utils.data.DataLoader(
            ds, batch_size=args.batchsize, shuffle=False,
            num_workers=args.threads
        )
torch.utils.data.DataLoader(ds, batch_size=config["batch_size"], shuffle=False,
                                             num_workers=config['threads']
                                             )
torch.utils.data.DataLoader(
        ds_test,
        batch_size=_config["test"]["batchsize"],
        shuffle=False,
        num_workers=_config["misc"]["threads"],
    )
torch.utils.data.DataLoader(
        ds,
        batch_size=_config["training"]["batchsize"],
        shuffle=True,
        num_workers=_config["misc"]["threads"],
    )
torch.utils.data.DataLoader(
        ds_test,
        batch_size=_config["training"]["batchsize"],
        shuffle=False,
        num_workers=_config["misc"]["threads"],
    )
torch.utils.data.DataLoader(ds, batch_size=_config['test']['batchsize'],
                shuffle=False, num_workers=_config['misc']['threads'])
torch.utils.data.DataLoader(ds, batch_size=_config['training']['batchsize'], shuffle=True,
                                        num_workers=_config['misc']['threads']
                                        )
torch.utils.data.DataLoader(ds_val, batch_size=_config['training']['batchsize'], shuffle=False,
                                            num_workers=_config['misc']['threads']
                                            )
torch.utils.data.DataLoader(ds, batch_size=_config['test']['batchsize'],
                shuffle=False, num_workers=_config['misc']['threads'])
torch.utils.data.DataLoader(ds, batch_size=_config['training']['batchsize'], shuffle=True,
                                        num_workers=_config['misc']['threads']
                                        )
torch.utils.data.DataLoader(ds_val, batch_size=_config['training']['batchsize'], shuffle=False,
                                        num_workers=_config['misc']['threads']
                                        )
torch.utils.data.DataLoader(ds, batch_size=_config['test']['batchsize'],
                shuffle=False, num_workers=_config['misc']['threads'])
torch.utils.data.DataLoader(ds, batch_size=_config['training']['batchsize'], shuffle=True,
                                        num_workers=_config['misc']['threads']
                                        )
torch.utils.data.DataLoader(ds_val, batch_size=_config['training']['batchsize'], shuffle=False,
                                            num_workers=_config['misc']['threads']
                                            )
torch.utils.data.DataLoader(
        ds_test,
        batch_size=_config["test"]["batchsize"],
        shuffle=False,
        num_workers=_config["misc"]["threads"],
    )
torch.utils.data.DataLoader(
        ds,
        batch_size=_config["training"]["batchsize"],
        shuffle=True,
        num_workers=_config["misc"]["threads"],
    )
torch.utils.data.DataLoader(
        ds_test,
        batch_size=_config["training"]["batchsize"],
        shuffle=False,
        num_workers=_config["misc"]["threads"],
    )
DataLoader(training_dataset,
                                 batch_size=1,
                                 sampler=training_sampler,
                                 collate_fn=SemanticKittiCollate,
                                 num_workers=config.input_threads,
                                 pin_memory=True)
DataLoader(test_dataset,
                             batch_size=1,
                             sampler=test_sampler,
                             collate_fn=SemanticKittiCollate,
                             num_workers=config.input_threads,
                             pin_memory=True)
DataLoader(test_dataset,
                             batch_size=1,
                             sampler=test_sampler,
                             collate_fn=collate_fn,
                             num_workers=config.input_threads,
                             pin_memory=True)
DataLoader(test_dataset,
                             batch_size=1,
                             sampler=test_sampler,
                             collate_fn=collate_fn,
                             num_workers=config.input_threads,
                             pin_memory=True)
DataLoader(test_dataset,
                             batch_size=1,
                             sampler=test_sampler,
                             collate_fn=collate_fn,
                             num_workers=config.input_threads,
                             pin_memory=True)
DataLoader(train_set, batch_size=args.batchsize, shuffle=True,\
                                  num_workers=args.threads)
DataLoader(val_set, batch_size=args.batchsize, shuffle=False,\
                                num_workers=args.threads)
DataLoader(training_dataset,
                                     batch_size=1,
                                     sampler=training_sampler,
                                     collate_fn=SemanticKittiCollate,
                                     num_workers=config.input_threads,
                                     pin_memory=True)
DataLoader(test_dataset,
                                 batch_size=1,
                                 sampler=test_sampler,
                                 collate_fn=SemanticKittiCollate,
                                 num_workers=config.input_threads,
                                 pin_memory=True)
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=args.config["batch_size"], shuffle=True,
            num_workers=args.config['threads']
        )
torch.utils.data.DataLoader(
            validation_dataset,
            batch_size=args.config["batch_size"], shuffle=False,
            num_workers=args.config['threads']
        )
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/convpoint/examples/s3dis/s3dis_seg.py#L317
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/examples/scannet/train.py#L404
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/modelnet40/test.py#L79
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/modelnet40/train.py#L90
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/modelnet40/train.py#L102
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/npm3d/test.py#L88
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/npm3d/train.py#L72
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/npm3d/train.py#L83
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/s3dis/test.py#L91
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/s3dis/train.py#L103
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/s3dis/train.py#L113
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/semantic8/test.py#L99
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/semantic8/train.py#L103
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/semantic8/train.py#L114
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/shapenet/test.py#L77
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/shapenet/train.py#L82
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/fkaconv/legacy_examples/shapenet/train.py#L94
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/kpconv/train_SemanticKitti.py#L270
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/kpconv/train_SemanticKitti.py#L276
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/kpconv/scripts_final_eval/W50/test_zsl_models_bias0.2.py#L191
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/kpconv/scripts_final_eval/W50/test_zsl_models_bias0.2_debug.py#L195
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/kpconv/scripts_final_eval/W50/test_zsl_models_bias0.2_retrained.py#L192
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/seg/dataloaders/__init__.py#L30
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/seg/dataloaders/__init__.py#L36
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/seg/dataloaders/__init__.py#L59
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/seg/dataloaders/__init__.py#L65
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/seg/dataloaders/__init__.py#L93
https://github.com/leolyj/3DPC-GZSL/blob/7cb452b74582e1558904a61bf3c4674840ffbccc/3DGZSL/gzsl3d/seg/dataloaders/__init__.py#L109

===============================
https://github.com/fistyee/MDCS
===============================

Found 6 times
DataLoader(sampler=self.valid_sampler, **self.init_kwargs)
DataLoader(dataset=self.val_dataset, **self.init_kwargs)
DataLoader(dataset=self.val_dataset, **self.init_kwargs)
DataLoader(dataset=self.val_dataset, **self.init_kwargs)
DataLoader(dataset=self.val_dataset, **self.init_kwargs)
DataLoader(dataset=self.eval_dataset, **self.init_kwargs)
https://github.com/fistyee/MDCS/blob/39722ee12c463c9ce6ea0ffecfb9e3c35e3cf15e/base/base_data_loader.py#L61
https://github.com/fistyee/MDCS/blob/39722ee12c463c9ce6ea0ffecfb9e3c35e3cf15e/data_loader/cifar_data_loaders.py#L74
https://github.com/fistyee/MDCS/blob/39722ee12c463c9ce6ea0ffecfb9e3c35e3cf15e/data_loader/cifar_data_loaders.py#L195
https://github.com/fistyee/MDCS/blob/39722ee12c463c9ce6ea0ffecfb9e3c35e3cf15e/data_loader/cifar_data_loaders.py#L290
https://github.com/fistyee/MDCS/blob/39722ee12c463c9ce6ea0ffecfb9e3c35e3cf15e/data_loader/imagenet_lt_data_loaders.py#L185
https://github.com/fistyee/MDCS/blob/39722ee12c463c9ce6ea0ffecfb9e3c35e3cf15e/data_loader/places_loader.py#L160

======================================
https://github.com/Bostoncake/C-VisDiT
======================================

Found 3 times
DataLoader(mixed_dataset, batch_size=self.config.optim_params.batch_size, shuffle=True, num_workers=self.config.data_params.num_workers, drop_last=False)
DataLoader(mixed_dataset, batch_size=self.config.optim_params.batch_size, shuffle=True, num_workers=self.config.data_params.num_workers, drop_last=False)
torch.utils.data.DataLoader(
        dataset,
        batch_size=min(batch_size, len(dataset)),
        num_workers=num_workers,
        shuffle=is_train,
        drop_last=is_train,
        pin_memory=True,
        worker_init_fn=worker_init_seed,
    )
https://github.com/Bostoncake/C-VisDiT/blob/e398c70bbde94dc0758ca0d3ee0b6b0b5e12e7bb/src/agents/CVisDiT.py#L437
https://github.com/Bostoncake/C-VisDiT/blob/e398c70bbde94dc0758ca0d3ee0b6b0b5e12e7bb/src/agents/CVisDiT.py#L474
https://github.com/Bostoncake/C-VisDiT/blob/e398c70bbde94dc0758ca0d3ee0b6b0b5e12e7bb/src/utils/datautils.py#L224

=====================================
https://github.com/Sarinda251/CDFSL-V
=====================================

Found 2 times
torch.utils.data.DataLoader(source_set, batch_size=args.batch_size, num_workers=4, shuffle = True, pin_memory = True, drop_last=True)
torch.utils.data.DataLoader(target_set, batch_size=args.batch_size, num_workers=1, shuffle = True, pin_memory = True, drop_last=True)
https://github.com/Sarinda251/CDFSL-V/blob/f2103b68d177427e83ed33e741275b879d22b618/trainCurr.py#L152
https://github.com/Sarinda251/CDFSL-V/blob/f2103b68d177427e83ed33e741275b879d22b618/trainCurr.py#L156

================================
https://github.com/wuw2019/R-AMT
================================

Found 1 times
torch.utils.data.DataLoader(
        dataset_wrapper(cfg, data_source, transform=tfm, is_train=is_train),
        batch_size=batch_size,
        sampler=sampler,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        drop_last=is_train and len(data_source) >= batch_size,
        pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA)
    )
https://github.com/wuw2019/R-AMT/blob/07f8d2c36670e1fb9498aab169b9f3790ccda66b/code/Dassl.pytorch/dassl/data/data_manager.py#L38

===================================
https://github.com/TamashaM/NAPA-VQ
===================================

Found 18 times
DataLoader(dataset=self.train_dataset,
                                  shuffle=True,
                                  batch_size=self.args.batch_size)
DataLoader(dataset=self.test_dataset,
                                 shuffle=True,
                                 batch_size=self.args.batch_size)
DataLoader(dataset=self.test_dataset,
                                 shuffle=True,
                                 batch_size=self.args.batch_size)
DataLoader(dataset=self.train_dataset,
                                  shuffle=True,
                                  batch_size=self.args.batch_size)
DataLoader(dataset=self.test_dataset,
                                 shuffle=True,
                                 batch_size=self.args.batch_size)
DataLoader(dataset=self.test_dataset,
                                 shuffle=True,
                                 batch_size=self.args.batch_size)
torch.utils.data.DataLoader(trainfolder, batch_size=self.args.batch_size,
                                                        shuffle=True, drop_last=True, num_workers=8)
torch.utils.data.DataLoader(testfolder, batch_size=self.args.batch_size,
                                                       shuffle=False, drop_last=False, num_workers=8)
torch.utils.data.DataLoader(trainfolder, batch_size=self.args.batch_size,
                                                        shuffle=True, drop_last=True, num_workers=4)
torch.utils.data.DataLoader(testfolder, batch_size=self.args.batch_size,
                                                       shuffle=False, drop_last=False, num_workers=4)
DataLoader(dataset=test_dataset,
                                     shuffle=True,
                                     batch_size=args.batch_size)
DataLoader(dataset=test_dataset,
                                 shuffle=True,
                                 batch_size=args.batch_size)
DataLoader(dataset=test_dataset,
                                     shuffle=True,
                                     batch_size=args.batch_size)
DataLoader(dataset=test_dataset,
                                 shuffle=True,
                                 batch_size=args.batch_size)
DataLoader(dataset=test_dataset, shuffle=False, batch_size=args.batch_size, num_workers=8)
DataLoader(dataset=test_dataset, shuffle=False, batch_size=args.batch_size, num_workers=8)
DataLoader(dataset=test_dataset, shuffle=False, batch_size=args.batch_size, num_workers=4)
DataLoader(dataset=test_dataset, shuffle=False, batch_size=args.batch_size, num_workers=4)
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/Finetune.py#L50
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/Finetune.py#L54
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/Finetune.py#L62
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/NAPAVQ.py#L80
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/NAPAVQ.py#L84
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/NAPAVQ.py#L92
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/NAPAVQ_imagenet.py#L81
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/NAPAVQ_imagenet.py#L83
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/NAPAVQ_tiny.py#L84
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/NAPAVQ_tiny.py#L86
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/main_cifar.py#L122
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/main_cifar.py#L168
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/main_finetune.py#L108
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/main_finetune.py#L140
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/main_imagenet.py#L122
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/main_imagenet.py#L162
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/main_tiny.py#L120
https://github.com/TamashaM/NAPA-VQ/blob/43323bd0dea6c494a8a3d8eb8665eb5373399e91/main_tiny.py#L161

==============================
https://github.com/OoDBag/RISE
==============================

Found 9 times
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=4, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=4, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=4, pin_memory=True, drop_last=True)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=4, pin_memory=True, drop_last=False)
https://github.com/OoDBag/RISE/blob/ebf71b4c50fefc0ad5e8129f8fff5adcaacbf451/data/data_helper.py#L44
https://github.com/OoDBag/RISE/blob/ebf71b4c50fefc0ad5e8129f8fff5adcaacbf451/data/data_helper.py#L45
https://github.com/OoDBag/RISE/blob/ebf71b4c50fefc0ad5e8129f8fff5adcaacbf451/data/data_helper.py#L58
https://github.com/OoDBag/RISE/blob/ebf71b4c50fefc0ad5e8129f8fff5adcaacbf451/data/data_helper.py#L86
https://github.com/OoDBag/RISE/blob/ebf71b4c50fefc0ad5e8129f8fff5adcaacbf451/data/data_helper.py#L87
https://github.com/OoDBag/RISE/blob/ebf71b4c50fefc0ad5e8129f8fff5adcaacbf451/data/data_helper.py#L99
https://github.com/OoDBag/RISE/blob/ebf71b4c50fefc0ad5e8129f8fff5adcaacbf451/data/.ipynb_checkpoints/data_helper-checkpoint.py#L81
https://github.com/OoDBag/RISE/blob/ebf71b4c50fefc0ad5e8129f8fff5adcaacbf451/data/.ipynb_checkpoints/data_helper-checkpoint.py#L82
https://github.com/OoDBag/RISE/blob/ebf71b4c50fefc0ad5e8129f8fff5adcaacbf451/data/.ipynb_checkpoints/data_helper-checkpoint.py#L97

==========================================================
https://github.com/ZhangLab-DeepNeuroCogLab/Learning2Learn
==========================================================

Found 1 times
DataLoader(_data, batch_size=64,
                               shuffle=True, num_workers=0)
https://github.com/ZhangLab-DeepNeuroCogLab/Learning2Learn/blob/81401c1e32fee69c70d707e797c90e63285f128b/continual baselines/utils/custom_datasets.py#L1032

=======================================
https://github.com/moonjunyyy/Si-Blurry
=======================================

Found 13 times
DataLoader(train_dataset, batch_size=self.batchsize, sampler=self.train_sampler, num_workers=self.n_worker, pin_memory=True)
DataLoader(self.test_dataset, batch_size=self.batchsize, shuffle=False, num_workers=self.n_worker, pin_memory=True)
DataLoader(self.test_dataset, batch_size=self.batchsize*2, sampler=test_sampler, num_workers=self.n_worker)
DataLoader(self.test_dataset, batch_size=self.batchsize*2, sampler=test_sampler, num_workers=self.n_worker)
DataLoader(train_dataset,batch_size=self.batchsize,sampler=train_sampler,num_workers=4)
DataLoader(self.train_dataset, batch_size=self.memory_batchsize, sampler=self.memory_sampler, num_workers=0)
DataLoader(self.loss_update_dataset, batch_size=self.memory_batchsize, sampler=memory_ordered_sampler, num_workers=0)
DataLoader(self.train_dataset, batch_size=self.memory_batchsize, sampler=self.memory_sampler, num_workers=4)
DataLoader(self.train_dataset, batch_size=self.memory_batchsize, sampler=self.memory_sampler, num_workers=4)
DataLoader(self.train_dataset, batch_size=self.memory_batchsize, sampler=self.memory_sampler, num_workers=0, pin_memory=True)
DataLoader(self.train_dataset, batch_size=self.batchsize, sampler=self.memory_sampler, num_workers=4, pin_memory=True)
DataLoader(self.loss_update_dataset, batch_size=self.batchsize, sampler=self.memory_sampler, num_workers=4, pin_memory=True)
DataLoader(
            infer_dataset, shuffle=False, batch_size=batch_size, num_workers=2
        )
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/_trainer.py#L227
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/_trainer.py#L228
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/_trainer.py#L257
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/_trainer.py#L275
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/_trainer.py#L447
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/clib.py#L52
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/clib.py#L223
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/er_baseline.py#L31
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/mvp.py#L43
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/rainbow_memory.py#L42
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/rainbow_memory.py#L135
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/rainbow_memory.py#L139
https://github.com/moonjunyyy/Si-Blurry/blob/c4024cea223cf68da3fe9a43e01663d4433e9b72/methods/rainbow_memory.py#L227

=================================
https://github.com/JiahuaDong/HFC
=================================

Found 6 times
torch.utils.data.DataLoader(
                dataset_train, sampler=sampler_train,
                batch_size=args.batch_size,
                num_workers=8,
                pin_memory=True,
                drop_last=True,
            )
torch.utils.data.DataLoader(
                dataset_val, sampler=sampler_val,
                batch_size=int(1.5 * args.batch_size),
            )
torch.utils.data.DataLoader(
        dataset,
        batch_size=128,
        num_workers=2,
        pin_memory=True,
        drop_last=False,
        shuffle=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=None if (finetuning and args.ft_no_sampling) else sampler_train,
        batch_size=args.batch_size,
        num_workers=8,
        pin_memory=True,
        drop_last=len(sampler_train) > args.batch_size,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=8,
        pin_memory=True,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=batch_size,
        num_workers=8,
        pin_memory=True,
        drop_last=drop_last,
    )
https://github.com/JiahuaDong/HFC/blob/b70d2a968debce9c15e00ebfe8908a4e9d0559a6/main.py#L94
https://github.com/JiahuaDong/HFC/blob/b70d2a968debce9c15e00ebfe8908a4e9d0559a6/main.py#L102
https://github.com/JiahuaDong/HFC/blob/b70d2a968debce9c15e00ebfe8908a4e9d0559a6/rehearsal.py#L184
https://github.com/JiahuaDong/HFC/blob/b70d2a968debce9c15e00ebfe8908a4e9d0559a6/utils.py#L43
https://github.com/JiahuaDong/HFC/blob/b70d2a968debce9c15e00ebfe8908a4e9d0559a6/utils.py#L51
https://github.com/JiahuaDong/HFC/blob/b70d2a968debce9c15e00ebfe8908a4e9d0559a6/utils.py#L67

=========================================
https://github.com/mingzeG/Moment-Probing
=========================================

Found 1 times
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
https://github.com/mingzeG/Moment-Probing/blob/0ddc0400e7f5210939f27b4d0ab14cfb5baec795/utils/utils.py#L135

====================================================
https://github.com/Aaditya-Singh/Low-Shot-Robustness
====================================================

Found 5 times
torch.utils.data.DataLoader(
        dataset,
        sampler=dist_sampler,
        batch_size=batch_size,
        drop_last=drop_last,
        pin_memory=pin_mem,
        num_workers=num_workers)
torch.utils.data.DataLoader(
        test_dataset,
        sampler=dist_sampler,
        batch_size=batch_size,
        drop_last=drop_last,
        pin_memory=pin_mem,
        num_workers=num_workers)
torch.utils.data.DataLoader(
            self.train_dataset,
            sampler=sampler,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            pin_memory=True,
            drop_last=True,
            **kwargs,
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            pin_memory=True,
            drop_last=True,
            sampler=self.get_test_sampler()
        )
torch.utils.data.DataLoader(
        dataset,
        sampler=dist_sampler,
        batch_size=batch_size,
        drop_last=drop_last,
        pin_memory=pin_mem,
        num_workers=num_workers)
https://github.com/Aaditya-Singh/Low-Shot-Robustness/blob/622273cf05a30822f484b540216d1a401d644247/src/data_manager.py#L74
https://github.com/Aaditya-Singh/Low-Shot-Robustness/blob/622273cf05a30822f484b540216d1a401d644247/src/objectnet.py#L39
https://github.com/Aaditya-Singh/Low-Shot-Robustness/blob/622273cf05a30822f484b540216d1a401d644247/src/objectnet.py#L128
https://github.com/Aaditya-Singh/Low-Shot-Robustness/blob/622273cf05a30822f484b540216d1a401d644247/src/objectnet.py#L140
https://github.com/Aaditya-Singh/Low-Shot-Robustness/blob/622273cf05a30822f484b540216d1a401d644247/src/wilds_loader.py#L44

===============================
https://github.com/Ze-Yang/LGKD
===============================

Found 3 times
data.DataLoader(
        train_dst,
        batch_size=opts.batch_size,
        sampler=DistributedSampler(train_dst, num_replicas=world_size, rank=rank),
        num_workers=opts.num_workers,
        drop_last=True
    )
data.DataLoader(
        val_dst,
        batch_size=opts.batch_size if opts.crop_val else 1,
        sampler=DistributedSampler(val_dst, num_replicas=world_size, rank=rank),
        num_workers=opts.num_workers
    )
data.DataLoader(test_dst, batch_size=opts.batch_size if opts.crop_val else 1,
                                  sampler=DistributedSampler(test_dst, num_replicas=world_size, rank=rank),
                                  num_workers=opts.num_workers)
https://github.com/Ze-Yang/LGKD/blob/78262c22043fe9d56261d1906a04c016b82930b5/run.py#L177
https://github.com/Ze-Yang/LGKD/blob/78262c22043fe9d56261d1906a04c016b82930b5/run.py#L184
https://github.com/Ze-Yang/LGKD/blob/78262c22043fe9d56261d1906a04c016b82930b5/run.py#L190

====================================
https://github.com/astra-vision/PODA
====================================

Found 3 times
data.DataLoader(
        train_dst, batch_size=opts.batch_size, shuffle=True, num_workers=0,
        drop_last=False)
data.DataLoader(
        train_dst, batch_size=opts.batch_size, shuffle=True, num_workers=4,
    drop_last=True)
data.DataLoader(
        val_dst, batch_size=opts.val_batch_size, shuffle=True, num_workers=4)
https://github.com/astra-vision/PODA/blob/2a7e4bc38055e279734fabfaf8ea8572d553be09/PIN_aug.py#L188
https://github.com/astra-vision/PODA/blob/2a7e4bc38055e279734fabfaf8ea8572d553be09/main.py#L248
https://github.com/astra-vision/PODA/blob/2a7e4bc38055e279734fabfaf8ea8572d553be09/main.py#L252

============================
https://github.com/tsun/LADA
============================

Found 18 times
torch.utils.data.DataLoader(self.query_dset, sampler=train_sampler,
                                                  num_workers=self.cfg.DATALOADER.NUM_WORKERS,
                                                  batch_size=self.cfg.DATALOADER.BATCH_SIZE, drop_last=False)
torch.utils.data.DataLoader(self.query_dset, sampler=train_sampler,
                                                  num_workers=self.cfg.DATALOADER.NUM_WORKERS,
                                                  batch_size=self.cfg.DATALOADER.BATCH_SIZE, drop_last=False)
torch.utils.data.DataLoader(self.query_dset, sampler=train_sampler, num_workers=self.cfg.DATALOADER.NUM_WORKERS,
                                                  batch_size=self.cfg.DATALOADER.BATCH_SIZE, drop_last=False)
torch.utils.data.DataLoader(target_train_dset, sampler=train_sampler,
                                                         num_workers=self.cfg.DATALOADER.NUM_WORKERS, \
                                                         batch_size=self.cfg.DATALOADER.BATCH_SIZE, drop_last=False)
torch.utils.data.DataLoader(target_train_dset, shuffle=True,
                                                           num_workers=self.cfg.DATALOADER.NUM_WORKERS, \
                                                           batch_size=self.cfg.DATALOADER.BATCH_SIZE, drop_last=False)
DataLoader(target_train_dset, sampler=train_sampler,
                                                     num_workers=self.cfg.DATALOADER.NUM_WORKERS, \
                                                     batch_size=self.cfg.DATALOADER.BATCH_SIZE, drop_last=False)
DataLoader(target_train_dset, sampler=train_sampler,
                                                     num_workers=self.cfg.DATALOADER.NUM_WORKERS, \
                                                     batch_size=self.cfg.DATALOADER.BATCH_SIZE*self.cfg.DATALOADER.TGT_UNSUP_BS_MUL,
                                                     drop_last=False)
DataLoader(joint_train_ds, batch_size=self.cfg.DATALOADER.BATCH_SIZE, shuffle=True,
                                          drop_last=False, num_workers=self.cfg.DATALOADER.NUM_WORKERS)
torch.utils.data.DataLoader(self.query_dset, sampler=train_sampler,
                                                           num_workers=self.cfg.DATALOADER.NUM_WORKERS,
                                                           batch_size=self.cfg.DATALOADER.BATCH_SIZE, drop_last=False)
torch.utils.data.DataLoader(self.query_dset, sampler=train_sampler, num_workers=4, batch_size=64,
                                                  drop_last=False)
torch.utils.data.DataLoader(self.query_dset, sampler=train_sampler, num_workers=self.cfg.DATALOADER.NUM_WORKERS,
                                                  batch_size=self.cfg.DATALOADER.BATCH_SIZE, drop_last=False)
torch.utils.data.DataLoader(self.query_dset, sampler=train_sampler, num_workers=self.cfg.DATALOADER.NUM_WORKERS, \
                                                  batch_size=self.cfg.DATALOADER.BATCH_SIZE, drop_last=False)
torch.utils.data.DataLoader(dataset, sampler=train_sampler,
                                                         num_workers=subsetRandomLoader.num_workers,
                                                         batch_size=batch_size, drop_last=False)
torch.utils.data.DataLoader(self.train_dataset, sampler=train_sampler, \
                                                   batch_size=self.batch_size, num_workers=self.num_workers)
torch.utils.data.DataLoader(self.valid_dataset, sampler=valid_sampler, batch_size=self.batch_size,
                                                 num_workers=self.num_workers)
torch.utils.data.DataLoader(self.test_dataset, batch_size=self.batch_size, num_workers=self.num_workers)
torch.utils.data.DataLoader(seed_dataset, shuffle=True,
                                          batch_size=self.tgt_sup_loader.batch_size, num_workers=self.tgt_sup_loader.num_workers)
torch.utils.data.DataLoader(seed_dataset, shuffle=True,
                                          batch_size=self.tgt_sup_loader.batch_size, num_workers=self.tgt_sup_loader.num_workers)
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/LASsampler.py#L22
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/MHPsampler.py#L24
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/sampler.py#L86
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/sampler.py#L140
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/sampler.py#L143
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/sampler.py#L177
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/sampler.py#L181
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/sampler.py#L193
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/sampler.py#L215
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/sampler.py#L337
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/sampler.py#L379
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/sampler.py#L469
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/active/utils.py#L14
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/dataset/ASDADataset.py#L78
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/dataset/ASDADataset.py#L80
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/dataset/ASDADataset.py#L82
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/solver/PAAsolver.py#L34
https://github.com/tsun/LADA/blob/5de718ecd0b1eccc337ff54d4cd854ffb580d7e2/solver/PAAsolver.py#L156

=================================
https://github.com/simplify23/MRN
=================================

Found 10 times
torch.utils.data.DataLoader(
            eval_data,
            batch_size=eval_batch_size,
            shuffle=False,
            num_workers=int(opt.workers),
            collate_fn=AlignCollate_eval,
            pin_memory=True,
        )
torch.utils.data.DataLoader(
                eval_data,
                batch_size=opt.batch_size,
                shuffle=False,
                num_workers=int(opt.workers),
                collate_fn=AlignCollate_eval,
                pin_memory=True,
            )
torch.utils.data.DataLoader(
            valid_dataset,
            batch_size=opt.batch_size,
            shuffle=True,  # 'True' to check training progress with validation function.
            num_workers=int(opt.workers),
            collate_fn=AlignCollate_valid,
            pin_memory=False,
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=self.opt.batch_size,
            shuffle=False,
            num_workers=int(self.opt.workers),
            collate_fn=AlignCollate(self.opt),
            pin_memory=False,
            drop_last=False,
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=self.opt.batch_size if batch_size==None else batch_size,
            shuffle=True,
            num_workers=int(self.opt.workers),
            collate_fn=AlignCollate(self.opt),
            pin_memory=False,
            drop_last=False,
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=self.opt.batch_size if batch_size==None else batch_size,
            shuffle=True,
            num_workers=int(self.opt.workers),
            collate_fn=AlignCollate2(self.opt),
            pin_memory=False,
            drop_last=False,
        )
torch.utils.data.DataLoader(
            valid_dataset,
            batch_size=self.opt.batch_size,
            shuffle=True,  # 'True' to check training progress with validation function.
            num_workers=int(self.opt.workers),
            collate_fn=self.AlignCollate_valid,
            pin_memory=False,
        )
torch.utils.data.DataLoader(
            val_data,
            batch_size=self.opt.batch_size,
            shuffle=True,  # 'True' to check training progress with validation function.
            num_workers=int(self.opt.workers),
            collate_fn=self.AlignCollate_valid,
            pin_memory=False,
        )
torch.utils.data.DataLoader(
                valid_dataset,
                batch_size=self.opt.batch_size,
                shuffle=True,  # 'True' to check training progress with validation function.
                num_workers=int(self.opt.workers),
                collate_fn=AlignCollate_valid,
                pin_memory=False,
            )
torch.utils.data.DataLoader(
                valid_dataset,
                batch_size=self.opt.batch_size,
                shuffle=True,  # 'True' to check training progress with validation function.
                num_workers=int(self.opt.workers),
                collate_fn=AlignCollate_valid,
                pin_memory=False,
            )
https://github.com/simplify23/MRN/blob/8cc76aeb749ec331f9a9a83d24f60029a015d920/test.py#L78
https://github.com/simplify23/MRN/blob/8cc76aeb749ec331f9a9a83d24f60029a015d920/test.py#L362
https://github.com/simplify23/MRN/blob/8cc76aeb749ec331f9a9a83d24f60029a015d920/tiny_train.py#L372
https://github.com/simplify23/MRN/blob/8cc76aeb749ec331f9a9a83d24f60029a015d920/data/data_manage.py#L116
https://github.com/simplify23/MRN/blob/8cc76aeb749ec331f9a9a83d24f60029a015d920/data/data_manage.py#L149
https://github.com/simplify23/MRN/blob/8cc76aeb749ec331f9a9a83d24f60029a015d920/data/data_manage.py#L162
https://github.com/simplify23/MRN/blob/8cc76aeb749ec331f9a9a83d24f60029a015d920/data/data_manage.py#L237
https://github.com/simplify23/MRN/blob/8cc76aeb749ec331f9a9a83d24f60029a015d920/data/data_manage.py#L261
https://github.com/simplify23/MRN/blob/8cc76aeb749ec331f9a9a83d24f60029a015d920/il_modules/base.py#L381
https://github.com/simplify23/MRN/blob/8cc76aeb749ec331f9a9a83d24f60029a015d920/il_modules/mrn.py#L472

======================================================
https://github.com/tianyu139/tangent-model-composition
======================================================

Found 2 times
torch.utils.data.DataLoader(trainset, batch_size=args.bs, shuffle=True, **loader_args)
torch.utils.data.DataLoader(testset, batch_size=args.bs, shuffle=False, **loader_args)
https://github.com/tianyu139/tangent-model-composition/blob/be38b3d337387ff113125d0d201653839d1d6fc2/main.py#L40
https://github.com/tianyu139/tangent-model-composition/blob/be38b3d337387ff113125d0d201653839d1d6fc2/main.py#L41

===================================
https://github.com/zhengxuJosh/DATR
===================================

Found 32 times
data.DataLoader(train_DensePASS, batch_size=1, shuffle=False, pin_memory=True)
torch.utils.data.DataLoader(syn_dataset,batch_size=args.batch_size,sampler=syn_train_sampler,num_workers=12,worker_init_fn=lambda x: random.seed(time.time() + x),drop_last=True,)
torch.utils.data.DataLoader(syn_val,batch_size=1,num_workers=1,pin_memory=True)
torch.utils.data.DataLoader(syn_test,batch_size=1,num_workers=1,pin_memory=True)
torch.utils.data.DataLoader(pass_train,batch_size=args.batch_size,sampler=pass_train_sampler,num_workers=12,worker_init_fn=lambda x: random.seed(time.time() + x),drop_last=True,)
torch.utils.data.DataLoader(pass_dataset, batch_size=1, shuffle=True, num_workers=1,
                                        pin_memory=True)
torch.utils.data.DataLoader(syn_dataset,batch_size=args.batch_size,sampler=syn_train_sampler,num_workers=12,worker_init_fn=lambda x: random.seed(time.time() + x),drop_last=True,)
torch.utils.data.DataLoader(syn_val,batch_size=1,num_workers=1,pin_memory=True)
torch.utils.data.DataLoader(syn_test,batch_size=1,num_workers=1,pin_memory=True)
torch.utils.data.DataLoader(pass_train,batch_size=args.batch_size,sampler=pass_train_sampler,num_workers=12,worker_init_fn=lambda x: random.seed(time.time() + x),drop_last=True,)
torch.utils.data.DataLoader(pass_dataset, batch_size=1, shuffle=True, num_workers=1,
                                        pin_memory=True)
torch.utils.data.DataLoader(syn_dataset,batch_size=args.batch_size,sampler=syn_train_sampler,num_workers=12,worker_init_fn=lambda x: random.seed(time.time() + x),drop_last=True,)
torch.utils.data.DataLoader(syn_val,batch_size=1,num_workers=1,pin_memory=True)
torch.utils.data.DataLoader(syn_test,batch_size=1,num_workers=1,pin_memory=True)
torch.utils.data.DataLoader(pass_dataset, batch_size=1, shuffle=True, num_workers=1,
                                        pin_memory=True)
torch.utils.data.DataLoader(syn_dataset,batch_size=args.batch_size,sampler=syn_train_sampler,num_workers=12,worker_init_fn=lambda x: random.seed(time.time() + x),drop_last=True,)
torch.utils.data.DataLoader(syn_val,batch_size=1,num_workers=1,pin_memory=True)
torch.utils.data.DataLoader(syn_test,batch_size=1,num_workers=1,pin_memory=True)
torch.utils.data.DataLoader(pass_dataset, batch_size=1, shuffle=True, num_workers=1,
                                        pin_memory=True)
data.DataLoader(dst, batch_size=4)
data.DataLoader(dst, batch_size=4)
data.DataLoader(dst, batch_size=4)
data.DataLoader(dst, batch_size=4)
data.DataLoader(dst, batch_size=4)
data.DataLoader(dst, batch_size=4)
data.DataLoader(dst, batch_size=4)
data.DataLoader(dst, batch_size=4)
data.DataLoader(dst, batch_size=4)
data.DataLoader(dst, batch_size=4)
data.DataLoader(dst, batch_size=4)
data.DataLoader(dst, batch_size=4)
data.DataLoader(dst, batch_size=4)
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/gen_pl.py#L18
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/ss_cfa_syn.py#L130
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/ss_cfa_syn.py#L134
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/ss_cfa_syn.py#L138
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/ss_cfa_syn.py#L148
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/ss_cfa_syn.py#L151
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/ss_syn.py#L97
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/ss_syn.py#L101
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/ss_syn.py#L105
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/ss_syn.py#L115
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/ss_syn.py#L118
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/sup_syn.py#L96
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/sup_syn.py#L100
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/sup_syn.py#L104
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/sup_syn.py#L111
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/sup_syn22.py#L97
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/sup_syn22.py#L101
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/sup_syn22.py#L105
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/sup_syn22.py#L112
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/densepass_dataset.py#L64
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/cs13_dataset_src.py#L78
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/cs_dataset_src.py#L63
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/densepass_dataset.py#L134
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/dp13_dataset.py#L148
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/dp13_dataset_ss.py#L171
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/s3d8_dataset.py#L78
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/sp13_dataset.py#L80
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/sp22_dataset.py#L81
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/stanford_pan8_dataset.py#L197
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/stanford_pan_dataset.py#L177
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/stanford_pin8_dataset.py#L118
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/stanford_pin_dataset.py#L107

==============================
https://github.com/buerzlh/HMA
==============================

Found 2 times
torch.utils.data.DataLoader(self.dataset, 
                         batch_sampler=batch_sampler,
                         collate_fn=collate_fn,
                         num_workers=int(self.num_workers))
torch.utils.data.DataLoader(self.dataset, 
                         batch_sampler=batch_sampler,
                         num_workers=int(num_workers))
https://github.com/buerzlh/HMA/blob/82bc95de998041f6f8e6f964d1d3a1650c6928cd/data/class_aware_dataset_dataloader.py#L65
https://github.com/buerzlh/HMA/blob/82bc95de998041f6f8e6f964d1d3a1650c6928cd/data/custom_dataset_dataloader.py#L37

===================================
https://github.com/witdsl/KRT-MLCIL
===================================

Found 2 times
torch.utils.data.DataLoader(train_dataset, batch_size=self.batch_size,
                                                         num_workers=self.num_workers)
torch.utils.data.DataLoader(dataset, batch_size=batch_size,
                                             num_workers=num_workers, pin_memory=(phase == 'train'), sampler=sampler)
https://github.com/witdsl/KRT-MLCIL/blob/a5438edeee726943b0d3a82b552c22c6692b9622/MLCIL-ICCV2023/MultiLabelIncremental_baseline.py#L389
https://github.com/witdsl/KRT-MLCIL/blob/a5438edeee726943b0d3a82b552c22c6692b9622/MLCIL-ICCV2023/src/helper_functions/IncrementalDataset.py#L47

==============================================================
https://github.com/Aladoro/SimpleMetaLearner4ContinualLearning
==============================================================

Found 8 times
torch.utils.data.DataLoader(dataset_test, batch_size=evaluation_batch_size,
                                                shuffle=True, num_workers=1)
torch.utils.data.DataLoader(dataset_train, batch_size=evaluation_batch_size,
                                                 shuffle=True, num_workers=1)
torch.utils.data.DataLoader(dataset,
            batch_size=self.all_tasks_batch_size, shuffle=True, num_workers=1)
torch.utils.data.DataLoader(
                dataset, batch_size=self.batch_size, shuffle=True, num_workers=1)
torch.utils.data.DataLoader(
                dataset, batch_size=self.validation_batch_size, shuffle=True, num_workers=1)
torch.utils.data.DataLoader(
            filtered_dataset_train, batch_size=training_batch_size,
            shuffle=False, num_workers=1)
torch.utils.data.DataLoader(
            filtered_dataset_train, batch_size=evaluation_batch_size,
            shuffle=True, num_workers=1)
torch.utils.data.DataLoader(
            filtered_dataset_test, batch_size=evaluation_batch_size,
            shuffle=True, num_workers=1)
https://github.com/Aladoro/SimpleMetaLearner4ContinualLearning/blob/0f7e1782f95392118e9917b71af41b4c16313138/training_function.py#L61
https://github.com/Aladoro/SimpleMetaLearner4ContinualLearning/blob/0f7e1782f95392118e9917b71af41b4c16313138/training_function.py#L64
https://github.com/Aladoro/SimpleMetaLearner4ContinualLearning/blob/0f7e1782f95392118e9917b71af41b4c16313138/datasets/task_sampler.py#L79
https://github.com/Aladoro/SimpleMetaLearner4ContinualLearning/blob/0f7e1782f95392118e9917b71af41b4c16313138/datasets/task_sampler.py#L87
https://github.com/Aladoro/SimpleMetaLearner4ContinualLearning/blob/0f7e1782f95392118e9917b71af41b4c16313138/datasets/task_sampler.py#L91
https://github.com/Aladoro/SimpleMetaLearner4ContinualLearning/blob/0f7e1782f95392118e9917b71af41b4c16313138/datasets/utils.py#L44
https://github.com/Aladoro/SimpleMetaLearner4ContinualLearning/blob/0f7e1782f95392118e9917b71af41b4c16313138/datasets/utils.py#L48
https://github.com/Aladoro/SimpleMetaLearner4ContinualLearning/blob/0f7e1782f95392118e9917b71af41b4c16313138/datasets/utils.py#L52

==================================
https://github.com/chen-xw/DRC-CIL
==================================

Found 17 times
DataLoader(idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(class_dset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(class_dset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(exemplar_dset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(train_dataset, batch_size=self.args['batch_size'], shuffle=True, num_workers=self.args["num_workers"])
DataLoader(test_dataset, batch_size=self.args['batch_size'], shuffle=False, num_workers=self.args["num_workers"])
DataLoader(test_dataset, batch_size=self.args['batch_size'], shuffle=False, num_workers=self.args["num_workers"])
DataLoader(train_dataset, batch_size=self.args['batch_size'], shuffle=True, num_workers=self.args["num_workers"])
DataLoader(train_dataset, batch_size=self.args['batch_size'], shuffle=True, num_workers=self.args["num_workers"])
DataLoader(test_dataset, batch_size=self.args['batch_size'], shuffle=False, num_workers=self.args["num_workers"])
DataLoader(test_dataset, batch_size=self.args['batch_size'], shuffle=False, num_workers=self.args["num_workers"])
DataLoader(train_dataset, batch_size=self.args['batch_size'], shuffle=True, num_workers=self.args["num_workers"])
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/base.py#L168
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/base.py#L186
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/base.py#L196
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/base.py#L218
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/base.py#L231
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/base.py#L261
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/base.py#L280
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/base.py#L292
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/base.py#L322
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/mafdrc.py#L51
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/mafdrc.py#L54
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/mafdrc.py#L73
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/mafdrc.py#L215
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/mafdrc_imagenet.py#L51
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/mafdrc_imagenet.py#L54
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/mafdrc_imagenet.py#L73
https://github.com/chen-xw/DRC-CIL/blob/67a070efb027bfa26713722f900e8de5af6d9db8/models/mafdrc_imagenet.py#L215

===================================
https://github.com/weilllllls/OnPro
===================================

Found 8 times
torch.utils.data.DataLoader(dataset[data_type], batch_size=1, shuffle=False)
torch.utils.data.DataLoader(
            dataset_new_train,
            batch_size=batch_size,
            shuffle=True,
            num_workers=n_workers,
        )
torch.utils.data.DataLoader(
            dataset_new_test,
            batch_size=64,
            shuffle=True,
            num_workers=n_workers,
        )
torch.utils.data.DataLoader(dat[s], batch_size=1, shuffle=False)
torch.utils.data.DataLoader(
            dataset_new_train,
            batch_size=batch_size,
            shuffle=True,
            num_workers=n_workers,
        )
torch.utils.data.DataLoader(
            dataset_new_test,
            batch_size=64,
            shuffle=True,
            num_workers=n_workers,
        )
DataLoader(train_dataset, batch_size=64, shuffle=True)
DataLoader(test_dataset, batch_size=64,
                                                                                  shuffle=True)
https://github.com/weilllllls/OnPro/blob/a92f8ae22ad798b217a1041d208036c62f98442d/experiment/dataset.py#L50
https://github.com/weilllllls/OnPro/blob/a92f8ae22ad798b217a1041d208036c62f98442d/experiment/dataset.py#L87
https://github.com/weilllllls/OnPro/blob/a92f8ae22ad798b217a1041d208036c62f98442d/experiment/dataset.py#L93
https://github.com/weilllllls/OnPro/blob/a92f8ae22ad798b217a1041d208036c62f98442d/experiment/dataset.py#L133
https://github.com/weilllllls/OnPro/blob/a92f8ae22ad798b217a1041d208036c62f98442d/experiment/dataset.py#L169
https://github.com/weilllllls/OnPro/blob/a92f8ae22ad798b217a1041d208036c62f98442d/experiment/dataset.py#L175
https://github.com/weilllllls/OnPro/blob/a92f8ae22ad798b217a1041d208036c62f98442d/experiment/tinyimagenet.py#L126
https://github.com/weilllllls/OnPro/blob/a92f8ae22ad798b217a1041d208036c62f98442d/experiment/tinyimagenet.py#L126

================================
https://github.com/BIT-DA/BorLan
================================

Found 7 times
DataLoader(
            labeled_dataset,
            sampler=RandomSampler(labeled_dataset),
            batch_size=batch_size_dict["train"],
            num_workers=4,
            drop_last=True)
DataLoader(
            unlabeled_dataset,
            sampler=RandomSampler(unlabeled_dataset),
            batch_size=batch_size_dict["unlabeled_train"],
            num_workers=4,
            drop_last=True)
DataLoader(
            unlabeled_dataset,
            batch_size=batch_size_dict["test"],
            shuffle=False,
            num_workers=4)
DataLoader(
            test_dataset,
            batch_size=batch_size_dict["test"],
            shuffle=False,
            num_workers=4)
DataLoader(datasets[x], batch_size=batch_size_dict[x], shuffle=True, num_workers=4)
DataLoader(datasets["unlabeled_train"], batch_size=batch_size_dict['test'], shuffle=False, num_workers=4)
DataLoader(datasets["test" + str(i)], batch_size=4, shuffle=False, num_workers=4)
https://github.com/BIT-DA/BorLan/blob/247c90805035914a54470907610d9334356ab6c9/src/utils.py#L20
https://github.com/BIT-DA/BorLan/blob/247c90805035914a54470907610d9334356ab6c9/src/utils.py#L27
https://github.com/BIT-DA/BorLan/blob/247c90805035914a54470907610d9334356ab6c9/src/utils.py#L34
https://github.com/BIT-DA/BorLan/blob/247c90805035914a54470907610d9334356ab6c9/src/utils.py#L41
https://github.com/BIT-DA/BorLan/blob/247c90805035914a54470907610d9334356ab6c9/src/utils.py#L67
https://github.com/BIT-DA/BorLan/blob/247c90805035914a54470907610d9334356ab6c9/src/utils.py#L69
https://github.com/BIT-DA/BorLan/blob/247c90805035914a54470907610d9334356ab6c9/src/utils.py#L70

=================================================================
https://github.com/gyhandy/Channel-wise-Lightweight-Reprogramming
=================================================================

Found 2 times
DataLoader(train_dataset, batch_size=batch_size, shuffle=shuffle)
DataLoader(val_dataset, batch_size=test_batch_size, shuffle=shuffle)
https://github.com/gyhandy/Channel-wise-Lightweight-Reprogramming/blob/bb878b3bfb17b48d0d87442f7aeb0a790da630be/dataset/dataloader_reader.py#L50
https://github.com/gyhandy/Channel-wise-Lightweight-Reprogramming/blob/bb878b3bfb17b48d0d87442f7aeb0a790da630be/dataset/dataloader_reader.py#L54

=======================================
https://github.com/drimpossible/EvalOCL
=======================================

Found 5 times
DataLoader(train_dataset, shuffle=False, drop_last=False, num_workers=opt.num_workers, batch_size=opt.train_batch_size, pin_memory=True)
DataLoader(test_dataset, shuffle=False, drop_last=False, num_workers=opt.num_workers, batch_size=opt.test_batch_size, pin_memory=True)
DataLoader(test_dataset, shuffle=False, drop_last=False, num_workers=opt.num_workers, batch_size=opt.test_batch_size, pin_memory=True)
DataLoader(train_dataset, shuffle=False, drop_last=False, num_workers=opt.num_workers, batch_size=opt.train_batch_size, pin_memory=True)
DataLoader(dataset, shuffle=False, drop_last=False, num_workers=opt.num_workers, batch_size=opt.test_batch_size, pin_memory=True)
https://github.com/drimpossible/EvalOCL/blob/670e2017c576621745f6ad26aae95984cfacc651/src/main.py#L59
https://github.com/drimpossible/EvalOCL/blob/670e2017c576621745f6ad26aae95984cfacc651/src/main.py#L60
https://github.com/drimpossible/EvalOCL/blob/670e2017c576621745f6ad26aae95984cfacc651/src/main.py#L151
https://github.com/drimpossible/EvalOCL/blob/670e2017c576621745f6ad26aae95984cfacc651/src/main.py#L187
https://github.com/drimpossible/EvalOCL/blob/670e2017c576621745f6ad26aae95984cfacc651/src/main.py#L220

=================================
https://github.com/nankepan/VIPMT
=================================

Found 3 times
DataLoader(test_dataset, batch_size=args.batch_size, num_workers=0)
DataLoader(traindataset, batch_sampler=batch_sampler_train, num_workers=args.num_workers)
DataLoader(validdataset, batch_size=1, shuffle=False, num_workers=2)
https://github.com/nankepan/VIPMT/blob/24c1a36e9f3f4ab4eb70a77a044ee6c81b70c38b/test.py#L93
https://github.com/nankepan/VIPMT/blob/24c1a36e9f3f4ab4eb70a77a044ee6c81b70c38b/train.py#L98
https://github.com/nankepan/VIPMT/blob/24c1a36e9f3f4ab4eb70a77a044ee6c81b70c38b/train.py#L100

===============================
https://github.com/djukicn/loca
===============================

Found 3 times
DataLoader(
            test,
            sampler=DistributedSampler(test),
            batch_size=args.batch_size,
            drop_last=False,
            num_workers=args.num_workers
        )
DataLoader(
        train,
        sampler=DistributedSampler(train),
        batch_size=args.batch_size,
        drop_last=True,
        num_workers=args.num_workers
    )
DataLoader(
        val,
        sampler=DistributedSampler(val),
        batch_size=args.batch_size,
        drop_last=False,
        num_workers=args.num_workers
    )
https://github.com/djukicn/loca/blob/45433064e36e48e491b430f6126f439d77a9aa3c/evaluate.py#L52
https://github.com/djukicn/loca/blob/45433064e36e48e491b430f6126f439d77a9aa3c/train.py#L97
https://github.com/djukicn/loca/blob/45433064e36e48e491b430f6126f439d77a9aa3c/train.py#L104

==================================
https://github.com/FushengHao/CPEA
==================================

Found 3 times
DataLoader(dataset=trainset, batch_sampler=train_sampler, num_workers=8, pin_memory=True)
DataLoader(dataset=valset, batch_sampler=val_sampler, num_workers=8, pin_memory=True)
DataLoader(test_set, batch_sampler=sampler, num_workers=8, pin_memory=True)
https://github.com/FushengHao/CPEA/blob/a07754c22373813b23b10e4c7dcef3ad34d020f7/main.py#L45
https://github.com/FushengHao/CPEA/blob/a07754c22373813b23b10e4c7dcef3ad34d020f7/main.py#L49
https://github.com/FushengHao/CPEA/blob/a07754c22373813b23b10e4c7dcef3ad34d020f7/main.py#L207

====================================
https://github.com/Adamdad/Repfusion
====================================

Found 4 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=pin_memory,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=pin_memory,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        drop_last=drop_last,
        **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
https://github.com/Adamdad/Repfusion/blob/2fe77c4c3c75592b4ea308488a926cc408e1a116/classification_distill/mmcls/datasets/builder.py#L105
https://github.com/Adamdad/Repfusion/blob/2fe77c4c3c75592b4ea308488a926cc408e1a116/landmark/mmpose/datasets/builder.py#L142
https://github.com/Adamdad/Repfusion/blob/2fe77c4c3c75592b4ea308488a926cc408e1a116/segmentation/mmseg/datasets/builder.py#L153
https://github.com/Adamdad/Repfusion/blob/2fe77c4c3c75592b4ea308488a926cc408e1a116/segmentation/mmseg/datasets/builder.py#L166

====================================
https://github.com/Jin0316/GrowBrain
====================================

Found 3 times
torch.utils.data.DataLoader(train_, batch_size = 32, shuffle = True, num_workers=4)
torch.utils.data.DataLoader(test_, batch_size = 32, shuffle = False, num_workers=4)
torch.utils.data.DataLoader(data, batch_size=32, shuffle=True)
https://github.com/Jin0316/GrowBrain/blob/ed5dea015c08960825fbaad81793ff2b8bd27e6b/ucf_main.py#L60
https://github.com/Jin0316/GrowBrain/blob/ed5dea015c08960825fbaad81793ff2b8bd27e6b/ucf_main.py#L61
https://github.com/Jin0316/GrowBrain/blob/ed5dea015c08960825fbaad81793ff2b8bd27e6b/dataset/dataloader.py#L224

==============================
https://github.com/EricZsy/ROG
==============================

Found 21 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
DataLoader(torch.ones((5, 2)))
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/mmdet/datasets/builder.py#L195
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_data/test_datasets/test_common.py#L224
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L76
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L88
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L99
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L111
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L115
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L133
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L135
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L155
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L157
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L177
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L197
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L216
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_runtime/test_eval_hook.py#L236
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_utils/test_hook.py#L92
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_utils/test_hook.py#L190
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_utils/test_hook.py#L246
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_utils/test_hook.py#L268
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_utils/test_hook.py#L310
https://github.com/EricZsy/ROG/blob/1dad3cf68376bd41f0e08292108a5e4a47c15903/tests/test_utils/test_hook.py#L347

=================================================
https://github.com/huawei-noah/Federated-Learning
=================================================

Found 13 times
DataLoader(
    dataset=CIFARDataset(in_data[i], transform=transform_train if args.transform else None),
    batch_size=args.batch_size,
    num_workers=args.num_workers, drop_last=False, pin_memory=True, shuffle=True)
DataLoader(
    dataset=CIFARDataset(out_data[i], transform=transform_test if args.transform else None),
    batch_size=args.batch_size,
    num_workers=args.num_workers, drop_last=False, pin_memory=True, shuffle=True)
data.DataLoader(data.ConcatDataset(
            StackOverflowDataset(
                os.path.join(data_dir, DEFAULT_TRAIN_FILE), client_idx, _tokenizer) 
                for client_idx in range(DEFAULT_TRAIN_CLIENTS_NUM)),
                                   batch_size=train_bs,
                                   shuffle=True)
data.DataLoader(data.ConcatDataset(
            StackOverflowDataset(
                os.path.join(data_dir, DEFAULT_TEST_FILE), client_idx, "test", _tokenizer)
                for client_idx in range(DEFAULT_TEST_CLIENTS_NUM)),
                                  batch_size=test_bs,
                                  shuffle=True)
data.DataLoader(dataset=train_ds,
                                   batch_size=train_bs,
                                   shuffle=True,
                                   drop_last=False)
data.DataLoader(dataset=test_ds,
                                      batch_size=test_bs,
                                      shuffle=True,
                                      drop_last=False)
data.DataLoader(
                    data.ConcatDataset(
                        list(dl.dataset for dl in list(train_data_local_dict.values()))
                    ),
                    batch_size=batch_size, shuffle=True)
data.DataLoader(
                data.ConcatDataset(
                    list(dl.dataset for dl in list(test_data_local_dict.values()) if dl is not None)
                ),
                batch_size=batch_size, shuffle=True)
DataLoader(dataset, num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler))
DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler)
        )
DataLoader(
                x,
                batch_size=batch_size,
                num_workers=num_workers,
                drop_last=False,
                shuffle=shuffle,
                collate_fn=transform,
                sampler=sampler[i],
                generator=generator,
                **kwargs
            )
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler)
        )
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=_InfiniteSampler(batch_sampler)
        )
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/FairFL/algs/run.py#L156
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/FairFL/algs/run.py#L162
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/FairFL/data/StackOverflow/generate_StackOverflow_nwp.py#L127
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/FairFL/data/StackOverflow/generate_StackOverflow_nwp.py#L134
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/FairFL/data/StackOverflow/generate_StackOverflow_nwp.py#L145
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/FairFL/data/StackOverflow/generate_StackOverflow_nwp.py#L155
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/FairFL/data/StackOverflow/generate_StackOverflow_nwp.py#L196
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/FairFL/data/StackOverflow/generate_StackOverflow_nwp.py#L203
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/FairFL/utils/sampler.py#L38
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/FairFL/utils/sampler.py#L61
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/Federated_Domain_Generalization/flsuite/data/utils.py#L105
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/HessianAlignment/domainbed/lib/fast_data_loader.py#L35
https://github.com/huawei-noah/Federated-Learning/blob/8177982db045e8dc2953ce5eb07e813479dace53/HessianAlignment/domainbed/lib/fast_data_loader.py#L60

==============================
https://github.com/IVRL/VTAGML
==============================

Found 10 times
DataLoader(subset_dataset_test,
                                batch_size=batch_size, shuffle=False)
DataLoader(
            test_dataset, batch_size=batch_size, shuffle=False)
DataLoader(
            test_dataset, batch_size=batch_size, shuffle=False)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
DataLoader(test_dataset, batch_size=batch_size, shuffle=False)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
DataLoader(test_dataset, batch_size=batch_size, shuffle=False)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
DataLoader(subset_dataset_test, batch_size=batch_size, shuffle=False)
DataLoader(test_dataset, batch_size=batch_size, shuffle=False)
https://github.com/IVRL/VTAGML/blob/cfca651b7cb4555081a1234cce2db88beda5ff47/script/evaluate.py#L58
https://github.com/IVRL/VTAGML/blob/cfca651b7cb4555081a1234cce2db88beda5ff47/script/evaluate.py#L75
https://github.com/IVRL/VTAGML/blob/cfca651b7cb4555081a1234cce2db88beda5ff47/script/evaluate.py#L100
https://github.com/IVRL/VTAGML/blob/cfca651b7cb4555081a1234cce2db88beda5ff47/script/train_nyu.py#L275
https://github.com/IVRL/VTAGML/blob/cfca651b7cb4555081a1234cce2db88beda5ff47/script/train_nyu.py#L276
https://github.com/IVRL/VTAGML/blob/cfca651b7cb4555081a1234cce2db88beda5ff47/script/train_nyu_single_task.py#L285
https://github.com/IVRL/VTAGML/blob/cfca651b7cb4555081a1234cce2db88beda5ff47/script/train_nyu_single_task.py#L286
https://github.com/IVRL/VTAGML/blob/cfca651b7cb4555081a1234cce2db88beda5ff47/script/train_taskonomy.py#L400
https://github.com/IVRL/VTAGML/blob/cfca651b7cb4555081a1234cce2db88beda5ff47/script/train_taskonomy.py#L401
https://github.com/IVRL/VTAGML/blob/cfca651b7cb4555081a1234cce2db88beda5ff47/script/train_taskonomy.py#L402

=============================================
https://github.com/JeremyZhao1998/MRT-release
=============================================

Found 2 times
DataLoader(dataset=dataset,
                             batch_sampler=batch_sampler,
                             collate_fn=CocoStyleDataset.collate_fn,
                             num_workers=args.num_workers)
DataLoader(dataset=dataset,
                             batch_sampler=batch_sampler,
                             collate_fn=CocoStyleDatasetTeaching.collate_fn_teaching,
                             num_workers=args.num_workers)
https://github.com/JeremyZhao1998/MRT-release/blob/dfcaa9ba3ea04e41a71b4aa89be8e94e9dd79e1b/build_modules.py#L36
https://github.com/JeremyZhao1998/MRT-release/blob/dfcaa9ba3ea04e41a71b4aa89be8e94e9dd79e1b/build_modules.py#L52

=============================================
https://github.com/ExplainableML/ImageFreeZSL
=============================================

Found 10 times
DataLoader(att2weight_dataset, batch_size=self.batch_size, shuffle=True)
DataLoader(att2weight_dataset, batch_size=self.batch_size, shuffle=True)
DataLoader(combined_full_dataset, batch_size=self.batch_size, shuffle=True)
DataLoader(combined_seen_dataset, batch_size=self.batch_size, shuffle=True)
DataLoader(att2weight_dataset, batch_size=len(self.seenclasses), shuffle=False)
DataLoader(combined_seen_dataset, batch_size=len(self.seenclasses), shuffle=False)
torch.utils.data.DataLoader(
            dataset_train,
            batch_size=opt.batch_size, shuffle=False,
            num_workers=1, pin_memory=True)
torch.utils.data.DataLoader(
            dataset_test_unseen,
            batch_size=opt.batch_size, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            dataset_test_seen,
            batch_size=opt.batch_size, shuffle=False,
            num_workers=4, pin_memory=True)
torch.utils.data.DataLoader(
            dataset_visual,
            batch_size=opt.batch_size, shuffle=False,
            num_workers=4, pin_memory=True)
https://github.com/ExplainableML/ImageFreeZSL/blob/8f719d32f9969818f8d29aaaa29f265dc29e0313/joint_latent.py#L61
https://github.com/ExplainableML/ImageFreeZSL/blob/8f719d32f9969818f8d29aaaa29f265dc29e0313/joint_latent.py#L64
https://github.com/ExplainableML/ImageFreeZSL/blob/8f719d32f9969818f8d29aaaa29f265dc29e0313/joint_latent.py#L78
https://github.com/ExplainableML/ImageFreeZSL/blob/8f719d32f9969818f8d29aaaa29f265dc29e0313/joint_latent.py#L80
https://github.com/ExplainableML/ImageFreeZSL/blob/8f719d32f9969818f8d29aaaa29f265dc29e0313/joint_latent.py#L107
https://github.com/ExplainableML/ImageFreeZSL/blob/8f719d32f9969818f8d29aaaa29f265dc29e0313/joint_latent.py#L109
https://github.com/ExplainableML/ImageFreeZSL/blob/8f719d32f9969818f8d29aaaa29f265dc29e0313/utility/feature_extraction/extract_util.py#L229
https://github.com/ExplainableML/ImageFreeZSL/blob/8f719d32f9969818f8d29aaaa29f265dc29e0313/utility/feature_extraction/extract_util.py#L239
https://github.com/ExplainableML/ImageFreeZSL/blob/8f719d32f9969818f8d29aaaa29f265dc29e0313/utility/feature_extraction/extract_util.py#L253
https://github.com/ExplainableML/ImageFreeZSL/blob/8f719d32f9969818f8d29aaaa29f265dc29e0313/utility/feature_extraction/extract_util.py#L269

=====================================
https://github.com/wqza/CBA-online-CL
=====================================

Found 10 times
DataLoader(
                    tmp_train_dataset, batch_size=1, shuffle=True)
DataLoader(tmp_test_dataset,
                            batch_size=self.args.batch_size, shuffle=True)
DataLoader(train_dataset,
                              batch_size=setting.args.batch_size, shuffle=True)
DataLoader(test_dataset,
                             batch_size=setting.args.batch_size, shuffle=False)
DataLoader(train_dataset, batch_size=setting.args.batch_size, shuffle=True, num_workers=0)
DataLoader(test_dataset, batch_size=setting.args.batch_size, shuffle=False, num_workers=0)
DataLoader(train_dataset, batch_size=setting.args.batch_size, shuffle=True, num_workers=0)
DataLoader(test_dataset, batch_size=setting.args.batch_size, shuffle=False, num_workers=0)
DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
torch.utils.data.DataLoader(temp_dataset, batch_size=self.args.batch_size, shuffle=True)
https://github.com/wqza/CBA-online-CL/blob/6759528793498c53734e0c89a2da5c5481fe908f/datasets/mnist_360.py#L103
https://github.com/wqza/CBA-online-CL/blob/6759528793498c53734e0c89a2da5c5481fe908f/datasets/mnist_360.py#L126
https://github.com/wqza/CBA-online-CL/blob/6759528793498c53734e0c89a2da5c5481fe908f/datasets/perm_mnist.py#L29
https://github.com/wqza/CBA-online-CL/blob/6759528793498c53734e0c89a2da5c5481fe908f/datasets/perm_mnist.py#L31
https://github.com/wqza/CBA-online-CL/blob/6759528793498c53734e0c89a2da5c5481fe908f/datasets/utils/continual_dataset.py#L131
https://github.com/wqza/CBA-online-CL/blob/6759528793498c53734e0c89a2da5c5481fe908f/datasets/utils/continual_dataset.py#L132
https://github.com/wqza/CBA-online-CL/blob/6759528793498c53734e0c89a2da5c5481fe908f/datasets/utils/continual_dataset.py#L156
https://github.com/wqza/CBA-online-CL/blob/6759528793498c53734e0c89a2da5c5481fe908f/datasets/utils/continual_dataset.py#L157
https://github.com/wqza/CBA-online-CL/blob/6759528793498c53734e0c89a2da5c5481fe908f/datasets/utils/continual_dataset.py#L180
https://github.com/wqza/CBA-online-CL/blob/6759528793498c53734e0c89a2da5c5481fe908f/models/joint.py#L59

=================================
https://github.com/scok30/MAE-CIL
=================================

Found 4 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=drop_last,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=128,
        num_workers=2,
        pin_memory=True,
        drop_last=False,
        shuffle=False
    )
https://github.com/scok30/MAE-CIL/blob/5e448b8c439253893810a92ec3e1c6c7152c27b0/continual/factory.py#L62
https://github.com/scok30/MAE-CIL/blob/5e448b8c439253893810a92ec3e1c6c7152c27b0/continual/factory.py#L70
https://github.com/scok30/MAE-CIL/blob/5e448b8c439253893810a92ec3e1c6c7152c27b0/continual/factory.py#L86
https://github.com/scok30/MAE-CIL/blob/5e448b8c439253893810a92ec3e1c6c7152c27b0/continual/rehearsal.py#L168

===================================
https://github.com/Thunderbeee/ZSCL
===================================

Found 50 times
DataLoader(eval_dataset[:task_id + 1], batch_size=cfg.batch_size)
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
        )
DataLoader(train_dataset[task_id:task_id + 1], 
                                    batch_size=cfg.batch_size, 
                                    shuffle=True, num_workers=8)
DataLoader(train_dataset[task_id:task_id + 1], 
                                    batch_size=cfg.batch_size, 
                                    shuffle=True, num_workers=8)
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=batch_size,
            shuffle=False,
            num_workers=num_workers,
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, **kwargs
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, **kwargs
        )
torch.utils.data.DataLoader(
            self.train_dataset, batch_size=batch_size, shuffle=False, **kwargs
        )
torch.utils.data.DataLoader(
            self.train_dataset, batch_size=batch_size, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=batch_size,
            shuffle=False,
            num_workers=num_workers,
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=self.batch_size_eval,
            shuffle=False,
            num_workers=self.num_workers,
        )
DataLoader(feature_dataset, batch_size=args.batch_size, shuffle=is_train)
torch.utils.data.DataLoader(
            self.train_dataset,
            sampler=sampler,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            **kwargs,
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            sampler=sampler,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            **kwargs,
        )
torch.utils.data.DataLoader(
            # self.test_dataset, #################TRAIN!!!!!!!!
            self.train_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            sampler=sampler,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            **kwargs,
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            sampler=sampler,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            **kwargs,
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=False
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=False
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=batch_size,
            shuffle=True,
            num_workers=num_workers,
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=batch_size,
            shuffle=False,
            num_workers=num_workers,
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, **kwargs
        )
torch.utils.data.DataLoader(
            self.test_dataset, batch_size=batch_size, shuffle=False, **kwargs
        )
torch.utils.data.DataLoader(
            self.train_dataset, batch_size=batch_size, shuffle=False, **kwargs
        )
torch.utils.data.DataLoader(
            self.train_dataset, batch_size=batch_size, num_workers=num_workers
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=batch_size,
            shuffle=False,
            num_workers=num_workers,
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=self.batch_size_eval,
            shuffle=False,
            num_workers=self.num_workers,
        )
DataLoader(feature_dataset, batch_size=args.batch_size, shuffle=is_train)
torch.utils.data.DataLoader(
            self.train_dataset,
            sampler=sampler,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            **kwargs,
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            sampler=sampler,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            **kwargs,
        )
torch.utils.data.DataLoader(
            # self.test_dataset, #################TRAIN!!!!!!!!
            self.train_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            sampler=sampler,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            **kwargs,
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            sampler=sampler,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            **kwargs,
        )
torch.utils.data.DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=False
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=False
        )
torch.utils.data.DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            sampler=self.get_test_sampler()
        )
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/main.py#L52
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/continual_clip/cc.py#L48
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/continual_clip/models.py#L52
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/continual_clip/models.py#L147
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/cc.py#L48
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/cifar10.py#L61
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/cifar10.py#L72
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/cifar10.py#L140
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/cifar10.py#L183
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/cifar10.py#L193
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/cifar10.py#L215
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/cifar10.py#L223
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/collections.py#L41
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/collections.py#L47
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/common.py#L134
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/imagenet.py#L37
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/imagenet.py#L47
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/imagenet_small.py#L92
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/imagenet_small.py#L102
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/imagenet_sub.py#L55
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/imagenet_sub.py#L65
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/imagenet_subclass.py#L77
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/imagenet_subclass.py#L87
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/joint.py#L106
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/joint.py#L115
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/noise.py#L72
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/cil/datasets_ref/noise.py#L81
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/cc.py#L48
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/cifar10.py#L61
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/cifar10.py#L72
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/cifar10.py#L140
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/cifar10.py#L183
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/cifar10.py#L193
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/cifar10.py#L215
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/cifar10.py#L223
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/collections.py#L41
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/collections.py#L47
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/common.py#L134
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/imagenet.py#L37
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/imagenet.py#L47
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/imagenet_small.py#L93
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/imagenet_small.py#L103
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/imagenet_sub.py#L55
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/imagenet_sub.py#L65
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/imagenet_subclass.py#L77
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/imagenet_subclass.py#L87
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/joint.py#L106
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/joint.py#L115
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/noise.py#L72
https://github.com/Thunderbeee/ZSCL/blob/63a2b97a626821b155153ec76765c046e14970a2/mtil/src/datasets/noise.py#L81

============================================
https://github.com/lingeringlight/DomainDrop
============================================

Found 3 times
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=True, num_workers=4,
                                         pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(val_dataset, batch_size=args.batch_size, shuffle=False, num_workers=4,
                                             pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=False, num_workers=4,
                                         pin_memory=True, drop_last=False)
https://github.com/lingeringlight/DomainDrop/blob/a2d9607d4f1fb9ba35a9fa48fbceff82fd67d15f/data/data_helper.py#L75
https://github.com/lingeringlight/DomainDrop/blob/a2d9607d4f1fb9ba35a9fa48fbceff82fd67d15f/data/data_helper.py#L77
https://github.com/lingeringlight/DomainDrop/blob/a2d9607d4f1fb9ba35a9fa48fbceff82fd67d15f/data/data_helper.py#L117

======================================================================
https://github.com/DTennant/Incremental-Generalized-Category-Discovery
======================================================================

Found 5 times
DataLoader(dataset, batch_size=128, shuffle=False, num_workers=8)
DataLoader(train_dataset, num_workers=args.num_workers, batch_size=args.batch_size, 
                                          shuffle=False, pin_memory=True)
DataLoader(train_dataset, num_workers=args.num_workers, batch_size=args.batch_size, shuffle=False,
                                  sampler=sampler, drop_last=True, pin_memory=True)
DataLoader(unlabelled_train_examples_test, num_workers=args.num_workers,
                                            batch_size=256, shuffle=False, pin_memory=False)
DataLoader(test_dataset, num_workers=args.num_workers,
                                          batch_size=256, shuffle=False, pin_memory=False)
https://github.com/DTennant/Incremental-Generalized-Category-Discovery/blob/2af6f88e347f5fde1aa3ca44d5466d0f0d1f6f70/model/icarl.py#L276
https://github.com/DTennant/Incremental-Generalized-Category-Discovery/blob/2af6f88e347f5fde1aa3ca44d5466d0f0d1f6f70/model/simgcd_icarl.py#L433
https://github.com/DTennant/Incremental-Generalized-Category-Discovery/blob/2af6f88e347f5fde1aa3ca44d5466d0f0d1f6f70/model/simgcd_icarl.py#L450
https://github.com/DTennant/Incremental-Generalized-Category-Discovery/blob/2af6f88e347f5fde1aa3ca44d5466d0f0d1f6f70/model/simgcd_icarl.py#L452
https://github.com/DTennant/Incremental-Generalized-Category-Discovery/blob/2af6f88e347f5fde1aa3ca44d5466d0f0d1f6f70/model/simgcd_icarl.py#L454

=================================
https://github.com/GengDavid/SLCA
=================================

Found 11 times
DataLoader(idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(idx_dataset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(class_dset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(class_dset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(exemplar_dset, batch_size=batch_size, shuffle=False, num_workers=4)
DataLoader(train_dset, batch_size=batch_size, shuffle=True, num_workers=num_workers)
DataLoader(test_dset, batch_size=batch_size, shuffle=False, num_workers=num_workers)
https://github.com/GengDavid/SLCA/blob/e2a5e19a7de389d8315445e183873f661841e8ef/models/base.py#L209
https://github.com/GengDavid/SLCA/blob/e2a5e19a7de389d8315445e183873f661841e8ef/models/base.py#L241
https://github.com/GengDavid/SLCA/blob/e2a5e19a7de389d8315445e183873f661841e8ef/models/base.py#L257
https://github.com/GengDavid/SLCA/blob/e2a5e19a7de389d8315445e183873f661841e8ef/models/base.py#L276
https://github.com/GengDavid/SLCA/blob/e2a5e19a7de389d8315445e183873f661841e8ef/models/base.py#L300
https://github.com/GengDavid/SLCA/blob/e2a5e19a7de389d8315445e183873f661841e8ef/models/base.py#L334
https://github.com/GengDavid/SLCA/blob/e2a5e19a7de389d8315445e183873f661841e8ef/models/base.py#L353
https://github.com/GengDavid/SLCA/blob/e2a5e19a7de389d8315445e183873f661841e8ef/models/base.py#L365
https://github.com/GengDavid/SLCA/blob/e2a5e19a7de389d8315445e183873f661841e8ef/models/base.py#L395
https://github.com/GengDavid/SLCA/blob/e2a5e19a7de389d8315445e183873f661841e8ef/models/slca.py#L98
https://github.com/GengDavid/SLCA/blob/e2a5e19a7de389d8315445e183873f661841e8ef/models/slca.py#L99

=================================
https://github.com/lccurious/iDAG
=================================

Found 2 times
torch.utils.data.DataLoader(
                dataset,
                num_workers=num_workers,
                batch_sampler=_InfiniteSampler(batch_sampler),
            )
torch.utils.data.DataLoader(
                dataset,
                num_workers=num_workers,
                batch_sampler=_InfiniteSampler(batch_sampler),
            )
https://github.com/lccurious/iDAG/blob/dc4fa1f5497c48c10180ee11b69453ec394189d9/domainbed/lib/fast_data_loader.py#L40
https://github.com/lccurious/iDAG/blob/dc4fa1f5497c48c10180ee11b69453ec394189d9/domainbed/lib/fast_data_loader.py#L76

================================================
https://github.com/ML-Security-Research-LAB/SSDA
================================================

Found 11 times
DataLoader(dsets["source_tr"], batch_size=train_bs, shuffle=True, num_workers=args.worker, drop_last=False)
DataLoader(dsets["source_te"], batch_size=train_bs, shuffle=False, num_workers=args.worker, drop_last=False)
DataLoader(dsets["source_te_trigger"], batch_size=train_bs, shuffle=False, num_workers=args.worker, drop_last=False)
DataLoader(dsets["test"], batch_size=train_bs*2, shuffle=False, num_workers=args.worker, drop_last=False)
DataLoader(dsets["test_trigger"], batch_size=train_bs*2, shuffle=False, num_workers=args.worker, drop_last=False)
DataLoader(dsets["target"], batch_size=train_bs, shuffle=True, num_workers=args.worker, drop_last=False)
DataLoader(dsets["test"], batch_size=train_bs*3, shuffle=False, num_workers=args.worker, drop_last=False)
DataLoader(dsets["test_trigger"], batch_size=train_bs*3, shuffle=False, num_workers=args.worker, drop_last=False)
DataLoader(dsets["target"], batch_size=train_bs, shuffle=True, num_workers=args.worker, drop_last=False)
DataLoader(dsets["test"], batch_size=train_bs*3, shuffle=False, num_workers=args.worker, drop_last=False)
DataLoader(dsets["test_trigger"], batch_size=train_bs*3, shuffle=False, num_workers=args.worker, drop_last=False)
https://github.com/ML-Security-Research-LAB/SSDA/blob/ba8bdcbecf623402adea29944cbba06044c2835e/dataset.py#L323
https://github.com/ML-Security-Research-LAB/SSDA/blob/ba8bdcbecf623402adea29944cbba06044c2835e/dataset.py#L328
https://github.com/ML-Security-Research-LAB/SSDA/blob/ba8bdcbecf623402adea29944cbba06044c2835e/dataset.py#L333
https://github.com/ML-Security-Research-LAB/SSDA/blob/ba8bdcbecf623402adea29944cbba06044c2835e/dataset.py#L338
https://github.com/ML-Security-Research-LAB/SSDA/blob/ba8bdcbecf623402adea29944cbba06044c2835e/dataset.py#L343
https://github.com/ML-Security-Research-LAB/SSDA/blob/ba8bdcbecf623402adea29944cbba06044c2835e/train_target.py#L90
https://github.com/ML-Security-Research-LAB/SSDA/blob/ba8bdcbecf623402adea29944cbba06044c2835e/train_target.py#L93
https://github.com/ML-Security-Research-LAB/SSDA/blob/ba8bdcbecf623402adea29944cbba06044c2835e/train_target.py#L97
https://github.com/ML-Security-Research-LAB/SSDA/blob/ba8bdcbecf623402adea29944cbba06044c2835e/train_target_defend_main.py#L90
https://github.com/ML-Security-Research-LAB/SSDA/blob/ba8bdcbecf623402adea29944cbba06044c2835e/train_target_defend_main.py#L93
https://github.com/ML-Security-Research-LAB/SSDA/blob/ba8bdcbecf623402adea29944cbba06044c2835e/train_target_defend_main.py#L97

===============================
https://github.com/susaha/edaps
===============================

Found 3 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
https://github.com/susaha/edaps/blob/9cf6cc071dbffb545916b2c6cec0d8dc5193b3c0/mmdet/datasets/builder.py#L195
https://github.com/susaha/edaps/blob/9cf6cc071dbffb545916b2c6cec0d8dc5193b3c0/mmseg/datasets/builder.py#L146
https://github.com/susaha/edaps/blob/9cf6cc071dbffb545916b2c6cec0d8dc5193b3c0/mmseg/datasets/builder.py#L159

========================================
https://github.com/showlab/Efficient-CLS
========================================

Found 4 times
torchdata.DataLoader(dataset, batch_size=4, collate_fn=lambda x: x)
torchdata.DataLoader(
            dataset,
            num_workers=num_workers,
            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
            dataset,
            batch_size=batch_size,
            drop_last=True,
            num_workers=num_workers,
            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
            worker_init_fn=worker_init_reset_seed,
        )
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
https://github.com/showlab/Efficient-CLS/blob/969af047700bc2ff1ba2fb41b26ac4e386d3f2f7/train.py#L232
https://github.com/showlab/Efficient-CLS/blob/969af047700bc2ff1ba2fb41b26ac4e386d3f2f7/detectron2/data/build.py#L315
https://github.com/showlab/Efficient-CLS/blob/969af047700bc2ff1ba2fb41b26ac4e386d3f2f7/detectron2/data/build.py#L326
https://github.com/showlab/Efficient-CLS/blob/969af047700bc2ff1ba2fb41b26ac4e386d3f2f7/detectron2/data/build.py#L523

====================================
https://github.com/xiaohua-chen/AREA
====================================

Found 2 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
https://github.com/xiaohua-chen/AREA/blob/1c471974d74bd9c1960dd75f764f7ad31d9375d9/AREA_cifar.py#L189
https://github.com/xiaohua-chen/AREA/blob/1c471974d74bd9c1960dd75f764f7ad31d9375d9/AREA_cifar.py#L193

======================================
https://github.com/SongTang-x/SwinLSTM
======================================

Found 3 times
DataLoader(test_dataset, batch_size=args.test_batch_size,
                             num_workers=args.num_workers, shuffle=False, pin_memory=True, drop_last=True)
DataLoader(train_dataset, batch_size=args.train_batch_size,
                              num_workers=args.num_workers, shuffle=True, pin_memory=True, drop_last=True)
DataLoader(valid_dataset, batch_size=args.valid_batch_size,
                             num_workers=args.num_workers, shuffle=False, pin_memory=True, drop_last=True)
https://github.com/SongTang-x/SwinLSTM/blob/4425bcfefbebfac85c9fc6c6659361b8154d5ca3/test.py#L25
https://github.com/SongTang-x/SwinLSTM/blob/4425bcfefbebfac85c9fc6c6659361b8154d5ca3/train.py#L32
https://github.com/SongTang-x/SwinLSTM/blob/4425bcfefbebfac85c9fc6c6659361b8154d5ca3/train.py#L35

================================
https://github.com/MCG-NJU/MGMAE
================================

Found 6 times
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
        persistent_workers=True)
torch.utils.data.DataLoader(
            dataset_val,
            sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False,
            persistent_workers=True)
torch.utils.data.DataLoader(
            dataset_test,
            sampler=sampler_test,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False,
            persistent_workers=True)
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
        worker_init_fn=utils.seed_worker,
        persistent_workers=True)
torch.utils.data.DataLoader(
        dataset_train,
        sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=collate_func,
        worker_init_fn=utils.seed_worker,
        persistent_workers=True)
data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        pin_memory=False,
        shuffle=True,
        num_workers=4,
        drop_last=True)
https://github.com/MCG-NJU/MGMAE/blob/af7beb988fa9b06fba44c87db037529166020a1f/run_class_finetuning.py#L467
https://github.com/MCG-NJU/MGMAE/blob/af7beb988fa9b06fba44c87db037529166020a1f/run_class_finetuning.py#L478
https://github.com/MCG-NJU/MGMAE/blob/af7beb988fa9b06fba44c87db037529166020a1f/run_class_finetuning.py#L490
https://github.com/MCG-NJU/MGMAE/blob/af7beb988fa9b06fba44c87db037529166020a1f/run_mae_pretraining.py#L321
https://github.com/MCG-NJU/MGMAE/blob/af7beb988fa9b06fba44c87db037529166020a1f/run_mgmae_pretraining.py#L357
https://github.com/MCG-NJU/MGMAE/blob/af7beb988fa9b06fba44c87db037529166020a1f/flow_utils/raft/core/datasets.py#L289

===============================
https://github.com/orhir/STG-NF
===============================

Found 1 times
DataLoader(dataset[split], **loader_args, shuffle=(split == 'train'))
https://github.com/orhir/STG-NF/blob/edb5f3220332e160e4d20ce258787d5e2d7e0200/dataset.py#L141

====================================
https://github.com/guanxiongsun/STPN
====================================

Found 20 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        worker_init_fn=init_fn,
        **kwargs)
DataLoader(torch.ones((5, 2)))
DataLoader(
                test_dataset,
                batch_size=1,
                sampler=None,
                num_worker=0,
                shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(
            test_dataset,
            batch_size=1,
            sampler=None,
            num_workers=0,
            shuffle=False)
DataLoader(test_dataset, batch_size=1)
DataLoader(test_dataset, batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(EvalDataset(), batch_size=1)
DataLoader(ExampleDataset(), batch_size=1)
DataLoader(torch.ones((10, 2)))
DataLoader(torch.ones((1, 1, 1, 1)))
DataLoader(torch.ones((5, 2)))
DataLoader(DemoDataset())
DataLoader(torch.ones((5, 2)))
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/mmdet/datasets/builder.py#L185
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_data/test_datasets/test_common.py#L229
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L76
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L88
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L99
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L111
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L115
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L133
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L135
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L155
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L157
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L177
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L197
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L216
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_runtime/test_eval_hook.py#L236
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_utils/test_hook.py#L92
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_utils/test_hook.py#L190
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_utils/test_hook.py#L246
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_utils/test_hook.py#L268
https://github.com/guanxiongsun/STPN/blob/a80f448f92cf24feb5ca927eef603481eb216439/tests/test_utils/test_hook.py#L310

====================================
https://github.com/UCF-CRCV/TeD-SPAD
====================================

Found 20 times
DataLoader(
            train_dataset, 
            shuffle=True,
            batch_size=params.batch_size, 
            num_workers=params.num_workers,
            drop_last=True,
            collate_fn=collate_fn_train,
            pin_memory=True)
DataLoader(validation_dataset, batch_size=params.v_batch_size, shuffle=True, num_workers=params.num_workers, drop_last=True, collate_fn=collate_fn_val)
DataLoader(
            train_dataset, 
            shuffle=True,
            batch_size=params.batch_size, 
            num_workers=params.num_workers,
            drop_last=True,
            collate_fn=collate_fn_train,
            pin_memory=True)
DataLoader(validation_dataset, batch_size=params.v_batch_size, shuffle=True, num_workers=params.num_workers, drop_last=True, collate_fn=collate_fn_val)
DataLoader(Dataset(args, test_mode=False, is_normal=True),
                               batch_size=args.batch_size, shuffle=False,
                               num_workers=args.workers, pin_memory=False, drop_last=True)
DataLoader(Dataset(args, test_mode=False, is_normal=False),
                               batch_size=args.batch_size, shuffle=False,
                               num_workers=args.workers, pin_memory=False, drop_last=True)
DataLoader(Dataset(args, test_mode=True),
                             batch_size=1, shuffle=False,
                             num_workers=0, pin_memory=False)
DataLoader(Dataset(args, test_mode=True),
                              batch_size=1, shuffle=False,
                              num_workers=0, pin_memory=False)
DataLoader(train_dataset_vispr, batch_size=params.batch_size_vispr, shuffle=True, num_workers=params.num_workers)
DataLoader(
            train_dataset_video, 
            shuffle=True,
            batch_size=params.batch_size, 
            num_workers=params.num_workers,
            collate_fn=collate_fn_train,
            pin_memory=True)
DataLoader(validation_dataset_vispr, batch_size=16, shuffle=True, num_workers=params.num_workers)
DataLoader(validation_dataset_video, batch_size=params.v_batch_size, num_workers=params.num_workers, collate_fn=collate_fn_val)
DataLoader(train_dataset, batch_size=params.batch_size, shuffle=False, collate_fn=collate_fn_train, num_workers=0)
DataLoader(train_dataset, batch_size=params.batch_size_vispr, shuffle=True, num_workers=params.num_workers)
DataLoader(train_dataset, batch_size=params.batch_size, \
        shuffle=False, num_workers=params.num_workers)
DataLoader(train_dataset, batch_size=params.batch_size, shuffle=True, num_workers=params.num_workers)
DataLoader(validation_dataset, batch_size=48, shuffle=True, num_workers=params.num_workers)
DataLoader(all_dataset, batch_size=1, shuffle=False, num_workers=params.num_workers)
DataLoader(train_dataset, batch_size=params.batch_size, shuffle=True, num_workers=params.num_workers)
DataLoader(validation_dataset, batch_size=params.v_batch_size, shuffle=True, num_workers=params.num_workers)
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/action_training/train_action.py#L290
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/action_training/train_action.py#L340
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/action_training/train_anonymized_action.py#L295
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/action_training/train_anonymized_action.py#L345
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/anomaly_detection_mgfn/main.py#L49
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/anomaly_detection_mgfn/main.py#L52
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/anomaly_detection_mgfn/main.py#L55
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/anomaly_detection_mgfn/test.py#L60
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/anonymization_training/train_anonymizer.py#L399
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/anonymization_training/train_anonymizer.py#L429
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/anonymization_training/train_anonymizer.py#L461
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/anonymization_training/train_anonymizer.py#L474
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/aux_code/ucf101_dl.py#L944
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/aux_code/vispr_dl.py#L374
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/fa_pretraining/reconstruction_dl.py#L143
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/fa_pretraining/train_reconstruction.py#L126
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/fa_pretraining/train_reconstruction.py#L170
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/feature_extraction/st_feature_extraction.py#L84
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/privacy_training/train_privacy.py#L176
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/privacy_training/train_privacy.py#L181

=====================================================
https://github.com/Chiaraplizz/ARGO1M-What-can-a-cook
=====================================================

Found 1 times
torch.utils.data.DataLoader(ds, batch_size=self.config.batch_size,
                                                                  num_workers=self.config.n_workers, shuffle=shuffle)
https://github.com/Chiaraplizz/ARGO1M-What-can-a-cook/blob/14c02af0b89a4f1ff23358673dab3992218790e3/code/run.py#L102

=======================================================
https://github.com/walker1126/Latent_Action_Composition
=======================================================

Found 1 times
DataLoader(dataset, batch_size=batch_size, shuffle=True,
                            num_workers=num_workers, worker_init_fn=lambda _: np.random.seed())
https://github.com/walker1126/Latent_Action_Composition/blob/85ce76a9154be768ba584a17c84c449cb4e8f626/dataset/__init__.py#L16

========================================
https://github.com/oppo-us-research/USST
========================================

Found 12 times
DataLoader(trainset, batch_size=cfg.TRAIN.batch_size, shuffle=True, num_workers=cfg.num_workers, pin_memory=True)
DataLoader(valset, batch_size=cfg.TEST.batch_size, shuffle=False, num_workers=cfg.num_workers, pin_memory=True)
DataLoader(testset, batch_size=cfg.TEST.batch_size, shuffle=False, num_workers=cfg.num_workers, pin_memory=True)
DataLoader(testnovel_set, batch_size=cfg.TEST.batch_size, shuffle=False, num_workers=cfg.num_workers, pin_memory=True)
DataLoader(trainset, batch_size=1, shuffle=False, num_workers=4, pin_memory=True)
DataLoader(valset, batch_size=1, shuffle=False, num_workers=0, pin_memory=False)
DataLoader(trainset, batch_size=cfg.TRAIN.batch_size, shuffle=True, num_workers=cfg.num_workers, pin_memory=True)
DataLoader(valset, batch_size=cfg.TEST.batch_size, shuffle=False, num_workers=cfg.num_workers, pin_memory=True)
DataLoader(testset, batch_size=cfg.TEST.batch_size, shuffle=False, num_workers=cfg.num_workers, pin_memory=True)
DataLoader(trainset, batch_size=16, shuffle=True, num_workers=4, pin_memory=True)
DataLoader(valset, batch_size=1, shuffle=False, num_workers=0, pin_memory=False)
DataLoader(testset, batch_size=1, shuffle=False, num_workers=0, pin_memory=False)
https://github.com/oppo-us-research/USST/blob/bc09a79db8bf947c700ac3edaa38928e1525fc27/src/EgoPAT3DLoader.py#L337
https://github.com/oppo-us-research/USST/blob/bc09a79db8bf947c700ac3edaa38928e1525fc27/src/EgoPAT3DLoader.py#L340
https://github.com/oppo-us-research/USST/blob/bc09a79db8bf947c700ac3edaa38928e1525fc27/src/EgoPAT3DLoader.py#L347
https://github.com/oppo-us-research/USST/blob/bc09a79db8bf947c700ac3edaa38928e1525fc27/src/EgoPAT3DLoader.py#L350
https://github.com/oppo-us-research/USST/blob/bc09a79db8bf947c700ac3edaa38928e1525fc27/src/EgoPAT3DLoader.py#L454
https://github.com/oppo-us-research/USST/blob/bc09a79db8bf947c700ac3edaa38928e1525fc27/src/EgoPAT3DLoader.py#L457
https://github.com/oppo-us-research/USST/blob/bc09a79db8bf947c700ac3edaa38928e1525fc27/src/H2OLoader.py#L350
https://github.com/oppo-us-research/USST/blob/bc09a79db8bf947c700ac3edaa38928e1525fc27/src/H2OLoader.py#L353
https://github.com/oppo-us-research/USST/blob/bc09a79db8bf947c700ac3edaa38928e1525fc27/src/H2OLoader.py#L360
https://github.com/oppo-us-research/USST/blob/bc09a79db8bf947c700ac3edaa38928e1525fc27/src/H2OLoader.py#L387
https://github.com/oppo-us-research/USST/blob/bc09a79db8bf947c700ac3edaa38928e1525fc27/src/H2OLoader.py#L390
https://github.com/oppo-us-research/USST/blob/bc09a79db8bf947c700ac3edaa38928e1525fc27/src/H2OLoader.py#L393

=============================
https://github.com/whwu95/ATM
=============================

Found 4 times
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
        collate_fn=None,
    )
torch.utils.data.DataLoader(
            dataset_val, sampler=sampler_val,
            batch_size=int(1.5 * args.batch_size),
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
            dataset_test, sampler=sampler_test,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=False
        )
torch.utils.data.DataLoader(
        dataset_test, sampler=sampler_test,
        batch_size=args.batch_size,
        num_workers=0, #args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/whwu95/ATM/blob/98ba3aa2ac258cc1b91beefe9317136657ae3d8d/run_class_finetuning.py#L314
https://github.com/whwu95/ATM/blob/98ba3aa2ac258cc1b91beefe9317136657ae3d8d/run_class_finetuning.py#L324
https://github.com/whwu95/ATM/blob/98ba3aa2ac258cc1b91beefe9317136657ae3d8d/run_class_finetuning.py#L335
https://github.com/whwu95/ATM/blob/98ba3aa2ac258cc1b91beefe9317136657ae3d8d/test_for_frame.py#L313

=================================
https://github.com/bofang98/UATVR
=================================

Found 2 times
DataLoader(
        msrvtt_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        msrvtt_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
https://github.com/bofang98/UATVR/blob/db0062a77d9e7ab6eed801fa5e27c3085939d182/dataloaders/data_dataloaders.py#L22
https://github.com/bofang98/UATVR/blob/db0062a77d9e7ab6eed801fa5e27c3085939d182/dataloaders/data_dataloaders.py#L45

===============================
https://github.com/solicucu/D3G
===============================

Found 1 times
torch.utils.data.DataLoader(
            dataset,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            batch_sampler=batch_sampler,
            collate_fn=BatchCollator(),
        )
https://github.com/solicucu/D3G/blob/5d114f38790a7e30981021c5269447a23bb1018f/d3g/data/__init__.py#L96

================================
https://github.com/afcedf/SOONet
================================

Found 3 times
data.DataLoader(trainset, 
                                batch_size=1,
                                num_workers=cfg.TRAIN.WORKERS,
                                shuffle=False,
                                collate_fn=trainset.collate_fn,
                                drop_last=False
                            )
data.DataLoader(testset, 
                            batch_size=1,
                            num_workers=cfg.TEST.WORKERS,
                            shuffle=False,
                            collate_fn=testset.collate_fn,
                            drop_last=False
                        )
data.DataLoader(mad_dataset, 
                            batch_size=1,
                            num_workers=4,
                            shuffle=False,
                            collate_fn=mad_dataset.collate_fn,
                            drop_last=False
                        )
https://github.com/afcedf/SOONet/blob/877034e2b5871cc244b5ca9c7587bef5e31cb902/src/main.py#L43
https://github.com/afcedf/SOONet/blob/877034e2b5871cc244b5ca9c7587bef5e31cb902/src/main.py#L51
https://github.com/afcedf/SOONet/blob/877034e2b5871cc244b5ca9c7587bef5e31cb902/src/datasets/mad.py#L200

=============================================
https://github.com/TalalWasim/Video-FocalNets
=============================================

Found 2 times
DataLoader(
        train_data, sampler=sampler_train,
        batch_size=config.DATA.BATCH_SIZE,
        num_workers=16,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=config.DATA.BATCH_SIZE),
    )
DataLoader(
        val_data, sampler=sampler_val,
        batch_size=2,
        num_workers=16,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=2),
    )
https://github.com/TalalWasim/Video-FocalNets/blob/0909341725fec9103156085dd11e1c8d45d2d05b/datasets/build.py#L296
https://github.com/TalalWasim/Video-FocalNets/blob/0909341725fec9103156085dd11e1c8d45d2d05b/datasets/build.py#L325

============================================
https://github.com/fmthoker/tubelet-contrast
============================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=imgs_per_gpu),
        pin_memory=False,
        **kwargs)
https://github.com/fmthoker/tubelet-contrast/blob/5f9a715797ae2b1e8f4c274732307aa135807795/pyvrl/datasets/dataloader/builder.py#L62

===============================================================
https://github.com/Echo0125/Memory-and-Anticipation-Transformer
===============================================================

Found 3 times
data.DataLoader(
        dataset=build_dataset(cfg, phase),
        batch_size=cfg.DATA_LOADER.BATCH_SIZE,
        shuffle=True if phase == 'train' else False,
        num_workers=cfg.DATA_LOADER.NUM_WORKERS,
        pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
    )
torch.utils.data.DataLoader(
        dataset=build_dataset(cfg, phase='test', tag='BatchInference'),
        batch_size=cfg.DATA_LOADER.BATCH_SIZE,
        num_workers=cfg.DATA_LOADER.NUM_WORKERS * 8,
        pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
    )
torch.utils.data.DataLoader(
        dataset=build_dataset(cfg, phase='test', tag='BatchInference'),
        batch_size=cfg.DATA_LOADER.BATCH_SIZE,
        num_workers=cfg.DATA_LOADER.NUM_WORKERS * 8,
        pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
    )
https://github.com/Echo0125/Memory-and-Anticipation-Transformer/blob/8a7f49b00391817ff6368d0e39c17ab06b719dbc/src/rekognition_online_action_detection/datasets/datasets.py#L22
https://github.com/Echo0125/Memory-and-Anticipation-Transformer/blob/8a7f49b00391817ff6368d0e39c17ab06b719dbc/src/rekognition_online_action_detection/engines/base_inferences/perframe_det_batch_inference.py#L29
https://github.com/Echo0125/Memory-and-Anticipation-Transformer/blob/8a7f49b00391817ff6368d0e39c17ab06b719dbc/src/rekognition_online_action_detection/engines/base_inferences/perframe_det_batch_inference.py#L123

================================
https://github.com/jinhyunj/EaTR
================================

Found 2 times
DataLoader(
        eval_dataset,
        collate_fn=start_end_collate,
        batch_size=opt.eval_bsz,
        num_workers=opt.num_workers,
        shuffle=False,
        pin_memory=opt.pin_memory
    )
DataLoader(
        train_dataset,
        collate_fn=start_end_collate,
        batch_size=opt.bsz,
        num_workers=opt.num_workers,
        shuffle=True,
        pin_memory=opt.pin_memory
    )
https://github.com/jinhyunj/EaTR/blob/384f09396a32741a73106d2e147bde54cbcce48f/inference.py#L182
https://github.com/jinhyunj/EaTR/blob/384f09396a32741a73106d2e147bde54cbcce48f/train.py#L108

======================================
https://github.com/Sharpiless/MPI-Flow
======================================

Found 1 times
data.DataLoader(train_dataset, batch_size=args.batch_size,
                                   pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
https://github.com/Sharpiless/MPI-Flow/blob/f1ea950205b19a4bb47f617903489dff9162b9d6/core/datasets.py#L439

==================================
https://github.com/jimmy-dq/SimVOS
==================================

Found 3 times
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=4)
DataLoader(test_dataset, batch_size=1, shuffle=False, num_workers=4)
DataLoader(dataset, para['batch_size'], sampler=train_sampler, num_workers=para['num_workers'],
                            worker_init_fn=worker_init_fn, drop_last=True, pin_memory=True)
https://github.com/jimmy-dq/SimVOS/blob/6c96f2b03e0de059ae4a3d24b301e29242127d34/submit_eval_davis_ours_all.py#L111
https://github.com/jimmy-dq/SimVOS/blob/6c96f2b03e0de059ae4a3d24b301e29242127d34/submit_eval_davis_ours_all.py#L114
https://github.com/jimmy-dq/SimVOS/blob/6c96f2b03e0de059ae4a3d24b301e29242127d34/train_simvos.py#L79

==============================================================
https://github.com/Chuhanxx/helping_hand_for_egocentric_videos
==============================================================

Found 3 times
DataLoader(sampler=self.valid_sampler, **self.init_kwargs)
torch.utils.data.DataLoader(
        val_dataset, batch_size=2, shuffle=False,
        num_workers=6, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.num_workers, pin_memory=True, drop_last=False)
https://github.com/Chuhanxx/helping_hand_for_egocentric_videos/blob/46a3852842782335740933821dfe61657e995339/base/base_data_loader.py#L64
https://github.com/Chuhanxx/helping_hand_for_egocentric_videos/blob/46a3852842782335740933821dfe61657e995339/data_loader/Egtea.py#L268
https://github.com/Chuhanxx/helping_hand_for_egocentric_videos/blob/46a3852842782335740933821dfe61657e995339/run/test_egtea.py#L202

===================================
https://github.com/Zhuysheng/RVTCLR
===================================

Found 4 times
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=1,
        drop_last=False)
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=False,
        pin_memory=True,
        num_workers=1,
        drop_last=False)
torch.utils.data.DataLoader(
                dataset=train_feeder(**self.arg.train_feeder_args),
                batch_size=self.arg.batch_size,
                shuffle=True,
                pin_memory=True,    # set True when memory is abundant
                num_workers=self.arg.num_worker * torchlight.ngpu(
                    self.arg.device),
                drop_last=True,
                worker_init_fn=init_seed)
torch.utils.data.DataLoader(
                dataset=test_feeder(**self.arg.test_feeder_args),
                batch_size=self.arg.test_batch_size,
                shuffle=False,
                pin_memory=True,
                num_workers=self.arg.num_worker * torchlight.ngpu(
                    self.arg.device),
                drop_last=False,
                worker_init_fn=init_seed)
https://github.com/Zhuysheng/RVTCLR/blob/68dd7f4933e629b9a0de3b47d4d25f69203f04fc/feeder/preprocess_ntu.py#L47
https://github.com/Zhuysheng/RVTCLR/blob/68dd7f4933e629b9a0de3b47d4d25f69203f04fc/feeder/preprocess_ntu120.py#L47
https://github.com/Zhuysheng/RVTCLR/blob/68dd7f4933e629b9a0de3b47d4d25f69203f04fc/processor/processor.py#L91
https://github.com/Zhuysheng/RVTCLR/blob/68dd7f4933e629b9a0de3b47d4d25f69203f04fc/processor/processor.py#L103

==================================
https://github.com/lxtGH/Tube-Link
==================================

Found 2 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
https://github.com/lxtGH/Tube-Link/blob/f9e7ce290819c7e7d5d389981ffb7ecdeacc1c13/mmdet/datasets/builder.py#L195
https://github.com/lxtGH/Tube-Link/blob/f9e7ce290819c7e7d5d389981ffb7ecdeacc1c13/scripts/test_vspw/RAFT_core/datasets.py#L230

=============================================
https://github.com/alibaba-mmai-research/DiST
=============================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=(False if sampler else shuffle),
        sampler=sampler,
        num_workers=cfg.DATA_LOADER.NUM_WORKERS,
        pin_memory=cfg.DATA_LOADER.PIN_MEMORY,
        drop_last=drop_last,
        collate_fn=collate_fn
    )
https://github.com/alibaba-mmai-research/DiST/blob/4b3a09bc3c6d7933c98173c70ca0ed76f975e13d/dataset/base/builder.py#L83

===============================
https://github.com/stoneMo/CIGN
===============================

Found 4 times
DataLoader(testdataset, batch_size=args.batch_size, sampler=sampler, num_workers=args.workers)
torch.utils.data.DataLoader(
        traindataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=False, sampler=train_sampler, drop_last=True,
        persistent_workers=args.workers > 0)
torch.utils.data.DataLoader(
        valdataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=False, drop_last=False,
        persistent_workers=args.workers > 0)
torch.utils.data.DataLoader(
        testdataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=False, drop_last=False,
        persistent_workers=args.workers > 0)
https://github.com/stoneMo/CIGN/blob/c64d8397e8c9d6a4776be2db199343693857804d/test.py#L156
https://github.com/stoneMo/CIGN/blob/c64d8397e8c9d6a4776be2db199343693857804d/train.py#L194
https://github.com/stoneMo/CIGN/blob/c64d8397e8c9d6a4776be2db199343693857804d/train.py#L200
https://github.com/stoneMo/CIGN/blob/c64d8397e8c9d6a4776be2db199343693857804d/train.py#L284

=============================================
https://github.com/weiguoPian/AV-CIL_ICCV2023
=============================================

Found 22 times
DataLoader(train_data_set, batch_size=args.gen_exem_batch_size, num_workers=args.num_workers,
                                     pin_memory=True, drop_last=False, shuffle=False)
DataLoader(train_data_set, batch_size=args.train_batch_size, num_workers=args.num_workers,
                              pin_memory=True, drop_last=True, shuffle=True)
DataLoader(val_data_set, batch_size=args.infer_batch_size, num_workers=args.num_workers,
                            pin_memory=True, drop_last=False, shuffle=False)
DataLoader(test_data_set, batch_size=args.infer_batch_size, num_workers=args.num_workers,
                             pin_memory=True, drop_last=False, shuffle=False)
DataLoader(train_data_set, batch_size=args.train_batch_size, num_workers=args.num_workers,
                              pin_memory=True, drop_last=True, shuffle=True)
DataLoader(val_data_set, batch_size=args.infer_batch_size, num_workers=args.num_workers,
                            pin_memory=True, drop_last=False, shuffle=False)
DataLoader(test_data_set, batch_size=args.infer_batch_size, num_workers=args.num_workers,
                             pin_memory=True, drop_last=False, shuffle=False)
DataLoader(train_data_set, batch_size=min(args.train_batch_size, train_data_set.__len__()), num_workers=args.num_workers,
                              pin_memory=True, drop_last=True, shuffle=True)
DataLoader(val_data_set, batch_size=min(args.infer_batch_size, val_data_set.__len__()), num_workers=args.num_workers,
                            pin_memory=True, drop_last=False, shuffle=False)
DataLoader(exemplar_set, batch_size=min(args.exemplar_batch_size, exemplar_set.__len__()), num_workers=args.num_workers,
                                     pin_memory=True, drop_last=True, shuffle=True)
DataLoader(test_data_set, batch_size=args.infer_batch_size, num_workers=args.num_workers,
                             pin_memory=True, drop_last=False, shuffle=False)
DataLoader(train_data_set, batch_size=args.train_batch_size, num_workers=args.num_workers,
                              pin_memory=True, drop_last=True, shuffle=True)
DataLoader(val_data_set, batch_size=args.infer_batch_size, num_workers=args.num_workers,
                            pin_memory=True, drop_last=False, shuffle=False)
DataLoader(test_data_set, batch_size=args.infer_batch_size, num_workers=args.num_workers,
                             pin_memory=True, drop_last=False, shuffle=False)
DataLoader(train_data_set, batch_size=args.gen_exem_batch_size, num_workers=args.num_workers,
                                     pin_memory=True, drop_last=False, shuffle=False)
DataLoader(train_data_set, batch_size=args.train_batch_size, num_workers=args.num_workers,
                              pin_memory=True, drop_last=True, shuffle=True)
DataLoader(val_data_set, batch_size=args.infer_batch_size, num_workers=args.num_workers,
                            pin_memory=True, drop_last=False, shuffle=False)
DataLoader(test_data_set, batch_size=args.infer_batch_size, num_workers=args.num_workers,
                             pin_memory=True, drop_last=False, shuffle=False)
DataLoader(train_data_set, batch_size=min(args.train_batch_size, train_data_set.__len__()), num_workers=args.num_workers,
                              pin_memory=True, drop_last=True, shuffle=True)
DataLoader(val_data_set, batch_size=min(args.infer_batch_size, val_data_set.__len__()), num_workers=args.num_workers,
                            pin_memory=True, drop_last=False, shuffle=False)
DataLoader(exemplar_set, batch_size=min(args.exemplar_batch_size, exemplar_set.__len__()), num_workers=args.num_workers,
                                     pin_memory=True, drop_last=True, shuffle=True)
DataLoader(test_data_set, batch_size=args.infer_batch_size, num_workers=args.num_workers,
                             pin_memory=True, drop_last=False, shuffle=False)
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/AFC/train_incremental_afc.py#L151
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/AFC/train_incremental_afc.py#L240
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/AFC/train_incremental_afc.py#L242
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/AFC/train_incremental_afc.py#L476
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/LwF/train_incremental_lwf.py#L60
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/LwF/train_incremental_lwf.py#L62
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/LwF/train_incremental_lwf.py#L219
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/SSIL/train_incremental_ssil.py#L61
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/SSIL/train_incremental_ssil.py#L63
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/SSIL/train_incremental_ssil.py#L75
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/SSIL/train_incremental_ssil.py#L266
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/fine_tuning/train_incremental_fine_tuning.py#L56
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/fine_tuning/train_incremental_fine_tuning.py#L58
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/fine_tuning/train_incremental_fine_tuning.py#L174
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/iCaRL/train_incremental_icarl.py#L69
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/iCaRL/train_incremental_icarl.py#L160
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/iCaRL/train_incremental_icarl.py#L162
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/iCaRL/train_incremental_icarl.py#L339
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/ours/train_incremental_ours.py#L89
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/ours/train_incremental_ours.py#L91
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/ours/train_incremental_ours.py#L102
https://github.com/weiguoPian/AV-CIL_ICCV2023/blob/9025fba8a058742f2413b8d73ed9a3aa2f31cf17/ours/train_incremental_ours.py#L287

==============================
https://github.com/ku-vai/TPoS
==============================

Found 2 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=args.num_workers,
        pin_memory=True)
torch.utils.data.DataLoader(
        validation_dataset,
        batch_size=args.batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=args.num_workers,
        pin_memory=True)
https://github.com/ku-vai/TPoS/blob/8be5e126a397372b872d4b071fdc45f23e444837/audio_encoder/train_audio_encoder.py#L57
https://github.com/ku-vai/TPoS/blob/8be5e126a397372b872d4b071fdc45f23e444837/audio_encoder/train_audio_encoder.py#L65

===========================================
https://github.com/Sreyan88/AdVerb-dereverb
===========================================

Found 3 times
torch.utils.data.DataLoader(test_set, num_workers=10, batch_size=args.batch_size, pin_memory=True)
torch.utils.data.DataLoader(train_set, shuffle=True, num_workers=args.num_worker, pin_memory=True,
                                                    batch_size=args.batch_size)
torch.utils.data.DataLoader(val_set, num_workers=args.num_worker, batch_size=args.batch_size, pin_memory=True)
https://github.com/Sreyan88/AdVerb-dereverb/blob/caa3cb3ea3db5cdc254f3692efc2e2094c14f365/model/trainer.py#L200
https://github.com/Sreyan88/AdVerb-dereverb/blob/caa3cb3ea3db5cdc254f3692efc2e2094c14f365/model/trainer.py#L206
https://github.com/Sreyan88/AdVerb-dereverb/blob/caa3cb3ea3db5cdc254f3692efc2e2094c14f365/model/trainer.py#L211

=============================
https://github.com/IFICL/SLfM
=============================

Found 1 times
DataLoader(
        dataset, 
        batch_size=batch_size, 
        shuffle=shuffle, 
        num_workers=args.num_workers, 
        pin_memory=True, 
        drop_last=drop_last)
https://github.com/IFICL/SLfM/blob/0257622d03bd86485315c109a1849fdc701a3997/slfm/utils/torch_utils.py#L50

======================================
https://github.com/hkust-vgd/nerfstyle
======================================

Found 5 times
DataLoader(test_set, batch_size=None, shuffle=False)
DataLoader(self.train_set, batch_size=None, shuffle=True)
DataLoader(self.test_set, batch_size=None, shuffle=False)
DataLoader(self.style_train_set, batch_size=1)
DataLoader(self.style_train_set, batch_size=1, shuffle=False)
https://github.com/hkust-vgd/nerfstyle/blob/0011f2f06a00f39c2dc81176118b83e88d20a2eb/render.py#L65
https://github.com/hkust-vgd/nerfstyle/blob/0011f2f06a00f39c2dc81176118b83e88d20a2eb/trainers/base.py#L129
https://github.com/hkust-vgd/nerfstyle/blob/0011f2f06a00f39c2dc81176118b83e88d20a2eb/trainers/base.py#L134
https://github.com/hkust-vgd/nerfstyle/blob/0011f2f06a00f39c2dc81176118b83e88d20a2eb/trainers/style.py#L66
https://github.com/hkust-vgd/nerfstyle/blob/0011f2f06a00f39c2dc81176118b83e88d20a2eb/trainers/style.py#L67

==================================
https://github.com/piddnad/DDColor
==================================

Found 1 times
torch.utils.data.DataLoader(**dataloader_args)
https://github.com/piddnad/DDColor/blob/6fbe0b4826a28e4a454c90a52ca75edbcdbbb131/basicsr/data/__init__.py#L94

==================================
https://github.com/3dlg-hcvc/paris
==================================

Found 2 times
DataLoader(
            dataset, 
            num_workers=0, 
            batch_size=batch_size,
            pin_memory=True,
        )
DataLoader(
            dataset, 
            num_workers=0,
            batch_size=batch_size,
            pin_memory=True,
        )
https://github.com/3dlg-hcvc/paris/blob/3db469a80634441f2bc93685c8cbdb635c534e46/datasets/blender_paris.py#L201
https://github.com/3dlg-hcvc/paris/blob/3db469a80634441f2bc93685c8cbdb635c534e46/datasets/blender_paris.py#L209

=============================================
https://github.com/mingyuan-zhang/ReMoDiffuse
=============================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=False,
        shuffle=shuffle,
        worker_init_fn=init_fn,
        persistent_workers=persistent_workers,
        **kwargs)
https://github.com/mingyuan-zhang/ReMoDiffuse/blob/f918fe18eaaa7d409adcf0150c2702157452de34/mogen/datasets/builder.py#L92

===================================
https://github.com/tmaham/DS-Fusion
===================================

Found 4 times
DataLoader(self.datasets["train"], batch_size=self.batch_size,
                          num_workers=self.num_workers, shuffle=False if is_iterable_dataset else True,
                          worker_init_fn=init_fn)
DataLoader(self.datasets["validation"],
                          batch_size=self.batch_size,
                          num_workers=self.num_workers,
                          worker_init_fn=init_fn,
                          shuffle=shuffle)
DataLoader(self.datasets["test"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn, shuffle=shuffle)
DataLoader(self.datasets["predict"], batch_size=self.batch_size,
                          num_workers=self.num_workers, worker_init_fn=init_fn)
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/main.py#L283
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/main.py#L292
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/main.py#L308
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/main.py#L316

===================================
https://github.com/TAU-VAILab/Vox-E
===================================

Found 8 times
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=0 if dataset.cached_data_mode else dataset,
        pin_memory=not dataset.cached_data_mode and num_workers > 0,
        prefetch_factor=num_workers
        if not dataset.cached_data_mode and num_workers > 0
        else 2,
        persistent_workers=not dataset.cached_data_mode and num_workers > 0,
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=0 if dataset.cached_data_mode else dataset,
        pin_memory=not dataset.cached_data_mode and num_workers > 0,
        prefetch_factor=num_workers
        if not dataset.cached_data_mode and num_workers > 0
        else 2,
        persistent_workers=not dataset.cached_data_mode and num_workers > 0,
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=0 if dataset.cached_data_mode else dataset,
        pin_memory=not dataset.cached_data_mode and num_workers > 0,
        prefetch_factor=num_workers
        if not dataset.cached_data_mode and num_workers > 0
        else 2,
        persistent_workers=not dataset.cached_data_mode and num_workers > 0,
    )
torch_data.DataLoader(
        posed_images_dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=0,
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=0 if dataset.cached_data_mode else dataset,
        pin_memory=not dataset.cached_data_mode and num_workers > 0,
        prefetch_factor=num_workers
        if not dataset.cached_data_mode and num_workers > 0
        else 2,
        persistent_workers=not dataset.cached_data_mode and num_workers > 0,
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=0 if dataset.cached_data_mode else dataset,
        pin_memory=not dataset.cached_data_mode and num_workers > 0,
        prefetch_factor=num_workers
        if not dataset.cached_data_mode and num_workers > 0
        else 2,
        persistent_workers=not dataset.cached_data_mode and num_workers > 0,
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=0 if dataset.cached_data_mode else dataset,
        pin_memory=not dataset.cached_data_mode and num_workers > 0,
        prefetch_factor=num_workers
        if not dataset.cached_data_mode and num_workers > 0
        else 2,
        persistent_workers=not dataset.cached_data_mode and num_workers > 0,
    )
DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=True,
        drop_last=True,
        num_workers=0 if dataset.cached_data_mode else dataset,
        pin_memory=not dataset.cached_data_mode and num_workers > 0,
        prefetch_factor=num_workers
        if not dataset.cached_data_mode and num_workers > 0
        else 2,
        persistent_workers=not dataset.cached_data_mode and num_workers > 0,
    )
https://github.com/TAU-VAILab/Vox-E/blob/cf7524134cb5ce9a8155c4de85785812209303c8/render_sh_based_voxel_grid.py#L181
https://github.com/TAU-VAILab/Vox-E/blob/cf7524134cb5ce9a8155c4de85785812209303c8/render_sh_based_voxel_grid_attn.py#L221
https://github.com/TAU-VAILab/Vox-E/blob/cf7524134cb5ce9a8155c4de85785812209303c8/segment_attn_relu_field.py#L288
https://github.com/TAU-VAILab/Vox-E/blob/cf7524134cb5ce9a8155c4de85785812209303c8/thre3d_atom/data/tests/test_datasets.py#L22
https://github.com/TAU-VAILab/Vox-E/blob/cf7524134cb5ce9a8155c4de85785812209303c8/thre3d_atom/modules/attn_grid_trainer.py#L693
https://github.com/TAU-VAILab/Vox-E/blob/cf7524134cb5ce9a8155c4de85785812209303c8/thre3d_atom/modules/grid_refine.py#L667
https://github.com/TAU-VAILab/Vox-E/blob/cf7524134cb5ce9a8155c4de85785812209303c8/thre3d_atom/modules/sds_trainer.py#L481
https://github.com/TAU-VAILab/Vox-E/blob/cf7524134cb5ce9a8155c4de85785812209303c8/thre3d_atom/modules/trainers.py#L518

==================================
https://github.com/half-potato/nmf
==================================

Found 1 times
DataLoader(list(range(size)), batch_size=1, collate_fn=self.collate, shuffle=self.training, num_workers=0)
https://github.com/half-potato/nmf/blob/3f97cd3dd81e5a558499cdaa628382122afad087/dataLoader/generic.py#L407

============================
https://github.com/DNMP/DNMP
============================

Found 7 times
torch.utils.data.DataLoader(self.test_dataset,
                                                 batch_size=1,
                                                 shuffle=False,
                                                 num_workers=self.config.num_workers,
                                                 pin_memory=False)
torch.utils.data.DataLoader(self.train_dataset,
                                                   batch_size=1,
                                                   shuffle=True,
                                                   num_workers=self.config.num_workers,
                                                   pin_memory=False)
torch.utils.data.DataLoader(self.val_dataset,
                                                 batch_size=1,
                                                 shuffle=False,
                                                 num_workers=self.config.num_workers,
                                                 pin_memory=False)
torch.utils.data.DataLoader(self.train_dataset,
                                                   batch_size=1,
                                                   shuffle=True,
                                                   num_workers=self.config.num_workers,
                                                   pin_memory=False)
torch.utils.data.DataLoader(self.val_dataset,
                                                 batch_size=1,
                                                 shuffle=False,
                                                 num_workers=self.config.num_workers,
                                                 pin_memory=False)
torch.utils.data.DataLoader(self.train_dataset,
                                                   batch_size=self.config.batch_size,
                                                   shuffle=True,
                                                   num_workers=self.config.num_workers,
                                                   pin_memory=False, drop_last=True)
torch.utils.data.DataLoader(self.val_dataset,
                                                 batch_size=1,
                                                 shuffle=False,
                                                 num_workers=self.config.num_workers,
                                                 pin_memory=False)
https://github.com/DNMP/DNMP/blob/ff404e2a95b09fda450fce8d52cd528a5c51100a/core/tester.py#L97
https://github.com/DNMP/DNMP/blob/ff404e2a95b09fda450fce8d52cd528a5c51100a/core/trainer_geometry.py#L97
https://github.com/DNMP/DNMP/blob/ff404e2a95b09fda450fce8d52cd528a5c51100a/core/trainer_geometry.py#L103
https://github.com/DNMP/DNMP/blob/ff404e2a95b09fda450fce8d52cd528a5c51100a/core/trainer_render.py#L129
https://github.com/DNMP/DNMP/blob/ff404e2a95b09fda450fce8d52cd528a5c51100a/core/trainer_render.py#L135
https://github.com/DNMP/DNMP/blob/ff404e2a95b09fda450fce8d52cd528a5c51100a/meshae/trainer.py#L54
https://github.com/DNMP/DNMP/blob/ff404e2a95b09fda450fce8d52cd528a5c51100a/meshae/trainer.py#L60

===================================
https://github.com/ZcyMonkey/AttT2M
===================================

Found 4 times
torch.utils.data.DataLoader(Text2MotionDataset(dataset_name, is_test, w_vectorizer, unit_length=unit_length),
                                              batch_size,
                                              shuffle = True,
                                              num_workers=num_workers,
                                              collate_fn=collate_fn,
                                              drop_last = True)
torch.utils.data.DataLoader(Text2MotionDataset(dataset_name, codebook_size = codebook_size, tokenizer_name = tokenizer_name, unit_length=unit_length),
                                              batch_size,
                                              shuffle=True,
                                              num_workers=num_workers,
                                              #collate_fn=collate_fn,
                                              drop_last = True)
torch.utils.data.DataLoader(trainSet,
                                              batch_size,
                                              shuffle=True,
                                              #sampler=sampler,
                                              num_workers=num_workers,
                                              #collate_fn=collate_fn,
                                              drop_last = True)
torch.utils.data.DataLoader(VQMotionDataset(dataset_name, unit_length=unit_length),
                                              batch_size,
                                              shuffle=True,
                                              num_workers=num_workers,
                                              #collate_fn=collate_fn,
                                              drop_last = True)
https://github.com/ZcyMonkey/AttT2M/blob/447d5a8550ac09126caf2ce365595fb3cedb5b9a/dataset/dataset_TM_eval.py#L205
https://github.com/ZcyMonkey/AttT2M/blob/447d5a8550ac09126caf2ce365595fb3cedb5b9a/dataset/dataset_TM_train.py#L145
https://github.com/ZcyMonkey/AttT2M/blob/447d5a8550ac09126caf2ce365595fb3cedb5b9a/dataset/dataset_VQ.py#L96
https://github.com/ZcyMonkey/AttT2M/blob/447d5a8550ac09126caf2ce365595fb3cedb5b9a/dataset/dataset_tokenize.py#L105

=======================================
https://github.com/jpthu17/DiffusionRet
=======================================

Found 10 times
DataLoader(
        msrvtt_dataset,
        batch_size=args.batch_size // args.world_size,
        num_workers=args.workers,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        msrvtt_testset,
        batch_size=args.batch_size_val // args.world_size,
        num_workers=args.workers,
        shuffle=False,
        sampler=test_sampler,
        drop_last=False,
    )
DataLoader(
        activity_dataset,
        batch_size=args.batch_size // args.world_size,
        num_workers=args.workers,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        activity_testset,
        batch_size=args.batch_size_val // args.world_size,
        num_workers=args.workers,
        shuffle=False,
        sampler=test_sampler,
        drop_last=False,
    )
DataLoader(
        didemo_dataset,
        batch_size=args.batch_size // args.world_size,
        num_workers=args.workers,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        didemo_testset,
        batch_size=args.batch_size_val // args.world_size,
        num_workers=args.workers,
        shuffle=False,
        sampler=test_sampler,
        drop_last=False,
    )
DataLoader(
        lsmdc_dataset,
        batch_size=args.batch_size // args.world_size,
        num_workers=args.workers,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        lsmdc_testset,
        batch_size=args.batch_size_val // args.world_size,
        num_workers=args.workers,
        shuffle=False,
        sampler=test_sampler,
        drop_last=False,
    )
DataLoader(
        msvd_dataset,
        batch_size=args.batch_size // args.world_size,
        num_workers=args.workers,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        msvd_testset,
        batch_size=args.batch_size_val,
        num_workers=args.workers,
        shuffle=False,
        drop_last=False,
    )
https://github.com/jpthu17/DiffusionRet/blob/445ac7b0e1fd2a48bab0ae20ec714e40ba01cc8c/DiffusionRet/dataloaders/data_dataloaders.py#L25
https://github.com/jpthu17/DiffusionRet/blob/445ac7b0e1fd2a48bab0ae20ec714e40ba01cc8c/DiffusionRet/dataloaders/data_dataloaders.py#L54
https://github.com/jpthu17/DiffusionRet/blob/445ac7b0e1fd2a48bab0ae20ec714e40ba01cc8c/DiffusionRet/dataloaders/data_dataloaders.py#L77
https://github.com/jpthu17/DiffusionRet/blob/445ac7b0e1fd2a48bab0ae20ec714e40ba01cc8c/DiffusionRet/dataloaders/data_dataloaders.py#L104
https://github.com/jpthu17/DiffusionRet/blob/445ac7b0e1fd2a48bab0ae20ec714e40ba01cc8c/DiffusionRet/dataloaders/data_dataloaders.py#L127
https://github.com/jpthu17/DiffusionRet/blob/445ac7b0e1fd2a48bab0ae20ec714e40ba01cc8c/DiffusionRet/dataloaders/data_dataloaders.py#L154
https://github.com/jpthu17/DiffusionRet/blob/445ac7b0e1fd2a48bab0ae20ec714e40ba01cc8c/DiffusionRet/dataloaders/data_dataloaders.py#L178
https://github.com/jpthu17/DiffusionRet/blob/445ac7b0e1fd2a48bab0ae20ec714e40ba01cc8c/DiffusionRet/dataloaders/data_dataloaders.py#L206
https://github.com/jpthu17/DiffusionRet/blob/445ac7b0e1fd2a48bab0ae20ec714e40ba01cc8c/DiffusionRet/dataloaders/data_dataloaders.py#L230
https://github.com/jpthu17/DiffusionRet/blob/445ac7b0e1fd2a48bab0ae20ec714e40ba01cc8c/DiffusionRet/dataloaders/data_dataloaders.py#L255

================================
https://github.com/HAWLYQ/ET-Cap
================================

Found 1 times
DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
        pin_memory=kwargs.pop('pin_memory', False),
        worker_init_fn=init_fn,
        **kwargs)
https://github.com/HAWLYQ/ET-Cap/blob/ce7e55ff944c86caa66761eb6c4a4fe271da6534/CaBOT/mmdetection/mmdet/datasets/builder.py#L195

=========================================================
https://github.com/xuanlinli17/large_vlm_distillation_ood
=========================================================

Found 12 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        val_dataset, 
        batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            val_on_train_dataset, 
            batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=args.train_batch,
            num_workers=args.workers, pin_memory=True,
            sampler=FewShotSampler(train_dataset, args.train_batch))
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=args.train_batch, shuffle=True,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        val_dataset, 
        batch_size=args.test_batch, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            val_on_train_dataset, 
            batch_size=args.test_batch, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=args.train_batch,
            num_workers=args.workers, pin_memory=True,
            sampler=FewShotSampler(train_dataset, args.train_batch))
torch.utils.data.DataLoader(
            train_dataset,
            batch_size=args.train_batch, shuffle=True,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        val_dataset, 
        batch_size=args.test_batch, shuffle=False,
        num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
            val_on_train_dataset, 
            batch_size=args.test_batch, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(dataset, batch_size=1, shuffle=True, num_workers=2)
https://github.com/xuanlinli17/large_vlm_distillation_ood/blob/71a3ecf59b3817b0a2d76d308f5ec41db08728be/evaluate_clip.py#L67
https://github.com/xuanlinli17/large_vlm_distillation_ood/blob/71a3ecf59b3817b0a2d76d308f5ec41db08728be/evaluate_clip.py#L77
https://github.com/xuanlinli17/large_vlm_distillation_ood/blob/71a3ecf59b3817b0a2d76d308f5ec41db08728be/evaluate_clip.py#L90
https://github.com/xuanlinli17/large_vlm_distillation_ood/blob/71a3ecf59b3817b0a2d76d308f5ec41db08728be/main_experiments.py#L257
https://github.com/xuanlinli17/large_vlm_distillation_ood/blob/71a3ecf59b3817b0a2d76d308f5ec41db08728be/main_experiments.py#L263
https://github.com/xuanlinli17/large_vlm_distillation_ood/blob/71a3ecf59b3817b0a2d76d308f5ec41db08728be/main_experiments.py#L277
https://github.com/xuanlinli17/large_vlm_distillation_ood/blob/71a3ecf59b3817b0a2d76d308f5ec41db08728be/main_experiments.py#L290
https://github.com/xuanlinli17/large_vlm_distillation_ood/blob/71a3ecf59b3817b0a2d76d308f5ec41db08728be/robotics.py#L249
https://github.com/xuanlinli17/large_vlm_distillation_ood/blob/71a3ecf59b3817b0a2d76d308f5ec41db08728be/robotics.py#L255
https://github.com/xuanlinli17/large_vlm_distillation_ood/blob/71a3ecf59b3817b0a2d76d308f5ec41db08728be/robotics.py#L267
https://github.com/xuanlinli17/large_vlm_distillation_ood/blob/71a3ecf59b3817b0a2d76d308f5ec41db08728be/robotics.py#L280
https://github.com/xuanlinli17/large_vlm_distillation_ood/blob/71a3ecf59b3817b0a2d76d308f5ec41db08728be/utils/misc.py#L21

========================================
https://github.com/postech-ami/TextManiA
========================================

Found 16 times
DataLoader(
            dataset     = self.OOD_dataset if type=='OOD' else self.val_dataset ,
            batch_size  = 4096                                                  ,
            shuffle     = False                                                 ,
            num_workers = 2                                                     ,
            drop_last   = False
        )
DataLoader(
            dataset     = self.OOD_dataset if type=='OOD' else self.val_dataset ,
            batch_size  = 4096                                                  ,
            shuffle     = False                                                 ,
            num_workers = 2                                                     ,
            drop_last   = False
        )
torch.utils.data.DataLoader(
        datasets.MNIST(data_target_dir, train=True, download=True, transform=transform_train),
        batch_size=batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(
        datasets.MNIST(data_target_dir, train=False, transform=transform_test),
        batch_size=test_batch_size, shuffle=True, **kwargs)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, shuffle=True,
                         num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(test_data, batch_size=batch_size, shuffle=False,
                        num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, shuffle=True, num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(test_data, batch_size=batch_size, shuffle=False, num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_data, batch_size=batch_size, shuffle=(train_sampler is None),
        num_workers=workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
            val_data, batch_size=batch_size, shuffle=False,
            num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, shuffle=False, num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(test_data, batch_size=batch_size, shuffle=False, num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, sampler = train_sampler, shuffle=False, num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, sampler = valid_sampler, shuffle=False, num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(train_data, batch_size=batch_size, sampler = unlabelled_sampler,shuffle=False,  num_workers=workers, pin_memory=True)
torch.utils.data.DataLoader(test_data, batch_size=batch_size, shuffle=False, num_workers=workers, pin_memory=True)
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/imbalance_cifar.py#L152
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/imbalance_cifar.py#L207
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L53
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L56
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L125
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L127
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L318
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L321
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L333
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L337
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L341
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L344
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L453
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L454
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L455
https://github.com/postech-ami/TextManiA/blob/0736d3e28893eacc25abc18bad321b4a8ee034c2/src/load_data.py#L456

======================================
https://github.com/yangyangyang127/APE
======================================

Found 3 times
torch.utils.data.DataLoader(dataset.test, batch_size=64, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(dataset.train, batch_size=256, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(
        dataset_wrapper(data_source, input_size=input_size, transform=tfm, is_train=is_train),
        batch_size=batch_size,
        num_workers=8,
        shuffle=shuffle,
        drop_last=False,
        pin_memory=(torch.cuda.is_available())
    )
https://github.com/yangyangyang127/APE/blob/20258ec7832c81239bf1be436d67642876c61b25/extract_features.py#L113
https://github.com/yangyangyang127/APE/blob/20258ec7832c81239bf1be436d67642876c61b25/extract_features.py#L114
https://github.com/yangyangyang127/APE/blob/20258ec7832c81239bf1be436d67642876c61b25/datasets/utils.py#L376

===============================================
https://github.com/yangyangyang127/PointCLIP_V2
===============================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_wrapper(cfg, data_source, is_train=is_train),
        batch_size=batch_size,
        sampler=sampler,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        drop_last=is_train and len(data_source) >= batch_size,
        pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA)
    )
DataLoader(ShapeNetPart(data_path, partition=mode, num_points=PC_NUM, class_choice=class_choice),
                            batch_size=1, shuffle=False, drop_last=False)
https://github.com/yangyangyang127/PointCLIP_V2/blob/0b5aee8eca534593a6e4a5b249e9468474f16d4c/zeroshot_cls/Dassl3D/dassl/data/data_manager.py#L46
https://github.com/yangyangyang127/PointCLIP_V2/blob/0b5aee8eca534593a6e4a5b249e9468474f16d4c/zeroshot_seg/main.py#L61

==================================
https://github.com/ZzZZCHS/WS-3DVG
==================================

Found 3 times
DataLoader(dataset, batch_size=args.batch_size, shuffle=True)
torch.utils.data.DataLoader(dataset,
                                                 batch_size=bs,
                                                 shuffle=False,
                                                 num_workers=0,
                                                 worker_init_fn=my_worker_init_fn,
                                                 sampler=sampler,
                                                 drop_last=True)
DataLoader(dataset, batch_size=bs, shuffle=True if split == "train" else False, num_workers=0)
https://github.com/ZzZZCHS/WS-3DVG/blob/ff14e630456cce1d2520088e5b1246a25909ab66/scripts/joint_scripts/ground_eval.py#L59
https://github.com/ZzZZCHS/WS-3DVG/blob/ff14e630456cce1d2520088e5b1246a25909ab66/scripts/joint_scripts/train.py#L74
https://github.com/ZzZZCHS/WS-3DVG/blob/ff14e630456cce1d2520088e5b1246a25909ab66/scripts/joint_scripts/train.py#L82

================================
https://github.com/allenai/close
================================

Found 3 times
DataLoader(
    [model.preprocess_example(x) for x in examples],
    batch_size=batch_size,
    collate_fn=CollateWithBatch(model.get_collate()),
    num_workers=num_workers,
    shuffle=False,
    pin_memory=True
  )
DataLoader(
        training_examples[:MAX_TRAIN_EXAMPLES], self.batch_size,
        shuffle=True, num_workers=self.num_workers,
        collate_fn=model.get_collate(True),
        pin_memory=self.pin_memory,
      )
DataLoader(
        [model.preprocess_example(x) for x in eval_examples[:MAX_EVAL_EXAMPLES]],
        batch_size=self.batch_size,
        collate_fn=CollateWithBatch(model.get_collate()),
        num_workers=self.num_workers,
        shuffle=False,
        pin_memory=self.pin_memory
      )
https://github.com/allenai/close/blob/80f8db0b1658659b8b796e7edcc29450431ea2e3/close/train/runner.py#L62
https://github.com/allenai/close/blob/80f8db0b1658659b8b796e7edcc29450431ea2e3/close/train/trainer.py#L222
https://github.com/allenai/close/blob/80f8db0b1658659b8b796e7edcc29450431ea2e3/close/train/trainer.py#L294

===========================================
https://github.com/hengliusky/Few_shot_RVOS
===========================================

Found 6 times
DataLoader(dataset_test, batch_size=1, num_workers=0, collate_fn=utils.collate_fn2)
DataLoader(dataset_train, batch_size=1, num_workers=0, collate_fn=utils.collate_fn)
DataLoader(dataset_train, batch_size=1, num_workers=0, collate_fn=utils.collate_fn)
DataLoader(dataset_train, batch_size=1, num_workers=0, collate_fn=utils.collate_fn)
DataLoader(dataset_train, batch_size=1, num_workers=0, collate_fn=utils.collate_fn)
DataLoader(dataset_test, batch_size=1, num_workers=0, collate_fn=utils.collate_fn)
https://github.com/hengliusky/Few_shot_RVOS/blob/3147399bd96d70ac64b5602d97ea771c53e5a911/test.py#L55
https://github.com/hengliusky/Few_shot_RVOS/blob/3147399bd96d70ac64b5602d97ea771c53e5a911/train_ytvos.py#L99
https://github.com/hengliusky/Few_shot_RVOS/blob/3147399bd96d70ac64b5602d97ea771c53e5a911/train_ytvos_base.py#L98
https://github.com/hengliusky/Few_shot_RVOS/blob/3147399bd96d70ac64b5602d97ea771c53e5a911/train_ytvos_self.py#L100
https://github.com/hengliusky/Few_shot_RVOS/blob/3147399bd96d70ac64b5602d97ea771c53e5a911/datasets/ref_sailvos.py#L348
https://github.com/hengliusky/Few_shot_RVOS/blob/3147399bd96d70ac64b5602d97ea771c53e5a911/datasets/ref_sailvos.py#L349

====================================
https://github.com/henghuiding/MeViS
====================================

Found 1 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=trivial_batch_collator,
    )
https://github.com/henghuiding/MeViS/blob/7c0620b9dc0ab7802747957f221674f175c8a47b/lmpm/data/build.py#L249

======================================
https://github.com/chunmeifeng/DiffTPT
======================================

Found 2 times
torch.utils.data.DataLoader(dataset, batch_size=args.batch_size, shuffle=False)
torch.utils.data.DataLoader(
                    val_dataset,
                    batch_size=batchsize, shuffle=True,
                    num_workers=args.workers, pin_memory=True)
https://github.com/chunmeifeng/DiffTPT/blob/2dc4578b362a11994afba8308beee199f54184a0/image_generator_R.py#L91
https://github.com/chunmeifeng/DiffTPT/blob/2dc4578b362a11994afba8308beee199f54184a0/tpt_classification.py#L221

==================================
https://github.com/vishaal27/SuS-X
==================================

Found 27 times
torch.utils.data.DataLoader(val_images, batch_size=self.args.val_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(test_images, batch_size=self.args.val_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(train_images, batch_size=self.args.train_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(train_images, batch_size=self.args.train_batch_size, num_workers=8, shuffle=True)
torch.utils.data.DataLoader(trainset, batch_size=self.args.train_batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(testset, batch_size=self.args.val_batch_size, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(train_images, batch_size=self.args.train_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(train_images, batch_size=self.args.train_batch_size, num_workers=8, shuffle=True)
torch.utils.data.DataLoader(trainset, batch_size=self.args.train_batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(testset, batch_size=self.args.val_batch_size, shuffle=False, num_workers=8)
torch.utils.data.DataLoader(train_images, batch_size=self.args.train_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(train_images, batch_size=self.args.train_batch_size, num_workers=8, shuffle=True)
torch.utils.data.DataLoader(val_images, batch_size=self.args.val_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(train_images, batch_size=self.args.train_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(train_images, batch_size=self.args.train_batch_size, num_workers=8, shuffle=True)
torch.utils.data.DataLoader(val_images, batch_size=self.args.val_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(val_images, batch_size=self.args.val_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(val_dataset, batch_size=self.args.val_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(test_dataset, batch_size=self.args.val_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(train_dataset, batch_size=self.args.train_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(train_dataset, batch_size=self.args.train_batch_size, num_workers=8, shuffle=True)
torch.utils.data.DataLoader(val_dataset, batch_size=self.args.val_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(test_dataset, batch_size=self.args.val_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(train_dataset, batch_size=self.args.train_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(train_dataset, batch_size=self.args.train_batch_size, num_workers=8, shuffle=True)
torch.utils.data.DataLoader(lc_images, batch_size=args.val_batch_size, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(sd_images, batch_size=args.val_batch_size, num_workers=8, shuffle=False)
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L161
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L162
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L196
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L197
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L214
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L216
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L242
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L243
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L259
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L261
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L287
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L288
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L300
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L334
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L335
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L346
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L359
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L439
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L440
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L441
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L442
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L528
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L529
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L530
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L531
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/encode_sus_lc.py#L70
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/encode_sus_sd.py#L70

===========================================
https://github.com/wudongming97/OnlineRefer
===========================================

Found 5 times
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                     drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers,
                                     pin_memory=True)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers,
                                   pin_memory=True)
DataLoader(
            dataset_val,
            args.batch_size,
            sampler=sampler_val,
            drop_last=False,
            collate_fn=utils.collate_fn,
            num_workers=args.num_workers,
        )
https://github.com/wudongming97/OnlineRefer/blob/5f13c5e35dd8231d29c52ad7b2d298471e9edbc8/main.py#L108
https://github.com/wudongming97/OnlineRefer/blob/5f13c5e35dd8231d29c52ad7b2d298471e9edbc8/main.py#L121
https://github.com/wudongming97/OnlineRefer/blob/5f13c5e35dd8231d29c52ad7b2d298471e9edbc8/main_joint.py#L110
https://github.com/wudongming97/OnlineRefer/blob/5f13c5e35dd8231d29c52ad7b2d298471e9edbc8/main_pretrain.py#L116
https://github.com/wudongming97/OnlineRefer/blob/5f13c5e35dd8231d29c52ad7b2d298471e9edbc8/main_pretrain.py#L133

=================================
https://github.com/showlab/UniVTG
=================================

Found 12 times
DataLoader(
        train_val_dataset,
        collate_fn=start_end_collate_hl,
        batch_size=opt.eval_bsz,
        num_workers=opt.num_workers,
        shuffle=False,
        pin_memory=opt.pin_memory
    )
DataLoader(
        train_val_dataset,
        collate_fn=start_end_collate_hl,
        batch_size=opt.bsz,
        num_workers=opt.num_workers,
        shuffle=True,
        pin_memory=opt.pin_memory
    )
DataLoader(
        eval_dataset,
        collate_fn=start_end_collate_mr,
        batch_size=opt.eval_bsz,
        num_workers=opt.num_workers,
        shuffle=False,
        pin_memory=opt.pin_memory
    )
DataLoader(train_dataset, batch_size=opt.bsz, collate_fn=start_end_collate_qfvs, shuffle=True, num_workers=opt.num_workers)
DataLoader(
        train_val_dataset,
        collate_fn=start_end_collate_hl,
        batch_size=opt.eval_bsz,
        num_workers=opt.num_workers,
        shuffle=False,
        pin_memory=opt.pin_memory
    )
DataLoader(
        train_val_dataset,
        collate_fn=start_end_collate_hl,
        batch_size=opt.bsz,
        num_workers=opt.num_workers,
        shuffle=True,
        pin_memory=opt.pin_memory
    )
DataLoader(
        train_dataset,
        collate_fn=start_end_collate_mr,
        batch_size=opt.bsz,
        num_workers=opt.num_workers,
        shuffle=True,
        pin_memory=opt.pin_memory
    )
DataLoader(train_dataset, batch_size=opt.bsz, collate_fn=start_end_collate_qfvs, shuffle=True, num_workers=opt.num_workers)
DataLoader(
        train_dataset,
        collate_fn=start_end_collate_mr,
        batch_size=opt.bsz,
        num_workers=opt.num_workers,
        shuffle=True,
        pin_memory=opt.pin_memory
    )
DataLoader(
        train_dataset,
        collate_fn=start_end_collate_mr,
        batch_size=opt.bsz,
        num_workers=opt.num_workers,
        # shuffle=True,
        pin_memory=opt.pin_memory,
        sampler=DistributedSampler(train_dataset)
    )
DataLoader(
      dataset,
      batch_size=1,
      shuffle=False,
      num_workers=num_decoding_thread,
      sampler=sampler if n_dataset > 10 else None,
  )
DataLoader(
        dataset,
        batch_size=1,
        shuffle=False,
        num_workers=num_decoding_thread,
        sampler=None,
    )
https://github.com/showlab/UniVTG/blob/5406514e2c855dfade76f49356c129262cd74f46/main/inference_hl.py#L35
https://github.com/showlab/UniVTG/blob/5406514e2c855dfade76f49356c129262cd74f46/main/inference_hl.py#L74
https://github.com/showlab/UniVTG/blob/5406514e2c855dfade76f49356c129262cd74f46/main/inference_mr.py#L208
https://github.com/showlab/UniVTG/blob/5406514e2c855dfade76f49356c129262cd74f46/main/inference_qfvs.py#L316
https://github.com/showlab/UniVTG/blob/5406514e2c855dfade76f49356c129262cd74f46/main/train_hl.py#L35
https://github.com/showlab/UniVTG/blob/5406514e2c855dfade76f49356c129262cd74f46/main/train_hl.py#L74
https://github.com/showlab/UniVTG/blob/5406514e2c855dfade76f49356c129262cd74f46/main/train_mr.py#L99
https://github.com/showlab/UniVTG/blob/5406514e2c855dfade76f49356c129262cd74f46/main/train_qfvs.py#L300
https://github.com/showlab/UniVTG/blob/5406514e2c855dfade76f49356c129262cd74f46/main/train_vlp.py#L107
https://github.com/showlab/UniVTG/blob/5406514e2c855dfade76f49356c129262cd74f46/main/train_vlp_ddp.py#L105
https://github.com/showlab/UniVTG/blob/5406514e2c855dfade76f49356c129262cd74f46/run_on_video/clip_feature_extractor.py#L36
https://github.com/showlab/UniVTG/blob/5406514e2c855dfade76f49356c129262cd74f46/run_on_video/video_extractor.py#L31

===================================
https://github.com/Ziyang412/UCoFiA
===================================

Found 32 times
DataLoader(
        msrvtt_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        msrvtt_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        msvd_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        msvd_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        lsmdc_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        lsmdc_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        activity_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        activity_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        activity_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        activity_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        didemo_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        didemo_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        msrvtt_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        msrvtt_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        msvd_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        msvd_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        lsmdc_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        lsmdc_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        activity_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        activity_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        didemo_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        didemo_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        msrvtt_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        msrvtt_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        msvd_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        msvd_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        lsmdc_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        lsmdc_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        activity_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        activity_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
DataLoader(
        didemo_dataset,
        batch_size=args.batch_size // args.n_gpu,
        num_workers=args.num_thread_reader,
        pin_memory=False,
        shuffle=(train_sampler is None),
        sampler=train_sampler,
        drop_last=True,
    )
DataLoader(
        didemo_testset,
        batch_size=args.batch_size_val,
        num_workers=args.num_thread_reader,
        shuffle=False,
        drop_last=False,
    )
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_t2v/dataloaders/data_dataloaders.py#L25
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_t2v/dataloaders/data_dataloaders.py#L48
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_t2v/dataloaders/data_dataloaders.py#L72
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_t2v/dataloaders/data_dataloaders.py#L96
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_t2v/dataloaders/data_dataloaders.py#L120
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_t2v/dataloaders/data_dataloaders.py#L144
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_t2v/dataloaders/data_dataloaders.py#L168
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_t2v/dataloaders/data_dataloaders.py#L192
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_t2v/dataloaders/data_dataloaders.py#L215
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_t2v/dataloaders/data_dataloaders.py#L239
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_t2v/dataloaders/data_dataloaders.py#L263
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_t2v/dataloaders/data_dataloaders.py#L287
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_v2t/dataloaders/data_dataloaders.py#L52
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_v2t/dataloaders/data_dataloaders.py#L78
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_v2t/dataloaders/data_dataloaders.py#L102
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_v2t/dataloaders/data_dataloaders.py#L126
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_v2t/dataloaders/data_dataloaders.py#L150
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_v2t/dataloaders/data_dataloaders.py#L174
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_v2t/dataloaders/data_dataloaders.py#L198
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_v2t/dataloaders/data_dataloaders.py#L222
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_v2t/dataloaders/data_dataloaders.py#L246
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/eval_v2t/dataloaders/data_dataloaders.py#L270
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/train/dataloaders/data_dataloaders.py#L25
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/train/dataloaders/data_dataloaders.py#L48
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/train/dataloaders/data_dataloaders.py#L72
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/train/dataloaders/data_dataloaders.py#L96
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/train/dataloaders/data_dataloaders.py#L120
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/train/dataloaders/data_dataloaders.py#L144
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/train/dataloaders/data_dataloaders.py#L168
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/train/dataloaders/data_dataloaders.py#L192
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/train/dataloaders/data_dataloaders.py#L216
https://github.com/Ziyang412/UCoFiA/blob/a65f5e8c40c0e4e2811a9af8e31007f5602f323c/train/dataloaders/data_dataloaders.py#L240

============================
https://github.com/zjh31/CPL
============================

Found 7 times
DataLoader(dataset_test, args.batch_size, sampler=sampler_test,
                                  drop_last=False, collate_fn=utils.collate_fn_train, num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn_train, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn_test, num_workers=args.num_workers)
DataLoader(dataset_test, args.batch_size, sampler=sampler_test,
                                  drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(
            dataset,
            batch_size=bs,
            num_workers=n_worker,
            pin_memory=True,
            sampler=sampler,
            shuffle=shuffle,
            collate_fn=collate_fn,
            drop_last=drop_last,
        )
https://github.com/zjh31/CPL/blob/a0d62e8609cd2269eee963bbc9cd0703d3894ff9/eval.py#L177
https://github.com/zjh31/CPL/blob/a0d62e8609cd2269eee963bbc9cd0703d3894ff9/train.py#L225
https://github.com/zjh31/CPL/blob/a0d62e8609cd2269eee963bbc9cd0703d3894ff9/train.py#L227
https://github.com/zjh31/CPL/blob/a0d62e8609cd2269eee963bbc9cd0703d3894ff9/Fully_Supervised_VG/eval.py#L171
https://github.com/zjh31/CPL/blob/a0d62e8609cd2269eee963bbc9cd0703d3894ff9/Fully_Supervised_VG/train.py#L225
https://github.com/zjh31/CPL/blob/a0d62e8609cd2269eee963bbc9cd0703d3894ff9/Fully_Supervised_VG/train.py#L227
https://github.com/zjh31/CPL/blob/a0d62e8609cd2269eee963bbc9cd0703d3894ff9/pseudo_sample_generation/BLIP/data/__init__.py#L47

===============================
https://github.com/wlin-at/MAXI
===============================

Found 5 times
DataLoader(
        train_data, sampler=sampler_train,
        batch_size=config.TRAIN.BATCH_SIZE,
        num_workers=config.TRAIN.NUM_WORKERS,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=config.TRAIN.BATCH_SIZE),
    )
DataLoader(
        train_data_w_idx, sampler=sampler_train_w_idx,
        batch_size=config.TRAIN.BATCH_SIZE,
        num_workers=config.TRAIN.NUM_WORKERS,
        pin_memory=True,
        drop_last=True,
        collate_fn=partial(mmcv_collate, samples_per_gpu=config.TRAIN.BATCH_SIZE),
    )
DataLoader(
        val_data, sampler=sampler_val,
        batch_size=config.VAL_BATCH_SIZE,
        num_workers=config.TRAIN.NUM_WORKERS,
        pin_memory=True,
        drop_last=False,  # why should we drop last?
        collate_fn=partial(mmcv_collate, samples_per_gpu=config.VAL_BATCH_SIZE),
    )
DataLoader(
        val_data_w_idx, sampler=sampler_val_sequential,
        batch_size=config.VAL_BATCH_SIZE,
        num_workers=config.TRAIN.NUM_WORKERS,
        pin_memory=True,
        drop_last=False,
        collate_fn=partial(mmcv_collate, samples_per_gpu=config.VAL_BATCH_SIZE),
    )
DataLoader(
            val_data_zs, sampler=sampler_val_zs,
            batch_size=config.VAL_BATCH_SIZE,
            num_workers=config.TRAIN.NUM_WORKERS,
            pin_memory=True,
            drop_last=False,  # why should we drop last?
            collate_fn=partial(mmcv_collate, samples_per_gpu=config.VAL_BATCH_SIZE),
        )
https://github.com/wlin-at/MAXI/blob/056b8c5fdae01ff29a53c04dcf62c17ef27a8c16/datasets/build.py#L312
https://github.com/wlin-at/MAXI/blob/056b8c5fdae01ff29a53c04dcf62c17ef27a8c16/datasets/build.py#L326
https://github.com/wlin-at/MAXI/blob/056b8c5fdae01ff29a53c04dcf62c17ef27a8c16/datasets/build.py#L360
https://github.com/wlin-at/MAXI/blob/056b8c5fdae01ff29a53c04dcf62c17ef27a8c16/datasets/build.py#L371
https://github.com/wlin-at/MAXI/blob/056b8c5fdae01ff29a53c04dcf62c17ef27a8c16/datasets/build.py#L389

========================================
https://github.com/devaansh100/CLIPTrans
========================================

Found 7 times
DataLoader(img_ds, batch_size = 128, shuffle = False, num_workers = 4, pin_memory = True, collate_fn = collate_images)
DataLoader(text_ds, batch_size = 256, shuffle = False, num_workers = 0, pin_memory = True, collate_fn = collate_texts)
DataLoader(text_ds, batch_size = 256, shuffle = False, num_workers = 4, pin_memory = True, collate_fn = collate_texts)
DataLoader(text_ds, batch_size = 128, shuffle = False, num_workers = 0, pin_memory = True, collate_fn = collate_texts)
DataLoader(text_ds, batch_size = 128, shuffle = False, num_workers = 4, pin_memory = True, collate_fn = collate_texts)
DataLoader(text_ds, batch_size = 512, shuffle = False, num_workers = 4, pin_memory = True, collate_fn = collate_texts)
DataLoader(text_ds, batch_size = 512, shuffle = False, num_workers = 4, pin_memory = True, collate_fn = collate_texts)
https://github.com/devaansh100/CLIPTrans/blob/f3223ee563afd8d40e54d3f415298bc0dd264acf/src/utils/data_utils.py#L28
https://github.com/devaansh100/CLIPTrans/blob/f3223ee563afd8d40e54d3f415298bc0dd264acf/src/utils/multi30k.py#L66
https://github.com/devaansh100/CLIPTrans/blob/f3223ee563afd8d40e54d3f415298bc0dd264acf/src/utils/multi30k.py#L74
https://github.com/devaansh100/CLIPTrans/blob/f3223ee563afd8d40e54d3f415298bc0dd264acf/src/utils/wit.py#L84
https://github.com/devaansh100/CLIPTrans/blob/f3223ee563afd8d40e54d3f415298bc0dd264acf/src/utils/wit.py#L92
https://github.com/devaansh100/CLIPTrans/blob/f3223ee563afd8d40e54d3f415298bc0dd264acf/src/utils/wmt.py#L55
https://github.com/devaansh100/CLIPTrans/blob/f3223ee563afd8d40e54d3f415298bc0dd264acf/src/utils/wmt.py#L63

===================================================
https://github.com/TAU-VAILab/learning-interactions
===================================================

Found 2 times
DataLoader(
            self.train_dataset,
            batch_size=None, # batches are already collated in DS object
            num_workers=self.n_workers,
            pin_memory=True)
DataLoader(
            self.test_dataset,
            shuffle=False,
            batch_size=batch_size,
            num_workers=n_workers,
            pin_memory=True,
            collate_fn=self.collator.collate
        )
https://github.com/TAU-VAILab/learning-interactions/blob/0cbc9a03a6d09f538dd0c079e7f78d4124166849/modeling/src/data.py#L187
https://github.com/TAU-VAILab/learning-interactions/blob/0cbc9a03a6d09f538dd0c079e7f78d4124166849/modeling/src/data.py#L231

====================================
https://github.com/3d-vista/3D-VisTA
====================================

Found 3 times
torch.utils.data.DataLoader(
            dataset,
            batch_size=self.batch_size, 
            num_workers=8,
            pin_memory=True,
            shuffle=True, 
            drop_last = True)
torch.utils.data.DataLoader(
                self.train_dataset,
                batch_size=self.batch_size,
                num_workers=8,
                pin_memory=True,
                shuffle=True,
                drop_last=True
            )
torch.utils.data.DataLoader(
                self.test_dataset,
                batch_size=self.batch_size,
                num_workers=8,
                pin_memory=True,
                shuffle=False
            )
https://github.com/3d-vista/3D-VisTA/blob/3f0575df6aa69d151849d9e643581b3dc31cef51/pipeline/pipeline_mixin.py#L18
https://github.com/3d-vista/3D-VisTA/blob/3f0575df6aa69d151849d9e643581b3dc31cef51/pipeline/pipeline_mixin.py#L29
https://github.com/3d-vista/3D-VisTA/blob/3f0575df6aa69d151849d9e643581b3dc31cef51/pipeline/pipeline_mixin.py#L38

=================================
https://github.com/deepglint/ALIP
=================================

Found 5 times
DataLoader(
            dataset_this_rank, args.batch_size,
            False, num_workers=4, drop_last=False)
DataLoader(valid_dataset, batch_size = batch_size)
DataLoader(text_dataset, batch_size = batch_size, shuffle=False)
DataLoader(valid_dataset, batch_size = batch_size, shuffle=False)
DataLoader(text_dataset, batch_size = batch_size, shuffle=False)
https://github.com/deepglint/ALIP/blob/c5079153c50231b19593b9f8e4bb1e37dd2e9508/zero_shot.py#L124
https://github.com/deepglint/ALIP/blob/c5079153c50231b19593b9f8e4bb1e37dd2e9508/dataloaders/coco.py#L63
https://github.com/deepglint/ALIP/blob/c5079153c50231b19593b9f8e4bb1e37dd2e9508/dataloaders/coco.py#L71
https://github.com/deepglint/ALIP/blob/c5079153c50231b19593b9f8e4bb1e37dd2e9508/dataloaders/flickr30k.py#L61
https://github.com/deepglint/ALIP/blob/c5079153c50231b19593b9f8e4bb1e37dd2e9508/dataloaders/flickr30k.py#L69

=================================
https://github.com/kakaobrain/noc
=================================

Found 5 times
torch.utils.data.DataLoader(
        CLIPCapDataset(captions),
        batch_size=batch_size, num_workers=num_workers, shuffle=False)
torch.utils.data.DataLoader(
        CLIPImageDataset(images),
        batch_size=batch_size, num_workers=num_workers, shuffle=False)
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=(
            cfg.experiment.batch_size_per_proc_train
            if split == "train"
            else cfg.experiment.batch_size_per_proc_test
        ),
        num_workers=cfg.dataset.num_workers,
        pin_memory=cfg.dataset.pin_memory,
        drop_last=drop_last,
        shuffle=shuffle,
        collate_fn=get_collate_fn(cfg),
    )
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=8,
        pin_memory=True,
        drop_last=False,
        collate_fn=torch.utils.data._utils.collate.default_collate,
    )
DataLoader(
        dataset=dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=8,
        pin_memory=True,
        drop_last=False,
        collate_fn=torch.utils.data._utils.collate.default_collate,
    )
https://github.com/kakaobrain/noc/blob/7827a6aa4ce725f51f9e1c1e11389db9fd7cf8ae/evaluation/pycocoevalcap/clipscore/evaluate_clip.py#L59
https://github.com/kakaobrain/noc/blob/7827a6aa4ce725f51f9e1c1e11389db9fd7cf8ae/evaluation/pycocoevalcap/clipscore/evaluate_clip.py#L72
https://github.com/kakaobrain/noc/blob/7827a6aa4ce725f51f9e1c1e11389db9fd7cf8ae/noc/utils/main_utils.py#L140
https://github.com/kakaobrain/noc/blob/7827a6aa4ce725f51f9e1c1e11389db9fd7cf8ae/preprocess/get_filtered_annotations.py#L60
https://github.com/kakaobrain/noc/blob/7827a6aa4ce725f51f9e1c1e11389db9fd7cf8ae/preprocess/get_noc_bucket.py#L63

===================================
https://github.com/SHTUPLUS/GITM-MR
===================================

Found 2 times
torch.utils.data.DataLoader(
        dataset,
        num_workers=num_workers,
        batch_sampler=batch_sampler,
        collate_fn=collocator,
        worker_init_fn=worker_init_reset_seed,
        pin_memory=False
    )
torch.utils.data.DataLoader(
        dataset,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        batch_sampler=batch_sampler,
        collate_fn=collocator,
        pin_memory=False
    )
https://github.com/SHTUPLUS/GITM-MR/blob/0606b133043efe3fbe392edee0ce278c6c0eff89/detectron2/data/build.py#L73
https://github.com/SHTUPLUS/GITM-MR/blob/0606b133043efe3fbe392edee0ce278c6c0eff89/detectron2/data/build.py#L248

============================================
https://github.com/OSU-NLP-Group/LLM-Planner
============================================

Found 5 times
torch.utils.data.DataLoader(
        dataset, batch_size=1, sampler=sampler,
        num_workers=14,  # you might want to increase it for faster processing
        collate_fn=lambda x: x[0])
torch.utils.data.DataLoader(
        dataset, batch_sampler=train_batch_sampler, num_workers=args.workers,
        collate_fn=utils.collate_fn)
torch.utils.data.DataLoader(
        dataset_test, batch_size=1,
        sampler=test_sampler, num_workers=args.workers,
        collate_fn=utils.collate_fn)
torch.utils.data.DataLoader(
        dataset, batch_size=args.batch_size, shuffle=True, num_workers=4,
        collate_fn=utils.collate_fn)
torch.utils.data.DataLoader(
        dataset_test, batch_size=args.batch_size, shuffle=False, num_workers=4,
        collate_fn=utils.collate_fn)
https://github.com/OSU-NLP-Group/LLM-Planner/blob/ace9a936e978974333f9a436a2b6a36cfa137d31/alfworld/alfworld/agents/detector/group_by_aspect_ratio.py#L98
https://github.com/OSU-NLP-Group/LLM-Planner/blob/ace9a936e978974333f9a436a2b6a36cfa137d31/alfworld/alfworld/agents/detector/train.py#L69
https://github.com/OSU-NLP-Group/LLM-Planner/blob/ace9a936e978974333f9a436a2b6a36cfa137d31/alfworld/alfworld/agents/detector/train.py#L73
https://github.com/OSU-NLP-Group/LLM-Planner/blob/ace9a936e978974333f9a436a2b6a36cfa137d31/alfworld/scripts/train_mrcnn.py#L190
https://github.com/OSU-NLP-Group/LLM-Planner/blob/ace9a936e978974333f9a436a2b6a36cfa137d31/alfworld/scripts/train_mrcnn.py#L194

==================================
https://github.com/HenryHZY/VL-PET
==================================

Found 35 times
DataLoader(
            dataset, batch_size=batch_size, shuffle=(train_sampler is None),
            num_workers=workers, pin_memory=True, sampler=train_sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size, shuffle=False,
            num_workers=workers, pin_memory=True,
            sampler=None,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(train_sampler is None),
            num_workers=workers, pin_memory=True, sampler=train_sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size, shuffle=False,
            num_workers=workers, pin_memory=True,
            sampler=None,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(train_sampler is None),
            num_workers=workers, pin_memory=True, sampler=train_sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size, shuffle=False,
            num_workers=workers, pin_memory=True,
            sampler=None,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(train_sampler is None),
            num_workers=workers, pin_memory=True, sampler=train_sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size, shuffle=False,
            num_workers=workers, pin_memory=True,
            sampler=None,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(train_sampler is None),
            num_workers=workers, pin_memory=True, sampler=train_sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size, shuffle=False,
            num_workers=workers, pin_memory=True,
            sampler=None,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(train_sampler is None),
            num_workers=workers, pin_memory=True, sampler=train_sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size, shuffle=False,
            num_workers=workers, pin_memory=True,
            sampler=None,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
DataLoader(d, batch_size=3, collate_fn=d.collate_fn)
DataLoader(
            dataset, batch_size=batch_size, shuffle=(sampler is None),
            num_workers=workers, pin_memory=True, sampler=sampler,
            collate_fn=dataset.collate_fn)
DataLoader(
            dataset,
            batch_size=batch_size,
            num_workers=workers, pin_memory=True,
            sampler=sampler,
            shuffle=None if (sampler is not None) else False,
            collate_fn=dataset.collate_fn,
            drop_last=False)
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/caption_clip_data.py#L379
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/caption_clip_data.py#L384
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/caption_data.py#L391
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/caption_data.py#L396
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/caption_raw_data.py#L364
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/caption_raw_data.py#L369
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/gqa_clip_data.py#L350
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/gqa_clip_data.py#L355
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/gqa_data.py#L353
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/gqa_data.py#L358
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/gqa_raw_data.py#L378
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/gqa_raw_data.py#L383
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/nlvr_clip_data.py#L282
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/nlvr_clip_data.py#L287
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/nlvr_data.py#L293
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/nlvr_data.py#L298
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/nlvr_raw_data.py#L274
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/nlvr_raw_data.py#L279
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/vqa_clip_data.py#L415
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/vqa_clip_data.py#L420
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/vqa_data.py#L394
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/vqa_data.py#L399
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/vqa_raw_data.py#L379
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/vqa_raw_data.py#L384
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/video/how2qa_data.py#L327
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/video/how2qa_data.py#L332
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/video/tvc_data.py#L340
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/video/tvc_data.py#L345
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/video/tvqa_data.py#L335
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/video/tvqa_data.py#L340
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/video/tvqa_matching_data.py#L311
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/video/tvqa_matching_data.py#L316
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/video/tvqa_matching_data.py#L384
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/video/yc2c_data.py#L332
https://github.com/HenryHZY/VL-PET/blob/7430cad350984d3ab52890190476a51355aa0417/src/video/yc2c_data.py#L337

=================================
https://github.com/j-min/DallEval
=================================

Found 27 times
DataLoader(dataset=self, batch_size=self.args.batch_size, shuffle=False,
                            num_workers=self.args.num_workers, collate_fn=GeneratedImagesDataset.collate_fn)
DataLoader(testdata, batch_size=self.config.batch_size, shuffle=False,
                                  num_workers=self.config.num_worker,
                                  pin_memory=True,
                                  drop_last=False)
DataLoader(ds, batch_size=BATCH_SIZE, shuffle=is_shuffle, drop_last=True, sampler=data_sampler)
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        drop_last=False,
        collate_fn=dataset.text_collate_fn,
        num_workers=4,
    )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        drop_last=False,
        collate_fn=dataset.text_collate_fn,
        num_workers=4,
        )
torch.utils.data.DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        drop_last=False,
        collate_fn=dataset.text_collate_fn,
        num_workers=4,
        )
DataLoader(ds, batch_size=BATCH_SIZE, shuffle=is_shuffle, drop_last=True, sampler=data_sampler)
DataLoader(ds, BATCH_SIZE, shuffle = not data_sampler, sampler=data_sampler)
DataLoader(self.trainset,
                          batch_size=self.train_batch_size,
                          num_workers=self.num_workers,
                          pin_memory=True)
DataLoader(self.validset,
                          batch_size=self.valid_batch_size,
                          num_workers=self.num_workers,
                          pin_memory=True)
torch.utils.data.DataLoader(
            dataset,
            batch_size=args.batch_size,
            shuffle=False,
            drop_last=False,
            collate_fn=dataset.text_collate_fn,
            num_workers=4,
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=args.batch_size,
            shuffle=False,
            drop_last=False,
            collate_fn=dataset.text_collate_fn,
            num_workers=4,
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=args.batch_size,
            shuffle=False,
            drop_last=False,
            collate_fn=dataset.text_collate_fn,
            num_workers=4,
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=args.batch_size,
            shuffle=False,
            drop_last=False,
            collate_fn=dataset.text_collate_fn,
            num_workers=4,
        )
DataLoader(self.trainset,
                          batch_size=self.train_batch_size,
                          num_workers=self.num_workers,
                          pin_memory=True)
DataLoader(self.validset,
                          batch_size=self.valid_batch_size,
                          num_workers=self.num_workers,
                          pin_memory=True)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_train, batch_sampler=batch_sampler_train,
                                   collate_fn=utils.collate_fn, num_workers=args.num_workers)
DataLoader(dataset_val, args.batch_size, sampler=sampler_val,
                                 drop_last=False, collate_fn=utils.collate_fn, num_workers=args.num_workers)
torch.utils.data.DataLoader(
        dataset, batch_size=3, shuffle=False,
        num_workers=0,
        collate_fn=utils.collate_fn
        )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=4,
        collate_fn=dataset.collate_fn
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=4,
        collate_fn=dataset.collate_fn
    )
DataLoader(
        dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=4,
        collate_fn=dataset.collate_fn
    )
torch.utils.data.DataLoader(dataset=dataset, batch_size=batch_size, shuffle=False, drop_last=True, num_workers=8)
torch.utils.data.DataLoader(dataset=dataset, batch_size=batch_size, shuffle=False, drop_last=True)
DataLoader(
        dataset,
        batch_size=batch_size,
        num_workers=4,
        collate_fn=dataset.collate_fn,
    )
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/biases/BLIP2/src/dataset/generated_images_dataset.py#L53
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/biases/skintone/TRUST/lib/model.py#L216
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/dalle_small/DALLE-pytorch/finetune_dalle.py#L464
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/dalle_small/DALLE-pytorch/inference_coco30K_dalle.py#L78
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/dalle_small/DALLE-pytorch/inference_coco_dalle.py#L66
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/dalle_small/DALLE-pytorch/inference_skill_dalle.py#L64
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/dalle_small/DALLE-pytorch/train_dalle.py#L400
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/dalle_small/DALLE-pytorch/train_vae.py#L124
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/mindalle/minDALL-E/examples/finetuning_mindalle_skill.py#L111
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/mindalle/minDALL-E/examples/finetuning_mindalle_skill.py#L117
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/mindalle/minDALL-E/examples/inference_mindalle.py#L94
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/mindalle/minDALL-E/examples/inference_mindalle.py#L171
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/mindalle/minDALL-E/examples/inference_mindalle.py#L220
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/mindalle/minDALL-E/examples/inference_mindalle.py#L268
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/mindalle/minDALL-E/examples/transfer_learning_ex.py#L102
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/mindalle/minDALL-E/examples/transfer_learning_ex.py#L108
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/paintskills/detr/main.py#L176
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/paintskills/detr/main.py#L178
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/paintskills/detr/main_orig.py#L161
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/paintskills/detr/main_orig.py#L163
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/paintskills/detr/datasets/skill_dataset.py#L170
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/paintskills/detr/datasets/skill_eval.py#L148
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/paintskills/detr/datasets/skill_eval.py#L363
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/paintskills/detr/datasets/skill_eval.py#L644
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/quality/FID/fid_score.py#L226
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/quality/FID/img_data.py#L48
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/retrieval/rprecision.py#L100

================================
https://github.com/southnx/ACoLP
================================

Found 2 times
DataLoader(
            train_dst, num_workers=4, batch_sampler=train_batch_sampler)
DataLoader(train_dst, batch_size=BATCH_SIZE // 6, num_workers=4,
                              shuffle=True, drop_last=False, collate_fn=lambda x: x)
https://github.com/southnx/ACoLP/blob/d4d299ee553b875206497e4dc3c806beb5ffb5cf/main.py#L111
https://github.com/southnx/ACoLP/blob/d4d299ee553b875206497e4dc3c806beb5ffb5cf/main.py#L116

==============================
https://github.com/mlvlab/OVQA
==============================

Found 2 times
DataLoader(dataset_test, batch_size=args.batch_size_test, sampler=sampler_test, collate_fn=videoqa_collate_fn, num_workers=args.num_workers)
DataLoader(dataset_train, batch_size=args.batch_size, sampler=sampler_train, collate_fn=videoqa_collate_fn, num_workers=args.num_workers)
https://github.com/mlvlab/OVQA/blob/bac9105bff1e1f913cb5480b4fefe5b2e0e8b4d5/train.py#L186
https://github.com/mlvlab/OVQA/blob/bac9105bff1e1f913cb5480b4fefe5b2e0e8b4d5/train.py#L191

==================================
https://github.com/yonseivnl/cmota
==================================

Found 10 times
DataLoader(self.train_dataset, batch_size=self.batch_size, num_workers=self.num_workers, shuffle=True)
DataLoader(self.val_dataset, batch_size=self.batch_size, num_workers=self.num_workers)
DataLoader(self.train_dataset, batch_size=self.batch_size, num_workers=self.num_workers, shuffle=True)
DataLoader(self.val_dataset, batch_size=self.batch_size, num_workers=self.num_workers, shuffle=False)
DataLoader(self.test_dataset, batch_size=self.batch_size, num_workers=self.num_workers, shuffle=False)
DataLoader(*args, **kw)
DataLoader(
			imgs, batch_size=batch_size, num_workers=4 if is_ref else 0, drop_last=True, shuffle=False)
torch.utils.data.DataLoader(
    base_ref, batch_size=bs,  #len(videodataset),
    drop_last=True, shuffle=False)
torch.utils.data.DataLoader(
    base_tar, batch_size=bs,  #len(videodataset),
    drop_last=True, shuffle=False)
DataLoader(
			vids, batch_size=batch_size, num_workers= 10 if is_ref else 0, 
			drop_last=True, shuffle=False)
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/loader.py#L88
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/loader.py#L91
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/loader.py#L674
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/loader.py#L677
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/loader.py#L680
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/utils/wds_workaround.py#L17
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/fvd_calculation/fid_score_v.py#L78
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/fvd_calculation/fvd.py#L58
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/fvd_calculation/fvd.py#L61
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/fvd_calculation/vfid_score.py#L80

===================================
https://github.com/FeiElysia/ViECap
===================================

Found 1 times
DataLoader(datasets, batch_size = batch_size, shuffle = True, drop_last = True, num_workers=args.num_workers, collate_fn=collate)
https://github.com/FeiElysia/ViECap/blob/7c16a7826dd1880a906c541d2a76fc020e8761fd/main.py#L52

===================================
https://github.com/miccunifi/SEARLE
===================================

Found 10 times
DataLoader(dataset=relative_test_dataset, batch_size=32, num_workers=10,
                                      pin_memory=False)
DataLoader(dataset=relative_test_dataset, batch_size=32, num_workers=10,
                                      pin_memory=False, collate_fn=collate_fn, shuffle=False)
DataLoader(dataset, batch_size=args.batch_size, num_workers=args.num_workers, shuffle=False)
DataLoader(dataset, batch_size=args.batch_size, collate_fn=collate_fn, num_workers=8)
DataLoader(dataset=tensor_classic_train_dataset, batch_size=args.batch_size,
                                      num_workers=args.num_workers, pin_memory=True, collate_fn=collate_fn,
                                      shuffle=True, drop_last=True)
DataLoader(dataset=dataset, batch_size=batch_size,
                        num_workers=num_workers, pin_memory=True, collate_fn=collate_fn)
DataLoader(dataset=dataset, batch_size=32, num_workers=10, pin_memory=False,
                             collate_fn=collate_fn)
DataLoader(dataset=relative_val_dataset, batch_size=32, num_workers=10,
                                     pin_memory=False, collate_fn=collate_fn, shuffle=False)
DataLoader(dataset=relative_val_dataset, batch_size=32, num_workers=10,
                                     pin_memory=False, collate_fn=collate_fn)
DataLoader(dataset=relative_val_dataset, batch_size=32, num_workers=10,
                                     pin_memory=False, collate_fn=collate_fn, shuffle=False)
https://github.com/miccunifi/SEARLE/blob/6aaf8189da728e057c7b565e6af81d86dff8c86c/src/generate_test_submission.py#L115
https://github.com/miccunifi/SEARLE/blob/6aaf8189da728e057c7b565e6af81d86dff8c86c/src/generate_test_submission.py#L187
https://github.com/miccunifi/SEARLE/blob/6aaf8189da728e057c7b565e6af81d86dff8c86c/src/image_concepts_association.py#L63
https://github.com/miccunifi/SEARLE/blob/6aaf8189da728e057c7b565e6af81d86dff8c86c/src/oti_inversion.py#L122
https://github.com/miccunifi/SEARLE/blob/6aaf8189da728e057c7b565e6af81d86dff8c86c/src/train_phi.py#L252
https://github.com/miccunifi/SEARLE/blob/6aaf8189da728e057c7b565e6af81d86dff8c86c/src/utils.py#L28
https://github.com/miccunifi/SEARLE/blob/6aaf8189da728e057c7b565e6af81d86dff8c86c/src/utils.py#L78
https://github.com/miccunifi/SEARLE/blob/6aaf8189da728e057c7b565e6af81d86dff8c86c/src/validate.py#L32
https://github.com/miccunifi/SEARLE/blob/6aaf8189da728e057c7b565e6af81d86dff8c86c/src/validate.py#L141
https://github.com/miccunifi/SEARLE/blob/6aaf8189da728e057c7b565e6af81d86dff8c86c/src/validate.py#L266

===============================
https://github.com/Samir55/SATR
===============================

Found 1 times
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=collator,
        )
https://github.com/Samir55/SATR/blob/8abf217d4b3d4268f5f9af4df4113fcf3af23962/GLIP/maskrcnn_benchmark/data/build.py#L471

=======================================
https://github.com/facebookresearch/CiT
=======================================

Found 5 times
torch.utils.data.DataLoader(
            val_dataset, batch_size=args.batch_size//2, shuffle=False,
            num_workers=args.num_workers, pin_memory=False, drop_last=False)
torch.utils.data.DataLoader(
            dataset_train, sampler=sampler_train,
            batch_size=curate_batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=True,
            collate_fn=producer_collator,
            persistent_workers=True
        )
torch.utils.data.DataLoader(
            dataset_train, sampler=sampler_train,
            batch_size=args.batch_size,
            num_workers=args.num_workers,
            pin_memory=args.pin_mem,
            drop_last=True,
        )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
                    dataset_train, shuffle=True,  # just a local sampler.
                    batch_size=args.batch_size,
                    num_workers=args.num_workers,
                    pin_memory=args.pin_mem,
                    drop_last=True,
                )
https://github.com/facebookresearch/CiT/blob/5caecada93496d38adbb8dba378d824bfb2fc0fb/engine.py#L67
https://github.com/facebookresearch/CiT/blob/5caecada93496d38adbb8dba378d824bfb2fc0fb/main.py#L243
https://github.com/facebookresearch/CiT/blob/5caecada93496d38adbb8dba378d824bfb2fc0fb/main.py#L263
https://github.com/facebookresearch/CiT/blob/5caecada93496d38adbb8dba378d824bfb2fc0fb/main.py#L271
https://github.com/facebookresearch/CiT/blob/5caecada93496d38adbb8dba378d824bfb2fc0fb/main.py#L310

==========================================
https://github.com/muzairkhattak/PromptSRC
==========================================

Found 1 times
torch.utils.data.DataLoader(
        DatasetWrapper(cfg, dataset_input, transform=tfm_train, is_train=False),
        batch_size=cfg.DATALOADER.TRAIN_X.BATCH_SIZE,
        sampler=None,
        shuffle=False,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        drop_last=False,
        pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA),
    )
https://github.com/muzairkhattak/PromptSRC/blob/bb95c77b634d63488f2cad81ff4a72d53bdd06d5/lpclip/feat_extractor.py#L132

========================================
https://github.com/3dlg-hcvc/M3DRef-CLIP
========================================

Found 4 times
DataLoader(self.train_set, batch_size=self.data_cfg.dataloader.batch_size, shuffle=True, pin_memory=True,
                          collate_fn=_collate_fn, num_workers=self.data_cfg.dataloader.num_workers, drop_last=True)
DataLoader(self.val_set, batch_size=self.data_cfg.dataloader.batch_size, pin_memory=True,
                          collate_fn=_collate_fn, num_workers=self.data_cfg.dataloader.num_workers)
DataLoader(self.test_set, batch_size=self.data_cfg.dataloader.batch_size, pin_memory=True,
                          collate_fn=_collate_fn, num_workers=self.data_cfg.dataloader.num_workers)
DataLoader(self.test_set, batch_size=self.data_cfg.dataloader.batch_size, pin_memory=True,
                          collate_fn=_collate_fn, num_workers=self.data_cfg.dataloader.num_workers)
https://github.com/3dlg-hcvc/M3DRef-CLIP/blob/babfcc4b4f06bb8ce1471513095a1c80acc0edb5/m3drefclip/data/data_module.py#L27
https://github.com/3dlg-hcvc/M3DRef-CLIP/blob/babfcc4b4f06bb8ce1471513095a1c80acc0edb5/m3drefclip/data/data_module.py#L31
https://github.com/3dlg-hcvc/M3DRef-CLIP/blob/babfcc4b4f06bb8ce1471513095a1c80acc0edb5/m3drefclip/data/data_module.py#L35
https://github.com/3dlg-hcvc/M3DRef-CLIP/blob/babfcc4b4f06bb8ce1471513095a1c80acc0edb5/m3drefclip/data/data_module.py#L39

===================================================
https://github.com/saic-fi/Bayesian-Prompt-Learning
===================================================

Found 1 times
torch.utils.data.DataLoader(
        DatasetWrapper(cfg, dataset_input, transform=tfm_train, is_train=False),
        batch_size=cfg.DATALOADER.TRAIN_X.BATCH_SIZE,
        sampler=None,
        shuffle=False,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        drop_last=False,
        pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA),
    )
https://github.com/saic-fi/Bayesian-Prompt-Learning/blob/8a73fff156327e96f5a3b129aa52dc4dde426c27/lpclip/feat_extractor.py#L132

================================
https://github.com/AirVLN/AirVLN
================================

Found 4 times
torch.utils.data.DataLoader(
            dataset,
            batch_size=args.batchSize,
            shuffle=False,
            collate_fn=collate_fn,
            pin_memory=False,
            drop_last=True,
            num_workers=0,
        )
torch.utils.data.DataLoader(
            dataset,
            batch_size=args.batchSize,
            shuffle=False,
            collate_fn=collate_fn,
            pin_memory=False,
            drop_last=True,
            num_workers=0,
        )
torch.utils.data.DataLoader(
                dataset,
                batch_size=args.batchSize,
                shuffle=False,
                collate_fn=collate_fn,
                pin_memory=False,
                drop_last=True,
                num_workers=0,
            )
torch.utils.data.DataLoader(
                dataset,
                batch_size=args.batchSize,
                shuffle=False,
                collate_fn=collate_fn,
                pin_memory=False,
                drop_last=True,
                num_workers=0,
            )
https://github.com/AirVLN/AirVLN/blob/99374907ac0296bb086b65a0e45719ac64cad4a1/src/vlnce_src/dagger_train.py#L928
https://github.com/AirVLN/AirVLN/blob/99374907ac0296bb086b65a0e45719ac64cad4a1/src/vlnce_src/dagger_train.py#L946
https://github.com/AirVLN/AirVLN/blob/99374907ac0296bb086b65a0e45719ac64cad4a1/src/vlnce_src/train.py#L885
https://github.com/AirVLN/AirVLN/blob/99374907ac0296bb086b65a0e45719ac64cad4a1/src/vlnce_src/train.py#L902

=========================================
https://github.com/facebookresearch/EgoTV
=========================================

Found 32 times
DataLoader(data, batch_size=batch_size, shuffle=True, num_workers=num_workers)
DataLoader(train_set, batch_size=args.batch_size, sampler=train_sampler,
                                          num_workers=args.num_workers, pin_memory=True)
DataLoader(val_set, batch_size=args.batch_size, sampler=val_sampler,
                                          num_workers=args.num_workers, shuffle=False, pin_memory=True)
DataLoader(test_set, batch_size=args.batch_size, sampler=test_sampler,
                             num_workers=args.num_workers, shuffle=False)
DataLoader(train_set, batch_size=args.batch_size, sampler=train_sampler,
                                          num_workers=args.num_workers, pin_memory=True)
DataLoader(val_set, batch_size=args.batch_size, sampler=val_sampler,
                                          num_workers=args.num_workers, shuffle=False, pin_memory=True)
DataLoader(test_set, batch_size=args.batch_size, sampler=test_sampler,
                             num_workers=args.num_workers, shuffle=False)
DataLoader(test_set, batch_size=args.batch_size, sampler=test_sampler,
                             num_workers=args.num_workers, shuffle=False)
DataLoader(train_set, batch_size=args.batch_size, sampler=train_sampler,
                                          num_workers=args.num_workers, pin_memory=True)
DataLoader(val_set, batch_size=args.batch_size, sampler=val_sampler,
                                          num_workers=args.num_workers, shuffle=False, pin_memory=True)
DataLoader(test_set, batch_size=args.batch_size, sampler=test_sampler,
                             num_workers=args.num_workers, shuffle=False)
DataLoader(train_set, batch_size=args.batch_size, sampler=train_sampler,
                                          num_workers=args.num_workers, pin_memory=True)
DataLoader(val_set, batch_size=args.batch_size, sampler=val_sampler,
                                          num_workers=args.num_workers, shuffle=False, pin_memory=True)
DataLoader(test_set, batch_size=args.batch_size, sampler=test_sampler,
                                          num_workers=args.num_workers, shuffle=False)
DataLoader(test_dataset, batch_size=args.batch_size, sampler=test_sampler,
                                             num_workers=args.num_workers, shuffle=False, pin_memory=True)
DataLoader(train_set, batch_size=args.batch_size, sampler=train_sampler,
                                          num_workers=args.num_workers, pin_memory=True)
DataLoader(val_set, batch_size=args.batch_size, sampler=val_sampler,
                                          num_workers=args.num_workers, shuffle=False, pin_memory=True)
DataLoader(train_set, batch_size=args.batch_size, sampler=train_sampler,
                                          num_workers=args.num_workers, pin_memory=True)
DataLoader(val_set, batch_size=args.batch_size, sampler=val_sampler,
                                          num_workers=args.num_workers, shuffle=False, pin_memory=True)
DataLoader(train_set, batch_size=args.batch_size, sampler=train_sampler,
                                          num_workers=args.num_workers, pin_memory=True)
DataLoader(val_set, batch_size=args.batch_size, sampler=val_sampler,
                                          num_workers=args.num_workers, shuffle=False, pin_memory=True)
DataLoader(test_set, batch_size=args.batch_size, sampler=test_sampler,
                             num_workers=args.num_workers, shuffle=False)
DataLoader(test_set, batch_size=args.batch_size, sampler=test_sampler,
                             num_workers=args.num_workers, shuffle=False)
DataLoader(train_set, batch_size=args.batch_size, sampler=train_sampler,
                                          num_workers=args.num_workers, pin_memory=True)
DataLoader(val_set, batch_size=args.batch_size, sampler=val_sampler,
                                          num_workers=args.num_workers, shuffle=False, pin_memory=True)
DataLoader(train_set, batch_size=args.batch_size, sampler=train_sampler,
                                          num_workers=args.num_workers, pin_memory=True)
DataLoader(val_set, batch_size=args.batch_size, sampler=val_sampler,
                                          num_workers=args.num_workers, shuffle=False, pin_memory=True)
DataLoader(test_set, batch_size=args.batch_size, sampler=test_sampler,
                             num_workers=args.num_workers, shuffle=False)
DataLoader(train_set, batch_size=args.batch_size, sampler=train_sampler,
                                          num_workers=args.num_workers, pin_memory=True)
DataLoader(val_set, batch_size=args.batch_size, sampler=val_sampler,
                                          num_workers=args.num_workers, shuffle=False, pin_memory=True)
DataLoader(test_set, batch_size=args.batch_size, sampler=test_sampler,
                             num_workers=args.num_workers, shuffle=False)
DataLoader(val_set, batch_size=256, shuffle=False, pin_memory=True)
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/dataset_utils.py#L35
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/clip4clip.py#L151
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/clip4clip.py#L153
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/clip4clip_test.py#L106
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/coca.py#L151
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/coca.py#L153
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/coca_test.py#L106
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/text2text_test.py#L143
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/videoclip.py#L179
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/videoclip.py#L181
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/videoclip_test.py#L112
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/violin.py#L163
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/violin.py#L165
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/all_train/violin_test.py#L121
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/proScript/test.py#L90
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/proScript/train_supervised.py#L154
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/baselines/proScript/train_supervised.py#L156
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/crossTask_train.py#L157
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/crossTask_train.py#L159
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/nesy_without_bb.py#L180
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/nesy_without_bb.py#L182
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/nsg_test.py#L195
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/nsg_test_without_bb.py#L135
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/nsg_v1.py#L222
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/nsg_v1.py#L224
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/nsg_v2.py#L199
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/nsg_v2.py#L201
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/nsg_v2_test.py#L167
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/oracle.py#L184
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/oracle.py#L186
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/oracle_test.py#L134
https://github.com/facebookresearch/EgoTV/blob/027bb6162a3b3ebf959e54f5cac844f0b0d28679/nsg/utils.py#L41

===================================
https://github.com/YiSyuanChen/SINC
===================================

Found 11 times
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            sampler=self.train_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=batch_size if batch_size is not None else self.batch_size,
            sampler=self.val_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            sampler=self.test_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=64,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(
            text_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
https://github.com/YiSyuanChen/SINC/blob/2ff6c1d989f1b5aac05b19039982cd2b8ee843b1/meter/datamodules/datamodule_base.py#L168
https://github.com/YiSyuanChen/SINC/blob/2ff6c1d989f1b5aac05b19039982cd2b8ee843b1/meter/datamodules/datamodule_base.py#L179
https://github.com/YiSyuanChen/SINC/blob/2ff6c1d989f1b5aac05b19039982cd2b8ee843b1/meter/datamodules/datamodule_base.py#L190
https://github.com/YiSyuanChen/SINC/blob/2ff6c1d989f1b5aac05b19039982cd2b8ee843b1/meter/datamodules/f30k_caption_karpathy_datamodule.py#L22
https://github.com/YiSyuanChen/SINC/blob/2ff6c1d989f1b5aac05b19039982cd2b8ee843b1/meter/datamodules/f30k_caption_karpathy_datamodule.py#L33
https://github.com/YiSyuanChen/SINC/blob/2ff6c1d989f1b5aac05b19039982cd2b8ee843b1/meter/datamodules/f30k_caption_karpathy_datamodule.py#L44
https://github.com/YiSyuanChen/SINC/blob/2ff6c1d989f1b5aac05b19039982cd2b8ee843b1/meter/datamodules/multitask_datamodule.py#L55
https://github.com/YiSyuanChen/SINC/blob/2ff6c1d989f1b5aac05b19039982cd2b8ee843b1/meter/datamodules/multitask_datamodule.py#L65
https://github.com/YiSyuanChen/SINC/blob/2ff6c1d989f1b5aac05b19039982cd2b8ee843b1/meter/datamodules/multitask_datamodule.py#L75
https://github.com/YiSyuanChen/SINC/blob/2ff6c1d989f1b5aac05b19039982cd2b8ee843b1/meter/modules/objectives.py#L856
https://github.com/YiSyuanChen/SINC/blob/2ff6c1d989f1b5aac05b19039982cd2b8ee843b1/meter/modules/objectives.py#L872

==========================================
https://github.com/facebookresearch/VLPart
==========================================

Found 2 times
torchdata.DataLoader(
        dataset,
        batch_size=batch_size,
        sampler=sampler,
        drop_last=False,
        num_workers=num_workers,
        collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,
    )
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        num_workers=num_workers,
        batch_sampler=None,
        collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements
        worker_init_fn=worker_init_reset_seed,
    )
https://github.com/facebookresearch/VLPart/blob/e48903ab0cb38e4dd5be7ce7da2e36c855eff53f/vlpart/data/custom_dataset_dataloader.py#L79
https://github.com/facebookresearch/VLPart/blob/e48903ab0cb38e4dd5be7ce7da2e36c855eff53f/vlpart/data/custom_dataset_dataloader.py#L205

============================
https://github.com/CEWu/PTNL
============================

Found 2 times
torch.utils.data.DataLoader(
            dataset_wrapper(cfg, data_source, transform=tfm, is_train=is_train),
            batch_size=batch_size,
            sampler=sampler,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            drop_last=is_train and len(data_source) >= batch_size,
            pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA),
        )
torch.utils.data.DataLoader(
            dataset_wrapper(cfg, data_source, transform=tfm, is_train=is_train),
            batch_size=batch_size,
            sampler=sampler,
            num_workers=cfg.DATALOADER.NUM_WORKERS,
            drop_last=False,
            pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA),
        )
https://github.com/CEWu/PTNL/blob/fa965a080da310fef39580797dfad74d7bbe2650/datasets/data_manager.py#L40
https://github.com/CEWu/PTNL/blob/fa965a080da310fef39580797dfad74d7bbe2650/datasets/data_manager.py#L49

====================================
https://github.com/sunxm2357/DIME-FM
====================================

Found 3 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=batch_size,
        shuffle=shuffle,
        num_workers=num_workers,
        pin_memory=pin_memory,
        sampler=None,
        drop_last=False,
        worker_init_fn=seed_worker,
        generator=generator if shuffle else None,
    )
torch.utils.data.DataLoader(
        image_dataset,
        batch_size=batch_size_per_gpu,
        shuffle=shuffle,
        num_workers=num_workers,
        pin_memory=pin_memory,
        sampler=image_sampler,
        drop_last=True
    )
torch.utils.data.DataLoader(
        text_dataset,
        batch_size=batch_size_per_gpu,
        shuffle=shuffle,
        num_workers=num_workers,
        pin_memory=pin_memory,
        sampler=text_sampler,
        drop_last=True
    )
https://github.com/sunxm2357/DIME-FM/blob/093335c492ae288f6e6e31d2352ba8eaf97a1856/Evaluation/vision_benchmark/evaluation/feature.py#L89
https://github.com/sunxm2357/DIME-FM/blob/093335c492ae288f6e6e31d2352ba8eaf97a1856/Training/datasets/build.py#L197
https://github.com/sunxm2357/DIME-FM/blob/093335c492ae288f6e6e31d2352ba8eaf97a1856/Training/datasets/build.py#L207

==============================
https://github.com/saic-fi/LFA
==============================

Found 3 times
torch.utils.data.DataLoader(
        train_dataset,
        batch_size=train_bs,
        shuffle=True,
        num_workers=n_workers,
        drop_last=False,
        pin_memory=pin_memory,
    )
torch.utils.data.DataLoader(dataset=eval_dataset,
                                                   **eval_loader_kwargs)
torch.utils.data.DataLoader(dataset=eval_dataset,
                                                **eval_loader_kwargs)
https://github.com/saic-fi/LFA/blob/9eecfd195137ab9c4e1f89e67eb4a5e1ab2b8d07/train.py#L28
https://github.com/saic-fi/LFA/blob/9eecfd195137ab9c4e1f89e67eb4a5e1ab2b8d07/train.py#L47
https://github.com/saic-fi/LFA/blob/9eecfd195137ab9c4e1f89e67eb4a5e1ab2b8d07/train.py#L55

=============================
https://github.com/kdwonn/SaG
=============================

Found 1 times
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        shuffle=shuffle,
        pin_memory=True,
        num_workers=num_workers,
        # prefetch_factor = 2,
        persistent_workers=True,
        collate_fn=collate)
https://github.com/kdwonn/SaG/blob/fb5329e7082f54f3580fd4c650ec0841d8ea443c/data.py#L337

==================================
https://github.com/acherstyx/CoCap
==================================

Found 1 times
data.DataLoader(dataset=_dataset, sampler=_sampler, **kwargs_default)
https://github.com/acherstyx/CoCap/blob/c42d593de3f29f7b2579e0daf1b70e490ecb9bcf/mm_video/data/build.py#L51

=================================
https://github.com/chihhuiho/RGQA
=================================

Found 1 times
DataLoader(
        tset, batch_size=bs,
        shuffle=shuffle, num_workers=args.num_workers,
        collate_fn=lambda x: x,
        drop_last=drop_last, pin_memory=True
    )
https://github.com/chihhuiho/RGQA/blob/737af3087ea5aec59eb6ad31196c5091f95f035e/src/pretrain/lxmert_pretrain.py#L34

=================================
https://github.com/MrZihan/GridMM
=================================

Found 1 times
DataLoader(
        dataset,
        sampler=sampler,
        batch_size=batch_size,
        num_workers=opts.n_workers,
        pin_memory=opts.pin_mem,
        collate_fn=collate_fn,
        drop_last=False,
    )
https://github.com/MrZihan/GridMM/blob/b7e0fb32e3d90796001f9f3386b5165b7c71f4a8/pretrain_src/data/loader.py#L154

===========================================
https://github.com/bladewaltz1/PromptSwitch
===========================================

Found 8 times
DataLoader(dataset, batch_size=config.batch_size,
                           shuffle=True, num_workers=config.num_workers,
                           collate_fn=collate_fn)
DataLoader(dataset, batch_size=config.test_batch_size,
                           shuffle=False, num_workers=config.num_workers)
DataLoader(dataset, batch_size=config.batch_size,
                            shuffle=True, num_workers=config.num_workers,
                            collate_fn=collate_fn)
DataLoader(dataset, batch_size=config.test_batch_size,
                            shuffle=False, num_workers=config.num_workers)
DataLoader(dataset, batch_size=config.batch_size,
                            shuffle=True, num_workers=config.num_workers,
                            collate_fn=collate_fn)
DataLoader(dataset, batch_size=config.test_batch_size,
                            shuffle=False, num_workers=config.num_workers)
DataLoader(dataset, batch_size=config.batch_size,
                            shuffle=True, num_workers=config.num_workers,
                            collate_fn=collate_fn)
DataLoader(dataset, batch_size=config.test_batch_size,
                            shuffle=False, num_workers=config.num_workers)
https://github.com/bladewaltz1/PromptSwitch/blob/6420d3f3099569fd7aaf5455cdb5fe2e9eb55a4b/datasets/data_factory.py#L23
https://github.com/bladewaltz1/PromptSwitch/blob/6420d3f3099569fd7aaf5455cdb5fe2e9eb55a4b/datasets/data_factory.py#L28
https://github.com/bladewaltz1/PromptSwitch/blob/6420d3f3099569fd7aaf5455cdb5fe2e9eb55a4b/datasets/data_factory.py#L34
https://github.com/bladewaltz1/PromptSwitch/blob/6420d3f3099569fd7aaf5455cdb5fe2e9eb55a4b/datasets/data_factory.py#L39
https://github.com/bladewaltz1/PromptSwitch/blob/6420d3f3099569fd7aaf5455cdb5fe2e9eb55a4b/datasets/data_factory.py#L45
https://github.com/bladewaltz1/PromptSwitch/blob/6420d3f3099569fd7aaf5455cdb5fe2e9eb55a4b/datasets/data_factory.py#L50
https://github.com/bladewaltz1/PromptSwitch/blob/6420d3f3099569fd7aaf5455cdb5fe2e9eb55a4b/datasets/data_factory.py#L56
https://github.com/bladewaltz1/PromptSwitch/blob/6420d3f3099569fd7aaf5455cdb5fe2e9eb55a4b/datasets/data_factory.py#L61

========================================
https://github.com/BeierZhu/Prompt-align
========================================

Found 2 times
torch.utils.data.DataLoader(
        dataset_wrapper(cfg, data_source, transform=tfm, is_train=is_train),
        batch_size=batch_size,
        sampler=sampler,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        drop_last=is_train and len(data_source) >= batch_size,
        pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA),
    )
torch.utils.data.DataLoader(
        DatasetWrapper(cfg, dataset_input, transform=tfm_train,
                       is_train=False),
        batch_size=cfg.DATALOADER.TRAIN_X.BATCH_SIZE,
        sampler=None,
        shuffle=False,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        drop_last=False,
        pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA),
    )
https://github.com/BeierZhu/Prompt-align/blob/1b762036cbe97ecf504e17bb94d89191679e4e6e/Dassl.ProGrad.pytorch/dassl/data/data_manager.py#L44
https://github.com/BeierZhu/Prompt-align/blob/1b762036cbe97ecf504e17bb94d89191679e4e6e/ProGrad.public/lpclip/feat_extractor.py#L133

==================================
https://github.com/sarahpratt/CuPL
==================================

Found 1 times
torch.utils.data.DataLoader(all_images, batch_size=512, num_workers=8)
https://github.com/sarahpratt/CuPL/blob/719619c829792ff8f37298266e941b7f077c7f5c/classify_imagenet.py#L21

===========================================
https://github.com/ExplainableML/WaffleCLIP
===========================================

Found 1 times
DataLoader(dataset, opt.batch_size, shuffle=False, num_workers=8, pin_memory=True)
https://github.com/ExplainableML/WaffleCLIP/blob/7a1b8ee48e31285f62ecd839fecb6b89cbef81f1/base_main.py#L89

===================================
https://github.com/FudanVI/FudanOCR
===================================

Found 22 times
torch.utils.data.DataLoader(
            dataset, batch_size=config['batch'], shuffle=shuffle, num_workers=0,
        )
torch.utils.data.DataLoader(
            dataset, batch_size=config['batch'], shuffle=shuffle, num_workers=0,
        )
torch.utils.data.DataLoader(
        train_dataset_total, batch_size=config['batch'], shuffle=True, num_workers=0,
    )
torch.utils.data.DataLoader(
        test_dataset_total, batch_size=config['batch'], shuffle=False, num_workers=0,
    )
torch.utils.data.DataLoader(
            dataset, batch_size=config['batch'], shuffle=shuffle, num_workers=8,
        )
torch.utils.data.DataLoader(
            dataset, batch_size=config['batch'], shuffle=shuffle, num_workers=8,
        )
torch.utils.data.DataLoader(
        train_dataset_total, batch_size=config['batch'], shuffle=True, num_workers=8,
    )
torch.utils.data.DataLoader(
        test_dataset_total, batch_size=config['batch'], shuffle=False, num_workers=8,
    )
torch.utils.data.DataLoader(
        train_dataset_total, batch_size=config['batch'], shuffle=True, num_workers=8,
    )
torch.utils.data.DataLoader(
        test_dataset_total, batch_size=config['batch'], shuffle=False, num_workers=8,
    )
torch.utils.data.DataLoader(
        train_dataset_total, batch_size=config['batch'], shuffle=True, num_workers=8,
        collate_fn = alignCollate(imgH=config['imageH'], imgW=config['imageW'])
    )
torch.utils.data.DataLoader(
        test_dataset_total, batch_size=config['batch'], shuffle=False, num_workers=8,
        collate_fn=alignCollate(imgH=config['imageH'], imgW=config['imageW'])
    )
torch.utils.data.DataLoader(
        test_dataset_total, batch_size=1, shuffle=False, num_workers=8,
        collate_fn=alignCollate(imgH=32, imgW=32)
    )
torch.utils.data.DataLoader(
            train_dataset, batch_size=self.batch_size,
            shuffle=True, num_workers=int(cfg.workers),
            collate_fn=self.align_collate(imgH=cfg.height, imgW=cfg.width, down_sample_scale=cfg.down_sample_scale,
                                          mask=self.mask),
            drop_last=True)
torch.utils.data.DataLoader(
            test_dataset, batch_size=self.batch_size,
            shuffle=False, num_workers=int(cfg.workers),
            collate_fn=self.align_collate(imgH=cfg.height, imgW=cfg.width, down_sample_scale=cfg.down_sample_scale,
                                          mask=self.mask),
            drop_last=False)
torch.utils.data.DataLoader(
            dataset, batch_size=config['batch'], shuffle=shuffle, num_workers=8,
        )
torch.utils.data.DataLoader(
            dataset, batch_size=config['batch'], shuffle=shuffle, num_workers=8,
        )
torch.utils.data.DataLoader(
        train_dataset_total, batch_size=config['batch'], shuffle=True, num_workers=8,
    )
torch.utils.data.DataLoader(
        test_dataset_total, batch_size=config['batch'], shuffle=False, num_workers=8,
    )
torch.utils.data.DataLoader(
        support_dataset, batch_size=batch, num_workers=8, shuffle=False,
    )
torch.utils.data.DataLoader(
            train_dataset, batch_size=self.batch_size,
            shuffle=True, num_workers=int(cfg.workers),
            collate_fn=self.align_collate(imgH=cfg.height, imgW=cfg.width, down_sample_scale=cfg.down_sample_scale,
                                          mask=self.mask),
            drop_last=True)
torch.utils.data.DataLoader(
            test_dataset, batch_size=self.batch_size,
            shuffle=False, num_workers=int(cfg.workers),
            collate_fn=self.align_collate(imgH=cfg.height, imgW=cfg.width, down_sample_scale=cfg.down_sample_scale,
                                          mask=self.mask),
            drop_last=False)
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/character-profile-matching/util.py#L204
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/character-profile-matching/util.py#L209
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/character-profile-matching/util.py#L221
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/character-profile-matching/util.py#L231
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/image-ids-CTR/util.py#L32
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/image-ids-CTR/util.py#L37
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/image-ids-CTR/util.py#L50
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/image-ids-CTR/util.py#L60
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/image-ids-CTR/CCR-CLIP/utils.py#L39
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/image-ids-CTR/CCR-CLIP/utils.py#L48
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/orientation-independent-CTR/util.py#L34
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/orientation-independent-CTR/util.py#L45
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/orientation-independent-CTR/util.py#L98
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/scene-text-telescope/interfaces/base.py#L104
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/scene-text-telescope/interfaces/base.py#L130
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/stroke-level-decomposition/util.py#L54
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/stroke-level-decomposition/util.py#L60
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/stroke-level-decomposition/util.py#L73
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/stroke-level-decomposition/util.py#L83
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/stroke-level-decomposition/util.py#L193
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/text-gestalt/interfaces/base.py#L126
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/text-gestalt/interfaces/base.py#L152

=================================
https://github.com/Wangt-CN/EqBen
=================================

Found 17 times
torch.utils.data.DataLoader(eval_dataset, batch_size=int(gpu_cnt*128), num_workers=24, shuffle=False, collate_fn=eval_dataset.collate)
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=0,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            sampler=self.train_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=batch_size if batch_size is not None else self.batch_size,
            sampler=self.val_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            sampler=self.test_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=64,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(
            text_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=64,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(
            text_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(
            image_dset.collate,
            mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator,
        ),
    )
torch.utils.data.DataLoader(eval_dataset, batch_size=int(gpu_cnt*128), num_workers=0, shuffle=False, collate_fn=eval_dataset.collate)
torch.utils.data.DataLoader(eval_dataset, batch_size=int(gpu_cnt*128), num_workers=0, shuffle=False, collate_fn=eval_dataset.collate)
torch.utils.data.DataLoader(eval_dataset, batch_size=int(gpu_cnt * 128), num_workers=int(gpu_cnt*4), shuffle=False, collate_fn=eval_dataset.collate)
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/eval_batch_my.py#L398
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/datamodules/datamodule_base.py#L141
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/datamodules/datamodule_base.py#L152
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/datamodules/datamodule_base.py#L163
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/datamodules/f30k_caption_karpathy_datamodule.py#L22
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/datamodules/f30k_caption_karpathy_datamodule.py#L33
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/datamodules/f30k_caption_karpathy_datamodule.py#L44
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/datamodules/multitask_datamodule.py#L56
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/datamodules/multitask_datamodule.py#L66
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/datamodules/multitask_datamodule.py#L76
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/modules/objectives.py#L577
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/modules/objectives.py#L593
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/modules/objectives.py#L701
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/EqSim/FIBER/coarse_grained/fiber/modules/objectives.py#L715
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/example/eqben_eval_CLIP.py#L82
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/example/eqben_eval_FIBER.py#L159
https://github.com/Wangt-CN/EqBen/blob/ab6c79a3c34656f6a882b4e49439febd6fe313f8/example/eqben_eval_template.py#L79

==================================
https://github.com/wz0919/ScaleVLN
==================================

Found 1 times
DataLoader(
        dataset,
        sampler=sampler,
        batch_size=batch_size,
        num_workers=opts.n_workers,
        pin_memory=opts.pin_mem,
        collate_fn=collate_fn,
        drop_last=False,
    )
https://github.com/wz0919/ScaleVLN/blob/3e2cd7a31f109112c3c8c0bec8e2af05d42f968e/VLN-DUET/pretrain_src/data/loader.py#L154

=====================================
https://github.com/ryeocthiv/CQFormer
=====================================

Found 5 times
torch.utils.data.DataLoader(train_set, batch_size=args.batch_size, shuffle=True,
                                               num_workers=args.num_workers, pin_memory=True, drop_last=True,)
torch.utils.data.DataLoader(test_set, batch_size=args.batch_size, shuffle=False,
                                              num_workers=args.num_workers, pin_memory=True, drop_last=False)
torch.utils.data.DataLoader(train_set, batch_size=args.batch_size, shuffle=True,
                                               num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(test_set, batch_size=args.batch_size, shuffle=False,
                                              num_workers=args.num_workers, pin_memory=True)
torch.utils.data.DataLoader(test_set, batch_size=1, shuffle=False, num_workers=8, pin_memory=True)
https://github.com/ryeocthiv/CQFormer/blob/9f2a288ad5b6bc3a05532f79b37496ecaff867d4/train.py#L108
https://github.com/ryeocthiv/CQFormer/blob/9f2a288ad5b6bc3a05532f79b37496ecaff867d4/train.py#L110
https://github.com/ryeocthiv/CQFormer/blob/9f2a288ad5b6bc3a05532f79b37496ecaff867d4/train_classifier.py#L97
https://github.com/ryeocthiv/CQFormer/blob/9f2a288ad5b6bc3a05532f79b37496ecaff867d4/train_classifier.py#L99
https://github.com/ryeocthiv/CQFormer/blob/9f2a288ad5b6bc3a05532f79b37496ecaff867d4/visualise.py#L187

====================================
https://github.com/CSir1996/VLN-GELA
====================================

Found 1 times
DataLoader(
        dataset,
        sampler=sampler,
        batch_size=batch_size,
        num_workers=opts.n_workers,
        pin_memory=opts.pin_mem,
        collate_fn=collate_fn,
        drop_last=False,
    )
https://github.com/CSir1996/VLN-GELA/blob/6754fa859807d6504759130c573480e0df34ffc1/ada_pretrain_src/data/loader.py#L154

======================================
https://github.com/MarSaKi/VLN-BEVBert
======================================

Found 3 times
DataLoader(
        dataset,
        sampler=sampler,
        batch_size=batch_size,
        num_workers=opts.n_workers,
        pin_memory=opts.pin_mem,
        collate_fn=collate_fn,
        drop_last=False,
    )
torch.utils.data.DataLoader(
                    dataset,
                    batch_size=self.config.IL.batch_size,
                    shuffle=False,
                    collate_fn=collate_fn,
                    pin_memory=False,
                    drop_last=True,  # drop last batch if smaller
                    num_workers=3,
                )
DataLoader(
        dataset,
        sampler=sampler,
        batch_size=batch_size,
        num_workers=opts.n_workers,
        pin_memory=opts.pin_mem,
        collate_fn=collate_fn,
        drop_last=False,
    )
https://github.com/MarSaKi/VLN-BEVBert/blob/161ffdbee6743c8c13365b4b8549aae8aabcb013/bevbert_ce/pretrain/pretrain_src/data/loader.py#L154
https://github.com/MarSaKi/VLN-BEVBert/blob/161ffdbee6743c8c13365b4b8549aae8aabcb013/bevbert_ce/vlnce_baselines/dagger_trainer.py#L579
https://github.com/MarSaKi/VLN-BEVBert/blob/161ffdbee6743c8c13365b4b8549aae8aabcb013/pretrain_src/data/loader.py#L154

===============================
https://github.com/mrflogs/SHIP
===============================

Found 4 times
torch.utils.data.DataLoader(imagenet.test, batch_size=64, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(imagenet.train, batch_size=256, num_workers=8, shuffle=True)
torch.utils.data.DataLoader(imagenet.test, batch_size=64, num_workers=8, shuffle=False)
torch.utils.data.DataLoader(
        dataset_wrapper(data_source, input_size=input_size, transform=tfm, is_train=is_train),
        batch_size=batch_size,
        num_workers=8,
        shuffle=shuffle,
        drop_last=False,
        pin_memory=(torch.cuda.is_available())
    )
https://github.com/mrflogs/SHIP/blob/492854ed5e95335ff9ce190feef2079be7ece259/main_imagenet_coop_vae.py#L406
https://github.com/mrflogs/SHIP/blob/492854ed5e95335ff9ce190feef2079be7ece259/main_imagenet_coop_vae.py#L407
https://github.com/mrflogs/SHIP/blob/492854ed5e95335ff9ce190feef2079be7ece259/main_imagenet_coop_vae.py#L420
https://github.com/mrflogs/SHIP/blob/492854ed5e95335ff9ce190feef2079be7ece259/datasets/utils.py#L368

=======================================
https://github.com/coperception/ROBOSAC
=======================================

Found 6 times
DataLoader(
        training_dataset, shuffle=True, batch_size=batch_size, num_workers=num_workers
    )
DataLoader(
        validation_dataset, batch_size=1, shuffle=False, num_workers=num_workers
    )
DataLoader(
        validation_dataset, batch_size=1, shuffle=False, num_workers=num_workers
    )
DataLoader(
        training_dataset, shuffle=True, batch_size=batch_size, num_workers=num_workers
    )
DataLoader(
        valset, batch_size=batch_size, shuffle=False, num_workers=num_workers
    )
DataLoader(
        trainset, batch_size=batch_size, shuffle=True, num_workers=num_workers
    )
https://github.com/coperception/ROBOSAC/blob/4642aa2e436ab1cfde4423687fa0e82910ce9d65/coperception/tools/det/amongus_adv_train.py#L81
https://github.com/coperception/ROBOSAC/blob/4642aa2e436ab1cfde4423687fa0e82910ce9d65/coperception/tools/det/robosac.py#L282
https://github.com/coperception/ROBOSAC/blob/4642aa2e436ab1cfde4423687fa0e82910ce9d65/coperception/tools/det/test_codet.py#L76
https://github.com/coperception/ROBOSAC/blob/4642aa2e436ab1cfde4423687fa0e82910ce9d65/coperception/tools/det/train_codet.py#L80
https://github.com/coperception/ROBOSAC/blob/4642aa2e436ab1cfde4423687fa0e82910ce9d65/coperception/tools/seg/test_seg.py#L78
https://github.com/coperception/ROBOSAC/blob/4642aa2e436ab1cfde4423687fa0e82910ce9d65/coperception/tools/seg/train_seg.py#L76

=========================================
https://github.com/saltoricristiano/LiDOG
=========================================

Found 6 times
DataLoader(dataset,
                          batch_size=batch_size,
                          collate_fn=collate_fn,
                          shuffle=shuffle,
                          num_workers=config.pipeline.dataloader.num_workers,
                          pin_memory=pin_memory)
DataLoader(dataset,
                          batch_size=batch_size,
                          collate_fn=collate_fn,
                          shuffle=shuffle,
                          num_workers=config.pipeline.dataloader.num_workers,
                          pin_memory=pin_memory)
DataLoader(dataset,
                          batch_size=batch_size,
                          collate_fn=collate_fn,
                          shuffle=shuffle,
                          num_workers=config.pipeline.dataloader.num_workers,
                          pin_memory=pin_memory)
DataLoader(dataset,
                          batch_size=batch_size,
                          collate_fn=collate_fn,
                          shuffle=shuffle,
                          num_workers=config.pipeline.dataloader.num_workers,
                          pin_memory=pin_memory)
DataLoader(dataset,
                          batch_size=batch_size,
                          collate_fn=collate_fn,
                          shuffle=shuffle,
                          num_workers=config.pipeline.dataloader.num_workers,
                          pin_memory=pin_memory)
DataLoader(dataset,
                          batch_size=batch_size,
                          collate_fn=collate_fn,
                          shuffle=shuffle,
                          num_workers=config.pipeline.dataloader.num_workers,
                          pin_memory=pin_memory)
https://github.com/saltoricristiano/LiDOG/blob/a1a43ee5ca01aa1cd31ab1a3112299975c6d4a3a/eval_target.py#L39
https://github.com/saltoricristiano/LiDOG/blob/a1a43ee5ca01aa1cd31ab1a3112299975c6d4a3a/train_aug_based.py#L37
https://github.com/saltoricristiano/LiDOG/blob/a1a43ee5ca01aa1cd31ab1a3112299975c6d4a3a/train_lidog.py#L35
https://github.com/saltoricristiano/LiDOG/blob/a1a43ee5ca01aa1cd31ab1a3112299975c6d4a3a/train_robustnet.py#L35
https://github.com/saltoricristiano/LiDOG/blob/a1a43ee5ca01aa1cd31ab1a3112299975c6d4a3a/train_scaling_based.py#L135
https://github.com/saltoricristiano/LiDOG/blob/a1a43ee5ca01aa1cd31ab1a3112299975c6d4a3a/train_source.py#L36

===============================
https://github.com/akira-l/MAAL
===============================

Found 2 times
torch.utils.data.DataLoader(train_dataset, batch_size=conf.batch_size, shuffle=False,
                                                   pin_memory=True, \
                                                   num_workers=conf.num_worker, drop_last=True, collate_fn=utils.collate_feats,
                                                   worker_init_fn=utils.worker_init_fn)
torch.utils.data.DataLoader(val_dataset, batch_size=conf.batch_size, shuffle=False,
                                                 pin_memory=True, \
                                                 num_workers=conf.num_worker, drop_last=True, collate_fn=utils.collate_feats,
                                                 worker_init_fn=utils.worker_init_fn)
https://github.com/akira-l/MAAL/blob/1a9d1a7ebbf028486f7d5eac0410993524061ec2/code/train_mem.py#L80
https://github.com/akira-l/MAAL/blob/1a9d1a7ebbf028486f7d5eac0410993524061ec2/code/train_mem.py#L86

=================================
https://github.com/hetolin/PourIt
=================================

Found 3 times
DataLoader(val_dataset,
                            batch_size=1,
                            shuffle=False,
                            num_workers=num_workers,
                            pin_memory=False,
                            drop_last=False)
DataLoader(train_dataset,
                              batch_size=cfg.train.samples_per_gpu,
                              # shuffle=True,
                              num_workers=num_workers,
                              pin_memory=False,
                              drop_last=True,
                              sampler=train_sampler,
                              prefetch_factor=4)
DataLoader(val_dataset,
                            batch_size=1,
                            shuffle=False,
                            num_workers=num_workers,
                            pin_memory=False,
                            drop_last=False)
https://github.com/hetolin/PourIt/blob/6f91241233862bef308437c7c7451f31fff5ab9c/scripts/eval.py#L120
https://github.com/hetolin/PourIt/blob/6f91241233862bef308437c7c7451f31fff5ab9c/scripts/train.py#L95
https://github.com/hetolin/PourIt/blob/6f91241233862bef308437c7c7451f31fff5ab9c/scripts/train.py#L104

=====================================
https://github.com/chunmeifeng/FedIns
=====================================

Found 22 times
data.DataLoader(dataset=train_ds, batch_size=train_bs, drop_last=True, shuffle=True)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False)
data.DataLoader(dataset=train_ds, batch_size=train_bs, drop_last=True, shuffle=True)
data.DataLoader(dataset=test_ds, batch_size=test_bs, shuffle=False)
torch.utils.data.DataLoader(clipart_trainset, batch_size=batch, shuffle=True)
torch.utils.data.DataLoader(clipart_valset, batch_size=batch, shuffle=False)
torch.utils.data.DataLoader(clipart_testset, batch_size=batch, shuffle=False)
torch.utils.data.DataLoader(infograph_trainset, batch_size=batch, shuffle=True)
torch.utils.data.DataLoader(infograph_valset, batch_size=batch, shuffle=False)
torch.utils.data.DataLoader(infograph_testset, batch_size=batch, shuffle=False)
torch.utils.data.DataLoader(painting_trainset, batch_size=batch, shuffle=True)
torch.utils.data.DataLoader(painting_valset, batch_size=batch, shuffle=False)
torch.utils.data.DataLoader(painting_testset, batch_size=batch, shuffle=False)
torch.utils.data.DataLoader(quickdraw_trainset, batch_size=batch, shuffle=True)
torch.utils.data.DataLoader(quickdraw_valset, batch_size=batch, shuffle=False)
torch.utils.data.DataLoader(quickdraw_testset, batch_size=batch, shuffle=False)
torch.utils.data.DataLoader(real_trainset, batch_size=batch, shuffle=True)
torch.utils.data.DataLoader(real_valset, batch_size=batch, shuffle=False)
torch.utils.data.DataLoader(real_testset, batch_size=batch, shuffle=False)
torch.utils.data.DataLoader(sketch_trainset, batch_size=batch, shuffle=True)
torch.utils.data.DataLoader(sketch_valset, batch_size=batch, shuffle=False)
torch.utils.data.DataLoader(sketch_testset, batch_size=batch, shuffle=False)
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/cifar_tinyimage_data_utils.py#L160
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/cifar_tinyimage_data_utils.py#L161
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/cifar_tinyimage_data_utils.py#L180
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/cifar_tinyimage_data_utils.py#L181
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L94
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L95
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L96
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L98
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L99
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L100
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L102
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L103
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L104
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L106
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L107
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L108
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L110
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L111
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L112
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L114
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L115
https://github.com/chunmeifeng/FedIns/blob/60cac4541a5534f3d954fbf5be606ab0e201e920/utils/domainnet_data_utils.py#L116

===================================
https://github.com/awccnet/AWCC-Net
===================================

Found 1 times
DataLoader(dataset, batch_size=1, shuffle=False, num_workers=8)
https://github.com/awccnet/AWCC-Net/blob/0b66174fa17bc414673b01680df0900df9c49e66/main.py#L46

=================================================
https://github.com/XLearning-SCU/2023-ICCV-COMMON
=================================================

Found 1 times
torch.utils.data.DataLoader(
        dataset, batch_size=cfg.BATCH_SIZE, shuffle=shuffle, num_workers=cfg.DATALOADER_NUM, collate_fn=collate_fn,
        pin_memory=False, worker_init_fn=worker_init_fix if fix_seed else worker_init_rand
    )
https://github.com/XLearning-SCU/2023-ICCV-COMMON/blob/9db3bbeda7a14f60f2f27e19d18365239a3d36f7/src/dataset/data_loader.py#L451

====================================
https://github.com/starfdu1418/SCOPE
====================================

Found 5 times
DataLoader(opencood_dataset,
                             batch_size=1,
                             num_workers=0,
                             collate_fn=opencood_dataset.collate_batch_test,
                             shuffle=False,
                             pin_memory=False,
                             drop_last=False)
DataLoader(opencood_dataset,
                             batch_size=1,
                             num_workers=10,
                             collate_fn=opencood_dataset.collate_batch_test,
                             shuffle=False,
                             pin_memory=False,
                             drop_last=False)
DataLoader(opencood_train_dataset,
                              batch_size=hypes['train_params']['batch_size'],
                              num_workers=8,
                              collate_fn=opencood_train_dataset.collate_batch_train,
                              shuffle=True,
                              pin_memory=False,
                              drop_last=True)
DataLoader(opencood_validate_dataset,
                            batch_size=hypes['train_params']['batch_size'],
                            num_workers=8,
                            collate_fn=opencood_train_dataset.collate_batch_train,
                            shuffle=False,
                            pin_memory=False,
                            drop_last=True)
DataLoader(opencda_dataset, batch_size=1, num_workers=8,
                             collate_fn=opencda_dataset.collate_batch_train,
                             shuffle=False,
                             pin_memory=False)
https://github.com/starfdu1418/SCOPE/blob/6d9b88224fbbe316a65cdbbd45ad4884977faa33/v2xvit/tools/debug_utils.py#L30
https://github.com/starfdu1418/SCOPE/blob/6d9b88224fbbe316a65cdbbd45ad4884977faa33/v2xvit/tools/inference.py#L73
https://github.com/starfdu1418/SCOPE/blob/6d9b88224fbbe316a65cdbbd45ad4884977faa33/v2xvit/tools/train.py#L37
https://github.com/starfdu1418/SCOPE/blob/6d9b88224fbbe316a65cdbbd45ad4884977faa33/v2xvit/tools/train.py#L44
https://github.com/starfdu1418/SCOPE/blob/6d9b88224fbbe316a65cdbbd45ad4884977faa33/v2xvit/visualization/vis_data_sequence.py#L27

========================================================
https://github.com/aimagelab/multimodal-garment-designer
========================================================

Found 1 times
torch.utils.data.DataLoader(
        test_dataset,
        shuffle=False,
        batch_size=args.batch_size,
        num_workers=args.num_workers_test,
    )
https://github.com/aimagelab/multimodal-garment-designer/blob/a4b819a07fcfb410dca8c79515c97e7e2e9fe29e/src/eval.py#L97

=======================================
https://github.com/zhjohnchan/ptunifier
=======================================

Found 8 times
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            shuffle=True,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.train_dataset.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.val_dataset.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.eval_batch_size,
            shuffle=False,
            num_workers=self.num_workers,
            pin_memory=True,
            collate_fn=self.test_dataset.collate,
        )
DataLoader(
            self.train_dataset,
            batch_size=self.batch_size,
            sampler=self.train_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.val_dataset,
            batch_size=batch_size if batch_size is not None else self.batch_size,
            sampler=self.val_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
DataLoader(
            self.test_dataset,
            batch_size=self.batch_size,
            sampler=self.test_sampler,
            num_workers=self.num_workers,
            collate_fn=self.collate,
        )
torch.utils.data.DataLoader(
        text_dset,
        batch_size=256,
        num_workers=pl_module.hparams.config["num_workers"],
        pin_memory=True,
        collate_fn=functools.partial(text_dset.collate,
                                     mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator, ), )
torch.utils.data.DataLoader(
        image_dset,
        batch_size=1,
        num_workers=pl_module.hparams.config["num_workers"],
        sampler=dist_sampler,
        pin_memory=True,
        collate_fn=functools.partial(image_dset.collate,
                                     mlm_collator=pl_module.trainer.datamodule.dms[0].mlm_collator, ), )
https://github.com/zhjohnchan/ptunifier/blob/eee60eb1c3eb1c2bfba6debb15b6a82b9554c62c/ptunifier/datamodules/base_datamodule.py#L153
https://github.com/zhjohnchan/ptunifier/blob/eee60eb1c3eb1c2bfba6debb15b6a82b9554c62c/ptunifier/datamodules/base_datamodule.py#L164
https://github.com/zhjohnchan/ptunifier/blob/eee60eb1c3eb1c2bfba6debb15b6a82b9554c62c/ptunifier/datamodules/base_datamodule.py#L175
https://github.com/zhjohnchan/ptunifier/blob/eee60eb1c3eb1c2bfba6debb15b6a82b9554c62c/ptunifier/datamodules/multitask_datamodule.py#L61
https://github.com/zhjohnchan/ptunifier/blob/eee60eb1c3eb1c2bfba6debb15b6a82b9554c62c/ptunifier/datamodules/multitask_datamodule.py#L71
https://github.com/zhjohnchan/ptunifier/blob/eee60eb1c3eb1c2bfba6debb15b6a82b9554c62c/ptunifier/datamodules/multitask_datamodule.py#L81
https://github.com/zhjohnchan/ptunifier/blob/eee60eb1c3eb1c2bfba6debb15b6a82b9554c62c/ptunifier/models/objectives.py#L433
https://github.com/zhjohnchan/ptunifier/blob/eee60eb1c3eb1c2bfba6debb15b6a82b9554c62c/ptunifier/models/objectives.py#L444

=========================================
https://github.com/nku-zhichengzhang/MPOT
=========================================

Found 3 times
data.DataLoader(testset, batch_size=1, shuffle=True, num_workers=1,
                                 collate_fn=multibatch_collate_fn)
data.DataLoader(trainset, batch_size=opt.train_batch, shuffle=True, num_workers=opt.workers,
                                      collate_fn=multibatch_collate_fn)
data.DataLoader(testset, batch_size=1, shuffle=False, num_workers=1, pin_memory=True,
                                 collate_fn=test_multibatch_collate_fn)
https://github.com/nku-zhichengzhang/MPOT/blob/f9c2d3487b812fd44e30e94735fb9d1d5740c19e/test.py#L67
https://github.com/nku-zhichengzhang/MPOT/blob/f9c2d3487b812fd44e30e94735fb9d1d5740c19e/train.py#L127
https://github.com/nku-zhichengzhang/MPOT/blob/f9c2d3487b812fd44e30e94735fb9d1d5740c19e/train.py#L135

===============================================
https://github.com/facebookresearch/OmnimatteRF
===============================================

Found 4 times
DataLoader(
            self.dataset,
            shuffle=True,
            batch_size=self.img_batch_size,
            num_workers=self.num_workers,
        )
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
data.DataLoader(train_dataset, batch_size=args.batch_size, 
        pin_memory=False, shuffle=True, num_workers=4, drop_last=True)
loader(
            self.dataset,
            batch_size=opt.batch_size,
            shuffle=not opt.serial_batches,
            num_workers=int(opt.num_threads),
            persistent_workers=int(opt.num_threads) > 0)
https://github.com/facebookresearch/OmnimatteRF/blob/f3bbc62a4df062af0409ac067910965372919107/core/trainer/__init__.py#L117
https://github.com/facebookresearch/OmnimatteRF/blob/f3bbc62a4df062af0409ac067910965372919107/third_party/RAFT/core/datasets.py#L232
https://github.com/facebookresearch/OmnimatteRF/blob/f3bbc62a4df062af0409ac067910965372919107/third_party/RoDynRF/scripts/RAFT/datasets.py#L232
https://github.com/facebookresearch/OmnimatteRF/blob/f3bbc62a4df062af0409ac067910965372919107/third_party/omnimatte/third_party/data/__init__.py#L78

================================
https://github.com/NevSNev/UniST
================================

Found 9 times
DataLoader(dataset_content,
                                    batch_size=opts.test_batch_size,
                                    shuffle=False,
                                    num_workers=int(opts.test_workers),
                                    drop_last=True)
DataLoader(dataset_style,
                                  batch_size=opts.test_batch_size,
                                  shuffle=False,
                                  num_workers=int(opts.test_workers),
                                  drop_last=True)
DataLoader(content_dataset,
                                    batch_size=opts.test_batch_size,
                                    shuffle=False,
                                    num_workers=int(opts.test_workers),
                                    drop_last=True)
DataLoader(dataset_content,
                                    batch_size=opts.test_batch_size,
                                    shuffle=False,
                                    num_workers=int(opts.test_workers),
                                    drop_last=True)
DataLoader(dataset_style,
                                  batch_size=opts.test_batch_size,
                                  shuffle=False,
                                  num_workers=int(opts.test_workers),
                                  drop_last=True)
DataLoader(self.train_content_frames,
                                                   batch_size=self.opts.batch_size,
                                                   shuffle=True,
                                                   num_workers=int(self.opts.workers),
                                                   drop_last=True)
DataLoader(self.train_style,
                                                 batch_size=self.opts.batch_size,
                                                 shuffle=True,
                                                 num_workers=int(self.opts.workers),
                                                 drop_last=True)
DataLoader(self.test_content_frames,
                                                  batch_size=self.opts.test_batch_size,
                                                  shuffle=False,
                                                  num_workers=int(self.opts.test_workers),
                                                  drop_last=True)
DataLoader(self.test_style,
                                                batch_size=self.opts.test_batch_size,
                                                shuffle=False,
                                                num_workers=int(self.opts.test_workers),
                                                drop_last=True)
https://github.com/NevSNev/UniST/blob/4d0db11b37322ffd7fadb5e523acc3a3d746dd00/application/single_modality/image/inference_image.py#L57
https://github.com/NevSNev/UniST/blob/4d0db11b37322ffd7fadb5e523acc3a3d746dd00/application/single_modality/image/inference_image.py#L62
https://github.com/NevSNev/UniST/blob/4d0db11b37322ffd7fadb5e523acc3a3d746dd00/application/single_modality/video/inference_video.py#L44
https://github.com/NevSNev/UniST/blob/4d0db11b37322ffd7fadb5e523acc3a3d746dd00/scripts/inference.py#L61
https://github.com/NevSNev/UniST/blob/4d0db11b37322ffd7fadb5e523acc3a3d746dd00/scripts/inference.py#L66
https://github.com/NevSNev/UniST/blob/4d0db11b37322ffd7fadb5e523acc3a3d746dd00/training/coach.py#L51
https://github.com/NevSNev/UniST/blob/4d0db11b37322ffd7fadb5e523acc3a3d746dd00/training/coach.py#L57
https://github.com/NevSNev/UniST/blob/4d0db11b37322ffd7fadb5e523acc3a3d746dd00/training/coach.py#L63
https://github.com/NevSNev/UniST/blob/4d0db11b37322ffd7fadb5e523acc3a3d746dd00/training/coach.py#L69

=========================================
https://github.com/SamWilso/SAFE_Official
=========================================

Found 2 times
DataLoader(
		train_dataset,
		batch_size=mlp_config['batch_size'],
		collate_fn=collate_features,
		shuffle=True,
		num_workers=8
	)
DataLoader(
		val_dataset,
		batch_size=mlp_config['batch_size'],
		collate_fn=collate_features,
		shuffle=False,
		num_workers=8
	)
https://github.com/SamWilso/SAFE_Official/blob/fae63eacc4678cf5cafb89a5ebe2eada62ed375e/SAFE/train.py#L83
https://github.com/SamWilso/SAFE_Official/blob/fae63eacc4678cf5cafb89a5ebe2eada62ed375e/SAFE/train.py#L91

========================================
https://github.com/fuqichen1998/Deformer
========================================

Found 4 times
torch.utils.data.DataLoader(
            train_dat,
            batch_size=args.train_batch,
            num_workers=int(args.workers),
            pin_memory=True,
            drop_last=False,
            sampler=train_sampler,
        )
torch.utils.data.DataLoader(
        val_dat,
        batch_size=args.test_batch,
        shuffle=False,
        num_workers=int(args.workers),
        pin_memory=True,
        drop_last=False,
    )
torch.utils.data.DataLoader(
            train_dat,
            batch_size=args.train_batch,
            shuffle=True,
            num_workers=int(args.workers),
            pin_memory=True,
            drop_last=False,
        )
torch.utils.data.DataLoader(
        val_dat,
        batch_size=args.test_batch,
        shuffle=False,
        num_workers=int(args.workers),
        pin_memory=True,
        drop_last=False,
    )
https://github.com/fuqichen1998/Deformer/blob/62d8b218332b3ce29a87f8c239ded8e58ad3b062/ddp_train.py#L96
https://github.com/fuqichen1998/Deformer/blob/62d8b218332b3ce29a87f8c239ded8e58ad3b062/ddp_train.py#L112
https://github.com/fuqichen1998/Deformer/blob/62d8b218332b3ce29a87f8c239ded8e58ad3b062/traineval.py#L95
https://github.com/fuqichen1998/Deformer/blob/62d8b218332b3ce29a87f8c239ded8e58ad3b062/traineval.py#L111

==============================
https://github.com/tzofi/diser
==============================

Found 4 times
torch.utils.data.DataLoader(valdata, batch_size=bsz,
                                            shuffle=False,
                                            num_workers=nworkers)
torch.utils.data.DataLoader(valdata, batch_size=bsz,
                                            shuffle=False,
                                            num_workers=nworkers)
torch.utils.data.DataLoader(dataset, shuffle=shuffle, **loader_config)
torch.utils.data.DataLoader(episode, collate_fn=list, **cfg.loader)
https://github.com/tzofi/diser/blob/a49fe9c0f42eb613f27eec0b91fe86dbf1b05655/av_rig_design/cross_view_transformers/cross_view_transformer/data/carla_dataset.py#L591
https://github.com/tzofi/diser/blob/a49fe9c0f42eb613f27eec0b91fe86dbf1b05655/av_rig_design/cross_view_transformers/cross_view_transformer/data/carla_dataset.py#L601
https://github.com/tzofi/diser/blob/a49fe9c0f42eb613f27eec0b91fe86dbf1b05655/av_rig_design/cross_view_transformers/cross_view_transformer/data/data_module.py#L73
https://github.com/tzofi/diser/blob/a49fe9c0f42eb613f27eec0b91fe86dbf1b05655/av_rig_design/cross_view_transformers/scripts/generate_data.py#L64

========================================
https://github.com/lllyasviel/ControlNet
========================================

Found 2 times
DataLoader(dataset, num_workers=0, batch_size=batch_size, shuffle=True)
DataLoader(dataset, num_workers=0, batch_size=batch_size, shuffle=True)
https://github.com/lllyasviel/ControlNet/blob/ed85cd1e25a5ed592f7d8178495b4483de0331bf/tutorial_train.py#L29
https://github.com/lllyasviel/ControlNet/blob/ed85cd1e25a5ed592f7d8178495b4483de0331bf/tutorial_train_sd21.py#L29

=============================
https://github.com/lwwu2/fipt
=============================

Found 2 times
DataLoader(dataset, batch_size=None, num_workers=self.hparams.num_workers)
DataLoader(dataset, shuffle=False, batch_size=None, num_workers=self.hparams.num_workers)
https://github.com/lwwu2/fipt/blob/9c25688f2da2dd0f467483e29533c56ee3fe0578/train.py#L77
https://github.com/lwwu2/fipt/blob/9c25688f2da2dd0f467483e29533c56ee3fe0578/train.py#L93

================================================
https://github.com/AGI-Labs/manipulate-by-seeing
================================================

Found 5 times
DataLoader(cal_dataset, batch_size=64, shuffle=True)
DataLoader(bc_train,
                         batch_size=args.batch_size,
                         shuffle=True,
                         num_workers=4)
DataLoader(bc_val,
                       batch_size=args.batch_size,
                       shuffle=False,
                       num_workers=4)
DataLoader(passive_train,
                          batch_size=args.batch_size,
                          shuffle=True,
                          num_workers=4)
DataLoader(passive_val,
                        batch_size=args.batch_size,
                        shuffle=False,
                        num_workers=4)
https://github.com/AGI-Labs/manipulate-by-seeing/blob/5f7a7c9a679be6c6fe0529431f1e0ac0fd664350/camera_gripper_calibration/compute_calibration.py#L69
https://github.com/AGI-Labs/manipulate-by-seeing/blob/5f7a7c9a679be6c6fe0529431f1e0ac0fd664350/scripts/gripper_trainer.py#L88
https://github.com/AGI-Labs/manipulate-by-seeing/blob/5f7a7c9a679be6c6fe0529431f1e0ac0fd664350/scripts/gripper_trainer.py#L98
https://github.com/AGI-Labs/manipulate-by-seeing/blob/5f7a7c9a679be6c6fe0529431f1e0ac0fd664350/scripts/trainer.py#L137
https://github.com/AGI-Labs/manipulate-by-seeing/blob/5f7a7c9a679be6c6fe0529431f1e0ac0fd664350/scripts/trainer.py#L147

======================================================
https://github.com/zhongcl-thu/3D-Implicit-Transporter
======================================================

Found 3 times
DataLoader(
                                self.train_dataset,
                                batch_size=self.config_common.batch_size,
                                shuffle=train_shuffle,
                                num_workers=self.config_common.workers,
                                pin_memory=True,
                                sampler = self.train_sampler,
                                worker_init_fn = seed_worker
                            )
DataLoader(
                                self.val_dataset,
                                batch_size=self.config_common.batch_size,
                                shuffle=False,
                                num_workers=self.config_common.workers,
                                sampler = self.val_sampler,
                                pin_memory=True,
                                drop_last=True,
                                worker_init_fn = seed_worker
                            )
DataLoader(
                                self.test_dataset,
                                batch_size=self.config_common.batch_size,
                                shuffle=False,
                                num_workers=self.config_common.workers,
                                sampler = None,
                                pin_memory=True,
                                drop_last=False
                            )
https://github.com/zhongcl-thu/3D-Implicit-Transporter/blob/5e12fe1c48dab89afc3dbd3f7b5ce82dd12ae430/core/solvers/solver.py#L119
https://github.com/zhongcl-thu/3D-Implicit-Transporter/blob/5e12fe1c48dab89afc3dbd3f7b5ce82dd12ae430/core/solvers/solver.py#L129
https://github.com/zhongcl-thu/3D-Implicit-Transporter/blob/5e12fe1c48dab89afc3dbd3f7b5ce82dd12ae430/core/test/evaluate.py#L84

========================================
https://github.com/PKU-EPIC/UniDexGrasp2
========================================

Found 3 times
DataLoader(
        dataset=val, batch_size=1, shuffle=False,
        num_workers=1, pin_memory=True
    )
DataLoader(
        dataset=train, batch_size=BATCH_SIZE, shuffle=True,
        num_workers=4, pin_memory=True
    )
DataLoader(
        dataset=val, batch_size=1, shuffle=False,
        num_workers=1, pin_memory=True
    )
https://github.com/PKU-EPIC/UniDexGrasp2/blob/a223e627216e7fdc4f5cda4475451e805068bc9f/dexgrasp/utils/autoencoding/eval.py#L39
https://github.com/PKU-EPIC/UniDexGrasp2/blob/a223e627216e7fdc4f5cda4475451e805068bc9f/dexgrasp/utils/autoencoding/train.py#L52
https://github.com/PKU-EPIC/UniDexGrasp2/blob/a223e627216e7fdc4f5cda4475451e805068bc9f/dexgrasp/utils/autoencoding/train.py#L56

===================================
https://github.com/MCZhi/GameFormer
===================================

Found 4 times
DataLoader(
        train_dataset, batch_size=args.batch_size, 
        sampler=train_sampler, num_workers=args.workers
        )
DataLoader(
        valid_dataset, batch_size=args.batch_size,
        sampler=valid_sampler, num_workers=args.workers
        )
DataLoader(train_set, batch_size=batch_size, shuffle=True, num_workers=os.cpu_count())
DataLoader(valid_set, batch_size=batch_size, shuffle=False, num_workers=os.cpu_count())
https://github.com/MCZhi/GameFormer/blob/88f30b61622f6b67e20bd32478b7028293eacc4f/interaction_prediction/train.py#L205
https://github.com/MCZhi/GameFormer/blob/88f30b61622f6b67e20bd32478b7028293eacc4f/interaction_prediction/train.py#L209
https://github.com/MCZhi/GameFormer/blob/88f30b61622f6b67e20bd32478b7028293eacc4f/open_loop_planning/train.py#L136
https://github.com/MCZhi/GameFormer/blob/88f30b61622f6b67e20bd32478b7028293eacc4f/open_loop_planning/train.py#L137

=======================================
https://github.com/ombretta/videobagnet
=======================================

Found 3 times
torch.utils.data.DataLoader(train_data,
                                               batch_size=opt.batch_size,
                                               shuffle=True,
                                               num_workers=opt.n_threads,
                                               pin_memory=True,
                                               sampler=train_sampler,
                                               worker_init_fn=worker_init_fn)
torch.utils.data.DataLoader(val_data,
                                             batch_size=(opt.batch_size //
                                                         opt.n_val_samples),
                                             shuffle=False,
                                             num_workers=opt.n_threads,
                                             pin_memory=True,
                                             sampler=val_sampler,
                                             worker_init_fn=worker_init_fn,
                                             collate_fn=collate_fn)
torch.utils.data.DataLoader(
        inference_data,
        batch_size=opt.inference_batch_size,
        shuffle=False,
        num_workers=opt.n_threads,
        pin_memory=True,
        worker_init_fn=worker_init_fn,
        collate_fn=collate_fn)
https://github.com/ombretta/videobagnet/blob/30519f691cb0e9ad312845692e3eedd6b54ec275/main.py#L220
https://github.com/ombretta/videobagnet/blob/30519f691cb0e9ad312845692e3eedd6b54ec275/main.py#L332
https://github.com/ombretta/videobagnet/blob/30519f691cb0e9ad312845692e3eedd6b54ec275/main.py#L394

=================================
https://github.com/cvl-umass/COSE
=================================

Found 2 times
torch.utils.data.DataLoader(
        trainset, batch_size=config["train_batch_size"], shuffle=True#, num_workers=8
        )
torch.utils.data.DataLoader(
        testset, batch_size=config["test_batch_size"], shuffle=False#, num_workers=2
    )
https://github.com/cvl-umass/COSE/blob/195757c414ad833ea6acd74b022b7a1d2ff2ebba/src/train_model.py#L116
https://github.com/cvl-umass/COSE/blob/195757c414ad833ea6acd74b022b7a1d2ff2ebba/src/train_model.py#L119

=================================================
https://github.com/nis-research/dfmX-augmentation
=================================================

Found 9 times
torch.utils.data.DataLoader(data_test, batch_size= 1000, shuffle=False,num_workers=2)
torch.utils.data.DataLoader(dataset=testset, batch_size=batchsize, shuffle=False)
torch.utils.data.DataLoader(self.train_dataset, batch_size=64, shuffle=True)
torch.utils.data.DataLoader(self.test_dataset, batch_size= 64, shuffle=False)
torch.utils.data.DataLoader(self.val_dataset, batch_size= 64)
DataLoader(dataset,
                                  batch_size=batch_size,
                                  shuffle=False,
                                  num_workers=0)
DataLoader(Test_Dataset(images.float(), targets.float()),
                             batch_size=10, shuffle=False, drop_last=True, num_workers=0)
torch.utils.data.DataLoader(data_test, batch_size= 1000, shuffle=False,num_workers=2)
torch.utils.data.DataLoader(dataset=testset, batch_size=batchsize, shuffle=False)
https://github.com/nis-research/dfmX-augmentation/blob/e5bff90de380a51fd1ccea1a0c89380962df0140/Compute_DFM_CIFAR.py#L37
https://github.com/nis-research/dfmX-augmentation/blob/e5bff90de380a51fd1ccea1a0c89380962df0140/Compute_DFM_CIFAR.py#L47
https://github.com/nis-research/dfmX-augmentation/blob/e5bff90de380a51fd1ccea1a0c89380962df0140/train.py#L195
https://github.com/nis-research/dfmX-augmentation/blob/e5bff90de380a51fd1ccea1a0c89380962df0140/train.py#L198
https://github.com/nis-research/dfmX-augmentation/blob/e5bff90de380a51fd1ccea1a0c89380962df0140/train.py#L201
https://github.com/nis-research/dfmX-augmentation/blob/e5bff90de380a51fd1ccea1a0c89380962df0140/Evaluation/adv_eval.py#L43
https://github.com/nis-research/dfmX-augmentation/blob/e5bff90de380a51fd1ccea1a0c89380962df0140/Evaluation/adv_eval.py#L86
https://github.com/nis-research/dfmX-augmentation/blob/e5bff90de380a51fd1ccea1a0c89380962df0140/Evaluation/verify_mask.py#L31
https://github.com/nis-research/dfmX-augmentation/blob/e5bff90de380a51fd1ccea1a0c89380962df0140/Evaluation/verify_mask.py#L46

====================================
https://github.com/VassilisCN/RV-VAE
====================================

Found 5 times
torch.utils.data.DataLoader(ds, batch_size=dis_batch_size, 
                        shuffle=True, pin_memory=True, drop_last=True,
                        num_workers=num_workers)
torch.utils.data.DataLoader(ds, batch_size=dis_batch_size, 
                        shuffle=True, pin_memory=True, drop_last=True,
                        num_workers=num_workers)
DataLoader(train_set, batch_size=batch_size, shuffle=True,
                                   num_workers=num_workers)
torch.utils.data.DataLoader(celeba_trainset, batch_size=batch_size, shuffle=True, drop_last=True)
torch.utils.data.DataLoader(celeba_testset, batch_size=batch_size, shuffle=False, drop_last=True)
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/DC_VAE/train.py#L114
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/DC_VAE/train.py#L124
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Soft_Intro_VAE/train_soft_intro_vae.py#L579
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Vanilla_VAE/train.py#L68
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Vanilla_VAE/train.py#L69

=====================================
https://github.com/cvl-umass/PARTICLE
=====================================

Found 11 times
DataLoader(dataset_train, batch_size=256, shuffle=False, num_workers=8, pin_memory=False)
DataLoader(dataset_val, batch_size=256, shuffle=False, num_workers=8, pin_memory=False)
DataLoader(val_data, batch_size=1, shuffle=False, num_workers=0)
DataLoader(test_data, batch_size=1, shuffle=False, num_workers=0)
DataLoader(val_data, batch_size=1, shuffle=False, num_workers=0)
DataLoader(test_data, batch_size=1, shuffle=False, num_workers=0)
DataLoader(train_data, batch_size=8, shuffle=True, num_workers=0)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=True,
        num_workers=args.num_workers, pin_memory=False, sampler=None)
DataLoader(train_data, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
DataLoader(train_data, batch_size=args.batch_size, shuffle=True, num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        dataset,
        sampler=sampler,
        batch_size=args.batch_size_per_gpu,
        num_workers=args.num_workers,
        pin_memory=True,
        drop_last=True,
    )
https://github.com/cvl-umass/PARTICLE/blob/331c92f4a69f21439c95503e839b158da9db3b33/evaluation/test_linear.py#L113
https://github.com/cvl-umass/PARTICLE/blob/331c92f4a69f21439c95503e839b158da9db3b33/evaluation/test_linear.py#L114
https://github.com/cvl-umass/PARTICLE/blob/331c92f4a69f21439c95503e839b158da9db3b33/evaluation/test_miou.py#L88
https://github.com/cvl-umass/PARTICLE/blob/331c92f4a69f21439c95503e839b158da9db3b33/evaluation/test_miou.py#L93
https://github.com/cvl-umass/PARTICLE/blob/331c92f4a69f21439c95503e839b158da9db3b33/evaluation/test_miou.py#L99
https://github.com/cvl-umass/PARTICLE/blob/331c92f4a69f21439c95503e839b158da9db3b33/evaluation/test_miou.py#L104
https://github.com/cvl-umass/PARTICLE/blob/331c92f4a69f21439c95503e839b158da9db3b33/evaluation/train_fcn.py#L78
https://github.com/cvl-umass/PARTICLE/blob/331c92f4a69f21439c95503e839b158da9db3b33/ssl_training/generate_clusters_resnet.py#L75
https://github.com/cvl-umass/PARTICLE/blob/331c92f4a69f21439c95503e839b158da9db3b33/ssl_training/train_particle.py#L92
https://github.com/cvl-umass/PARTICLE/blob/331c92f4a69f21439c95503e839b158da9db3b33/ssl_training/train_particle_resnet.py#L94
https://github.com/cvl-umass/PARTICLE/blob/331c92f4a69f21439c95503e839b158da9db3b33/ssl_training/train_particle_vit.py#L164

=================================
https://github.com/sthalles/CLoVE
=================================

Found 1 times
DataLoader(
        train_dataset,
        batch_size=args.batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True,
        sampler=sampler,
        drop_last=True)
https://github.com/sthalles/CLoVE/blob/d7065731cb5d628747aaeb3ca4186b3208e6ee81/contrast/data/__init__.py#L48

=======================================
https://github.com/lukasknobel/ShapeGNN
=======================================

Found 3 times
DataLoader(trainval_dataset, sampler=CustomBatchSampler(indices=train_idxs, random_sampling=True,
        batch_size=batch_size), num_workers=num_workers, collate_fn=lambda x: x, batch_size=None, pin_memory=True)
DataLoader(trainval_dataset,
                                    sampler=CustomBatchSampler(indices=val_idxs, random_sampling=False,
                                                               batch_size=batch_size),
                                    num_workers=num_workers, collate_fn=lambda x: x, batch_size=None, pin_memory=True)
DataLoader(test_dataset,
                                 sampler=CustomBatchSampler(indices=torch.arange(len(test_dataset)),
                                                            random_sampling=False, batch_size=batch_size),
                                 num_workers=num_workers, collate_fn=lambda x: x, batch_size=None, pin_memory=True)
https://github.com/lukasknobel/ShapeGNN/blob/02a983d778d288dc349284aef17f1d1b9d0e4113/src/TrainEvaluationHandling.py#L62
https://github.com/lukasknobel/ShapeGNN/blob/02a983d778d288dc349284aef17f1d1b9d0e4113/src/TrainEvaluationHandling.py#L67
https://github.com/lukasknobel/ShapeGNN/blob/02a983d778d288dc349284aef17f1d1b9d0e4113/src/TrainEvaluationHandling.py#L240

================================
https://github.com/beuve/waterlo
================================

Found 3 times
torch.utils.data.DataLoader(dataset=dataset, batch_size=batch_size, drop_last=drop_last, num_workers=1, shuffle=shuffle)
torch.utils.data.DataLoader(dataset=dataset, batch_size=batch_size, drop_last=drop_last, num_workers=1, shuffle=shuffle)
torch.utils.data.DataLoader(
        dataset=dataset,
        batch_size=batch_size,
        drop_last=True,
        shuffle=True,
        num_workers=2,
    )
https://github.com/beuve/waterlo/blob/9434d33c108f2d0f912efb3850ffab2b4847c875/src/loader.py#L128
https://github.com/beuve/waterlo/blob/9434d33c108f2d0f912efb3850ffab2b4847c875/src/loader.py#L150
https://github.com/beuve/waterlo/blob/9434d33c108f2d0f912efb3850ffab2b4847c875/src/blind_detector/loader.py#L79

===================================================
https://github.com/DynYKD/Continual-Plant-Detection
===================================================

Found 1 times
torch.utils.data.DataLoader(dataset, batch_sampler=batch_sampler,
                                                  collate_fn=collator, num_workers=num_workers)
https://github.com/DynYKD/Continual-Plant-Detection/blob/6b74510e2d587017a6863ed5a3a056014e3e03c2/maskrcnn_benchmark/data/build.py#L184

=======================================
https://github.com/mondalanindya/MSQNet
=======================================

Found 2 times
DataLoader(train_data, batch_size=self.batch_size, shuffle=shuffle, num_workers=self.num_workers, sampler=sampler, pin_memory=False, drop_last=drop_last)
DataLoader(test_data, batch_size=self.batch_size, shuffle=shuffle, num_workers=self.num_workers, sampler=sampler, pin_memory=True, drop_last=drop_last)
https://github.com/mondalanindya/MSQNet/blob/a340f6e8868b088a5d6a46d863bc9f228f861fa7/multi-label-action-main/datasets/datamanager.py#L201
https://github.com/mondalanindya/MSQNet/blob/a340f6e8868b088a5d6a46d863bc9f228f861fa7/multi-label-action-main/datasets/datamanager.py#L237

===========================================
https://github.com/ziyangwang007/CV-SSL-MIS
===========================================

Found 52 times
DataLoader(
        db_train,
        batch_sampler=batch_sampler,
        num_workers=4,
        pin_memory=True,
        worker_init_fn=worker_init_fn,
    )
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train_w, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_train_s, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train_w, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_train_s, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(
        db_train,
        batch_sampler=batch_sampler,
        num_workers=4,
        pin_memory=True,
        worker_init_fn=worker_init_fn,
    )
DataLoader(db_val, batch_size=1, shuffle=False, num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=16, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=0, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=16, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=16, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_train, batch_size=batch_size, shuffle=True,
                             num_workers=16, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_size=batch_size, shuffle=True,
                             num_workers=16, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_size=batch_size, shuffle=True,
                             num_workers=16, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_train, batch_size=batch_size, shuffle=True,
                             num_workers=16, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=0, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_train, batch_sampler=batch_sampler,
                             num_workers=4, pin_memory=True, worker_init_fn=worker_init_fn)
DataLoader(db_val, batch_size=1, shuffle=False,
                           num_workers=1)
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_Contrastive_Consistency_ViT_2D.py#L275
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_Contrastive_Consistency_ViT_2D.py#L288
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_Contrastive_Cross_CNN_2D.py#L162
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_Contrastive_Cross_CNN_2D.py#L164
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_Contrastive_Cross_CNN_2D.py#L170
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_Contrastive_Cross_CNN_ViT_2D.py#L167
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_Contrastive_Cross_CNN_ViT_2D.py#L169
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_Contrastive_Cross_CNN_ViT_2D.py#L175
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_Fixmatch_CNN_2D.py#L226
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_Fixmatch_CNN_2D.py#L234
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_adversarial_consistency_ViT_2D.py#L171
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_adversarial_consistency_ViT_2D.py#L176
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_adversarial_network_2D_ViT.py#L151
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_adversarial_network_2D_ViT.py#L155
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_adversarial_network_3D.py#L110
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cnn_meet_vit_2D.py#L256
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cnn_meet_vit_2D.py#L262
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cross_pseudo_supervision_2D.py#L141
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cross_pseudo_supervision_2D.py#L147
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cross_pseudo_supervision_2D_ViT.py#L181
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cross_pseudo_supervision_2D_ViT.py#L187
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cross_pseudo_supervision_3D.py#L130
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cross_teaching_between_cnn_transformer_2D.py#L189
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cross_teaching_between_cnn_transformer_2D.py#L195
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_deep_co_training_2D.py#L107
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_deep_co_training_2D.py#L111
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_deep_co_training_2D_ViT.py#L144
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_deep_co_training_2D_ViT.py#L149
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_exam_student_teacher_3D.py#L122
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_fully_supervised_2D.py#L84
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_fully_supervised_2D.py#L86
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_fully_supervised_2D_ViT.py#L137
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_fully_supervised_2D_ViT.py#L139
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_fully_supervised_3D.py#L74
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_fully_supervised_3D_ViT.py#L74
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_interpolation_consistency_training_2D.py#L126
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_interpolation_consistency_training_2D.py#L131
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_interpolation_consistency_training_2D_ViT.py#L168
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_interpolation_consistency_training_2D_ViT.py#L173
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_interpolation_consistency_training_3D.py#L119
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_mean_teacher_2D.py#L179
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_mean_teacher_2D.py#L184
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_mean_teacher_3D.py#L115
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_mean_teacher_ViT.py#L179
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_mean_teacher_ViT.py#L184
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_tripleview_2D(demo).py#L252
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_tripleview_2D(demo).py#L259
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_uncertainty_aware_mean_teacher_2D.py#L123
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_uncertainty_aware_mean_teacher_2D.py#L128
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_uncertainty_aware_mean_teacher_3D.py#L116
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_uncertainty_aware_mean_teacher_ViT_2D.py#L158
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_uncertainty_aware_mean_teacher_ViT_2D.py#L163

==============================================
https://github.com/JoakimHaurum/TokenReduction
==============================================

Found 4 times
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_train, sampler=sampler_train,
        batch_size=args.batch_size,
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=True,
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(1.5 * args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
torch.utils.data.DataLoader(
        dataset_val, sampler=sampler_val,
        batch_size=int(args.batch_size),
        num_workers=args.num_workers,
        pin_memory=args.pin_mem,
        drop_last=False
    )
https://github.com/JoakimHaurum/TokenReduction/blob/88fe07ebbc5ffbf3a36814526577f1a8576e048d/extract_cls_features.py#L60
https://github.com/JoakimHaurum/TokenReduction/blob/88fe07ebbc5ffbf3a36814526577f1a8576e048d/train.py#L297
https://github.com/JoakimHaurum/TokenReduction/blob/88fe07ebbc5ffbf3a36814526577f1a8576e048d/train.py#L305
https://github.com/JoakimHaurum/TokenReduction/blob/88fe07ebbc5ffbf3a36814526577f1a8576e048d/validate.py#L76

====================================================
https://github.com/FelixHertlein/illtrtemplate-model
====================================================

Found 3 times
DataLoader(
            dataset=train_dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            shuffle=True,
            drop_last=False,
            persistent_workers=True,
        )
DataLoader(
            dataset=val_dataset,
            batch_size=batch_size,
            num_workers=num_workers,
            shuffle=False,
            drop_last=False,
            persistent_workers=True,
        )
DataLoader(
            inference_dataset,
            batch_size=1,  # batch size 1 is required due to changing aspect ratios!
            num_workers=num_workers,
            shuffle=False,
            drop_last=False,
            persistent_workers=True,
        )
https://github.com/FelixHertlein/illtrtemplate-model/blob/b3ee560831f1fd39a2d941d1abc6b3687f5fe1ca/src/inv3d_illuminator/model_zoo.py#L152
https://github.com/FelixHertlein/illtrtemplate-model/blob/b3ee560831f1fd39a2d941d1abc6b3687f5fe1ca/src/inv3d_illuminator/model_zoo.py#L161
https://github.com/FelixHertlein/illtrtemplate-model/blob/b3ee560831f1fd39a2d941d1abc6b3687f5fe1ca/src/inv3d_illuminator/model_zoo.py#L272

=======================================================
https://github.com/Hmic1102/Auto-generated-pseudo-label
=======================================================

Found 45 times
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
torch.utils.data.DataLoader(
        train_dataset, batch_size=args.batch_size, shuffle=(train_sampler is None),
        num_workers=args.workers, pin_memory=True, sampler=train_sampler)
torch.utils.data.DataLoader(
        val_dataset, batch_size=args.batch_size, shuffle=False,
        num_workers=args.workers, pin_memory=True, sampler=val_sampler)
torch.utils.data.DataLoader(
            aux_val_dataset, batch_size=args.batch_size, shuffle=False,
            num_workers=args.workers, pin_memory=True)
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/fine_tune.py#L272
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/fine_tune.py#L276
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/fine_tune.py#L408
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/main-pseudo.py#L274
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/main-pseudo.py#L278
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/main-pseudo.py#L410
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/main.py#L270
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/main.py#L274
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/main.py#L406
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/pseudo-test.py#L272
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/pseudo-test.py#L276
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/pseudo-test.py#L408
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/CIFAR100_resume.py#L261
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/CIFAR100_resume.py#L265
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/CIFAR100_resume.py#L399
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/CUBS.py#L259
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/CUBS.py#L263
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/CUBS.py#L397
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/DTD_finetuning.py#L259
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/DTD_finetuning.py#L263
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/DTD_finetuning.py#L397
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/Omniglot.py#L261
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/Omniglot.py#L265
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/Omniglot.py#L401
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/SVHN_finetune.py#L257
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/SVHN_finetune.py#L261
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/SVHN_finetune.py#L395
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/SVNH_resume.py#L261
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/SVNH_resume.py#L265
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/SVNH_resume.py#L399
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/aircraft_finetuning.py#L261
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/aircraft_finetuning.py#L265
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/aircraft_finetuning.py#L399
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/aircraft_test.py#L259
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/aircraft_test.py#L263
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/aircraft_test.py#L397
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/cifar100_finetune.py#L261
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/cifar100_finetune.py#L265
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/cifar100_finetune.py#L399
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/oxford_finetuning.py#L261
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/oxford_finetuning.py#L265
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/oxford_finetuning.py#L399
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/oxford_test.py#L264
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/oxford_test.py#L268
https://github.com/Hmic1102/Auto-generated-pseudo-label/blob/9442e916822bdce3b1e5bd1db00cdc36f947f9c1/finetune/oxford_test.py#L402

===================================
https://github.com/rvandeghen/ASTOD
===================================

Found 4 times
torch.utils.data.DataLoader(
        dataset,
        batch_size=1,
        sampler=sampler,
        num_workers=14,  # you might want to increase it for faster processing
        collate_fn=lambda x: x[0],
    )
torch.utils.data.DataLoader(
        dataset_test, batch_size=1,
        sampler=test_sampler, num_workers=cfg["workers"],
        collate_fn=utils.collate_fn)
torch.utils.data.DataLoader(
        dataset, batch_sampler=train_batch_sampler, num_workers=cfg["workers"],
        collate_fn=utils.collate_fn, pin_memory=True)
torch.utils.data.DataLoader(
        dataset_test, batch_size=1,
        sampler=test_sampler, num_workers=cfg["workers"],
        collate_fn=utils.collate_fn, pin_memory=True)
https://github.com/rvandeghen/ASTOD/blob/67069fd15d2ebc11b5771e1d6baf3f8da6cffaaf/src/group_by_aspect_ratio.py#L117
https://github.com/rvandeghen/ASTOD/blob/67069fd15d2ebc11b5771e1d6baf3f8da6cffaaf/src/label.py#L104
https://github.com/rvandeghen/ASTOD/blob/67069fd15d2ebc11b5771e1d6baf3f8da6cffaaf/src/train.py#L126
https://github.com/rvandeghen/ASTOD/blob/67069fd15d2ebc11b5771e1d6baf3f8da6cffaaf/src/train.py#L130

===========================================
https://github.com/DavidGillsjo/polygon-HGT
===========================================

Found 2 times
torch.utils.data.DataLoader(
            dataset,  batch_size = 1,
            collate_fn = dataset.collate_fn,
            num_workers = cfg.DATALOADER.NUM_WORKERS,
        )
DataLoader(dataset, **loader_kwargs)
https://github.com/DavidGillsjo/polygon-HGT/blob/260eed82cce42accadb3e33eaa135f09db4ca75a/parsing/dataset/build.py#L108
https://github.com/DavidGillsjo/polygon-HGT/blob/260eed82cce42accadb3e33eaa135f09db4ca75a/parsing/utils/multi_gpu.py#L87

===============================
https://github.com/vojirt/GROOD
===============================

Found 16 times
DataLoader(train_set, batch_size=cfg.INPUT.BATCH_SIZE, drop_last=True, shuffle=True, worker_init_fn=seed_worker, **kwargs)
DataLoader(val_set, batch_size=cfg.INPUT.BATCH_SIZE, shuffle=False, worker_init_fn=seed_worker, **kwargs)
DataLoader(test_set, batch_size=cfg.INPUT.BATCH_SIZE, shuffle=False, worker_init_fn=seed_worker, **kwargs)
torch.utils.data.DataLoader(Subset(test_set, ood_indices), batch_size=cfg.INPUT.BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(Subset(test_set, id_indices), batch_size=cfg.INPUT.BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(test_set_sub, batch_size=cfg.INPUT.BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(Subset(test_set_id, id_indices), batch_size=cfg.INPUT.BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(Subset(test_set, id_indices), batch_size=cfg.INPUT.BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(Subset(test_set, ood_indices), batch_size=cfg.INPUT.BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(Subset(test_set_ood, ood_indices), batch_size=cfg.INPUT.BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(test_set_ood, batch_size=cfg.INPUT.BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(Subset(test_set_ood, ood_indices), batch_size=cfg.INPUT.BATCH_SIZE, shuffle=False)
torch.utils.data.DataLoader(Subset(test_set_id, id_indices), batch_size=cfg.INPUT.BATCH_SIZE, shuffle=False)
DataLoader(ConcatDataset([train_set, val_set]), batch_size=cfg.INPUT.BATCH_SIZE)
DataLoader(ConcatDataset([train_set, val_set]), batch_size=cfg.INPUT.BATCH_SIZE)
DataLoader(ConcatDataset([train_set, val_set]), batch_size=cfg.INPUT.BATCH_SIZE)
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/dataloaders/__init__.py#L166
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/dataloaders/__init__.py#L167
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/dataloaders/__init__.py#L168
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/eval_6v4.py#L67
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/eval_6v4.py#L68
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/eval_6v4.py#L75
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/eval_6v4.py#L84
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/eval_ssb.py#L32
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/eval_ssb.py#L37
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/eval_vs_dataset.py#L51
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/eval_vs_dataset.py#L54
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/eval_vs_dataset.py#L57
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/eval_vs_dataset.py#L66
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/utils.py#L209
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/utils.py#L242
https://github.com/vojirt/GROOD/blob/d0c76afd9290cb9662f76c5e08a8aedf627aa443/eval/utils.py#L296

===================================================================
https://github.com/melanibe/distance_matters_performance_estimation
===================================================================

Found 14 times
DataLoader(ds, batch_size=self.batch_size, num_workers=self.num_workers, shuffle=False)
DataLoader(
            self.dataset_val,
            self.batch_size,
            shuffle=False,
            num_workers=self.num_workers,
        )
DataLoader(imagenet_v2_a, self.batch_size, shuffle=False, num_workers=self.num_workers)
DataLoader(imagenet_sketch, self.batch_size, shuffle=False, num_workers=self.num_workers)
DataLoader(imagenet_a, self.batch_size, shuffle=False, num_workers=self.num_workers)
DataLoader(
            self.dataset_train,
            self.batch_size,
            shuffle=self.shuffle,
            num_workers=self.num_workers,
        )
DataLoader(
            self.dataset_val,
            self.batch_size,
            shuffle=False,
            num_workers=self.num_workers,
        )
DataLoader(
            self.dataset_test,
            self.batch_size,
            shuffle=False,
            num_workers=self.num_workers,
        )
DataLoader(
            self.dataset_train,
            self.batch_size,
            shuffle=self.shuffle,
            num_workers=self.num_workers,
        )
DataLoader(
            self.dataset_val,
            self.batch_size,
            shuffle=False,
            num_workers=self.num_workers,
        )
DataLoader(svhn, self.batch_size, shuffle=False, num_workers=self.num_workers)
DataLoader(
            self.dataset_train,
            self.batch_size,
            shuffle=self.shuffle,
            num_workers=self.num_workers,
        )
DataLoader(
            self.dataset_val,
            self.batch_size,
            shuffle=False,
            num_workers=self.num_workers,
        )
DataLoader(
                        PACSDataset(split="test", domain=domain, transform=self.preprocess),
                        self.batch_size,
                        shuffle=False,
                        num_workers=self.num_workers,
                    )
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/cifar.py#L45
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/imagenet.py#L25
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/imagenet.py#L43
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/imagenet.py#L47
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/imagenet.py#L2089
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/medmnist.py#L50
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/medmnist.py#L58
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/medmnist.py#L66
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/mnist.py#L22
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/mnist.py#L30
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/mnist.py#L45
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/pacs.py#L32
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/pacs.py#L40
https://github.com/melanibe/distance_matters_performance_estimation/blob/2a55c810d7a07a4c68e6171537189eb49df4ba81/data_handling/pacs.py#L53

==================================
https://github.com/RainJamesY/DIDA
==================================

Found 2 times
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            persistent_workers=persistent_workers,
            **kwargs)
DataLoader(
            dataset,
            batch_size=batch_size,
            sampler=sampler,
            num_workers=num_workers,
            collate_fn=partial(collate, samples_per_gpu=samples_per_gpu),
            pin_memory=pin_memory,
            shuffle=shuffle,
            worker_init_fn=init_fn,
            drop_last=drop_last,
            **kwargs)
https://github.com/RainJamesY/DIDA/blob/8b9c5bf25aa7bbeab0fd5e83146a73da2e769cee/mmseg/datasets/builder.py#L147
https://github.com/RainJamesY/DIDA/blob/8b9c5bf25aa7bbeab0fd5e83146a73da2e769cee/mmseg/datasets/builder.py#L160

================================
https://github.com/LLNL/OODmedic
================================

Found 14 times
DataLoader(dataset=train_ds, batch_size=config['batch_size'], sampler=sampler,
                              num_workers=config['num_workers'])
DataLoader(dataset=val_ds, batch_size=config['batch_size'], shuffle=False,
                            num_workers=config['num_workers'])
DataLoader(dataset=neg_aug_dataset, batch_size=in_dataset_params['batch_size'], sampler=sampler,
                              num_workers=in_dataset_params['num_workers']//2)
DataLoader(dataset=neg_aug_dataset, batch_size=in_dataset_params['batch_size'], shuffle=True,
                              num_workers=in_dataset_params['num_workers'])
torch.utils.data.DataLoader(
        test_data,
        batch_size=args.eval_batch_size,
        shuffle=False,
        num_workers=args.num_workers,
        pin_memory=True)
torch.utils.data.DataLoader(
      train_data,
      batch_size=args.batch_size,
      shuffle=True,
      num_workers=args.num_workers,
      pin_memory=True)
torch.utils.data.DataLoader(
      test_data,
      batch_size=args.eval_batch_size,
      shuffle=False,
      num_workers=args.num_workers,
      pin_memory=True)
torch.utils.data.DataLoader(
          datasets.ImageFolder(valdir, test_transform),
          batch_size=args.eval_batch_size,
          shuffle=False,
          num_workers=args.num_workers,
          pin_memory=True)
torch.utils.data.DataLoader(
      train_dataset,
      batch_size=args.batch_size,
      shuffle=True,
      num_workers=args.num_workers)
torch.utils.data.DataLoader(
      datasets.ImageFolder(valdir, test_transform),
      batch_size=args.batch_size,
      shuffle=False,
      num_workers=args.num_workers)
torch.utils.data.DataLoader(trainset, batch_size=args.batch_size, shuffle=True, num_workers=8)
torch.utils.data.DataLoader(
        validsets[d], batch_size=512, shuffle=False, num_workers=2, pin_memory=True)
torch.utils.data.DataLoader(testdata[name], batch_size=256, shuffle=False, num_workers=2)
torch.utils.data.DataLoader(testdata[d], batch_size=256, shuffle=False, num_workers=2)
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/datasets.py#L191
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/datasets.py#L193
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/train_in_latent_out_pix.py#L554
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/train_in_latent_out_pix.py#L558
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/utils/augmix/cifar.py#L274
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/utils/augmix/cifar.py#L318
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/utils/augmix/cifar.py#L325
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/utils/augmix/imagenet.py#L342
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/utils/augmix/imagenet.py#L384
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/utils/augmix/imagenet.py#L389
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/utils/randconv/train_digits.py#L79
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/utils/randconv/train_digits.py#L80
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/utils/randconv/train_digits.py#L94
https://github.com/LLNL/OODmedic/blob/c210228aac6eb0068029c30d4f5744caeaec1c36/utils/randconv/train_digits.py#L98

============================================================
https://github.com/vaishwarya96/MAPLE-uncertainty-estimation
============================================================

Found 7 times
data.DataLoader(train_data_loader, batch_size=cfg.TRAIN.BATCH_SIZE, shuffle=False, num_workers=cfg.SYSTEM.NUM_WORKERS)
data.DataLoader(id_data_loader, batch_size=cfg.TRAIN.BATCH_SIZE, shuffle=False, num_workers=cfg.SYSTEM.NUM_WORKERS)
data.DataLoader(ood_data_loader, batch_size=cfg.TRAIN.BATCH_SIZE, shuffle=False, num_workers=cfg.SYSTEM.NUM_WORKERS)
data.DataLoader(train_data_loader, batch_size=cfg.TRAIN.BATCH_SIZE, shuffle=True, num_workers=cfg.SYSTEM.NUM_WORKERS)
data.DataLoader(cluster_data_loader, batch_size=cfg.TRAIN.BATCH_SIZE, shuffle=True, num_workers=cfg.SYSTEM.NUM_WORKERS)
data.DataLoader(test_data_loader, batch_size=cfg.TRAIN.BATCH_SIZE, shuffle=False, num_workers=cfg.SYSTEM.NUM_WORKERS)
data.DataLoader(cluster_data_loader, batch_size=cfg.TRAIN.BATCH_SIZE, shuffle=True, num_workers=cfg.SYSTEM.NUM_WORKERS)
https://github.com/vaishwarya96/MAPLE-uncertainty-estimation/blob/200265057f0e8520a80295ecc3f3a7edcbd5df43/mahalanobis_calculation.py#L39
https://github.com/vaishwarya96/MAPLE-uncertainty-estimation/blob/200265057f0e8520a80295ecc3f3a7edcbd5df43/mahalanobis_calculation.py#L43
https://github.com/vaishwarya96/MAPLE-uncertainty-estimation/blob/200265057f0e8520a80295ecc3f3a7edcbd5df43/mahalanobis_calculation.py#L47
https://github.com/vaishwarya96/MAPLE-uncertainty-estimation/blob/200265057f0e8520a80295ecc3f3a7edcbd5df43/train.py#L39
https://github.com/vaishwarya96/MAPLE-uncertainty-estimation/blob/200265057f0e8520a80295ecc3f3a7edcbd5df43/train.py#L40
https://github.com/vaishwarya96/MAPLE-uncertainty-estimation/blob/200265057f0e8520a80295ecc3f3a7edcbd5df43/train.py#L41
https://github.com/vaishwarya96/MAPLE-uncertainty-estimation/blob/200265057f0e8520a80295ecc3f3a7edcbd5df43/train_utils/cluster_utils.py#L143

=========================================
https://github.com/antonbaumann/MIMO-Unet
=========================================

Found 13 times
torch.utils.data.DataLoader(
            self.data_train,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=True,
            drop_last=True,
            pin_memory=self.pin_memory,
        )
torch.utils.data.DataLoader(
            self.data_valid,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=False,
            drop_last=False,
            pin_memory=self.pin_memory,
        )
torch.utils.data.DataLoader(
            self.data_test,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=False,
            drop_last=False,
            pin_memory=self.pin_memory,
        )
torch.utils.data.DataLoader(
            self.data_train,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=True,
            drop_last=True,
            pin_memory=self.pin_memory,
        )
torch.utils.data.DataLoader(
            self.data_val,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=False,
            drop_last=False,
            pin_memory=self.pin_memory,
        )
torch.utils.data.DataLoader(
            self.data_val,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=False,
            drop_last=False,
            pin_memory=self.pin_memory,
        )
torch.utils.data.DataLoader(
            self.data_train,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=True,
            drop_last=True,
            pin_memory=self.pin_memory,
        )
torch.utils.data.DataLoader(
            self.data_valid,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=False,
            drop_last=False,
            pin_memory=self.pin_memory,
        )
torch.utils.data.DataLoader(
            self.data_test,
            batch_size=self.batch_size,
            num_workers=self.num_workers,
            shuffle=False,
            drop_last=False,
            pin_memory=self.pin_memory,
        )
DataLoader(
        dataset, 
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers,
        pin_memory=True,
    )
DataLoader(
        dataset, 
        batch_size=batch_size,
        shuffle=False,
        num_workers=num_workers,
        pin_memory=True,
    )
DataLoader(dataset, batch_size=batch_size)
DataLoader(dataset, batch_size=batch_size)
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/mimo/tasks/depth/make3d_datamodule.py#L54
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/mimo/tasks/depth/make3d_datamodule.py#L64
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/mimo/tasks/depth/make3d_datamodule.py#L74
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/mimo/tasks/depth/muad_datamodule.py#L48
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/mimo/tasks/depth/muad_datamodule.py#L58
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/mimo/tasks/depth/muad_datamodule.py#L68
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/mimo/tasks/depth/nyuv2_datamodule.py#L53
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/mimo/tasks/depth/nyuv2_datamodule.py#L63
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/mimo/tasks/depth/nyuv2_datamodule.py#L73
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/scripts/test/test_ndvi.py#L34
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/scripts/test/test_ndvi_evidential.py#L25
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/scripts/test/test_nyuv2_depth.py#L32
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/scripts/test/test_nyuv2_depth_evidential.py#L33

=======================================
https://github.com/kev-in-ta/UncLe-SLAM
=======================================

Found 1 times
DataLoader(self.frame_reader, batch_size=1, shuffle=False, num_workers=1)
https://github.com/kev-in-ta/UncLe-SLAM/blob/0631293f1f8ae3cc1bc5e484865722d1f35a2a7e/src/tracker.py#L81

====================================
https://github.com/bobo199830/VAPNet
====================================

Found 1 times
DataLoader(unseen_dataset,batch_size=opt.batch_size,shuffle=False,num_workers=opt.workers)
https://github.com/bobo199830/VAPNet/blob/bbc50dc2e3bb90c68ee6aedd58c9c5bb4eb9f2fd/test.py#L51

===================================
https://github.com/webber2933/iCLIP
===================================

Found 1 times
torch.utils.data.DataLoader(
            dataset,
            num_workers=num_workers,
            batch_sampler=batch_sampler,
            collate_fn=collator,
            worker_init_fn=_init_fn,
        )
https://github.com/webber2933/iCLIP/blob/d89204fd85d2089c7428ee291f1d26ce9bc3ea5e/iCLIP/dataset/build.py#L175

====================================
https://github.com/mayug/VDT-Adapter
====================================

Found 1 times
torch.utils.data.DataLoader(
        DatasetWrapper(cfg, dataset_input, transform=tfm_train, is_train=False),
        batch_size=cfg.DATALOADER.TRAIN_X.BATCH_SIZE,
        sampler=None,
        shuffle=False,
        num_workers=cfg.DATALOADER.NUM_WORKERS,
        drop_last=False,
        pin_memory=(torch.cuda.is_available() and cfg.USE_CUDA),
    )
https://github.com/mayug/VDT-Adapter/blob/898fe25331b8662dc9d72333ca3cd710c19bde15/lpclip/feat_extractor.py#L132
