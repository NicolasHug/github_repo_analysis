Found 2715 times in 481 repos.

===========================================
https://github.com/NVlabs/ConformalKeypoint
===========================================

Found 3 times
make_grid(gt_image_keypoints, pad_value=1, nrow=3)
make_grid(pred_image_keypoints, pad_value=1, nrow=3)
make_grid(pred_keypoints[-1][0,:,:,:].unsqueeze(0).transpose(0,1), pad_value=1, nrow=5)
https://github.com/NVlabs/ConformalKeypoint/blob/427d71bd7fb40686b345c1e780250728266f2944/keypoint/train/keypoint_trainer.py#L142
https://github.com/NVlabs/ConformalKeypoint/blob/427d71bd7fb40686b345c1e780250728266f2944/keypoint/train/keypoint_trainer.py#L143
https://github.com/NVlabs/ConformalKeypoint/blob/427d71bd7fb40686b345c1e780250728266f2944/keypoint/train/keypoint_trainer.py#L145

================================
https://github.com/gangweiX/IGEV
================================

Found 1 times
vutils.make_grid(img, padding=0, nrow=1, normalize=True, scale_each=True)
https://github.com/gangweiX/IGEV/blob/60a0f9c66d03657d45893e8c938b6a7819a30b51/IGEV-MVS/utils.py#L91

======================================
https://github.com/nvlabs/neuralangelo
======================================

Found 1 times
torchvision.utils.make_grid(images, nrow=1, pad_value=1)
https://github.com/nvlabs/neuralangelo/blob/94390b64683c067c620d9e075224ccfe582647d0/imaginaire/utils/visualization.py#L23

=============================
https://github.com/zju3dv/pvo
=============================

Found 1 times
save_image(random_image, f.name)
https://github.com/zju3dv/pvo/blob/c67a15f4e0956cf237bfe620029206af63ebde51/VPS_Module/projects/DensePose/tests/test_image_list_dataset.py#L19

======================================
https://github.com/ttlmh/Diffusion-SDF
======================================

Found 8 times
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
vutils.make_grid(img_comb, nrow=nrow)
vutils.make_grid(img_grid_i, nrow=nrow)
vutils.make_grid(img_grid_i, nrow=1)
vutils.make_grid(image_tensor, nrow=4)
https://github.com/ttlmh/Diffusion-SDF/blob/db0d45153ea10576eac7a41d33e9a6806e811dcf/models/voxdiff/models/diffusion/ddpm_3d.py#L378
https://github.com/ttlmh/Diffusion-SDF/blob/db0d45153ea10576eac7a41d33e9a6806e811dcf/models/voxdiff/models/diffusion/ddpm_3d.py#L544
https://github.com/ttlmh/Diffusion-SDF/blob/db0d45153ea10576eac7a41d33e9a6806e811dcf/models/voxdiff/models/diffusion/ddpm_3d.py#L1321
https://github.com/ttlmh/Diffusion-SDF/blob/db0d45153ea10576eac7a41d33e9a6806e811dcf/models/voxdiff/modules/image_degradation/utils_image.py#L353
https://github.com/ttlmh/Diffusion-SDF/blob/db0d45153ea10576eac7a41d33e9a6806e811dcf/utils/qual_util.py#L210
https://github.com/ttlmh/Diffusion-SDF/blob/db0d45153ea10576eac7a41d33e9a6806e811dcf/utils/qual_util.py#L230
https://github.com/ttlmh/Diffusion-SDF/blob/db0d45153ea10576eac7a41d33e9a6806e811dcf/utils/qual_util.py#L257
https://github.com/ttlmh/Diffusion-SDF/blob/db0d45153ea10576eac7a41d33e9a6806e811dcf/utils/util.py#L36

===================================================
https://github.com/henry123-boy/Level-S2FM_official
===================================================

Found 4 times
torchvision.utils.make_grid(normal_maps_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(output_vs_gt_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(images[:,:3],nrow=num_W,pad_value=1.)
torchvision.utils.make_grid(images[:,3:],nrow=num_W,pad_value=1.)
https://github.com/henry123-boy/Level-S2FM_official/blob/ca1689e245090181025080809d8e133c8ea2d7d4/utils/plots.py#L375
https://github.com/henry123-boy/Level-S2FM_official/blob/ca1689e245090181025080809d8e133c8ea2d7d4/utils/plots.py#L393
https://github.com/henry123-boy/Level-S2FM_official/blob/ca1689e245090181025080809d8e133c8ea2d7d4/utils/util_vis.py#L28
https://github.com/henry123-boy/Level-S2FM_official/blob/ca1689e245090181025080809d8e133c8ea2d7d4/utils/util_vis.py#L30

====================================================================
https://github.com/ByeongjooAhn/neural_kaleidoscopic_space_sculpting
====================================================================

Found 2 times
torchvision.utils.make_grid(depth_maps_plot.repeat(1, 3, 1, 1),
                                         scale_each=True,
                                         normalize=True,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(mask.repeat(1, 3, 1, 1),
                                         scale_each=True,
                                         normalize=True,
                                         nrow=plot_nrow)
https://github.com/ByeongjooAhn/neural_kaleidoscopic_space_sculpting/blob/a14445d39df245cbf9a227880eac4dfc8ef962b9/code/utils/plots.py#L296
https://github.com/ByeongjooAhn/neural_kaleidoscopic_space_sculpting/blob/a14445d39df245cbf9a227880eac4dfc8ef962b9/code/utils/plots.py#L353

=========================================
https://github.com/GAP-LAB-CUHK-SZ/REC-MV
=========================================

Found 1 times
vutils.make_grid(img, padding=0, nrow=1, normalize=True, scale_each=True)
https://github.com/GAP-LAB-CUHK-SZ/REC-MV/blob/5898020efc3a7b9fb50c255a59ee638e3b9676e7/utils/common_utils.py#L270

==================================
https://github.com/lly00412/SEDNet
==================================

Found 1 times
vutils.make_grid(value, padding=0, nrow=1, normalize=True, scale_each=True)
https://github.com/lly00412/SEDNet/blob/504b71438f0b8e6e0f2483dfb63d31e36eb600d8/utils/experiment.py#L87

================================
https://github.com/mikacuy/scade
================================

Found 32 times
torchvision.utils.make_grid(images_train["rgbs"], nrow=1)
torchvision.utils.make_grid(images_train["target_rgbs"], nrow=1)
torchvision.utils.make_grid(images_train["depths"], nrow=1)
torchvision.utils.make_grid(images_train["target_depths"], nrow=1)
torchvision.utils.make_grid(images_val["rgbs"], nrow=1)
torchvision.utils.make_grid(images_val["rgbs0"], nrow=1)
torchvision.utils.make_grid(images_val["target_rgbs"], nrow=1)
torchvision.utils.make_grid(images_val["depths"], nrow=1)
torchvision.utils.make_grid(images_val["depths0"], nrow=1)
torchvision.utils.make_grid(images_val["target_depths"], nrow=1)
torchvision.utils.make_grid(images_val["rgbs"], nrow=1)
torchvision.utils.make_grid(images_val["target_rgbs"], nrow=1)
torchvision.utils.make_grid(images_val["depths"], nrow=1)
torchvision.utils.make_grid(images_val["target_depths"], nrow=1)
torchvision.utils.make_grid(images_train["rgbs"], nrow=1)
torchvision.utils.make_grid(images_train["target_rgbs"], nrow=1)
torchvision.utils.make_grid(images_train["depths"], nrow=1)
torchvision.utils.make_grid(images_train["target_depths"], nrow=1)
torchvision.utils.make_grid(images_val["rgbs"], nrow=1)
torchvision.utils.make_grid(images_val["rgbs0"], nrow=1)
torchvision.utils.make_grid(images_val["target_rgbs"], nrow=1)
torchvision.utils.make_grid(images_val["depths"], nrow=1)
torchvision.utils.make_grid(images_val["depths0"], nrow=1)
torchvision.utils.make_grid(images_val["target_depths"], nrow=1)
torchvision.utils.make_grid(images_val["rgbs"], nrow=1)
torchvision.utils.make_grid(images_val["target_rgbs"], nrow=1)
torchvision.utils.make_grid(images_val["depths"], nrow=1)
torchvision.utils.make_grid(images_val["target_depths"], nrow=1)
torchvision.utils.make_grid(data, nrow=1)
torchvision.utils.make_grid(data if unnormalize is None else unnormalize['rgb'](data), nrow=1)
torchvision.utils.make_grid(unnormalized[:, :3, :, :], nrow=1)
torchvision.utils.make_grid(torch.unsqueeze(unnormalized[:, 3, :, :], 1), nrow=1)
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1045
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1046
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1047
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1048
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1063
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1064
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1065
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1066
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1067
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1068
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1071
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1072
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1073
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_scannet.py#L1074
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1073
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1074
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1075
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1076
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1091
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1092
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1093
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1094
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1095
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1096
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1099
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1100
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1101
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/run_scade_wild.py#L1102
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/train_utils/logging.py#L51
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/train_utils/logging.py#L53
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/train_utils/logging.py#L56
https://github.com/mikacuy/scade/blob/23139b164461169e32121234696df88580c3d644/train_utils/logging.py#L57

============================================
https://github.com/nihalsid/panoptic-lifting
============================================

Found 4 times
make_grid(stack, value_range=(0, 1), normalize=True, nrow=5)
save_image(stack, self.output_dir_result_images / f"{self.global_step:06d}_{batch_idx:04d}.jpg", value_range=(0, 1), nrow=5, normalize=True)
make_grid(stack, value_range=(0, 1), nrow=5, normalize=True)
make_grid(stack, value_range=(0, 1), nrow=5, normalize=True)
https://github.com/nihalsid/panoptic-lifting/blob/b8ad4f5941ed0158f365d2c19facc86fbae2061e/inference/render_panopli.py#L77
https://github.com/nihalsid/panoptic-lifting/blob/b8ad4f5941ed0158f365d2c19facc86fbae2061e/trainer/train_panopli_tensorf.py#L285
https://github.com/nihalsid/panoptic-lifting/blob/b8ad4f5941ed0158f365d2c19facc86fbae2061e/trainer/train_panopli_tensorf.py#L287
https://github.com/nihalsid/panoptic-lifting/blob/b8ad4f5941ed0158f365d2c19facc86fbae2061e/trainer/train_panopli_tensorf.py#L289

==============================================
https://github.com/redrock303/NeRFLiX_CVPR2023
==============================================

Found 8 times
torchvision.utils.save_image(hr.unsqueeze(0),\
            '{}_ins.png'.format('test'))
torchvision.utils.save_image(nbr,\
            '{}_nbr.png'.format('test'))
torchvision.utils.save_image(hr.unsqueeze(0),\
            '{}_ins.png'.format('test'))
torchvision.utils.save_image(nbr,\
            '{}_nbr.png'.format('test'))
torchvision.utils.save_image(hr.unsqueeze(0),\
            '{}_ins.png'.format('test'))
torchvision.utils.save_image(nbr,\
            '{}_nbr.png'.format('test'))
make_grid(tensor, nrow=int(math.sqrt(n_img)), padding=0, normalize=False)
make_grid(tensor, nrow=int(math.sqrt(n_img)), padding=0, normalize=False)
https://github.com/redrock303/NeRFLiX_CVPR2023/blob/5065c39fc566f71cd305ba21ed18f8641ba16eaf/train/dataset/llff_t.py#L191
https://github.com/redrock303/NeRFLiX_CVPR2023/blob/5065c39fc566f71cd305ba21ed18f8641ba16eaf/train/dataset/llff_t.py#L197
https://github.com/redrock303/NeRFLiX_CVPR2023/blob/5065c39fc566f71cd305ba21ed18f8641ba16eaf/train/dataset/mix_dataset.py#L43
https://github.com/redrock303/NeRFLiX_CVPR2023/blob/5065c39fc566f71cd305ba21ed18f8641ba16eaf/train/dataset/mix_dataset.py#L49
https://github.com/redrock303/NeRFLiX_CVPR2023/blob/5065c39fc566f71cd305ba21ed18f8641ba16eaf/train/dataset/vimeo_7f.py#L180
https://github.com/redrock303/NeRFLiX_CVPR2023/blob/5065c39fc566f71cd305ba21ed18f8641ba16eaf/train/dataset/vimeo_7f.py#L186
https://github.com/redrock303/NeRFLiX_CVPR2023/blob/5065c39fc566f71cd305ba21ed18f8641ba16eaf/train/utils/common.py#L60
https://github.com/redrock303/NeRFLiX_CVPR2023/blob/5065c39fc566f71cd305ba21ed18f8641ba16eaf/utils/common.py#L60

============================================
https://github.com/sen-mao/3di2i-translation
============================================

Found 4 times
save_image(torch.cat([target_image, synth_image], -1).clamp(0,1), f"{outdir}/{i}.png")
save_image(torch.cat([initial_image, img_gen], -1).clamp(-1,1), f"{outdir}/{i}.png", normalize=True, range=(-1, 1))
utils.save_image(
                    sample,
                    f"{outdir}/sample/{str(i).zfill(6)}.png",
                    nrow=int(batch),
                    normalize=True,
                    range=(-1, 1),
                )
utils.save_image(
                    sample,
                    f"{outdir}/sample/{str(i).zfill(6)}.png",
                    nrow=int(batch),
                    normalize=True,
                    range=(-1, 1),
                )
https://github.com/sen-mao/3di2i-translation/blob/bb870e2215b5a56c94a2cec679c32d62ae90961e/apps/inversion.py#L185
https://github.com/sen-mao/3di2i-translation/blob/bb870e2215b5a56c94a2cec679c32d62ae90961e/apps/text_guide.py#L134
https://github.com/sen-mao/3di2i-translation/blob/bb870e2215b5a56c94a2cec679c32d62ae90961e/apps/train_encoder.py#L243
https://github.com/sen-mao/3di2i-translation/blob/bb870e2215b5a56c94a2cec679c32d62ae90961e/apps/train_encoder_resnet.py#L231

======================================
https://github.com/elliottwu/MagicPony
======================================

Found 1 times
tvutils.make_grid(tensor, nrow=nrow, normalize=False)
https://github.com/elliottwu/MagicPony/blob/7ffc68ec1311bee27aeacff9a301415ce9f236e8/magicpony/utils/misc.py#L221

=============================================
https://github.com/zzyunzhi/object-intrinsics
=============================================

Found 4 times
torchvision.utils.make_grid(tensor, nrow=nrow_this, pad_value=pad_value,
                                                 padding=padding)
make_grid(t, **kwargs)
make_grid(v)
make_grid(v)
https://github.com/zzyunzhi/object-intrinsics/blob/24d6016079c9c8f49128fa80c409bf8153cbe8aa/tu/loggers/utils.py#L103
https://github.com/zzyunzhi/object-intrinsics/blob/24d6016079c9c8f49128fa80c409bf8153cbe8aa/tu/utils/visualize.py#L11
https://github.com/zzyunzhi/object-intrinsics/blob/24d6016079c9c8f49128fa80c409bf8153cbe8aa/tu/utils/visualize.py#L25
https://github.com/zzyunzhi/object-intrinsics/blob/24d6016079c9c8f49128fa80c409bf8153cbe8aa/tu/utils/visualize.py#L37

===========================================
https://github.com/zxhuang1698/ShapeClipper
===========================================

Found 2 times
torchvision.utils.make_grid(images[:, :3], nrow=num_W, pad_value=1.)
torchvision.utils.make_grid(images[:, 3:], nrow=num_W, pad_value=1.)
https://github.com/zxhuang1698/ShapeClipper/blob/45649edcc1205294e0c8d6ef40d297236c37daa9/utils/util_vis.py#L28
https://github.com/zxhuang1698/ShapeClipper/blob/45649edcc1205294e0c8d6ef40d297236c37daa9/utils/util_vis.py#L30

==================================
https://github.com/HanzhiC/TexPose
==================================

Found 1 times
torchvision.utils.make_grid(images, nrow=num_W, pad_value=1.)
https://github.com/HanzhiC/TexPose/blob/c3be8b7744bd0484308a2d7624a0f97fa37d7b52/util_vis.py#L41

=========================================
https://github.com/Brummi/BehindTheScenes
=========================================

Found 16 times
make_grid(images, nrow=nrow)
make_grid(recon_imgs, nrow=nrow)
make_grid(d, nrow=nrow)
make_grid(depth_profile, nrow=nrow)
make_grid(ray_entropy, nrow=nrow)
make_grid(alpha_sum, nrow=nrow)
make_grid(recon_mse, nrow=nrow)
make_grid(invalids, nrow=nrow)
make_grid(images, nrow=nrow)
make_grid(recon_imgs, nrow=nrow)
make_grid(d, nrow=nrow)
make_grid(depth_profile, nrow=nrow)
make_grid(ray_entropy, nrow=nrow)
make_grid(alpha_sum, nrow=nrow)
make_grid(recon_mse, nrow=nrow)
make_grid(invalids, nrow=nrow)
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer.py#L489
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer.py#L490
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer.py#L491
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer.py#L492
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer.py#L493
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer.py#L494
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer.py#L495
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer.py#L496
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer_overfit.py#L191
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer_overfit.py#L192
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer_overfit.py#L193
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer_overfit.py#L194
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer_overfit.py#L195
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer_overfit.py#L196
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer_overfit.py#L197
https://github.com/Brummi/BehindTheScenes/blob/db2574581e790ba356e907d3a47ea9370cb31d84/models/bts/trainer_overfit.py#L198

==========================================
https://github.com/NIRVANALAN/CVPR23-E3DGE
==========================================

Found 18 times
utils.save_image(
                    images_for_vis[0:4],
                    os.path.join(self.results_dst_dir, self.mode,
                                 f"images/{str(self._iter).zfill(7)}.jpg"),
                    nrow=images_for_vis[0:4].shape[-1] // 256,
                    normalize=True,
                    value_range=(-1, 1),
                )
utils.save_image(
                            render_out['images_for_vis'][i],
                            pred_img_save_path,
                            nrow=1,
                            normalize=True,
                            value_range=(-1, 1),
                        )
utils.save_image(
                            pred_imgs[i],
                            pred_img_save_path,
                            nrow=1,
                            normalize=True,
                            value_range=(-1, 1),
                        )
utils.save_image(
                            thumb_pred_gt_samples,
                            os.path.join(str(val_imgsave_root_dir),
                                         f"{idx}_thumb_pred_gt.jpg"),
                            nrow=thumb_pred_gt_samples.shape[0],
                            normalize=True,
                            value_range=(-1, 1),
                        )
utils.save_image(
                        pred_gt_samples,
                        os.path.join(str(val_imgsave_root_dir),
                                     f"{idx}_pred_gt.jpg"),
                        nrow=pred_gt_samples.shape[0],
                        normalize=True,
                        value_range=(-1, 1),
                    )
utils.save_image(
                    output_frame,
                    Path(video_dst_dir) / f'{j}.png',
                    # Path(video_dst_dir) / f'{j}.jpg',
                    nrow=1,
                    normalize=True,
                    value_range=(-1, 1),
                )
utils.save_image(
                que_render_ref_out['que_img_for_vis'],
                Path(video_dst_dir) / f'{j}images_for_vis.jpg',
                nrow=1,
                normalize=True,
                value_range=(-1, 1),
            )
utils.save_image(
                    output_frame,
                    video_dst_dir_Path / f'{j}.png',
                    nrow=1,
                    normalize=True,
                    value_range=(-1, 1),
                )
utils.save_image(
                    images_for_vis[0:4],
                    os.path.join(
                        self.results_dst_dir,
                        self.mode,
                        #  f"images/{str(iter_idx).zfill(7)}.png"),
                        f"images/{str(iter_idx).zfill(7)}.jpg"),
                    nrow=images_for_vis[0:4].shape[-1] // 256,
                    normalize=True,
                    value_range=(-1, 1),
                )
utils.save_image(
                output_frame,
                Path(video_dst_dir) / f'{j}.png',
                nrow=1,
                normalize=True,
                value_range=(-1, 1),
            )
utils.save_image(
                que_render_ref_out['que_img_for_vis'],
                # Path(video_dst_dir) / f'{j}images_for_vis.png',
                Path(video_dst_dir) / f'{j}_images_for_vis.jpg',
                nrow=1,
                normalize=True,
                value_range=(-1, 1),
            )
utils.save_image(torch.cat([
                            self.pool_256(prediction)
                            for prediction in predictions
                        ] + [self.pool_256(gt_img)], -1),
                                         img_save_path,
                                         nrow=1,
                                         normalize=True,
                                         value_range=(-1, 1))
utils.save_image(self.pool_256(predictions[0]),
                                 Path(self.opt.results_dst_dir) /
                                 'projection' / img_name,
                                 nrow=1,
                                 normalize=True,
                                 value_range=(-1, 1))
utils.save_image(torch.cat(
                    [self.pool_256(prediction)
                     for prediction in predictions] + [self.pool_256(gt_img)],
                    -1),
                                 Path(self.opt.results_dst_dir) /
                                 'projection' / img_name,
                                 nrow=1,
                                 normalize=True,
                                 value_range=(-1, 1))
utils.save_image(torch.cat([
                            self.pool_256(prediction)
                            for prediction in predictions
                        ] + [self.pool_256(input_imgs)], -1),
                                         img_save_path,
                                         nrow=1,
                                         normalize=True,
                                         value_range=(-1, 1))
utils.save_image(self.pool_256(predictions[0]),
                                 Path(self.opt.results_dst_dir) /
                                 'pti_projection' / img_name,
                                 nrow=1,
                                 normalize=True,
                                 value_range=(-1, 1))
utils.save_image(torch.cat(
                    [self.pool_256(prediction) for prediction in predictions] +
                    [self.pool_256(input_imgs)], -1),
                                 Path(self.opt.results_dst_dir) /
                                 'pti_projection' / img_name,
                                 nrow=1,
                                 normalize=True,
                                 value_range=(-1, 1))
torchvision.utils.make_grid(
            F.interpolate(visdict[key], [new_h, new_w]).detach().cpu())
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/trainer.py#L232
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/trainer.py#L504
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/trainer.py#L515
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/trainer.py#L525
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/trainer.py#L534
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/trainer.py#L2740
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/trainer.py#L2748
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/trainer.py#L2927
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/E3DGE/e3dge_2dalignonly_runner.py#L503
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/E3DGE/e3dge_full_runner.py#L404
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/E3DGE/e3dge_full_runner.py#L412
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/Inversions/projectors.py#L248
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/Inversions/projectors.py#L277
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/Inversions/projectors.py#L284
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/Inversions/projectors.py#L657
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/Inversions/projectors.py#L683
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/trainers/Inversions/projectors.py#L691
https://github.com/NIRVANALAN/CVPR23-E3DGE/blob/7666d5bb05ed9a6ff43000c43ffb5dca8305871d/project/utils/deca_util.py#L776

======================================
https://github.com/YuYin1/NeRFInvertor
======================================

Found 8 times
save_image(gen_imgs_list[2], os.path.join(opt.output_dir, "%06d_debug.png" % epoch),
                           nrow=1, normalize=True, value_range=(-1, 1))
save_image(gen_imgs_list[0], os.path.join(opt.output_dir, "%06d_debug_reg0.png" % epoch),
                           nrow=1, normalize=True, value_range=(-1, 1))
save_image(gen_imgs_list[1], os.path.join(opt.output_dir, "%06d_debug_reg1.png" % epoch),
                           nrow=1, normalize=True, value_range=(-1, 1))
save_image(img.detach().cpu(), os.path.join(output_dir, 'input.png'), normalize=True, range=(-1, 1))
save_image(out_img, os.path.join(output_dir, 'init.png'), normalize=True, range=(-1, 1))
save_image(out_img, os.path.join(output_dir, '%05d_%s.png'%(i, opt.suffix)), normalize=True, range=(-1, 1))
save_image(out_img, os.path.join(output_dir, '%05d_%s.png' %(i, opt.suffix)), normalize=True, range=(-1, 1))
save_image(tensor_img, os.path.join(cnt_output_dir, f"{target_name}_{frame_idx}_.png"), normalize=True,range=(-1,1))
https://github.com/YuYin1/NeRFInvertor/blob/1006dce92f1749373bdc26052e0b5d2662663315/finetune_loop.py#L476
https://github.com/YuYin1/NeRFInvertor/blob/1006dce92f1749373bdc26052e0b5d2662663315/finetune_loop.py#L478
https://github.com/YuYin1/NeRFInvertor/blob/1006dce92f1749373bdc26052e0b5d2662663315/finetune_loop.py#L480
https://github.com/YuYin1/NeRFInvertor/blob/1006dce92f1749373bdc26052e0b5d2662663315/optimization.py#L234
https://github.com/YuYin1/NeRFInvertor/blob/1006dce92f1749373bdc26052e0b5d2662663315/optimization.py#L349
https://github.com/YuYin1/NeRFInvertor/blob/1006dce92f1749373bdc26052e0b5d2662663315/optimization.py#L368
https://github.com/YuYin1/NeRFInvertor/blob/1006dce92f1749373bdc26052e0b5d2662663315/optimization.py#L374
https://github.com/YuYin1/NeRFInvertor/blob/1006dce92f1749373bdc26052e0b5d2662663315/rendering_using_finetuned_model.py#L365

=====================================
https://github.com/jiaxinxie97/HFGI3D
=====================================

Found 5 times
torchvision.utils.save_image(couple_output, os.path.join(out_path_results, f"{im_path}.jpg"),
                                         normalize=True, range=(-1, 1))
torchvision.utils.save_image(result_batch[0][i], os.path.join(out_path_results, f"{im_path}.jpg"),
                                         normalize=True, range=(-1, 1))
torchvision.utils.save_image(torch.cat([x.detach().cpu(), x_hat.detach().cpu()]), path,
									 normalize=True, scale_each=True, range=(-1, 1), nrow=self.opts.batch_size)
torchvision.utils.save_image(img_gen,
                                         f"/disk2/danielroich/Sandbox/StyleCLIP/results/inference_results/{str(i).zfill(5)}.png",
                                         normalize=True, range=(-1, 1))
torchvision.utils.save_image(result_image.detach().cpu(), os.path.join(args.results_dir, "final_result.jpg"),
                                 normalize=True, scale_each=True, range=(-1, 1))
https://github.com/jiaxinxie97/HFGI3D/blob/139d0c67046ee4fd3a41edd6320646c8c6b0b287/inversion/models/StyleCLIP/mapper/scripts/inference.py#L63
https://github.com/jiaxinxie97/HFGI3D/blob/139d0c67046ee4fd3a41edd6320646c8c6b0b287/inversion/models/StyleCLIP/mapper/scripts/inference.py#L66
https://github.com/jiaxinxie97/HFGI3D/blob/139d0c67046ee4fd3a41edd6320646c8c6b0b287/inversion/models/StyleCLIP/mapper/training/coach.py#L234
https://github.com/jiaxinxie97/HFGI3D/blob/139d0c67046ee4fd3a41edd6320646c8c6b0b287/inversion/models/StyleCLIP/optimization/run_optimization.py#L83
https://github.com/jiaxinxie97/HFGI3D/blob/139d0c67046ee4fd3a41edd6320646c8c6b0b287/inversion/models/StyleCLIP/optimization/run_optimization.py#L127

================================
https://github.com/pals-ttic/sjc
================================

Found 11 times
vutils.make_grid(imgs, padding=2, nrow=4)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(stacked, nrow=2)
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/run_img_sampling.py#L226
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/main.py#L353
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/main.py#L366
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/ldm/models/diffusion/ddpm_original.py#L374
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/ldm/models/diffusion/ddpm_original.py#L539
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/ldm/models/diffusion/ddpm_original.py#L1297
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/ldm/models/diffusion/ddpm_textual_inversion.py#L379
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/ldm/models/diffusion/ddpm_textual_inversion.py#L577
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/ldm/models/diffusion/ddpm_textual_inversion.py#L1344
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/sd1/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/pals-ttic/sjc/blob/509138aba24a1ae1e9683ca1dc6fb119d9848c97/voxnerf/vis.py#L87

===================================
https://github.com/jyunlee/Im2Hands
===================================

Found 3 times
save_image(data, out_file, nrow=4)
save_image(img.cpu(), input_img_path, nrow=4)
save_image(data, out_file, nrow=4)
https://github.com/jyunlee/Im2Hands/blob/656c449d2be3919a309bfbaa7b942e798e6fd021/artihand/utils/visualize.py#L22
https://github.com/jyunlee/Im2Hands/blob/656c449d2be3919a309bfbaa7b942e798e6fd021/im2mesh/pix2mesh/training.py#L290
https://github.com/jyunlee/Im2Hands/blob/656c449d2be3919a309bfbaa7b942e798e6fd021/im2mesh/utils/visualize.py#L19

====================================
https://github.com/SangHunHan92/2K2K
====================================

Found 103 times
torchvision.utils.make_grid (image[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (mask[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_depth_mask[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_down_depth_mask[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_down_depth_mask[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_depth_mask[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (occupancy[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_face_normal_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_upper_normal_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_arm_normal_front[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_leg_normal_front[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_shoe_normal_front[0:im_num*2, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_down_normal_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_face_normal_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_upper_normal_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_arm_normal_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_leg_normal_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_shoe_normal_back[0:im_num*2, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_down_normal_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_normal_front[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (pred_normal_back[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (target_face_normal_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_upper_normal_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_arm_normal_front[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_leg_normal_front[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_shoe_normal_front[0:im_num*2, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_down_normal_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_face_normal_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_upper_normal_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_arm_normal_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_leg_normal_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_shoe_normal_back[0:im_num*2, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_down_normal_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_normal_front[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (target_normal_back[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (target_1_normal_front[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (target_1_normal_back[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (target_2_normal_front[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (target_2_normal_back[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (pred_face_depth_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_upper_depth_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_arm_depth_front[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_leg_depth_front[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_shoe_depth_front[0:im_num*2, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_down_depth_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_face_depth_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_upper_depth_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_arm_depth_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_leg_depth_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_shoe_depth_back[0:im_num*2, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_down_depth_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_down_depth_mask[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_depth_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_depth_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_depth_mask[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_1_depth_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_1_depth_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_2_depth_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_2_depth_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_face_depth_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_upper_depth_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_arm_depth_front[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_leg_depth_front[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_shoe_depth_front[0:im_num*2, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_down_depth_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_face_depth_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_upper_depth_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_arm_depth_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_leg_depth_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_shoe_depth_back[0:im_num*2, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_down_depth_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_depth_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_depth_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_1_depth_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_1_depth_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_2_depth_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_2_depth_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (con_face_normal_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (con_upper_normal_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (con_arm_normal_front[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (con_leg_normal_front[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (con_down_normal_front[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (con_face_normal_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (con_upper_normal_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (con_arm_normal_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (con_leg_normal_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (con_down_normal_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (con_normal_front[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (con_normal_back[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (con_1_normal_front[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (con_1_normal_back[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (con_2_normal_front[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (con_2_normal_back[0:im_num, :, :, :], normalize=False, scale_each=True)
torchvision.utils.make_grid (target_face_image_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_face_image_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_upper_image_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_upper_image_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_arm_image_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_arm_image_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_leg_image_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_leg_image_back[0:im_num*4, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (target_down_image_back[0:im_num, :, :, :], normalize=True, scale_each=True)
torchvision.utils.make_grid (pred_down_image_back[0:im_num, :, :, :], normalize=True, scale_each=True)
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L263
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L277
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L283
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L289
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L295
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L301
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L307
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L313
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L318
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L323
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L328
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L338
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L343
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L349
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L354
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L359
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L364
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L374
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L379
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L384
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L389
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L396
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L401
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L406
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L411
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L421
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L426
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L432
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L437
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L442
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L447
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L457
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L462
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L468
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L473
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L478
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L483
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L488
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L493
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L499
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L504
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L509
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L514
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L519
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L524
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L530
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L535
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L540
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L545
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L550
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L555
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L560
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L566
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L571
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L576
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L581
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L586
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L591
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L596
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L603
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L608
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L613
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L618
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L623
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L628
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L634
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L639
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L644
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L649
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L654
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L659
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L665
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L670
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L675
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L680
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L685
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L690
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L697
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L702
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L707
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L712
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L717
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L722
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L727
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L732
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L737
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L742
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L747
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L752
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L757
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L762
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L767
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L772
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L778
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L784
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L792
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L798
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L806
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L812
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L820
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L826
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L834
https://github.com/SangHunHan92/2K2K/blob/5a266224ab34d2953cb25a0a6497183d2b829180/utils/train_utils.py#L840

===========================================
https://github.com/ziquanliu/CVPR2023-TWINS
===========================================

Found 8 times
make_grid(inp[:15, ...])
make_grid(final_inp[:15, ...])
make_grid(inp[:15, ...])
make_grid(final_inp[:15, ...])
make_grid(inp[:15, ...])
make_grid(final_inp[:15, ...])
make_grid(inp[:15, ...])
make_grid(final_inp[:15, ...])
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_cifar/robustness/train.py#L491
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_cifar/robustness/train.py#L492
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/robustness/train.py#L491
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/AT_high_res_data/robustness/train.py#L492
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_cifar/robustness/train.py#L491
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_cifar/robustness/train.py#L492
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/robustness/train.py#L491
https://github.com/ziquanliu/CVPR2023-TWINS/blob/dda01946a84a6d4284a87ccbf7070f04ef1da16a/TWINS_high_res_data/robustness/train.py#L492

================================
https://github.com/tokaka22/GMAA
================================

Found 7 times
save_image(torch.cat([self.denorm(self.x_real), self.denorm(x_fake), self.denorm(x_pre_detect)]), self.current_e_train_vis_path +
                   '/{}_0real&fake&pre_.png'.format(self.local_step), nrow=6)
save_image(torch.cat([F.pad(self.denorm(x_pre_eye), self.pad_dict['eye']), F.pad(self.denorm(x_pre_nose), self.pad_dict['nose']), F.pad(self.denorm(x_pre_mouth), self.pad_dict['mouth'])]), self.current_e_train_vis_path +
                   '/{}_1eye&nose&mouth_.png'.format(self.local_step), nrow=12)
save_image(self.denorm(self.x_trg), self.current_e_train_vis_path +
            '/trg_.png', nrow=6)
save_image(torch.cat([self.denorm(self.x_real), self.denorm(x_fake)]), self.current_e_val_vis_path +
                   '/{}_0real&fake&.png'.format(batch_idx))
save_image(self.denorm(x_fake), self.current_test_vis_path +
                   '/{}.png'.format(key.replace('.jpg', '')))
save_image(torch.cat([self.denorm(self.x_real), self.denorm(x_fake), self.denorm(x_pre_detect)]), self.current_e_train_vis_path +
                   '/{}_0real&fake&pre_.png'.format(self.local_step), nrow=6)
save_image(torch.cat([F.pad(self.denorm(x_pre_eye), self.pad_dict['eye']), F.pad(self.denorm(x_pre_nose), self.pad_dict['nose']), F.pad(self.denorm(x_pre_mouth), self.pad_dict['mouth'])]), self.current_e_train_vis_path +
                   '/{}_1eye&nose&mouth_.png'.format(self.local_step), nrow=12)
https://github.com/tokaka22/GMAA/blob/c34cef86da79aa392cb0fa8e88b1b1a5557f79c6/src/models/gmaa/gmaa_eval_module.py#L486
https://github.com/tokaka22/GMAA/blob/c34cef86da79aa392cb0fa8e88b1b1a5557f79c6/src/models/gmaa/gmaa_eval_module.py#L488
https://github.com/tokaka22/GMAA/blob/c34cef86da79aa392cb0fa8e88b1b1a5557f79c6/src/models/gmaa/gmaa_eval_module.py#L541
https://github.com/tokaka22/GMAA/blob/c34cef86da79aa392cb0fa8e88b1b1a5557f79c6/src/models/gmaa/gmaa_eval_module.py#L606
https://github.com/tokaka22/GMAA/blob/c34cef86da79aa392cb0fa8e88b1b1a5557f79c6/src/models/gmaa/gmaa_eval_module.py#L655
https://github.com/tokaka22/GMAA/blob/c34cef86da79aa392cb0fa8e88b1b1a5557f79c6/src/models/gmaa/gmaa_module.py#L511
https://github.com/tokaka22/GMAA/blob/c34cef86da79aa392cb0fa8e88b1b1a5557f79c6/src/models/gmaa/gmaa_module.py#L513

=========================================
https://github.com/chenweixin107/TrojDiff
=========================================

Found 19 times
tvu.save_image(
                        x[i], os.path.join(self.args.image_folder, f"{img_id}.png")
                    )
tvu.save_image(
                    x[i][j], os.path.join(self.args.image_folder, f"{j}_{i}.png")
                )
tvu.save_image(x[i], os.path.join(self.args.image_folder, f"{i}.png"))
tvu.save_image(
                        x[i], os.path.join(image_folder, f"{img_id}.png")
                    )
tvu.save_image(
                        x[i], os.path.join(image_folder, f"{img_id}.png")
                    )
tvu.save_image(x[1:, i], os.path.join('/home/username/ddim/images/original', f"img{i}_process.png"),
                           nrow=25)
tvu.save_image(
                    x[j, i], os.path.join('/home/username/ddim/images/original', f"img{i}_timestep{j}.png")
                    # [3,32,32]
                )
tvu.save_image(x[1:, i], os.path.join('/home/username/ddim/images/d2din', f"img{i}_process.png"),
                           nrow=50)
tvu.save_image(x[i], os.path.join(self.args.image_folder, f"{i}.png"))
tvu.make_grid(img, nrow=8, padding=2, pad_value=0, normalize=False, range=None, scale_each=False)
tvu.save_image(
                        x[i], os.path.join(image_folder, f"{img_id}.png")
                    )
tvu.save_image(
                    x[i][j], os.path.join(self.args.image_folder, f"{j}_{i}.png")
                )
tvu.save_image(x[1:,i], os.path.join('/home/username/ddim/images/d2dout', f"img{i}_process.png"), nrow=50)
tvu.save_image(x[i], os.path.join(self.args.image_folder, f"{i}.png"))
tvu.save_image(
                        x[i], os.path.join(image_folder, f"{img_id}.png")
                    )
tvu.save_image(
                        x[i], os.path.join(image_folder, f"{img_id}.png")
                    )
tvu.save_image(
                    x[i][j], os.path.join(self.args.image_folder, f"{j}_{i}.png")
                )
tvu.save_image(x[1:,i], os.path.join('/home/username/ddim/images/d2i', f"img{i}_process.png"), nrow=50)
tvu.save_image(x[i], os.path.join(self.args.image_folder, f"{i}.png"))
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion.py#L269
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion.py#L293
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion.py#L335
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack.py#L334
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack.py#L383
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack.py#L409
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack.py#L412
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack.py#L445
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack.py#L490
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2dout.py#L29
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2dout.py#L378
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2dout.py#L449
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2dout.py#L481
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2dout.py#L525
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2i.py#L353
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2i.py#L400
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2i.py#L424
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2i.py#L456
https://github.com/chenweixin107/TrojDiff/blob/680e7f18e3e12bea3adac6d560ac6f8eb8a39205/runners/diffusion_attack_d2i.py#L500

================================
https://github.com/luluppang/BCU
================================

Found 4 times
torchvision.utils.save_image(images, file_path, normalize=True, pad_value=1)
torchvision.utils.save_image(masks1, path_masks, pad_value=1)
torchvision.utils.save_image(inputs_bd, path, normalize=True)
torchvision.utils.make_grid(batch_img, normalize=True)
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/inputaware_attack.py#L541
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/inputaware_attack.py#L734
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/wanet_attack.py#L444
https://github.com/luluppang/BCU/blob/68549f37e2819fbf8a92b3e09fdd5538c401f9a8/attack/wanet_attack.py#L452

===================================
https://github.com/IBM/BadDiffusion
===================================

Found 8 times
make_grid(images)
make_grid(init_images)
make_grid(images, rows=4, cols=4)
make_grid(init_images, rows=4, cols=4)
save_image(normalize_img, file_name)
make_grid(sample, nrow=nrow)
save_image(sample_grid, self.__get_file_path(file_name), nrow=8)
save_image(sample_grid, self.__get_file_path(file_name), nrow=8)
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/anp_util.py#L193
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/anp_util.py#L194
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/baddiffusion.py#L388
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/baddiffusion.py#L389
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/dataset.py#L338
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/util.py#L215
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/util.py#L252
https://github.com/IBM/BadDiffusion/blob/68f1cce8024bdb76564c121ad03dbe8cfcb50b55/util.py#L263

=======================================
https://github.com/CHELSEA234/HiFi_IFDL
=======================================

Found 2 times
make_grid(fig_viz, nrow=mask_viz.shape[0])
make_grid(fig_viz, nrow=pred_mask_32.shape[0])
https://github.com/CHELSEA234/HiFi_IFDL/blob/079fe906c34c2bf7b2a3b494142f2d09ea21908f/utils/utils.py#L224
https://github.com/CHELSEA234/HiFi_IFDL/blob/079fe906c34c2bf7b2a3b494142f2d09ea21908f/utils/utils.py#L258

===============================
https://github.com/uhiu/StyLess
===============================

Found 1 times
torchvision.utils.save_image(unnorm(adv[i]), save_f)
https://github.com/uhiu/StyLess/blob/c64415343f73620a1b599f878566e9b340ef77ba/styless_attack.py#L225

=================================
https://github.com/dreamflake/CFM
=================================

Found 2 times
make_grid(inp[:15, ...])
make_grid(final_inp[:15, ...])
https://github.com/dreamflake/CFM/blob/a402db042d997d9f32b9a3967b58fe2b386f1b2d/MadryLab/train.py#L491
https://github.com/dreamflake/CFM/blob/a402db042d997d9f32b9a3967b58fe2b386f1b2d/MadryLab/train.py#L492

===============================================================
https://github.com/vinusankars/Convolution-based-Unlearnability
===============================================================

Found 1 times
torchvision.utils.make_grid(torch.stack(img_grid), nrow=10, pad_value=255)
https://github.com/vinusankars/Convolution-based-Unlearnability/blob/ff58b1c8d3a1a6013ca07a060e29d7f6a5276f21/final_filter_unlearnable.py#L217

===================================
https://github.com/ShiqiYu/OpenGait
===================================

Found 1 times
vutils.make_grid(
                v, normalize=True, scale_each=True)
https://github.com/ShiqiYu/OpenGait/blob/b672613f630bdc4313fabbe64de5cfa75f003ea6/opengait/utils/msg_manager.py#L70

====================================
https://github.com/mk-minchul/dcface
====================================

Found 16 times
torchvision.utils.make_grid(torch.tensor(images.transpose(0, 3, 1, 2)),
                                               nrow=self.num_custom1_visual_images_per_subject)
torchvision.utils.make_grid(torch.tensor(images.transpose(0, 3, 1, 2)),
                                               nrow=self.num_custom1_visual_images_per_subject)
make_grid(diffusion_row, nrow=diffusion_row.shape[0])
torchvision.utils.make_grid(torch.tensor(pred_images.transpose(0, 3, 1, 2)), nrow=8)
torchvision.utils.make_grid(interms, nrow=10)
torchvision.utils.make_grid(sub_orig_images * 0.5 + 0.5, nrow=num_img_per_subject)
torchvision.utils.make_grid(sub_extra_image * 0.5 + 0.5, nrow=num_img_per_subject)
torchvision.utils.make_grid(torch.tensor(sub_pred_images.transpose(0, 3, 1, 2)), nrow=num_img_per_subject)
torchvision.utils.make_grid(torch.tensor(pred_images.transpose(0, 3, 1, 2)), nrow=8)
torchvision.utils.make_grid(interms, nrow=10)
torchvision.utils.make_grid(sub_orig_images * 0.5 + 0.5, nrow=num_img_per_subject)
torchvision.utils.make_grid(sub_extra_image * 0.5 + 0.5, nrow=num_img_per_subject)
torchvision.utils.make_grid(torch.tensor(sub_pred_images.transpose(0, 3, 1, 2)), nrow=num_img_per_subject)
torchvision.utils.make_grid(torch.tensor(pred_images.transpose(0, 3, 1, 2)), nrow=8)
torchvision.utils.make_grid(torch.tensor(pred_images.transpose(0, 3, 1, 2)), nrow=8)
utils.save_image(
                sample[i].unsqueeze(0),
                out_path,
                nrow=1,
                normalize=True,
                range=(-1, 1),
            )
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/callbacks/image_logger.py#L83
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/callbacks/image_logger.py#L91
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L27
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L66
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L72
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L86
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L91
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L96
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L126
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L132
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L142
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L148
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L156
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L215
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/src/visualizations/train_visualization.py#L239
https://github.com/mk-minchul/dcface/blob/1d2c523b3fd5f6f4360d0d2c51e5c7c96393457a/dcface/stage1/unconditional_generation/unconditional_sampling.py#L78

=======================================================
https://github.com/koushiksrivats/face_attribute_attack
=======================================================

Found 12 times
torchvision.utils.save_image((img+1)/2, save_path+f'z_{i}_{str(prmpt)}.png')
torchvision.utils.save_image(img_gen,  os.path.join(log_path, 'one_vs_many', 'step_wise_updates', str(ind), f"{str(i).zfill(5)}.jpg"), normalize=True, range=(0, 1))
torchvision.utils.save_image(img_gen, os.path.join(log_path, 'one_vs_many', whitebox_classifier_name, f'final_{ind}_{prmpt_str}.png'), normalize=True, range=(0,1))
torchvision.utils.save_image(img_gen,  os.path.join(log_path, 'ensemble', 'step_wise_updates', str(ind), f"{str(i).zfill(5)}.jpg"), normalize=True, range=(0, 1))
torchvision.utils.save_image(img_gen, os.path.join(log_path, 'ensemble', folder_name, f'final_{ind}_{prmpt_str}.png'), normalize=True, range=(0,1))
torchvision.utils.save_image(img_gen,  os.path.join(log_path, 'meta', 'step_wise_updates', str(ind), f"{str(i).zfill(5)}.jpg"), normalize=True, range=(0, 1))
torchvision.utils.save_image(final_img_gen, os.path.join(log_path, 'meta', folder_name, f'final_{ind}_{prmpt_str}.png'), normalize=True, range=(0,1))
torchvision.utils.save_image(source_img_gen,  os.path.join(log_path, wb_model_name, "source_image.jpg"), normalize=True, range=(0, 1))
torchvision.utils.save_image(img_gen,  os.path.join(log_path, wb_model_name, 'step_wise_updates', f"{str(i).zfill(5)}.jpg"), normalize=True, range=(0, 1))
torchvision.utils.save_image(img_gen, os.path.join(log_path, wb_model_name, f'final_{mod_level}_adv_image.png'), normalize=True, range=(0,1))
torchvision.utils.save_image(img_gen,  os.path.join(log_path, wb_model_name, 'step_wise_updates', f"{str(i).zfill(5)}.jpg"), normalize=True, range=(0, 1))
torchvision.utils.save_image(img_gen, os.path.join(log_path, wb_model_name, f'final_{prmpt_str}.png'), normalize=True, range=(0,1))
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/adversarial_transferability.py#L217
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/adversarial_transferability.py#L298
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/adversarial_transferability.py#L308
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/adversarial_transferability.py#L404
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/adversarial_transferability.py#L414
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/adversarial_transferability.py#L499
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/adversarial_transferability.py#L552
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/image_as_reference.py#L210
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/image_as_reference.py#L237
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/image_as_reference.py#L255
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/text_as_reference.py#L233
https://github.com/koushiksrivats/face_attribute_attack/blob/b75b50d2b5827c1e67cfd80b13688de54eb5f124/text_as_reference.py#L245

==================================================
https://github.com/google-research/google-research
==================================================

Found 8 times
torchvision.utils.make_grid(a, **kwargs)
torchvision.utils.make_grid(a, **kwargs)
torchvision.utils.make_grid(frames[b, :, -1], nrow=5)
make_grid(torch.from_numpy(imgs).permute(0, 3, 1, 2), nrow=2)
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/dreamfields/experiments/dreamfields_nerf_glide_ddim.py#L300
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/dreamfields/experiments/diffusion_3d/visualization.py#L38
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/xirl/debug_dataset.py#L60
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/xirl/xirl/evaluators/reconstruction_visualizer.py#L82

=====================================
https://github.com/Chilie/Deblur_MCEM
=====================================

Found 1 times
torchvision.utils.make_grid(images_torch, nrow)
https://github.com/Chilie/Deblur_MCEM/blob/85b6cdf3c0ddcd075a9de1d00857cc9c5376c724/utils/common_utils.py#L61

=========================================
https://github.com/HJ-harry/DiffusionMBIR
=========================================

Found 2 times
make_grid(sample, nrow, padding=2)
save_image(image_grid, os.path.join(this_sample_dir, "sample.png"))
https://github.com/HJ-harry/DiffusionMBIR/blob/592ea29c7bc129fd9b007a88fd4dcdb4e9f617a2/run_lib.py#L162
https://github.com/HJ-harry/DiffusionMBIR/blob/592ea29c7bc129fd9b007a88fd4dcdb4e9f617a2/run_lib.py#L165

=================================
https://github.com/SensorsINI/e2p
=================================

Found 5 times
utils.make_grid(imgs, nrow=3)
utils.make_grid([event_preview, events_warped], nrow=2)
utils.make_grid([events_warped, event_preview], nrow=2)
utils.make_grid(imgs, nrow=3)
utils.make_grid(imgs, nrow=4)
https://github.com/SensorsINI/e2p/blob/87fd42fbb267ee10d95c7ba46a729c750378ad1c/train/utils/training_utils.py#L15
https://github.com/SensorsINI/e2p/blob/87fd42fbb267ee10d95c7ba46a729c750378ad1c/train/utils/training_utils.py#L23
https://github.com/SensorsINI/e2p/blob/87fd42fbb267ee10d95c7ba46a729c750378ad1c/train/utils/training_utils.py#L24
https://github.com/SensorsINI/e2p/blob/87fd42fbb267ee10d95c7ba46a729c750378ad1c/train/utils/training_utils.py#L48
https://github.com/SensorsINI/e2p/blob/87fd42fbb267ee10d95c7ba46a729c750378ad1c/train/utils/training_utils.py#L116

======================================================
https://github.com/jiamingzhang94/Unlearnable-Clusters
======================================================

Found 1 times
save_image(images_adv[i], os.path.join(config['output_dir'], '..', 'ae', str(gt), f'{count[gt]}.png'))
https://github.com/jiamingzhang94/Unlearnable-Clusters/blob/bfe4d7ff389ddc874b82feb0bcd908ed922dbaf3/main.py#L199

=====================================
https://github.com/alibaba/easyrobust
=====================================

Found 50 times
torchvision.utils.save_image(out, name_path)
tv.utils.make_grid(samples, normalize=True)
save_image(output_tiled, eval_args.save + '/vae_samples.png')
torchvision.utils.save_image(img, path)
save_image(gradient, path_to_file)
save_image(heatmap, path_to_file)
save_image(heatmap_on_image, path_to_file)
save_image(activation_map, path_to_file)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
utils.make_grid(tensor, nrow=nrow, normalize=True, padding=padding)
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/attack.py#L422
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/sde.py#L89
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/LSGM/evaluate_vae.py#L100
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/utils/stylegan.py#L44
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/vis_tools/misc_functions.py#L52
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/vis_tools/misc_functions.py#L70
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/vis_tools/misc_functions.py#L73
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/vis_tools/misc_functions.py#L76
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/base_training_script.py#L762
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/resnet50.py#L730
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/SIN/main.py#L730
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/adversarial_training/main.py#L839
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/advprop/main.py#L767
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/apr/main.py#L736
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/augmix/main.py#L764
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/dat/main.py#L807
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/deepaugment/main.py#L730
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/drvit/main.py#L763
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/fan/main.py#L763
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/hat/main.py#L788
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/prime/main.py#L737
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/rvt/main.py#L763
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/shape_texture_debiased_training/main.py#L780
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/wiseft/main.py#L750
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/tools/kernal_visualization.py#L32

=========================================================
https://github.com/masora1030/CVPR2023-FDSL-on-VisualAtom
=========================================================

Found 2 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.make_grid(v, nrow, padding=1, range=range)
https://github.com/masora1030/CVPR2023-FDSL-on-VisualAtom/blob/de80c6972f99a57238633ba13b5a06a846272f30/pretrain.py#L739
https://github.com/masora1030/CVPR2023-FDSL-on-VisualAtom/blob/de80c6972f99a57238633ba13b5a06a846272f30/finetune_utils/logger.py#L47

======================================
https://github.com/pixelite1201/BEDLAM
======================================

Found 4 times
make_grid(rend_imgs, nrow=nrow)
make_grid(rend_imgs, nrow=nrow)
make_grid(rend_imgs, nrow=nrow)
make_grid(rend_imgs, nrow=nrow)
https://github.com/pixelite1201/BEDLAM/blob/ebf8bb14a43de46cc74dca4c00c13e571b325726/train/utils/renderer.py#L193
https://github.com/pixelite1201/BEDLAM/blob/ebf8bb14a43de46cc74dca4c00c13e571b325726/train/utils/renderer_cam.py#L360
https://github.com/pixelite1201/BEDLAM/blob/ebf8bb14a43de46cc74dca4c00c13e571b325726/train/utils/renderer_cam_with_gt.py#L537
https://github.com/pixelite1201/BEDLAM/blob/ebf8bb14a43de46cc74dca4c00c13e571b325726/train/utils/tenet_renderer.py#L220

=================================
https://github.com/bramtoula/vdna
=================================

Found 1 times
save_image(image, image_path)
https://github.com/bramtoula/vdna/blob/f084d557236e5f175009dd0f51928649f26e85f5/src/vdna/utils/io.py#L16

========================================
https://github.com/Vision-CAIR/MammalNet
========================================

Found 12 times
make_grid(vid, padding=8, pad_value=1.0, nrow=sz[0])
make_grid(tensor, padding=8, pad_value=1.0, nrow=nrow)
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
make_grid(vid, padding=8, pad_value=1.0, nrow=sz[0])
make_grid(tensor, padding=8, pad_value=1.0, nrow=nrow)
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
make_grid(vid, padding=8, pad_value=1.0, nrow=sz[0])
make_grid(tensor, padding=8, pad_value=1.0, nrow=nrow)
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
make_grid(vid, padding=8, pad_value=1.0, nrow=sz[0])
make_grid(tensor, padding=8, pad_value=1.0, nrow=nrow)
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/build/lib/slowfast/utils/misc.py#L285
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/build/lib/slowfast/utils/misc.py#L305
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/build/lib/slowfast/visualization/tensorboard_vis.py#L402
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/slowfast/utils/misc.py#L285
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/slowfast/utils/misc.py#L305
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/detection/slowfast/visualization/tensorboard_vis.py#L402
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/build/lib/slowfast/utils/misc.py#L285
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/build/lib/slowfast/utils/misc.py#L305
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/build/lib/slowfast/visualization/tensorboard_vis.py#L402
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/slowfast/utils/misc.py#L285
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/slowfast/utils/misc.py#L305
https://github.com/Vision-CAIR/MammalNet/blob/b44f76f89b77c09b2dc550af340cc4b854ecc9b8/recognition/slowfast/visualization/tensorboard_vis.py#L402

==============================================================
https://github.com/SHI-Labs/Neighborhood-Attention-Transformer
==============================================================

Found 1 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/SHI-Labs/Neighborhood-Attention-Transformer/blob/4a39ab664d064e17f30f0260598a0c9d6109a273/classification/train.py#L809

==================================================
https://github.com/adobe-research/domain-expansion
==================================================

Found 4 times
save_image(imgs[j], output_path.joinpath(f'{i + j}.jpg'), nrow=1, normalize=True, range=(-1, 1))
torchvision.utils.make_grid(img, batch_size)
torchvision.utils.save_image(
                frame,
                output_path.with_name(f"{i:05d}_{base_name}.jpg"),
                nrow=len(frame),
                normalize=True,
                range=(-1, 1),
            )
torchvision.utils.save_image(
            frames,
            output_path.with_suffix(".jpg"),
            nrow=nrow if nrow else len(frames),
            normalize=True,
            range=(-1, 1),
        )
https://github.com/adobe-research/domain-expansion/blob/cd1aca717ecef6520b71f12033fc495e68ac45e5/generate_mystyle.py#L33
https://github.com/adobe-research/domain-expansion/blob/cd1aca717ecef6520b71f12033fc495e68ac45e5/expansion_utils/io_utils.py#L53
https://github.com/adobe-research/domain-expansion/blob/cd1aca717ecef6520b71f12033fc495e68ac45e5/expansion_utils/io_utils.py#L100
https://github.com/adobe-research/domain-expansion/blob/cd1aca717ecef6520b71f12033fc495e68ac45e5/expansion_utils/io_utils.py#L108

============================================
https://github.com/adaptivetokensampling/ATS
============================================

Found 1 times
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
https://github.com/adaptivetokensampling/ATS/blob/21633b99eb62a17ef6793e804e455b16d19bc6cf/libs/visualization/tensorboard_vis.py#L390

=============================
https://github.com/yhlleo/MJP
=============================

Found 3 times
torchvision.utils.make_grid(img, normalize=True, scale_each=True)
torchvision.utils.save_image(torchvision.utils.make_grid(img, normalize=True, scale_each=True), os.path.join(args.output_dir, "img.png"))
vutils.save_image(results.data, 'jpwr.png', nrow=results.size(0), padding=0)
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/visualize_attention.py#L157
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/visualize_attention.py#L157
https://github.com/yhlleo/MJP/blob/7bd2915a8f5011056628684ed061a2deb834217f/data/masking_generator.py#L201

==========================================
https://github.com/snap-research/MobileR2L
==========================================

Found 2 times
torchvision.utils.make_grid(rgb_plot, nrow=2)
torchvision.utils.make_grid(target_rgb_plot, nrow=2)
https://github.com/snap-research/MobileR2L/blob/4f8929e8a1dcde14bd26565a2522e52c31c714f7/model/engine.py#L293
https://github.com/snap-research/MobileR2L/blob/4f8929e8a1dcde14bd26565a2522e52c31c714f7/model/engine.py#L297

=================================
https://github.com/boheumd/D-NeRV
=================================

Found 2 times
save_image(output_rgb[batch_idx, :, t], '{}/{}/{}'.format(visual_dir, vid_name, frame_list[t]))
save_image(output_rgb[batch_idx, :, t], '{}/{}/{}/{}'.format(visual_dir, action_name, vid_name, frame_list[t]))
https://github.com/boheumd/D-NeRV/blob/788d8be4799e71d83141a05bdbaaa4b2caf2709b/train.py#L435
https://github.com/boheumd/D-NeRV/blob/788d8be4799e71d83141a05bdbaaa4b2caf2709b/train.py#L440

=============================================
https://github.com/AngusDujw/FTD-distillation
=============================================

Found 8 times
torchvision.utils.make_grid(upsampled, nrow=10, normalize=True, scale_each=True)
torchvision.utils.make_grid(upsampled, nrow=10, normalize=True, scale_each=True)
torchvision.utils.make_grid(upsampled, nrow=10, normalize=True, scale_each=True)
torchvision.utils.make_grid(upsampled, nrow=10, normalize=True, scale_each=True)
torchvision.utils.make_grid(upsampled, nrow=10, normalize=True, scale_each=True)
torchvision.utils.make_grid(upsampled, nrow=10, normalize=True, scale_each=True)
torchvision.utils.make_grid(upsampled, nrow=10, normalize=True, scale_each=True)
torchvision.utils.make_grid(upsampled, nrow=10, normalize=True, scale_each=True)
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/distill/distill_FTD.py#L312
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/distill/distill_FTD.py#L323
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/distill/distill_FTD.py#L337
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/distill/distill_FTD.py#L348
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/distill/distill_FTD.py#L381
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/distill/distill_FTD.py#L392
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/distill/distill_FTD.py#L406
https://github.com/AngusDujw/FTD-distillation/blob/711532a096326cb9747fd0398b077d18328bf2f3/distill/distill_FTD.py#L417

===================================================
https://github.com/UMass-Foundation-Model/Mod-Squad
===================================================

Found 1 times
make_grid(images, **grid_kwargs)
https://github.com/UMass-Foundation-Model/Mod-Squad/blob/1d17e81d090ac7e1a66dd420194c0b7679d820a4/util/utils.py#L138

================================
https://github.com/iVMCL/PaCaViT
================================

Found 1 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, "train-batch-%d.jpg" % batch_idx),
                        padding=0,
                        normalize=True,
                    )
https://github.com/iVMCL/PaCaViT/blob/4307018d4925786d9b9ecd75d7d2a011587c5e9f/classification/train_timm.py#L1816

===================================
https://github.com/JunHeum/BiFormer
===================================

Found 1 times
save_image(output.clone(), args.output, value_range=(0,1))
https://github.com/JunHeum/BiFormer/blob/91ddc9c29b1ab10eb91b5188317e7f4f4b3df981/run.py#L91

================================================
https://github.com/hmichaeli/alias_free_convnets
================================================

Found 2 times
make_grid(inp[:15, ...])
make_grid(final_inp[:15, ...])
https://github.com/hmichaeli/alias_free_convnets/blob/5fe2dd28d64d366d2ec2e0f2e07c998a52f8efaa/spatial-pytorch/robustness/train.py#L395
https://github.com/hmichaeli/alias_free_convnets/blob/5fe2dd28d64d366d2ec2e0f2e07c998a52f8efaa/spatial-pytorch/robustness/train.py#L396

=================================
https://github.com/guoyongcs/RSPC
=================================

Found 2 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/RSPC_FAN/main.py#L893
https://github.com/guoyongcs/RSPC/blob/ea3b1a8d2cbf7d39fcb4f858fc577fc4ff2f80ae/RSPC_FAN/main.py#L1070

====================================
https://github.com/haochen-rye/HNeRV
====================================

Found 2 times
save_image(img_out[idx], out_img)
save_image(concat_img, f'{visual_dir}/pred_{full_ind:04d}_{temp_psnr_list}.png')
https://github.com/haochen-rye/HNeRV/blob/4872129c8d004a25477e0c1ffbbff4ba71943ad5/efficient_nvloader.py#L47
https://github.com/haochen-rye/HNeRV/blob/4872129c8d004a25477e0c1ffbbff4ba71943ad5/train_nerv_all.py#L430

========================================
https://github.com/fagp/sinkhorn-rebasin
========================================

Found 1 times
utils.make_grid(tensor, nrow=nrow, normalize=True, padding=padding)
https://github.com/fagp/sinkhorn-rebasin/blob/1c601d4060abcfb3653f2e8fd7cacb4aa63dc12e/examples/utils/visualization.py#L20

============================================================
https://github.com/AlibabaResearch/AdvancedLiterateMachinery
============================================================

Found 12 times
torchvision.utils.make_grid(
                    test_imgs[-config_dict['num_to_show']:].cpu(), nrow=1)
torchvision.utils.make_grid(
                    test_imgs[-config_dict['num_to_show']:].cpu(), nrow=1)
torchvision.utils.make_grid(ts.cpu(), nrow=1)
torchvision.utils.make_grid(images, nrow=2)
vutils.save_image(save_image, f'demo_imgs/attens/{gt}_{pred}_{flag}.jpg', nrow=2, normalize=True, scale_each=True)
vutils.save_image(save_image, f'atten_imgs/TwoBiTokenViT/{gt}_{count}_{flag}_{pred}.jpg', nrow=2, normalize=True, scale_each=True)
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LISTER/train.py#L130
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LISTER/train_dist.py#L139
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LISTER/utils.py#L399
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LISTER/dataset/dataset.py#L313
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/MGP-STR/demo.py#L151
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/MGP-STR/test_final.py#L311

================================
https://github.com/ziplab/SN-Net
================================

Found 1 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True
                    )
https://github.com/ziplab/SN-Net/blob/c2dcf306089dfe982080a4f43a7ecebffd66abc6/stitching_resnet_swin/train.py#L1048

==================================
https://github.com/microsoft/Cream
==================================

Found 4 times
torchvision.utils.save_image(
                        input, os.path.join(
                            output_dir, 'train-batch-%d.jpg' %
                            batch_idx), padding=0, normalize=True)
torchvision.utils.save_image(
                        input, os.path.join(
                            output_dir, 'train-batch-%d.jpg' %
                            batch_idx), padding=0, normalize=True)
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/Cream/lib/core/retrain.py#L109
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/Cream/lib/core/train.py#L122

====================================
https://github.com/pengzhiliang/G2SD
====================================

Found 1 times
save_image(random_image, f.name)
https://github.com/pengzhiliang/G2SD/blob/6146adf567dde60e18074928af1af504dd097eeb/G2SD_det_dis/projects/DensePose/tests/test_image_list_dataset.py#L19

==================================================
https://github.com/huawei-noah/Efficient-Computing
==================================================

Found 8 times
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(0.3*im_data+0.7*mask.expand_as(im_data))
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(0.3*im_data+0.7*mask.expand_as(im_data))
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
save_image(fake_B, log_dir+'B/%04d.png' % (i+1))
save_image(fake_A, log_dir+'A/%04d.png' % (i+1))
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/BinaryNetworks/AdaBin/imagenet/utils/visualize.py#L39
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/BinaryNetworks/AdaBin/imagenet/utils/visualize.py#L52
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/BinaryNetworks/AdaBin/imagenet/utils/visualize.py#L67
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/BinaryNetworks/AdaBin/imagenet/utils/visualize.py#L81
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/BinaryNetworks/AdaBin/imagenet/utils/visualize.py#L98
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Distillation/VanillaKD/train-crd.py#L891
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Pruning/GAN-Pruning/test.py#L109
https://github.com/huawei-noah/Efficient-Computing/blob/ae362e43dddeb07f32f48755c2f621434c3761ea/Pruning/GAN-Pruning/test.py#L110

===============================
https://github.com/libffcv/ffcv
===============================

Found 2 times
make_grid(ch.concat([images, original_images])/255., images.shape[0])
save_image(make_grid(ch.concat([images, original_images])/255., images.shape[0]), 
                        os.path.join(IMAGES_TMP_PATH, aug_name + '-' + str(uuid.uuid4()) + '.jpeg'))
https://github.com/libffcv/ffcv/blob/77f11242cf9055b15fcaf9d2bb8e320de68dbfac/tests/test_augmentations.py#L68
https://github.com/libffcv/ffcv/blob/77f11242cf9055b15fcaf9d2bb8e320de68dbfac/tests/test_augmentations.py#L68

==========================================
https://github.com/memmelma/VO-Transformer
==========================================

Found 2 times
torchvision.utils.make_grid(x, nrow=x.shape[0]//2, normalize=True)
torchvision.utils.save_image(torchvision.utils.make_grid(x, nrow=x.shape[0]//2, normalize=True), file_path)
https://github.com/memmelma/VO-Transformer/blob/48fb458dec1528360ab18b4712ad73ce3e03ee72/pointnav_vo/vo/models/vo_transformer.py#L288
https://github.com/memmelma/VO-Transformer/blob/48fb458dec1528360ab18b4712ad73ce3e03ee72/pointnav_vo/vo/models/vo_transformer.py#L288

=====================================
https://github.com/xl-tang3/UAUDeblur
=====================================

Found 2 times
torchvision.utils.make_grid(images_torch, nrow)
torchvision.utils.make_grid(images_torch, nrow)
https://github.com/xl-tang3/UAUDeblur/blob/157a3a4c7a173a6dc91fc588031b58fdc7ef48cf/utils/image_io.py#L98
https://github.com/xl-tang3/UAUDeblur/blob/157a3a4c7a173a6dc91fc588031b58fdc7ef48cf/utils/plot_image_grid.py#L9

===========================================
https://github.com/mwalmer-umd/vit_analysis
===========================================

Found 3 times
torchvision.utils.make_grid(img, normalize=True, scale_each=True)
torchvision.utils.save_image(torchvision.utils.make_grid(img, normalize=True, scale_each=True), os.path.join(args.output_dir, "img.png"))
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/dino/visualize_attention.py#L204
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/dino/visualize_attention.py#L204
https://github.com/mwalmer-umd/vit_analysis/blob/c8810df6d599fb5c81c55eec37ca026ec243193d/timm_vit_modified/pytorch-image-models/train.py#L768

================================
https://github.com/valeoai/OCTET
================================

Found 5 times
make_grid(
            images, normalize=True, value_range=(-1, 1), nrow=self.opt.bs
        )
make_grid(
                imgs, normalize=True, value_range=(-1, 1), nrow=bs
            )
make_grid(
                    imgs, normalize=True, value_range=(-1, 1), nrow=bs
                )
make_grid(imgs.float().cpu(), *args, **kwargs)
utils.make_grid(
            images.float(), normalize=True, value_range=(-1, 1), **kwargs
        )
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/octet_invert_counterfactual.py#L190
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/pretrain_encoder.py#L105
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/train_encoder.py#L163
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/src/utils/io.py#L254
https://github.com/valeoai/OCTET/blob/90477605407ab438d395b30e6bbd43ec4cadbff9/src/utils/wandb_logger.py#L150

=================================
https://github.com/M-Nauta/PIPNet
=================================

Found 6 times
torchvision.utils.make_grid(tensors_per_prototype[p], nrow=k+1, padding=1)
torchvision.utils.save_image(grid,os.path.join(dir,"grid_topk_%s.png"%(str(p))))
torchvision.utils.make_grid(all_tensors, nrow=k+1, padding=1)
torchvision.utils.save_image(grid,os.path.join(dir,"grid_topk_all.png"))
torchvision.utils.make_grid(sorted_ps, nrow=16, padding=1)
torchvision.utils.save_image(grid,os.path.join(dir,"grid_%s.png"%(str(p))))
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/vis_pipnet.py#L150
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/vis_pipnet.py#L151
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/vis_pipnet.py#L157
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/vis_pipnet.py#L158
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/vis_pipnet.py#L272
https://github.com/M-Nauta/PIPNet/blob/68054822ee405b5f292369ca846a9c6233f2df69/util/vis_pipnet.py#L273

======================================
https://github.com/Hanyang-HCC-Lab/ICE
======================================

Found 6 times
vutils.make_grid(img[:16], normalize=False, scale_each=True)
vutils.save_image(vutils.make_grid(img[:16], normalize=False, scale_each=True),
                                      f"{save_path}/example_{save_name}.jpg")
vutils.make_grid(img[:16], normalize=False, scale_each=True)
vutils.save_image(vutils.make_grid(img[:16], normalize=False, scale_each=True),
                                      f"{save_path}/example_{args.drop_count}.jpg")
vutils.make_grid(img[:16], normalize=False, scale_each=True)
vutils.save_image(vutils.make_grid(img[:16], normalize=False, scale_each=True),
                                      f"{save_path}/image_{drop_order}_{args.drop_lambda}.jpg")
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/jaccard_similarity/evaluate.py#L169
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/jaccard_similarity/evaluate.py#L169
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/jaccard_similarity/evaluate.py#L174
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/jaccard_similarity/evaluate.py#L174
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/jaccard_similarity/evaluate.py#L180
https://github.com/Hanyang-HCC-Lab/ICE/blob/fa8436b3bab9d3a4f150aaddc69de7e33f9b103d/jaccard_similarity/evaluate.py#L180

============================
https://github.com/Ree1s/IDM
============================

Found 2 times
make_grid(_tensor, nrow=int(_tensor.size(0)), normalize=False)
make_grid(tensor, nrow=int(
            math.sqrt(n_img)), normalize=False)
https://github.com/Ree1s/IDM/blob/d224c0ef885168ebd1d19ab4cf4a66a1939ffef0/basicsr/utils/img_util.py#L72
https://github.com/Ree1s/IDM/blob/d224c0ef885168ebd1d19ab4cf4a66a1939ffef0/core/metrics.py#L19

=====================================
https://github.com/AIBluefisher/dbarf
=====================================

Found 6 times
torchvision.utils.make_grid(coarse_feat_map, normalize=True, scale_each=True, nrow=8)
torchvision.utils.make_grid(feat_map, normalize=True, scale_each=True, nrow=8)
torchvision.utils.make_grid(nearby_feat_maps, normalize=True, scale_each=True, nrow=5)
torchvision.utils.make_grid(nearby_rgb_maps, normalize=True, scale_each=True, nrow=5)
torchvision.utils.make_grid(nearby_res_feat_maps, normalize=True, scale_each=True, nrow=5)
torchvision.utils.make_grid(nearby_res_rgb_maps, normalize=True, scale_each=True, nrow=5)
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/dbarf/visualization/feature_visualizer.py#L13
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/dbarf/visualization/feature_visualizer.py#L20
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/dbarf/visualization/feature_visualizer.py#L115
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/dbarf/visualization/feature_visualizer.py#L119
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/dbarf/visualization/feature_visualizer.py#L123
https://github.com/AIBluefisher/dbarf/blob/4cd635acab5175e91a94003b8c389cdb76a5ad95/dbarf/visualization/feature_visualizer.py#L127

==================================
https://github.com/neuralchen/EQSR
==================================

Found 1 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
https://github.com/neuralchen/EQSR/blob/e10a258ed81c3d2589fe773d7ca7421282347e30/basicsr/utils/img_util.py#L71

==========================================
https://github.com/yccyenchicheng/SDFusion
==========================================

Found 4 times
vutils.make_grid(tensor)
vutils.make_grid( image_tensor, nrow=4 )
vutils.make_grid(tensor)
vutils.make_grid(img_grid_i, nrow=nrow)
https://github.com/yccyenchicheng/SDFusion/blob/bee6119cb4cab85ebe7d42d32f223ef30795abf0/utils/demo_util.py#L20
https://github.com/yccyenchicheng/SDFusion/blob/bee6119cb4cab85ebe7d42d32f223ef30795abf0/utils/util.py#L37
https://github.com/yccyenchicheng/SDFusion/blob/bee6119cb4cab85ebe7d42d32f223ef30795abf0/utils/util.py#L46
https://github.com/yccyenchicheng/SDFusion/blob/bee6119cb4cab85ebe7d42d32f223ef30795abf0/utils/util_3d.py#L79

===========================================================
https://github.com/dongzhuoyao/self-guided-diffusion-models
===========================================================

Found 22 times
torchvision.utils.make_grid(img, normalize=True, scale_each=True)
torchvision.utils.save_image(
        torchvision.utils.make_grid(img, normalize=True, scale_each=True),
        os.path.join(output_dir, "img.png"),
    )
make_grid(
            torch.tensor(cur_row, dtype=torch.uint8),
            nrow=len(cur_row),
            scale_each=True,
            pad_value=255,
        )
make_grid(
            tensor_list,
            nrow=grid_size,
            scale_each=True,
            pad_value=255,
        )
torchvision.utils.save_image(query_row_concated, img_path)
torchvision.utils.save_image(current_q.float() / 255.0, query_img_path)
make_grid(tensorlist, nrow=nrow,
                     padding=padding, pad_value=pad_value)
make_grid(tensorlist, nrow=nrow,
                     padding=padding, pad_value=pad_value)
make_grid(tensorlist_new, nrow=nrow*2,
                     padding=padding, pad_value=pad_value)
make_grid(tensorlist_new, nrow=nrow,
                     padding=padding, pad_value=pad_value)
make_grid(tensorlist_new, nrow=_timestep + 1,
                     padding=padding, pad_value=pad_value)
make_grid(tensorlist_new, nrow=nrow,
                     padding=padding, pad_value=pad_value)
make_grid(tensorlist_new, nrow=_timestep + 1,
                     padding=padding, pad_value=pad_value)
make_grid(tensorlist_new, nrow=nrow,
                     padding=padding, pad_value=pad_value)
make_grid(tensorlist, nrow=nrow,
                     padding=padding, pad_value=pad_value)
make_grid(pred_x0, nrow=timestep,
                     padding=padding, pad_value=pad_value)
make_grid(tensorlist_new, nrow=len(tensorlist_new),
                         padding=padding, pad_value=pad_value)
make_grid(tensorlist, nrow=nrow,
                     padding=padding, pad_value=pad_value)
make_grid(tensorlist, nrow=nrow,
                     padding=padding, pad_value=pad_value)
make_grid(tensorlist, nrow=nrow,
                     padding=padding, pad_value=pad_value)
make_grid(tensorlist, nrow=nrow, padding=padding, pad_value=255.0)
make_grid(tensorlist, nrow=nrow, padding=padding, pad_value=255.0)
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/clustering/utils/feat_nospatial.py#L121
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/clustering/utils/feat_nospatial.py#L120
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/eval_knn.py#L79
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/eval_knn.py#L116
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/eval_knn.py#L124
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/eval_knn.py#L127
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L105
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L123
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L144
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L169
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L190
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L214
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L236
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L276
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L286
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L298
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L326
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L336
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L344
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/eval/papervis_utils.py#L356
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/LOST/sg_main_lost.py#L404
https://github.com/dongzhuoyao/self-guided-diffusion-models/blob/be8f4527550dd1729aeb5ddab5b8d0e633f2fc6a/side_repo/STEGO/src/sg_sample_segmask.py#L72

==================================================
https://github.com/adobe-research/custom-diffusion
==================================================

Found 5 times
make_grid(grid, nrow=n_rows)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
torchvision.utils.save_image(outim, f'{save_path}/{outpath}/{counter}_{name}.jpg', nrow=batch_size // 2)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/sample.py#L414
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/train.py#L516
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/train.py#L529
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/src/composenW.py#L257
https://github.com/adobe-research/custom-diffusion/blob/032a4f54bd50f44e7303896f86c8a07e82234435/src/model.py#L352

=====================================
https://github.com/siyuhuang/QuantArt
=====================================

Found 4 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=self.batch_size, padding=0)
torchvision.utils.make_grid(log[k], nrow=data.batch_size, padding=0)
https://github.com/siyuhuang/QuantArt/blob/0e13073348f1a6905d224ec970dac8ac5a173caf/main.py#L282
https://github.com/siyuhuang/QuantArt/blob/0e13073348f1a6905d224ec970dac8ac5a173caf/main.py#L289
https://github.com/siyuhuang/QuantArt/blob/0e13073348f1a6905d224ec970dac8ac5a173caf/main.py#L302
https://github.com/siyuhuang/QuantArt/blob/0e13073348f1a6905d224ec970dac8ac5a173caf/main.py#L598

======================================================
https://github.com/adobe-research/affordance-insertion
======================================================

Found 7 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
utils.make_grid(image, nrow=nrow, **kwargs)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/main.py#L368
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/main.py#L381
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/ldm/data/data_hic/utils.py#L126
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/ldm/models/diffusion/ddpm.py#L447
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/ldm/models/diffusion/ddpm.py#L628
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/ldm/models/diffusion/ddpm.py#L1482
https://github.com/adobe-research/affordance-insertion/blob/ec7e931201281d02bb2d95812eb4c1523366b574/ldm/modules/image_degradation/utils_image.py#L353

=================================================
https://github.com/ZeWang95/BinaryLatentDiffusion
=================================================

Found 8 times
torchvision.utils.make_grid(images.clamp(0, 1), nrow=int(np.sqrt(images.size(0))), padding=0)
torchvision.utils.save_image(torch.clamp(images[idx], 0, 1), f"{log_dir}/{im_name}_{step}_{idx}.png")
torchvision.utils.save_image(
            torch.clamp(images, 0, 1),
            f"{log_dir}/{im_name}_{step:09}.jpg",
            # nrow=int(np.sqrt(images.shape[0])),
            nrow=10,
            padding=0
        )
torchvision.utils.save_image(torch.clamp(images[idx], 0, 1), f"{log_dir}/{im_name}_{temp}_{step}_{idx}.jpg")
torchvision.utils.save_image(
            torch.clamp(images, 0, 1),
            f"{log_dir}/{im_name}_{temp}_{step}.jpg",
            nrow=10,
            padding=2
        )
torchvision.utils.save_image(torch.clamp(images[idx], 0, 1), f"{log_dir}/{im_name}_r{dist.get_rank()}_{step}_{idx}.jpg")
torchvision.utils.save_image(torch.clamp(images[idx], 0, 1), f"{log_dir}/img_r{dist.get_rank()}_{idx}.jpg")
torchvision.utils.save_image(
            torch.clamp(images, 0, 1),
            f"{log_dir}/{text}.jpg",
            nrow=5,
            padding=0
        )
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/utils/log_utils.py#L126
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/utils/log_utils.py#L135
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/utils/log_utils.py#L137
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/utils/log_utils.py#L153
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/utils/log_utils.py#L155
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/utils/log_utils.py#L168
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/utils/log_utils.py#L178
https://github.com/ZeWang95/BinaryLatentDiffusion/blob/1ae570226ce5147bdc90bbe92d3a19e4789a89e7/utils/log_utils.py#L180

=======================================
https://github.com/cuikaiwen18/KD_DLGAN
=======================================

Found 3 times
torchvision.utils.save_image(fixed_Gz.float().cpu(), image_filename,
                                 nrow=int(fixed_Gz.shape[0] ** 0.5), normalize=True)
torchvision.utils.save_image(out_ims, image_filename,
                                     nrow=samples_per_class, normalize=True)
torchvision.utils.save_image(out_ims, image_filename,
                                 nrow=num_midpoints + 2, normalize=True)
https://github.com/cuikaiwen18/KD_DLGAN/blob/d7476b6c05c61fbf1acf24bebd244a21566722a5/third_party/train_fns.py#L206
https://github.com/cuikaiwen18/KD_DLGAN/blob/d7476b6c05c61fbf1acf24bebd244a21566722a5/third_party/utils.py#L976
https://github.com/cuikaiwen18/KD_DLGAN/blob/d7476b6c05c61fbf1acf24bebd244a21566722a5/third_party/utils.py#L1022

=======================================
https://github.com/zhengyuf/PointAvatar
=======================================

Found 2 times
torchvision.utils.make_grid(rgb_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(output_vs_gt_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=batch_size)
https://github.com/zhengyuf/PointAvatar/blob/b9886893dc197b2f24ffbe6f14f0ee17fff61288/code/utils/plots.py#L70
https://github.com/zhengyuf/PointAvatar/blob/b9886893dc197b2f24ffbe6f14f0ee17fff61288/code/utils/plots.py#L149

================================================================================
https://github.com/Picsart-AI-Research/IPL-Zero-Shot-Generative-Model-Adaptation
================================================================================

Found 1 times
utils.save_image(
        images,
        os.path.join(output_dir, f"{file_prefix}_{str(iteration).zfill(6)}.jpg"),
        nrow=nrows,
        normalize=True,
        range=(-1, 1),
    )
https://github.com/Picsart-AI-Research/IPL-Zero-Shot-Generative-Model-Adaptation/blob/2c70ac3152c939db1cb89663038ccde6c9f6983c/utils/file_utils.py#L27

==================================
https://github.com/yunqing-me/RICK
==================================

Found 4 times
torchvision.utils.make_grid(imgs, nrow=nrow, pad_value=1)
torchvision.utils.save_image(imgs, outfile, nrow=nrow, pad_value=1)
torchvision.utils.save_image(imgs, outfile, nrow=nrow)
torchvision.utils.save_image(imgs, outfile, nrow=nrow, pad_value=1)
https://github.com/yunqing-me/RICK/blob/44d65c1257895f9bca6a53bed76b071bc478c3fd/gan_training/logger.py#L65
https://github.com/yunqing-me/RICK/blob/44d65c1257895f9bca6a53bed76b071bc478c3fd/gan_training/logger.py#L66
https://github.com/yunqing-me/RICK/blob/44d65c1257895f9bca6a53bed76b071bc478c3fd/gan_training/utils.py#L9
https://github.com/yunqing-me/RICK/blob/44d65c1257895f9bca6a53bed76b071bc478c3fd/gan_training/utils.py#L21

============================================================
https://github.com/CrossmodalGroup/DynamicVectorQuantization
============================================================

Found 9 times
torchvision.utils.save_image(images, "temp/test_draw_triple_grain.png")
torchvision.utils.save_image(samples[batch_i], "{}/batch_{}_{}.png".format(save_path_image, i, batch_i), normalize=True)
torchvision.utils.save_image(samples[batch_i], "{}/batch_{}_{}.png".format(save_path_image, i, batch_i), normalize=True)
torchvision.utils.save_image(samples_fixed_fine_position, "{}/batch_{}.png".format(save_path_image_fixed, i))
torchvision.utils.save_image(samples, "{}/batch_{}.png".format(save_path_image, i))
torchvision.utils.save_image(grain_map, "{}/grain_images_{}.png".format(opt.image_save_path, i))
torchvision.utils.make_grid(images[k], normalize=True)
torchvision.utils.make_grid(images[k], nrow=4, normalize=True)
torchvision.utils.make_grid(images[k], nrow=4, normalize=True)
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/modules/dynamic_modules/utils.py#L206
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/scripts/sample_images/sample_dynamic_uncond.py#L87
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/scripts/sample_images/sample_dynamic_uncond.py#L103
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/scripts/sample_val/sample_dynamic_uncond.py#L95
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/scripts/sample_val/sample_dynamic_uncond.py#L115
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/scripts/tools/visualize_dual_grain.py#L52
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/utils/logger.py#L79
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/utils/logger.py#L86
https://github.com/CrossmodalGroup/DynamicVectorQuantization/blob/be6dc36c2cc0f238acff76d19ae2e26d0b98788d/utils/logger.py#L140

===================================
https://github.com/ldz666666/RiDDLE
===================================

Found 2 times
torchvision.utils.save_image(save_batch[k],join(output_frame_path,img_name[k]),normalize=True)
torchvision.utils.save_image(save_batch[k],join(output_frame_path,img_name[k]),normalize=True)
https://github.com/ldz666666/RiDDLE/blob/6abf4a7d2b9404155a15058b132d1996e508f5aa/coach_test.py#L152
https://github.com/ldz666666/RiDDLE/blob/6abf4a7d2b9404155a15058b132d1996e508f5aa/coach_test.py#L194

==========================================
https://github.com/ZGCTroy/LayoutDiffusion
==========================================

Found 13 times
tvu.save_image(x[i], path)
tvu.save_image(
                    x[i][j], os.path.join(self.args.image_folder, f"{j}_{i}.png")
                )
tvu.save_image(x[i], os.path.join(self.args.image_folder, f"{i}.png"))
utils.save_image(
                            image_unnormalize_batch(obj_imgs_from_resized_generated_imgs.squeeze(0)[obj_idx:obj_idx + 1]),
                            os.path.join(log_dir, "generated_cropped_imgs/{}/{}".format(obj_class[1:1 + obj_num][obj_idx], saved_cropped_image_name)),
                            nrow=1
                        )
utils.save_image(
                        torch.cat([generated_images_with_each_bbox, real_images_with_each_bbox], dim=0),
                        os.path.join(log_dir, "generated_images_with_each_bbox/{}.png".format(filename)),
                        nrow=cfg.data.parameters.layout_length
                    )
utils.save_image(
                                image_unnormalize_batch(obj_imgs_from_resized_real_imgs.squeeze(0)[obj_idx:obj_idx + 1]),
                                os.path.join(log_dir, "real_cropped_imgs/{}/{}".format(obj_class[1:1 + obj_num][obj_idx], saved_cropped_image_name)),
                                nrow=1
                            )
utils.save_image(image_unnormalize_batch(obj_imgs_from_unresized_gt_imgs),
                                             os.path.join(log_dir, "obj_imgs_from_unresized_gt_imgs/{}.png".format(filename)),
                                             nrow=cfg.data.parameters.layout_length)
utils.save_image(image_unnormalize_batch(obj_imgs_from_resized_gt_imgs.squeeze(0)),
                                         os.path.join(log_dir, "obj_imgs_from_resized_gt_imgs/{}.png".format(filename)),
                                         nrow=cfg.data.parameters.layout_length)
utils.save_image(
                            image_unnormalize_batch(obj_imgs_from_resized_generated_imgs.squeeze(0)[obj_idx:obj_idx + 1]),
                            os.path.join(log_dir, "generated_cropped_imgs/{}/{}".format(obj_class[1:1 + obj_num][obj_idx], saved_cropped_image_name)),
                            nrow=1
                        )
utils.save_image(
                        torch.cat([generated_images_with_each_bbox, real_images_with_each_bbox], dim=0),
                        os.path.join(log_dir, "generated_images_with_each_bbox/{}.png".format(filename)),
                        nrow=cfg.data.parameters.layout_length
                    )
utils.save_image(
                                image_unnormalize_batch(obj_imgs_from_resized_real_imgs.squeeze(0)[obj_idx:obj_idx + 1]),
                                os.path.join(log_dir, "real_cropped_imgs/{}/{}".format(obj_class[1:1 + obj_num][obj_idx], saved_cropped_image_name)),
                                nrow=1
                            )
utils.save_image(image_unnormalize_batch(obj_imgs_from_unresized_gt_imgs),
                                             os.path.join(log_dir, "obj_imgs_from_unresized_gt_imgs/{}.png".format(filename)),
                                             nrow=cfg.data.parameters.layout_length)
utils.save_image(image_unnormalize_batch(obj_imgs_from_resized_gt_imgs.squeeze(0)),
                                         os.path.join(log_dir, "obj_imgs_from_resized_gt_imgs/{}.png".format(filename)),
                                         nrow=cfg.data.parameters.layout_length)
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/repositories/dpm_solver/example_pytorch/runners/diffusion.py#L421
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/repositories/dpm_solver/example_pytorch/runners/diffusion.py#L446
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/repositories/dpm_solver/example_pytorch/runners/diffusion.py#L488
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/scripts/classifier-free_sample_for_layout.py#L252
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/scripts/classifier-free_sample_for_layout.py#L295
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/scripts/classifier-free_sample_for_layout.py#L329
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/scripts/classifier-free_sample_for_layout.py#L351
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/scripts/classifier-free_sample_for_layout.py#L362
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/scripts/classifier-free_sample_for_layout_on_latent_space.py#L261
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/scripts/classifier-free_sample_for_layout_on_latent_space.py#L304
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/scripts/classifier-free_sample_for_layout_on_latent_space.py#L338
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/scripts/classifier-free_sample_for_layout_on_latent_space.py#L360
https://github.com/ZGCTroy/LayoutDiffusion/blob/5896b31b2ea07d32a04d1713a3c1805ac5c92718/scripts/classifier-free_sample_for_layout_on_latent_space.py#L371

===========================================================
https://github.com/CrossmodalGroup/MaskedVectorQuantization
===========================================================

Found 4 times
torchvision.utils.save_image(out, "out.png")
torchvision.utils.make_grid(images[k], normalize=True)
torchvision.utils.make_grid(images[k], nrow=4, normalize=True)
torchvision.utils.make_grid(images[k], nrow=4, normalize=True)
https://github.com/CrossmodalGroup/MaskedVectorQuantization/blob/f38a9ecbe5947d9c0a395c4f17aef356ad250eac/modules/masked_quantization/tools.py#L116
https://github.com/CrossmodalGroup/MaskedVectorQuantization/blob/f38a9ecbe5947d9c0a395c4f17aef356ad250eac/utils/logger.py#L79
https://github.com/CrossmodalGroup/MaskedVectorQuantization/blob/f38a9ecbe5947d9c0a395c4f17aef356ad250eac/utils/logger.py#L86
https://github.com/CrossmodalGroup/MaskedVectorQuantization/blob/f38a9ecbe5947d9c0a395c4f17aef356ad250eac/utils/logger.py#L140

===============================
https://github.com/tobran/GALIP
===============================

Found 4 times
vutils.save_image(fake_imgs.data, batch_img_save_name, nrow=8, value_range=(-1, 1), normalize=True)
vutils.save_image(fixed_results.data, img_save_path, nrow=8, value_range=(-1, 1), normalize=True)
make_grid(fixed_img.cpu(), nrow=8, normalize=True)
vutils.save_image(fixed_img.data, img_save_path, nrow=8, normalize=True)
https://github.com/tobran/GALIP/blob/35d0c2fd64eec2e95e7c905cb71f96d81475a46f/code/lib/modules.py#L195
https://github.com/tobran/GALIP/blob/35d0c2fd64eec2e95e7c905cb71f96d81475a46f/code/lib/modules.py#L329
https://github.com/tobran/GALIP/blob/35d0c2fd64eec2e95e7c905cb71f96d81475a46f/code/src/train.py#L94
https://github.com/tobran/GALIP/blob/35d0c2fd64eec2e95e7c905cb71f96d81475a46f/code/src/train.py#L98

==============================
https://github.com/MC-E/LF-VSN
==============================

Found 2 times
torchvision.utils.save_image((rlt * 255).round() / 255, 'rlt.png', nrow=1, padding=0,
                                 normalize=False)
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/MC-E/LF-VSN/blob/cc05d16665122bfcd11522c74e8e1253d0bd9d51/code/data/util.py#L550
https://github.com/MC-E/LF-VSN/blob/cc05d16665122bfcd11522c74e8e1253d0bd9d51/code/utils/util.py#L113

====================================
https://github.com/wangchi95/CF-Font
====================================

Found 14 times
vutils.save_image(img, os.path.join(base_folder, os.path.basename(path)), normalize=True, nrow=1)
vutils.save_image(imgs_gt, os.path.join('vvv.png'), normalize=True,
                        nrow=4)
vutils.save_image(img, os.path.join(base_folder, os.path.basename(path)), normalize=True, nrow=1)
vutils.make_grid(x_com, normalize=True, nrow=int(x_fake.size(0) ** 0.5))
vutils.make_grid(x_base, normalize=True, nrow=x_base.shape[0])
vutils.save_image(img_com, os.path.join(args.res_dir, '{:03d}_COM_{:03d}_{:03d}.jpg'.format(args.local_rank, epoch+1, i)))
vutils.make_grid(x_res_ema, normalize=True, nrow=(x_res_ema.size(0) // (x_src.size(0) + 2) + 1))
vutils.make_grid(x_rnd_ema, normalize=True, nrow=(x_res_ema.size(0) // (x_src.size(0) + 2) + 1))
vutils.save_image(img_res, os.path.join(args.res_dir, '{:03d}_EMA_{:03d}_{:03d}{:03d}.jpg'.format(args.local_rank, epoch+1, src_idx, ref_idx)))
vutils.save_image(img_ema, os.path.join(args.res_dir, '{:03d}_RNDEMA_{:03d}_{:03d}{:03d}.jpg'.format(args.local_rank, epoch+1, src_idx, ref_idx)))
vutils.make_grid(x_res_ema, normalize=True, nrow=(x_res_ema.size(0) // (x_src.size(0) + 2) + 1))
vutils.make_grid(x_rnd_ema, normalize=True, nrow=(x_res_ema.size(0) // (x_src.size(0) + 2) + 1))
vutils.save_image(img_res, os.path.join(args.res_dir, '{:03d}_EMA_{:03d}_{:03d}{:03d}.jpg'.format(args.local_rank, epoch+1, src_idx, ref_idx)))
vutils.save_image(img_ema, os.path.join(args.res_dir, '{:03d}_RNDEMA_{:03d}_{:03d}{:03d}.jpg'.format(args.local_rank, epoch+1, src_idx, ref_idx)))
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/inf_with_style_ft.py#L208
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/inf_with_style_ft.py#L239
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/inf_with_style_ft_cf.py#L250
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/train/train_cf.py#L247
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/train/train_cf.py#L248
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/train/train_cf.py#L253
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/validation/validation.py#L94
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/validation/validation.py#L95
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/validation/validation.py#L96
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/validation/validation.py#L97
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/validation/validation_cf.py#L101
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/validation/validation_cf.py#L102
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/validation/validation_cf.py#L103
https://github.com/wangchi95/CF-Font/blob/75280ca9048b759551039f13f5cc481987244ba5/validation/validation_cf.py#L104

=====================================================
https://github.com/ziqihuangg/Collaborative-Diffusion
=====================================================

Found 17 times
make_grid(
                    conf, nrow=10)
make_grid(
                    conf, nrow=10)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(
                    conf, nrow=10)
make_grid(
                    conf, nrow=10)
make_grid(
                        conf,
                        nrow=10)
make_grid(
                        conf, nrow=10)
make_grid(
                    conf, nrow=10)
make_grid(
                    conf, nrow=10)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/generate.py#L217
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/generate.py#L239
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/main.py#L323
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/main.py#L336
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/mask2image.py#L194
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/text2image.py#L169
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/editing/collaborative_edit.py#L235
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/editing/collaborative_edit.py#L259
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/freeu/mask2image_freeu.py#L254
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/freeu/text2image_freeu.py#L229
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/ldm/models/diffusion/ddpm.py#L389
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/ldm/models/diffusion/ddpm.py#L555
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/ldm/models/diffusion/ddpm.py#L1327
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/ldm/models/diffusion/ddpm_compose.py#L384
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/ldm/models/diffusion/ddpm_compose.py#L744
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/ldm/models/diffusion/ddpm_compose.py#L1521
https://github.com/ziqihuangg/Collaborative-Diffusion/blob/b1ea7f83089a770dbe6c6cf695fc6b0e361957fb/ldm/modules/image_degradation/utils_image.py#L353

================================
https://github.com/bbaaii/HFA-GP
================================

Found 11 times
torchvision.utils.save_image(img_recon, f'/apdcephfs_cq2/share_1290939/kitbai/LIA-3d/demo/{args.demo_name}/{frame_idx:05d}.png', normalize=True,
                        range=(-1,1))
torchvision.utils.save_image(img_recon, f'/apdcephfs_cq2/share_1290939/kitbai/LIA-3d/demo/{args.demo_name}/{frame_idx:05d}.png', normalize=True,
                        range=(-1,1))
torchvision.utils.save_image(img_recon, f'./demo/{args.demo_name}/{frame_idx:05d}.png', normalize=True,
                        range=(-1,1))
torchvision.utils.save_image(img, args.exp_path + args.exp_name + '/display/'+str(idx)+name+'.png')
torchvision.utils.save_image(img, args.exp_path + args.exp_name + '/bases/'+str(idx)+name+'.png')
torchvision.utils.save_image(img, args.exp_path + args.exp_name + '/bases/'+str(idx)+name+'.png')
torchvision.utils.save_image(img, args.exp_path + args.exp_name + '/display/'+str(idx)+name+'.png')
torchvision.utils.save_image(img, args.exp_path + args.exp_name + '/bases/'+str(idx)+name+'.png')
torchvision.utils.save_image(img, args.exp_path + args.exp_name + '/bases/'+str(idx)+name+'.png')
torchvision.utils.save_image(img, args.exp_path + args.exp_name + '/display/'+str(idx)+name+'.png')
torchvision.utils.save_image(img, args.exp_path + args.exp_name + '/bases/'+str(idx)+name+'.png')
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/run_recon_video_3dmm.py#L410
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/run_recon_video_audio.py#L392
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/run_recon_video_rgb.py#L233
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_3dmm.py#L33
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_3dmm.py#L42
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_3dmm.py#L55
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_audio.py#L34
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_audio.py#L43
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_audio.py#L56
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_rgb.py#L33
https://github.com/bbaaii/HFA-GP/blob/aa2c15a61d8ddd182189153914098a2af0edfb0c/code/train_rgb.py#L43

===================================
https://github.com/JiauZhang/FA-VAE
===================================

Found 2 times
utils.save_image(
    sample, f"sample/sample.png",
    nrow=int(math.sqrt(args.batch)), normalize=True, value_range=(-1, 1),
)
utils.save_image(
                rec, f"sample/{str(idx).zfill(6)}.png",
                nrow=int(math.sqrt(args.batch)), normalize=True, value_range=(-1, 1),
            )
https://github.com/JiauZhang/FA-VAE/blob/675a220c5d973a77d1908542031c6428d308b4d0/train_vq.py#L47
https://github.com/JiauZhang/FA-VAE/blob/675a220c5d973a77d1908542031c6428d308b4d0/train_vq.py#L82

===================================
https://github.com/sndnyang/sadajem
===================================

Found 2 times
tv.utils.save_image(t.clamp(x, -1, 1), p, normalize=True, nrow=sqrt(x.size(0)))
tv.utils.save_image(t.clamp(x, -1, 1), p, normalize=True, nrow=n)
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/eval_sadajem.py#L178
https://github.com/sndnyang/sadajem/blob/9d8f3c78b3c07af1a40f5509ca9b4a2a243b53e3/utils.py#L30

==========================================
https://github.com/mf-zhang/Structural-MPI
==========================================

Found 1 times
save_image(random_image, f.name)
https://github.com/mf-zhang/Structural-MPI/blob/cfa26640ae5fc47b360ca2d49f10f5daa953ee45/detectron2/projects/DensePose/tests/test_image_list_dataset.py#L19

========================================
https://github.com/Yueming6568/DeltaEdit
========================================

Found 3 times
utils.save_image(
        img,
        name,
        nrow=1,
        padding=0,
        normalize=True,
        range=(-1, 1),
    )
torchvision.utils.save_image(img_gen_all, os.path.join(opts.save_dir, "%04d.jpg" %(bid+1)), normalize=True, range=(-1, 1))
torchvision.utils.save_image(img_gen_all, os.path.join(opts.save_dir, "%04d.jpg" %(bid+1)), normalize=True, range=(-1, 1))
https://github.com/Yueming6568/DeltaEdit/blob/77ae966e27f6390fdb60d09393fa5bf5d3bb14db/generate_codes.py#L14
https://github.com/Yueming6568/DeltaEdit/blob/77ae966e27f6390fdb60d09393fa5bf5d3bb14db/scripts/inference.py#L114
https://github.com/Yueming6568/DeltaEdit/blob/77ae966e27f6390fdb60d09393fa5bf5d3bb14db/scripts/inference_real.py#L201

==============================================
https://github.com/NVlabs/affordance_diffusion
==============================================

Found 17 times
vutils.make_grid(torch.from_numpy(image), nrow=col)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
vutils.make_grid(samples)
vutils.make_grid(batch[2])
vutils.make_grid(overlay)
vutils.make_grid(batch[3])
vutils.make_grid(batch[2])
vutils.make_grid(overlay)
vutils.make_grid(batch[3])
vutils.make_grid(obj)
vutils.make_grid(hoi)
vutils.make_grid(samples)
vutils.make_grid(overlay)
vutils.save_image(image / 2 + 0.5, fname)
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/jutils/image_utils.py#L156
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/ldm/models/diffusion/ddpm.py#L396
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/ldm/models/diffusion/ddpm.py#L561
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/ldm/models/diffusion/ddpm.py#L1319
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/ldm/modules/image_degradation/utils_image.py#L375
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/models/base.py#L156
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/models/base.py#L165
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/models/base.py#L167
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/models/base.py#L168
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/models/content_ldm.py#L320
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/models/content_ldm.py#L322
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/models/content_ldm.py#L323
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/models/content_ldm.py#L326
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/models/content_ldm.py#L328
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/models/content_ldm.py#L335
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/models/layout.py#L123
https://github.com/NVlabs/affordance_diffusion/blob/44880a0f68aa311b74d31f561475a838042febbc/utils/logger.py#L92

=============================================
https://github.com/Meta-Portrait/MetaPortrait
=============================================

Found 19 times
tvu.make_grid(val)
tvu.save_image(imgs, os.path.join(self.imgs_path, str(step)+'.png'), nrow=num, normalize=True)
tvu.save_image(imgs, os.path.join(self.imgs_path, 'test_' + str(step) + '_' + str(test_flag) +'.png'), nrow=num, normalize=True)
tvu.save_image(visuals[key][0], img_path, normalize=False)
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
utils.save_image(
                sample,
                f'samples/{str(i).zfill(6)}.png',
                nrow=int(math.sqrt(args.sample)),
                normalize=True,
                range=(-1, 1),
            )
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp512/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                gt[:, j, :, :, :], f'tmp512/gt_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[j, :, :, :], f'256_degrade/{i:03d}/{j:08d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
            gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=True, range=(-1, 1))
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp512/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                gt[:, j, :, :, :], f'tmp512/gt_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(lq, f'tmp/lq_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
            gt[:, j, :, :, :], f'tmp/gt_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
tvu.save_image(visuals[key][0], img_path, normalize=False)
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/base_model/utils/visualizer.py#L23
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/base_model/utils/visualizer.py#L31
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/base_model/utils/visualizer.py#L33
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/basicsr/models/video_recurrent_model.py#L364
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/basicsr/utils/img_util.py#L71
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/inference/inference_stylegan2.py#L23
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/scripts/data_preparation/test_hdtf_dataset.py#L81
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/scripts/data_preparation/test_hdtf_dataset.py#L83
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/scripts/data_preparation/test_hdtf_train_dataset.py#L86
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/test_scripts/test_ffhq_dataset.py#L50
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/test_scripts/test_hdtf_dataset.py#L80
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/test_scripts/test_hdtf_dataset.py#L82
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/test_scripts/test_paired_image_dataset.py#L66
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/test_scripts/test_paired_image_dataset.py#L67
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/test_scripts/test_reds_dataset.py#L67
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/test_scripts/test_reds_dataset.py#L69
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/test_scripts/test_vimeo90k_dataset.py#L63
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Basicsr/test_scripts/test_vimeo90k_dataset.py#L65
https://github.com/Meta-Portrait/MetaPortrait/blob/4c3c9e38d000f7db50c3a7ab736161f7aecc741a/sr_model/Experimental_root/models/metaportrait_video_model.py#L364

==================================================
https://github.com/Fantasy-Studio/Paint-by-Example
==================================================

Found 7 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(grid)
make_grid(grid)
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/main.py#L327
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/main.py#L340
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/ldm/models/diffusion/ddpm.py#L390
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/ldm/models/diffusion/ddpm.py#L558
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/ldm/models/diffusion/ddpm.py#L1354
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/scripts/inference.py#L374
https://github.com/Fantasy-Studio/Paint-by-Example/blob/52a7e3736d579889e13c988403b7fd721bb22293/scripts/inference_test_bench.py#L372

================================
https://github.com/gligen/GLIGEN
================================

Found 7 times
torchvision.utils.save_image( images, save_path, nrow=self.nrow, normalize=self.normalize, scale_each=self.scale_each, range=self.range )
torchvision.utils.save_image( real, save_path, nrow=self.nrow)
torchvision.utils.save_image( masked_real, save_path, nrow=self.nrow, normalize=self.normalize, scale_each=self.scale_each, range=self.range)
torchvision.utils.save_image( images, save_path, nrow=self.nrow, normalize=self.normalize, scale_each=self.scale_each, range=self.range )
torchvision.utils.save_image( real, save_path, nrow=self.nrow)
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/gligen/GLIGEN/blob/f9dccb9c6cf48bad03c3666290a7dec8c5e58f3c/trainer.py#L43
https://github.com/gligen/GLIGEN/blob/f9dccb9c6cf48bad03c3666290a7dec8c5e58f3c/trainer.py#L46
https://github.com/gligen/GLIGEN/blob/f9dccb9c6cf48bad03c3666290a7dec8c5e58f3c/trainer.py#L51
https://github.com/gligen/GLIGEN/blob/f9dccb9c6cf48bad03c3666290a7dec8c5e58f3c/demo/gligen/trainer.py#L38
https://github.com/gligen/GLIGEN/blob/f9dccb9c6cf48bad03c3666290a7dec8c5e58f3c/demo/gligen/trainer.py#L41
https://github.com/gligen/GLIGEN/blob/f9dccb9c6cf48bad03c3666290a7dec8c5e58f3c/demo/gligen/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/gligen/GLIGEN/blob/f9dccb9c6cf48bad03c3666290a7dec8c5e58f3c/ldm/modules/image_degradation/utils_image.py#L353

==================================
https://github.com/sstzal/DiffTalk
==================================

Found 6 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/sstzal/DiffTalk/blob/b49a607aa39bb41da215870c2b3dd48e9af9f30d/main.py#L320
https://github.com/sstzal/DiffTalk/blob/b49a607aa39bb41da215870c2b3dd48e9af9f30d/main.py#L333
https://github.com/sstzal/DiffTalk/blob/b49a607aa39bb41da215870c2b3dd48e9af9f30d/ldm/models/diffusion/ddpm_talking.py#L365
https://github.com/sstzal/DiffTalk/blob/b49a607aa39bb41da215870c2b3dd48e9af9f30d/ldm/models/diffusion/ddpm_talking.py#L535
https://github.com/sstzal/DiffTalk/blob/b49a607aa39bb41da215870c2b3dd48e9af9f30d/ldm/models/diffusion/ddpm_talking.py#L1337
https://github.com/sstzal/DiffTalk/blob/b49a607aa39bb41da215870c2b3dd48e9af9f30d/ldm/modules/image_degradation/utils_image.py#L331

======================================
https://github.com/plusmultiply/TAPS3D
======================================

Found 3 times
utils.make_grid(
        images,
        nrow=nrows,
        normalize=True,
        range=(-1, 1),
    )
torchvision.utils.make_grid(images, nrows, normalize=True, value_range=(-1, 1))
utils.make_grid(
        images,
        nrow=nrows,
        normalize=True,
        range=(-1, 1),
    )
https://github.com/plusmultiply/TAPS3D/blob/0d60a7aae5d56a9e07fa797b2404bb755895d4b9/taps_utils.py#L33
https://github.com/plusmultiply/TAPS3D/blob/0d60a7aae5d56a9e07fa797b2404bb755895d4b9/taps_utils.py#L45
https://github.com/plusmultiply/TAPS3D/blob/0d60a7aae5d56a9e07fa797b2404bb755895d4b9/taps_utils.py#L137

=====================================
https://github.com/theEricMa/OTAvatar
=====================================

Found 4 times
torchvision.utils.make_grid(
                vis_images, nrow=1, padding=0, normalize=False)
torchvision.utils.save_image(image_grid, path, nrow=1)
torchvision.utils.make_grid(
        visualization_images.data, nrow=1, padding=0, normalize=False)
torchvision.utils.save_image(image_grid, output_filename, nrow=1)
https://github.com/theEricMa/OTAvatar/blob/b242d4c85d5be0b9e72291863ae7eff8ba0050ca/trainers/base.py#L499
https://github.com/theEricMa/OTAvatar/blob/b242d4c85d5be0b9e72291863ae7eff8ba0050ca/trainers/base.py#L504
https://github.com/theEricMa/OTAvatar/blob/b242d4c85d5be0b9e72291863ae7eff8ba0050ca/util/io.py#L39
https://github.com/theEricMa/OTAvatar/blob/b242d4c85d5be0b9e72291863ae7eff8ba0050ca/util/io.py#L41

=================================================
https://github.com/mattolson93/cross_gan_auditing
=================================================

Found 21 times
make_grid(img1.clip(0,1)[new_inds])
save_image(out_imgs,f"{i:05d}_{acc:.3f}.png")
make_grid(img1.clip(0,1)[new_inds])
save_image(out_imgs,f"{i:05d}_1_{acc:.3f}.png")
make_grid(img2.clip(0,1)[new_inds])
save_image(out_imgs,f"{i:05d}_2_{acc:.3f}.png")
torchvision.utils.make_grid(
                    images,
                    nrow=len(self.neg_alphas) + len(self.pos_alphas) + 1,
                    padding=2,
                    pad_value=255,
                )
torchvision.utils.save_image(imgs_grid, f"{prefix}sample_{i}.png")
utils.save_image(
        img_concat, name + ".png", nrow=n_sample, normalize=True, range=(-1, 1)
    )
utils.save_image(
                sample,
                f"sample/{str(i).zfill(6)}.png",
                nrow=1,
                normalize=True,
                range=(-1, 1),
            )
utils.save_image(
                        sample,
                        f"sample/{str(i).zfill(6)}.png",
                        nrow=int(args.n_sample ** 0.5),
                        normalize=True,
                        range=(-1, 1),
                    )
torchvision.utils.make_grid(
                    images,
                    nrow=len(self.neg_alphas) + len(self.pos_alphas) + 1,
                    padding=2,
                    pad_value=255,
                )
torchvision.utils.save_image(imgs_grid, path)
utils.save_image(
        img_concat, name + ".png", nrow=n_sample, normalize=True, range=(-1, 1)
    )
utils.save_image(
                sample,
                f"sample/{str(i).zfill(6)}.png",
                nrow=1,
                normalize=True,
                range=(-1, 1),
            )
utils.save_image(
                        sample,
                        f"sample/{str(i).zfill(6)}.png",
                        nrow=int(args.n_sample ** 0.5),
                        normalize=True,
                        range=(-1, 1),
                    )
torchvision.utils.make_grid(
                    images,
                    nrow=len(self.neg_alphas) + len(self.pos_alphas) + 1,
                    padding=2,
                    pad_value=255,
                )
torchvision.utils.save_image(imgs_grid, path)
utils.save_image(
        img_concat, name + ".png", nrow=n_sample, normalize=True, range=(-1, 1)
    )
utils.save_image(
                sample,
                f"sample/{str(i).zfill(6)}.png",
                nrow=1,
                normalize=True,
                range=(-1, 1),
            )
utils.save_image(
                        sample,
                        f"sample/{str(i).zfill(6)}.png",
                        nrow=int(args.n_sample ** 0.5),
                        normalize=True,
                        range=(-1, 1),
                    )
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/bonus_training/resnet_feat_trainer.py#L108
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/bonus_training/resnet_feat_trainer.py#L109
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/bonus_training/resnet_feat_trainer.py#L167
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/bonus_training/resnet_feat_trainer.py#L168
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/bonus_training/resnet_feat_trainer.py#L172
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/bonus_training/resnet_feat_trainer.py#L173
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat/visualizer.py#L210
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat/visualizer.py#L254
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat/generators/stylegan2-pytorch/convert_weight.py#L272
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat/generators/stylegan2-pytorch/generate.py#L20
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat/generators/stylegan2-pytorch/train.py#L276
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat2/visualizer.py#L219
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat2/visualizer.py#L271
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat2/generators/stylegan2-pytorch/convert_weight.py#L272
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat2/generators/stylegan2-pytorch/generate.py#L20
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat2/generators/stylegan2-pytorch/train.py#L276
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat3/visualizer.py#L217
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat3/visualizer.py#L269
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat3/generators/stylegan2-pytorch/convert_weight.py#L272
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat3/generators/stylegan2-pytorch/generate.py#L20
https://github.com/mattolson93/cross_gan_auditing/blob/b953a4c3d246993b3f4c5fdf7d9272b66a4fcf97/colat3/generators/stylegan2-pytorch/train.py#L276

=============================================
https://github.com/yizhiwang96/deepvecfont-v2
=============================================

Found 4 times
save_image(img_sample_merge, save_file_merge, nrow=8, normalize=True)
save_image(img_gt, save_file_gt, normalize=True)
save_image(img_sample, save_file, normalize=True)
save_image(img_sample, save_file, nrow=8, normalize=True)
https://github.com/yizhiwang96/deepvecfont-v2/blob/de5f6e290a570ac5fd0a5858d0e2df48ccc6c51c/test_few_shot.py#L58
https://github.com/yizhiwang96/deepvecfont-v2/blob/de5f6e290a570ac5fd0a5858d0e2df48ccc6c51c/test_few_shot.py#L63
https://github.com/yizhiwang96/deepvecfont-v2/blob/de5f6e290a570ac5fd0a5858d0e2df48ccc6c51c/test_few_shot.py#L67
https://github.com/yizhiwang96/deepvecfont-v2/blob/de5f6e290a570ac5fd0a5858d0e2df48ccc6c51c/train.py#L100

==========================================
https://github.com/linfengWen98/CAP-VSTNet
==========================================

Found 4 times
utils.make_grid(stylized.data, nrow=1, padding=0)
utils.make_grid(stylized.data, nrow=1, padding=0)
vutils.make_grid(image_tensor.data, nrow=display_image_num, padding=0, normalize=normalize)
vutils.save_image(image_grid, file_name, nrow=1)
https://github.com/linfengWen98/CAP-VSTNet/blob/cd7cbcc3c4acba2f758657554dbe70aff505b99b/image_transfer.py#L167
https://github.com/linfengWen98/CAP-VSTNet/blob/cd7cbcc3c4acba2f758657554dbe70aff505b99b/video_transfer.py#L211
https://github.com/linfengWen98/CAP-VSTNet/blob/cd7cbcc3c4acba2f758657554dbe70aff505b99b/utils/utils.py#L25
https://github.com/linfengWen98/CAP-VSTNet/blob/cd7cbcc3c4acba2f758657554dbe70aff505b99b/utils/utils.py#L26

============================================
https://github.com/MichalGeyer/plug-and-play
============================================

Found 4 times
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/MichalGeyer/plug-and-play/blob/4e7f703df5f5746011127f058e07ece415564910/ldm/models/diffusion/ddpm.py#L375
https://github.com/MichalGeyer/plug-and-play/blob/4e7f703df5f5746011127f058e07ece415564910/ldm/models/diffusion/ddpm.py#L540
https://github.com/MichalGeyer/plug-and-play/blob/4e7f703df5f5746011127f058e07ece415564910/ldm/models/diffusion/ddpm.py#L1310
https://github.com/MichalGeyer/plug-and-play/blob/4e7f703df5f5746011127f058e07ece415564910/ldm/modules/image_degradation/utils_image.py#L353

=================================
https://github.com/KU-CVLAB/LANIT
=================================

Found 1 times
vutils.save_image(x.cpu(), filename, nrow=ncol, padding=0)
https://github.com/KU-CVLAB/LANIT/blob/8d1dac310283ee13f2e6f1641c0b1b33e6f79265/core/utils.py#L199

=====================================
https://github.com/gwang-kim/DATID-3D
=====================================

Found 3 times
make_grid(result_imgs, nrow=1)
make_grid(result_imgs, nrow=1)
make_grid(np.stack([img_o, img_b, img_d.detach().cpu().numpy(), img_r.cpu().numpy()]))
https://github.com/gwang-kim/DATID-3D/blob/7339e85cdec74265b59b59ba47a51959b55e2f27/datid3d_gradio_app.py#L127
https://github.com/gwang-kim/DATID-3D/blob/7339e85cdec74265b59b59ba47a51959b55e2f27/datid3d_gradio_app.py#L216
https://github.com/gwang-kim/DATID-3D/blob/7339e85cdec74265b59b59ba47a51959b55e2f27/pose_estimation/nvdiffrast/samples/torch/cube.py#L146

=====================================
https://github.com/Kunhao-Liu/StyleRF
=====================================

Found 2 times
make_grid([rgbs_train.squeeze(), 
                                                        recon_rgb.clamp(0, 1).squeeze()],  
                                                        nrow=2, padding=0, normalize=False)
make_grid([denormalize_vgg(rgbs_train).squeeze(), \
                                                denormalize_vgg(rgb_map).clamp(0, 1).squeeze(), \
                                                TF.resize(style_img, (patch_size,patch_size)).squeeze()],  
                                                nrow=3, padding=0, normalize=False)
https://github.com/Kunhao-Liu/StyleRF/blob/1539433cdfd98a4fe57be52d77088687de2fbe15/train_feature.py#L270
https://github.com/Kunhao-Liu/StyleRF/blob/1539433cdfd98a4fe57be52d77088687de2fbe15/train_style.py#L275

=================================
https://github.com/iva-mzsun/MOSO
=================================

Found 1 times
make_grid(imgs_tensor, nrow=nrow, normalize=True)
https://github.com/iva-mzsun/MOSO/blob/c46943940f6dad3dfd0d8bc4ba230c78ee82d21d/MOSO-VQVAE/valid_dist.py#L42

=======================================
https://github.com/LeeDongYeun/FixNoise
=======================================

Found 1 times
make_grid(all_images, nrow=len(blend_weights), padding=5, pad_value=0.99999)
https://github.com/LeeDongYeun/FixNoise/blob/ce84b0cd4e8171b6f2126ad0d7f5587e6f7d5e38/generate.py#L63

====================================
https://github.com/qym7/CBDM-pytorch
====================================

Found 3 times
save_image(
        torch.tensor(images[:256]),
        os.path.join(FLAGS.logdir, 'visual_ema_{}_{}_{}.png'.format(
                                    FLAGS.sample_method, FLAGS.omega, FLAGS.sample_name)),
        nrow=16)
make_grid(x_0)
save_image(grid, path)
https://github.com/qym7/CBDM-pytorch/blob/94e201e06c9602f3fcccb0698e714284921c93de/main.py#L148
https://github.com/qym7/CBDM-pytorch/blob/94e201e06c9602f3fcccb0698e714284921c93de/main.py#L317
https://github.com/qym7/CBDM-pytorch/blob/94e201e06c9602f3fcccb0698e714284921c93de/main.py#L320

===============================
https://github.com/zyxElsa/InST
===============================

Found 9 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=opt.n_samples)
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/main.py#L346
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/main.py#L359
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/ldm/models/diffusion/ddpm.py#L387
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/ldm/models/diffusion/ddpm.py#L582
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/ldm/models/diffusion/ddpm.py#L1390
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/scripts/stable_txt2img.py#L274
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/scripts/stable_txt2style.py#L278
https://github.com/zyxElsa/InST/blob/1d56c9187baae273effa9b1de43d9f9795c7ca27/scripts/txt2img.py#L173

====================================
https://github.com/gnobitab/FlowGrad
====================================

Found 1 times
torchvision.utils.save_image(img.clamp_(0.0, 1.0), os.path.join(path), nrow=16, normalize=False)
https://github.com/gnobitab/FlowGrad/blob/0cc3717e51ce2810bc44f5755397d11a8c43989a/utils/flowgrad_utils.py#L152

=====================================
https://github.com/MrTornado24/Next3D
=====================================

Found 3 times
save_image(img, f'{outdir}/{i:08d}.png', normalize=True, range=(-1, 1))
torchvision.utils.make_grid(F.interpolate(visdict[key], [new_h, new_w]).detach().cpu())
torchvision.utils.make_grid(F.interpolate(visdict[key], [new_h, new_w]).detach().cpu())
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/evaluation.py#L78
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/dataset_preprocessing/ffhq/deca/decalib/deca.py#L286
https://github.com/MrTornado24/Next3D/blob/bdab84fc12cb61bd1002a3efb2c0a707a1139d97/dataset_preprocessing/ffhq/deca/decalib/utils/util.py#L697

============================================
https://github.com/CyberAgentAILab/layout-dm
============================================

Found 2 times
vutils.save_image(image, out_path, normalize=False, nrow=nrow)
vutils.make_grid(image, normalize=False, nrow=nrow)
https://github.com/CyberAgentAILab/layout-dm/blob/873b5eebe4c61862e5c08a10859accf65a168dfd/src/trainer/trainer/helpers/visualization.py#L108
https://github.com/CyberAgentAILab/layout-dm/blob/873b5eebe4c61862e5c08a10859accf65a168dfd/src/trainer/trainer/helpers/visualization.py#L112

==================================================
https://github.com/jcui1224/hierarchical-joint-ebm
==================================================

Found 2 times
vutils.save_image(x, path, normalize=True, nrow=nrow)
vutils.save_image(syn, args.save + f'/images/{global_step:>07d}.png', nrow=int(math.floor(math.sqrt(args.batch_size))), normalize=True)
https://github.com/jcui1224/hierarchical-joint-ebm/blob/26aeb1fbd4f1e17c59838c00852f4bc156d626df/joint-training/utils.py#L17
https://github.com/jcui1224/hierarchical-joint-ebm/blob/26aeb1fbd4f1e17c59838c00852f4bc156d626df/two-stage-training/ebms_train.py#L113

================================
https://github.com/JRyanShue/NFD
================================

Found 1 times
torchvision.utils.save_image(
            torch.from_numpy(image.copy()).permute(2, 0, 1),
            f"{root_dir}/view_{j}/{mesh_idx}.png")
https://github.com/JRyanShue/NFD/blob/189799efeed189e816594d8220c8c76c3a3a8d48/nfd/neural_field_diffusion/metrics/render_fid.py#L64

====================================
https://github.com/AiArt-HDU/MATEBIT
====================================

Found 6 times
save_image((out['fake_image'][it:it + 1] + 1) / 2, save_name, padding=0, normalize=False)
save_image((data_i['image'][it:it + 1] + 1) / 2, save_name, padding=0, normalize=False)
save_image((data_i['ref'][it:it + 1] + 1) / 2, save_name, padding=0, normalize=False)
save_image(label[it:it + 1], save_name, padding=0, normalize=False)
save_image(imgs, save_name, nrow=imgs_num, padding=0, normalize=True)
save_image(imgs, save_name, nrow=imgs_num, padding=0, normalize=True)
https://github.com/AiArt-HDU/MATEBIT/blob/92f9c53d3d3f5567d5e2c3d901811fe7e210bb8a/test.py#L67
https://github.com/AiArt-HDU/MATEBIT/blob/92f9c53d3d3f5567d5e2c3d901811fe7e210bb8a/test.py#L69
https://github.com/AiArt-HDU/MATEBIT/blob/92f9c53d3d3f5567d5e2c3d901811fe7e210bb8a/test.py#L71
https://github.com/AiArt-HDU/MATEBIT/blob/92f9c53d3d3f5567d5e2c3d901811fe7e210bb8a/test.py#L73
https://github.com/AiArt-HDU/MATEBIT/blob/92f9c53d3d3f5567d5e2c3d901811fe7e210bb8a/test.py#L80
https://github.com/AiArt-HDU/MATEBIT/blob/92f9c53d3d3f5567d5e2c3d901811fe7e210bb8a/train.py#L75

============================================
https://github.com/DarthSid95/SpiderStyleGAN
============================================

Found 4 times
make_grid(all_img, nrow = num_interps+1)
make_grid(all_z_org, nrow = num_interps+1)
make_grid(all_img, nrow = num_interps+1)
make_grid(all_z_img_org, nrow = num_interps+1)
https://github.com/DarthSid95/SpiderStyleGAN/blob/7884a70a00f8b24e5faef37661f6a782487f5253/interpol_images_grid.py#L283
https://github.com/DarthSid95/SpiderStyleGAN/blob/7884a70a00f8b24e5faef37661f6a782487f5253/interpol_images_grid.py#L284
https://github.com/DarthSid95/SpiderStyleGAN/blob/7884a70a00f8b24e5faef37661f6a782487f5253/interpol_noise_grid.py#L276
https://github.com/DarthSid95/SpiderStyleGAN/blob/7884a70a00f8b24e5faef37661f6a782487f5253/interpol_noise_grid.py#L277

===============================
https://github.com/baofff/U-ViT
===============================

Found 11 times
save_image(sample, os.path.join(config.output_path, f"{prompt}.png"))
make_grid(dataset.unpreprocess(samples), 10)
save_image(samples, os.path.join(config.sample_dir, f'{train_state.step}.png'))
make_grid(dataset.unpreprocess(samples), 10)
save_image(samples, os.path.join(config.sample_dir, f'{train_state.step}.png'))
make_grid(dataset.unpreprocess(samples), 10)
save_image(samples, os.path.join(config.sample_dir, f'{train_state.step}.png'))
make_grid(dataset.unpreprocess(samples), 5)
save_image(samples, os.path.join(config.sample_dir, f'{train_state.step}.png'))
save_image(sample, os.path.join(path, f"{idx}.png"))
save_image(out, f'recons_{fname}')
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/sample_t2i_discrete.py#L101
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train.py#L175
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train.py#L176
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train_ldm.py#L191
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train_ldm.py#L192
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train_ldm_discrete.py#L248
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train_ldm_discrete.py#L249
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train_t2i_discrete.py#L248
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/train_t2i_discrete.py#L249
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/utils.py#L166
https://github.com/baofff/U-ViT/blob/ce551708dc9cde9818d2af7d84dfadfeb7bd9034/libs/autoencoder.py#L515

==========================================
https://github.com/xiaoqian-shen/MoStGAN-V
==========================================

Found 2 times
utils.make_grid(fs, nrow=int(np.ceil(np.sqrt(num_videos))))
utils.make_grid(fs, nrow=int(np.sqrt(len(z))))
https://github.com/xiaoqian-shen/MoStGAN-V/blob/a2503eec6a256ce3bbb5e74decaa6eba4105edc2/src/scripts/frames_to_video_grid.py#L33
https://github.com/xiaoqian-shen/MoStGAN-V/blob/a2503eec6a256ce3bbb5e74decaa6eba4105edc2/src/training/logging.py#L76

==================================================================
https://github.com/zhshi0816/Video-Frame-Interpolation-Transformer
==================================================================

Found 1 times
utils.save_image(recovery_image[ind], './results/{}.png'.format(image_name[ind]))
https://github.com/zhshi0816/Video-Frame-Interpolation-Transformer/blob/2b1dc91f2da617ce1a7ea924262dc498e52a91cf/test.py#L61

==============================
https://github.com/Ugness/MeBT
==============================

Found 1 times
torchvision.utils.make_grid(images[k], nrow=4)
https://github.com/Ugness/MeBT/blob/72a6ee34beab49dd2dc6d9471d15b049037e49f0/mebt/modules/callbacks.py#L31

=========================================================
https://github.com/EliotChenKJ/Guided-Correspondence-Loss
=========================================================

Found 2 times
save_image(syn_img, f'outputs/{name}/scale_{scale}_{iteration+1}.jpg')
save_image(syn_img, f'outputs/{name}.jpg')
https://github.com/EliotChenKJ/Guided-Correspondence-Loss/blob/b3aa165d3dff568c38f937e2df5c21d912b6b502/single-image-editing/generate.py#L101
https://github.com/EliotChenKJ/Guided-Correspondence-Loss/blob/b3aa165d3dff568c38f937e2df5c21d912b6b502/single-image-editing/generate.py#L102

===================================
https://github.com/SizheAn/PanoHead
===================================

Found 10 times
utils.save_image(
            # (1-mask1)*img1,
            mask1,
            f'alphamse/changebg/mask1.png',
            nrow=8,
            normalize=True,
            range=(0, 1),
            padding=0,
        )
utils.save_image(
            mask0,
            f'alphamse/changebg/mask0.png',
            nrow=8,
            normalize=True,
            range=(0, 1),
            padding=0,
        )
utils.save_image(
            img0,
            f'alphamse/changebg/img0.png',
            nrow=8,
            normalize=True,
            range=(0, 1),
            padding=0,
        )
utils.save_image(
            img1,
            f'alphamse/changebg/img1.png',
            nrow=8,
            normalize=True,
            range=(0, 1),
            padding=0,
        )
utils.save_image(
            diff,
            f'alphamse/changebg/diff.png',
            nrow=8,
            normalize=True,
            range=(0, 1),
            padding=0,
        )
utils.save_image(
        image_final,
        os.path.join(outdir, f'img_interpolation_seed{seed1}_{seed2}.png'),
        # nrow=8,
        normalize=True,
        range=(0, 1),
        padding=0,
    )
tvu.make_grid(
                    torch.tensor(images[:16]),
                    nrow=min(4,int(math.ceil(images.shape[0] ** 0.5))),
                    normalize=True,
                    value_range=(-1,1),
                )
tvu.make_grid(
                    torch.tensor(images_raw[:16]),
                    nrow=min(4,int(math.ceil(images.shape[0] ** 0.5))),
                    normalize=True,
                    value_range=(-1,1),
                )
tvu.make_grid(
                    torch.tensor(images_depth[:16]),
                    nrow=min(4,int(math.ceil(images.shape[0] ** 0.5))),
                    normalize=True,
                    value_range=(images_depth.min(), images_depth.max()),
                )
tvu.make_grid(
                    torch.tensor(images_alpha[:16]),
                    nrow=min(4,int(math.ceil(images.shape[0] ** 0.5))),
                    normalize=True,
                    value_range=(0,1),
                )
https://github.com/SizheAn/PanoHead/blob/17ad915941c7e2703d5aa3eb5ff12eac47c90e53/calc_mbs.py#L182
https://github.com/SizheAn/PanoHead/blob/17ad915941c7e2703d5aa3eb5ff12eac47c90e53/calc_mbs.py#L191
https://github.com/SizheAn/PanoHead/blob/17ad915941c7e2703d5aa3eb5ff12eac47c90e53/calc_mbs.py#L199
https://github.com/SizheAn/PanoHead/blob/17ad915941c7e2703d5aa3eb5ff12eac47c90e53/calc_mbs.py#L207
https://github.com/SizheAn/PanoHead/blob/17ad915941c7e2703d5aa3eb5ff12eac47c90e53/calc_mbs.py#L215
https://github.com/SizheAn/PanoHead/blob/17ad915941c7e2703d5aa3eb5ff12eac47c90e53/gen_interpolation.py#L187
https://github.com/SizheAn/PanoHead/blob/17ad915941c7e2703d5aa3eb5ff12eac47c90e53/training/training_loop.py#L374
https://github.com/SizheAn/PanoHead/blob/17ad915941c7e2703d5aa3eb5ff12eac47c90e53/training/training_loop.py#L380
https://github.com/SizheAn/PanoHead/blob/17ad915941c7e2703d5aa3eb5ff12eac47c90e53/training/training_loop.py#L386
https://github.com/SizheAn/PanoHead/blob/17ad915941c7e2703d5aa3eb5ff12eac47c90e53/training/training_loop.py#L392

=================================================
https://github.com/timothybrooks/instruct-pix2pix
=================================================

Found 14 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=8)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/main.py#L374
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/main.py#L389
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/main.py#L312
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/main.py#L325
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/ldm/models/diffusion/ddpm.py#L374
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/ldm/models/diffusion/ddpm.py#L539
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/ldm/models/diffusion/ddpm.py#L1297
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/ldm/models/diffusion/ddpm_edit.py#L401
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/ldm/models/diffusion/ddpm_edit.py#L571
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/ldm/models/diffusion/ddpm_edit.py#L1311
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/scripts/img2img.py#L279
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/scripts/knn2img.py#L391
https://github.com/timothybrooks/instruct-pix2pix/blob/0dffd1eeb02611c35088462d1df88714ce2b52f4/stable_diffusion/scripts/txt2img.py#L336

=================================
https://github.com/Mid-Push/santa
=================================

Found 2 times
vutils.make_grid(image_tensor.data, nrow=display_image_num, padding=0, normalize=True)
vutils.save_image(image_grid, file_name, nrow=1)
https://github.com/Mid-Push/santa/blob/1983536ae575af5424fb2153f61d8c2c9fa800cc/util/util.py#L239
https://github.com/Mid-Push/santa/blob/1983536ae575af5424fb2153f61d8c2c9fa800cc/util/util.py#L240

==========================================
https://github.com/essunny310/FreestyleNet
==========================================

Found 6 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/essunny310/FreestyleNet/blob/5dcb8b84e150509456eaa5aeec09b505c7a6766f/main.py#L350
https://github.com/essunny310/FreestyleNet/blob/5dcb8b84e150509456eaa5aeec09b505c7a6766f/main.py#L363
https://github.com/essunny310/FreestyleNet/blob/5dcb8b84e150509456eaa5aeec09b505c7a6766f/ldm/models/diffusion/ddpm.py#L377
https://github.com/essunny310/FreestyleNet/blob/5dcb8b84e150509456eaa5aeec09b505c7a6766f/ldm/models/diffusion/ddpm.py#L545
https://github.com/essunny310/FreestyleNet/blob/5dcb8b84e150509456eaa5aeec09b505c7a6766f/ldm/models/diffusion/ddpm.py#L1306
https://github.com/essunny310/FreestyleNet/blob/5dcb8b84e150509456eaa5aeec09b505c7a6766f/ldm/modules/image_degradation/utils_image.py#L353

==========================================
https://github.com/ubc-vision/Make-A-Story
==========================================

Found 21 times
vutils.make_grid(torch.Tensor(frames).view(-1, 3, 64, 64), 1, padding=0)
vutils.make_grid(torch.Tensor(frames).view(-1, 3, 64, 64), 1, padding=0)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k][:,:,j])
torchvision.utils.make_grid(images[k], nrow=4)
torchvision.utils.make_grid(images[k][:,:,j], nrow=4)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(grid[i], nrow=12)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=opt.n_samples)
make_grid(grid[i], nrow=12)
make_grid(grid, nrow=opt.n_samples)
make_grid(grid[i], nrow=12)
make_grid(grid[i], nrow=12)
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/eval_backgound_classifier.py#L146
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/eval_char_classifier.py#L147
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main.py#L313
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main.py#L322
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main.py#L336
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main.py#L352
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main_ours.py#L312
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/main_ours.py#L325
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/ldm/models/diffusion/ddpm.py#L441
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/ldm/models/diffusion/ddpm.py#L453
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/ldm/models/diffusion/ddpm.py#L670
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/ldm/models/diffusion/ddpm.py#L1458
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/ldm/models/diffusion/ddpm_bk.py#L376
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/ldm/models/diffusion/ddpm_bk.py#L541
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/ldm/models/diffusion/ddpm_bk.py#L1299
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/scripts/txt2img.py#L158
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/scripts/txt2img_flintstone_multitxt.py#L174
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/scripts/txt2img_mugen.py#L158
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/scripts/txt2img_mugen_multitxt.py#L176
https://github.com/ubc-vision/Make-A-Story/blob/593ee0406b34516cc4cb15b1407449c73bfe4c50/scripts/txt2img_pororo_multitxt.py#L175

=============================
https://github.com/riiid/PPAP
=============================

Found 1 times
torchvision.utils.make_grid(utils.pil_list_to_torch_tensors(pil_images), nrow=nrow)
https://github.com/riiid/PPAP/blob/c0beec9bde6602ed3346e90f2aa1d9b703b8f6df/deepfloyd_if/modules/base.py#L429

=========================================
https://github.com/VinAIResearch/WaveDiff
=========================================

Found 10 times
torchvision.utils.save_image(
                x, '{}/{}.jpg'.format(save_dir, index))
torchvision.utils.save_image(
                        x, './generated_samples/{}/{}.jpg'.format(args.dataset, index))
torchvision.utils.save_image(
            fake_sample, './samples_{}.jpg'.format(args.dataset), nrow=8)
torchvision.utils.save_image(
                        x, '{}/{}.jpg'.format(save_dir, index))
torchvision.utils.save_image(
            fake_sample, './samples_{}.jpg'.format(args.dataset), nrow=8, padding=0)
torchvision.utils.save_image(x_pos_sample, os.path.join(
                    exp_path, 'xpos_epoch_{}.png'.format(epoch)), normalize=True)
torchvision.utils.save_image(fake_sample, os.path.join(
                exp_path, 'sample_discrete_epoch_{}.png'.format(epoch)), normalize=True)
torchvision.utils.save_image(x_pos_sample, os.path.join(
                    exp_path, 'xpos_epoch_{}.png'.format(epoch)), normalize=True)
torchvision.utils.save_image(fake_sample, os.path.join(
                exp_path, 'sample_discrete_epoch_{}.png'.format(epoch)))
torchvision.utils.save_image(
                real_data, os.path.join(exp_path, 'real_data.png'))
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/compute_dataset_stat.py#L47
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/test_ddgan.py#L224
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/test_ddgan.py#L240
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/test_wddgan.py#L118
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/test_wddgan.py#L144
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/train_ddgan.py#L420
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/train_ddgan.py#L426
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/train_wddgan.py#L245
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/train_wddgan.py#L268
https://github.com/VinAIResearch/WaveDiff/blob/b593ff8be6d128cd5b1b1bd2aa236990a840a5a0/train_wddgan.py#L270

==============================
https://github.com/FeiiYin/SPI
==============================

Found 5 times
utils.save_image(img, f"{output_dir}/{str(idx).zfill(3)}.jpg", nrow=1, normalize=True, scale_each=True, range=(-1, 1))
torchvision.utils.save_image(couple_output, os.path.join(out_path_results, f"{im_path}.jpg"), normalize=True, range=(-1, 1))
torchvision.utils.save_image(result_batch[0][i], os.path.join(out_path_results, f"{im_path}.jpg"), normalize=True, range=(-1, 1))
torchvision.utils.save_image(torch.cat([x.detach().cpu(), x_hat.detach().cpu()]), path,
									 normalize=True, scale_each=True, range=(-1, 1), nrow=self.opts.batch_size)
utils.save_image(
        images,
        os.path.join(output_dir, f"{file_prefix}_{str(iteration).zfill(6)}.jpg"),
        nrow=nrows,
        normalize=True,
        range=(-1, 1),
    )
https://github.com/FeiiYin/SPI/blob/f2bc63619a17451afc7d24f3ea5d5eca06d511ad/ZSSGAN/generate_videos.py#L92
https://github.com/FeiiYin/SPI/blob/f2bc63619a17451afc7d24f3ea5d5eca06d511ad/ZSSGAN/mapper/scripts/inference.py#L64
https://github.com/FeiiYin/SPI/blob/f2bc63619a17451afc7d24f3ea5d5eca06d511ad/ZSSGAN/mapper/scripts/inference.py#L66
https://github.com/FeiiYin/SPI/blob/f2bc63619a17451afc7d24f3ea5d5eca06d511ad/ZSSGAN/mapper/training/coach.py#L239
https://github.com/FeiiYin/SPI/blob/f2bc63619a17451afc7d24f3ea5d5eca06d511ad/ZSSGAN/utils/file_utils.py#L28

==========================================================
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement
==========================================================

Found 9 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/main.py#L312
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/main.py#L325
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/ldm/models/diffusion/ddpm.py#L374
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/ldm/models/diffusion/ddpm.py#L539
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/ldm/models/diffusion/ddpm.py#L1297
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/scripts/img2img.py#L279
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/scripts/knn2img.py#L391
https://github.com/UCSB-NLP-Chang/DiffusionDisentanglement/blob/8e7d6de811fddf473fad697a8ce5e781c30e8ef5/scripts/txt2img.py#L336

===========================================
https://github.com/JiauZhang/CoralStyleCLIP
===========================================

Found 2 times
utils.save_image(
                sample,
                f"sample/{str(i).zfill(6)}.png",
                nrow=1,
                normalize=True,
                range=(-1, 1),
            )
utils.save_image(
            images, f"sample/{str(epoch).zfill(6)}.png",
            nrow=args.batch, normalize=True, value_range=(-1, 1),
        )
https://github.com/JiauZhang/CoralStyleCLIP/blob/1e98788d99f4054cb4beff3d80aee969917c54a5/generate.py#L16
https://github.com/JiauZhang/CoralStyleCLIP/blob/1e98788d99f4054cb4beff3d80aee969917c54a5/train.py#L43

======================================================
https://github.com/man805/Diffusion-Video-Autoencoders
======================================================

Found 18 times
make_grid(x0_estimated_imgs)
make_grid(x0_estimated2_imgs)
save_image(x0_estimated_imgs, os.path.join(sample_dir, '%d_x0_estimated.png' % self.num_samples))
save_image(x0_estimated2_imgs, os.path.join(sample_dir, '%d_x0_estimated2.png' % self.num_samples))
make_grid(real)
save_image(grid_real, path)
make_grid(last_real)
save_image(grid_real, path)
make_grid(gen)
save_image(grid, path)
make_grid(gen_random)
save_image(grid, path)
make_grid(gen_decom)
save_image(grid, path)
torchvision.utils.save_image(
                        batch_images[j],
                        os.path.join(conf.generate_dir, f'{img_name}.png'))
torchvision.utils.save_image(
                            batch_images[j],
                            os.path.join(conf.generate_dir, f'{img_name}.png'))
torchvision.utils.save_image(
                            batch_images[j],
                            os.path.join(conf.generate_dir, f'{img_name}.png'))
torchvision.utils.save_image(imgs[j],
                                         os.path.join(path, f'{i+j}.png'))
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L427
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L428
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L434
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L435
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L499
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L509
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L511
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L517
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L521
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L528
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L531
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L534
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L538
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/experiment.py#L541
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/metrics.py#L245
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/metrics.py#L274
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/metrics.py#L317
https://github.com/man805/Diffusion-Video-Autoencoders/blob/64e5458c4f9cec2f5d8cad4bc60b90845c2b1122/metrics.py#L371

================================
https://github.com/chi0tzp/FALCO
================================

Found 1 times
torchvision.utils.make_grid(F.interpolate(visdict[key], [size, size]))
https://github.com/chi0tzp/FALCO/blob/67c6a3010d292c5e6fd0774e5234fd9c88ee7291/lib/deca/decalib/deca.py#L268

==========================================
https://github.com/guoqiang-zhang-x/LA-DPM
==========================================

Found 2 times
make_grid(samples_raw, nrow, padding=2)
save_image(image_grid, fout)
https://github.com/guoqiang-zhang-x/LA-DPM/blob/be1c5d18af68b06a6695da6080e95ae51b3c9ef4/LA-DEIS/run_lib.py#L229
https://github.com/guoqiang-zhang-x/LA-DPM/blob/be1c5d18af68b06a6695da6080e95ae51b3c9ef4/LA-DEIS/run_lib.py#L232

===============================
https://github.com/xuekt98/BBDM
===============================

Found 2 times
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(batch, nrow=grid_size)
https://github.com/xuekt98/BBDM/blob/4be731ad1026b7e882c4a7e9c9f223a54f5fc4a3/model/BrownianBridge/base/modules/image_degradation/utils_image.py#L353
https://github.com/xuekt98/BBDM/blob/4be731ad1026b7e882c4a7e9c9f223a54f5fc4a3/runners/utils.py#L80

===============================================
https://github.com/ximinng/VectorFusion-pytorch
===============================================

Found 4 times
make_grid(pt_img, normalize=True, pad_value=2)
make_grid(photos, normalize=True, pad_value=2)
make_grid(sketch, normalize=False, pad_value=2)
make_grid(inputs, normalize=norm, pad_value=2)
https://github.com/ximinng/VectorFusion-pytorch/blob/3889e0d1d404ecef00dfee60d2fcedcf6c9c2fc7/libs/modules/visual/imshow.py#L53
https://github.com/ximinng/VectorFusion-pytorch/blob/3889e0d1d404ecef00dfee60d2fcedcf6c9c2fc7/methods/painter/vectorfusion/utils.py#L31
https://github.com/ximinng/VectorFusion-pytorch/blob/3889e0d1d404ecef00dfee60d2fcedcf6c9c2fc7/methods/painter/vectorfusion/utils.py#L38
https://github.com/ximinng/VectorFusion-pytorch/blob/3889e0d1d404ecef00dfee60d2fcedcf6c9c2fc7/methods/painter/vectorfusion/utils.py#L63

======================================================================================
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications
======================================================================================

Found 12 times
make_grid(dataloader.denormalize(torch.concat(decodings_evolution)), nrow=3)
make_grid(dataloader.denormalize(recons))
make_grid(dataloader.denormalize(xz_hat))
make_grid(dataloader.denormalize(x))
make_grid(dataloader.denormalize(x_hat))
make_grid(rdataloader.denormalize(rx))
make_grid(fdataloader.denormalize(fx))
make_grid(batch, nrow=int(batch.shape[0]/nrows), padding=2, normalize=True)
make_grid(norm_func(endpts[0]["x"]), nrow=1)
make_grid(norm_func(endpts[1]["x"]), nrow=1)
make_grid(interps, nrow=ninterps)
make_grid(decodings, nrow=num)
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/gen_model_validity.py#L132
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/gen_model_validity.py#L177
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/train.py#L168
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/train.py#L171
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/train.py#L172
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/train_validator.py#L144
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/train_validator.py#L145
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/visualizations.py#L55
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/visualizations.py#L386
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/visualizations.py#L387
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/visualizations.py#L400
https://github.com/hh10/Efficient-Verification-of-NNs-against-LVM-based-Specifications/blob/5f34765310e1e577603cfb3418a1818c32704b9d/visualizations.py#L413

==================================
https://github.com/zjc062/mind-vis
==================================

Found 5 times
make_grid(grid, nrow=num_samples+1)
make_grid(grid, nrow=num_samples+1)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
https://github.com/zjc062/mind-vis/blob/08d53868fe7471f01dddc560b8e877ba4375d229/code/dc_ldm/ldm_for_fmri.py#L163
https://github.com/zjc062/mind-vis/blob/08d53868fe7471f01dddc560b8e877ba4375d229/code/dc_ldm/models/diffusion/ddpm.py#L425
https://github.com/zjc062/mind-vis/blob/08d53868fe7471f01dddc560b8e877ba4375d229/code/dc_ldm/models/diffusion/ddpm.py#L516
https://github.com/zjc062/mind-vis/blob/08d53868fe7471f01dddc560b8e877ba4375d229/code/dc_ldm/models/diffusion/ddpm.py#L718
https://github.com/zjc062/mind-vis/blob/08d53868fe7471f01dddc560b8e877ba4375d229/code/dc_ldm/models/diffusion/ddpm.py#L1349

====================================
https://github.com/HengCai-NJU/DeSCO
====================================

Found 6 times
make_grid(image, 5, normalize=True)
make_grid(image, 5, normalize=False)
make_grid(utils.decode_seg_map_sequence(image.data.cpu().numpy()), 5, normalize=False)
make_grid(image, 5, normalize=True)
make_grid(image, 5, normalize=False)
make_grid(utils.decode_seg_map_sequence(image.data.cpu().numpy()), 5, normalize=False)
https://github.com/HengCai-NJU/DeSCO/blob/d3f08527e11464867eac5ecba2fa8f36b3b540f5/code/train_desco.py#L311
https://github.com/HengCai-NJU/DeSCO/blob/d3f08527e11464867eac5ecba2fa8f36b3b540f5/code/train_desco.py#L317
https://github.com/HengCai-NJU/DeSCO/blob/d3f08527e11464867eac5ecba2fa8f36b3b540f5/code/train_desco.py#L321
https://github.com/HengCai-NJU/DeSCO/blob/d3f08527e11464867eac5ecba2fa8f36b3b540f5/code/train_desco.py#L325
https://github.com/HengCai-NJU/DeSCO/blob/d3f08527e11464867eac5ecba2fa8f36b3b540f5/code/train_desco.py#L331
https://github.com/HengCai-NJU/DeSCO/blob/d3f08527e11464867eac5ecba2fa8f36b3b540f5/code/train_desco.py#L335

==================================
https://github.com/dair-iitd/DeGPR
==================================

Found 14 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
make_grid(dog_list)
utils.make_grid(t, normalize=False)
utils.make_grid(t, normalize=True, scale_each=False)
utils.make_grid(t, normalize=True, scale_each=True)
utils.make_grid(t, normalize=True)
utils.save_image(t, f.name)
utils.save_image(t, f.name)
utils.save_image(t, f.name)
utils.save_image(t, fp, format="png")
utils.save_image(t, f.name)
utils.save_image(t, fp, format="png")
make_grid(tensor, **kwargs)
make_grid(self.view(-1, *self.shape[-3:]))
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/efficientdet/train.py#L910
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/gallery/plot_visualization_utils.py#L48
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/test/test_utils.py#L27
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/test/test_utils.py#L30
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/test/test_utils.py#L33
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/test/test_utils.py#L42
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/test/test_utils.py#L59
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/test/test_utils.py#L67
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/test/test_utils.py#L75
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/test/test_utils.py#L78
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/test/test_utils.py#L87
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/test/test_utils.py#L90
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/torchvision/utils.py#L156
https://github.com/dair-iitd/DeGPR/blob/cd2b65cdbfc9d54c7a8af1f8291be83e93261f84/Detection/faster_rcnn/vision/torchvision/prototype/features/_image.py#L106

===========================================
https://github.com/SteffenCzolbe/neuralizer
===========================================

Found 1 times
torchvision.utils.make_grid(tensor[:, [0]], padding=0)
https://github.com/SteffenCzolbe/neuralizer/blob/9342528b0b186b60a34e8c760cb4b51160ddaf74/neuralizer/util/utils.py#L42

============================================
https://github.com/Nithin-GK/UniteandConquer
============================================

Found 2 times
make_grid(sample, nrow=8)
make_grid(tensor, nrow=int(
            math.sqrt(n_img)), normalize=False)
https://github.com/Nithin-GK/UniteandConquer/blob/b331416680aed3e287170899d714765527bc5474/guided_diffusion/diffusion_test.py#L25
https://github.com/Nithin-GK/UniteandConquer/blob/b331416680aed3e287170899d714765527bc5474/utils/metrics.py#L20

====================================
https://github.com/XYPB/CondFoleyGen
====================================

Found 10 times
torchvision.utils.make_grid(images[k]['feature'].unsqueeze(1).permute(0, 1, 3, 2), nrow=1, normalize=True)
torchvision.utils.make_grid(self._visualize_attention(images[k]), nrow=H, normalize=True)
torchvision.utils.make_grid(images[k].unsqueeze(1).permute(0, 1, 3, 2), nrow=1, normalize=True)
torchvision.utils.make_grid(images[k].flip(dims=(2,)), nrow=1)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k]['feature'].unsqueeze(1).permute(0, 1, 3, 2), nrow=1, normalize=True)
torchvision.utils.make_grid(self._visualize_attention(images[k]), nrow=H, normalize=True)
torchvision.utils.make_grid(images[k].unsqueeze(1).permute(0, 1, 3, 2), nrow=1, normalize=True)
torchvision.utils.make_grid(images[k].flip(dims=(2,)), nrow=1)
torchvision.utils.make_grid(images[k], nrow=4)
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L625
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L630
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L632
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L636
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L641
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L669
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L674
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L676
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L680
https://github.com/XYPB/CondFoleyGen/blob/c565db7a7c84c32e8bf53d3a33c095803f6165b9/train.py#L682

==========================================
https://github.com/postech-ami/Sound2Scene
==========================================

Found 6 times
make_grid(gen_img, normalize=True, scale_each=True, nrow=8)
save_image(output.cpu(), save_final)
make_grid(output, normalize=True, scale_each=True, nrow=8)
torchvision.utils.save_image(
            out_ims, image_filename, nrow=samples_per_class, normalize=True
        )
torchvision.utils.save_image(
        out_ims, image_filename, nrow=num_midpoints + 2, normalize=True
    )
save_image(images, filename, scale_each=True, normalize=True)
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/test.py#L108
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/test.py#L152
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/train.py#L98
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/BigGAN_PyTorch/utils.py#L1493
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/BigGAN_PyTorch/utils.py#L1562
https://github.com/postech-ami/Sound2Scene/blob/6095e382dd186fbc2740904cf9fb115c7a120a08/BigGAN_PyTorch/TFHub/converter.py#L478

===================================
https://github.com/kodenii/NUWA-LIP
===================================

Found 1 times
utils.save_image(data, filename, **kwargs)
https://github.com/kodenii/NUWA-LIP/blob/825f7843446a5132cf84f281cca3dc5a29a0747b/wutils.py#L567

=========================================================
https://github.com/OpenDriveLab/Birds-eye-view-Perception
=========================================================

Found 6 times
make_grid(tensor, pad_value=pad_value, normalize=False)
torchvision.utils.save_image(torch.tensor(tensor).permute(2, 0, 1), path)
make_grid(tensor, pad_value=pad_value, normalize=normalize)
torchvision.utils.save_image(torch.tensor(tensor).permute(2, 0, 1), path)
make_grid(tensor, pad_value=pad_value, normalize=False)
torchvision.utils.save_image(torch.tensor(tensor).permute(2, 0, 1), path)
https://github.com/OpenDriveLab/Birds-eye-view-Perception/blob/a0b2d7296d331a1a113ba3d6747a59e503115523/nuScenes_playground/FocalDistiller/projects/mmdet3d_plugin/models/utils/visual.py#L22
https://github.com/OpenDriveLab/Birds-eye-view-Perception/blob/a0b2d7296d331a1a113ba3d6747a59e503115523/nuScenes_playground/FocalDistiller/projects/mmdet3d_plugin/models/utils/visual.py#L23
https://github.com/OpenDriveLab/Birds-eye-view-Perception/blob/a0b2d7296d331a1a113ba3d6747a59e503115523/nuScenes_playground/VCD/mmdet3d/models/detectors/vcd.py#L38
https://github.com/OpenDriveLab/Birds-eye-view-Perception/blob/a0b2d7296d331a1a113ba3d6747a59e503115523/nuScenes_playground/VCD/mmdet3d/models/detectors/vcd.py#L39
https://github.com/OpenDriveLab/Birds-eye-view-Perception/blob/a0b2d7296d331a1a113ba3d6747a59e503115523/waymo_playground/projects/mmdet3d_plugin/models/utils/visual.py#L30
https://github.com/OpenDriveLab/Birds-eye-view-Perception/blob/a0b2d7296d331a1a113ba3d6747a59e503115523/waymo_playground/projects/mmdet3d_plugin/models/utils/visual.py#L31

=====================================
https://github.com/yujheli/Pitt-Radar
=====================================

Found 6 times
utils.make_grid(image, nrow=3, padding=5)
utils.save_image(image, out_path + 'epoch_%d_index_%d_%.4f.png' % (epoch, index, valing_results['mse_eval']), padding=5)
utils.make_grid(image, nrow=3, padding=5)
utils.save_image(image, out_path + 'epoch_%d_index_%d_%.4f.png' % (epoch, index, valing_results['mse_eval']), padding=5)
utils.make_grid(image, nrow=3, padding=5)
utils.save_image(image, out_path + 'epoch_%d_index_%d_%.4f.png' % (epoch, index, valing_results['mse_eval']), padding=5)
https://github.com/yujheli/Pitt-Radar/blob/1260b190e8e4f81654841a39e20d4d02b72238a4/code/train_ADC_SR.py#L369
https://github.com/yujheli/Pitt-Radar/blob/1260b190e8e4f81654841a39e20d4d02b72238a4/code/train_ADC_SR.py#L370
https://github.com/yujheli/Pitt-Radar/blob/1260b190e8e4f81654841a39e20d4d02b72238a4/code/train_Hybrid_SR.py#L486
https://github.com/yujheli/Pitt-Radar/blob/1260b190e8e4f81654841a39e20d4d02b72238a4/code/train_Hybrid_SR.py#L487
https://github.com/yujheli/Pitt-Radar/blob/1260b190e8e4f81654841a39e20d4d02b72238a4/code/train_RAD_SR.py#L362
https://github.com/yujheli/Pitt-Radar/blob/1260b190e8e4f81654841a39e20d4d02b72238a4/code/train_RAD_SR.py#L363

====================================
https://github.com/zzj403/BEV_Robust
====================================

Found 3 times
save_image(patched_img_tensor_ncam, os.path.join(patch_save_dir, str(data_i)+'.png'))
save_image(patched_img_tensor_ncam, os.path.join(scattered_result_dir, str(data_i)+'.png'))
save_image(patched_img_tensor_ncam, os.path.join(scattered_result_dir, str(data_i_actual)+'.png'))
https://github.com/zzj403/BEV_Robust/blob/5a83a6e0d8d93c4d2c458d8580e42d24417e4b6b/apis_common/test_patch_class.py#L141
https://github.com/zzj403/BEV_Robust/blob/5a83a6e0d8d93c4d2c458d8580e42d24417e4b6b/apis_common/test_patch_overlap.py#L179
https://github.com/zzj403/BEV_Robust/blob/5a83a6e0d8d93c4d2c458d8580e42d24417e4b6b/apis_common/test_patch_temporal.py#L313

===========================================
https://github.com/thu-ml/3D_Corruptions_AD
===========================================

Found 54 times
save_image([flare_image_save, mainflare_mask_lidar_point_save, mainflare_mask_lidar_point_noise_save], padding=0, pad_value=255., nrow=1, fp=file_path)
save_image(flare_image_save, padding=0, pad_value=255., nrow=1, fp=file_path)
save_image([canvas_tensor, target_image], nrow=1, fp=file_path)
save_image([canvas_tensor, image_tensor], nrow=1, fp=file_path)
save_image([canvas_tensor, target_image], nrow=1, fp=file_path)
save_image([canvas_tensor, image_tensor], nrow=1, fp=file_path)
save_image([mask_bool_float_tensor, images_aug_tensor], nrow=1, fp=file_path)
save_image([mask_bool_float_tensor, images_aug_tensor], nrow=1, fp=file_path)
save_image([mask_bool_float_tensor, images_aug_tensor], nrow=1, fp=file_path)
save_image([mask_bool_float_tensor, images_aug_tensor], nrow=1, fp=file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug).permute(2,0,1).float() /255., file_path)
save_image([flare_image_save, mainflare_mask_lidar_point_save, mainflare_mask_lidar_point_noise_save], padding=0, pad_value=255., nrow=1, fp=file_path)
save_image(flare_image_save, padding=0, pad_value=255., nrow=1, fp=file_path)
save_image([canvas_tensor, target_image], nrow=1, fp=file_path)
save_image([canvas_tensor, image_tensor], nrow=1, fp=file_path)
save_image([canvas_tensor, target_image], nrow=1, fp=file_path)
save_image([canvas_tensor, image_tensor], nrow=1, fp=file_path)
save_image([mask_bool_float_tensor, images_aug_tensor], nrow=1, fp=file_path)
save_image([mask_bool_float_tensor, images_aug_tensor], nrow=1, fp=file_path)
save_image([mask_bool_float_tensor, images_aug_tensor], nrow=1, fp=file_path)
save_image([mask_bool_float_tensor, images_aug_tensor], nrow=1, fp=file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug).permute(2,0,1).float() /255., file_path)
save_image([flare_image_save, mainflare_mask_lidar_point_save, mainflare_mask_lidar_point_noise_save], padding=0, pad_value=255., nrow=1, fp=file_path)
save_image(flare_image_save, padding=0, pad_value=255., nrow=1, fp=file_path)
save_image([canvas_tensor, target_image], nrow=1, fp=file_path)
save_image([canvas_tensor, image_tensor], nrow=1, fp=file_path)
save_image([canvas_tensor, target_image], nrow=1, fp=file_path)
save_image([canvas_tensor, image_tensor], nrow=1, fp=file_path)
save_image([mask_bool_float_tensor, images_aug_tensor], nrow=1, fp=file_path)
save_image([mask_bool_float_tensor, images_aug_tensor], nrow=1, fp=file_path)
save_image([mask_bool_float_tensor, images_aug_tensor], nrow=1, fp=file_path)
save_image([mask_bool_float_tensor, images_aug_tensor], nrow=1, fp=file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug_rgb_255).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug).permute(2,0,1).float() /255., file_path)
save_image(torch.from_numpy(image_aug).permute(2,0,1).float() /255., file_path)
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L173
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L263
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L365
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L367
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L473
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L475
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L1149
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L1235
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L1329
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L1386
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L1412
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L1473
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L1494
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L1516
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L1535
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L1582
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L1618
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/Camera_corruptions.py#L1674
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L173
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L263
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L365
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L367
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L473
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L475
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L1149
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L1235
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L1329
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L1386
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L1412
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L1473
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L1494
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L1516
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L1535
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L1582
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L1618
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/OpenPCDet/OpenPCDet/pcdet/datasets/kitti/Camera_corruptions.py#L1674
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L173
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L263
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L365
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L367
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L473
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L475
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L1149
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L1235
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L1329
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L1386
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L1412
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L1473
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L1494
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L1516
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L1535
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L1582
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L1618
https://github.com/thu-ml/3D_Corruptions_AD/blob/6316eabc2497570406abe8e1fccccb98b8744b95/TransFusion/mmdet3d/datasets/pipelines/Camera_corruptions.py#L1674

==============================
https://github.com/zlw9161/PKC
==============================

Found 4 times
make_grid(transform_masks_viz(rd_pred_masks,
                                                                         self.nb_classes))
make_grid(transform_masks_viz(ra_pred_masks,
                                                                         self.nb_classes))
make_grid(transform_masks_viz(rd_gt_masks,
                                                                       self.nb_classes))
make_grid(transform_masks_viz(ra_gt_masks,
                                                                       self.nb_classes))
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/learners/tester.py#L166
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/learners/tester.py#L168
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/learners/tester.py#L170
https://github.com/zlw9161/PKC/blob/263342b15a8afaf458915d50ae8f5bffec9b75ed/mvrss/learners/tester.py#L172

================================
https://github.com/Len-Li/Lift3D
================================

Found 2 times
utils.save_image(semantic_out, "test_out/sem_%04d.jpg" % curr_pose_id)
utils.save_image(rgb_out, "test_out/rgb_%04d.jpg" % curr_pose_id)
https://github.com/Len-Li/Lift3D/blob/05c76439ea82b316278ac877a98b396680fecc24/infer.py#L114
https://github.com/Len-Li/Lift3D/blob/05c76439ea82b316278ac877a98b396680fecc24/infer.py#L115

===================================
https://github.com/NVlabs/VoxFormer
===================================

Found 1 times
vutils.make_grid(value, padding=0, nrow=1, normalize=True, scale_each=True)
https://github.com/NVlabs/VoxFormer/blob/63da92415447c2e97654bad977254c907f5ce703/preprocess/mobilestereonet/utils/experiment.py#L84

==========================================================
https://github.com/yu-takagi/StableDiffusionReconstruction
==========================================================

Found 17 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/main.py#L312
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/main.py#L325
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/ldm/models/diffusion/ddpm.py#L374
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/ldm/models/diffusion/ddpm.py#L539
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/ldm/models/diffusion/ddpm.py#L1297
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/scripts/img2img.py#L279
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/scripts/knn2img.py#L391
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd1/stable-diffusion/scripts/txt2img.py#L336
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd2/stablediffusion/ldm/models/diffusion/ddpm.py#L471
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd2/stablediffusion/ldm/models/diffusion/ddpm.py#L650
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd2/stablediffusion/ldm/models/diffusion/ddpm.py#L1199
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd2/stablediffusion/ldm/models/diffusion/ddpm.py#L1443
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd2/stablediffusion/ldm/models/diffusion/ddpm.py#L1605
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd2/stablediffusion/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd2/stablediffusion/scripts/img2img.py#L266
https://github.com/yu-takagi/StableDiffusionReconstruction/blob/e187d4b3db1d647ee3e1b4256a2068ffd15df683/codes/diffusion_sd2/stablediffusion/scripts/txt2img.py#L373

===========================================
https://github.com/YizhuoChen99/KD4DGM-CVPR
===========================================

Found 4 times
vutils.save_image(fake.data[j],
                                      saveFolder + giveName(iter) + ".png")
vutils.save_image(img[j], saveFolder + giveName(iter) + ".png")
vutils.save_image(fake.data[j],
                                  saveFolder + giveName(iter) + ".png")
vutils.save_image(img[j], saveFolder + giveName(iter) + ".png")
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/compressVAE/helpers/metrics_image.py#L41
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/compressVAE/helpers/metrics_image.py#L64
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/continualVAE/helpers/metrics_image.py#L41
https://github.com/YizhuoChen99/KD4DGM-CVPR/blob/267a0879a753160d45cbb8edc8b18f6f7cd4ebe1/continualVAE/helpers/metrics_image.py#L64

===========================================
https://github.com/michaeltrs/DeepSatModels
===========================================

Found 10 times
save_image(torch.from_numpy(label_mask), os.path.join(save_dir, 'label_masks.png'), nrow=NROW, normalize=True)
save_image(boi, os.path.join(save_dir, 'inputs.png'), nrow=NROW, normalize=True)
save_image(torch.from_numpy(disp_targets), os.path.join(save_dir, 'targets.png'), nrow=NROW, normalize=True)
save_image(torch.from_numpy(disp_preds), os.path.join(save_dir, 'preds.png'), nrow=NROW, normalize=True)
save_image(torch.from_numpy(disp_preds_w_mask), os.path.join(save_dir, 'preds_w_masks.png'), nrow=NROW, normalize=True)
make_grid(torch.from_numpy(label_mask), nrow=NROW, normalize=True, padding=8, pad_value=255)
make_grid(boi, nrow=NROW, normalize=True, padding=8, pad_value=255)
make_grid(torch.from_numpy(disp_targets), nrow=NROW, normalize=True, padding=8, pad_value=255)
make_grid(torch.from_numpy(disp_preds), nrow=NROW, normalize=True, padding=8, pad_value=255)
make_grid(torch.from_numpy(disp_preds_w_mask), nrow=NROW, normalize=True, padding=8, pad_value=255)
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/models/CropTypeMapping/visualize.py#L156
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/models/CropTypeMapping/visualize.py#L157
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/models/CropTypeMapping/visualize.py#L158
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/models/CropTypeMapping/visualize.py#L159
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/models/CropTypeMapping/visualize.py#L160
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/models/CropTypeMapping/visualize.py#L163
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/models/CropTypeMapping/visualize.py#L164
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/models/CropTypeMapping/visualize.py#L165
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/models/CropTypeMapping/visualize.py#L166
https://github.com/michaeltrs/DeepSatModels/blob/d39c45567b384f1c11f2308c6d6b595ea66bb45d/models/CropTypeMapping/visualize.py#L167

============================================
https://github.com/renjiaoyi/imagerelighting
============================================

Found 2 times
save_image(rendered.detach().cpu().float(),"{}/{}_".format(save_dir, name) + dat[0:-4]+".png")
save_image(rendered.detach().cpu().float(),"{}/{}_".format(output, i) + dat[0:-4]+".png")
https://github.com/renjiaoyi/imagerelighting/blob/35e471c88433ef7418cfa586e5616ebc84575b88/Relighting/render_script.py#L237
https://github.com/renjiaoyi/imagerelighting/blob/35e471c88433ef7418cfa586e5616ebc84575b88/Relighting/render_video.py#L233

===============================
https://github.com/yhw-yhw/MIME
===============================

Found 1 times
vutils.make_grid(img, padding=0, nrow=1, normalize=True, scale_each=True)
https://github.com/yhw-yhw/MIME/blob/ad7711f21a64eb541ffc6fa951dee25950148a66/thirdparty/MOVER_light/sub_thirdparty/body_models/video_smplifyx/tf_utils.py#L101

====================================
https://github.com/lyclyc52/NeRF_RPN
====================================

Found 14 times
torchvision.utils.make_grid(images_train["rgbs"], nrow=1)
torchvision.utils.make_grid(images_train["target_rgbs"], nrow=1)
torchvision.utils.make_grid(images_train["depths"], nrow=1)
torchvision.utils.make_grid(images_train["target_depths"], nrow=1)
torchvision.utils.make_grid(images_val["rgbs"], nrow=1)
torchvision.utils.make_grid(images_val["rgbs0"], nrow=1)
torchvision.utils.make_grid(images_val["target_rgbs"], nrow=1)
torchvision.utils.make_grid(images_val["depths"], nrow=1)
torchvision.utils.make_grid(images_val["depths0"], nrow=1)
torchvision.utils.make_grid(images_val["target_depths"], nrow=1)
torchvision.utils.make_grid(images_val["rgbs"], nrow=1)
torchvision.utils.make_grid(images_val["target_rgbs"], nrow=1)
torchvision.utils.make_grid(images_val["depths"], nrow=1)
torchvision.utils.make_grid(images_val["target_depths"], nrow=1)
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L878
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L879
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L880
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L881
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L896
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L897
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L898
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L899
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L900
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L901
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L904
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L905
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L906
https://github.com/lyclyc52/NeRF_RPN/blob/faecb1f067261fbac4b8414657c38a8e8d2afca7/data/scannet/run_nerf.py#L907

=====================================
https://github.com/jamycheung/DELIVER
=====================================

Found 1 times
make_grid(images, nrow=4)
https://github.com/jamycheung/DELIVER/blob/b00b30b3cddf1a502ad187979f648b07a6019940/semseg/utils/visualize.py#L40

===================================
https://github.com/anurag-198/WDASS
===================================

Found 1 times
vutils.make_grid(
                    imgs_to_tensorboard, nrow=num_per_row, padding=5)
https://github.com/anurag-198/WDASS/blob/9067e7d452e7164b24d9e3d25f3c787ddc393c7d/utils/misc.py#L421

===============================
https://github.com/IVRL/Tempsal
===============================

Found 1 times
utils.make_grid(tensor, nrow=nrow, padding=padding, pad_value=pad_value,
                     normalize=normalize, range=range, scale_each=scale_each)
https://github.com/IVRL/Tempsal/blob/cdf0f640819b270106310502508dd69ba0751c72/src/utils.py#L125

=====================================
https://github.com/haoai-1997/HRDFuse
=====================================

Found 6 times
vutils.make_grid(rgb[:2, [2, 1, 0], :, :].data, nrow=4, normalize=True)
vutils.make_grid(depth[:2, ...].data, nrow=4, normalize=False)
vutils.make_grid(equi_depth_outputs[:2, ...].data, nrow=4, normalize=False)
vutils.make_grid(local_depth_outputs[:2, ...].data, nrow=4, normalize=False)
vutils.make_grid(global_depth_outputs[:2, ...].data, nrow=4, normalize=False)
vutils.make_grid(error[:2, ...].data, nrow=4, normalize=False)
https://github.com/haoai-1997/HRDFuse/blob/86bf21acbdb3dd10f0a4f2984296df4645976b32/train_fusion.py#L395
https://github.com/haoai-1997/HRDFuse/blob/86bf21acbdb3dd10f0a4f2984296df4645976b32/train_fusion.py#L397
https://github.com/haoai-1997/HRDFuse/blob/86bf21acbdb3dd10f0a4f2984296df4645976b32/train_fusion.py#L400
https://github.com/haoai-1997/HRDFuse/blob/86bf21acbdb3dd10f0a4f2984296df4645976b32/train_fusion.py#L403
https://github.com/haoai-1997/HRDFuse/blob/86bf21acbdb3dd10f0a4f2984296df4645976b32/train_fusion.py#L406
https://github.com/haoai-1997/HRDFuse/blob/86bf21acbdb3dd10f0a4f2984296df4645976b32/train_fusion.py#L408

===========================================
https://github.com/NVlabs/mask-auto-labeler
===========================================

Found 2 times
torchvision.utils.make_grid(img, normalize=True, scale_each=True)
torchvision.utils.save_image(torchvision.utils.make_grid(img, normalize=True, scale_each=True), os.path.join(args.output_dir, "img{}.png".format(image_idx)))
https://github.com/NVlabs/mask-auto-labeler/blob/0ab9be4fe6b17f3e21b5829f88db001ef2bd665c/tools/visualize_attention.py#L153
https://github.com/NVlabs/mask-auto-labeler/blob/0ab9be4fe6b17f3e21b5829f88db001ef2bd665c/tools/visualize_attention.py#L153

============================================
https://github.com/MingXiangL/AttentionShift
============================================

Found 2 times
vutils.save_image(real_cpu,
                    '%s/real_samples.png' % opt.outf,
                    normalize=True)
vutils.save_image(fake.detach(),
                    '%s/amp_fake_samples_epoch_%03d.png' % (opt.outf, epoch),
                    normalize=True)
https://github.com/MingXiangL/AttentionShift/blob/f655a04ad64281e3eef48d4e6229bf06dae161f4/apex-master/examples/dcgan/main_amp.py#L262
https://github.com/MingXiangL/AttentionShift/blob/f655a04ad64281e3eef48d4e6229bf06dae161f4/apex-master/examples/dcgan/main_amp.py#L266

=================================
https://github.com/JiahuiLei/EFEM
=================================

Found 1 times
save_image(data, out_file, nrow=4)
https://github.com/JiahuiLei/EFEM/blob/5f10102df4e6e1be5e5d33c79e2b0572ed0391d2/lib_shape_prior/core/models/utils/occnet_utils/utils/visualize.py#L19

===================================
https://github.com/ChunmingHe/FEDER
===================================

Found 3 times
make_grid(images[0].clone().cpu().data, 1, normalize=True)
make_grid(gts[0].clone().cpu().data, 1, normalize=True)
make_grid(edges[0].clone().cpu().data, 1, normalize=True)
https://github.com/ChunmingHe/FEDER/blob/fac6b2a46ec8f7603d0ef3573694a47fea80ee41/Train.py#L85
https://github.com/ChunmingHe/FEDER/blob/fac6b2a46ec8f7603d0ef3573694a47fea80ee41/Train.py#L87
https://github.com/ChunmingHe/FEDER/blob/fac6b2a46ec8f7603d0ef3573694a47fea80ee41/Train.py#L89

=====================================
https://github.com/clovaai/PointWSSIS
=====================================

Found 1 times
save_image(random_image, f.name)
https://github.com/clovaai/PointWSSIS/blob/bd3156e3866ac9131187f50cd0ee0cd0c2513589/detectron2/projects/DensePose/tests/test_image_list_dataset.py#L19

================================
https://github.com/fudan-zvg/GSS
================================

Found 2 times
save_image(torch.cat([
                map_pixels(self.encode_to_segmap(gt_semantic_seg) / 255.0),  # gt
                torch.Tensor.repeat(F.interpolate(gt_semantic_seg_indices.float() / 8192.0,
                                                  size=gt_semantic_seg.shape[-2:]), 3, 1, 1, 1, 1).squeeze(2).permute(1, 0, 2, 3)
                ],
                dim=0), 'work_dirs/edit_color/show_color/' + str(self.index) + '.png',
                        nrow=len(gt_semantic_seg) * 2)
save_image(torch.cat([map_pixels(self.encode_to_segmap(gt_semantic_seg[0].long()) / 255.0),
                              rec_segmap / 255.0,
                              map_pixels(self.encode_to_segmap(seg_logist.argmax(1).unsqueeze(1).long()) / 255.0),
                              torch.Tensor.repeat(error, 3, 1, 1, 1, 1).squeeze(2).permute(1, 0, 2, 3)],
                             dim=0), 'work_dirs/bigseg_ade20k_conns_swin_160k/show_160k/val_160k_' + img_metas[0]['ori_filename'].split('/')[-1])
https://github.com/fudan-zvg/GSS/blob/b9909a471b09a244fa9da7d80a839df3c4e273c2/mmseg/models/decode_heads/edit_indice.py#L203
https://github.com/fudan-zvg/GSS/blob/b9909a471b09a244fa9da7d80a839df3c4e273c2/mmseg/models/decode_heads/edit_indice.py#L242

==================================================
https://github.com/AyanKumarBhunia/Sketch2Saliency
==================================================

Found 2 times
torchvision.utils.save_image(batch_redraw, os.path.join(
        saved_folder, type + '_' + str(step) + '.jpg'), normalize=True, nrow=2)
torchvision.utils.make_grid(value, normalize=True)
https://github.com/AyanKumarBhunia/Sketch2Saliency/blob/012357862ef3fd6d00f2596031d81f966e7550f1/code/photo2sketch_2D_GMM/utils.py#L83
https://github.com/AyanKumarBhunia/Sketch2Saliency/blob/012357862ef3fd6d00f2596031d81f966e7550f1/code/photo2sketch_2D_GMM/utils.py#L269

====================================
https://github.com/ShenghaiRong/BECO
====================================

Found 3 times
torchvision.utils.save_image(mask,mask_path)
torchvision.utils.save_image(mask,mask_path)
torchvision.utils.save_image(mask.float(),mask_path)
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/gen_mask.py#L49
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/gen_mask_coco.py#L43
https://github.com/ShenghaiRong/BECO/blob/6a57bed601a940cd2337d1465589418648a3a035/first-stage/irn/gen_mask_coco.py#L63

==============================
https://github.com/naver/relis
==============================

Found 1 times
save_image(random_image, f.name)
https://github.com/naver/relis/blob/088b4a6aa53205cb1e49141b127946df92a2bcea/detectron2/projects/DensePose/tests/test_image_list_dataset.py#L19

=================================
https://github.com/baaivision/EVA
=================================

Found 1 times
save_image(random_image, f.name)
https://github.com/baaivision/EVA/blob/01cb5c10e4c976bf8bc8680543e941aa8d8ba1c2/EVA-02/det/projects/DensePose/tests/test_image_list_dataset.py#L19

=============================================
https://github.com/object-understanding/SLASH
=============================================

Found 1 times
vutils.make_grid(log_img, nrow=1, pad_value=0)
https://github.com/object-understanding/SLASH/blob/b6e9aca9ce7f1393d3b1c2a06902f8815bfd1010/train.py#L488

=============================
https://github.com/relh/moves
=============================

Found 4 times
save_image(inp[b].float().cpu(), f'{args.experiment_path}/outputs/{iii}_{b}_{label}.png', format='png')
save_image((inp[b] / inp[b].max()).cpu(), f'{args.experiment_path}/outputs/{iii}_{b}_{label}.png', format='png')
save_image((inp[b] / inp[b].max()).cpu(), f'{args.experiment_path}/outputs/{iii}_{b}_{label}.png', format='png')
save_image(combo_pca[:, :, i * args.embed_size[1]:(i + 1) * args.embed_size[1]], f'{args.experiment_path}/outputs/{iii}_{b}_{l}.png', format='png')
https://github.com/relh/moves/blob/c7390565c3a2b9b14f56a81920a226c216041af0/functions.py#L441
https://github.com/relh/moves/blob/c7390565c3a2b9b14f56a81920a226c216041af0/functions.py#L444
https://github.com/relh/moves/blob/c7390565c3a2b9b14f56a81920a226c216041af0/functions.py#L446
https://github.com/relh/moves/blob/c7390565c3a2b9b14f56a81920a226c216041af0/functions.py#L457

======================================
https://github.com/kakaobrain/ginr-ipc
======================================

Found 3 times
torchvision.utils.make_grid(grid, nrow=4)
torchvision.utils.make_grid(grid, nrow=(num_support + 1) * 2)
torchvision.utils.make_grid(grid, nrow=nrow)
https://github.com/kakaobrain/ginr-ipc/blob/135f55cd2867e1b09dde05989a7e6fb3a353be9e/src/trainers/trainer_stage_inr.py#L270
https://github.com/kakaobrain/ginr-ipc/blob/135f55cd2867e1b09dde05989a7e6fb3a353be9e/src/trainers/trainer_stage_inr_nerf.py#L370
https://github.com/kakaobrain/ginr-ipc/blob/135f55cd2867e1b09dde05989a7e6fb3a353be9e/src/trainers/trainer_stage_meta_inr.py#L189

==============================
https://github.com/DreamMr/PCL
==============================

Found 3 times
torchvision.utils.make_grid(print_img,nrow=1)
torchvision.utils.make_grid(print_img,nrow=1)
torchvision.utils.save_image(img,file_path)
https://github.com/DreamMr/PCL/blob/6e71d4110873a434fa29dcd406607ec2ab5fe827/main.py#L78
https://github.com/DreamMr/PCL/blob/6e71d4110873a434fa29dcd406607ec2ab5fe827/main.py#L148
https://github.com/DreamMr/PCL/blob/6e71d4110873a434fa29dcd406607ec2ab5fe827/utils.py#L183

=========================================
https://github.com/neuroethology/BKinD-3D
=========================================

Found 2 times
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(images, nrow=5, normalize=True, padding=3, pad_value=1.0)
https://github.com/neuroethology/BKinD-3D/blob/cd8a4e6771c65915f084aef2d61a282c09886acb/utils/visualize.py#L295
https://github.com/neuroethology/BKinD-3D/blob/cd8a4e6771c65915f084aef2d61a282c09886acb/utils/visualize.py#L303

==================================================
https://github.com/illhyhl1111/LearningBySketching
==================================================

Found 8 times
make_grid(inputs.clone().detach(), normalize=True, pad_value=1)
make_grid(outputs, normalize=False, pad_value=1)
make_grid(inputs.clone().detach(), normalize=True, pad_value=2)
make_grid(sketch.clone().detach(), normalize=True, pad_value=2)
make_grid(inputs, normalize=True, pad_value=2)
make_grid(inputs, normalize=True, pad_value=2)
make_grid(img[:self.num_img].detach().cpu(), nrow=self.nrow)
make_grid(img[: self.num_img].detach().cpu(), nrow=self.nrow)
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/third_party/clipasso/sketch_utils.py#L57
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/third_party/clipasso/sketch_utils.py#L64
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/third_party/clipasso/sketch_utils.py#L78
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/third_party/clipasso/sketch_utils.py#L119
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/third_party/clipasso/sketch_utils.py#L168
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/third_party/clipasso/sketch_utils.py#L209
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/third_party/clipasso/sketch_utils.py#L461
https://github.com/illhyhl1111/LearningBySketching/blob/be8c60de680786e91fb7c0474e611d8bc75a068b/utils/sketch_utils.py#L186

=============================================
https://github.com/tractableai/perceptual-mae
=============================================

Found 9 times
make_grid(
                torch.cat((Images, Masked_Images, 
                           Recons, ReconsVisible), dim=0))
save_image(grid, '{}/{}.png'.format(self.image_out_dir, self.global_step))
make_grid(
                torch.cat((Images, Masked_Images, 
                           Recons, ReconsVisible), dim=0))
save_image(grid, '{}/{}.png'.format(self.image_out_dir, self.global_step))
make_grid(
                    torch.cat((Images, Masked_Images, 
                            Recons, ReconsVisible), dim=0))
save_image(grid, '{}/{}.png'.format(self.image_out_dir, self.global_step))
make_grid(
                    torch.cat((Images, Masked_Images, 
                            Recons, ReconsVisible), dim=0))
save_image(grid, '{}/{}.png'.format(self.image_out_dir, self.global_step))
torchvision.utils.make_grid(images)
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/models/model_zoo/language_vision.py#L325
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/models/model_zoo/language_vision.py#L328
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/models/model_zoo/masked_vision_model.py#L196
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/models/model_zoo/masked_vision_model.py#L205
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/models/model_zoo/masked_vision_model.py#L499
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/models/model_zoo/masked_vision_model.py#L508
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/models/model_zoo/masked_vision_model.py#L802
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/models/model_zoo/masked_vision_model.py#L811
https://github.com/tractableai/perceptual-mae/blob/bc23d5008f5a271dc7e3b5fd1c13222ca89d6de7/src/utils/logger.py#L36

================================
https://github.com/valeoai/FOUND
================================

Found 3 times
torchvision.utils.make_grid(input_nonorm[:5])
torchvision.utils.make_grid(preds_mask[:5])
torchvision.utils.make_grid(masks[:5].unsqueeze(1))
https://github.com/valeoai/FOUND/blob/1ad22bacf1a6854faff1b5d4be300d54cad6f277/main_found_train.py#L146
https://github.com/valeoai/FOUND/blob/1ad22bacf1a6854faff1b5d4be300d54cad6f277/main_found_train.py#L148
https://github.com/valeoai/FOUND/blob/1ad22bacf1a6854faff1b5d4be300d54cad6f277/main_found_train.py#L153

==========================================================
https://github.com/YannickStruempler/inr_based_compression
==========================================================

Found 1 times
make_grid(output_vs_gt, scale_each=False, normalize=True)
https://github.com/YannickStruempler/inr_based_compression/blob/62343f4d9948a170d9d901da8435e804981b614b/image_compression/utils.py#L294

==============================
https://github.com/ICTMCG/POSE
==============================

Found 2 times
vutils.make_grid(input_img[:self.config.class_num,:,:,:], normalize=True, scale_each=True)
vutils.make_grid(aug_img[:self.config.class_num,:,:,:], normalize=True, scale_each=True)
https://github.com/ICTMCG/POSE/blob/185b25d9160e09b57c62cea23f08b2b126b62798/train/trainer_progressive.py#L169
https://github.com/ICTMCG/POSE/blob/185b25d9160e09b57c62cea23f08b2b126b62798/train/trainer_progressive.py#L170

==================================================
https://github.com/FLAIR-THU/PairedLogitsInversion
==================================================

Found 2 times
torchvision.utils.make_grid(reconstructed_xs[j] * 0.5 + 0.5, nrow=12)
torchvision.utils.make_grid(
            torch.stack(
                [
                    torch.Tensor(
                        cv2.resize(
                            np.mean(
                                local_dataloaders[j].dataset.x[
                                    local_dataloaders[j].dataset.y == la.item()
                                ],
                                axis=0,
                            ),
                            dsize=(64, 64),
                        ).transpose(2, 0, 1)
                        / 255
                    )
                    for la in fake_labels
                ]
            ),
            nrow=12,
        )
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/pipeline/fedavg/pipeline_fedavg.py#L205
https://github.com/FLAIR-THU/PairedLogitsInversion/blob/ad9c38e527b7703ba9d820dc60dc682de4d3339c/src/pli/pipeline/fedavg/pipeline_fedavg.py#L212

===================================
https://github.com/pipilurj/DynaFed
===================================

Found 2 times
torchvision.utils.make_grid(upsampled, nrow=10, normalize=True, scale_each=True)
torchvision.utils.make_grid(image_syn_vis, nrow=10, normalize=True, scale_each=True)
https://github.com/pipilurj/DynaFed/blob/08dd56b4621800f520e88f1c1540d26f6767c9af/image_synthesizer.py#L263
https://github.com/pipilurj/DynaFed/blob/08dd56b4621800f520e88f1c1540d26f6767c9af/image_synthesizer.py#L275

=============================================================
https://github.com/sutd-visual-computing-group/Re-thinking_MI
=============================================================

Found 2 times
tvls.save_image(images, filename, normalize = normalize, padding=0)
tvls.save_image(images, filename, normalize = normalize, nrow=nrow, padding=0)
https://github.com/sutd-visual-computing-group/Re-thinking_MI/blob/ed4b6b8900e4d7fed8f70d7e6a444893963d920e/utils.py#L99
https://github.com/sutd-visual-computing-group/Re-thinking_MI/blob/ed4b6b8900e4d7fed8f70d7e6a444893963d920e/utils.py#L101

=============================================
https://github.com/fahadshamshad/Clip2Protect
=============================================

Found 7 times
torchvision.utils.save_image(img_gen_, f"{self.protected_face_dir}/{str(ff)+'_'+str(i).zfill(5)}.jpg", normalize=True, range=(0, 1))
torchvision.utils.save_image(img_gen, f"{self.inverted_images}/{image_name}.jpg", normalize=True, range=(-1, 1))
torchvision.utils.save_image(couple_output, os.path.join(out_path_results, f"{im_path}.jpg"),
                                         normalize=True, range=(-1, 1))
torchvision.utils.save_image(result_batch[0][i], os.path.join(out_path_results, f"{im_path}.jpg"),
                                         normalize=True, range=(-1, 1))
torchvision.utils.save_image(torch.cat([x.detach().cpu(), x_hat.detach().cpu()]), path,
									 normalize=True, scale_each=True, range=(-1, 1), nrow=self.opts.batch_size)
torchvision.utils.save_image(img_gen,
                                         f"/disk2/danielroich/Sandbox/StyleCLIP/results/inference_results/{str(i).zfill(5)}.png",
                                         normalize=True, range=(-1, 1))
torchvision.utils.save_image(result_image.detach().cpu(), os.path.join(args.results_dir, "final_result.jpg"),
                                 normalize=True, scale_each=True, range=(-1, 1))
https://github.com/fahadshamshad/Clip2Protect/blob/8596a82cd04a1c85ecc6a805daa2d2710d85de96/adversarial_optimization.py#L250
https://github.com/fahadshamshad/Clip2Protect/blob/8596a82cd04a1c85ecc6a805daa2d2710d85de96/pivot_tuning.py#L76
https://github.com/fahadshamshad/Clip2Protect/blob/8596a82cd04a1c85ecc6a805daa2d2710d85de96/models/StyleCLIP/mapper/scripts/inference.py#L63
https://github.com/fahadshamshad/Clip2Protect/blob/8596a82cd04a1c85ecc6a805daa2d2710d85de96/models/StyleCLIP/mapper/scripts/inference.py#L66
https://github.com/fahadshamshad/Clip2Protect/blob/8596a82cd04a1c85ecc6a805daa2d2710d85de96/models/StyleCLIP/mapper/training/coach.py#L234
https://github.com/fahadshamshad/Clip2Protect/blob/8596a82cd04a1c85ecc6a805daa2d2710d85de96/models/StyleCLIP/optimization/run_optimization.py#L83
https://github.com/fahadshamshad/Clip2Protect/blob/8596a82cd04a1c85ecc6a805daa2d2710d85de96/models/StyleCLIP/optimization/run_optimization.py#L127

=====================================
https://github.com/ParkGeonYeong/DCWP
=====================================

Found 1 times
vutils.save_image(x.cpu(), filename, nrow=ncol, padding=0)
https://github.com/ParkGeonYeong/DCWP/blob/e1a733da2ed16236f5977610824913db65e95e32/util/utils.py#L144

=============================================================================
https://github.com/QuangNguyen2609/ARCHITECTURAL-BACKDOORS-IN-NEURAL-NETWORKS
=============================================================================

Found 1 times
make_grid([inp*0.5+0.5, white_trigger_input*0.5+0.5, checkerboard_trigger_input*0.5+0.5])
https://github.com/QuangNguyen2609/ARCHITECTURAL-BACKDOORS-IN-NEURAL-NETWORKS/blob/59a3e99f44d6ca7a1eaefaebda5466ffd7f336a5/src/main.py#L62

========================================
https://github.com/DAVEISHAN/TimeBalance
========================================

Found 1 times
torchvision.utils.make_grid(clip, nrow = params.num_frames)
https://github.com/DAVEISHAN/TimeBalance/blob/2efb8cb7374e1a20766cdf19b6382d0a1f5963a3/dataloaders/dl_ssl.py#L380

==========================================
https://github.com/md-mohaiminul/TranS4mer
==========================================

Found 2 times
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/md-mohaiminul/TranS4mer/blob/98de379770e0d4034280abb9923928c103377286/trans4mer/model/TimeSformer/timesformer/visualization/tensorboard_vis.py#L401
https://github.com/md-mohaiminul/TranS4mer/blob/98de379770e0d4034280abb9923928c103377286/trans4mer/model/pytorch-image-models/train.py#L781

================================================
https://github.com/facebookresearch/ProcedureVRL
================================================

Found 2 times
save_image(all_images, str(results_folder / f'sample-{milestone}.png'), nrow = 6)
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
https://github.com/facebookresearch/ProcedureVRL/blob/fcbf833bf469d42f0d657be5ff7ec092d68e65aa/lib/models/diffusion_model.py#L538
https://github.com/facebookresearch/ProcedureVRL/blob/fcbf833bf469d42f0d657be5ff7ec092d68e65aa/lib/visualization/tensorboard_vis.py#L401

=====================================
https://github.com/ChenHsing/SVFormer
=====================================

Found 2 times
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
https://github.com/ChenHsing/SVFormer/blob/51d6698f69a1ef5f079dd9c4624836a3d42d98c2/build/lib/timesformer/visualization/tensorboard_vis.py#L401
https://github.com/ChenHsing/SVFormer/blob/51d6698f69a1ef5f079dd9c4624836a3d42d98c2/timesformer/visualization/tensorboard_vis.py#L401

============================================
https://github.com/BeSpontaneous/FFN-pytorch
============================================

Found 8 times
make_grid(vid, padding=8, pad_value=1.0, nrow=sz[0])
make_grid(tensor, padding=8, pad_value=1.0, nrow=nrow)
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
make_grid(vid, padding=8, pad_value=1.0, nrow=sz[0])
make_grid(tensor, padding=8, pad_value=1.0, nrow=nrow)
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/3D_Network/build/lib/slowfast/utils/misc.py#L285
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/3D_Network/build/lib/slowfast/utils/misc.py#L305
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/3D_Network/build/lib/slowfast/visualization/tensorboard_vis.py#L402
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/3D_Network/slowfast/utils/misc.py#L285
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/3D_Network/slowfast/utils/misc.py#L305
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/3D_Network/slowfast/visualization/tensorboard_vis.py#L402
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/Transformer_Network/build/lib/slowfast/visualization/tensorboard_vis.py#L405
https://github.com/BeSpontaneous/FFN-pytorch/blob/7c219229bb37a4c65039f163cd0f9da5613ef239/Transformer_Network/slowfast/visualization/tensorboard_vis.py#L405

================================
https://github.com/basilevh/tcow
================================

Found 1 times
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
https://github.com/basilevh/tcow/blob/28b80c192f7c7d714a3f632dbadb29aa01e549c4/third_party/TimeSformer/timesformer/visualization/tensorboard_vis.py#L401

=====================================
https://github.com/0liliulei/Mask-VOS
=====================================

Found 1 times
vutils.make_grid(x_all_new, nrow=1, padding=8, pad_value=0.9)
https://github.com/0liliulei/Mask-VOS/blob/6276e914a33ce3fc8d85b408cf2cb80fcc703bdc/base_trainer.py#L317

=================================================
https://github.com/TonyLianLong/RCF-UnsupVideoSeg
=================================================

Found 6 times
torchvision.utils.save_image(tosave, fn_name)
torchvision.utils.save_image(tosave[idx_in_batch], fn_name)
torchvision.utils.save_image(tosave, fn_name)
torchvision.utils.save_image(tosave, fn_name)
torchvision.utils.save_image(tosave[idx_in_batch], fn_name)
torchvision.utils.save_image(tosave, fn_name)
https://github.com/TonyLianLong/RCF-UnsupVideoSeg/blob/d19a22fc5f06aa49971afaab991175ec0638383b/models/rcf_model.py#L249
https://github.com/TonyLianLong/RCF-UnsupVideoSeg/blob/d19a22fc5f06aa49971afaab991175ec0638383b/models/rcf_model.py#L265
https://github.com/TonyLianLong/RCF-UnsupVideoSeg/blob/d19a22fc5f06aa49971afaab991175ec0638383b/models/rcf_model.py#L606
https://github.com/TonyLianLong/RCF-UnsupVideoSeg/blob/d19a22fc5f06aa49971afaab991175ec0638383b/models/amd/amd_model.py#L128
https://github.com/TonyLianLong/RCF-UnsupVideoSeg/blob/d19a22fc5f06aa49971afaab991175ec0638383b/models/amd/amd_model.py#L144
https://github.com/TonyLianLong/RCF-UnsupVideoSeg/blob/d19a22fc5f06aa49971afaab991175ec0638383b/models/amd/amd_model.py#L262

=============================================
https://github.com/qianduoduolr/Spa-then-Temp
=============================================

Found 6 times
make_grid(
                _tensor, nrow=int(math.sqrt(_tensor.size(0))),
                normalize=False)
save_image(
            img_cat,
            osp.join(self.output_dir, filename),
            nrow=self.nrow,
            padding=self.padding)
make_grid(tensor, nrow=int(n_img), normalize=False)
https://github.com/qianduoduolr/Spa-then-Temp/blob/4c943628aae9b5afe4cc15eefc8a0eb800736515/vcl/core/misc.py#L56
https://github.com/qianduoduolr/Spa-then-Temp/blob/4c943628aae9b5afe4cc15eefc8a0eb800736515/vcl/core/hooks/visualization.py#L81
https://github.com/qianduoduolr/Spa-then-Temp/blob/4c943628aae9b5afe4cc15eefc8a0eb800736515/vcl/utils/util.py#L45

=================================
https://github.com/Jee-King/AFNet
=================================

Found 1 times
make_grid(
                _tensor, nrow=int(math.sqrt(_tensor.size(0))),
                normalize=False)
https://github.com/Jee-King/AFNet/blob/90a54452024fb4e03b2987a790e1ee6feb8f10af/basicsr/utils/img_util.py#L72

=========================================
https://github.com/thuliu-yt16/dualvector
=========================================

Found 2 times
torchvision.utils.make_grid(batch['refs'][i], nrow=5)
torchvision.utils.save_image(targets, os.path.join(output_dir, 'all_rec', f'{sample_i:04d}_rec.png'), nrow=13)
https://github.com/thuliu-yt16/dualvector/blob/e88a18317188ce31f0d92bcf20e0f00efd125192/train.py#L209
https://github.com/thuliu-yt16/dualvector/blob/e88a18317188ce31f0d92bcf20e0f00efd125192/eval/sample_font.py#L122

===================================
https://github.com/TangZJ/able-nerf
===================================

Found 4 times
save_image(output_image, im_name)
torchvision.utils.save_image(image, save_path)
torchvision.utils.save_image(image, save_path)
torchvision.utils.save_image(image, save_path)
https://github.com/TangZJ/able-nerf/blob/52092d3ce2e15f89b36ebc1f9e8725e23f7f16df/ablenerf_litsystem.py#L146
https://github.com/TangZJ/able-nerf/blob/52092d3ce2e15f89b36ebc1f9e8725e23f7f16df/models/vis.py#L52
https://github.com/TangZJ/able-nerf/blob/52092d3ce2e15f89b36ebc1f9e8725e23f7f16df/models/vis.py#L56
https://github.com/TangZJ/able-nerf/blob/52092d3ce2e15f89b36ebc1f9e8725e23f7f16df/models/vis.py#L61

====================================
https://github.com/robincourant/jaws
====================================

Found 1 times
torchvision.utils.make_grid(batch_image, nrow, padding, True)
https://github.com/robincourant/jaws/blob/8d83a6483a0c481e015d9f4587fef33f013edee9/lib/LitePose/lib/utils/vis.py#L125

=====================================
https://github.com/colorful-liyu/3DQD
=====================================

Found 3 times
vutils.make_grid(img_grid_i, nrow=nrow)
vutils.make_grid(img_grid_i, nrow=nrow)
vutils.make_grid( image_tensor, nrow=4 )
https://github.com/colorful-liyu/3DQD/blob/1c616db20ae3111ee98ecf4fb23be3c1f9fa66d4/metrics/textdf_metrics.py#L226
https://github.com/colorful-liyu/3DQD/blob/1c616db20ae3111ee98ecf4fb23be3c1f9fa66d4/utils/qual_util.py#L133
https://github.com/colorful-liyu/3DQD/blob/1c616db20ae3111ee98ecf4fb23be3c1f9fa66d4/utils/util.py#L37

=========================================
https://github.com/threedle/3DHighlighter
=========================================

Found 2 times
torchvision.utils.save_image(rendered_images, os.path.join(dir, name))
torchvision.utils.save_image(rendered_images, os.path.join(dir, 'renders/iter_{}.jpg'.format(i)))
https://github.com/threedle/3DHighlighter/blob/0b8dfeec3050629622fd1960ea876f791c1a8dca/main.py#L222
https://github.com/threedle/3DHighlighter/blob/0b8dfeec3050629622fd1960ea876f791c1a8dca/main.py#L224

=============================================
https://github.com/dolev104/neural_congealing
=============================================

Found 34 times
save_image(evaluation_data[f"congealing/congealing_images_grid"],
                   output_folder / f"congealing_res_mappings_grid.{args.filenames_suffix}")
save_image(imgs_pca_logging_dict[f"pca_vis_orig_imgs_keys/pca_ch{p + 1}"],
                   curr_path_pca_keys / f"pca_vis_orig_imgs_keys_ch{p + 1}.png")
save_image(imgs_pca_logging_dict["pca_vis_orig_imgs_keys/pca_ch234"],
                   curr_path_pca_keys / "pca_vis_orig_imgs_keys_ch234.png")
save_image(input_image, curr_path_orig / f"original_image_{i:03d}.{args.filenames_suffix}")
save_image(input_saliency, curr_path_sal / f"saliency_image_{i:03d}.{args.filenames_suffix}")
save_image(masked_img_orig_sal_checkerboard, curr_path_masked_orig_orig_sal / f"masked_img_orig_sal_checkerboard_{i:03d}.{args.filenames_suffix}")
save_image(masked_img_atlas_sal_checkerboard,  curr_path_masked_orig_atlas_sal / f"masked_img_atlas_sal_checkerboard_{i:03d}.{args.filenames_suffix}")
save_image(curr_sim_congealed, curr_path_sim / f"sim_congealed_image_{i:03d}.{args.filenames_suffix}")
save_image(curr_congealed, curr_path_congealed / f"congealed_image_{i:03d}_checkerboard.{args.filenames_suffix}")
save_image(final_congealed_image, curr_path_o / f"congealed_image_{i:03d}_unmasked.{args.filenames_suffix}")
save_image(curr_white_masked, curr_path_w / f"congealed_image_{i:03d}_w.{args.filenames_suffix}")
save_image(evaluation_data["all_congealed_saliencies"][i], curr_path_cs / f"congealed_saliency_{i:03d}.{args.filenames_suffix}")
save_image(congealed_keys_checkerboard, curr_path_ckp / f"congealed_keys_pca_checkerboard_{i:03d}.{args.filenames_suffix}")
make_grid(all_imgs_w_orig_sal, nrow=dataset.number_of_images, normalize=False,
                                             padding=3, pad_value=args.imgs_grid_pad_value)
save_image(all_imgs_w_orig_sal_grid, output_folder / f"congealing_res_grid_orig_sal.{args.filenames_suffix}")
make_grid(all_imgs_w_overlay_sal, nrow=dataset.number_of_images, normalize=False,
                                                padding=3, pad_value=args.imgs_grid_pad_value)
save_image(all_imgs_w_overlay_sal_grid, output_folder / f"congealing_res_grid_overlay_sal.{args.filenames_suffix}")
make_grid(all_imgs_and_congealed, nrow=dataset.number_of_images, normalize=False,
                                                padding=3, pad_value=args.imgs_grid_pad_value)
save_image(all_imgs_and_congealed_grid, output_folder / f"congealing_res_grid.{args.filenames_suffix}")
save_image(atlas_space_average_image, curr_path / f"atlas_space_average_image_unmasked.{args.filenames_suffix}")
save_image(atlas_space_average_image_checkerboad, curr_path / f"atlas_space_average_image.{args.filenames_suffix}")
save_image(atlas_saliency.squeeze(), curr_path / f"atlas_saliency.{args.filenames_suffix}")
save_image(atlas_pca234_of_set, curr_path / f"pca_of_set_ch234_atlas_keys.{args.filenames_suffix}")
save_image(atlas_keys_checkerboard, curr_path / f"pca_of_set_ch234_atlas_keys_checkerboard.{args.filenames_suffix}")
save_image(transforms.ToTensor()(cm.get_cmap('viridis')(evaluation_data["atlas_vis/atlas_keys_pca_of_set"][:, :, 0]))[None, ...],
               curr_path / f"pca_of_set_ch1_atlas_keys.png")
save_image(atlas_pca234, curr_path / f"pca_ch234_atlas_keys.{args.filenames_suffix}")
save_image(atlas_keys_checkerboard, curr_path / f"pca_ch234_atlas_keys_checkerboard.{args.filenames_suffix}")
save_image(transforms.ToTensor()(cm.get_cmap('viridis')(evaluation_data["atlas_vis/atlas_keys_pca"][:, :, 0]))[None, ...],
               curr_path / f"pca_ch1_atlas_keys.png")
make_grid(atlas_vis_concat, nrow=1, normalize=False, padding=3, pad_value=args.imgs_grid_pad_value)
save_image(atlas_vis_grid_checkerboard, curr_path / f"atlas_vis_grid.{args.filenames_suffix}")
make_grid(images, **grid_kwargs)
save_image(val, f"{curr_path}/{save_name}.png")
make_grid(images_collection_tensor, nrow=nrow, padding=padding, pad_value=pad_value, **grid_kwargs)
make_grid(images, **grid_kwargs)
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L48
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L103
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L106
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L120
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L121
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L126
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L147
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L152
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L155
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L159
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L162
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L167
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L178
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L183
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L185
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L187
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L189
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L192
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L194
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L201
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L203
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L206
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L209
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L211
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L212
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L216
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L218
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L219
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L226
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/evaluate_model.py#L227
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/eval/pck.py#L24
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/utils_atlas/logger.py#L409
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/utils_atlas/utils_atlas_base.py#L143
https://github.com/dolev104/neural_congealing/blob/625600e3cfdd23f7b25e82e7b4992464b82a94d7/utils_atlas/vis_tools/helpers.py#L32

===================================================
https://github.com/yilundu/cross_attention_renderer
===================================================

Found 5 times
torchvision.utils.make_grid(predictions, scale_each=False, normalize=True)
torchvision.utils.make_grid(depth_img, scale_each=True, normalize=True)
torchvision.utils.make_grid(context_images, scale_each=False, normalize=True)
torchvision.utils.make_grid(query_images, scale_each=False, normalize=True)
torchvision.utils.make_grid(panel, scale_each=False,
                                                 normalize=True)
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/summaries.py#L32
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/summaries.py#L43
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/summaries.py#L50
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/summaries.py#L59
https://github.com/yilundu/cross_attention_renderer/blob/1a01e2aae13682a4dcf50c880343568ab9bd17c9/summaries.py#L139

============================
https://github.com/TPCD/DCCL
============================

Found 1 times
tv.utils.make_grid(
                    input_3d.cpu().unsqueeze(1), pad_value=self.pad_value, nrow=self.nrow)
https://github.com/TPCD/DCCL/blob/8b710048a57cc2e0b4fa2b71cd5945ecfdaa5cd6/project_utils/visualization_utils.py#L995

================================================
https://github.com/sun-umn/Deep-Random-Projector
================================================

Found 6 times
vutils.make_grid(all_images, nrow=3, padding=2, normalize=True)
torchvision.utils.make_grid(images_torch, nrow)
vutils.make_grid(all_images, nrow=3, padding=2, normalize=True)
torchvision.utils.make_grid(images_torch, nrow)
vutils.make_grid(all_images, nrow=3, padding=2, normalize=True)
torchvision.utils.make_grid(images_torch, nrow)
https://github.com/sun-umn/Deep-Random-Projector/blob/cdddfb1e69b4e50d67f5ca6350bffa8c9fd60856/1_Denoising/util.py#L241
https://github.com/sun-umn/Deep-Random-Projector/blob/cdddfb1e69b4e50d67f5ca6350bffa8c9fd60856/1_Denoising/utils/common_utils.py#L58
https://github.com/sun-umn/Deep-Random-Projector/blob/cdddfb1e69b4e50d67f5ca6350bffa8c9fd60856/2_Super_Resolution/util.py#L242
https://github.com/sun-umn/Deep-Random-Projector/blob/cdddfb1e69b4e50d67f5ca6350bffa8c9fd60856/2_Super_Resolution/utils/common_utils.py#L58
https://github.com/sun-umn/Deep-Random-Projector/blob/cdddfb1e69b4e50d67f5ca6350bffa8c9fd60856/3_Inpainting/util.py#L242
https://github.com/sun-umn/Deep-Random-Projector/blob/cdddfb1e69b4e50d67f5ca6350bffa8c9fd60856/3_Inpainting/utils/common_utils.py#L58

=====================================================
https://github.com/amazon-science/polygon-transformer
=====================================================

Found 1 times
save_image(img, os.path.join(vis_dir, img_fn))
https://github.com/amazon-science/polygon-transformer/blob/69fc728b2ec6a2b3595ec34db64074badcb19151/utils/eval_utils.py#L147

=======================================
https://github.com/BrandonHanx/FAME-ViL
=======================================

Found 1 times
torchvision.utils.make_grid(img_tensors, *args, **kwargs)
https://github.com/BrandonHanx/FAME-ViL/blob/7a259a0813dafe2c23abb422766ef1c29b3bfc7c/mmf/utils/visualize.py#L48

=================================================
https://github.com/szymanowiczs/viewset-diffusion
=================================================

Found 7 times
tv_uils.save_image(output_frame,
                            os.path.join(out_dir_name, "{}_out.png".format(rot_idx)),
                            padding=0,n_row=1)
tv_uils.save_image(cond_view_result, 
                    os.path.join(out_dir_name, "cond_view_{}.png".format(cond_view_idx)),
                    nrow=n_rows)
tv_uils.save_image(cond_view_gt, 
                    os.path.join(out_dir_name, "cond_gt_{}.png".format(cond_view_idx)),
                    nrow=n_rows)
tv_uils.save_image(diffused_view_result, 
                    os.path.join(out_dir_name, "diffused_view_{}.png".format(diffused_view_idx)),
                    nrow=n_rows)
tv_uils.save_image(diffused_target, 
                os.path.join(out_dir_name, "diffused_view_target.png"),
                nrow=n_rows)
tv_uils.save_image(gt_target, 
                os.path.join(out_dir_name, "gt_target.png"),
                nrow=n_rows)
tv_uils.save_image(grid.permute(2, 0, 1), 
                os.path.join(out_dir_name, "rot_{}.png".format(str(rot_idx).zfill(3))),
                nrow=n_rows)
https://github.com/szymanowiczs/viewset-diffusion/blob/45003948f2ea6b70f72e5dc60b14beb2428699a4/evaluation_quantitative.py#L120
https://github.com/szymanowiczs/viewset-diffusion/blob/45003948f2ea6b70f72e5dc60b14beb2428699a4/evaluation/generator.py#L115
https://github.com/szymanowiczs/viewset-diffusion/blob/45003948f2ea6b70f72e5dc60b14beb2428699a4/evaluation/generator.py#L120
https://github.com/szymanowiczs/viewset-diffusion/blob/45003948f2ea6b70f72e5dc60b14beb2428699a4/evaluation/generator.py#L126
https://github.com/szymanowiczs/viewset-diffusion/blob/45003948f2ea6b70f72e5dc60b14beb2428699a4/evaluation/generator.py#L131
https://github.com/szymanowiczs/viewset-diffusion/blob/45003948f2ea6b70f72e5dc60b14beb2428699a4/evaluation/generator.py#L136
https://github.com/szymanowiczs/viewset-diffusion/blob/45003948f2ea6b70f72e5dc60b14beb2428699a4/evaluation/generator.py#L150

========================================
https://github.com/wrk226/creative_birds
========================================

Found 3 times
save_image(output, str(output_name))
save_image(output, str(output_name))
vutils.make_grid(v,nrow=1)
https://github.com/wrk226/creative_birds/blob/30c02dbee6d20558160f1a49d1a9bec5c60ae214/evo_trans/AdaIN/test_ori.py#L177
https://github.com/wrk226/creative_birds/blob/30c02dbee6d20558160f1a49d1a9bec5c60ae214/evo_trans/AdaIN/test_ori.py#L194
https://github.com/wrk226/creative_birds/blob/30c02dbee6d20558160f1a49d1a9bec5c60ae214/evo_trans/experiments/test_df2.py#L251

=========================================
https://github.com/shawLyu/Occ-SDF-Hybrid
=========================================

Found 3 times
torchvision.utils.make_grid(normal_maps_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(output_vs_gt_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(depth_maps_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
https://github.com/shawLyu/Occ-SDF-Hybrid/blob/c5b420dc07e67b1213473d09b481b7a46a5e143f/code/utils/plots.py#L468
https://github.com/shawLyu/Occ-SDF-Hybrid/blob/c5b420dc07e67b1213473d09b481b7a46a5e143f/code/utils/plots.py#L489
https://github.com/shawLyu/Occ-SDF-Hybrid/blob/c5b420dc07e67b1213473d09b481b7a46a5e143f/code/utils/plots.py#L511

========================================
https://github.com/yutaojiang1/Diffuse3D
========================================

Found 6 times
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=opt.n_samples)
https://github.com/yutaojiang1/Diffuse3D/blob/920efe13b6385c6e88f9e23e11b3dd1134dab1a3/BilateralDiffusion/ldm/models/diffusion/ddpm.py#L375
https://github.com/yutaojiang1/Diffuse3D/blob/920efe13b6385c6e88f9e23e11b3dd1134dab1a3/BilateralDiffusion/ldm/models/diffusion/ddpm.py#L540
https://github.com/yutaojiang1/Diffuse3D/blob/920efe13b6385c6e88f9e23e11b3dd1134dab1a3/BilateralDiffusion/ldm/models/diffusion/ddpm.py#L1298
https://github.com/yutaojiang1/Diffuse3D/blob/920efe13b6385c6e88f9e23e11b3dd1134dab1a3/BilateralDiffusion/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/yutaojiang1/Diffuse3D/blob/920efe13b6385c6e88f9e23e11b3dd1134dab1a3/BilateralDiffusion/scripts/knn2img.py#L391
https://github.com/yutaojiang1/Diffuse3D/blob/920efe13b6385c6e88f9e23e11b3dd1134dab1a3/BilateralDiffusion/scripts/txt2img.py#L159

========================================
https://github.com/kieran514/robustdepth
========================================

Found 1 times
save_image(input_color, f'/media/kieran/SSDNEW/results/{n}.jpg')
https://github.com/kieran514/robustdepth/blob/8d96d0e6dc3c69bcf21a211bb0c4414304dded96/Robust-Depth/evaluate_depth.py#L166

=====================================
https://github.com/XinyaChen21/Veri3d
=====================================

Found 3 times
utils.save_image(img,
                os.path.join(base_folder, f"{str(i).zfill(7)}.png"),
                normalize=True, range=(-1, 1), padding=0)
utils.save_image(img,
                os.path.join(base_folder, f"{str(i).zfill(7)}.png"),
                normalize=True, range=(-1, 1), padding=0)
utils.save_image(samples,
                            os.path.join(opt.checkpoints_dir, experiment_opt.expname, 'volume_renderer', f"samples/{str(i).zfill(7)}.png"),
                            nrow=int(opt.val_n_sample),
                            normalize=True, range=(-1, 1))
https://github.com/XinyaChen21/Veri3d/blob/5253ed000e8bae296bc79a1964efc5119de06716/dataset.py#L596
https://github.com/XinyaChen21/Veri3d/blob/5253ed000e8bae296bc79a1964efc5119de06716/dataset.py#L753
https://github.com/XinyaChen21/Veri3d/blob/5253ed000e8bae296bc79a1964efc5119de06716/train_deepfashion.py#L247

===========================================
https://github.com/junzhezhang/DeformToon3D
===========================================

Found 18 times
utils.save_image(rgb_images,
                os.path.join(opt.results_dst_dir,'{}_fullhd.png'.format(str(i).zfill(7))),
                nrow=num_viewdirs,
                normalize=True,
                padding=0,
                value_range=(-1, 1),)
make_grid(images, nrow=real_img.shape[0])
save_image(grid, '{}/{}.png'.format(save_img_dir, self.opt.style.style_batch * self.recorder.step))
make_grid(torch.cat(img_resized_ls, 0), nrow=min(max_rows,len(img_resized_ls)))
save_image(grid, '{}/{}.png'.format(save_img_dir, stem))
torchvision.utils.make_grid(torch.cat([imgs[j:j+1], img_rec[j:j+1].detach(), 
                                                             img_dsty[j:j+1].detach(), img_refine[j:j+1].detach()], dim=0), 4, 1)
utils.save_image(
                        sample,
                        f"log/%s/dualstylegan-%06d.jpg"%(args.style, i),
                        nrow=int(args.n_sample ** 0.5),
                        normalize=True,
                        range=(-1, 1),
                    )
utils.save_image(
                        sample,
                        f"log/%s/finetune-%06d.jpg"%(args.style, i),
                        nrow=int(args.n_sample ** 0.5),
                        normalize=True,
                        range=(-1, 1),
                    )
utils.save_image(
                F.adaptive_avg_pool2d(source_img, 256),
                f"log/%s-instyle.jpg"%(args.model_name),
                nrow=int(args.n_sample ** 0.5),
                normalize=True,
                range=(-1, 1))
utils.save_image(
                F.adaptive_avg_pool2d(target_img, 256),
                f"log/%s-target.jpg"%(args.model_name),
                nrow=int(args.n_sample ** 0.5),
                normalize=True,
                range=(-1, 1))
utils.save_image(
                F.adaptive_avg_pool2d(style_img, 256),
                f"log/%s-exstyle.jpg"%(args.model_name),
                nrow=int(args.n_sample ** 0.5),
                normalize=True,
                range=(-1, 1))
utils.save_image(
                        sample,
                        f"log/%s-%06d.jpg"%(args.model_name, i),
                        nrow=int(args.n_sample ** 0.5),
                        normalize=True,
                        range=(-1, 1),
                    )
torchvision.utils.make_grid(torch.cat([imgs[j:j+1], img_gen0[j:j+1], img_gen[j:j+1].detach()], dim=0), 3, 1)
torchvision.utils.make_grid(F.adaptive_avg_pool2d(torch.cat(viz, dim=0), 256), 4, 2)
torchvision.utils.make_grid((torch.cat(viz_resize, dim=0)), 4, 2)
utils.save_image(
                        sample,
                        f"log/%s/%05d.jpg"%(args.name, (i+1)),
                        nrow=int(args.batch),
                        normalize=True,
                        range=(-1, 1),
                    )
utils.save_image(
                        sample,
                        f"log/%s/%05d.jpg"%(args.name, i),
                        nrow=int(args.batch),
                        normalize=True,
                        range=(-1, 1),
                    )
save_image(pred[0], os.path.join(output_dir, "{}_edges.jpg".format(image_path.split("/")[-1].split('.')[0])))
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/generate_images_and_latents.py#L100
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/main.py#L426
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/main.py#L430
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/main.py#L760
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/main.py#L768
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/destylize.py#L215
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/finetune_dualstylegan.py#L362
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/finetune_stylegan.py#L256
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/pretrain_dualstylegan.py#L130
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/pretrain_dualstylegan.py#L136
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/pretrain_dualstylegan.py#L142
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/pretrain_dualstylegan.py#L335
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/refine_exstyle.py#L199
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/style_transfer.py#L146
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/DualStyleGAN/style_transfer_batch.py#L195
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/VToonify/train_vtoonify_d.py#L370
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/VToonify/train_vtoonify_t.py#L299
https://github.com/junzhezhang/DeformToon3D/blob/b51b6b76af11c0579d5eb0b418b9522a55105b0d/external/pixel2style2pixel/scripts/generate_sketch_data.py#L62

========================================
https://github.com/zubair-irshad/NeO-360
========================================

Found 14 times
make_grid(stack, nrow=3)
make_grid(stack, nrow=2)
make_grid(stack, nrow=1)
make_grid(stack, nrow=1)
make_grid(stack, nrow=2)
make_grid(stack, nrow=1)
make_grid(stack, nrow=3)
make_grid(stack, nrow=2)
make_grid(stack, nrow=2)
make_grid(stack, nrow=2)
make_grid(stack, nrow=3)
make_grid(stack, nrow=3)
make_grid(stack, nrow=2)
make_grid(stack, nrow=2)
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L60
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L103
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L121
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L133
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L157
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L175
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L208
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L226
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L241
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L270
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L299
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L342
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L356
https://github.com/zubair-irshad/NeO-360/blob/fe173b14d6adc2a195a9a6c5c8bb678c7e6eae72/utils/train_helper.py#L381

=========================================
https://github.com/psyai-net/D-IF_release
=========================================

Found 3 times
make_grid(torch.cat(src_normal_imgs, dim=0), nrow=4)
make_grid(torch.cat(tgt_normal_imgs, dim=0), nrow=4)
torchvision.utils.make_grid(torch.cat(per_loop_lst, dim=0), nrow=nrow)
https://github.com/psyai-net/D-IF_release/blob/f5b82ff5e18ca42115741c3f808520bf664329d0/lib/dataset/Evaluator.py#L103
https://github.com/psyai-net/D-IF_release/blob/f5b82ff5e18ca42115741c3f808520bf664329d0/lib/dataset/Evaluator.py#L106
https://github.com/psyai-net/D-IF_release/blob/f5b82ff5e18ca42115741c3f808520bf664329d0/lib/dataset/mesh_util.py#L794

=======================================
https://github.com/freemty/urbanGIRAFFE
=======================================

Found 17 times
torchvision.utils.make_grid(x[:,0:3])
torchvision.utils.make_grid(x[:,0,:3].detach().cpu())
torchvision.utils.make_grid(x[:,0,-1:])
torchvision.utils.make_grid(x.detach().cpu()[:,0:3])
torchvision.utils.make_grid(image[:,:3].detach().cpu())
torchvision.utils.make_grid(image[:,:3].detach().cpu())
torchvision.utils.make_grid(output['depth'])
torchvision.utils.make_grid(output['rgb'])
torchvision.utils.make_grid(output['depth'])
torchvision.utils.make_grid(output['rgb'])
torchvision.utils.make_grid(image[:,:3].detach().cpu())
torchvision.utils.make_grid(x[:,:3].detach().cpu())
torchvision.utils.make_grid(fake_image_dict[k])
torchvision.utils.make_grid(fake_output_test['rgb'])
torchvision.utils.make_grid(batch['rgb'])
torchvision.utils.make_grid(img_tnesor)
torchvision.utils.make_grid(img_tnesor, nrow=batch_size)
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/networks/GAN/discriminators/conv.py#L105
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/networks/GAN/discriminators/stylegan.py#L75
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/networks/GAN/discriminators/stylegan.py#L76
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/networks/GAN/discriminators/stylegan.py#L140
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/networks/GAN/discriminators/stylegan2_discriminator.py#L90
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/networks/GAN/discriminators/stylegan_discriminator.py#L79
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/networks/GAN/generators/giraffe.py#L666
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/networks/GAN/generators/giraffe.py#L753
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/networks/GAN/generators/urbangiraffe.py#L378
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/networks/GAN/generators/urbangiraffe.py#L562
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/networks/models/stylegan2_discriminator.py#L388
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/train/trainers/urbangiraffe.py#L328
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/train/trainers/urbangiraffe.py#L603
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/train/trainers/urbangiraffe.py#L634
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/train/trainers/urbangiraffe.py#L636
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/utils/img_utils.py#L22
https://github.com/freemty/urbanGIRAFFE/blob/a8053d09d850caf1e868fbd7b978e32ea2380c25/lib/utils/img_utils.py#L28

=========================================
https://github.com/cvlab-columbia/zero123
=========================================

Found 11 times
vutils.make_grid(imgs, padding=2, nrow=4)
make_grid(stacked, nrow=2)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
torchvision.utils.make_grid(images[k])
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/3drec/run_img_sampling.py#L65
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/3drec/voxnerf/vis.py#L87
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/main.py#L350
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/main.py#L363
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/main.py#L485
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/ldm/models/diffusion/ddpm.py#L433
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/ldm/models/diffusion/ddpm.py#L607
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/ldm/models/diffusion/ddpm.py#L1310
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/ldm/models/diffusion/ddpm.py#L1561
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/ldm/models/diffusion/ddpm.py#L1748
https://github.com/cvlab-columbia/zero123/blob/f426883b1a7353d91ddc34a551dd91b6223e4ce8/zero123/ldm/modules/image_degradation/utils_image.py#L353

==========================================
https://github.com/pansanity666/TransHuman
==========================================

Found 4 times
torchvision.utils.save_image(rendered_img.permute(0,3,1,2), save_path)
torchvision.utils.save_image(batch['input_imgs'][t][0][0:1], './input_img_T{}.jpg'.format(t))
torchvision.utils.save_image(project_img.unsqueeze(0).unsqueeze(0).cpu() * 0.5 + \
                                        batch['input_imgs'][t][0][0:1].cpu() *0.5, \
                                        './input_img_with_uv_T{}.jpg'.format(t))
torchvision.utils.save_image(project_img.unsqueeze(0).unsqueeze(0).cpu() * 0.5 + \
                                        batch['input_imgs'][t][0][0:1].cpu() *0.5, \
                                        './input_img_with_uv_T{}.jpg'.format(t))
https://github.com/pansanity666/TransHuman/blob/efe870349f39e8e5fce3379b76107b0c4e35e2df/render_mesh_dynamic.py#L353
https://github.com/pansanity666/TransHuman/blob/efe870349f39e8e5fce3379b76107b0c4e35e2df/lib/networks/renderer/if_clight_renderer.py#L138
https://github.com/pansanity666/TransHuman/blob/efe870349f39e8e5fce3379b76107b0c4e35e2df/lib/networks/renderer/if_clight_renderer.py#L147
https://github.com/pansanity666/TransHuman/blob/efe870349f39e8e5fce3379b76107b0c4e35e2df/lib/networks/renderer/if_clight_renderer.py#L243

=============================================
https://github.com/qianmingduowan/Sat2Density
=============================================

Found 21 times
torchvision.utils.save_image(save_img,os.path.join(opt.save_dir,name))
torchvision.utils.make_grid(
                vis_images, nrow=1, padding=0, normalize=False)
torchvision.utils.save_image(image_grid, path, nrow=1)
torchvision.utils.make_grid(
        visualization_images.data, nrow=1, padding=0, normalize=False)
torchvision.utils.save_image(image_grid, output_filename, nrow=1)
torchvision.utils.make_grid(
        image, nrow=1, padding=0, normalize=False)
torchvision.utils.save_image(image_grid, filename, nrow=1)
torchvision.utils.save_image([self.fake_B[i].cpu(),self.real_B[i].cpu(),torch.flip(torch.from_numpy(depth_save).permute(2,0,1)/255.,[0])],os.path.join(opt.vis_dir,os.path.basename(self.image_paths[i])))
torchvision.utils.save_image( [self.real_A[i].cpu() ,torch.flip(torch.from_numpy(depth_sat_save).permute(2,0,1)/255.,[0])],os.path.join(opt.vis_dir,os.path.basename(self.image_paths[i]).rsplit('.', 1)[0]+'_sat.jpg'))
torchvision.utils.save_image([self.out_put['opacity'][i]] ,os.path.join(opt.vis_dir,os.path.basename(self.image_paths[i]).rsplit('.', 1)[0]+'_sat.jpg'))
torchvision.utils.save_image(torch.flip(torch.from_numpy(depth_sat_save).permute(2,0,1)/255.,[0]) ,os.path.join('vis_video',os.path.basename(self.image_paths[0])).replace('.png','_satdepth.png'))
torchvision.utils.save_image( [self.real_A[0].cpu() ]                      ,os.path.join('vis_video',os.path.basename(self.image_paths[0]).replace('.png','_sat.png')))
torchvision.utils.save_image( [self.real_B[0].cpu() ]                      ,os.path.join('vis_video',os.path.basename(self.image_paths[0]).replace('.png','_pano.png')))
torchvision.utils.save_image(save_img,os.path.join('vis_video',os.path.basename(self.image_paths[0])).replace('.png',name))
torchvision.utils.save_image(save_img,os.path.join('vis_video',os.path.basename(self.image_paths[0])).replace('.png',name))
torchvision.utils.save_image(save_img,os.path.join('vis_interpolation',name))
torchvision.utils.save_image( [self.real_A[0].cpu() ]  ,os.path.join(opt.vis_dir,os.path.basename(self.image_paths[0]).replace('.png',name+'_sat.png')))
torchvision.utils.save_image(self.fake_B[0].cpu(),os.path.join(opt.vis_dir, name))
torchvision.utils.save_image(torch.cat([rgb,pano],2), opt.arch.gen.transform_mode + '.png')
torchvision.utils.save_image(opacity, 'opa.png')
torchvision.utils.save_image(torch.nn.functional.grid_sample(img, equ.float(), align_corners = True)*0.99, 'test_30.png')
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/test.py#L293
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/imaginaire/trainers/base.py#L546
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/imaginaire/trainers/base.py#L550
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/imaginaire/utils/io.py#L43
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/imaginaire/utils/io.py#L45
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/imaginaire/utils/visualization/common.py#L37
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/imaginaire/utils/visualization/common.py#L39
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/base_model.py#L239
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/base_model.py#L241
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/base_model.py#L243
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/base_model.py#L349
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/base_model.py#L350
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/base_model.py#L351
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/base_model.py#L360
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/base_model.py#L364
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/base_model.py#L427
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/base_model.py#L479
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/base_model.py#L486
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/geometry_transform.py#L270
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/geometry_transform.py#L272
https://github.com/qianmingduowan/Sat2Density/blob/49faa2c95069e3f0ea05b4874ed77c1660ba4ebe/model/sample.py#L110

==========================================
https://github.com/KaiqiangXiong/CL-MVSNet
==========================================

Found 1 times
vutils.make_grid(img, padding=0, nrow=1, normalize=True, scale_each=True)
https://github.com/KaiqiangXiong/CL-MVSNet/blob/92a6190b99f30a9f7c098a0d4773f036994fd683/tools.py#L88

==============================
https://github.com/Sense-X/HoP
==============================

Found 2 times
make_grid(tensor, pad_value=pad_value, normalize=False)
torchvision.utils.save_image(torch.tensor(tensor).permute(2, 0, 1), path)
https://github.com/Sense-X/HoP/blob/9f6e8823c26a7b126091d6dffaf7eb277a14b5d5/mmdet3d_plugin/models/utils/visual.py#L22
https://github.com/Sense-X/HoP/blob/9f6e8823c26a7b126091d6dffaf7eb277a14b5d5/mmdet3d_plugin/models/utils/visual.py#L23

=====================================
https://github.com/amundra15/livehand
=====================================

Found 1 times
save_image(image, os.path.join(prefix, image_name + '.png'), format=None)
https://github.com/amundra15/livehand/blob/b5137cf2da7efd1b58b5b54b50b81dd1a460d331/fairnr/renderer.py#L226

==================================
https://github.com/DIVE128/DMVSNet
==================================

Found 1 times
vutils.make_grid(img, padding=0, nrow=1, normalize=True, scale_each=True)
https://github.com/DIVE128/DMVSNet/blob/d37a0b2da8017ac88d48208e4f062c72248c48d5/tools.py#L96

==========================================
https://github.com/andrewsonga/Total-Recon
==========================================

Found 1 times
save_image(random_image, f.name)
https://github.com/andrewsonga/Total-Recon/blob/7b49ce1a9da0f1a10a79e787b14b7e5c747e5c44/third_party/detectron2_old/projects/DensePose/tests/test_image_list_dataset.py#L19

================================
https://github.com/kyleleey/RICO
================================

Found 4 times
torchvision.utils.make_grid(normal_maps_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(output_vs_gt_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(depth_maps_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(output_vs_gt_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
https://github.com/kyleleey/RICO/blob/4254e6ff8581d21833e1b42e0352a7a63da788b1/code/utils/plots.py#L528
https://github.com/kyleleey/RICO/blob/4254e6ff8581d21833e1b42e0352a7a63da788b1/code/utils/plots.py#L549
https://github.com/kyleleey/RICO/blob/4254e6ff8581d21833e1b42e0352a7a63da788b1/code/utils/plots.py#L571
https://github.com/kyleleey/RICO/blob/4254e6ff8581d21833e1b42e0352a7a63da788b1/code/utils/plots.py#L598

=======================================
https://github.com/jimmy19991222/ELFNet
=======================================

Found 1 times
vutils.make_grid(value, padding=0, nrow=1, normalize=True, scale_each=True)
https://github.com/jimmy19991222/ELFNet/blob/b2051cd149fb7442be04acab03fce47f05b9a370/utilities/experiment.py#L87

======================================
https://github.com/xubaixinxbx/3dheads
======================================

Found 2 times
torchvision.utils.make_grid(normal_maps_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(output_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
https://github.com/xubaixinxbx/3dheads/blob/19e03cf5d8ec2e3be8e49cc6ca8326b6f3374a68/code/utils/plots.py#L413
https://github.com/xubaixinxbx/3dheads/blob/19e03cf5d8ec2e3be8e49cc6ca8326b6f3374a68/code/utils/plots.py#L435

==================================
https://github.com/Arlo0o/NaviNeRF
==================================

Found 3 times
make_grid(interpolation_deformed, nrow=11, padding=1, pad_value=0.0)
make_grid(shifts_imgs, nrow=(2 * shifts_count + 1), padding=1)
make_grid(next(iter(self.dataloader)), nrow=self.grid_size[0])
https://github.com/Arlo0o/NaviNeRF/blob/5a451fbb983beee2df3de642890fd69aedac44c7/evaluation.py#L39
https://github.com/Arlo0o/NaviNeRF/blob/5a451fbb983beee2df3de642890fd69aedac44c7/visualization.py#L88
https://github.com/Arlo0o/NaviNeRF/blob/5a451fbb983beee2df3de642890fd69aedac44c7/torch_tools/visualization.py#L25

====================================
https://github.com/TQTQliu/ET-MVSNet
====================================

Found 1 times
vutils.make_grid(img, padding=0, nrow=1, normalize=True, scale_each=True)
https://github.com/TQTQliu/ET-MVSNet/blob/0d7cf2618bd4d9a438f66864e4c7f70610751b9d/utils.py#L91

=========================================
https://github.com/ethanweber/nerfbusters
=========================================

Found 3 times
torchvision.utils.make_grid(depth_maps, nrow=math.ceil(n_samples**0.5), padding=0)
torchvision.utils.make_grid(rgb, nrow=math.ceil(n_samples**0.5), padding=0)
torchvision.utils.make_grid(slices, nrow=len(slices), ncol=bs, padding=1, normalize=True, scale_each=True)
https://github.com/ethanweber/nerfbusters/blob/7ff88817a47922979806def2329b69009eeee3e3/nerfbusters/utils/visualizations.py#L83
https://github.com/ethanweber/nerfbusters/blob/7ff88817a47922979806def2329b69009eeee3e3/nerfbusters/utils/visualizations.py#L95
https://github.com/ethanweber/nerfbusters/blob/7ff88817a47922979806def2329b69009eeee3e3/nerfbusters/utils/visualizations.py#L341

=====================================
https://github.com/nerminsamet/seedal
=====================================

Found 2 times
torchvision.utils.make_grid(img, normalize=True, scale_each=True)
torchvision.utils.save_image(torchvision.utils.make_grid(img, normalize=True, scale_each=True), os.path.join(args.output_dir, "img.png"))
https://github.com/nerminsamet/seedal/blob/52fdeeb42cf83b4b65814ae8b81efb2f7d61bb07/dino_model/visualize_attention.py#L198
https://github.com/nerminsamet/seedal/blob/52fdeeb42cf83b4b65814ae8b81efb2f7d61bb07/dino_model/visualize_attention.py#L198

======================================
https://github.com/daveredrum/Text2Tex
======================================

Found 8 times
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/ControlNet/cldm/cldm.py#L373
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/ControlNet/cldm/logger.py#L31
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/ControlNet/ldm/models/diffusion/ddpm.py#L479
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/ControlNet/ldm/models/diffusion/ddpm.py#L658
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/ControlNet/ldm/models/diffusion/ddpm.py#L1207
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/ControlNet/ldm/models/diffusion/ddpm.py#L1445
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/ControlNet/ldm/models/diffusion/ddpm.py#L1607
https://github.com/daveredrum/Text2Tex/blob/8524249321e63a1338193a1a36976b8097bb6dbd/models/ControlNet/ldm/modules/image_degradation/utils_image.py#L353

===========================================
https://github.com/rawalkhirodkar/egohumans
===========================================

Found 5 times
make_grid(rend_imgs, nrow=nrow)
torchvision.utils.make_grid(grid, nrow, padding)
torchvision.utils.make_grid(grid, nrow, padding)
torchvision.utils.make_grid(grid, nrow, padding)
torchvision.utils.make_grid(grid, nrow, padding)
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/assets/pare/pare/utils/renderer.py#L204
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/mmpose/core/visualization/judge_visualize_hook.py#L247
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/mmpose/core/visualization/visualize_hook.py#L498
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/mmpose/core/visualization/visualize_hook.py#L561
https://github.com/rawalkhirodkar/egohumans/blob/d7875dd4b3e3cc4e306af386d5c4febf1290a3e9/egohumans/external/mmpose/mmpose/core/visualization/visualize_hook.py#L621

=========================================
https://github.com/Rgtemze/HyperDiffusion
=========================================

Found 42 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(pred, scale_each=False, normalize=True)
make_grid(pred[0::2, :, :, :], scale_each=False, normalize=True)
make_grid(pred[1::2, :, :, :], scale_each=False, normalize=True)
make_grid(pred_angle, scale_each=False, normalize=True)
make_grid(pred_mag, scale_each=False, normalize=True)
make_grid(gt_field[..., 0, :, :], scale_each=False, normalize=True)
make_grid(gt_field[..., 1, :, :], scale_each=False, normalize=True)
make_grid(gt_angle, scale_each=False, normalize=True)
make_grid(gt_mag, scale_each=False, normalize=True)
make_grid(velocity[..., 0, :, :], scale_each=False, normalize=True)
make_grid(
                dataio.lin2img(gt["squared_slowness_grid"])[:2, :1],
                scale_each=False,
                normalize=True,
            )
make_grid(
                dataio.lin2img(model_input["img_sub"])[:2, :1],
                scale_each=False,
                normalize=True,
            )
make_grid(grad_norm, scale_each=False, normalize=True)
make_grid(output_vs_gt, scale_each=False, normalize=True)
make_grid(output_vs_gt, scale_each=False, normalize=True)
make_grid(output_vs_gt, scale_each=False, normalize=True)
make_grid(output_vs_gt, scale_each=False, normalize=True)
make_grid(output_vs_gt_laplace, scale_each=False, normalize=True)
make_grid(grads_img, scale_each=False, normalize=True)
make_grid(gt_img, scale_each=False, normalize=True)
make_grid(pred_img, scale_each=False, normalize=True)
make_grid(pred_grads_img, scale_each=False, normalize=True)
make_grid(output_vs_gt, scale_each=False, normalize=True)
make_grid(output_vs_gt_gradients, scale_each=False, normalize=True)
make_grid(gt_img, scale_each=False, normalize=True)
make_grid(gt_grads_img, scale_each=False, normalize=True)
make_grid(pred_img, scale_each=False, normalize=True)
make_grid(pred_grads_img, scale_each=False, normalize=True)
make_grid(output_vs_gt_gradients, scale_each=False, normalize=True)
make_grid(gt_grads1_img, scale_each=False, normalize=True)
make_grid(gt_grads2_img, scale_each=False, normalize=True)
make_grid(gt_grads_img, scale_each=False, normalize=True)
make_grid(pred_grads_img, scale_each=False, normalize=True)
make_grid(gt_img1, scale_each=False, normalize=True)
make_grid(gt_img2, scale_each=False, normalize=True)
make_grid(pred_img, scale_each=False, normalize=True)
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/ldm/main.py#L377
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/ldm/main.py#L389
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/ldm/ldm/models/diffusion/ddpm.py#L474
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/ldm/ldm/models/diffusion/ddpm.py#L674
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/ldm/ldm/models/diffusion/ddpm.py#L1698
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/ldm/ldm/modules/image_degradation/utils_image.py#L394
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L101
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L181
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L186
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L191
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L196
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L215
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L220
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L225
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L230
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L240
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L247
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L258
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L305
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L312
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L507
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L538
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L656
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L670
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L681
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L688
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L709
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L720
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L757
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L773
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L780
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L787
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L794
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L801
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L859
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L872
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L877
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L883
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L888
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L896
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L901
https://github.com/Rgtemze/HyperDiffusion/blob/fd2c5812aa62bc278061ccbcdd0185ca9ce46ed0/siren/utils.py#L909

=======================================
https://github.com/songrise/avatarcraft
=======================================

Found 2 times
torchvision.utils.make_grid(imgs, nrow = 5, padding = 10)
torchvision.utils.save_image(img_grid, 'img_grid.png')
https://github.com/songrise/avatarcraft/blob/190a4bb07ac1959d50ad72563a908c8bc4eddc47/models/diffusion.py#L387
https://github.com/songrise/avatarcraft/blob/190a4bb07ac1959d50ad72563a908c8bc4eddc47/models/diffusion.py#L388

====================================
https://github.com/samb-t/x2ct-vqvae
====================================

Found 3 times
torchvision.utils.make_grid(images.clamp(0, 1), nrow=int(np.sqrt(images.size(0))), padding=0)
torchvision.utils.save_image(torch.clamp(images[idx], 0, 1), f"{log_dir}/{im_name}_{step}_{idx}.png")
torchvision.utils.save_image(
            torch.clamp(images, 0, 1),
            f"{log_dir}/{im_name}_{step}.png",
            nrow=int(np.sqrt(images.shape[0])),
            padding=0
        )
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/utils/log_utils.py#L104
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/utils/log_utils.py#L113
https://github.com/samb-t/x2ct-vqvae/blob/738ee14dc0bb4b9222a7bd96e6d490a50612d595/utils/log_utils.py#L115

===============================
https://github.com/chihina/PJAE
===============================

Found 7 times
save_image(person_person_joint_attention_heatmap, os.path.join(save_image_dir_dic['person_person_jo_att'], data_type_id, f'{mode}_{data_id}_person_person_jo_att.png'))
save_image(person_scene_joint_attention_heatmap, os.path.join(save_image_dir_dic['person_scene_jo_att'], data_type_id, f'{mode}_{data_id}_person_scene_jo_att.png'))
save_image(final_joint_attention_heatmap, os.path.join(save_image_dir_dic['final_jo_att'], data_type_id, f'{mode}_{data_id}_final_jo_att.png'))
save_image(img_gt[person_idx], os.path.join(save_image_dir_dic['gt_map'], data_type_id, f'{data_id}', f'{mode}_{data_id}_{person_idx}_gt.png'))
save_image(person_person_attention_heatmap[person_idx], os.path.join(save_image_dir_dic['person_person_att'], data_type_id, f'{data_id}', f'{mode}_{data_id}_{person_idx}_person_person_att.png'))
save_image(person_scene_attention_heatmap[person_idx], os.path.join(save_image_dir_dic['person_scene_att'], data_type_id, f'{data_id}', f'{mode}_{data_id}_{person_idx}_person_scene_att.png'))
save_image(ang_att_map[person_idx], os.path.join(save_image_dir_dic['person_scene_ang_att'], data_type_id, f'{data_id}', f'{mode}_{data_id}_{person_idx}_person_scene_ang_att.png'))
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/demo_ours.py#L337
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/demo_ours.py#L338
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/demo_ours.py#L339
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/demo_ours.py#L344
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/demo_ours.py#L345
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/demo_ours.py#L346
https://github.com/chihina/PJAE/blob/0c0cb1875ab28895c0a21846c7b945bf0e47ccf0/demo_ours.py#L348

===============================
https://github.com/MCG-NJU/EVAD
===============================

Found 1 times
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
https://github.com/MCG-NJU/EVAD/blob/0efdb7e1156d4b0b419cd240555f8bbca45e4bf6/slowfast/visualization/tensorboard_vis.py#L418

=======================================
https://github.com/sqiangcao99/E2E-LOAD
=======================================

Found 3 times
make_grid(vid, padding=8, pad_value=1.0, nrow=sz[0])
make_grid(tensor, padding=8, pad_value=1.0, nrow=nrow)
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
https://github.com/sqiangcao99/E2E-LOAD/blob/beddae33d57b30393ccb2145be377ce3953183bf/src/utils/misc.py#L291
https://github.com/sqiangcao99/E2E-LOAD/blob/beddae33d57b30393ccb2145be377ce3953183bf/src/utils/misc.py#L311
https://github.com/sqiangcao99/E2E-LOAD/blob/beddae33d57b30393ccb2145be377ce3953183bf/src/visualization/tensorboard_vis.py#L402

====================================
https://github.com/suzhigangssz/AVIH
====================================

Found 1 times
v_utils.save_image(all_picture, opt.output + str(i) + '.png', normalize=True, padding=0, nrow=opt.batch_size)
https://github.com/suzhigangssz/AVIH/blob/1151cfd3fd8d8f9222d775afe3eb79fcf459df28/main.py#L39

===============================================
https://github.com/kcshum/neural_360_decoration
===============================================

Found 9 times
torchvision.utils.make_grid(output_imgs.cpu(), nrow=ncol, normalize=True)
vutils.save_image(fakes,
                                      os.path.join(output_dir, 'sample_{}.png'.format(cur_tick)),
                                      padding=2, nrow=5, normalize=True)
save_image(img.add(1).div_(2).clamp(min=0, max=1),
                           os.path.join(out_path, name.split('/')[-1]),
                           nrow=1, padding=0, normalize=False, range=None, scale_each=False)
save_image(img.add(1).div_(2).clamp(min=0, max=1),
                               os.path.join(out_path, name.split('/')[-1]),
                               nrow=1, padding=0, normalize=False, value_range=None, scale_each=False)
save_image(fea_img.add(1).div_(2).clamp(min=0, max=1),
                               os.path.join(out_fea_path, name.split('/')[-1]),
                               nrow=1, padding=0, normalize=False, value_range=None, scale_each=False)
save_image(lm.clamp(min=0, max=1),
                                   os.path.join(out_path, name.split('/')[-1]),
                                   nrow=1, padding=0, normalize=False, value_range=None, scale_each=False)
save_image(fea.add(1).div_(2).clamp(min=0, max=1),
                                   os.path.join(out_fea_path, name.split('/')[-1]),
                                   nrow=1, padding=0, normalize=False, value_range=None, scale_each=False)
make_grid(imgs.float().cpu(), *args, **kwargs)
utils.make_grid(
            images.float(), normalize=True, value_range=(-1, 1), **kwargs
        )
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/scripts/style-gan-pytorch/generate.py#L273
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/scripts/style-gan-pytorch/train.py#L270
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/models/pretraingan.py#L331
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/models/v2_cycleblobgan.py#L1096
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/models/v2_cycleblobgan.py#L1100
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/models/v2_cycleblobgan.py#L1160
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/models/v2_cycleblobgan.py#L1163
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/utils/io.py#L254
https://github.com/kcshum/neural_360_decoration/blob/a34701de35ed55b2531eb28aeb4efb036917a8df/src/utils/wandb_logger.py#L151

==============================================
https://github.com/wagner-group/reap-benchmark
==============================================

Found 14 times
torchvision.utils.save_image(
            patch_mask, str(save_dir / "patch_mask.png")
        )
torchvision.utils.save_image(
            adv_patch, str(save_dir / "adversarial_patch.png")
        )
torchvision.utils.save_image(
                            img_render, f"tmp_train_debug_{iteration:05d}.png"
                        )
torchvision.utils.save_image(self.images, os.path.join(save_dir, name))
save_image(image_resized, f"tmp/{index:02d}_test.png")
save_image(
                    relighted_syn_obj, f"tmp/{index:02d}_relighted_syn_obj.png"
                )
save_image(warped_patch, f"tmp/{index:02d}_M2_warped_patch.png")
save_image(warped_mask, f"tmp/{index:02d}_M2_warped_mask.png")
save_image(
                torch_image * warped_mask, f"tmp/{index:02d}_real_patch.png"
            )
save_image(warped_patch, f"tmp/{index:02d}_reap_patch.png")
save_image(render_image, f"{DATA_DIR}/{EXP_NAME}/images/{index:03d}.jpg")
make_grid(imgs, nrow=num_rows, padding=4, pad_value=1)
save_image(grid, "tmp/all_crops.png")
save_image(final_img, "test.png")
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/gen_adv_main.py#L132
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/gen_adv_main.py#L135
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/train_detectron_main.py#L301
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/adv_patch_bench/transforms/render_image.py#L303
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/scripts/run_realism_test_main.py#L337
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/scripts/run_realism_test_main.py#L356
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/scripts/run_realism_test_main.py#L402
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/scripts/run_realism_test_main.py#L403
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/scripts/run_realism_test_main.py#L404
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/scripts/run_realism_test_main.py#L407
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/scripts/run_realism_test_main.py#L435
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/scripts/run_realism_test_main.py#L480
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/scripts/run_realism_test_main.py#L481
https://github.com/wagner-group/reap-benchmark/blob/2e702808dc763d65771dc7538d93eff64996a25e/scripts_gen_reap/classify_traffic_signs.py#L421

=======================================
https://github.com/BNU-IVC/FastPoseGait
=======================================

Found 1 times
vutils.make_grid(
                v, normalize=True, scale_each=True)
https://github.com/BNU-IVC/FastPoseGait/blob/8140f6714f2f47cb6a2d90afcdb777b8c6fd5857/fastposegait/utils/msg_manager.py#L70

==========================================
https://github.com/liufeng2915/3DInvarReID
==========================================

Found 2 times
torchvision.utils.make_grid( batch[key], normalize=True, range=(-1,1), nrow=8)
torchvision.utils.make_grid( batch[key], normalize=True, range=(-1,1), nrow=8)
https://github.com/liufeng2915/3DInvarReID/blob/8c4242a5d355aaee675dce8aae76565f18f203f1/matching/lib/model/helpers.py#L16
https://github.com/liufeng2915/3DInvarReID/blob/8c4242a5d355aaee675dce8aae76565f18f203f1/pretrain/lib/model/helpers.py#L16

=======================================
https://github.com/gudaochangsheng/HSTL
=======================================

Found 1 times
vutils.make_grid(
                v, normalize=True, scale_each=True)
https://github.com/gudaochangsheng/HSTL/blob/2325e0e4e08f50067fb1a7d8561f95ceb80a0eb5/lib/utils/msg_manager.py#L70

====================================
https://github.com/fdbtrs/idiff-face
====================================

Found 20 times
make_grid(id_images, nrow=5, padding=0)
save_image(grid, aligned_sample_path)
make_grid(id_images, nrow=5, padding=0)
save_image(grid, aligned_sample_path)
make_grid(aligned_id_images, nrow=5, padding=0)
save_image(grid, ensure_path_join(aligned_samples_dir, id_name))
make_grid(images, nrow=k+k+1, pad_value=1.0)
save_image(grid, "nn.jpg")
make_grid(samples_uncond, nrow=N_PER_ROW, pad_value=PAD_VALUE, padding=PADDING)
make_grid(samples_syn_cond, nrow=N_PER_ROW, pad_value=PAD_VALUE, padding=PADDING)
make_grid(samples_fixed_context, nrow=N_PER_ROW, pad_value=PAD_VALUE, padding=PADDING)
make_grid(samples_cond, nrow=N_PER_ROW, pad_value=PAD_VALUE, padding=PADDING)
make_grid(samples_fixed_context, nrow=N_PER_ROW, pad_value=PAD_VALUE, padding=PADDING)
make_grid(x[:N_PER_BLOCK].cpu(), nrow=N_PER_ROW, pad_value=PAD_VALUE, padding=PADDING)
save_image(grid, save_path)
make_grid(samples, nrow=4, padding=0)
save_image(grid, ensure_path_join(samples_dir, f"{prefix}.png"))
save_image(img, os.path.join(save_dir, f"{id_name}_{i}.png"))
save_image(torch.from_numpy(warped_face).permute(2, 0, 1) / 255.0, os.path.join(out_folder, img_name))
save_image(torch.from_numpy(warped_face).permute(2, 0, 1) / 255.0, os.path.join(out_folder, img_name))
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/align.py#L214
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/align.py#L216
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/align.py#L255
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/align.py#L258
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/align.py#L262
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/align.py#L263
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/create_nn_visualisation.py#L143
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/create_nn_visualisation.py#L145
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/main.py#L88
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/main.py#L99
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/main.py#L108
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/main.py#L116
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/main.py#L125
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/main.py#L131
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/main.py#L133
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/sample.py#L149
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/sample.py#L150
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/split_identity_blocks.py#L64
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/utils/alignment/mtcnn_align.py#L76
https://github.com/fdbtrs/idiff-face/blob/8489a82c1d5df5942695c412ea3a04296be42377/utils/alignment/mtcnn_align.py#L119

====================================
https://github.com/sczhou/ProPainter
====================================

Found 3 times
torchvision.utils.make_grid(img_results, nrow=1, normalize=True)
torchvision.utils.make_grid(img_results, nrow=1, normalize=True)
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
https://github.com/sczhou/ProPainter/blob/a39d634423fa0158a3119515a231a4df6390c972/core/trainer.py#L459
https://github.com/sczhou/ProPainter/blob/a39d634423fa0158a3119515a231a4df6390c972/core/trainer.py#L467
https://github.com/sczhou/ProPainter/blob/a39d634423fa0158a3119515a231a4df6390c972/utils/img_util.py#L71

================================
https://github.com/Hedlen/MEFLUT
================================

Found 1 times
utils.save_image(t, "%s/%s.jpg" % (path, name))
https://github.com/Hedlen/MEFLUT/blob/64f065ab2ecd3ffa468045e45bf30daac2af13d2/test.py#L142

===============================
https://github.com/mdyao/CSNorm
===============================

Found 2 times
torchvision.utils.save_image((rlt * 255).round() / 255, 'rlt.png', nrow=1, padding=0,
                                 normalize=False)
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/mdyao/CSNorm/blob/49bf5a07ac1c58c8d2c221ac86022698c7f1c897/data/util.py#L492
https://github.com/mdyao/CSNorm/blob/49bf5a07ac1c58c8d2c221ac86022698c7f1c897/utils/util.py#L144

===============================
https://github.com/DelinQu/qrsc
===============================

Found 6 times
save_image(rs, "rs_{:04d}.png".format(i))
save_image(gt, "gs.png")
save_image(rs, "rs_{:04d}.png".format(i))
save_image(gt, "gs.png")
save_image(rs, "rs_{:04d}.png".format(i))
save_image(gt, "gs.png")
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/ACC_RSC.py#L91
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/ACC_RSC.py#L92
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/BSRSC.py#L114
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/BSRSC.py#L115
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/Fastec.py#L141
https://github.com/DelinQu/qrsc/blob/e161f7a2726a08085f31fc9986800ec049518e78/src/dataset/Fastec.py#L142

=======================================================
https://github.com/Yan98/Event-Camera-Data-Pre-training
=======================================================

Found 1 times
save_image(sample, path, normalize = True, value_range = value_range)
https://github.com/Yan98/Event-Camera-Data-Pre-training/blob/0b71793bcd99de4c252cd944b22d77e3d945fd02/utils/visualizations.py#L31

===================================
https://github.com/fengzhang427/LRD
===================================

Found 13 times
vutils.save_image(denoised_image.data, '%s/denoised/%s_%s.png' % (save_path, total_iter, ratio))
vutils.save_image(noisy_image.data, '%s/noisy/%s_%s.png' % (save_path, total_iter, ratio))
vutils.save_image(clean_image.data, '%s/clean/%s_%s.png' % (save_path, total_iter, ratio))
vutils.save_image(denoise_rbg_image.data, file_name_denoise, nrow=1)
vutils.save_image(noisy_rbg_image.data, file_name_noisy, nrow=1)
vutils.save_image(denoise_rbg_image.data, '%s/denoised/%s_ISO%s_%sEV.bmp' % (save_path, total_iter, iso, ev), nrow=1)
vutils.save_image(noisy_rbg_image.data, '%s/noisy/%s_ISO%s_%sEV.bmp' % (save_path, total_iter, iso, ev), nrow=1)
vutils.save_image(clean_rbg_image.data, '%s/clean/%s_ISO%s_%sEV.bmp' % (save_path, total_iter, iso, ev), nrow=1)
vutils.save_image(denoised_image.data, '%s/denoised/%s_%s.png' % (save_path, total_iter, ratio))
vutils.save_image(noisy_image.data, '%s/noisy/%s_%s.png' % (save_path, total_iter, ratio))
vutils.save_image(clean_image.data, '%s/clean/%s_%s.png' % (save_path, total_iter, ratio))
vutils.make_grid(image_tensor.data, nrow=display_image_num, padding=0, normalize=False)
vutils.save_image(image_grid, file_name, nrow=1)
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/test_denoise_ELD.py#L65
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/test_denoise_ELD.py#L66
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/test_denoise_ELD.py#L67
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/test_denoise_LRD.py#L72
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/test_denoise_LRD.py#L75
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/test_denoise_LRD.py#L154
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/test_denoise_LRD.py#L156
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/test_denoise_LRD.py#L158
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/test_denoise_SID.py#L89
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/test_denoise_SID.py#L90
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/test_denoise_SID.py#L91
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/utils.py#L96
https://github.com/fengzhang427/LRD/blob/451f079d1286b251d9f184e093c8ba2d7354d1b5/utils.py#L97

======================================================================
https://github.com/booker-max/Unsupervised-Deraining-with-Event-Camera
======================================================================

Found 3 times
vutils.make_grid(self.vis_events_sequence(vis_event), normalize=True, scale_each=True)
vutils.make_grid(self.vis_events_sequence(vis_gan_event), normalize=True, scale_each=True)
vutils.make_grid(self.vis_events_sequence(vis_event), normalize=True, scale_each=True)
https://github.com/booker-max/Unsupervised-Deraining-with-Event-Camera/blob/5d19642e318f2ebe11130017ac4a5145235a3b09/trainer/trainer.py#L286
https://github.com/booker-max/Unsupervised-Deraining-with-Event-Camera/blob/5d19642e318f2ebe11130017ac4a5145235a3b09/trainer/trainer.py#L288
https://github.com/booker-max/Unsupervised-Deraining-with-Event-Camera/blob/5d19642e318f2ebe11130017ac4a5145235a3b09/trainer/trainer.py#L371

==========================================
https://github.com/eslambakr/HRS_benchmark
==========================================

Found 48 times
make_grid(imgs, nrow=3, padding=0)
torchvision.utils.save_image(imgs, path, **kwargs)
make_grid(imgs, nrow=3, padding=0)
save_image(imgs[i], str(out_path), normalize=True)
save_image(imgs, path, normalize=True)
save_image(imgs[i], os.path.join(path, f'{i}.jpg'), normalize=True)
save_image(torch.cat(imgs, dim=0), os.path.join(path,f'concat.jpg'), normalize=True)
make_grid(outs, nrow=len(configs))
save_image(make_grid(outs, nrow=len(configs)), output_path, normalize=True)
torchvision.utils.make_grid(img, normalize=True, scale_each=True)
torchvision.utils.save_image(torchvision.utils.make_grid(img, normalize=True, scale_each=True), os.path.join(args.output_dir, "img.png"))
save_image(image, outputs_dir / f'{i}.png', normalize=True)
make_grid(t.float(), nrow = int(sqrt(k)), normalize = True, range = (-1, 1))
torchvision.utils.make_grid(cool_captions_sampled, nrow=11)
torchvision.utils.save_image(
                        torchvision.utils.make_grid(cool_captions_sampled, nrow=11),
                        os.path.join(f"results/{args.run_name}", f"cool_captions_{step:03d}.png")
                    )
torchvision.utils.save_image(log_images, os.path.join(f"results/{args.run_name}", f"{step:03d}.png"))
torchvision.utils.save_image(imgs, path, **kwargs)
torchvision.utils.save_image(log_images, os.path.join(f"results/{args.run_name}", f"{step:03d}.png"))
torchvision.utils.save_image(log_images, os.path.join(f"results/{args.run_name}", f"{step:03d}.png"))
vutils.make_grid(torch.cat([orig, recon]), nrow=len(orig))
vutils.make_grid(torch.cat([orig, recon]), nrow=len(orig))
vutils.save_image(comp, f"results/{num_frames}.jpg")
vutils.make_grid(torch.cat([orig, recon]), nrow=len(orig))
vutils.save_image(comp, f"results/{args.run_name}/{step}.jpg")
make_grid(grid, nrow=n_rows)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
torchvision.utils.make_grid(images, nrow=8)
torchvision.utils.make_grid(recons, nrow=8)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/cogview2_completion.py#L92
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/cogview2_text2image.py#L33
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/cogview2_text2image.py#L157
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/predict.py#L233
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/SwissArmyTransformer-main/SwissArmyTransformer/generation/utils.py#L34
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/SwissArmyTransformer-main/SwissArmyTransformer/generation/utils.py#L38
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/SwissArmyTransformer-main/SwissArmyTransformer/generation/utils.py#L40
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/SwissArmyTransformer-main/SwissArmyTransformer/tokenization/cogview/vqvae/api.py#L146
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/SwissArmyTransformer-main/SwissArmyTransformer/tokenization/cogview/vqvae/api.py#L146
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/SwissArmyTransformer-main/examples/yolos/inference_yolos.py#L114
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/CogView2/SwissArmyTransformer-main/examples/yolos/inference_yolos.py#L114
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/DALLE-small/generate.py#L139
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/DALLE-small/train_vae.py#L262
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/paella.py#L179
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/paella.py#L178
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/paella.py#L189
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/paella_inference.py#L47
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/paella_minimal.py#L98
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/scaling/paella_h.py#L171
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/text-to-video/test_reconstructions.py#L59
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/text-to-video/test_reconstructions.py#L67
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/text-to-video/test_reconstructions.py#L71
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/text-to-video/train_vivq.py#L137
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Paella/ongoing_research/text-to-video/train_vivq.py#L140
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Structured-Diffusion-Guidance-master/scripts/txt2img_demo.py#L513
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Structured-Diffusion-Guidance-master/structured_stable_diffusion/models/diffusion/ddpm.py#L374
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Structured-Diffusion-Guidance-master/structured_stable_diffusion/models/diffusion/ddpm.py#L539
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Structured-Diffusion-Guidance-master/structured_stable_diffusion/models/diffusion/ddpm.py#L1297
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/Structured-Diffusion-Guidance-master/structured_stable_diffusion/modules/image_degradation/utils_image.py#L353
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/minDALL-E/examples/transfer_learning_ex.py#L53
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/minDALL-E/examples/transfer_learning_ex.py#L54
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/main.py#L312
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/main.py#L325
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/ldm/models/diffusion/ddpm.py#L374
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/ldm/models/diffusion/ddpm.py#L539
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/ldm/models/diffusion/ddpm.py#L1297
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/scripts/img2img.py#L279
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/scripts/knn2img.py#L391
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v1/scripts/txt2img.py#L348
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v2/ldm/models/diffusion/ddpm.py#L471
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v2/ldm/models/diffusion/ddpm.py#L650
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v2/ldm/models/diffusion/ddpm.py#L1199
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v2/ldm/models/diffusion/ddpm.py#L1437
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v2/ldm/models/diffusion/ddpm.py#L1599
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v2/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v2/scripts/img2img.py#L266
https://github.com/eslambakr/HRS_benchmark/blob/4df908c87f6139dfe4164901b7227b4f69ff3d7f/codes/t2i_models/sd_v2/scripts/txt2img.py#L292

==================================
https://github.com/uvavision/SyViC
==================================

Found 1 times
save_image(im, out_path)
https://github.com/uvavision/SyViC/blob/d2356f70d4d62236cfc81d260339c964a1276feb/finetuning/src/adain_convert.py#L32

=====================================
https://github.com/ryoo-nakamura/OFDB
=====================================

Found 1 times
torchvision.utils.make_grid(v, nrow, padding=1, range=range)
https://github.com/ryoo-nakamura/OFDB/blob/ea761ecb082756a374413704983f9e1f4acc5997/logger.py#L48

========================================
https://github.com/Mountchicken/Union14M
========================================

Found 1 times
torchvision.utils.make_grid(tensor, nrow=5, padding=2)
https://github.com/Mountchicken/Union14M/blob/7fbb89a8e33b80e184d3aea8c3270f6d697827bf/mae/visualize.py#L54

=====================================
https://github.com/XuRuihan/ParCNetV2
=====================================

Found 1 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/XuRuihan/ParCNetV2/blob/f9d97fc05e7e22442813468311144be77f311688/train.py#L842

===================================
https://github.com/apple/ml-fastvit
===================================

Found 1 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, "train-batch-%d.jpg" % batch_idx),
                        padding=0,
                        normalize=True,
                    )
https://github.com/apple/ml-fastvit/blob/8af5928238cab99c45f64fc3e4e7b1516b8224ba/train.py#L1459

==========================================
https://github.com/Lab-LVM/imagenet-models
==========================================

Found 1 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/Lab-LVM/imagenet-models/blob/56500443e4eaac7924ad47aeff65c30e7d9106b8/train.py#L804

=================================
https://github.com/CVIR/contracon
=================================

Found 1 times
utils.make_grid(tensor, nrow=nrow, normalize=True, padding=padding)
https://github.com/CVIR/contracon/blob/e53ea4c92166bd063cfa8f21610f8a948a15b8b6/src/utils/model_parts.py#L27

========================================
https://github.com/OliverRensu/SG-Former
========================================

Found 1 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/OliverRensu/SG-Former/blob/b982803ceb0af70ff20f42784ddac51212ef954e/main.py#L657

=============================================
https://github.com/DoranLyong/SPANet-official
=============================================

Found 1 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/DoranLyong/SPANet-official/blob/71c5f86a1c5370b7a6c21bfe0d1da2e3819350c8/image_classification/train.py#L842

================================
https://github.com/qymeng94/SLTT
================================

Found 5 times
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(0.3*im_data+0.7*mask.expand_as(im_data))
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(0.3*im_data+0.7*mask.expand_as(im_data))
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/utils/visualize.py#L39
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/utils/visualize.py#L52
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/utils/visualize.py#L67
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/utils/visualize.py#L81
https://github.com/qymeng94/SLTT/blob/0758ecd1b7ba965769c9f1e8b1801ef26cc147b1/utils/visualize.py#L98

=========================================
https://github.com/mjq11302010044/Real-CE
=========================================

Found 9 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
torchvision.utils.save_image(
            gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=True, range=(-1, 1))
torchvision.utils.save_image(lq, f'tmp/lq_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
https://github.com/mjq11302010044/Real-CE/blob/14b83bed78c64819653c63d76ccd0b46cc3ee5ca/basicsr/utils/img_util.py#L72
https://github.com/mjq11302010044/Real-CE/blob/14b83bed78c64819653c63d76ccd0b46cc3ee5ca/basicsr/utils/utils_image.py#L250
https://github.com/mjq11302010044/Real-CE/blob/14b83bed78c64819653c63d76ccd0b46cc3ee5ca/test_scripts/test_ffhq_dataset.py#L50
https://github.com/mjq11302010044/Real-CE/blob/14b83bed78c64819653c63d76ccd0b46cc3ee5ca/test_scripts/test_paired_image_dataset.py#L66
https://github.com/mjq11302010044/Real-CE/blob/14b83bed78c64819653c63d76ccd0b46cc3ee5ca/test_scripts/test_paired_image_dataset.py#L67
https://github.com/mjq11302010044/Real-CE/blob/14b83bed78c64819653c63d76ccd0b46cc3ee5ca/test_scripts/test_reds_dataset.py#L67
https://github.com/mjq11302010044/Real-CE/blob/14b83bed78c64819653c63d76ccd0b46cc3ee5ca/test_scripts/test_reds_dataset.py#L69
https://github.com/mjq11302010044/Real-CE/blob/14b83bed78c64819653c63d76ccd0b46cc3ee5ca/test_scripts/test_vimeo90k_dataset.py#L63
https://github.com/mjq11302010044/Real-CE/blob/14b83bed78c64819653c63d76ccd0b46cc3ee5ca/test_scripts/test_vimeo90k_dataset.py#L65

============================================================
https://github.com/AlibabaResearch/AdvancedLiterateMachinery
============================================================

Found 12 times
torchvision.utils.make_grid(
                    test_imgs[-config_dict['num_to_show']:].cpu(), nrow=1)
torchvision.utils.make_grid(
                    test_imgs[-config_dict['num_to_show']:].cpu(), nrow=1)
torchvision.utils.make_grid(ts.cpu(), nrow=1)
torchvision.utils.make_grid(images, nrow=2)
vutils.save_image(save_image, f'demo_imgs/attens/{gt}_{pred}_{flag}.jpg', nrow=2, normalize=True, scale_each=True)
vutils.save_image(save_image, f'atten_imgs/TwoBiTokenViT/{gt}_{count}_{flag}_{pred}.jpg', nrow=2, normalize=True, scale_each=True)
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LISTER/train.py#L130
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LISTER/train_dist.py#L139
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LISTER/utils.py#L399
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/LISTER/dataset/dataset.py#L313
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/MGP-STR/demo.py#L151
https://github.com/AlibabaResearch/AdvancedLiterateMachinery/blob/44d9d7da3c229884d35c6935fa7eeb0375865f4a/OCR/MGP-STR/test_final.py#L311

==================================
https://github.com/TongkunGuan/CCD
==================================

Found 1 times
vutils.make_grid(torch.Tensor(overlaps).permute(0, 3, 1, 2), normalize=True,
                                               scale_each=True, nrow=5)
https://github.com/TongkunGuan/CCD/blob/b6a2742f5b1161a3609db809d6bc8971022c2afe/train_finetune.py#L324

==================================
https://github.com/awei669/VQ-Font
==================================

Found 1 times
tv_utils.make_grid(tensor, **kwargs, normalize=True)
https://github.com/awei669/VQ-Font/blob/17303fe60b38a6b0ea3ba6935612ad6c1c5839d3/utils/visualize.py#L40

===================================
https://github.com/DS4SD/MolGrapher
===================================

Found 1 times
save_image(image, augmented_image_path)
https://github.com/DS4SD/MolGrapher/blob/282615be8b0343c9d63f35be456d4469ce6f6a10/molgrapher/scripts/dataset/augment_benchmark.py#L76

============================================
https://github.com/huawei-noah/noah-research
============================================

Found 2 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.make_grid(grid)
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/TNT/train.py#L712
https://github.com/huawei-noah/noah-research/blob/0cc7512669408c21d2b6f85ddcf40e2a34bc5abd/uni-uvpt/mmseg_custom/datasets/piplines/GtA_aug/utils.py#L215

======================================================
https://github.com/magic-research/Dataset_Quantization
======================================================

Found 2 times
save_image(recovery_img_j, fpath)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/magic-research/Dataset_Quantization/blob/24a2a77dd80c2cc86b53e2b2e204f1e02804d70e/quantize_pixel.py#L157
https://github.com/magic-research/Dataset_Quantization/blob/24a2a77dd80c2cc86b53e2b2e204f1e02804d70e/pytorch_image_models/train.py#L803

=====================================
https://github.com/lyq312318224/DREAM
=====================================

Found 1 times
save_image(img.cpu(), save_dir, nrow=nrow)
https://github.com/lyq312318224/DREAM/blob/b133b776fd2a4477dc62746b9c77527ea9f402ab/data.py#L693

==================================================
https://github.com/google-research/google-research
==================================================

Found 8 times
torchvision.utils.make_grid(a, **kwargs)
torchvision.utils.make_grid(a, **kwargs)
torchvision.utils.make_grid(frames[b, :, -1], nrow=5)
make_grid(torch.from_numpy(imgs).permute(0, 3, 1, 2), nrow=2)
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/dreamfields/experiments/dreamfields_nerf_glide_ddim.py#L300
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/dreamfields/experiments/diffusion_3d/visualization.py#L38
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/xirl/debug_dataset.py#L60
https://github.com/google-research/google-research/blob/077b0ff78887ff08e84a25ea385fb66633e4ba21/xirl/xirl/evaluators/reconstruction_visualizer.py#L82

=======================================
https://github.com/Xiuyu-Li/q-diffusion
=======================================

Found 5 times
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
tvu.save_image(
                        x[i], os.path.join(self.args.image_folder, f"{img_id}.png")
                    )
make_grid(grid, nrow=n_rows)
https://github.com/Xiuyu-Li/q-diffusion/blob/37363191fbde07a27dbdedea8a24c3180d0f41e7/ldm/models/diffusion/ddpm.py#L378
https://github.com/Xiuyu-Li/q-diffusion/blob/37363191fbde07a27dbdedea8a24c3180d0f41e7/ldm/models/diffusion/ddpm.py#L543
https://github.com/Xiuyu-Li/q-diffusion/blob/37363191fbde07a27dbdedea8a24c3180d0f41e7/ldm/models/diffusion/ddpm.py#L1321
https://github.com/Xiuyu-Li/q-diffusion/blob/37363191fbde07a27dbdedea8a24c3180d0f41e7/scripts/sample_diffusion_ddim.py#L279
https://github.com/Xiuyu-Li/q-diffusion/blob/37363191fbde07a27dbdedea8a24c3180d0f41e7/scripts/txt2img.py#L577

===================================
https://github.com/guoyongcs/TAPADL
===================================

Found 1 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/guoyongcs/TAPADL/blob/6e4dbff1de818fd28197251e9e0d4b8bc9b93d28/TAPADL_FAN/main.py#L835

==============================
https://github.com/gmum/ICICLE
==============================

Found 4 times
save_image(torch.cat(self._samples_to_log_X), output_orig_filename, normalize=True, nrow=(t + 1))
save_image(torch.cat(X_with_gradcam), output_map_filename, nrow=(t + 1))
save_image(torch.cat(self._samples_to_log_X), output_orig_filename, normalize=True, nrow=(t + 1))
save_image(torch.cat(X_with_gradcam), output_map_filename, nrow=(t + 1))
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/approach/lwm_naive_protopnet.py#L62
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/approach/lwm_naive_protopnet.py#L74
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/approach/lwm_protopnet.py#L67
https://github.com/gmum/ICICLE/blob/48b224282677e0f2c40c7e32b0d0ce6c0373b98e/src/approach/lwm_protopnet.py#L79

==================================================
https://github.com/yossigandelsman/rosetta_neurons
==================================================

Found 1 times
utils.save_image(
        img_concat, name + ".png", nrow=n_sample, normalize=True, range=(-1, 1)
    )
https://github.com/yossigandelsman/rosetta_neurons/blob/3eb215f616dbf8b9e7c8af218618b77222552b4b/stylegan2/convert_weight.py#L299

===========================================================
https://github.com/alexandrosstergiou/Leaping-Into-Memories
===========================================================

Found 5 times
vutils.make_grid(denormalize(inputs[:,:,t,:,:].cpu()),normalize=False, scale_each=True, nrow=int(10))
vutils.make_grid(vids[:,:,t,:,:].cpu(),normalize=True, scale_each=True, nrow=int(10))
vutils.make_grid(tmps,normalize=False, scale_each=True, nrow=int(10))
vutils.make_grid(denormalize(inputs[:,:,t,:,:].cpu()),normalize=False, scale_each=True, nrow=int(10))
vutils.make_grid(tmps,normalize=False, scale_each=True, nrow=int(10))
https://github.com/alexandrosstergiou/Leaping-Into-Memories/blob/21d7c297320b7685722d057544e15913954268a4/leaps.py#L338
https://github.com/alexandrosstergiou/Leaping-Into-Memories/blob/21d7c297320b7685722d057544e15913954268a4/leaps.py#L345
https://github.com/alexandrosstergiou/Leaping-Into-Memories/blob/21d7c297320b7685722d057544e15913954268a4/leaps.py#L372
https://github.com/alexandrosstergiou/Leaping-Into-Memories/blob/21d7c297320b7685722d057544e15913954268a4/utils/utils.py#L154
https://github.com/alexandrosstergiou/Leaping-Into-Memories/blob/21d7c297320b7685722d057544e15913954268a4/utils/utils.py#L168

=============================================
https://github.com/williamyang1991/StyleGANEX
=============================================

Found 2 times
save_image(pred[0], os.path.join(output_dir, "{}_edges.jpg".format(image_path.split("/")[-1].split('.')[0])))
torchvision.utils.make_grid(sample, args.batch_size, 1)
https://github.com/williamyang1991/StyleGANEX/blob/e593d16006f64b1e105c04eeb4a7cc149c1aca98/scripts/generate_sketch_data.py#L62
https://github.com/williamyang1991/StyleGANEX/blob/e593d16006f64b1e105c04eeb4a7cc149c1aca98/scripts/pretrain.py#L129

===============================================
https://github.com/anonymous-author-sub/seeable
===============================================

Found 3 times
save_image(img[i, :, :, :], str(p))
save_image(img[i, :, :, :], str(p / f"{i}.png"))
make_grid(images, nrow=bsz)
https://github.com/anonymous-author-sub/seeable/blob/729fc22af7322a3adfe3d042ff8b31dca1996e71/src/runner/inference.py#L88
https://github.com/anonymous-author-sub/seeable/blob/729fc22af7322a3adfe3d042ff8b31dca1996e71/src/runner/inference.py#L95
https://github.com/anonymous-author-sub/seeable/blob/729fc22af7322a3adfe3d042ff8b31dca1996e71/src/runner/train.py#L214

==================================
https://github.com/Hzzone/AdaTrans
==================================

Found 2 times
make_grid(grid_img, len(out_images))
make_grid(grid_img, len(out_images))
https://github.com/Hzzone/AdaTrans/blob/717c15f7a8ef8c5728f37a5f6f01bd6b0790771d/training/train.py#L173
https://github.com/Hzzone/AdaTrans/blob/717c15f7a8ef8c5728f37a5f6f01bd6b0790771d/training/train_onehot.py#L165

===========================================================
https://github.com/Spinozaaa/Federated-Long-tailed-Learning
===========================================================

Found 2 times
make_grid(torch_batch_images.detach().cpu())
make_grid(data.cpu(), nrow=8, normalize=True)
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/clsimb_fedavg/my_model_trainer_classification.py#L268
https://github.com/Spinozaaa/Federated-Long-tailed-Learning/blob/9944e7a55cc709cfd3d65741e49779425101a1ab/fedml_api/clsimb_fedavg/multi_experts/trainer.py#L128

=================================
https://github.com/ffhibnese/GIFD
=================================

Found 4 times
torchvision.utils.save_image(output_den[j:j + 1, ...], os.path.join(ouput_dir, f'{tid_list[j]}_gen.png'))
torchvision.utils.save_image(ground_truth_den[j:j + 1, ...], os.path.join(config['output_dir'], config['exp_name'], f'{tid_list[j]}_gt.png'))
vutils.save_image(real_cpu,
                        '%s/real_samples.png' % opt.outf,
                        normalize=True)
vutils.save_image(fake.detach(),
                        '%s/fake_samples_epoch_%03d.png' % (opt.outf, epoch),
                        normalize=True)
https://github.com/ffhibnese/GIFD/blob/064f519dc41a7ad359068a02fee67ec469ce1aeb/rec_mult.py#L380
https://github.com/ffhibnese/GIFD/blob/064f519dc41a7ad359068a02fee67ec469ce1aeb/rec_mult.py#L393
https://github.com/ffhibnese/GIFD/blob/064f519dc41a7ad359068a02fee67ec469ce1aeb/inversefed/genmodels/cifar10_dcgan/dcgan.py#L220
https://github.com/ffhibnese/GIFD/blob/064f519dc41a7ad359068a02fee67ec469ce1aeb/inversefed/genmodels/cifar10_dcgan/dcgan.py#L224

==========================================================
https://github.com/AbstractTeen/gan_ownership_verification
==========================================================

Found 4 times
save_image(gen_imgs.data[j], config.save_img_path + "%d.png" % (i*100+j+1), normalize=True)
save_image(gen_imgs.data[j], "./data/test/0_source/%d.png" % (i * 10 + j + 1), normalize=True)
save_image(gen_imgs2.data[j], "./data/test/1_suspect/%d.png" % (i * 10 + j + 1), normalize=True)
save_image(gen_imgs.data[:25], "./images/%d.png" % batches_done, nrow=5, normalize=True)
https://github.com/AbstractTeen/gan_ownership_verification/blob/2b713ff7c8f737c6aa4fe892888cc492ddbbc6ce/generate.py#L54
https://github.com/AbstractTeen/gan_ownership_verification/blob/2b713ff7c8f737c6aa4fe892888cc492ddbbc6ce/test.py#L67
https://github.com/AbstractTeen/gan_ownership_verification/blob/2b713ff7c8f737c6aa4fe892888cc492ddbbc6ce/test.py#L69
https://github.com/AbstractTeen/gan_ownership_verification/blob/2b713ff7c8f737c6aa4fe892888cc492ddbbc6ce/train_gan.py#L120

=====================================
https://github.com/PKU-SEC-Lab/mpcvit
=====================================

Found 2 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/PKU-SEC-Lab/mpcvit/blob/17642e96c5f1fd4bd9a135192f329c8af7ea8c02/train.py#L1001
https://github.com/PKU-SEC-Lab/mpcvit/blob/17642e96c5f1fd4bd9a135192f329c8af7ea8c02/train.py#L1180

==========================================
https://github.com/yael-vinker/SceneSketch
==========================================

Found 6 times
make_grid(inputs.clone().detach(), normalize=True, pad_value=2)
make_grid(outputs, normalize=False, pad_value=2)
make_grid(inputs.clone().detach(), normalize=True, pad_value=2)
make_grid(sketch.clone().detach(), normalize=True, pad_value=2)
make_grid(inputs, normalize=True, pad_value=2)
make_grid(inputs, normalize=True, pad_value=2)
https://github.com/yael-vinker/SceneSketch/blob/2377feb466cd14fa56695b25628222e446a37b36/sketch_utils.py#L58
https://github.com/yael-vinker/SceneSketch/blob/2377feb466cd14fa56695b25628222e446a37b36/sketch_utils.py#L65
https://github.com/yael-vinker/SceneSketch/blob/2377feb466cd14fa56695b25628222e446a37b36/sketch_utils.py#L79
https://github.com/yael-vinker/SceneSketch/blob/2377feb466cd14fa56695b25628222e446a37b36/sketch_utils.py#L153
https://github.com/yael-vinker/SceneSketch/blob/2377feb466cd14fa56695b25628222e446a37b36/sketch_utils.py#L202
https://github.com/yael-vinker/SceneSketch/blob/2377feb466cd14fa56695b25628222e446a37b36/sketch_utils.py#L243

=======================================
https://github.com/facebookresearch/DiT
=======================================

Found 1 times
save_image(samples, "sample.png", nrow=4, normalize=True, value_range=(-1, 1))
https://github.com/facebookresearch/DiT/blob/ed81ce2229091fd4ecc9a223645f95cf379d582b/sample.py#L68

==============================================
https://github.com/CVMI-Lab/Point-UV-Diffusion
==============================================

Found 5 times
torchvision.utils.save_image(image.detach().cpu(), filename)
torchvision.utils.save_image(image.detach().cpu(), filename)
torchvision.utils.save_image(depth.permute(0, 3, 1, 2), 'output/depth_%s.png' %i, normalize=True)
torchvision.utils.save_image(image_batch.detach().cpu(), filename)
torchvision.utils.save_image(gt_image, save_name)
https://github.com/CVMI-Lab/Point-UV-Diffusion/blob/d8c0e60eb8589cd755e81b391205ecded9be16e1/src/evaluator/basevaluator.py#L68
https://github.com/CVMI-Lab/Point-UV-Diffusion/blob/d8c0e60eb8589cd755e81b391205ecded9be16e1/src/evaluator/ddp_evaluator.py#L84
https://github.com/CVMI-Lab/Point-UV-Diffusion/blob/d8c0e60eb8589cd755e81b391205ecded9be16e1/src/geometry_tools/rasterize_mesh.py#L194
https://github.com/CVMI-Lab/Point-UV-Diffusion/blob/d8c0e60eb8589cd755e81b391205ecded9be16e1/src/logger/baselogger.py#L60
https://github.com/CVMI-Lab/Point-UV-Diffusion/blob/d8c0e60eb8589cd755e81b391205ecded9be16e1/src/metric_evaluation/nv_render.py#L97

=============================================
https://github.com/EnVision-Research/Ref-NeuS
=============================================

Found 2 times
torchvision.utils.save_image(normal_img.clone(), os.path.join(self.base_exp_dir, 'normals', '{:0>8d}_0_{}.png'.format(self.iter_step, idx)), nrow=8)
torchvision.utils.save_image(normal_img.clone(), os.path.join(self.base_exp_dir, 'normals_all', '{:0>8d}_0_{}.png'.format(self.iter_step, idx)), nrow=8)
https://github.com/EnVision-Research/Ref-NeuS/blob/ee38ec896444296d2f78a35863ca8d9f8d3b97ca/exp_runner.py#L315
https://github.com/EnVision-Research/Ref-NeuS/blob/ee38ec896444296d2f78a35863ca8d9f8d3b97ca/exp_runner.py#L323

===================================
https://github.com/simon3dv/SLR-SFS
===================================

Found 30 times
torchvision.utils.save_image(
                        img8,
                        "./debug/Image_train/%d_%s.png" % (iteration, add_im),
                        normalize=("Depth" in add_im),
                    )
torchvision.utils.make_grid(
                            img8,
                            normalize=("Depth" in add_im),
                        )
torchvision.utils.save_image(
                        img8,
                        "./debug/Image_val/%d_%s.png" % (iteration, add_im),
                        normalize=("Depth" in add_im),
                    )
torchvision.utils.make_grid(
                            img8,
                            normalize=("Depth" in add_im),
                        )
torchvision.utils.save_image(
                        img8,
                        "./debug/Image_train/%d_%s.png" % (iteration, add_im),
                        normalize=("Depth" in add_im),
                    )
torchvision.utils.make_grid(
                            img8,
                            normalize=("Depth" in add_im),
                        )
torchvision.utils.save_image(
                        img8,
                        "./debug/Image_val/%d_%s.png" % (iteration, add_im),
                        normalize=("Depth" in add_im),
                    )
torchvision.utils.make_grid(
                            img8,
                            normalize=("Depth" in add_im),
                        )
torchvision.utils.save_image(
                        img8,
                        "./debug/Image_train/%d_%s.png" % (iteration, add_im),
                        normalize=("Depth" in add_im),
                    )
torchvision.utils.make_grid(
                            img8,
                            normalize=("Depth" in add_im),
                        )
torchvision.utils.save_image(
                        img8,
                        "./debug/Image_val/%d_%s.png" % (iteration, add_im),
                        normalize=("Depth" in add_im),
                    )
torchvision.utils.make_grid(
                            img8,
                            normalize=("Depth" in add_im),
                        )
torchvision.utils.save_image(
                        img8,
                        "./debug/Image_train/%d_%s.png" % (iteration, add_im),
                        normalize=("Depth" in add_im),
                    )
torchvision.utils.make_grid(
                            img8,
                            normalize=("Depth" in add_im),
                        )
torchvision.utils.save_image(
                        img8,
                        "./debug/Image_val/%d_%s.png" % (iteration, add_im),
                        normalize=("Depth" in add_im),
                    )
torchvision.utils.make_grid(
                            img8,
                            normalize=("Depth" in add_im),
                        )
torchvision.utils.save_image(
                        img8,
                        "./debug/Image_train/%d_%s.png" % (iteration, add_im),
                        normalize=("Depth" in add_im),
                    )
torchvision.utils.make_grid(
                            img8,
                            normalize=("Depth" in add_im),
                        )
torchvision.utils.save_image(
                        img8,
                        "./debug/Image_val/%d_%s.png" % (iteration, add_im),
                        normalize=("Depth" in add_im),
                    )
torchvision.utils.make_grid(
                            img8,
                            normalize=("Depth" in add_im),
                        )
torchvision.utils.save_image(
                        img8,
                        "./debug/Image_train/%d_%s.png" % (iteration, add_im),
                        normalize=("Depth" in add_im),
                    )
torchvision.utils.make_grid(
                            img8,
                            normalize=("Depth" in add_im),
                        )
torchvision.utils.save_image(
                        img8,
                        "./debug/Image_val/%d_%s.png" % (iteration, add_im),
                        normalize=("Depth" in add_im),
                    )
torchvision.utils.make_grid(
                            img8,
                            normalize=("Depth" in add_im),
                        )
torchvision.utils.save_image(
						img8,
						"./debug/Image_train/%d_%s.png" % (iteration, add_im),
						normalize=("Depth" in add_im),
					)
torchvision.utils.make_grid(
							img8,
							normalize=("Depth" in add_im),
						)
torchvision.utils.save_image(
						img8,
						"./debug/Image_val/%d_%s.png" % (iteration, add_im),
						normalize=("Depth" in add_im),
					)
torchvision.utils.make_grid(
							img8,
							normalize=("Depth" in add_im),
						)
torchvision.utils.save_image(img8 / 255, os.path.join(out_file.replace("_sparse_motion.flo","_motion.png")))
torchvision.utils.save_image(img8 / 255, os.path.join(out_file.replace("_sparse_motion.flo","_sparse_motion.png")))
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating.py#L124
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating.py#L133
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating.py#L204
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating.py#L212
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_2layers_joint_finetuneBGFluid_MSE.py#L129
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_2layers_joint_finetuneBGFluid_MSE.py#L137
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_2layers_joint_finetuneBGFluid_MSE.py#L209
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_2layers_joint_finetuneBGFluid_MSE.py#L218
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_BG.py#L128
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_BG.py#L137
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_BG.py#L217
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_BG.py#L225
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_alpha_2layers_joint_finetuneBGFluid_L1.py#L129
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_alpha_2layers_joint_finetuneBGFluid_L1.py#L137
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_alpha_2layers_joint_finetuneBGFluid_L1.py#L209
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_alpha_2layers_joint_finetuneBGFluid_L1.py#L218
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_fixmotion.py#L126
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_fixmotion.py#L135
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_fixmotion.py#L205
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_fixmotion.py#L214
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_motion_IGANonly.py#L126
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_motion_IGANonly.py#L135
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_motion_IGANonly.py#L205
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_animating_motion_IGANonly.py#L214
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_motion_unet.py#L126
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_motion_unet.py#L134
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_motion_unet.py#L204
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/train_motion_unet.py#L212
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/data/eulerian_data_motion_hint.py#L287
https://github.com/simon3dv/SLR-SFS/blob/fa8d61046dfa19d80c5605be4a64e71f499b58f7/data/eulerian_data_motion_hint.py#L292

========================================
https://github.com/ChenyangQiQi/FateZero
========================================

Found 1 times
tvu.save_image(rearrange(save_mask.float(), "c p h w -> p c h w"), save_path,normalize=True)
https://github.com/ChenyangQiQi/FateZero/blob/9b6cb7b4dea2b2154df71ad7be0f61a66ca46d88/video_diffusion/prompt_attention/spatial_blend.py#L54

======================================================
https://github.com/Picsart-AI-Research/Text2Video-Zero
======================================================

Found 2 times
torchvision.utils.make_grid(torch.Tensor(x), nrow=4)
torchvision.utils.make_grid(torch.Tensor(x), nrow=4)
https://github.com/Picsart-AI-Research/Text2Video-Zero/blob/fd76734e06aadb1dee83d2b7a368b14bdaa35565/utils.py#L103
https://github.com/Picsart-AI-Research/Text2Video-Zero/blob/fd76734e06aadb1dee83d2b7a368b14bdaa35565/utils.py#L124

=================================
https://github.com/snuvclab/chupa
=================================

Found 10 times
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(images[k])
make_grid(images[k], nrow=4)
torchvision.utils.make_grid(torch.cat(per_loop_lst, dim=0), nrow=nrow)
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/models/diffusion/ddpm.py#L415
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/models/diffusion/ddpm.py#L582
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/models/diffusion/ddpm.py#L1446
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/models/diffusion/ddpm_edit.py#L398
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/models/diffusion/ddpm_edit.py#L568
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/models/diffusion/ddpm_edit.py#L1306
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/utils/plmodules/image.py#L31
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/ldm/utils/plmodules/image.py#L39
https://github.com/snuvclab/chupa/blob/c59fe407d46eb3f4befec37f126ca66be57234e7/src/renderer/mesh_util.py#L784

========================================
https://github.com/IDEA-Research/HumanSD
========================================

Found 22 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/main.py#L317
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/main.py#L330
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/ControlNet/cldm/cldm.py#L379
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/ControlNet/cldm/logger.py#L31
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/ControlNet/ldm/models/diffusion/ddpm.py#L473
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/ControlNet/ldm/models/diffusion/ddpm.py#L652
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/ControlNet/ldm/models/diffusion/ddpm.py#L1201
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/ControlNet/ldm/models/diffusion/ddpm.py#L1439
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/ControlNet/ldm/models/diffusion/ddpm.py#L1601
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/ControlNet/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/T2IAdapter/ldm/models/diffusion/ddpm.py#L462
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/T2IAdapter/ldm/models/diffusion/ddpm.py#L622
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/T2IAdapter/ldm/models/diffusion/ddpm.py#L1183
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/comparison_models/T2IAdapter/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/ldm/models/diffusion/ddpm.py#L474
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/ldm/models/diffusion/ddpm.py#L653
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/ldm/models/diffusion/ddpm.py#L1202
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/ldm/models/diffusion/ddpm.py#L1446
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/ldm/models/diffusion/ddpm.py#L1608
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/scripts/img2img.py#L266
https://github.com/IDEA-Research/HumanSD/blob/c5db29dd66a3e40afa8b4bed630f0aa7ea001880/scripts/txt2img.py#L373

===================================
https://github.com/amathislab/BUCTD
===================================

Found 5 times
torchvision.utils.make_grid(batch_image, nrow, padding, True)
torchvision.utils.make_grid(grid, nrow, padding)
torchvision.utils.make_grid(batch_image, nrow, padding, True)
torchvision.utils.make_grid(batch_image, nrow, padding, True)
torchvision.utils.make_grid(batch_image, nrow, padding, True)
https://github.com/amathislab/BUCTD/blob/2df7bf3b5e4fc7541598b4c4ce287d617e05b8c4/lib/utils/vis.py#L35
https://github.com/amathislab/BUCTD/blob/2df7bf3b5e4fc7541598b4c4ce287d617e05b8c4/lib/utils/vis.py#L70
https://github.com/amathislab/BUCTD/blob/2df7bf3b5e4fc7541598b4c4ce287d617e05b8c4/lib/utils/vis.py#L83
https://github.com/amathislab/BUCTD/blob/2df7bf3b5e4fc7541598b4c4ce287d617e05b8c4/lib/utils/vis.py#L404
https://github.com/amathislab/BUCTD/blob/2df7bf3b5e4fc7541598b4c4ce287d617e05b8c4/lib/utils/vis_coco.py#L85

=========================================
https://github.com/shubham-goel/4D-Humans
=========================================

Found 2 times
make_grid(rend_imgs, nrow=nrow, padding=padding)
make_grid(rend_imgs, nrow=nrow, padding=padding)
https://github.com/shubham-goel/4D-Humans/blob/124e8b2dc041fdd7e02f879ce851952cb810636b/hmr2/utils/mesh_renderer.py#L66
https://github.com/shubham-goel/4D-Humans/blob/124e8b2dc041fdd7e02f879ce851952cb810636b/hmr2/utils/mesh_renderer.py#L96

===============================
https://github.com/taeksuu/ncho
===============================

Found 1 times
torchvision.utils.make_grid( batch[key], normalize=True, range=(-1,1), nrow=8)
https://github.com/taeksuu/ncho/blob/1cb6dd1b2cbcd2c59b6a7b1fc482597874984f90/lib/model/helpers.py#L16

====================================
https://github.com/boycehbz/GroupRec
====================================

Found 1 times
make_grid(rend_imgs, nrow=2)
https://github.com/boycehbz/GroupRec/blob/8a13794ff4aa7e159106544097f85432c6cfc25c/utils/renderer.py#L32

====================================
https://github.com/Frank-ZY-Dou/TORE
====================================

Found 3 times
make_grid(rend_imgs, nrow=1)
make_grid(rend_imgs, nrow=1)
make_grid(rend_imgs, nrow=1)
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/tore/tools/run_tore_fm_bodymesh.py#L729
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/tore/tools/run_tore_m_bodymesh.py#L532
https://github.com/Frank-ZY-Dou/TORE/blob/17f1eb672ce85c490f1ec54e10670d7595cd999d/tore/tools/run_tore_m_bodymesh.py#L561

==============================
https://github.com/yhZhai/WSCL
==============================

Found 1 times
save_image(
                    (
                        outputs["ensemble"]["out_map"][0, ...] > opt.mask_threshold
                    ).float()
                    * 255,
                    os.path.join(figure_path, f"{image_id}_ensemble_map.png"),
                )
https://github.com/yhZhai/WSCL/blob/2800337df1c462e0f171933e6f40a0fbfa0509db/engine.py#L336

====================================================
https://github.com/facebookresearch/stable_signature
====================================================

Found 17 times
save_image(torch.clamp(utils_img.unnormalize_vqgan(imgs),0,1), os.path.join(params.imgs_dir, f'{ii:03}_train_orig.png'), nrow=8)
save_image(torch.clamp(utils_img.unnormalize_vqgan(imgs_d0),0,1), os.path.join(params.imgs_dir, f'{ii:03}_train_d0.png'), nrow=8)
save_image(torch.clamp(utils_img.unnormalize_vqgan(imgs_w),0,1), os.path.join(params.imgs_dir, f'{ii:03}_train_w.png'), nrow=8)
save_image(torch.clamp(utils_img.unnormalize_vqgan(imgs),0,1), os.path.join(params.imgs_dir, f'{ii:03}_val_orig.png'), nrow=8)
save_image(torch.clamp(utils_img.unnormalize_vqgan(imgs_d0),0,1), os.path.join(params.imgs_dir, f'{ii:03}_val_d0.png'), nrow=8)
save_image(torch.clamp(utils_img.unnormalize_vqgan(imgs_w),0,1), os.path.join(params.imgs_dir, f'{ii:03}_val_w.png'), nrow=8)
save_image(utils_img.unnormalize_img(imgs), os.path.join(params.output_dir, f'{epoch:03}_{it:03}_train_ori.png'), nrow=8)
save_image(utils_img.unnormalize_img(imgs_w), os.path.join(params.output_dir, f'{epoch:03}_{it:03}_train_w.png'), nrow=8)
save_image(utils_img.unnormalize_img(imgs_aug), os.path.join(params.output_dir, f'{epoch:03}_{it:03}_train_aug.png'), nrow=8)
save_image(utils_img.unnormalize_img(imgs), os.path.join(params.output_dir, f'{epoch:03}_{it:03}_val_ori.png'), nrow=8)
save_image(utils_img.unnormalize_img(imgs_w), os.path.join(params.output_dir, f'{epoch:03}_{it:03}_val_w.png'), nrow=8)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/finetune_ldm_decoder.py#L297
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/finetune_ldm_decoder.py#L298
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/finetune_ldm_decoder.py#L299
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/finetune_ldm_decoder.py#L351
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/finetune_ldm_decoder.py#L352
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/finetune_ldm_decoder.py#L353
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/hidden/main.py#L382
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/hidden/main.py#L383
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/hidden/main.py#L384
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/hidden/main.py#L454
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/hidden/main.py#L455
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/src/ldm/models/diffusion/ddpm.py#L471
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/src/ldm/models/diffusion/ddpm.py#L650
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/src/ldm/models/diffusion/ddpm.py#L1199
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/src/ldm/models/diffusion/ddpm.py#L1437
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/src/ldm/models/diffusion/ddpm.py#L1599
https://github.com/facebookresearch/stable_signature/blob/20383c5f3707c697e2d5a583326104d4c8f4b164/src/ldm/modules/image_degradation/utils_image.py#L353

==========================================
https://github.com/Victarry/Adaptation-SCR
==========================================

Found 2 times
torchvision.utils.make_grid(image, nrow=4, normalize=True, value_range=(-1, 1))
utils.save_image(
        images,
        os.path.join(output_dir, f"{file_prefix}_{str(iteration).zfill(6)}.jpg"),
        nrow=nrows,
        normalize=True,
        range=(-1, 1),
    )
https://github.com/Victarry/Adaptation-SCR/blob/3d8ab49b11ed184d155ead086dde202cf1968dba/ZSSGAN/model/ZSSGAN.py#L292
https://github.com/Victarry/Adaptation-SCR/blob/3d8ab49b11ed184d155ead086dde202cf1968dba/ZSSGAN/utils/file_utils.py#L31

=====================================================
https://github.com/RuihanGao/visual-tactile-synthesis
=====================================================

Found 2 times
save_image(output, str(output_name))
save_image(output, str(output_name))
https://github.com/RuihanGao/visual-tactile-synthesis/blob/dbe6c921d1b3d0733fc6b119d174671de70f4397/thirdparty/AdaIN/test.py#L144
https://github.com/RuihanGao/visual-tactile-synthesis/blob/dbe6c921d1b3d0733fc6b119d174671de70f4397/thirdparty/AdaIN/test.py#L161

====================================
https://github.com/SamsungLabs/DINAR
====================================

Found 1 times
torchvision.utils.make_grid(images, nrow=4)
https://github.com/SamsungLabs/DINAR/blob/736895897b13e670cd3800e2eede15b50a1c0c66/pl_callbacks/image_logger.py#L110

========================================
https://github.com/StelaBou/HyperReenact
========================================

Found 3 times
torchvision.utils.make_grid(F.interpolate(visdict[key], [size, size]))
utils.save_image(img_concat, name + '.png', nrow=n_sample, normalize=True, range=(-1, 1))
torch_utils.save_image(
		image,
		save_dir,
		normalize=True,
		range=(-1, 1),
	)
https://github.com/StelaBou/HyperReenact/blob/1b6648540af4d4f986395619228429f68d2b96ee/libs/DECA/decalib/deca.py#L265
https://github.com/StelaBou/HyperReenact/blob/1b6648540af4d4f986395619228429f68d2b96ee/libs/models/gan/StyleGAN2/convert_weight.py#L254
https://github.com/StelaBou/HyperReenact/blob/1b6648540af4d4f986395619228429f68d2b96ee/libs/utilities/utils.py#L82

========================================
https://github.com/Zhangjialu126/ccf_gan
========================================

Found 5 times
torchvision.utils.save_image(images.float(),
                                     '%s/%s/random_samples.jpg' % (config['samples_root'], experiment_name),
                                     nrow=int(G_batch_size ** 0.5),
                                     normalize=True)
torchvision.utils.save_image(fixed_Gz.float().cpu(), image_filename,
                                 nrow=int(fixed_Gz.shape[0] ** 0.5), normalize=True)
torchvision.utils.save_image(out_ims, image_filename,
                                     nrow=samples_per_class, normalize=True)
torchvision.utils.save_image(out_ims, image_filename,
                                 nrow=num_midpoints + 2, normalize=True)
torchvision.utils.save_image(interp_imgs.cpu(), image_filename, nrow=10, normalize=True)
https://github.com/Zhangjialu126/ccf_gan/blob/ca114513fbf97ebc77573bc4879db8927657c8f2/ccfgan_biggan/sample.py#L232
https://github.com/Zhangjialu126/ccf_gan/blob/ca114513fbf97ebc77573bc4879db8927657c8f2/ccfgan_biggan/train_fns.py#L352
https://github.com/Zhangjialu126/ccf_gan/blob/ca114513fbf97ebc77573bc4879db8927657c8f2/ccfgan_biggan/utils.py#L950
https://github.com/Zhangjialu126/ccf_gan/blob/ca114513fbf97ebc77573bc4879db8927657c8f2/ccfgan_biggan/utils.py#L993
https://github.com/Zhangjialu126/ccf_gan/blob/ca114513fbf97ebc77573bc4879db8927657c8f2/ccfgan_biggan/utils.py#L1275

=============================================
https://github.com/microsoft/LayoutGeneration
=============================================

Found 2 times
vutils.save_image(image, out_path, normalize=False, nrow=nrow)
vutils.save_image(image, out_path, normalize=False, nrow=nrow)
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutDiffusion/eval_src/utils/visualization.py#L63
https://github.com/microsoft/LayoutGeneration/blob/1498ff300710b4fc204aece537582d37ca447fc7/LayoutFormer++/src/utils/visualization.py#L55

=====================================
https://github.com/Yuxinn-J/Scenimefy
=====================================

Found 2 times
utils.save_image(
                    sample1,
                    f"{args.output_path}/trainA/{num_remain-1}.png",
                    nrow=1,
                    normalize=True,
                    range=(-1, 1),
                )
utils.save_image(
                    sample2,
                    f"{args.output_path}/trainB/{num_remain-1}.png",
                    nrow=1,
                    normalize=True,
                    range=(-1, 1),
                )
https://github.com/Yuxinn-J/Scenimefy/blob/821c9210f4a1facae8fa13fea4ca297c3bf8ba48/Seg_selection/generate_pair.py#L123
https://github.com/Yuxinn-J/Scenimefy/blob/821c9210f4a1facae8fa13fea4ca297c3bf8ba48/Seg_selection/generate_pair.py#L131

==================================================
https://github.com/humansensinglab/cycle-diffusion
==================================================

Found 16 times
utils.save_image(image, image_path)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(grid, nrow=opt.n_samples)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(grid, nrow=n_rows)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
utils.save_image(
        images,
        os.path.join(output_dir, f"{file_prefix}_{str(iteration).zfill(6)}.png"),
        nrow=nrows,
    )
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/evaluation/utils.py#L10
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/latentdiff/main.py#L312
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/latentdiff/main.py#L325
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/latentdiff/txt2img.py#L163
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/latentdiff/ldm/models/diffusion/ddpm.py#L369
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/latentdiff/ldm/models/diffusion/ddpm.py#L532
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/latentdiff/ldm/models/diffusion/ddpm.py#L1282
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/latentdiff/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/stable_diffusion/main.py#L312
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/stable_diffusion/main.py#L325
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/stable_diffusion/txt2img.py#L265
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/stable_diffusion/ldm/models/diffusion/ddpm.py#L370
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/stable_diffusion/ldm/models/diffusion/ddpm.py#L533
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/stable_diffusion/ldm/models/diffusion/ddpm.py#L1282
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/model/lib/stable_diffusion/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/humansensinglab/cycle-diffusion/blob/cc9dd0a9cc97d3871ccd339718a24684c0339235/utils/file_utils.py#L10

=================================
https://github.com/VIROBO-15/GMNR
=================================

Found 8 times
save_image(
                img,
                os.path.join(real_dir, f"{img_counter:0>5}.png"),
                normalize=True,
                range=(-1, 1),
            )
save_image(
                    img,
                    os.path.join(output_dir, f"{img_counter:0>5}.png"),
                    normalize=True,
                    range=(-1, 1),
                )
save_image(gen_imgs[:25], os.path.join(opt.output_dir, f"{discriminator.step}_fixed.png"), nrow=5, normalize=True)
save_image(gen_imgs[:25], os.path.join(opt.output_dir, f"{discriminator.step}_tilted.png"), nrow=5, normalize=True)
save_image(gen_imgs[:25], os.path.join(opt.output_dir, f"{discriminator.step}_fixed_ema.png"), nrow=5, normalize=True)
save_image(gen_imgs[:25], os.path.join(opt.output_dir, f"{discriminator.step}_random.png"), nrow=5, normalize=True)
save_image(mpi_rgb, os.path.join(opt.output_dir, f"{discriminator.step}_random_mpi_rgb.png"), nrow=8, normalize=False)
save_image(mpi_alpha, os.path.join(opt.output_dir, f"{discriminator.step}_random_mpi_alpha.png"), nrow=8, normalize=True)
https://github.com/VIROBO-15/GMNR/blob/596f5da0709960484d5e9d6dd3b96a35c260abe2/gmnr/fid_evaluation.py#L29
https://github.com/VIROBO-15/GMNR/blob/596f5da0709960484d5e9d6dd3b96a35c260abe2/gmnr/fid_evaluation.py#L135
https://github.com/VIROBO-15/GMNR/blob/596f5da0709960484d5e9d6dd3b96a35c260abe2/gmnr/train.py#L853
https://github.com/VIROBO-15/GMNR/blob/596f5da0709960484d5e9d6dd3b96a35c260abe2/gmnr/train.py#L901
https://github.com/VIROBO-15/GMNR/blob/596f5da0709960484d5e9d6dd3b96a35c260abe2/gmnr/train.py#L939
https://github.com/VIROBO-15/GMNR/blob/596f5da0709960484d5e9d6dd3b96a35c260abe2/gmnr/train.py#L978
https://github.com/VIROBO-15/GMNR/blob/596f5da0709960484d5e9d6dd3b96a35c260abe2/gmnr/train.py#L991
https://github.com/VIROBO-15/GMNR/blob/596f5da0709960484d5e9d6dd3b96a35c260abe2/gmnr/train.py#L992

================================
https://github.com/desaixie/gait
================================

Found 1 times
torchvision.utils.make_grid(image.unsqueeze(1))
https://github.com/desaixie/gait/blob/2fee70405374229c7d77fdba5d0bf3ce8d0cfd6b/curl/logger.py#L119

=========================================================
https://github.com/TiankaiHang/Min-SNR-Diffusion-Training
=========================================================

Found 1 times
save_image(samples[_j], fp=os.path.join(
                    os.environ.get('OPENAI_LOGDIR', 'exp'), 
                    f'{_iter}_{_j}_rank{dist.get_rank()}.png'), 
                normalize=True, value_range=(-1, 1))
https://github.com/TiankaiHang/Min-SNR-Diffusion-Training/blob/8df27c9ff74a35e01dc783efacaafaf4bf406e23/scripts_vit/sampler_edm.py#L350

=====================================================================
https://github.com/EnVision-Research/Selective-Diffusion-Distillation
=====================================================================

Found 14 times
torchvision.utils.save_image(grad, f"{search_dir}/grad_{str(t).zfill(6)}.jpg",
                                                 normalize=True,
                                                 range=(0, 1))
torchvision.utils.save_image(grad_image_seq, f"{search_dir}/grad_seq.jpg", nrow=grad_image_seq.shape[0])
torchvision.utils.save_image(self.synthesizer.before_image, f"{search_dir}/img_ori.jpg", normalize=True, range=(-1, 1))
torchvision.utils.save_image(self.synthesizer.before_image,
                                         '{}/{}/{}.jpg'.format(self.inference_dir, 'original', idx), normalize=True,
                                         range=(-1, 1))
torchvision.utils.save_image(edited_image,
                                         '{}/{}/{}.jpg'.format(self.inference_dir, 'edited', idx), normalize=True,
                                         range=(-1, 1))
torchvision.utils.save_image(imgs, f"sample.png")
torchvision.utils.save_image(
            torch.cat([self.before_image.detach().cpu(), self.current_image.detach().cpu()], dim=0),
            f'{dir}sample_{img_name}.png',
            normalize=True, range=(-1, 1), nrow=self.batch_size
        )
torchvision.utils.save_image(
            grad,
            f'{dir}grad_{img_name}.png',
            normalize=True, range=(0, 1), nrow=self.batch_size
        )
torchvision.utils.save_image(
            torch.cat([self.ori_image, self.current_image], dim=0),
            f'{dir}sample_{img_name}.png',
            normalize=True, range=(-1, 1), nrow=self.batch_size
        )
torchvision.utils.save_image(
            grad,
            f'{dir}grad_{img_name}.png',
            normalize=True, range=(0, 1), nrow=self.batch_size
        )
torchvision.utils.save_image(
            self.before_image,
            f'{dir}/original/sample_{img_name}.png',
            normalize=True, range=(-1, 1), nrow=self.batch_size
        )
torchvision.utils.save_image(
            self.current_image,
            f'{dir}/edited/sample_{img_name}.png',
            normalize=True, range=(-1, 1), nrow=self.batch_size
        )
torchvision.utils.save_image(
            grad,
            f'{dir}grad_{img_name}.png',
            normalize=True, range=(0, 1), nrow=self.batch_size
        )
torchvision.utils.make_grid(denoise_grid, nrow=n_imgs_per_row)
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/train.py#L148
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/train.py#L152
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/train.py#L153
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/train.py#L213
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/train.py#L216
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/loss/models/stable_diffusion.py#L180
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/synthesizer/stylegan_synthesizer.py#L105
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/synthesizer/stylegan_synthesizer.py#L115
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/synthesizer/stylegan_synthesizer.py#L247
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/synthesizer/stylegan_synthesizer.py#L256
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/synthesizer/stylegan_synthesizer.py#L363
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/synthesizer/stylegan_synthesizer.py#L368
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/synthesizer/stylegan_synthesizer.py#L377
https://github.com/EnVision-Research/Selective-Diffusion-Distillation/blob/8585fc4c91a5465bdf7a270e083cc0b6b6632cab/utils/file_util.py#L76

================================================
https://github.com/AbnerVictor/OOD-GAN-inversion
================================================

Found 9 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
utils.save_image(
                sample,
                f'samples/{str(i).zfill(6)}.png',
                nrow=int(math.sqrt(args.sample)),
                normalize=True,
                range=(-1, 1),
            )
torchvision.utils.save_image(
            gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=True, range=(-1, 1))
torchvision.utils.save_image(lq, f'tmp/lq_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/basicsr/utils/img_util.py#L71
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/inference/inference_stylegan2.py#L23
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/test_scripts/test_ffhq_dataset.py#L50
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/test_scripts/test_paired_image_dataset.py#L66
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/test_scripts/test_paired_image_dataset.py#L67
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/test_scripts/test_reds_dataset.py#L67
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/test_scripts/test_reds_dataset.py#L69
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/test_scripts/test_vimeo90k_dataset.py#L63
https://github.com/AbnerVictor/OOD-GAN-inversion/blob/076efb27c721968b9214a78255bb26f881036553/BasicSR/test_scripts/test_vimeo90k_dataset.py#L65

=====================================
https://github.com/rocketappslab/bdmm
=====================================

Found 3 times
torchvision.utils.make_grid(fused_images, nrow=fused_images.shape[0], normalize=True)
torchvision.utils.save_image(fused_images, visualization_path)
utils.make_grid(fs, nrow=int(np.sqrt(len(z))))
https://github.com/rocketappslab/bdmm/blob/96181b04c3235f7327b546032cc3d7bdc4bf0f42/SMPLDataset/preprocess.py#L109
https://github.com/rocketappslab/bdmm/blob/96181b04c3235f7327b546032cc3d7bdc4bf0f42/SMPLDataset/preprocess.py#L112
https://github.com/rocketappslab/bdmm/blob/96181b04c3235f7327b546032cc3d7bdc4bf0f42/evaluation/pytorch_fvd/training/logging.py#L76

==================================================
https://github.com/cotton6/COTTON-size-does-matter
==================================================

Found 77 times
torchvision.utils.make_grid(img.detach().cpu())
torchvision.utils.make_grid(human.detach().cpu())
torchvision.utils.make_grid(tar_pose.detach().cpu())
torchvision.utils.make_grid(parsing_c.detach().cpu())
torchvision.utils.make_grid(C_align.detach().cpu())
torchvision.utils.make_grid(warp_grid.detach().cpu())
torchvision.utils.make_grid(warp_clothes.detach().cpu())
torchvision.utils.make_grid(clothes_gt.detach().cpu())
torchvision.utils.make_grid(human.detach().cpu())
torchvision.utils.make_grid(tar_pose.detach().cpu())
torchvision.utils.make_grid(parsing_c.detach().cpu())
torchvision.utils.make_grid(C_align.detach().cpu())
torchvision.utils.make_grid(warp_clothes.detach().cpu())
torchvision.utils.make_grid(img.detach().cpu())
torchvision.utils.make_grid(inC.detach().cpu())
torchvision.utils.make_grid(inH.detach().cpu())
torchvision.utils.make_grid(Hparsing.detach().cpu())
torchvision.utils.make_grid(Cmask.detach().cpu())
torchvision.utils.make_grid(Hpose.detach().cpu())
torchvision.utils.make_grid(Hparsing_gen.detach().cpu())
torchvision.utils.make_grid(inC.detach().cpu())
torchvision.utils.make_grid(inH.detach().cpu())
torchvision.utils.make_grid(Hparsing.detach().cpu())
torchvision.utils.make_grid(Cmask.detach().cpu())
torchvision.utils.make_grid(Hpose.detach().cpu())
torchvision.utils.make_grid(Hparsing_gen.detach().cpu())
torchvision.utils.make_grid(result.detach().cpu())
torchvision.utils.make_grid(inC.detach().cpu())
torchvision.utils.make_grid(inParsing.detach().cpu())
torchvision.utils.make_grid(inH.detach().cpu())
torchvision.utils.make_grid(HparsingMasked.detach().cpu())
torchvision.utils.make_grid(Cmask.detach().cpu())
torchvision.utils.make_grid(Hpose.detach().cpu())
torchvision.utils.make_grid(Hparsing_gen.detach().cpu())
torchvision.utils.make_grid(inHCparsing.detach().cpu())
torchvision.utils.make_grid(humanMasked.detach().cpu())
torchvision.utils.make_grid(result.detach().cpu())
torchvision.utils.make_grid(human.detach().cpu())
torchvision.utils.make_grid(clothes.detach().cpu())
torchvision.utils.make_grid(human_parse.detach().cpu())
torchvision.utils.make_grid(skeleton_i.detach().cpu())
torchvision.utils.make_grid(cm_align.detach().cpu())
torchvision.utils.make_grid(human_parse_masked.detach().cpu())
torchvision.utils.make_grid(output1.detach().cpu())
torchvision.utils.make_grid(c_align.detach().cpu())
torchvision.utils.make_grid(human_masked_wo_BG.detach().cpu())
torchvision.utils.make_grid(output.detach().cpu())
torchvision.utils.make_grid(human.detach().cpu())
torchvision.utils.make_grid(clothes.detach().cpu())
torchvision.utils.make_grid(skeleton_i.detach().cpu())
torchvision.utils.make_grid(cm_align.detach().cpu())
torchvision.utils.make_grid(human_parse_masked.detach().cpu())
torchvision.utils.make_grid(output1.detach().cpu())
torchvision.utils.make_grid(parsing_c.detach().cpu())
torchvision.utils.make_grid(c_align.detach().cpu())
torchvision.utils.make_grid(warped_cloth.detach().cpu())
torchvision.utils.make_grid(human_masked_w_BG.detach().cpu())
torchvision.utils.make_grid(warped_cloth_for_stage2.detach().cpu())
torchvision.utils.make_grid(output.detach().cpu())
torchvision.utils.make_grid(inC.detach().cpu())
torchvision.utils.make_grid(inH.detach().cpu())
torchvision.utils.make_grid(result.detach().cpu())
torchvision.utils.make_grid(inC.detach().cpu())
torchvision.utils.make_grid(inH.detach().cpu())
torchvision.utils.make_grid(skeleton.detach().cpu())
torchvision.utils.make_grid(result.detach().cpu())
torchvision.utils.make_grid(inC.detach().cpu())
torchvision.utils.make_grid(inH.detach().cpu())
torchvision.utils.make_grid(skeleton.detach().cpu())
torchvision.utils.make_grid(result.detach().cpu())
torchvision.utils.make_grid(gt.detach().cpu())
torchvision.utils.make_grid(inC.detach().cpu())
torchvision.utils.make_grid(inH.detach().cpu())
torchvision.utils.make_grid(inH_masked.detach().cpu())
torchvision.utils.make_grid(skeleton.detach().cpu())
torchvision.utils.make_grid(result.detach().cpu())
torchvision.utils.make_grid(img.detach().cpu())
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L69
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L160
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L162
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L164
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L166
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L168
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L170
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L172
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L187
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L189
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L191
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L193
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/util_warp.py#L195
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L100
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L180
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L182
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L184
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L186
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L188
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L190
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L204
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L206
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L208
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L210
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L212
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L214
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L216
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L231
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L233
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L235
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L237
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L239
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L241
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L243
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L245
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L247
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L249
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L271
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L273
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L275
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L277
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L279
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L281
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L283
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L286
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L288
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L290
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L318
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L320
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L322
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L324
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L326
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L328
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L331
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L333
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L335
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L337
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L339
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L341
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L368
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L370
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L372
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L383
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L385
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L387
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L389
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L412
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L414
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L416
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L418
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L420
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L433
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L435
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L437
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L439
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L441
https://github.com/cotton6/COTTON-size-does-matter/blob/9aedf55830298918f724af6391ccc5c30e06df02/code/main/util/utils.py#L462

=====================================================
https://github.com/MoayedHajiAli/VidStyleODE-official
=====================================================

Found 9 times
torchvision.utils.make_grid(images[k],
                                nrow=ncol,
                                normalize=True,
                                range=(-1, 1))
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=ncol)
torchvision.utils.make_grid(b_frames,
                            nrow=b_frames.shape[0],
                            normalize=True,
                            range=range)
torchvision.utils.make_grid(b_frame,
                            nrow=b_frame.shape[0],
                            normalize=True,
                            range=val_range)
torchvision.utils.make_grid(b_frames,
                            nrow=b_frames.shape[0],
                            normalize=True,
                            range=range)
torchvision.utils.make_grid(b_frame,
                            nrow=b_frame.shape[0],
                            normalize=True,
                            range=val_range)
torchvision.utils.make_grid(b_frame,
                            nrow=b_frame.shape[0],
                            normalize=True,
                            range=val_range)
torchvision.utils.make_grid(b_frames,
                                nrow=b_frames.shape[0],
                                normalize=True,
                                range=range)
https://github.com/MoayedHajiAli/VidStyleODE-official/blob/078f7e1bd4249dde7d9fd9a7c64eaf91e3281153/main.py#L391
https://github.com/MoayedHajiAli/VidStyleODE-official/blob/078f7e1bd4249dde7d9fd9a7c64eaf91e3281153/main.py#L412
https://github.com/MoayedHajiAli/VidStyleODE-official/blob/078f7e1bd4249dde7d9fd9a7c64eaf91e3281153/main.py#L436
https://github.com/MoayedHajiAli/VidStyleODE-official/blob/078f7e1bd4249dde7d9fd9a7c64eaf91e3281153/scripts/apperance_manipulation.py#L111
https://github.com/MoayedHajiAli/VidStyleODE-official/blob/078f7e1bd4249dde7d9fd9a7c64eaf91e3281153/scripts/apperance_manipulation.py#L131
https://github.com/MoayedHajiAli/VidStyleODE-official/blob/078f7e1bd4249dde7d9fd9a7c64eaf91e3281153/scripts/image_animation.py#L108
https://github.com/MoayedHajiAli/VidStyleODE-official/blob/078f7e1bd4249dde7d9fd9a7c64eaf91e3281153/scripts/image_animation.py#L130
https://github.com/MoayedHajiAli/VidStyleODE-official/blob/078f7e1bd4249dde7d9fd9a7c64eaf91e3281153/scripts/image_animation.py#L144
https://github.com/MoayedHajiAli/VidStyleODE-official/blob/078f7e1bd4249dde7d9fd9a7c64eaf91e3281153/src/models/vidstyleode.py#L559

===============================
https://github.com/pmh9960/GCDP
===============================

Found 2 times
torchvision.utils.save_image(torch.cat(saved_grid),
                                            args.save_path.replace('.png', f'_{n_idx-1}_{idx_unet}.png'),
                                            nrow=max(2, batch_size), pad_value=1.)
torchvision.utils.make_grid(
                    torch.cat([saved_images, saved_labels]), nrow=max(2, args.test_batch_size), pad_value=1.)
https://github.com/pmh9960/GCDP/blob/f5f80490a642dbdeeb21ff69ca972d0beebde8ce/test.py#L191
https://github.com/pmh9960/GCDP/blob/f5f80490a642dbdeeb21ff69ca972d0beebde8ce/train.py#L262

========================================
https://github.com/zipengxuc/StylerDALLE
========================================

Found 4 times
torchvision.utils.save_image(torch.cat([x_pred1.unsqueeze(0), x_pred2.unsqueeze(0)]), './vis5/%s_%d_%d_train_pred.jpg' % (args.exp_dir, epoch, idx))
torchvision.utils.save_image(torch.cat([x_pred1.unsqueeze(0), x_pred2.unsqueeze(0)]), './vis5/%s_%d_%d_%d_val_pred.jpg' % (args.exp_dir, epoch, idx, pidx))
torchvision.utils.save_image(torch.cat([x_pred1.unsqueeze(0), x_pred2.unsqueeze(0)]), '%s/vis_ru/%s_%d_%d_train_pred.jpg' % (vis_path, args.exp_dir, epoch, idx))
torchvision.utils.save_image(torch.cat([x_pred1.unsqueeze(0), x_pred2.unsqueeze(0)]), '%s/vis_ru/%s_%d_%d_%d_val_pred.jpg' % (vis_path, args.exp_dir, epoch, idx, pidx))
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/train_rl.py#L73
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/train_rl.py#L129
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/train_ru_rl.py#L86
https://github.com/zipengxuc/StylerDALLE/blob/21a7b42a59d9fb3d3f6cb5c6a4295de03609775b/train_ru_rl.py#L139

=======================================
https://github.com/showlab/Tune-A-Video
=======================================

Found 1 times
torchvision.utils.make_grid(x, nrow=n_rows)
https://github.com/showlab/Tune-A-Video/blob/7d4a89a2b90067e8d805ef1287beb4e4adf37e18/tuneavideo/util.py#L17

==============================================
https://github.com/Lipurple/Grounded-Diffusion
==============================================

Found 14 times
torchvision.utils.save_image(annotation_pred, os.path.join("demo/demo_segresult.png"), normalize=True, scale_each=True)
torchvision.utils.save_image(annotation_pred, os.path.join(ckpt_dir, 
                                                            'training/'+ str(b_index)+'viz_sample_{0:05d}_pred_seg'.format(j)+class_name+'.png'), normalize=True, scale_each=True)
torchvision.utils.save_image(viz_tensor2, os.path.join(ckpt_dir, 
                                                                    'training/'+ str(b_index)+'viz_sample_{0:05d}_seg'.format(j)+class_name+'.png'), normalize=True, scale_each=True)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
save_image(imgs, outdir.joinpath(f'{batch_no:04}_{i:02}.png'), n_row=opt.n_samples_per_layout+1)
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/test.py#L371
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/train.py#L477
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/train.py#L493
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/ldm/models/diffusion/ddpm.py#L374
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/ldm/models/diffusion/ddpm.py#L539
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/ldm/models/diffusion/ddpm.py#L1302
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/ldm/models/diffusion/plms.py#L376
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/ldm/models/diffusion/plms.py#L541
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/ldm/models/diffusion/plms.py#L1299
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/src/taming-transformers/main.py#L237
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/src/taming-transformers/main.py#L244
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/src/taming-transformers/main.py#L257
https://github.com/Lipurple/Grounded-Diffusion/blob/5680115dcf5196d3736e2b1d157e9f5c7c6869ce/src/taming-transformers/scripts/make_scene_samples.py#L198

===============================================
https://github.com/KingJamesSong/HouseholderGAN
===============================================

Found 11 times
utils.save_image(imgs,
                os.path.join(args.output_dir, f"{args.out_prefix}_layer-{index}-index-{j}__all.png"),
                normalize=True,
                range=(-1, 1),
                nrow=args.n_sample,
            )
utils.save_image(
        img_concat, name + ".png", nrow=n_sample, normalize=True, range=(-1, 1)
    )
utils.save_image(
                sample,
                f"sample/{str(i).zfill(6)}.png",
                nrow=1,
                normalize=True,
                range=(-1, 1),
            )
utils.save_image(imgs,
            os.path.join(args.output_dir, 'pair_%06d.png' % (i)),
            normalize=True,
            range=(-1, 1),
            nrow=args.n_sample,
        )
utils.save_image(img0,
            os.path.join(args.output_dir_FID, '%06d.png' % (i)),
            normalize=True,
            range=(-1, 1),
            nrow=args.n_sample,
        )
utils.save_image(
                        sample,
                        f"sample/{str(i).zfill(6)}.png",
                        nrow=int(args.n_sample ** 0.5),
                        normalize=True,
                        range=(-1, 1),
                    )
utils.save_image(
                        sample,
                        f"{args.sample_dir}/{str(i).zfill(6)}.png",
                        nrow=int(args.n_sample ** 0.5),
                        normalize=True,
                        range=(-1, 1),
                    )
utils.save_image(
                        sample,
                        f"{args.sample_dir}/{str(i).zfill(6)}.png",
                        nrow=int(args.n_sample ** 0.5),
                        normalize=True,
                        range=(-1, 1),
                    )
utils.save_image(
                        sample,
                        f"{args.sample_dir}/{str(i).zfill(6)}.png",
                        nrow=int(args.n_sample ** 0.5),
                        normalize=True,
                        range=(-1, 1),
                    )
save_image(tmp, f"{paths_config.experiments_output_dir}/{image_name}.png", normalize=True)
save_image(name, method_type, results_dir, im)
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/apply_factor.py#L117
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/convert_weight.py#L296
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/generate.py#L19
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/test_VP_pairs.py#L176
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/test_VP_pairs.py#L183
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/train.py#L304
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/train_1024.py#L859
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/train_256.py#L859
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGAN2/train_256_baselines.py#L314
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGANHuman/pti/training/coaches/single_id_coach.py#L78
https://github.com/KingJamesSong/HouseholderGAN/blob/bdf1846c105d8e67303169200ba1c079cef6d509/StyleGANHuman/utils/log_utils.py#L48

==========================================================
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn
==========================================================

Found 9 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/main.py#L312
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/main.py#L325
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/ldm/models/diffusion/ddpm.py#L374
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/ldm/models/diffusion/ddpm.py#L539
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/ldm/models/diffusion/ddpm.py#L1315
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/scripts/img2img.py#L279
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/scripts/knn2img.py#L391
https://github.com/UCSB-NLP-Chang/Diffusion-SpaceTime-Attn/blob/764199807b3930947af4ab4b2f72890a0e667452/attention_optimization/stable-diffusion/scripts/txt2img.py#L336

======================================
https://github.com/vvictoryuki/FreeDoM
======================================

Found 20 times
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
tvu.save_image(
                        x[i][j], os.path.join(self.args.image_folder, f"{index + j}_{i}.png")
                    )
tvu.save_image(
                    inverse_data_transform(config, pinv_y_0[i]), os.path.join(self.args.image_folder, f"y0_{idx_so_far + i}.png")
                )
tvu.save_image(
                    inverse_data_transform(config, x_orig[i]), os.path.join(self.args.image_folder, f"orig_{idx_so_far + i}.png")
                )
tvu.save_image(
                        x[i][j], os.path.join(self.args.image_folder, f"{idx_so_far + j}_{i}.png")
                    )
tvu.save_image(
                    inverse_data_transform(config, pinv_y_0[i]),
                    os.path.join(self.args.image_folder, f"y0_{idx_so_far + i}.png")
                )
tvu.save_image(
                    inverse_data_transform(config, x_orig[i]),
                    os.path.join(self.args.image_folder, f"orig_{idx_so_far + i}.png")
                )
tvu.save_image(
                        x[i][j], os.path.join(self.args.image_folder, f"{idx_so_far + j}_{i}.png")
                    )
make_grid(grid, nrow=n_rows)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/CN/cldm/cldm.py#L393
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/CN/cldm/logger.py#L31
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/CN/ldm/models/diffusion/ddpm.py#L473
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/CN/ldm/models/diffusion/ddpm.py#L652
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/CN/ldm/models/diffusion/ddpm.py#L1201
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/CN/ldm/models/diffusion/ddpm.py#L1439
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/CN/ldm/models/diffusion/ddpm.py#L1601
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/CN/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/Face-GD/runners/diffusion.py#L195
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/Face-GD/runners/.ipynb_checkpoints/diffusion-checkpoint.py#L383
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/Face-GD/runners/.ipynb_checkpoints/diffusion-checkpoint.py#L386
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/Face-GD/runners/.ipynb_checkpoints/diffusion-checkpoint.py#L407
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/Face-GD/runners/.ipynb_checkpoints/diffusion-checkpoint.py#L715
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/Face-GD/runners/.ipynb_checkpoints/diffusion-checkpoint.py#L719
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/Face-GD/runners/.ipynb_checkpoints/diffusion-checkpoint.py#L807
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/SD_style/txt2img.py#L349
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/SD_style/ldm/models/diffusion/ddpm.py#L374
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/SD_style/ldm/models/diffusion/ddpm.py#L539
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/SD_style/ldm/models/diffusion/ddpm.py#L1302
https://github.com/vvictoryuki/FreeDoM/blob/1394b1dc5807fb01db6a26d2dc42ca05e3d2eaf5/SD_style/ldm/modules/image_degradation/utils_image.py#L353

======================================
https://github.com/TencentARC/MasaCtrl
======================================

Found 4 times
save_image(self.mask_s.unsqueeze(0).unsqueeze(0), os.path.join(mask_save_dir, "mask_s.png"))
save_image(self.mask_t.unsqueeze(0).unsqueeze(0), os.path.join(mask_save_dir, "mask_t.png"))
save_image(mask_image, os.path.join(self.mask_save_dir, f"mask_s_{self.cur_step}_{self.cur_att_layer}.png"))
save_image(mask_image, os.path.join(self.mask_save_dir, f"mask_t_{self.cur_step}_{self.cur_att_layer}.png"))
https://github.com/TencentARC/MasaCtrl/blob/ae6e1fb395211f6afb598d5788cc233fae46e97f/masactrl/masactrl.py#L135
https://github.com/TencentARC/MasaCtrl/blob/ae6e1fb395211f6afb598d5788cc233fae46e97f/masactrl/masactrl.py#L136
https://github.com/TencentARC/MasaCtrl/blob/ae6e1fb395211f6afb598d5788cc233fae46e97f/masactrl/masactrl.py#L307
https://github.com/TencentARC/MasaCtrl/blob/ae6e1fb395211f6afb598d5788cc233fae46e97f/masactrl/masactrl.py#L319

====================================================
https://github.com/MagicFusion/MagicFusion.github.io
====================================================

Found 9 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
save_image(grid[i, :, :, :], os.path.join(outpath,opt.prompt+'_{}.png'.format(i)))
make_grid(grid, nrow=opt.n_samples)
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/main.py#L384
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/main.py#L397
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/ldm/models/diffusion/ddpm.py#L383
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/ldm/models/diffusion/ddpm.py#L580
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/ldm/models/diffusion/ddpm.py#L1368
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/scripts/stable_txt2img.py#L326
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/scripts/txt2img.py#L173
https://github.com/MagicFusion/MagicFusion.github.io/blob/eb5460c4bd14a1790aceb713f0a1eb18bf534ddf/scripts/txt2img.py#L175

===================================
https://github.com/cognaclee/DPM-OT
===================================

Found 1 times
save_image(plot_data, '{}.png'.format(name), nrow=k+1)
https://github.com/cognaclee/DPM-OT/blob/e2c0a667027593a31057e3e207c1a905dda3c664/evaluation/nearest_neighbor.py#L114

==========================================================
https://github.com/diffusion-face-relighting/difareli_code
==========================================================

Found 22 times
make_grid(source_img, nrow=4)
make_grid(cond_img, nrow=4)
make_grid(cond_img, nrow=4)
make_grid(ddim_sample_plot, nrow=4)
make_grid(ddim_predx0_plot, nrow=4)
make_grid(ddim_reverse_sample_plot, nrow=4)
make_grid(ddim_reverse_predx0_plot, nrow=4)
make_grid(ddim_recon_sample_plot, nrow=4)
make_grid(ddim_recon_predx0_plot, nrow=4)
torchvision.utils.make_grid(F.interpolate(visdict[key], [new_h, new_w]).detach().cpu())
torchvision.utils.make_grid(F.interpolate(visdict[key], [new_h, new_w]).detach().cpu())
torchvision.utils.make_grid(F.interpolate(visdict[key], [new_h, new_w]).detach().cpu())
save_image(tensor=rendered_image[j].permute((2, 0, 1)).cpu(), fp=f"{clip_path}/{name}.png")
torchvision.utils.save_image(tensor=f_relit[-1], fp=f"{eval_dir}/input={src_id}#pred={dst_id}.png")
torchvision.utils.save_image(tensor=f_relit[-1], fp=f"{eval_dir}/input={src_id}#pred={dst_id}.png")
torchvision.utils.save_image(tensor=img_plot, fp=f"./{fn}.png")
torchvision.utils.save_image(tensor=img_plot, fp=f"./{fn}_{i}.png")
torchvision.utils.save_image(tensor=(frame), fp=f"{path}/{fn}_frame{i}.png")
torchvision.utils.save_image(tensor=(frame), fp=f"{path}/{fn}_{frame_idx}.png")
torchvision.utils.save_image(tensor=(sample[[b]]), fp=f"{sample_path}/sample_frame{t[b]}.png")
torchvision.utils.save_image(tensor=(pred_xstart[[b]]), fp=f"{pred_xstart_path}/pred_xstart_frame{t[b]}.png")
torchvision.utils.save_image(tensor=(final_output[[b]]), fp=f"{final_output_path}/final_output_frame0.png")
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/guided_diffusion/train_util/cond_train_util.py#L494
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/guided_diffusion/train_util/cond_train_util.py#L510
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/guided_diffusion/train_util/cond_train_util.py#L527
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/guided_diffusion/train_util/cond_train_util.py#L540
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/guided_diffusion/train_util/cond_train_util.py#L542
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/guided_diffusion/train_util/cond_train_util.py#L553
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/guided_diffusion/train_util/cond_train_util.py#L555
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/guided_diffusion/train_util/cond_train_util.py#L566
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/guided_diffusion/train_util/cond_train_util.py#L568
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/model_3d/FLAME/utils/util.py#L641
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/preprocess_scripts/Relighting_preprocessing_tools/DECA/decalib/deca.py#L307
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/preprocess_scripts/Relighting_preprocessing_tools/DECA/decalib/utils/util.py#L700
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/preprocess_scripts/Relighting_preprocessing_tools/DECA/script/estimate_deca_for_dpm.py#L223
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/sample_scripts/inference/relight.py#L389
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/sample_scripts/inference/reshadow.py#L384
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/sample_scripts/sample_utils/vis_utils.py#L85
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/sample_scripts/sample_utils/vis_utils.py#L92
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/sample_scripts/sample_utils/vis_utils.py#L117
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/sample_scripts/sample_utils/vis_utils.py#L131
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/sample_scripts/sample_utils/vis_utils.py#L149
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/sample_scripts/sample_utils/vis_utils.py#L150
https://github.com/diffusion-face-relighting/difareli_code/blob/2dd24a024f26d659767df6ecc8da4ba47c55e7a8/sample_scripts/sample_utils/vis_utils.py#L156

==========================================
https://github.com/johannakarras/DreamPose
==========================================

Found 1 times
make_grid(images, nrow=len(s2_vals))
https://github.com/johannakarras/DreamPose/blob/5bf30b7df70cf6f2e0bb25556c6ff2cbf0f2b1bf/pipelines/dual_encoder_pipeline.py#L580

=============================================
https://github.com/nupurkmr9/concept-ablation
=============================================

Found 9 times
make_grid(grid, nrow=n_rows)
torchvision.utils.make_grid(images[k], nrow=4)
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(grid, nrow=n_rows)
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/sample.py#L432
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/train.py#L613
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/train.py#L630
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/ldm/models/diffusion/ddpm.py#L374
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/ldm/models/diffusion/ddpm.py#L539
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/ldm/models/diffusion/ddpm.py#L1297
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/src/model.py#L432
https://github.com/nupurkmr9/concept-ablation/blob/d78077c37e24e11f6b64567121dd21b9d25d3c8f/compvis/src/utils.py#L243

=========================================
https://github.com/AIBluefisher/DReg-NeRF
=========================================

Found 6 times
torchvision.utils.make_grid(coarse_feat_map, normalize=True, scale_each=True, nrow=8)
torchvision.utils.make_grid(feat_map, normalize=True, scale_each=True, nrow=8)
torchvision.utils.make_grid(nearby_feat_maps, normalize=True, scale_each=True, nrow=5)
torchvision.utils.make_grid(nearby_rgb_maps, normalize=True, scale_each=True, nrow=5)
torchvision.utils.make_grid(nearby_res_feat_maps, normalize=True, scale_each=True, nrow=5)
torchvision.utils.make_grid(nearby_res_rgb_maps, normalize=True, scale_each=True, nrow=5)
https://github.com/AIBluefisher/DReg-NeRF/blob/cd5c01beab1e754ebd002a40df2e64ccdfe2955e/conerf/visualization/feature_visualizer.py#L13
https://github.com/AIBluefisher/DReg-NeRF/blob/cd5c01beab1e754ebd002a40df2e64ccdfe2955e/conerf/visualization/feature_visualizer.py#L20
https://github.com/AIBluefisher/DReg-NeRF/blob/cd5c01beab1e754ebd002a40df2e64ccdfe2955e/conerf/visualization/feature_visualizer.py#L115
https://github.com/AIBluefisher/DReg-NeRF/blob/cd5c01beab1e754ebd002a40df2e64ccdfe2955e/conerf/visualization/feature_visualizer.py#L119
https://github.com/AIBluefisher/DReg-NeRF/blob/cd5c01beab1e754ebd002a40df2e64ccdfe2955e/conerf/visualization/feature_visualizer.py#L123
https://github.com/AIBluefisher/DReg-NeRF/blob/cd5c01beab1e754ebd002a40df2e64ccdfe2955e/conerf/visualization/feature_visualizer.py#L127

==================================
https://github.com/lingxiao-li/HAE
==================================

Found 2 times
save_image(pred[0], os.path.join(output_dir, "{}_edges.jpg".format(image_path.split("/")[-1].split('.')[0])))
save_image(pred[0], os.path.join(output_dir, "{}_edges.jpg".format(image_path.split("/")[-1].split('.')[0])))
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/scripts/generate_sketch_data.py#L62
https://github.com/lingxiao-li/HAE/blob/fbac2ff106db469fbd855d4452d261eed8e3ad88/utils/scripts/generate_sketch_data.py#L62

=========================================
https://github.com/yumingj/Text2Performer
=========================================

Found 7 times
save_image(img_cat, save_path, nrow=1, padding=4)
save_image(img_cat, save_path, nrow=1, padding=4)
save_image(pred_img, save_path, nrow=1, padding=4)
save_image(
                pred_img,
                f'{save_path}/{save_index[idx]:03d}.png',
                nrow=1,
                padding=4)
save_image(
                pred_img,
                f'{save_path}/{frame_idx:03d}.png',
                nrow=1,
                padding=4)
save_image(
                img_cat, f'{save_path}/{frame_idx:03d}.png', nrow=1, padding=4)
save_image(img_cat, f'{save_dir}/{img_name}.png', nrow=1, padding=4)
https://github.com/yumingj/Text2Performer/blob/433489aae7bdd6fd868a2e272d98bed7c7b642a5/models/app_transformer_model.py#L383
https://github.com/yumingj/Text2Performer/blob/433489aae7bdd6fd868a2e272d98bed7c7b642a5/models/app_transformer_model.py#L436
https://github.com/yumingj/Text2Performer/blob/433489aae7bdd6fd868a2e272d98bed7c7b642a5/models/video_transformer_model.py#L974
https://github.com/yumingj/Text2Performer/blob/433489aae7bdd6fd868a2e272d98bed7c7b642a5/models/video_transformer_model.py#L1033
https://github.com/yumingj/Text2Performer/blob/433489aae7bdd6fd868a2e272d98bed7c7b642a5/models/video_transformer_model.py#L1045
https://github.com/yumingj/Text2Performer/blob/433489aae7bdd6fd868a2e272d98bed7c7b642a5/models/video_transformer_model.py#L1067
https://github.com/yumingj/Text2Performer/blob/433489aae7bdd6fd868a2e272d98bed7c7b642a5/models/vqgan_decompose_model.py#L265

========================================
https://github.com/kibeom-hong/aespa-net
========================================

Found 7 times
torchvision.utils.make_grid(tensor, nrow=nrow, padding=npadding)
torchvision.utils.save_image(denormalize(tensor).clamp_(0.0, 1.0), path)
torchvision.utils.make_grid(tensor1, nrow=nrow, padding=npadding)
torchvision.utils.make_grid(tensor2, nrow=nrow, padding=npadding)
torchvision.utils.save_image(denormalize(tensor1).clamp_(0.0, 1.0)+normalize(tensor2), path)
torchvision.utils.make_grid(tensor, nrow=nrow, padding=npadding)
torchvision.utils.make_grid(denormalize(tensor.squeeze(0)))
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/data/dataset_util.py#L275
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/data/dataset_util.py#L276
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/data/dataset_util.py#L285
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/data/dataset_util.py#L286
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/data/dataset_util.py#L287
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/data/dataset_util.py#L295
https://github.com/kibeom-hong/aespa-net/blob/6afd54ae2f71686071fc7c6ea1a1041d96485ac2/data/dataset_util.py#L306

================================
https://github.com/lizhi-ntu/KGI
================================

Found 12 times
make_grid([
                cloth_vis,
                vk_vis,
                sk_vis,
                ck_vis,
                parse_vis,
                parse_ag_vis,
                content_keeping_mask_vis,
                parse_estimate_vis,
                image_vis,
                image_ag_vis,
                incomplete_image_vis,
                final_image_vis
                ], nrow=4)
save_image(grid, grid_path)
save_image(estimated_cloth, ck_vis_path)
save_image(skeleton, sk_vis_path)
make_grid([
                            draw_skeleton(s_pos[i].cpu()),
                            draw_cloth(v_pos[i].cpu()),
                            draw_cloth(p_pos[i].cpu()),
                            draw_cloth(t_pos[i].cpu())
                            ], nrow=4)
save_image(grid, grid_name)
make_grid([
                            draw_skeleton(s_pos[i].cpu()),
                            draw_cloth(v_pos[i].cpu()),
                            draw_cloth(p_pos[i].cpu()),
                            ], nrow=3)
save_image(grid, grid_name)
make_grid([
                            visualize_segmap(parse_agnostic.cpu(), batch=i),
                            (sk_vis[i].cpu()/2 +0.5), 
                            (ck_vis[i].cpu()/2 + 0.5),
                            visualize_segmap(preds.cpu(), batch=i),
                            visualize_segmap(parse.cpu(), batch=i),
                            ], nrow=5)
save_image(grid, grid_name)
make_grid([
                            visualize_segmap(parse_agnostic.cpu(), batch=i),
                            (sk_vis[i].cpu()/2 +0.5), 
                            (ck_vis[i].cpu()/2 + 0.5),
                            visualize_segmap(preds.cpu(), batch=i),
                            ], nrow=4)
save_image(grid, grid_name)
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/generate_demo.py#L534
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/generate_demo.py#L549
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_kg/generate_kg.py#L222
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_kg/generate_kg.py#L226
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_kg/train_kg.py#L267
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_kg/train_kg.py#L274
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_kg/train_kg.py#L286
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_kg/train_kg.py#L292
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_pg/train_pg.py#L133
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_pg/train_pg.py#L142
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_pg/train_pg.py#L156
https://github.com/lizhi-ntu/KGI/blob/22c65d56650e7d7943582355cd39360f6166e089/codes_pg/train_pg.py#L163

======================================
https://github.com/lyndonzheng/CVQ-VAE
======================================

Found 2 times
make_grid(images, nrow=8, range=(-1, 1), normalize=True)
make_grid(rec_images, nrow=8, range=(-1,1), normalize=True)
https://github.com/lyndonzheng/CVQ-VAE/blob/d8614f0a1eafc800853515860d23d45ca65644ac/main.py#L166
https://github.com/lyndonzheng/CVQ-VAE/blob/d8614f0a1eafc800853515860d23d45ca65644ac/main.py#L167

========================================
https://github.com/junshutang/Make-It-3D
========================================

Found 12 times
make_grid(img, **kwargs)
make_grid(img, **kwargs)
save_image(imgs, os.path.join(opt.workspace, opt.prompt.replace(" ", "_") + f'_{seed}.png'))
save_image(pred_rgb, os.path.join(self.img_path,  f'{self.global_step}.png'))
save_image(gt_rgb, os.path.join(self.img_path,  f'{self.global_step}_gt.png'))
save_image(pred_depth, os.path.join(self.img_path,  f'{self.global_step}_depth.png'))
save_image(self.depth_prediction * (~self.depth_mask), os.path.join(self.img_path,  f'{self.global_step}_ref_depth_mask.png'))
save_image(de_imgs, os.path.join(self.img_path,  f'{self.global_step}_denoise.png'))
save_image(pred_rgb, os.path.join(train_outputdir,  f'{i}.png'))
save_image(pred_rgb, img_outdir+f'/render_unet_{i:04d}.png')
save_image(pred_depth, save_path_depth)
save_image(preds, save_path)
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/DPT/warp_depth.py#L25
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/DPT/warp_depth.py#L30
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/nerf/sd.py#L268
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/nerf/utils.py#L566
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/nerf/utils.py#L567
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/nerf/utils.py#L568
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/nerf/utils.py#L569
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/nerf/utils.py#L571
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/nerf/utils.py#L872
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/nerf/utils.py#L939
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/nerf/utils.py#L1065
https://github.com/junshutang/Make-It-3D/blob/659c7bc57c55f1d768a303c05ae115cc6d5bfb65/nerf/utils.py#L1066

=====================================
https://github.com/johannwyh/StyleInV
=====================================

Found 3 times
utils.make_grid(fs, nrow=int(np.sqrt(len(wc))))
utils.make_grid(fs, nrow=int(np.sqrt(len(wc))))
utils.make_grid(fs, nrow=int(np.sqrt(len(wc))))
https://github.com/johannwyh/StyleInV/blob/561b300277b7ad6b14d39eea04903b812d5c5075/training/logging.py#L67
https://github.com/johannwyh/StyleInV/blob/561b300277b7ad6b14d39eea04903b812d5c5075/training/logging.py#L129
https://github.com/johannwyh/StyleInV/blob/561b300277b7ad6b14d39eea04903b812d5c5075/training/logging.py#L178

====================================
https://github.com/jprost76/PnP-HVAE
====================================

Found 4 times
torchvision.utils.save_image(xk1, xpath)
torchvision.utils.save_image(ypt.detach().cpu(), ypath)
torchvision.utils.save_image(im.detach().cpu(), impath)
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/jprost76/PnP-HVAE/blob/f10791db449044b45766eb2a459f247f9611fa37/main.py#L119
https://github.com/jprost76/PnP-HVAE/blob/f10791db449044b45766eb2a459f247f9611fa37/main.py#L120
https://github.com/jprost76/PnP-HVAE/blob/f10791db449044b45766eb2a459f247f9611fa37/utils/loggers.py#L54
https://github.com/jprost76/PnP-HVAE/blob/f10791db449044b45766eb2a459f247f9611fa37/utils/utils_image.py#L290

=====================================
https://github.com/naver-ai/BlendNeRF
=====================================

Found 11 times
save_image(mask, f'{outdir}/mask.png')
save_image(ref_img, f'{outdir}/ref_aligned.png', normalize=True, range=(-1,1))
save_image(edited_image, f'{outdir}/edited_{i}.png', normalize=True, range=(-1,1))
save_image(inverted_img, f'{outdir}/{img_name}_inverted_W_{i}.png', normalize=True, range=(-1,1))
save_image(inverted_img, f'{outdir}/{img_name}_inverted_W.png', normalize=True, range=(-1,1))
save_image(inverted_img, f'{outdir}/{img_name}_inverted_G_{i}.png', normalize=True, range=(-1,1))
save_image(inverted_img, f'{outdir}/{img_name}_inverted_G.png', normalize=True, range=(-1,1))
save_image(torch.stack(grid).permute(0, 3, 1, 2).float()/255, os.path.join(dname_dest, 'grid.jpg'), nrow=4)
save_image(mask_using_contour, f'{outdir}/mask_using_contour.png')
save_image(total_mask_include_contour.permute(2, 0, 1), f'{outdir}/total_mask_include_contour.png')
save_image(img, f'{outdir}/{img_name}_w_mask.png', normalize=True, range=(-1,1))
https://github.com/naver-ai/BlendNeRF/blob/404622d77f667a11c075406fba5cbff548927830/blend.py#L173
https://github.com/naver-ai/BlendNeRF/blob/404622d77f667a11c075406fba5cbff548927830/blend.py#L174
https://github.com/naver-ai/BlendNeRF/blob/404622d77f667a11c075406fba5cbff548927830/blend.py#L222
https://github.com/naver-ai/BlendNeRF/blob/404622d77f667a11c075406fba5cbff548927830/inversion.py#L151
https://github.com/naver-ai/BlendNeRF/blob/404622d77f667a11c075406fba5cbff548927830/inversion.py#L157
https://github.com/naver-ai/BlendNeRF/blob/404622d77f667a11c075406fba5cbff548927830/inversion.py#L203
https://github.com/naver-ai/BlendNeRF/blob/404622d77f667a11c075406fba5cbff548927830/inversion.py#L206
https://github.com/naver-ai/BlendNeRF/blob/404622d77f667a11c075406fba5cbff548927830/modules/bisenet.py#L294
https://github.com/naver-ai/BlendNeRF/blob/404622d77f667a11c075406fba5cbff548927830/modules/poisson_blending.py#L25
https://github.com/naver-ai/BlendNeRF/blob/404622d77f667a11c075406fba5cbff548927830/modules/poisson_blending.py#L31
https://github.com/naver-ai/BlendNeRF/blob/404622d77f667a11c075406fba5cbff548927830/modules/utils.py#L328

=================================
https://github.com/GuoQiushan/EGC
=================================

Found 3 times
save_image(out, f'recons_{fname}')
make_grid(sample_tensor)
save_image(sample_tensor, os.path.join(logger.get_dir(), f"samples_{shape_str}.png"))
https://github.com/GuoQiushan/EGC/blob/ec939ae503edece6f41af3379a694323a175d623/scripts/autoencoder.py#L754
https://github.com/GuoQiushan/EGC/blob/ec939ae503edece6f41af3379a694323a175d623/scripts/image_sample_cond_ldm_egc.py#L106
https://github.com/GuoQiushan/EGC/blob/ec939ae503edece6f41af3379a694323a175d623/scripts/image_sample_cond_ldm_egc.py#L107

=============================================================
https://github.com/bcmi/Foreground-Object-Search-Dataset-FOSD
=============================================================

Found 1 times
save_image(save_result, os.path.join(save_dir, save_prefix + '.png'))
https://github.com/bcmi/Foreground-Object-Search-Dataset-FOSD/blob/63129173191e7cdea4ae74b788efdb3d64db9616/demo/demo_ui.py#L151

========================================
https://github.com/3dhumangan/3DHumanGAN
========================================

Found 18 times
make_grid(gen_imgs[:25], nrow=5, normalize=True)
make_grid(gen_imgs[:25], nrow=5, normalize=True)
make_grid(gen_imgs[:25], nrow=5, normalize=True)
make_grid(gen_imgs[:25], nrow=5, normalize=True)
make_grid(gen_imgs[:25], nrow=5, normalize=True)
make_grid(depths[:25], nrow=5, normalize=True)
make_grid(gen_imgs[:25], nrow=5, normalize=True)
make_grid(depths[:25], nrow=5, normalize=True)
make_grid(data["images"][:9], 3, normalize=True)
make_grid(0.5 * torch.clamp(gen_outputs["rgbs"], -1., 1.) + 0.5, nrow=n_per_row, normalize=False)
make_grid(0.5 * torch.clamp(gen_outputs["rgbs_render"], -1., 1.) + 0.5, nrow=n_per_row, normalize=False)
make_grid(gen_outputs["depths"], nrow=n_per_row, normalize=True)
make_grid(visualize_segmentation(disc_outputs_gen["segments"]), nrow=n_per_row, normalize=False)
make_grid(0.5 * torch.clamp(gen_outputs["rgbs"], -1., 1.) + 0.5, nrow=n_per_row, normalize=False)
make_grid(0.5 * torch.clamp(gen_outputs["rgbs_render"], -1., 1.) + 0.5, nrow=n_per_row, normalize=False)
make_grid(gen_outputs["depths"], nrow=n_per_row, normalize=True)
make_grid(visualize_segmentation(conditions[meta["condition_modal_disc_gen"]]), nrow=n_per_row, normalize=False)
make_grid(visualize_segmentation(disc_outputs_gen["segments"]), nrow=n_per_row, normalize=False)
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/base_trainer.py#L240
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/base_trainer.py#L252
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/base_trainer.py#L266
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/base_trainer.py#L278
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/base_trainer.py#L290
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/base_trainer.py#L292
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/base_trainer.py#L305
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/base_trainer.py#L307
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/base_trainer.py#L315
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/phase_trainer.py#L643
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/phase_trainer.py#L645
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/phase_trainer.py#L647
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/phase_trainer.py#L650
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/phase_trainer.py#L669
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/phase_trainer.py#L671
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/phase_trainer.py#L673
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/phase_trainer.py#L677
https://github.com/3dhumangan/3DHumanGAN/blob/59eec7746a3c29fbbca4699cb68f16332f36d947/lib/trainers/phase_trainer.py#L679

=====================================
https://github.com/rese1f/StableVideo
=====================================

Found 8 times
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/rese1f/StableVideo/blob/298b52f8df5a1edb93ee46c59001833a2b291aa5/cldm/cldm.py#L373
https://github.com/rese1f/StableVideo/blob/298b52f8df5a1edb93ee46c59001833a2b291aa5/cldm/logger.py#L31
https://github.com/rese1f/StableVideo/blob/298b52f8df5a1edb93ee46c59001833a2b291aa5/ldm/models/diffusion/ddpm.py#L473
https://github.com/rese1f/StableVideo/blob/298b52f8df5a1edb93ee46c59001833a2b291aa5/ldm/models/diffusion/ddpm.py#L652
https://github.com/rese1f/StableVideo/blob/298b52f8df5a1edb93ee46c59001833a2b291aa5/ldm/models/diffusion/ddpm.py#L1201
https://github.com/rese1f/StableVideo/blob/298b52f8df5a1edb93ee46c59001833a2b291aa5/ldm/models/diffusion/ddpm.py#L1439
https://github.com/rese1f/StableVideo/blob/298b52f8df5a1edb93ee46c59001833a2b291aa5/ldm/models/diffusion/ddpm.py#L1601
https://github.com/rese1f/StableVideo/blob/298b52f8df5a1edb93ee46c59001833a2b291aa5/ldm/modules/image_degradation/utils_image.py#L353

==================================================
https://github.com/orpatashnik/local-prompt-mixing
==================================================

Found 8 times
save_image(ToTensor()(image[0]), f"{exp_path}/{similar_words[0]}.jpg")
save_image(torch.from_numpy(orig_mask).float(), f"{exp_path}/{similar_words[0]}_mask.jpg")
save_image(ToTensor()(image[image_index]), f"{exp_path}/{another_prompt_batch['word'][i]}.jpg")
save_image(torch.from_numpy(mask).float(), f"{exp_path}/{another_prompt_batch['word'][i]}_mask.jpg")
save_image(images, f"{exp_path}/grid.jpg", nrow=min(max([i for i in range(2, 8) if len(images) % i == 0]), 8))
save_image(ToTensor()(image[0]), f"{args.exp_path}/image_rec.jpg")
save_image(ToTensor()(image_gt), f"{exp_path}/real_image.jpg")
save_image(ToTensor()(image_enc), f"{exp_path}/image_enc.jpg")
https://github.com/orpatashnik/local-prompt-mixing/blob/4bc225db751ae755604677cb2cdbb7bd8e732fe8/main.py#L52
https://github.com/orpatashnik/local-prompt-mixing/blob/4bc225db751ae755604677cb2cdbb7bd8e732fe8/main.py#L53
https://github.com/orpatashnik/local-prompt-mixing/blob/4bc225db751ae755604677cb2cdbb7bd8e732fe8/main.py#L93
https://github.com/orpatashnik/local-prompt-mixing/blob/4bc225db751ae755604677cb2cdbb7bd8e732fe8/main.py#L95
https://github.com/orpatashnik/local-prompt-mixing/blob/4bc225db751ae755604677cb2cdbb7bd8e732fe8/main.py#L99
https://github.com/orpatashnik/local-prompt-mixing/blob/4bc225db751ae755604677cb2cdbb7bd8e732fe8/run_segmentation.py#L51
https://github.com/orpatashnik/local-prompt-mixing/blob/4bc225db751ae755604677cb2cdbb7bd8e732fe8/src/null_text_inversion.py#L39
https://github.com/orpatashnik/local-prompt-mixing/blob/4bc225db751ae755604677cb2cdbb7bd8e732fe8/src/null_text_inversion.py#L40

============================================
https://github.com/harlanhong/ICCV2023-MCNET
============================================

Found 2 times
vutils.make_grid(rst, normalize=True, scale_each=True, nrow=3)
vutils.make_grid(visualization, normalize=True, scale_each=True, nrow=16)
https://github.com/harlanhong/ICCV2023-MCNET/blob/9a08e22b4232ca6a92134045e7268e83e6b43cf6/train.py#L195
https://github.com/harlanhong/ICCV2023-MCNET/blob/9a08e22b4232ca6a92134045e7268e83e6b43cf6/train.py#L210

=====================================
https://github.com/salesforce/GlueGen
=====================================

Found 12 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/main.py#L322
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/main.py#L335
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/ldm/models/diffusion/ddpm.py#L386
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/ldm/models/diffusion/ddpm.py#L551
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/ldm/models/diffusion/ddpm.py#L1309
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/scripts/img2img.py#L289
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/scripts/knn2img.py#L401
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/scripts/sound2img_audio_text_mix_loop.py#L502
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/scripts/sound2img_gluegen.py#L405
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/scripts/txt2img.py#L342
https://github.com/salesforce/GlueGen/blob/4159352d888d3cafb8f6ac666f0275dce0d885ce/stable-diffusion/scripts/txt2img_demo_ml.py#L351

=====================================
https://github.com/sichun233746/MoTIF
=====================================

Found 1 times
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/sichun233746/MoTIF/blob/3b6b417b90e17db0dbbb58d77989bbd5ad2f744f/utils/util.py#L116

==============================
https://github.com/sail-sg/MDT
==============================

Found 1 times
save_image(samples, "sample.jpg", nrow=3, normalize=True, value_range=(-1, 1))
https://github.com/sail-sg/MDT/blob/b1fe0b855d47456860785397927a483c7f15b57f/infer_mdt.py#L59

==================================
https://github.com/16lemoing/waldo
==================================

Found 3 times
make_grid(tensor, nrow=nrow, normalize=normalize, range=span, pad_value=pad_value)
make_grid(tensor[:, i], nrow=nrow, normalize=normalize, range=span, pad_value=pad_value)
torchvision.utils.save_image(tensor, path)
https://github.com/16lemoing/waldo/blob/fc0a67df3561521e56d86e6d23128583778000d9/tools/logger.py#L53
https://github.com/16lemoing/waldo/blob/fc0a67df3561521e56d86e6d23128583778000d9/tools/logger.py#L260
https://github.com/16lemoing/waldo/blob/fc0a67df3561521e56d86e6d23128583778000d9/tools/utils.py#L256

=================================
https://github.com/araachie/river
=================================

Found 6 times
make_grid(flat_observations, nrow=flat_observations.size(0) // (len(images) * num_sequences))
make_grid(recon, nrow=frames, value_range=(-1, 1))
make_grid(refined, nrow=frames, value_range=(-1, 1))
make_grid(target, nrow=frames, value_range=(-1, 1))
make_grid((recon - target).abs().mean(1, keepdim=True),
                                                          nrow=frames, value_range=(0, 2))
make_grid((refined - target).abs().mean(1, keepdim=True),
                                                          nrow=frames, value_range=(0, 2))
https://github.com/araachie/river/blob/1320bb6f25313b2474fdadd7435aa4bce21021f8/lutils/logging.py#L63
https://github.com/araachie/river/blob/1320bb6f25313b2474fdadd7435aa4bce21021f8/refinement/train.py#L165
https://github.com/araachie/river/blob/1320bb6f25313b2474fdadd7435aa4bce21021f8/refinement/train.py#L166
https://github.com/araachie/river/blob/1320bb6f25313b2474fdadd7435aa4bce21021f8/refinement/train.py#L167
https://github.com/araachie/river/blob/1320bb6f25313b2474fdadd7435aa4bce21021f8/refinement/train.py#L168
https://github.com/araachie/river/blob/1320bb6f25313b2474fdadd7435aa4bce21021f8/refinement/train.py#L170

===============================
https://github.com/xyfJASON/HCL
===============================

Found 3 times
save_image([gt_img, noise, mask, X, pred_masks[2], pred_masks[1], pred_masks[0], refX],
                       os.path.join(cfg.save_dir, str(i.item()) + '.png'),
                       nrow=8, normalize=True, value_range=(0, 1))
save_image(show_imgs, savepath, nrow=len(show_imgs) // 6, normalize=True, value_range=(0, 1))
make_grid(show, nrow=5)
https://github.com/xyfJASON/HCL/blob/a9dbf883ca38205ba7c16c2c90effffad9ca6a3f/engine/tester.py#L268
https://github.com/xyfJASON/HCL/blob/a9dbf883ca38205ba7c16c2c90effffad9ca6a3f/engine/trainer.py#L415
https://github.com/xyfJASON/HCL/blob/a9dbf883ca38205ba7c16c2c90effffad9ca6a3f/utils/mask.py#L236

===================================
https://github.com/miaoyuchun/DDS2M
===================================

Found 1 times
torchvision.utils.make_grid(images_torch, nrow)
https://github.com/miaoyuchun/DDS2M/blob/2cb5d59154d0558db638e6d120d2fe447c8703ed/utils/plot_image_grid.py#L9

==============================
https://github.com/p1y2z3/SDAP
==============================

Found 2 times
vutils.save_image(im_denoise, os.path.join(args.result_path, name))
vutils.save_image(im_denoise, os.path.join(args.result_path, name))
https://github.com/p1y2z3/SDAP/blob/1f415a00afcd52518d90365d7349358c88d45d2b/test.py#L99
https://github.com/p1y2z3/SDAP/blob/1f415a00afcd52518d90365d7349358c88d45d2b/train.py#L213

===================================
https://github.com/Vicky0522/RSFNet
===================================

Found 1 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
https://github.com/Vicky0522/RSFNet/blob/206d06ff58b1cf3a347ebd457f024b55b74ad3e5/basicsr/utils/img_util.py#L71

==================================
https://github.com/VITA-Group/PiRN
==================================

Found 6 times
utils.save_image(item_tensor, input_image)
utils.save_image(sim.squeeze(0), output_image)
utils.save_image(J[0], "{}/training_samples/recons_batch_id_{}.jpg".format(save_dir, batch_id))
utils.save_image(gt[0], "{}/training_samples/gt_batch_id_{}.jpg".format(save_dir, batch_id))
utils.save_image(sim_I[0], "{}/training_samples/sim_batch_id_{}.jpg".format(save_dir, batch_id))
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
https://github.com/VITA-Group/PiRN/blob/12b9ef6a32c75143c23402a7ab8f843624ca99e8/assets/generate-data.py#L55
https://github.com/VITA-Group/PiRN/blob/12b9ef6a32c75143c23402a7ab8f843624ca99e8/assets/generate-data.py#L56
https://github.com/VITA-Group/PiRN/blob/12b9ef6a32c75143c23402a7ab8f843624ca99e8/assets/train.py#L144
https://github.com/VITA-Group/PiRN/blob/12b9ef6a32c75143c23402a7ab8f843624ca99e8/assets/train.py#L145
https://github.com/VITA-Group/PiRN/blob/12b9ef6a32c75143c23402a7ab8f843624ca99e8/assets/train.py#L146
https://github.com/VITA-Group/PiRN/blob/12b9ef6a32c75143c23402a7ab8f843624ca99e8/assets/utils/util_image.py#L251

===============================================================================
https://github.com/chqwer2/Multi-view-Self-supervised-Disentanglement-Denoising
===============================================================================

Found 1 times
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/chqwer2/Multi-view-Self-supervised-Disentanglement-Denoising/blob/5c48c3c1b19885ca3d038478489c3fa7665c33d4/lib/utils_image.py#L359

====================================
https://github.com/zhengchen1999/DAT
====================================

Found 1 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
https://github.com/zhengchen1999/DAT/blob/57637a33edef21225b47885859b9fc1ff04231e3/basicsr/utils/img_util.py#L71

======================================
https://github.com/junsang7777/VOS-VFI
======================================

Found 9 times
imwrite(frame_out, output_dir + '/' + self.im_list[idx] + '/' + output_name, range=(0, 1))
imwrite(frame_out, output_dir + '/' + self.im_list[idx] + '/' + output_name, range=(0, 1))
imwrite(frame_out, output_dir + '/' + self.im_list[idx] + '/' + output_name, range=(0, 1))
imwrite(frame_out, output_dir + '/' + self.im_list[idx] + '/' + output_name, range=(0, 1))
imwrite(frame_out.clone(), args.output_frame, range=(0, 1))
imwrite(frame1.clone(), args.output_video + '/' + folder_name + '/' + str((idx - args.index_from) * 2 + args.index_from).zfill(args.zpad) + '.jpg', range=(0, 1))
imwrite(frame_out.clone(), args.output_video + '/' + folder_name + '/' + str((idx - args.index_from) * 2 + 1 + args.index_from).zfill(args.zpad) + '.jpg', range=(0, 1))
imwrite(frame_last.clone(), args.output_video + '/' + folder_name + '/' + str((xxx) * 2 + args.index_from).zfill(args.zpad) + '.jpg', range=(0, 1))
imwrite(_frame_last.clone(), args.output_video + '/' + folder_name + '/' + str((frame_len - 1) + args.index_from).zfill(args.zpad) + '.jpg', range=(0, 1))
https://github.com/junsang7777/VOS-VFI/blob/862b273278fc5ba6c5e05b3db0dff2a37a061f1d/TestModule.py#L27
https://github.com/junsang7777/VOS-VFI/blob/862b273278fc5ba6c5e05b3db0dff2a37a061f1d/TestModule.py#L55
https://github.com/junsang7777/VOS-VFI/blob/862b273278fc5ba6c5e05b3db0dff2a37a061f1d/TestModule.py#L92
https://github.com/junsang7777/VOS-VFI/blob/862b273278fc5ba6c5e05b3db0dff2a37a061f1d/TestModule.py#L129
https://github.com/junsang7777/VOS-VFI/blob/862b273278fc5ba6c5e05b3db0dff2a37a061f1d/interpolate_twoframe.py#L66
https://github.com/junsang7777/VOS-VFI/blob/862b273278fc5ba6c5e05b3db0dff2a37a061f1d/interpolate_video_folder+accuracy_example.py#L144
https://github.com/junsang7777/VOS-VFI/blob/862b273278fc5ba6c5e05b3db0dff2a37a061f1d/interpolate_video_folder+accuracy_example.py#L145
https://github.com/junsang7777/VOS-VFI/blob/862b273278fc5ba6c5e05b3db0dff2a37a061f1d/interpolate_video_folder+accuracy_example.py#L160
https://github.com/junsang7777/VOS-VFI/blob/862b273278fc5ba6c5e05b3db0dff2a37a061f1d/interpolate_video_folder+accuracy_example.py#L166

===========================================================
https://github.com/YilinLiu97/FasterDIP-devil-in-upsampling
===========================================================

Found 2 times
torchvision.utils.make_grid(images_torch, nrow)
torchvision.utils.make_grid(images_torch, nrow)
https://github.com/YilinLiu97/FasterDIP-devil-in-upsampling/blob/402747e956087bd83e56176036fa202645ab91d3/DIP-Recon/core/utils/common_utils.py#L309
https://github.com/YilinLiu97/FasterDIP-devil-in-upsampling/blob/402747e956087bd83e56176036fa202645ab91d3/DIP-Recon/transformer-DIP/model_trans/utils.py#L147

==============================================
https://github.com/CXH-Research/DocShadow-SD7K
==============================================

Found 2 times
save_image(res, os.path.join(os.getcwd(), "result", test_data[2][0] + '_pred.png'))
save_image(tar, os.path.join(os.getcwd(), "result", test_data[2][0] + '_gt.png'))
https://github.com/CXH-Research/DocShadow-SD7K/blob/c354eb6b8820820944c2deb87cbc354333efa734/infer.py#L55
https://github.com/CXH-Research/DocShadow-SD7K/blob/c354eb6b8820820944c2deb87cbc354333efa734/infer.py#L56

===============================================
https://github.com/caiyuanhao1998/Retinexformer
===============================================

Found 1 times
make_grid(
                _tensor, nrow=int(math.sqrt(_tensor.size(0))),
                normalize=False)
https://github.com/caiyuanhao1998/Retinexformer/blob/f8d07ae6be84aaa93cf2f1cc1b804101fa7c9aa3/basicsr/utils/img_util.py#L72

======================================
https://github.com/AVC2-UESTC/CRAFT-SR
======================================

Found 1 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
https://github.com/AVC2-UESTC/CRAFT-SR/blob/f4f706816fdd186529fd8b7ffebfb3446be43e8d/basicsr/utils/img_util.py#L71

==================================
https://github.com/zheng980629/CUE
==================================

Found 8 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
torchvision.utils.save_image(
            gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=True, range=(-1, 1))
torchvision.utils.save_image(lq, f'tmp/lq_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
https://github.com/zheng980629/CUE/blob/23c426296f47b6d109017da4652eee5dd944c8a7/basicsr/utils/img_util.py#L73
https://github.com/zheng980629/CUE/blob/23c426296f47b6d109017da4652eee5dd944c8a7/tests/test_ffhq_dataset.py#L50
https://github.com/zheng980629/CUE/blob/23c426296f47b6d109017da4652eee5dd944c8a7/tests/test_paired_image_dataset.py#L68
https://github.com/zheng980629/CUE/blob/23c426296f47b6d109017da4652eee5dd944c8a7/tests/test_paired_image_dataset.py#L69
https://github.com/zheng980629/CUE/blob/23c426296f47b6d109017da4652eee5dd944c8a7/tests/test_reds_dataset.py#L67
https://github.com/zheng980629/CUE/blob/23c426296f47b6d109017da4652eee5dd944c8a7/tests/test_reds_dataset.py#L69
https://github.com/zheng980629/CUE/blob/23c426296f47b6d109017da4652eee5dd944c8a7/tests/test_vimeo90k_dataset.py#L63
https://github.com/zheng980629/CUE/blob/23c426296f47b6d109017da4652eee5dd944c8a7/tests/test_vimeo90k_dataset.py#L65

===========================================================
https://github.com/Jiamian-Wang/Iterative-Soft-Shrinkage-SR
===========================================================

Found 2 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
make_grid(
                _tensor, nrow=int(math.sqrt(_tensor.size(0))),
                normalize=False)
https://github.com/Jiamian-Wang/Iterative-Soft-Shrinkage-SR/blob/6e11c433afe0a9907f164d172cc4d3a556557e5f/basicsr/utils/img_util.py#L71
https://github.com/Jiamian-Wang/Iterative-Soft-Shrinkage-SR/blob/6e11c433afe0a9907f164d172cc4d3a556557e5f/restormer/basicsr/utils/img_util.py#L72

===========================================
https://github.com/SamsungLabs/graphics2raw
===========================================

Found 7 times
torchvision.utils.make_grid(torch.cat((inputs[:, 0:3, :, :], outputs_im,
                                                                  target_ims), 2), normalize=True, range=(0, 1))
torchvision.utils.make_grid(torch.cat((inputs[:, 0:3, :, :], outputs,
                                                                  targets), 2), normalize=True, range=(0, 1))
torchvision.utils.make_grid(target_ims)
torchvision.utils.make_grid(inputs)
torchvision.utils.make_grid(targets)
torchvision.utils.make_grid(inputs)
torchvision.utils.make_grid(torch.cat(images, 2), normalize=False)
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/train_illum_est.py#L225
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/train_neural_isp.py#L198
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/data_preparation/dataset_illum_est.py#L86
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/data_preparation/dataset_illum_est.py#L87
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/data_preparation/dataset_neural_isp.py#L91
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/data_preparation/dataset_neural_isp.py#L92
https://github.com/SamsungLabs/graphics2raw/blob/62041b07cc45277413389483e31d38e8ab379874/utils/torch_utils.py#L29

=======================================
https://github.com/HVision-NKU/SRFormer
=======================================

Found 8 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
torchvision.utils.save_image(
            gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=True, range=(-1, 1))
torchvision.utils.save_image(lq, f'tmp/lq_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
https://github.com/HVision-NKU/SRFormer/blob/0562f7b74b454fe830cfea9551f9ecbf5264f96e/basicsr/utils/img_util.py#L71
https://github.com/HVision-NKU/SRFormer/blob/0562f7b74b454fe830cfea9551f9ecbf5264f96e/test_scripts/test_ffhq_dataset.py#L49
https://github.com/HVision-NKU/SRFormer/blob/0562f7b74b454fe830cfea9551f9ecbf5264f96e/test_scripts/test_paired_image_dataset.py#L65
https://github.com/HVision-NKU/SRFormer/blob/0562f7b74b454fe830cfea9551f9ecbf5264f96e/test_scripts/test_paired_image_dataset.py#L66
https://github.com/HVision-NKU/SRFormer/blob/0562f7b74b454fe830cfea9551f9ecbf5264f96e/test_scripts/test_reds_dataset.py#L66
https://github.com/HVision-NKU/SRFormer/blob/0562f7b74b454fe830cfea9551f9ecbf5264f96e/test_scripts/test_reds_dataset.py#L68
https://github.com/HVision-NKU/SRFormer/blob/0562f7b74b454fe830cfea9551f9ecbf5264f96e/test_scripts/test_vimeo90k_dataset.py#L62
https://github.com/HVision-NKU/SRFormer/blob/0562f7b74b454fe830cfea9551f9ecbf5264f96e/test_scripts/test_vimeo90k_dataset.py#L64

========================================
https://github.com/NeonLeexiang/DLGSANet
========================================

Found 9 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
utils.save_image(
                sample,
                f'samples/{str(i).zfill(6)}.png',
                nrow=int(math.sqrt(args.sample)),
                normalize=True,
                range=(-1, 1),
            )
torchvision.utils.save_image(
            gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=True, range=(-1, 1))
torchvision.utils.save_image(lq, f'tmp/lq_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(
                lq[:, j, :, :, :], f'tmp/lq_{i:03d}_frame{j}.png', nrow=nrow, padding=padding, normalize=False)
torchvision.utils.save_image(gt, f'tmp/gt_{i:03d}.png', nrow=nrow, padding=padding, normalize=False)
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/basicsr/utils/img_util.py#L71
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/inference/inference_stylegan2.py#L23
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/test_scripts/test_ffhq_dataset.py#L49
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/test_scripts/test_paired_image_dataset.py#L65
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/test_scripts/test_paired_image_dataset.py#L66
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/test_scripts/test_reds_dataset.py#L66
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/test_scripts/test_reds_dataset.py#L68
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/test_scripts/test_vimeo90k_dataset.py#L62
https://github.com/NeonLeexiang/DLGSANet/blob/374f1d865f46ada9d103bf6e66e433a64b92ed13/test_scripts/test_vimeo90k_dataset.py#L64

====================================================
https://github.com/FVL2020/ICCV-2023-MB-TaylorFormer
====================================================

Found 1 times
make_grid(
                _tensor, nrow=int(math.sqrt(_tensor.size(0))),
                normalize=False)
https://github.com/FVL2020/ICCV-2023-MB-TaylorFormer/blob/e14e5dca14c17570c5e967d18163a24d6e19bb47/basicsr/utils/img_util.py#L72

================================
https://github.com/Ysz2022/NeRCo
================================

Found 1 times
torchvision.utils.make_grid(images_torch, nrow)
https://github.com/Ysz2022/NeRCo/blob/63190c82af2b07d7e9e9b6a2452a1885736dc250/utils/image_io.py#L96

=====================================
https://github.com/shangwei5/SelfDRSC
=====================================

Found 1 times
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/shangwei5/SelfDRSC/blob/3116fbb85f896f5879782f39464743e3a903b928/utils/utils_image.py#L357

===================================
https://github.com/Zj-BinXia/DiffIR
===================================

Found 3 times
make_grid(
                _tensor, nrow=int(math.sqrt(_tensor.size(0))),
                normalize=False)
make_grid(
                _tensor, nrow=int(math.sqrt(_tensor.size(0))),
                normalize=False)
make_grid(
                _tensor, nrow=int(math.sqrt(_tensor.size(0))),
                normalize=False)
https://github.com/Zj-BinXia/DiffIR/blob/6af96e0b8cd3907feb0dd812de24847ef1728149/DiffIR-RealSR/DiffIR/utils/img_util.py#L72
https://github.com/Zj-BinXia/DiffIR/blob/6af96e0b8cd3907feb0dd812de24847ef1728149/DiffIR-SRGAN/DiffIR/utils/img_util.py#L72
https://github.com/Zj-BinXia/DiffIR/blob/6af96e0b8cd3907feb0dd812de24847ef1728149/DiffIR-demotionblur/DiffIR/utils/img_util.py#L72

======================================================
https://github.com/Ephemeral182/UDR-S2Former_deraining
======================================================

Found 3 times
save_image(output1,os.path.join(output_paths,'cat_%s.png'%(name)),normalize=False)
save_image(output,os.path.join(output_paths,'%s.png'%(name)),normalize=False)
save_image(dehaze,os.path.join(savepath_dataset,'%s.png'%(name)),normalize=False)
https://github.com/Ephemeral182/UDR-S2Former_deraining/blob/82101949f7549994eaf8aac2689b5c8fc5e8e080/demo.py#L109
https://github.com/Ephemeral182/UDR-S2Former_deraining/blob/82101949f7549994eaf8aac2689b5c8fc5e8e080/demo.py#L110
https://github.com/Ephemeral182/UDR-S2Former_deraining/blob/82101949f7549994eaf8aac2689b5c8fc5e8e080/test.py#L97

================================
https://github.com/wdmwhh/MRefSR
================================

Found 1 times
make_grid(
                _tensor, nrow=int(math.sqrt(_tensor.size(0))),
                normalize=False)
https://github.com/wdmwhh/MRefSR/blob/e28a47baa0553dc51db94b2b28c7bc0e25e10204/mmsr/utils/util.py#L141

====================================
https://github.com/researchmm/VQD-SR
====================================

Found 3 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
https://github.com/researchmm/VQD-SR/blob/f02a6ce9c510600aa90fc8ee6569fae9fd45f347/taming-transformers/main.py#L237
https://github.com/researchmm/VQD-SR/blob/f02a6ce9c510600aa90fc8ee6569fae9fd45f347/taming-transformers/main.py#L244
https://github.com/researchmm/VQD-SR/blob/f02a6ce9c510600aa90fc8ee6569fae9fd45f347/taming-transformers/main.py#L257

==================================
https://github.com/sunny2109/SAFMN
==================================

Found 3 times
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
utils.save_image(
                sample,
                f'samples/{str(i).zfill(6)}.png',
                nrow=int(math.sqrt(args.sample)),
                normalize=True,
                range=(-1, 1),
            )
https://github.com/sunny2109/SAFMN/blob/daddab7b0a8327b39ebaf7a1761daf9ffe2f0362/NTIRE2023_ESR/utils/utils_image.py#L250
https://github.com/sunny2109/SAFMN/blob/daddab7b0a8327b39ebaf7a1761daf9ffe2f0362/basicsr/utils/img_util.py#L71
https://github.com/sunny2109/SAFMN/blob/daddab7b0a8327b39ebaf7a1761daf9ffe2f0362/inference/inference_stylegan2.py#L23

==========================================
https://github.com/Luciennnnnnn/DualFormer
==========================================

Found 1 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
https://github.com/Luciennnnnnn/DualFormer/blob/54d911a31a92f0d8c5afec9e0b0a6db08f1d8370/basicsr/utils/img_util.py#L71

=============================
https://github.com/Srameo/LED
=============================

Found 2 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
save_image(torch.from_numpy(rgb[None]), f'{opt["save_image"]}/{img_name}.jpg')
https://github.com/Srameo/LED/blob/75f1081c77d8addeff11d0360da1746216d45499/led/utils/img_util.py#L71
https://github.com/Srameo/LED/blob/75f1081c77d8addeff11d0360da1746216d45499/scripts/data_preparation/extract_bayer_subimages_with_metadata.py#L138

=====================================================
https://github.com/painfulloop/Fingerprinting_IR_DNNs
=====================================================

Found 2 times
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(
                _tensor, nrow=int(math.sqrt(_tensor.size(0))),
                normalize=False)
https://github.com/painfulloop/Fingerprinting_IR_DNNs/blob/79d5b1b1642573aed5b3bfee39b2ee8c0a0f1354/ModelZoo/RLFN/utils/utils_image.py#L257
https://github.com/painfulloop/Fingerprinting_IR_DNNs/blob/79d5b1b1642573aed5b3bfee39b2ee8c0a0f1354/ModelZoo/basicsr/utils/img_util.py#L72

=======================================
https://github.com/ZhexinLiang/CLIP-LIT
=======================================

Found 2 times
torchvision.utils.save_image(enhanced_image, result_path)
torchvision.utils.save_image(enhanced_image, output_path)
https://github.com/ZhexinLiang/CLIP-LIT/blob/25ed5be6086cd34d2bc1020c6088ac3f9d3a9522/test.py#L61
https://github.com/ZhexinLiang/CLIP-LIT/blob/25ed5be6086cd34d2bc1020c6088ac3f9d3a9522/test_function.py#L34

===============================================
https://github.com/Red-Fairy/ZeroShotDayNightDA
===============================================

Found 7 times
torchvision.utils.save_image(
                    darkened_img[0], 'checkpoints/'+args.experiment+'/outputs/'+str(epoch)+'_'+str(iteration)+f'-{(exp[0].item()):.2f}-{real_exp:.2f}.png')
torchvision.utils.save_image(
                    img[0], 'checkpoints/'+args.experiment+'/outputs/'+str(epoch)+'_'+str(iteration)+f'-gt-{ori_exp:.2f}.png')
torchvision.utils.save_image(
                    darkened_img[0], 'checkpoints/'+args.experiment+'/outputs/'+str(epoch)+'_'+str(iteration)+f'-{(exp[0].item()):.2f}-{real_exp:.2f}.png')
torchvision.utils.save_image(
                    img[0], 'checkpoints/'+args.experiment+'/outputs/'+str(epoch)+'_'+str(iteration)+f'-gt-{ori_exp:.2f}.png')
torchvision.utils.save_image(enhanced_image, dst_path)
torchvision.utils.save_image(
                    darkened_img[0], 'checkpoints/'+args.experiment+'/outputs/'+str(iteration)+f'-{(exp[0].item()):.2f}-{real_exp:.2f}.png')
torchvision.utils.save_image(
                    img[0], 'checkpoints/'+args.experiment+'/outputs/'+str(iteration)+f'-gt-{ori_exp:.2f}.png')
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/darkening/darken_classification.py#L76
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/darkening/darken_classification.py#L78
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/darkening/darken_segmentation.py#L82
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/darkening/darken_segmentation.py#L84
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/darkening/darken_test.py#L68
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/darkening/darken_vpr.py#L127
https://github.com/Red-Fairy/ZeroShotDayNightDA/blob/d6bdc769b861cb5979a619a8db13894f519f34ea/darkening/darken_vpr.py#L129

=======================================
https://github.com/JinyuanLiu-CV/SegMiF
=======================================

Found 7 times
torchvision.utils.save_image(inputs_ir[:2], 'input_ir_2.png')
torchvision.utils.save_image(inputs_vis[:2], 'input_vis_2.png')
torchvision.utils.save_image(inputs_mask[:2], 'input_mask_2.png')
torchvision.utils.save_image(fusion[:2], 'output_2..png')
torchvision.utils.make_grid(tensor=inputs, nrow=2)
torchvision.utils.make_grid(tensor=preds_cmap, nrow=2)
torchvision.utils.make_grid(tensor=labels_cmap, nrow=2)
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/train.py#L396
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/train.py#L397
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/train.py#L398
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/train.py#L400
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/datasets/imutils.py#L260
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/datasets/imutils.py#L266
https://github.com/JinyuanLiu-CV/SegMiF/blob/12eb8ee55e2a8db16dbffadd7b7cab69bc03bdc4/datasets/imutils.py#L271

================================
https://github.com/aharley/pips2
================================

Found 1 times
torchvision.utils.make_grid(torch.stack(rgbs_vis, dim=0), nrow=nrow)
https://github.com/aharley/pips2/blob/56de5931296d55d0d02d73674c11b575a61ccf15/utils/improc.py#L1410

====================================
https://github.com/VITA-Group/ViHGNN
====================================

Found 1 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/VITA-Group/ViHGNN/blob/c58790c803599341436ef4bdf6e24a50be439bc4/assets/train.py#L722

===============================
https://github.com/yfguo91/MPBN
===============================

Found 5 times
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(0.3*im_data+0.7*mask.expand_as(im_data))
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(0.3*im_data+0.7*mask.expand_as(im_data))
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/myutils/visualize.py#L39
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/myutils/visualize.py#L52
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/myutils/visualize.py#L67
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/myutils/visualize.py#L81
https://github.com/yfguo91/MPBN/blob/149379dc01c28a9cd44d34f173060c06d72efb37/myutils/visualize.py#L98

=======================================
https://github.com/Hwihuni/BlindHarmony
=======================================

Found 11 times
make_grid(samples, nrow=8)
save_image(samples.cpu(), output_path,
               nrow=samples_per_row,
               padding=0)
save_image(batch.cpu(), os.path.join(output_path, 'invertibility_orig.png'),
                       nrow=6,
                       padding=0)
save_image(batch_rec.cpu(), os.path.join(output_path, 'invertibility_rec.png'),
                       nrow=6,
                       padding=0)
save_image(samples.cpu(),
               'samples.png',
               nrow=samples_per_row,
               padding=0)
make_grid(samples, nrow=8)
save_image(samples.cpu(), output_path,
               nrow=samples_per_row,
               padding=0)
save_image(batch.cpu(), os.path.join(output_path, 'invertibility_orig.png'),
                       nrow=6,
                       padding=0)
save_image(batch_rec.cpu(), os.path.join(output_path, 'invertibility_rec.png'),
                       nrow=6,
                       padding=0)
save_image(samples.cpu(),
               'samples.png',
               nrow=samples_per_row,
               padding=0)
make_grid(samples.view(64, 1, 28, 28), nrow=8)
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/train_flow.py#L422
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/train_flow.py#L571
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/train_flow.py#L618
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/train_flow.py#L622
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/train_flow.py#L655
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/images.py#L420
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/images.py#L569
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/images.py#L616
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/images.py#L620
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/images.py#L653
https://github.com/Hwihuni/BlindHarmony/blob/aacea028dfb408579a2a9dcbf532b775ce9e0248/experiments/vae_.py#L478

=======================================
https://github.com/longzilicart/GloReDi
=======================================

Found 3 times
save_image(value, save_path, normalize=False)
torchvision.utils.make_grid(value, normalize=True)
torchvision.utils.save_image(ct_image, path, **kwargs)
https://github.com/longzilicart/GloReDi/blob/b412caeed27075bb8b79110bdd9da17b905f6e4d/Sparse_tester.py#L170
https://github.com/longzilicart/GloReDi/blob/b412caeed27075bb8b79110bdd9da17b905f6e4d/src/Logger/longzili_logger.py#L180
https://github.com/longzilicart/GloReDi/blob/b412caeed27075bb8b79110bdd9da17b905f6e4d/src/utils/ct_tools.py#L50

==============================================================
https://github.com/dddraxxx/Medical-Reg-with-Volume-Preserving
==============================================================

Found 2 times
make_grid(img_s, nrow=width, padding=5, pad_value=1, normalize=True)
save_image(img_f, save_name)
https://github.com/dddraxxx/Medical-Reg-with-Volume-Preserving/blob/6067a7f9e901c71a05b02e56df3b33aa52177e6a/tools/utils.py#L91
https://github.com/dddraxxx/Medical-Reg-with-Volume-Preserving/blob/6067a7f9e901c71a05b02e56df3b33aa52177e6a/tools/utils.py#L93

======================================
https://github.com/lpcccc-cv/MC-VarNet
======================================

Found 1 times
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/lpcccc-cv/MC-VarNet/blob/079031dfbd888dc32fa451e55a803d6b0b27cf95/utils/util.py#L118

=============================================
https://github.com/qianduoduolr/Spa-then-Temp
=============================================

Found 6 times
make_grid(
                _tensor, nrow=int(math.sqrt(_tensor.size(0))),
                normalize=False)
save_image(
            img_cat,
            osp.join(self.output_dir, filename),
            nrow=self.nrow,
            padding=self.padding)
make_grid(tensor, nrow=int(n_img), normalize=False)
https://github.com/qianduoduolr/Spa-then-Temp/blob/4c943628aae9b5afe4cc15eefc8a0eb800736515/vcl/core/misc.py#L56
https://github.com/qianduoduolr/Spa-then-Temp/blob/4c943628aae9b5afe4cc15eefc8a0eb800736515/vcl/core/hooks/visualization.py#L81
https://github.com/qianduoduolr/Spa-then-Temp/blob/4c943628aae9b5afe4cc15eefc8a0eb800736515/vcl/utils/util.py#L45

==================================
https://github.com/microsoft/Cream
==================================

Found 4 times
torchvision.utils.save_image(
                        input, os.path.join(
                            output_dir, 'train-batch-%d.jpg' %
                            batch_idx), padding=0, normalize=True)
torchvision.utils.save_image(
                        input, os.path.join(
                            output_dir, 'train-batch-%d.jpg' %
                            batch_idx), padding=0, normalize=True)
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/Cream/lib/core/retrain.py#L109
https://github.com/microsoft/Cream/blob/4a13c4091e78f9abd2160e7e01c02e48c1cf8fb9/Cream/lib/core/train.py#L122

=================================
https://github.com/mshukor/eP-ALM
=================================

Found 1 times
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
https://github.com/mshukor/eP-ALM/blob/9ecfeb9acf9a128ab9b6b72e0a68bf8918d47833/TimeSformer/timesformer/visualization/tensorboard_vis.py#L401

===============================
https://github.com/fawnliu/TRIS
===============================

Found 3 times
make_grid(x.unsqueeze(0), nrow=1, padding=0, pad_value=0,
                     normalize=True, range=None)
utils.save_image(images, 'images/{}/{}/epoch-{}-{}-pri.jpg'.format(experiments, phase, epoch, cnt), nrow=n,
                     normalize=True)
utils.make_grid(images[i].unsqueeze(0), nrow=1, padding=0, pad_value=0,
                         normalize=True, range=None)
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/IRNet/imutils.py#L43
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/IRNet/utils.py#L373
https://github.com/fawnliu/TRIS/blob/d085dcba70bdd0fe0946871f825df5cfef98377c/IRNet/utils.py#L408

================================
https://github.com/md4all/md4all
================================

Found 10 times
save_image(img_translated, os.path.join(output_dir, f"{img_name}_{model_name}.{img_extension}"))
save_image(color, os.path.join(out_dir, f"static/{timestamp_triplet[1]}.png"))
save_image(color_prev, os.path.join(out_dir, f"static/{timestamp_triplet[0]}.png"))
save_image(color_next, os.path.join(out_dir, f"static/{timestamp_triplet[2]}.png"))
save_image(color, os.path.join(out_dir, f"overexposed/{timestamp_triplet[1]}.png"))
save_image(color_prev, os.path.join(out_dir, f"overexposed/{timestamp_triplet[0]}.png"))
save_image(color_next, os.path.join(out_dir, f"overexposed/{timestamp_triplet[2]}.png"))
save_image(AB, image_path)
save_image(depth, filename)
save_image(img_rgb, os.path.join(self.evaluation_qualitative_res_path, f"{filename}.jpg"))
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/translate_simple.py#L95
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/robotcar/filter_overexposed_static_images.py#L48
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/robotcar/filter_overexposed_static_images.py#L49
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/robotcar/filter_overexposed_static_images.py#L50
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/robotcar/filter_overexposed_static_images.py#L55
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/robotcar/filter_overexposed_static_images.py#L56
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/data/robotcar/filter_overexposed_static_images.py#L57
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/models/ForkGAN/util/util.py#L85
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/utils/depth.py#L59
https://github.com/md4all/md4all/blob/1cb9300fc08d4a44d1f1d8faea96f0d4ca5bb1dc/visualization/visualize.py#L24

===================================
https://github.com/xiyuez2/MapPrior
===================================

Found 4 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
https://github.com/xiyuez2/MapPrior/blob/c4285f783bd582d0c934c4314e5306eb73557af1/scripts/train_autoencoder.py#L261
https://github.com/xiyuez2/MapPrior/blob/c4285f783bd582d0c934c4314e5306eb73557af1/scripts/train_autoencoder.py#L274
https://github.com/xiyuez2/MapPrior/blob/c4285f783bd582d0c934c4314e5306eb73557af1/scripts/transformer.py#L323
https://github.com/xiyuez2/MapPrior/blob/c4285f783bd582d0c934c4314e5306eb73557af1/scripts/transformer.py#L337

=============================
https://github.com/hustvl/VAD
=============================

Found 2 times
make_grid(tensor, pad_value=pad_value, normalize=False)
torchvision.utils.save_image(torch.tensor(tensor).permute(2, 0, 1), path)
https://github.com/hustvl/VAD/blob/1ede800a517653837faf78b5ec1c3b5fc3ec77b5/projects/mmdet3d_plugin/models/utils/visual.py#L22
https://github.com/hustvl/VAD/blob/1ede800a517653837faf78b5ec1c3b5fc3ec77b5/projects/mmdet3d_plugin/models/utils/visual.py#L23

=====================================================================
https://github.com/YaoChengTang/Sparse-Point-Guided-3D-Lane-Detection
=====================================================================

Found 1 times
save_image(vis_img[batch_idx], path)
https://github.com/YaoChengTang/Sparse-Point-Guided-3D-Lane-Detection/blob/be90159f66936d29e330e680aed834c0fec81800/experiments/runner.py#L938

======================================
https://github.com/OpenDriveLab/OccNet
======================================

Found 2 times
make_grid(tensor, pad_value=pad_value, normalize=False)
torchvision.utils.save_image(torch.tensor(tensor).permute(2, 0, 1), path)
https://github.com/OpenDriveLab/OccNet/blob/ce83e8a46978430be609d231165bb93f84e4a56b/projects/mmdet3d_plugin/models/utils/visual.py#L22
https://github.com/OpenDriveLab/OccNet/blob/ce83e8a46978430be609d231165bb93f84e4a56b/projects/mmdet3d_plugin/models/utils/visual.py#L23

=============================================
https://github.com/AIRI-Institute/StyleDomain
=============================================

Found 4 times
make_grid(torch_image, value_range=(-1, 1), normalize=True, **kwargs)
make_grid(torch_image, value_range=(-1, 1), normalize=True, **kwargs)
utils.save_image(img_concat, name + '.png', nrow=n_sample, normalize=True, range=(-1, 1))
utils.save_image(
        img_concat, name + ".png", nrow=n_sample, normalize=True, range=(-1, 1)
    )
https://github.com/AIRI-Institute/StyleDomain/blob/44b8370c90df25754ec01e1f880ca02b502e3bce/SimilarDomains/core/utils/example_utils.py#L188
https://github.com/AIRI-Institute/StyleDomain/blob/44b8370c90df25754ec01e1f880ca02b502e3bce/SimilarDomains/core/utils/.ipynb_checkpoints/example_utils-checkpoint.py#L188
https://github.com/AIRI-Institute/StyleDomain/blob/44b8370c90df25754ec01e1f880ca02b502e3bce/SimilarDomains/gan_models/StyleGAN2/convert_weight.py#L256
https://github.com/AIRI-Institute/StyleDomain/blob/44b8370c90df25754ec01e1f880ca02b502e3bce/SimilarDomains/gan_models/StyleGAN2/prop_convert.py#L299

===========================================================
https://github.com/jcui1224/hierarchical-representation-ebm
===========================================================

Found 1 times
vutils.save_image(x, path, normalize=True, nrow=nrow)
https://github.com/jcui1224/hierarchical-representation-ebm/blob/5c261824a35311ea42b093f1064ecf75de5b2f2f/utils.py#L11

====================================
https://github.com/Shilin-LU/TF-ICON
====================================

Found 6 times
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/Shilin-LU/TF-ICON/blob/324cf786aa12e9ebb4c180990033507fe8422932/ldm/models/diffusion/ddpm.py#L471
https://github.com/Shilin-LU/TF-ICON/blob/324cf786aa12e9ebb4c180990033507fe8422932/ldm/models/diffusion/ddpm.py#L650
https://github.com/Shilin-LU/TF-ICON/blob/324cf786aa12e9ebb4c180990033507fe8422932/ldm/models/diffusion/ddpm.py#L1200
https://github.com/Shilin-LU/TF-ICON/blob/324cf786aa12e9ebb4c180990033507fe8422932/ldm/models/diffusion/ddpm.py#L1438
https://github.com/Shilin-LU/TF-ICON/blob/324cf786aa12e9ebb4c180990033507fe8422932/ldm/models/diffusion/ddpm.py#L1600
https://github.com/Shilin-LU/TF-ICON/blob/324cf786aa12e9ebb4c180990033507fe8422932/ldm/modules/image_degradation/utils_image.py#L353

====================================
https://github.com/JeffreyXiang/ivid
====================================

Found 21 times
utils.save_image(all_images[:, :3], os.path.join(self.output_dir, 'samples', f'rgb_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(all_images[:, 3:], os.path.join(self.output_dir, 'samples', f'depth_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(data['mask'][:, :1], os.path.join(self.output_dir, 'samples', f'mask_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(0, 1))
utils.save_image(data['x_0'][:, :3], os.path.join(self.output_dir, 'samples', f'rgb_gt_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(data['y'][:, :3], os.path.join(self.output_dir, 'samples', f'rgb_cond_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(all_images[:, :3], os.path.join(self.output_dir, 'samples', f'rgb_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(data['x_0'][:, 3:], os.path.join(self.output_dir, 'samples', f'depth_gt_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(data['y'][:, 3:], os.path.join(self.output_dir, 'samples', f'depth_cond_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(all_images[:, 3:], os.path.join(self.output_dir, 'samples', f'depth_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(data['mask_rgb'][:, :1], os.path.join(self.output_dir, 'samples', f'mask_rgb_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(0, 1))
utils.save_image(data['x_0'][:, :3], os.path.join(self.output_dir, 'samples', f'rgb_gt_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(data['y'][:, :3], os.path.join(self.output_dir, 'samples', f'rgb_cond_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(all_images[:, :3], os.path.join(self.output_dir, 'samples', f'rgb_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(data['x_0'][:, 3:], os.path.join(self.output_dir, 'samples', f'depth_gt_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(data['y'][:, 3:], os.path.join(self.output_dir, 'samples', f'depth_cond_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(all_images[:, 3:], os.path.join(self.output_dir, 'samples', f'depth_{suffix}.png'), nrow=int(np.sqrt(num_samples)), normalize=True, value_range=(-1, 1))
utils.save_image(samples[:, :3], os.path.join(cfg.output_dir, 'grids', f'rgb_{suffix}.png'), nrow=2, normalize=True, value_range=(-1, 1))
utils.save_image(reorder(samples[:, :3], cfg.viewset), os.path.join(cfg.output_dir, 'grids', f'rgb_{suffix}.png'), nrow=9, normalize=True, value_range=(-1, 1))
utils.save_image(reorder(colorize_depth(samples[:, 3:]), cfg.viewset), os.path.join(cfg.output_dir, 'grids', f'depth_{suffix}.png'), nrow=9, normalize=True, value_range=(-1, 1))
utils.save_image(reorder(conds['color'][:, :3], cfg.viewset), os.path.join(cfg.output_dir, 'conds', f'rgb_cond_{suffix}.png'), nrow=9, normalize=True, value_range=(-1, 1))
utils.save_image(reorder(colorize_depth(conds['depth']), cfg.viewset), os.path.join(cfg.output_dir, 'conds', f'depth_cond_{suffix}.png'), nrow=9, normalize=True, value_range=(-1, 1))
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/basic.py#L279
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/basic.py#L281
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/inpaint.py#L128
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/inpaint.py#L129
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/inpaint.py#L130
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/inpaint.py#L131
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/inpaint.py#L132
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/inpaint.py#L133
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/inpaint.py#L134
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/inpaint.py#L136
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/superres.py#L128
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/superres.py#L129
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/superres.py#L130
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/superres.py#L131
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/superres.py#L132
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/diffusion/trainers/superres.py#L133
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/inference/sample.py#L158
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/inference/sample.py#L162
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/inference/sample.py#L163
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/inference/sample.py#L164
https://github.com/JeffreyXiang/ivid/blob/98da20c033977b1c73047766388b1658523ac5c2/inference/sample.py#L165

================================================
https://github.com/sjtuplayer/few-shot-diffusion
================================================

Found 6 times
save_image(torch.cat([imgs,mid_imgages[imgs.size(0)*2:imgs.size(0)*3]],dim=0),os.path.join(opts.save_path,"%d.png"%batch_idx),nrow=imgs.size(0))
save_image(mid_imgages, os.path.join(opts.save_path, "%d-mid.png" % batch_idx),nrow=imgs.size(0))
save_image(torch.cat([condition,noises,output_image_cond],dim=0),os.path.join(output_dir,'images/%d.png'%global_step),nrow=batch_size)
save_image(torch.cat((real_image, noises, sampled_middle_images, sampled_images), dim=0),
                       os.path.join(save_dir, 'images/%d-sample.jpg' % global_step), nrow=batch_size, normalize=False)
utils.save_image(all_images, str(self.results_folder / f'sample-{milestone}.png'), nrow = int(math.sqrt(self.num_samples)))
utils.save_image(all_images, str(self.results_folder / f'sample-{milestone}.png'), nrow = int(math.sqrt(self.num_samples)))
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/generate.py#L69
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/generate.py#L70
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/train-recon.py#L80
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/train-whole.py#L201
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/unet.py#L1202
https://github.com/sjtuplayer/few-shot-diffusion/blob/e67e64e4aaf34d656d447e53b4fd598f6e31a3e0/model/unet.py#L1027

=========================================
https://github.com/rohitgandikota/erasing
=========================================

Found 6 times
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/rohitgandikota/erasing/blob/a2189e9ae677aca22a00c361bde25d3d320d8a61/ldm/models/diffusion/ddpm.py#L437
https://github.com/rohitgandikota/erasing/blob/a2189e9ae677aca22a00c361bde25d3d320d8a61/ldm/models/diffusion/ddpm.py#L604
https://github.com/rohitgandikota/erasing/blob/a2189e9ae677aca22a00c361bde25d3d320d8a61/ldm/models/diffusion/ddpm.py#L1356
https://github.com/rohitgandikota/erasing/blob/a2189e9ae677aca22a00c361bde25d3d320d8a61/ldm/models/diffusion/ddpm.py#L1596
https://github.com/rohitgandikota/erasing/blob/a2189e9ae677aca22a00c361bde25d3d320d8a61/ldm/models/diffusion/ddpm.py#L1783
https://github.com/rohitgandikota/erasing/blob/a2189e9ae677aca22a00c361bde25d3d320d8a61/ldm/modules/image_degradation/utils_image.py#L353

================================
https://github.com/jiangyzy/GOAE
================================

Found 4 times
torchvision.utils.save_image(torch.cat([real_img, rec_img]), os.path.join(save_dir, f'rec_img.jpg'), 
                                        padding=0, normalize=True, range=(-1,1))
torchvision.utils.save_image(torch.cat(imgs_multi_view), os.path.join(save_dir, f'multi_view.jpg'), 
                                        padding=0, normalize=True, range=(-1,1))
torchvision.utils.save_image(torch.cat([real_img, edit_img]), os.path.join(save_dir, f'edit_img_{opts.edit_attr}_{opts.alpha}.jpg'), 
                                            padding=0, normalize=True, range=(-1,1))
torchvision.utils.save_image(torch.cat(imgs_multi_view), os.path.join(save_dir, f'multi_view_edit_{opts.edit_attr}_{opts.alpha}.jpg'), 
                                            padding=0, normalize=True, range=(-1,1))
https://github.com/jiangyzy/GOAE/blob/7886952f11007a77d2e4daec3788940dea0d8cc8/goae/infer.py#L73
https://github.com/jiangyzy/GOAE/blob/7886952f11007a77d2e4daec3788940dea0d8cc8/goae/infer.py#L88
https://github.com/jiangyzy/GOAE/blob/7886952f11007a77d2e4daec3788940dea0d8cc8/goae/infer.py#L118
https://github.com/jiangyzy/GOAE/blob/7886952f11007a77d2e4daec3788940dea0d8cc8/goae/infer.py#L133

================================
https://github.com/wanboyan/SOCS
================================

Found 5 times
vutils.make_grid(img, nrow=n_col)
vutils.make_grid(torch.from_numpy(image), nrow=col)
vutils.make_grid(images)
vutils.make_grid(img, nrow=n_col)
vutils.make_grid(torch.from_numpy(image), nrow=col)
https://github.com/wanboyan/SOCS/blob/70ad17a70129caa69a4fdc9b6c7995a96b063c54/SOCS/nnutils/image_utils.py#L182
https://github.com/wanboyan/SOCS/blob/70ad17a70129caa69a4fdc9b6c7995a96b063c54/SOCS/nnutils/image_utils.py#L305
https://github.com/wanboyan/SOCS/blob/70ad17a70129caa69a4fdc9b6c7995a96b063c54/SOCS/nnutils/logger.py#L50
https://github.com/wanboyan/SOCS/blob/70ad17a70129caa69a4fdc9b6c7995a96b063c54/SOCS/tools/image_utils.py#L182
https://github.com/wanboyan/SOCS/blob/70ad17a70129caa69a4fdc9b6c7995a96b063c54/SOCS/tools/image_utils.py#L305

==========================================
https://github.com/YangHai-1218/PseudoFlow
==========================================

Found 2 times
save_image(teacher_epe[:, None]/10, 'debug_epe.png')
save_image(mv_flow_var[:, None], 'debug_var.png')
https://github.com/YangHai-1218/PseudoFlow/blob/69e8e7ad11a2a58f06532cc5b89b76300d83613b/models/refiner/raft_refiner_flow_mvcpseudolabel.py#L219
https://github.com/YangHai-1218/PseudoFlow/blob/69e8e7ad11a2a58f06532cc5b89b76300d83613b/models/refiner/raft_refiner_flow_mvcpseudolabel.py#L220

==========================================
https://github.com/rozumden/tracking-by-3d
==========================================

Found 11 times
save_image(modelled_renders[0],os.path.join(tmp_folder,name),nrow=nrow)
save_image(renders[0,frmi,ki].clone(), os.path.join(folder, 'latent{:04d}.png'.format(int(ti*100))))
save_image(texture_maps[:,:3], os.path.join(self.write_folder,'tex_deep.png'))
save_image(tex, os.path.join(self.write_folder,'tex.png'))
save_image(seg, os.path.join(self.write_folder, 'imgs', 's{}.png'.format(tmpi)))
save_image(img, os.path.join(self.write_folder, 'imgs', 'i{}.png'.format(tmpi)))
save_image(track6d.images_feat[0,tmpi,:3,b0[0]:b0[1],b0[2]:b0[3]], os.path.join(self.write_folder, 'imgs', 'if{}.png'.format(tmpi)))
save_image(torch.cat((img,seg),0), os.path.join(self.write_folder, 'imgs', 'is{}.png'.format(tmpi)))
save_image(renders_crop[0,tmpi,0,[3,3,3]], os.path.join(self.write_folder, 'imgs', 'm{}.png'.format(tmpi)))
save_image(renders_crop[0,tmpi,0,:], os.path.join(self.write_folder, 'imgs', 'r{}.png'.format(tmpi)))
save_image(feat_renders_crop[0,tmpi,0,:], os.path.join(self.write_folder, 'imgs', 'f{}.png'.format(tmpi)))
https://github.com/rozumden/tracking-by-3d/blob/edbf484e1bbdf1b1acbb23d2d1b233b7c739e9cf/helpers/torch_helpers.py#L34
https://github.com/rozumden/tracking-by-3d/blob/edbf484e1bbdf1b1acbb23d2d1b233b7c739e9cf/helpers/torch_helpers.py#L116
https://github.com/rozumden/tracking-by-3d/blob/edbf484e1bbdf1b1acbb23d2d1b233b7c739e9cf/helpers/write_results.py#L48
https://github.com/rozumden/tracking-by-3d/blob/edbf484e1bbdf1b1acbb23d2d1b233b7c739e9cf/helpers/write_results.py#L49
https://github.com/rozumden/tracking-by-3d/blob/edbf484e1bbdf1b1acbb23d2d1b233b7c739e9cf/helpers/write_results.py#L56
https://github.com/rozumden/tracking-by-3d/blob/edbf484e1bbdf1b1acbb23d2d1b233b7c739e9cf/helpers/write_results.py#L58
https://github.com/rozumden/tracking-by-3d/blob/edbf484e1bbdf1b1acbb23d2d1b233b7c739e9cf/helpers/write_results.py#L59
https://github.com/rozumden/tracking-by-3d/blob/edbf484e1bbdf1b1acbb23d2d1b233b7c739e9cf/helpers/write_results.py#L60
https://github.com/rozumden/tracking-by-3d/blob/edbf484e1bbdf1b1acbb23d2d1b233b7c739e9cf/helpers/write_results.py#L61
https://github.com/rozumden/tracking-by-3d/blob/edbf484e1bbdf1b1acbb23d2d1b233b7c739e9cf/helpers/write_results.py#L62
https://github.com/rozumden/tracking-by-3d/blob/edbf484e1bbdf1b1acbb23d2d1b233b7c739e9cf/helpers/write_results.py#L63

==========================================
https://github.com/humansensinglab/ITI-GEN
==========================================

Found 1 times
make_grid(grid, nrow=n_rows)
https://github.com/humansensinglab/ITI-GEN/blob/e80df449d3d94c8dc32385eea4087694ad0bf03d/generation.py#L353

=====================================
https://github.com/cure-lab/DiffGuard
=====================================

Found 8 times
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
torchvision.utils.save_image(
                    _inter_ddim * 0.5 + 0.5, f"add_noise{i}.png")
torchvision.utils.save_image(
                    _inter_ddim * 0.5 + 0.5, f"denoise{i}.png")
torchvision.utils.save_image(minus_1_1_to_01(image), ori_path)
torchvision.utils.save_image(minus_1_1_to_01(recon), recon_path)
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/ldm/models/diffusion/ddpm.py#L377
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/ldm/models/diffusion/ddpm.py#L542
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/ldm/models/diffusion/ddpm.py#L1309
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/ood_tester/latent_diffusion_model.py#L142
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/ood_tester/latent_diffusion_model.py#L166
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/ood_tester/test_runner.py#L378
https://github.com/cure-lab/DiffGuard/blob/6125295e336148baab78f435ef2f988ad1e2a534/ood_tester/test_runner.py#L379

========================================
https://github.com/OpenGVLab/UniFormerV2
========================================

Found 1 times
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
https://github.com/OpenGVLab/UniFormerV2/blob/722a43440fc5b9662cc2a8f23b86caa205e45ebc/slowfast/visualization/tensorboard_vis.py#L405

=================================
https://github.com/sooperset/boss
=================================

Found 5 times
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(0.3*im_data+0.7*mask.expand_as(im_data))
torchvision.utils.make_grid(images)
torchvision.utils.make_grid(0.3*im_data+0.7*mask.expand_as(im_data))
https://github.com/sooperset/boss/blob/deabe60fd19a7cf2d2f88b7287187af3bc76fd62/utils/visualize.py#L39
https://github.com/sooperset/boss/blob/deabe60fd19a7cf2d2f88b7287187af3bc76fd62/utils/visualize.py#L52
https://github.com/sooperset/boss/blob/deabe60fd19a7cf2d2f88b7287187af3bc76fd62/utils/visualize.py#L67
https://github.com/sooperset/boss/blob/deabe60fd19a7cf2d2f88b7287187af3bc76fd62/utils/visualize.py#L81
https://github.com/sooperset/boss/blob/deabe60fd19a7cf2d2f88b7287187af3bc76fd62/utils/visualize.py#L98

=====================================
https://github.com/alibaba/easyrobust
=====================================

Found 50 times
torchvision.utils.save_image(out, name_path)
tv.utils.make_grid(samples, normalize=True)
save_image(output_tiled, eval_args.save + '/vae_samples.png')
torchvision.utils.save_image(img, path)
save_image(gradient, path_to_file)
save_image(heatmap, path_to_file)
save_image(heatmap_on_image, path_to_file)
save_image(activation_map, path_to_file)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
utils.make_grid(tensor, nrow=nrow, normalize=True, padding=padding)
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/attack.py#L422
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/sde.py#L89
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/LSGM/evaluate_vae.py#L100
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/dmmia_inversion/utils/stylegan.py#L44
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/vis_tools/misc_functions.py#L52
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/vis_tools/misc_functions.py#L70
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/vis_tools/misc_functions.py#L73
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/attacks/inequality/vis_tools/misc_functions.py#L76
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/base_training_script.py#L762
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/resnet50.py#L730
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/SIN/main.py#L730
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/adversarial_training/main.py#L839
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/advprop/main.py#L767
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/apr/main.py#L736
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/augmix/main.py#L764
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/dat/main.py#L807
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/deepaugment/main.py#L730
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/drvit/main.py#L763
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/fan/main.py#L763
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/hat/main.py#L788
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/prime/main.py#L737
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/rvt/main.py#L763
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/shape_texture_debiased_training/main.py#L780
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/examples/imageclassification/imagenet/wiseft/main.py#L750
https://github.com/alibaba/easyrobust/blob/71262215c368fd21cfd1476c8fa3ec4ece53459a/tools/kernal_visualization.py#L32

========================================================
https://github.com/IDEA-Research/3D-deformable-attention
========================================================

Found 2 times
make_grid(tensor, pad_value=pad_value, normalize=False)
torchvision.utils.save_image(torch.tensor(tensor).permute(2, 0, 1), path)
https://github.com/IDEA-Research/3D-deformable-attention/blob/91165eb0c11dc98e554250ecf7b40ad3decad86c/BEVFormer_DFA3D/projects/mmdet3d_plugin/models/utils/visual.py#L22
https://github.com/IDEA-Research/3D-deformable-attention/blob/91165eb0c11dc98e554250ecf7b40ad3decad86c/BEVFormer_DFA3D/projects/mmdet3d_plugin/models/utils/visual.py#L23

===================================
https://github.com/Loco-Roco/DiffAD
===================================

Found 7 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
torchvision.utils.make_grid(image_batch)
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/rec_network/main.py#L312
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/rec_network/main.py#L342
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/rec_network/models/diffusion/ddpm.py#L374
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/rec_network/models/diffusion/ddpm.py#L539
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/rec_network/models/diffusion/ddpm.py#L1313
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/rec_network/modules/image_degradation/utils_image.py#L353
https://github.com/Loco-Roco/DiffAD/blob/0edeac9cfb09801f78faa46bc30c4bbe1498d50f/seg_network/tensorboard_visualizer.py#L16

===================================
https://github.com/cskkxjk/MonoNeRD
===================================

Found 8 times
torchvision.utils.make_grid(val)
torchvision.utils.make_grid(val)
torchvision.utils.make_grid(val)
torchvision.utils.make_grid(val)
torchvision.utils.make_grid(val)
torchvision.utils.make_grid(val)
torchvision.utils.make_grid(val)
torchvision.utils.make_grid(val)
https://github.com/cskkxjk/MonoNeRD/blob/f6491a283932117718081c1d5239177bd1a9f503/tools/train_utils/train_utils.py#L78
https://github.com/cskkxjk/MonoNeRD/blob/f6491a283932117718081c1d5239177bd1a9f503/tools/train_utils/train_utils.py#L82
https://github.com/cskkxjk/MonoNeRD/blob/f6491a283932117718081c1d5239177bd1a9f503/tools/train_utils/train_utils.py#L86
https://github.com/cskkxjk/MonoNeRD/blob/f6491a283932117718081c1d5239177bd1a9f503/tools/train_utils/train_utils.py#L90
https://github.com/cskkxjk/MonoNeRD/blob/f6491a283932117718081c1d5239177bd1a9f503/tools/train_utils/train_utils.py#L94
https://github.com/cskkxjk/MonoNeRD/blob/f6491a283932117718081c1d5239177bd1a9f503/tools/train_utils/train_utils.py#L98
https://github.com/cskkxjk/MonoNeRD/blob/f6491a283932117718081c1d5239177bd1a9f503/tools/train_utils/train_utils.py#L102
https://github.com/cskkxjk/MonoNeRD/blob/f6491a283932117718081c1d5239177bd1a9f503/tools/train_utils/train_utils.py#L106

=====================================
https://github.com/liming-ai/AlignDet
=====================================

Found 3 times
torchvision.utils.make_grid(feat, normalize=True, scale_each=True, nrow=16, pad_value=255)
torchvision.utils.make_grid(feat, normalize=True, scale_each=True, nrow=16, pad_value=255)
torchvision.utils.make_grid(feat, normalize=True, scale_each=True, nrow=16, pad_value=255)
https://github.com/liming-ai/AlignDet/blob/d29f70ba9996dbdef6d49b1fe69f2a2880ee5c79/tools/analysis_tools/visualize_featmap.py#L107
https://github.com/liming-ai/AlignDet/blob/d29f70ba9996dbdef6d49b1fe69f2a2880ee5c79/tools/analysis_tools/visualize_featmap.py#L131
https://github.com/liming-ai/AlignDet/blob/d29f70ba9996dbdef6d49b1fe69f2a2880ee5c79/tools/analysis_tools/visualize_featmap.py#L157

================================
https://github.com/NVlabs/FB-BEV
================================

Found 8 times
make_grid(tensor, pad_value=pad_value, normalize=normalize)
torchvision.utils.save_image(torch.tensor(tensor).permute(2, 0, 1), path)
make_grid(tensor, pad_value=pad_value, normalize=normalize)
torchvision.utils.save_image(torch.tensor(tensor).permute(2, 0, 1), path)
make_grid(tensor, pad_value=pad_value, normalize=normalize)
torchvision.utils.save_image(torch.tensor(tensor).permute(2, 0, 1), path)
make_grid(tensor, pad_value=pad_value, normalize=normalize)
torchvision.utils.save_image(torch.tensor(tensor).permute(2, 0, 1), path)
https://github.com/NVlabs/FB-BEV/blob/832bd81866823a913a4c69552e1ca61ae34ac211/mmdet3d/models/detectors/bevdet.py#L35
https://github.com/NVlabs/FB-BEV/blob/832bd81866823a913a4c69552e1ca61ae34ac211/mmdet3d/models/detectors/bevdet.py#L36
https://github.com/NVlabs/FB-BEV/blob/832bd81866823a913a4c69552e1ca61ae34ac211/mmdet3d/models/fbbev/modules/depth_net.py#L42
https://github.com/NVlabs/FB-BEV/blob/832bd81866823a913a4c69552e1ca61ae34ac211/mmdet3d/models/fbbev/modules/depth_net.py#L43
https://github.com/NVlabs/FB-BEV/blob/832bd81866823a913a4c69552e1ca61ae34ac211/mmdet3d/models/fbbev/utils/bricks.py#L25
https://github.com/NVlabs/FB-BEV/blob/832bd81866823a913a4c69552e1ca61ae34ac211/mmdet3d/models/fbbev/utils/bricks.py#L26
https://github.com/NVlabs/FB-BEV/blob/832bd81866823a913a4c69552e1ca61ae34ac211/tools/analysis_tools/generate_mask_based_on_lidar_points.py#L38
https://github.com/NVlabs/FB-BEV/blob/832bd81866823a913a4c69552e1ca61ae34ac211/tools/analysis_tools/generate_mask_based_on_lidar_points.py#L39

==============================
https://github.com/qqlu/Entity
==============================

Found 1 times
torchvision.utils.save_image(a[inv_idx].float(), '%s_tensor_%d.jpg'%(prex, iteration), normalize=True)
https://github.com/qqlu/Entity/blob/6e7e13ac91ef508088e1b848167c01f19b00b512/Entity/EntitySegRLE/entityseg/data/augmentations/vis.py#L17

==============================
https://github.com/kampta/asic
==============================

Found 12 times
save_image(sparse_corrs, fname, normalize=True, padding=2, pad_value=1)
save_image(torch.cat([dense_corrs, img1_warped]), fname,
                       normalize=True, padding=2, pad_value=1)
save_image(torch.cat([dense_corrs, img2_warped]), fname,
                       normalize=True, padding=2, pad_value=1)
make_grid(images, **grid_kwargs)
save_image(all_masks, 'test_mask.png', normalize=True)
save_image(out, 'test.png', normalize=True)
save_image(all_masks_transform, 'test_mask_perspective.png', normalize=True)
save_image(out, 'test_perspective.png', normalize=True)
save_image(all_imgs_transform, 'test_tps.png', normalize=True)
save_image(all_masks_transform, 'test_mask_tps.png', normalize=True)
save_image([colormap.permute(2, 0, 1)], 'colorwheel_fast.png')
save_image([colormap.permute(2, 0, 1)], 'colorwheel_fast_fixed.png')
https://github.com/kampta/asic/blob/7124b93b53280dc9da72807605e50338b50b2895/prepare_data.py#L209
https://github.com/kampta/asic/blob/7124b93b53280dc9da72807605e50338b50b2895/prepare_data.py#L315
https://github.com/kampta/asic/blob/7124b93b53280dc9da72807605e50338b50b2895/prepare_data.py#L337
https://github.com/kampta/asic/blob/7124b93b53280dc9da72807605e50338b50b2895/commons/utils.py#L55
https://github.com/kampta/asic/blob/7124b93b53280dc9da72807605e50338b50b2895/datasets/spair.py#L199
https://github.com/kampta/asic/blob/7124b93b53280dc9da72807605e50338b50b2895/datasets/spair.py#L203
https://github.com/kampta/asic/blob/7124b93b53280dc9da72807605e50338b50b2895/datasets/spair.py#L212
https://github.com/kampta/asic/blob/7124b93b53280dc9da72807605e50338b50b2895/datasets/spair.py#L218
https://github.com/kampta/asic/blob/7124b93b53280dc9da72807605e50338b50b2895/datasets/spair.py#L222
https://github.com/kampta/asic/blob/7124b93b53280dc9da72807605e50338b50b2895/datasets/spair.py#L225
https://github.com/kampta/asic/blob/7124b93b53280dc9da72807605e50338b50b2895/thirdparty/colormap/colormap_flow.py#L366
https://github.com/kampta/asic/blob/7124b93b53280dc9da72807605e50338b50b2895/thirdparty/colormap/colormap_flow.py#L368

================================================================
https://github.com/its-gucci/partially-observed-neural-processes
================================================================

Found 2 times
make_grid(img_tensor, nrow=2, pad_value=pad_value)
make_grid(outs, nrow=n_fig_per_row, pad_value=1.0)
https://github.com/its-gucci/partially-observed-neural-processes/blob/418dfdb5683850d23e281dfaffe32674fb5bdcd6/neural_process_family/utils/visualize/visualize_imgs.py#L49
https://github.com/its-gucci/partially-observed-neural-processes/blob/418dfdb5683850d23e281dfaffe32674fb5bdcd6/neural_process_family/utils/visualize/visualize_imgs.py#L426

=====================================
https://github.com/billpsomas/simpool
=====================================

Found 1 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True
                    )
https://github.com/billpsomas/simpool/blob/fac2263537c376384f3d52bca795bcca08302686/supervised/train.py#L963

==================================
https://github.com/kechunl/AdaCode
==================================

Found 8 times
save_image(vis_tex_samples, f'./tmp_code_vis/tmp_tex_vis/{key}.jpg', normalize=True, nrow=16)
tvu.make_grid(output_img, nrow=32)
save_image(output_img, save_path)
tvu.make_grid(output_img, nrow=32)
save_image(output_img, save_path)
tvu.make_grid(output_img, nrow=32)
tvu.make_grid(output_img, nrow=32)
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
https://github.com/kechunl/AdaCode/blob/22a6eae2745fe24e8a8aeef4d4490351e72d7047/vis_codebook.py#L84
https://github.com/kechunl/AdaCode/blob/22a6eae2745fe24e8a8aeef4d4490351e72d7047/vis_codebook.py#L91
https://github.com/kechunl/AdaCode/blob/22a6eae2745fe24e8a8aeef4d4490351e72d7047/vis_codebook.py#L92
https://github.com/kechunl/AdaCode/blob/22a6eae2745fe24e8a8aeef4d4490351e72d7047/vis_codebook.py#L98
https://github.com/kechunl/AdaCode/blob/22a6eae2745fe24e8a8aeef4d4490351e72d7047/vis_codebook.py#L99
https://github.com/kechunl/AdaCode/blob/22a6eae2745fe24e8a8aeef4d4490351e72d7047/basicsr/models/femasr_model.py#L476
https://github.com/kechunl/AdaCode/blob/22a6eae2745fe24e8a8aeef4d4490351e72d7047/basicsr/models/ori_femasr_model.py#L352
https://github.com/kechunl/AdaCode/blob/22a6eae2745fe24e8a8aeef4d4490351e72d7047/basicsr/utils/img_util.py#L71

===============================
https://github.com/wangzy22/TAP
===============================

Found 2 times
make_grid(tensor=val_vis[key][:cfg.vis_num], nrow=2)
make_grid(tensor=train_vis[key][:cfg.vis_num], nrow=2)
https://github.com/wangzy22/TAP/blob/32598336ae80ffbeb246f20e1e54b35326c4a135/examples/classification/pretrain_viewgen.py#L138
https://github.com/wangzy22/TAP/blob/32598336ae80ffbeb246f20e1e54b35326c4a135/examples/classification/pretrain_viewgen.py#L156

=================================
https://github.com/Separius/SCALE
=================================

Found 3 times
make_grid(vid, padding=8, pad_value=1.0, nrow=sz[0])
make_grid(tensor, padding=8, pad_value=1.0, nrow=nrow)
make_grid(
                reshaped_array, nrow, padding=1, normalize=normalize
            )
https://github.com/Separius/SCALE/blob/6fd17b9112e014805c34c38212fe4eb622db4f96/SlowFast/slowfast/utils/misc.py#L285
https://github.com/Separius/SCALE/blob/6fd17b9112e014805c34c38212fe4eb622db4f96/SlowFast/slowfast/utils/misc.py#L305
https://github.com/Separius/SCALE/blob/6fd17b9112e014805c34c38212fe4eb622db4f96/SlowFast/slowfast/visualization/tensorboard_vis.py#L402

=======================================
https://github.com/weiyithu/SurroundOcc
=======================================

Found 2 times
make_grid(tensor, pad_value=pad_value, normalize=False)
torchvision.utils.save_image(torch.tensor(tensor).permute(2, 0, 1), path)
https://github.com/weiyithu/SurroundOcc/blob/f698d7968a60815067601776dabfca2a8b03500a/projects/mmdet3d_plugin/models/utils/visual.py#L22
https://github.com/weiyithu/SurroundOcc/blob/f698d7968a60815067601776dabfca2a8b03500a/projects/mmdet3d_plugin/models/utils/visual.py#L23

=================================
https://github.com/JiYuanFeng/DDP
=================================

Found 8 times
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/cldm/cldm.py#L379
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/cldm/logger.py#L31
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/ldm/models/diffusion/ddpm.py#L473
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/ldm/models/diffusion/ddpm.py#L652
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/ldm/models/diffusion/ddpm.py#L1201
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/ldm/models/diffusion/ddpm.py#L1439
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/ldm/models/diffusion/ddpm.py#L1601
https://github.com/JiYuanFeng/DDP/blob/5b7dd0267fc0f9da3990deaad15ca2ad9428980b/controlnet/ldm/modules/image_degradation/utils_image.py#L353

==========================================
https://github.com/QianyiWu/objectsdf_plus
==========================================

Found 4 times
torchvision.utils.make_grid(normal_maps_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(output_vs_gt_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(sem_maps_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
torchvision.utils.make_grid(depth_maps_plot,
                                         scale_each=False,
                                         normalize=False,
                                         nrow=plot_nrow)
https://github.com/QianyiWu/objectsdf_plus/blob/4c93f016d553ed3251a527ef1a32821cf53af90c/code/utils/plots.py#L690
https://github.com/QianyiWu/objectsdf_plus/blob/4c93f016d553ed3251a527ef1a32821cf53af90c/code/utils/plots.py#L711
https://github.com/QianyiWu/objectsdf_plus/blob/4c93f016d553ed3251a527ef1a32821cf53af90c/code/utils/plots.py#L743
https://github.com/QianyiWu/objectsdf_plus/blob/4c93f016d553ed3251a527ef1a32821cf53af90c/code/utils/plots.py#L762

======================================
https://github.com/taohan10200/STEERER
======================================

Found 1 times
vutils.make_grid(x, nrow=3, padding=5)
https://github.com/taohan10200/STEERER/blob/ec08b9817fc89ba9b88774127a27901716603ce8/lib/utils/utils.py#L340

======================================================
https://github.com/thudzj/NeuralEigenfunctionSegmentor
======================================================

Found 3 times
torchvision.utils.save_image(ims, log_dir / ("eigenfuncs/" + str(i) + ".png"))
torchvision.utils.make_grid(img, normalize=True, scale_each=True)
torchvision.utils.save_image(
            im_n,
            str(dir_path / "input_img.png"),
        )
https://github.com/thudzj/NeuralEigenfunctionSegmentor/blob/f5cd3248bf3998ff82ae41aa4e88eeaeda41809c/engine.py#L526
https://github.com/thudzj/NeuralEigenfunctionSegmentor/blob/f5cd3248bf3998ff82ae41aa4e88eeaeda41809c/scripts/show_attn_map.py#L181
https://github.com/thudzj/NeuralEigenfunctionSegmentor/blob/f5cd3248bf3998ff82ae41aa4e88eeaeda41809c/scripts/show_attn_map.py#L195

========================================
https://github.com/LiWentomng/Point2Mask
========================================

Found 2 times
make_grid(tensor, pad_value=pad_value)
torchvision.utils.save_image(torch.tensor(tensor).permute(2,0,1), path)
https://github.com/LiWentomng/Point2Mask/blob/6a44f6211422fe273b4e8ea7319052b215dcf98f/easymd/models/utils/visual.py#L35
https://github.com/LiWentomng/Point2Mask/blob/6a44f6211422fe273b4e8ea7319052b215dcf98f/easymd/models/utils/visual.py#L85

======================================================
https://github.com/sadrasafa/multi-object-segmentation
======================================================

Found 2 times
torchvision.utils.make_grid(vis, nrow=len(cols), pad=2)
torchvision.utils.make_grid(imgs, nrow=K, pad=2)
https://github.com/sadrasafa/multi-object-segmentation/blob/8c3dd404a94eef4373784d89bd40411f59a553ad/src/utils/visualisation.py#L254
https://github.com/sadrasafa/multi-object-segmentation/blob/8c3dd404a94eef4373784d89bd40411f59a553ad/src/utils/visualisation.py#L265

========================================
https://github.com/MischaD/fobadiffusion
========================================

Found 29 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
torchvision.utils.make_grid(images[k])
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=self.nrow)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(all_img, nrow=5)
make_grid(all_img, nrow=4)
make_grid(all_img, nrow=3)
make_grid(imgs, nrow=len(input))
make_grid(x, nrows=8)
make_grid(y, nrows=8)
make_grid(x_out, nrows=8)
make_grid(grid, nrow=nrow)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/main.py#L332
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/main.py#L345
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/main.py#L471
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/ldm/models/diffusion/ddpm.py#L438
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/ldm/models/diffusion/ddpm.py#L603
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/ldm/models/diffusion/ddpm.py#L1325
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/ldm/models/diffusion/ddpm.py#L1568
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/ldm/models/diffusion/ddpm.py#L1755
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/scripts/checker.py#L135
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/scripts/img2img.py#L284
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/scripts/txt2img.py#L270
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/scripts/vqgan_codebook_visualizer.py#L200
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/scripts/vqgan_codebook_visualizer.py#L352
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/finetune-stable-diffusion/scripts/vqgan_codebook_visualizer.py#L413
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/scripts/sample_background_prelim_masks.py#L93
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/scripts/train_segmentation_refined.py#L271
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/scripts/train_segmentation_refined.py#L272
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/scripts/train_segmentation_refined.py#L273
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/src/visualization/utils.py#L31
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/main.py#L312
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/main.py#L325
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/ldm/models/diffusion/ddpm.py#L374
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/ldm/models/diffusion/ddpm.py#L539
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/ldm/models/diffusion/ddpm.py#L1297
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/ldm/modules/image_degradation/utils_image.py#L353
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/scripts/img2img.py#L279
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/scripts/knn2img.py#L391
https://github.com/MischaD/fobadiffusion/blob/cf2f777a4ff23b96d035ee0aa2808a7b0850a36d/stable-diffusion/scripts/txt2img.py#L299

=============================================================
https://github.com/LarsDoorenbos/ccdm-stochastic-segmentation
=============================================================

Found 1 times
make_grid(tensor, **kwargs)
https://github.com/LarsDoorenbos/ccdm-stochastic-segmentation/blob/ceb781d14f6ecad5b18c9e4878151b771bf3eb53/ddpm/trainer.py#L574

============================================
https://github.com/jspenmar/slowtv_monodepth
============================================

Found 1 times
make_grid(x[:self.n], nrow=self.n_cols, **kwargs)
https://github.com/jspenmar/slowtv_monodepth/blob/70fb69dfeaed1d9d3c346abd8a76e9fb9030cd55/src/core/heavy_logger.py#L42

===================================
https://github.com/FutureXiang/ddae
===================================

Found 6 times
make_grid(x_gen, nrow=20)
save_image(grid, png_path)
save_image(img, png_path)
make_grid(x_all, nrow=10)
save_image(grid, save_path)
save_image(imgs, title, normalize=True, value_range=(0, 1))
https://github.com/FutureXiang/ddae/blob/8eaba2b1f872eb9a2cd3b1e6f70851f32cbd9304/sample.py#L87
https://github.com/FutureXiang/ddae/blob/8eaba2b1f872eb9a2cd3b1e6f70851f32cbd9304/sample.py#L89
https://github.com/FutureXiang/ddae/blob/8eaba2b1f872eb9a2cd3b1e6f70851f32cbd9304/sample.py#L95
https://github.com/FutureXiang/ddae/blob/8eaba2b1f872eb9a2cd3b1e6f70851f32cbd9304/train.py#L125
https://github.com/FutureXiang/ddae/blob/8eaba2b1f872eb9a2cd3b1e6f70851f32cbd9304/train.py#L128
https://github.com/FutureXiang/ddae/blob/8eaba2b1f872eb9a2cd3b1e6f70851f32cbd9304/DiT/vae_preprocessing.py#L20

=========================================
https://github.com/jellyheadandrew/CHORUS
=========================================

Found 7 times
save_image(random_image, f.name)
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/detectron2_repo/projects/DensePose/tests/test_image_list_dataset.py#L19
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/ldm/main.py#L312
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/ldm/main.py#L325
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/ldm/ldm/models/diffusion/ddpm.py#L374
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/ldm/ldm/models/diffusion/ddpm.py#L539
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/ldm/ldm/models/diffusion/ddpm.py#L1297
https://github.com/jellyheadandrew/CHORUS/blob/24630f86756251bbdd0a63992943cd7e209813ed/imports/ldm/ldm/modules/image_degradation/utils_image.py#L353

=================================================
https://github.com/eyalgomel/box-based-refinement
=================================================

Found 6 times
make_grid(imgs[:32], nrow=4)
torchvision.utils.make_grid(img, normalize=True, scale_each=True)
torchvision.utils.save_image(torchvision.utils.make_grid(img, normalize=True, scale_each=True), os.path.join(args.output_dir, "img.png"))
save_image(
                denormalize(imgs_to_log), fpath, nrow=int(imgs_to_log.shape[0] ** 0.5)
            )
save_image(
                    return_dict["mask"], fpath, nrow=int(imgs_to_log.shape[0] ** 0.5)
                )
save_image(
                        return_dict["mask"],
                        fpath,
                        nrow=int(imgs_to_log.shape[0] ** 0.5),
                    )
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/bbr/train/wsg.py#L286
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/dino/visualize_attention.py#L204
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/dino/visualize_attention.py#L204
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/moveseg/train.py#L214
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/moveseg/train.py#L223
https://github.com/eyalgomel/box-based-refinement/blob/09c7790f1bc0cba2101a79614a5486344b4c2e7e/moveseg/train.py#L284

====================================
https://github.com/SMSD75/Timetuning
====================================

Found 2 times
torchvision.utils.make_grid([input_img, overlayed_image])
torchvision.utils.make_grid([input_img, overlayed_image])
https://github.com/SMSD75/Timetuning/blob/0c9cc845efe5f883b07f86226c8f1d923ec1f50f/time_tuning.py#L312
https://github.com/SMSD75/Timetuning/blob/0c9cc845efe5f883b07f86226c8f1d923ec1f50f/time_tuning.py#L340

=========================================================================
https://github.com/amazon-science/object-centric-multiple-object-tracking
=========================================================================

Found 12 times
make_grid(image, nrow=self.n_row)
make_grid(self.denormalization(frame.unsqueeze(1)).squeeze(1), nrow=self.n_row)
make_grid(1.0 - masks, nrow=n_objects)
make_grid(1.0 - masks, nrow=n_objects)
make_grid(
                        object_vis_frame,
                        nrow=n_objects,
                    )
make_grid(masks, nrow=n_objects)
make_grid(masks, nrow=n_objects, pad_value=1.0)
make_grid(object_reconstructions, nrow=n_objects)
make_grid(1.0 - masks, nrow=n_objects)
make_grid(-self.matcher.costs, nrow=8, pad_value=0.9)
make_grid(masks_on_image, nrow=8)
make_grid(self.denormalization(frame.unsqueeze(1)).squeeze(1), nrow=self.n_row)
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/visualizations.py#L35
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/visualizations.py#L61
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/visualizations.py#L93
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/visualizations.py#L106
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/visualizations.py#L148
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/visualizations.py#L164
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/visualizations.py#L183
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/visualizations.py#L184
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/visualizations.py#L192
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/visualizations.py#L218
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/visualizations.py#L290
https://github.com/amazon-science/object-centric-multiple-object-tracking/blob/27ad03c153ac051dc130e401a63d4994a7158955/ocl/visualizations.py#L360

=======================================
https://github.com/cvlab-columbia/viper
=======================================

Found 1 times
make_grid(denorm_images[:64], nrow=8)
https://github.com/cvlab-columbia/viper/blob/09fe3465224766860d8dd4ec48db942f22b05092/utils.py#L42

================================
https://github.com/JJuOn/LFS-GAN
================================

Found 2 times
utils.save_image(fake_x, os.path.join(result_path, '{}.png'.format(i)), normalize=True, value_range=(-1, 1))
utils.save_image(
                        sample,
                        f"%s/{current_task}_{str(i).zfill(6)}.png" % (imsave_path),
                        nrow=int(args.n_sample ** 0.5),
                        normalize=True,
                        value_range=(-1, 1),
                    )
https://github.com/JJuOn/LFS-GAN/blob/17c12f798c540e22a722c01c3d816d9313503247/generate.py#L21
https://github.com/JJuOn/LFS-GAN/blob/17c12f798c540e22a722c01c3d816d9313503247/train.py#L448

=================================
https://github.com/shengcheng/ABA
=================================

Found 2 times
vutils.make_grid(inputs, nrow=8)
vutils.save_image(
            samples_in, os.path.join(
                self.ckpoint_folder, 
                'seed{}'.format(self.args.rand_seed),
                '{}_{}_{}.jpg'.format(name, epoch, batch_idx)
                )
            )
https://github.com/shengcheng/ABA/blob/affb67560b307577e9f54f223e2e407b506da354/trainer_bnn.py#L391
https://github.com/shengcheng/ABA/blob/affb67560b307577e9f54f223e2e407b506da354/trainer_bnn.py#L392

=====================================
https://github.com/Vivek9Chavan/RECIL
=====================================

Found 4 times
torchvision.utils.make_grid(img, normalize=True, scale_each=True)
torchvision.utils.save_image(torchvision.utils.make_grid(img, normalize=True, scale_each=True), os.path.join(args.output_dir,
                                                                                                                 ".github/img.png"))
torchvision.utils.make_grid(img, normalize=True, scale_each=True)
torchvision.utils.save_image(torchvision.utils.make_grid(img, normalize=True, scale_each=True), os.path.join(args.output_dir,"img_att.png"))
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/RECLUSE/visualize_attention.py#L210
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/RECLUSE/visualize_attention.py#L210
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/RECLUSE/visualize_attention_heatmap.py#L220
https://github.com/Vivek9Chavan/RECIL/blob/1ff28fca0ca66f64dcad0ff699343d0b12a237bf/RECLUSE/visualize_attention_heatmap.py#L220

===============================
https://github.com/fistyee/MDCS
===============================

Found 2 times
make_grid(data.cpu(), nrow=8, normalize=True)
make_grid(data.cpu(), nrow=8, normalize=True)
https://github.com/fistyee/MDCS/blob/39722ee12c463c9ce6ea0ffecfb9e3c35e3cf15e/trainer/trainer.py#L188
https://github.com/fistyee/MDCS/blob/39722ee12c463c9ce6ea0ffecfb9e3c35e3cf15e/trainer/trainer.py#L327

==============================
https://github.com/OoDBag/RISE
==============================

Found 2 times
torchvision.utils.make_grid(x, self.grid_size, padding=0)
torchvision.utils.make_grid(x, self.grid_size, padding=0)
https://github.com/OoDBag/RISE/blob/ebf71b4c50fefc0ad5e8129f8fff5adcaacbf451/data/.ipynb_checkpoints/JigsawLoader-checkpoint.py#L66
https://github.com/OoDBag/RISE/blob/ebf71b4c50fefc0ad5e8129f8fff5adcaacbf451/data/.ipynb_checkpoints/JigsawLoader-checkpoint.py#L188

==========================================================
https://github.com/ZhangLab-DeepNeuroCogLab/Learning2Learn
==========================================================

Found 1 times
make_grid(batch, nrow=self.ncol, padding=2, normalize=False, range=None, scale_each=False, pad_value=0)
https://github.com/ZhangLab-DeepNeuroCogLab/Learning2Learn/blob/81401c1e32fee69c70d707e797c90e63285f128b/curriculum designer/OTDD/otdd/pytorch/flows.py#L990

=========================================
https://github.com/mingzeG/Moment-Probing
=========================================

Found 1 times
torchvision.utils.save_image(
                        input,
                        os.path.join(output_dir, 'train-batch-%d.jpg' % batch_idx),
                        padding=0,
                        normalize=True)
https://github.com/mingzeG/Moment-Probing/blob/0ddc0400e7f5210939f27b4d0ab14cfb5baec795/train.py#L816

====================================
https://github.com/astra-vision/PODA
====================================

Found 1 times
save_image(images[j],opts.val_results_dir+'/%d_image.png' % img_id)
https://github.com/astra-vision/PODA/blob/2a7e4bc38055e279734fabfaf8ea8572d553be09/main.py#L213

===================================
https://github.com/zhengxuJosh/DATR
===================================

Found 13 times
torchvision.utils.make_grid(imgs)
torchvision.utils.make_grid(imgs)
torchvision.utils.make_grid(imgs)
torchvision.utils.make_grid(imgs)
torchvision.utils.make_grid(imgs)
torchvision.utils.make_grid(imgs)
torchvision.utils.make_grid(imgs)
torchvision.utils.make_grid(imgs)
torchvision.utils.make_grid(imgs)
torchvision.utils.make_grid(imgs)
torchvision.utils.make_grid(imgs)
torchvision.utils.make_grid(imgs)
torchvision.utils.make_grid(imgs)
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/densepass_dataset.py#L68
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/cs13_dataset_src.py#L82
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/cs_dataset_src.py#L67
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/densepass_dataset.py#L138
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/dp13_dataset.py#L152
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/dp13_dataset_ss.py#L175
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/s3d8_dataset.py#L82
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/sp13_dataset.py#L84
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/sp22_dataset.py#L85
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/stanford_pan8_dataset.py#L201
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/stanford_pan_dataset.py#L181
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/stanford_pin8_dataset.py#L122
https://github.com/zhengxuJosh/DATR/blob/23e5f0fcc38c26578dea101141c514e445a5d143/dataset/adaption/stanford_pin_dataset.py#L111

===================================
https://github.com/weilllllls/OnPro
===================================

Found 1 times
save_image((x.reshape(shp) * 0.5 + 0.5), 'samples/buffer_%d.png' % epoch, nrow=int(self.current_index ** 0.5))
https://github.com/weilllllls/OnPro/blob/a92f8ae22ad798b217a1041d208036c62f98442d/models/buffer.py#L81

=======================================
https://github.com/koncle/DomainAdaptor
=======================================

Found 1 times
torchvision.utils.make_grid(x, self.grid_size, padding=0)
https://github.com/koncle/DomainAdaptor/blob/5c3d24efb465a56a9a8b57454ea0d23b4ed819c8/dataloader/jigsaw/jigsaw_process.py#L13

============================================
https://github.com/lingeringlight/DomainDrop
============================================

Found 3 times
torchvision.utils.make_grid(x, self.grid_size, padding=0)
torchvision.utils.make_grid(x, self.grid_size, padding=0)
save_image(batch, path, nrow=column)
https://github.com/lingeringlight/DomainDrop/blob/a2d9607d4f1fb9ba35a9fa48fbceff82fd67d15f/data/JigsawLoader.py#L159
https://github.com/lingeringlight/DomainDrop/blob/a2d9607d4f1fb9ba35a9fa48fbceff82fd67d15f/data/JigsawLoader.py#L284
https://github.com/lingeringlight/DomainDrop/blob/a2d9607d4f1fb9ba35a9fa48fbceff82fd67d15f/utils/tools.py#L14

====================================
https://github.com/UCF-CRCV/TeD-SPAD
====================================

Found 2 times
save_image(vis_image, image_full_name, padding=5, nrow=int(inputs.shape[0]))
save_image(vis_image, os.path.join(save_dir, f'visualize_epoch_{epoch}_batch_{i}.png'), padding=5, nrow=5)
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/anonymization_training/train_anonymizer.py#L314
https://github.com/UCF-CRCV/TeD-SPAD/blob/41f8e3c613ccef7a4e7f3dd9b86fc81aed6fee84/fa_pretraining/train_reconstruction.py#L86

======================================
https://github.com/Sharpiless/MPI-Flow
======================================

Found 4 times
save_image(visual, "debug/stage1-%03d.jpg" % idx, nrow=bs)
save_image(visual, "debug/stage2-%03d.jpg" % idx, nrow=bs)
save_image(render, render_save_path)
save_image(disp, disp_save_path)
https://github.com/Sharpiless/MPI-Flow/blob/f1ea950205b19a4bb47f617903489dff9162b9d6/warpback/stage1_dataset.py#L162
https://github.com/Sharpiless/MPI-Flow/blob/f1ea950205b19a4bb47f617903489dff9162b9d6/warpback/stage2_dataset.py#L201
https://github.com/Sharpiless/MPI-Flow/blob/f1ea950205b19a4bb47f617903489dff9162b9d6/warpback/utils.py#L340
https://github.com/Sharpiless/MPI-Flow/blob/f1ea950205b19a4bb47f617903489dff9162b9d6/warpback/utils.py#L341

==============================================================
https://github.com/Chuhanxx/helping_hand_for_egocentric_videos
==============================================================

Found 2 times
torchvision.utils.save_image(img_denorm(frames[0][0].transpose(0,1),
                                                        mean=[108.3272985, 116.7460125, 104.09373615000001], 
                                                        std=[68.5005327, 66.6321579, 70.32316305]),
                                            'egtea_vis.png')
torchvision.utils.save_image(
                    img_denorm((data['video'][0]),mean=[108.3272985/255, 116.7460125/255, 104.09373615000001/255], std=[68.5005327/255, 66.6321579/255, 70.32316305/255] ),
                    f'ek_vis/ek_{i}.png')
https://github.com/Chuhanxx/helping_hand_for_egocentric_videos/blob/46a3852842782335740933821dfe61657e995339/run/test_egtea.py#L249
https://github.com/Chuhanxx/helping_hand_for_egocentric_videos/blob/46a3852842782335740933821dfe61657e995339/run/test_epic.py#L244

==============================
https://github.com/ku-vai/TPoS
==============================

Found 6 times
make_grid(grid, nrow=n_rows)
make_grid(grid, nrow=n_rows)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/ku-vai/TPoS/blob/8be5e126a397372b872d4b071fdc45f23e444837/img2img.py#L453
https://github.com/ku-vai/TPoS/blob/8be5e126a397372b872d4b071fdc45f23e444837/txt2img.py#L518
https://github.com/ku-vai/TPoS/blob/8be5e126a397372b872d4b071fdc45f23e444837/ldm/models/diffusion/ddpm.py#L374
https://github.com/ku-vai/TPoS/blob/8be5e126a397372b872d4b071fdc45f23e444837/ldm/models/diffusion/ddpm.py#L542
https://github.com/ku-vai/TPoS/blob/8be5e126a397372b872d4b071fdc45f23e444837/ldm/models/diffusion/ddpm.py#L1334
https://github.com/ku-vai/TPoS/blob/8be5e126a397372b872d4b071fdc45f23e444837/ldm/modules/image_degradation/utils_image.py#L353

======================================
https://github.com/hkust-vgd/nerfstyle
======================================

Found 4 times
torchvision.utils.save_image(c_map, c_save_path)
torchvision.utils.save_image(rgb_output, save_path)
torchvision.utils.save_image(seg_output, save_path)
torchvision.utils.save_image(rgb_output, save_path)
https://github.com/hkust-vgd/nerfstyle/blob/0011f2f06a00f39c2dc81176118b83e88d20a2eb/render.py#L102
https://github.com/hkust-vgd/nerfstyle/blob/0011f2f06a00f39c2dc81176118b83e88d20a2eb/trainers/base.py#L367
https://github.com/hkust-vgd/nerfstyle/blob/0011f2f06a00f39c2dc81176118b83e88d20a2eb/trainers/base.py#L377
https://github.com/hkust-vgd/nerfstyle/blob/0011f2f06a00f39c2dc81176118b83e88d20a2eb/trainers/style.py#L148

==================================
https://github.com/piddnad/DDColor
==================================

Found 1 times
make_grid(_tensor, nrow=int(math.sqrt(_tensor.size(0))), normalize=False)
https://github.com/piddnad/DDColor/blob/6fbe0b4826a28e4a454c90a52ca75edbcdbbb131/basicsr/utils/img_util.py#L71

===================================
https://github.com/tmaham/DS-Fusion
===================================

Found 9 times
torchvision.utils.make_grid(images[k])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(grid, nrow=opt.n_samples)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
save_image(img1, "img_style.png")
save_image(img2, "img_base.png")
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/main.py#L392
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/main.py#L405
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/txt2img.py#L199
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/ldm/models/diffusion/ddpm.py#L387
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/ldm/models/diffusion/ddpm.py#L563
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/ldm/models/diffusion/ddpm.py#L934
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/ldm/models/diffusion/ddpm.py#L940
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/ldm/models/diffusion/ddpm.py#L1511
https://github.com/tmaham/DS-Fusion/blob/c63e5de51244914033ea444751cbfd6e757b6d9c/ldm/modules/image_degradation/utils_image.py#L353

==================================
https://github.com/vishaal27/SuS-X
==================================

Found 38 times
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
make_grid([images[0], images[1], images[2]])
save_image(images[0:6], 'test_'+str(args.dataset)+'.png', nrow=3)
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L562
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L565
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L575
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L578
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L588
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L591
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L601
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L604
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L614
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L617
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L627
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L630
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L640
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L643
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L653
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L656
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L666
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L669
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L679
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L682
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L692
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L695
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L705
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L708
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L718
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L721
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L731
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L734
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L743
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L746
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L756
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L759
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L769
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L772
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L782
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L785
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L795
https://github.com/vishaal27/SuS-X/blob/d7d4d37881408884999fe276faacdd61b511067f/dataloader.py#L798

=======================================
https://github.com/xmu-xiaoma666/X-Mesh
=======================================

Found 1 times
torchvision.utils.save_image(rendered_images, os.path.join(dir, 'iter_{}.jpg'.format(i)))
https://github.com/xmu-xiaoma666/X-Mesh/blob/cd9f28280963f1cbf707cea7a9ce58c15887fa5b/main.py#L359

=================================
https://github.com/j-min/DallEval
=================================

Found 7 times
torchvision.utils.make_grid(F.interpolate(visdict[key], [self.config.image_size, self.config.image_size]))
save_image(image, outputs_dir / f'{i}.jpg', normalize=True)
make_grid(t.float(), nrow = int(sqrt(k)), normalize = True, range = (-1, 1))
torchvision.utils.make_grid(images, nrow=8)
torchvision.utils.make_grid(recons, nrow=8)
torchvision.utils.make_grid(images, nrow=8)
torchvision.utils.make_grid(recons, nrow=8)
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/biases/skintone/TRUST/lib/model.py#L200
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/dalle_small/DALLE-pytorch/generate.py#L127
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/dalle_small/DALLE-pytorch/train_vae.py#L255
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/mindalle/minDALL-E/examples/finetuning_mindalle_skill.py#L46
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/mindalle/minDALL-E/examples/finetuning_mindalle_skill.py#L47
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/mindalle/minDALL-E/examples/transfer_learning_ex.py#L53
https://github.com/j-min/DallEval/blob/36b273b0653b3e2f1798e91e686bdc3b669a7536/models/mindalle/minDALL-E/examples/transfer_learning_ex.py#L54

==================================
https://github.com/yonseivnl/cmota
==================================

Found 14 times
torchvision.utils.make_grid(
                    tensor=x,
                    nrow=self.nrow,
                    padding=self.padding,
                    normalize=self.normalize,
                    value_range=self.norm_range,
                    scale_each=self.scale_each,
                    pad_value=self.pad_value,
                )
torchvision.utils.make_grid(
                    tensor=xrec,
                    nrow=self.nrow,
                    padding=self.padding,
                    normalize=self.normalize,
                    value_range=self.norm_range,
                    scale_each=self.scale_each,
                    pad_value=self.pad_value,
                )
torchvision.utils.make_grid(
                    tensor=x,
                    nrow=self.nrow,
                    padding=self.padding,
                    normalize=self.normalize,
                    value_range=self.norm_range,
                    scale_each=self.scale_each,
                    pad_value=self.pad_value,
            )
torchvision.utils.make_grid(
                    tensor=xrec,
                    nrow=self.nrow,
                    padding=self.padding,
                    normalize=self.normalize,
                    value_range=self.norm_range,
                    scale_each=self.scale_each,
                    pad_value=self.pad_value,
            )
torchvision.utils.make_grid(
                tensor=x,
                nrow=self.nrow,
                padding=self.padding,
                normalize=self.normalize,
                value_range=self.norm_range,
                scale_each=self.scale_each,
                pad_value=self.pad_value,
            )
torchvision.utils.make_grid(
                tensor=x_target,
                nrow=self.nrow,
                padding=self.padding,
                normalize=self.normalize,
                value_range=self.norm_range,
                scale_each=self.scale_each,
                pad_value=self.pad_value,
            )
torchvision.utils.make_grid(
                tensor=x_rec,
                nrow=self.nrow,
                padding=self.padding,
                normalize=self.normalize,
                value_range=self.norm_range,
                scale_each=self.scale_each,
                pad_value=self.pad_value,
            )
torchvision.utils.make_grid(
                tensor=x_gen,
                nrow=self.nrow,
                padding=self.padding,
                normalize=self.normalize,
                value_range=self.norm_range,
                scale_each=self.scale_each,
                pad_value=self.pad_value,
            )
torchvision.utils.make_grid(
                tensor=x,
                nrow=self.nrow,
                padding=self.padding,
                normalize=self.normalize,
                value_range=self.norm_range,
                scale_each=self.scale_each,
                pad_value=self.pad_value,
            )
torchvision.utils.make_grid(
                tensor=x_rec,
                nrow=self.nrow,
                padding=self.padding,
                normalize=self.normalize,
                value_range=self.norm_range,
                scale_each=self.scale_each,
                pad_value=self.pad_value,
            )
torchvision.utils.make_grid(
                tensor=x_target,
                nrow=self.nrow,
                padding=self.padding,
                normalize=self.normalize,
                value_range=self.norm_range,
                scale_each=self.scale_each,
                pad_value=self.pad_value,
            )
torchvision.utils.make_grid(
                tensor=x_gen,
                nrow=self.nrow,
                padding=self.padding,
                normalize=self.normalize,
                value_range=self.norm_range,
                scale_each=self.scale_each,
                pad_value=self.pad_value,
            )
save_image(tensor=x_1, fp=tmp_saved_path_prefix_ori, normalize=True)
save_image(tensor=x_gen_1, fp=tmp_saved_path_prefix_gen, normalize=True)
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/callbacks.py#L76
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/callbacks.py#L85
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/callbacks.py#L119
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/callbacks.py#L128
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/callbacks.py#L306
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/callbacks.py#L315
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/callbacks.py#L324
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/callbacks.py#L333
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/callbacks.py#L470
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/callbacks.py#L479
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/callbacks.py#L488
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/callbacks.py#L497
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/models/cond_transformer.py#L426
https://github.com/yonseivnl/cmota/blob/517e6c6167b62acaa3b13ae1c08d5dc6589e1836/cmota/models/cond_transformer.py#L427

=====================================
https://github.com/wade3han/champagne
=====================================

Found 2 times
save_image(image_plot, 'input_image.jpg')
save_image(plot.float() / 255, 'test.jpg')
https://github.com/wade3han/champagne/blob/a525c0f484137eb7e4b14ae3d896b58dd2907944/t5x/examples/unified_io/dataset_test.py#L51
https://github.com/wade3han/champagne/blob/a525c0f484137eb7e4b14ae3d896b58dd2907944/t5x/examples/unified_io/data/data_utils.py#L1130

===================================
https://github.com/FudanVI/FudanOCR
===================================

Found 8 times
torchvision.utils.make_grid(vis_im, nrow=1, padding=0)
torchvision.utils.save_image(vis_im, os.path.join(out_path, im_name), padding=0)
torchvision.utils.make_grid(vis_im, nrow=1, padding=0)
torchvision.utils.save_image(vis_im, os.path.join(out_root, im_name), padding=0)
torchvision.utils.make_grid(vis_im, nrow=1, padding=0)
torchvision.utils.save_image(vis_im, os.path.join(out_path, im_name), padding=0)
torchvision.utils.make_grid(vis_im, nrow=1, padding=0)
torchvision.utils.save_image(vis_im, os.path.join(out_root, im_name), padding=0)
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/scene-text-telescope/interfaces/base.py#L214
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/scene-text-telescope/interfaces/base.py#L224
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/scene-text-telescope/interfaces/base.py#L244
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/scene-text-telescope/interfaces/base.py#L252
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/text-gestalt/interfaces/base.py#L228
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/text-gestalt/interfaces/base.py#L238
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/text-gestalt/interfaces/base.py#L258
https://github.com/FudanVI/FudanOCR/blob/4bae126ba0c6320ce1fb1b6dbe9e040cc895f898/text-gestalt/interfaces/base.py#L266

=================================
https://github.com/hetolin/PourIt
=================================

Found 5 times
torchvision.utils.make_grid(tensor=_imgs, nrow=2)
torchvision.utils.make_grid(tensor=cam_img.type(torch.uint8), nrow=2)
torchvision.utils.make_grid(tensor=fmap_img.type(torch.uint8), nrow=n_row)
torchvision.utils.make_grid(tensor=labels_cmap, nrow=2)
torchvision.utils.make_grid(tensor=labels*255, nrow=2)
https://github.com/hetolin/PourIt/blob/6f91241233862bef308437c7c7451f31fff5ab9c/utils/imutils.py#L45
https://github.com/hetolin/PourIt/blob/6f91241233862bef308437c7c7451f31fff5ab9c/utils/imutils.py#L56
https://github.com/hetolin/PourIt/blob/6f91241233862bef308437c7c7451f31fff5ab9c/utils/imutils.py#L73
https://github.com/hetolin/PourIt/blob/6f91241233862bef308437c7c7451f31fff5ab9c/utils/imutils.py#L82
https://github.com/hetolin/PourIt/blob/6f91241233862bef308437c7c7451f31fff5ab9c/utils/imutils.py#L88

=============================
https://github.com/doihye/EAR
=============================

Found 1 times
torchvision.utils.make_grid(image.unsqueeze(1))
https://github.com/doihye/EAR/blob/a5167efe8487906e5ec65cf7363dc3c72d5c8795/logger.py#L120

======================================
https://github.com/dangsq/ClipFaceShop
======================================

Found 3 times
torchvision.utils.save_image(img_gen[i], f"{dir_name}/img_gen_{i}.png", normalize=True, range=(-1, 1))
torchvision.utils.save_image(img_target, f"{dir_name}/target.png",
                                         normalize=True, range=(-1, 1))
torchvision.utils.save_image(img_gen_amp[j],f"{dir_name}/img_gen_amp_{dir_idx}_{j}.png",normalize=True, range=(-1, 1))
https://github.com/dangsq/ClipFaceShop/blob/eb2c038bb190d15ce6a9c54f23529580bd8c68a2/clipfaceshop-main.py#L167
https://github.com/dangsq/ClipFaceShop/blob/eb2c038bb190d15ce6a9c54f23529580bd8c68a2/clipfaceshop-main.py#L187
https://github.com/dangsq/ClipFaceShop/blob/eb2c038bb190d15ce6a9c54f23529580bd8c68a2/clipfaceshop-main.py#L376

=========================================
https://github.com/nku-zhichengzhang/MPOT
=========================================

Found 1 times
make_grid(imgs.int(),nrow=6+7)
https://github.com/nku-zhichengzhang/MPOT/blob/f9c2d3487b812fd44e30e94735fb9d1d5740c19e/train.py#L517

========================================
https://github.com/lllyasviel/ControlNet
========================================

Found 8 times
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
torchvision.utils.make_grid(images[k], nrow=4)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(denoise_grid, nrow=n_imgs_per_row)
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(diffusion_grid, nrow=diffusion_row.shape[0])
make_grid(tensor, nrow=int(math.sqrt(n_img)), normalize=False)
https://github.com/lllyasviel/ControlNet/blob/ed85cd1e25a5ed592f7d8178495b4483de0331bf/cldm/cldm.py#L379
https://github.com/lllyasviel/ControlNet/blob/ed85cd1e25a5ed592f7d8178495b4483de0331bf/cldm/logger.py#L31
https://github.com/lllyasviel/ControlNet/blob/ed85cd1e25a5ed592f7d8178495b4483de0331bf/ldm/models/diffusion/ddpm.py#L473
https://github.com/lllyasviel/ControlNet/blob/ed85cd1e25a5ed592f7d8178495b4483de0331bf/ldm/models/diffusion/ddpm.py#L652
https://github.com/lllyasviel/ControlNet/blob/ed85cd1e25a5ed592f7d8178495b4483de0331bf/ldm/models/diffusion/ddpm.py#L1201
https://github.com/lllyasviel/ControlNet/blob/ed85cd1e25a5ed592f7d8178495b4483de0331bf/ldm/models/diffusion/ddpm.py#L1439
https://github.com/lllyasviel/ControlNet/blob/ed85cd1e25a5ed592f7d8178495b4483de0331bf/ldm/models/diffusion/ddpm.py#L1601
https://github.com/lllyasviel/ControlNet/blob/ed85cd1e25a5ed592f7d8178495b4483de0331bf/ldm/modules/image_degradation/utils_image.py#L353

====================================
https://github.com/VassilisCN/RV-VAE
====================================

Found 14 times
torchvision.utils.make_grid(img,nrow=nrow)
torchvision.utils.save_image(grid, fname)
make_grid(image_to_show, nrow=num_rows)
vutils.save_image(torch.cat([real_batch, rec[:, 0, ...]], dim=0).data.cpu(),
                                      '{}/image_{}.jpg'.format(fig_dir, cur_iter), nrow=num_row)
vutils.save_image(torch.cat([real_batch, rec], dim=0).data.cpu(),
                                      '{}/image_{}.jpg'.format(fig_dir, cur_iter), nrow=num_row)
vutils.save_image(
                            torch.cat([real_batch[:max_imgs], rec_det[:max_imgs], fake[:max_imgs], fake1[:max_imgs]], dim=0).data.cpu(),
                            '{}/image_{}_{}.jpg'.format(fig_dir, epoch, cur_iter), nrow=num_row)
vutils.save_image(
                    torch.cat([real_batch[:max_imgs], rec_det[:max_imgs], fake[:max_imgs]], dim=0).data.cpu(),
                    '{}/image_{}.jpg'.format(fig_dir, cur_iter), nrow=num_row)
vutils.save_image(batch[i].data.cpu(), save_path + '/image_{}.jpg'.format(count), nrow=1)
vutils.save_image(generated[i].data.cpu(), save_path + '/image_{}.jpg'.format(count), nrow=1)
torchvision.utils.make_grid(x)
torchvision.utils.make_grid(x_hat[:,0,...])
torchvision.utils.make_grid(x_hat)
torchvision.utils.make_grid(generated_images[:,0,...],range1.shape[0])
torchvision.utils.make_grid(generated_images,range1.shape[0])
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/DC_VAE/utils/misc.py#L204
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/DC_VAE/utils/misc.py#L205
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Soft_Intro_VAE/train_soft_intro_vae.py#L404
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Soft_Intro_VAE/train_soft_intro_vae.py#L696
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Soft_Intro_VAE/train_soft_intro_vae.py#L699
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Soft_Intro_VAE/train_soft_intro_vae.py#L851
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Soft_Intro_VAE/train_soft_intro_vae.py#L896
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Soft_Intro_VAE/metrics/fid_score.py#L516
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Soft_Intro_VAE/metrics/fid_score.py#L532
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Vanilla_VAE/train.py#L192
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Vanilla_VAE/train.py#L194
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Vanilla_VAE/train.py#L196
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Vanilla_VAE/train.py#L214
https://github.com/VassilisCN/RV-VAE/blob/cb994ef5ecc89929685d9ffb855fc84334f6a05c/VAEs/Vanilla_VAE/train.py#L216

=================================
https://github.com/sthalles/CLoVE
=================================

Found 2 times
torchvision.utils.make_grid(images.unsqueeze(1))
torchvision.utils.make_grid(images.unsqueeze(1))
https://github.com/sthalles/CLoVE/blob/d7065731cb5d628747aaeb3ca4186b3208e6ee81/main_pretrain.py#L163
https://github.com/sthalles/CLoVE/blob/d7065731cb5d628747aaeb3ca4186b3208e6ee81/output/clove_base_r50_400ep/main_pretrain.py#L283

===========================================
https://github.com/ziyangwang007/CV-SSL-MIS
===========================================

Found 25 times
make_grid(image, 5, normalize=True)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=True)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=True)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=True)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=True)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=True)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=True)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=True)
make_grid(image, 5, normalize=False)
make_grid(image, 5, normalize=False)
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_adversarial_network_3D.py#L192
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_adversarial_network_3D.py#L197
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_adversarial_network_3D.py#L203
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cross_pseudo_supervision_3D.py#L207
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cross_pseudo_supervision_3D.py#L212
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cross_pseudo_supervision_3D.py#L218
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_cross_pseudo_supervision_3D.py#L224
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_exam_student_teacher_3D.py#L223
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_exam_student_teacher_3D.py#L228
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_exam_student_teacher_3D.py#L234
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_fully_supervised_3D.py#L125
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_fully_supervised_3D.py#L130
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_fully_supervised_3D.py#L136
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_fully_supervised_3D_ViT.py#L125
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_fully_supervised_3D_ViT.py#L130
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_fully_supervised_3D_ViT.py#L136
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_interpolation_consistency_training_3D.py#L205
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_interpolation_consistency_training_3D.py#L210
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_interpolation_consistency_training_3D.py#L216
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_mean_teacher_3D.py#L186
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_mean_teacher_3D.py#L191
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_mean_teacher_3D.py#L197
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_uncertainty_aware_mean_teacher_3D.py#L209
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_uncertainty_aware_mean_teacher_3D.py#L214
https://github.com/ziyangwang007/CV-SSL-MIS/blob/fd39b34ca3fa05680b0af1747089f8518e3ea340/code/train_uncertainty_aware_mean_teacher_3D.py#L220

====================================================
https://github.com/FelixHertlein/illtrtemplate-model
====================================================

Found 2 times
make_grid(data, nrow=3)
make_grid(data, nrow=4)
https://github.com/FelixHertlein/illtrtemplate-model/blob/b3ee560831f1fd39a2d941d1abc6b3687f5fe1ca/src/inv3d_illuminator/models/illtr/illtr.py#L114
https://github.com/FelixHertlein/illtrtemplate-model/blob/b3ee560831f1fd39a2d941d1abc6b3687f5fe1ca/src/inv3d_illuminator/models/illtr/illtr_template.py#L151

=========================================
https://github.com/antonbaumann/MIMO-Unet
=========================================

Found 2 times
torchvision.utils.make_grid(index_data)
torchvision.utils.make_grid(index_data)
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/mimo/tasks/depth/callbacks.py#L39
https://github.com/antonbaumann/MIMO-Unet/blob/28e974f0320faab8871a821d6a3868a94f429194/mimo/tasks/sen12tp/callbacks.py#L38
